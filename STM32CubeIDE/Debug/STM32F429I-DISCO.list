
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002af10  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002f14  0802b0c0  0802b0c0  0002c0c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002dbe  0802dfd4  0802dfd4  0002efd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000038  08030d94  08030d94  00031d94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000018e  08030dcc  08030dcc  00031dcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0001d080  08030f5c  08030f5c  00031f5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0804dfdc  0804dfdc  0004f380  2**0
                  CONTENTS
  8 .ARM          00000008  0804dfdc  0804dfdc  0004efdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0804dfe4  0804dfe4  0004f380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0804dfe4  0804dfe4  0004efe4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0804dff8  0804dff8  0004eff8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  0804e000  0004f000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000180  0804e164  0004f180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000280  0804e264  0004f280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          00014920  20000380  0804e364  0004f380  2**2
                  ALLOC
 16 ._user_heap_stack 00001400  20014ca0  0804e364  0004fca0  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  0004f380  2**0
                  CONTENTS, READONLY
 18 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00050000  2**2
                  ALLOC
 19 .debug_line   0007ddb4  00000000  00000000  0004f3b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000057  00000000  00000000  000cd164  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_info   001d2ad8  00000000  00000000  000cd1bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_abbrev 00026849  00000000  00000000  0029fc93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_aranges 00004320  00000000  00000000  002c64e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    0011e799  00000000  00000000  002ca800  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_rnglists 000065a2  00000000  00000000  003e8f99  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 00029c3b  00000000  00000000  003ef53b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  00038320  00000000  00000000  00419176  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  00451496  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000b950  00000000  00000000  00451558  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000380 	.word	0x20000380
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802b0a8 	.word	0x0802b0a8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000384 	.word	0x20000384
 80001ec:	0802b0a8 	.word	0x0802b0a8

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	@ 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2f>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b80:	bf24      	itt	cs
 8000b82:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b86:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b8a:	d90d      	bls.n	8000ba8 <__aeabi_d2f+0x30>
 8000b8c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b90:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b94:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b98:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b9c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ba0:	bf08      	it	eq
 8000ba2:	f020 0001 	biceq.w	r0, r0, #1
 8000ba6:	4770      	bx	lr
 8000ba8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bac:	d121      	bne.n	8000bf2 <__aeabi_d2f+0x7a>
 8000bae:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000bb2:	bfbc      	itt	lt
 8000bb4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bb8:	4770      	bxlt	lr
 8000bba:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bbe:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bc2:	f1c2 0218 	rsb	r2, r2, #24
 8000bc6:	f1c2 0c20 	rsb	ip, r2, #32
 8000bca:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bce:	fa20 f002 	lsr.w	r0, r0, r2
 8000bd2:	bf18      	it	ne
 8000bd4:	f040 0001 	orrne.w	r0, r0, #1
 8000bd8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bdc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000be0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000be4:	ea40 000c 	orr.w	r0, r0, ip
 8000be8:	fa23 f302 	lsr.w	r3, r3, r2
 8000bec:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bf0:	e7cc      	b.n	8000b8c <__aeabi_d2f+0x14>
 8000bf2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bf6:	d107      	bne.n	8000c08 <__aeabi_d2f+0x90>
 8000bf8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bfc:	bf1e      	ittt	ne
 8000bfe:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c02:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c06:	4770      	bxne	lr
 8000c08:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c0c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c10:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c14:	4770      	bx	lr
 8000c16:	bf00      	nop

08000c18 <__aeabi_ldivmod>:
 8000c18:	b97b      	cbnz	r3, 8000c3a <__aeabi_ldivmod+0x22>
 8000c1a:	b972      	cbnz	r2, 8000c3a <__aeabi_ldivmod+0x22>
 8000c1c:	2900      	cmp	r1, #0
 8000c1e:	bfbe      	ittt	lt
 8000c20:	2000      	movlt	r0, #0
 8000c22:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8000c26:	e006      	blt.n	8000c36 <__aeabi_ldivmod+0x1e>
 8000c28:	bf08      	it	eq
 8000c2a:	2800      	cmpeq	r0, #0
 8000c2c:	bf1c      	itt	ne
 8000c2e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 8000c32:	f04f 30ff 	movne.w	r0, #4294967295
 8000c36:	f000 b9d3 	b.w	8000fe0 <__aeabi_idiv0>
 8000c3a:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c3e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c42:	2900      	cmp	r1, #0
 8000c44:	db09      	blt.n	8000c5a <__aeabi_ldivmod+0x42>
 8000c46:	2b00      	cmp	r3, #0
 8000c48:	db1a      	blt.n	8000c80 <__aeabi_ldivmod+0x68>
 8000c4a:	f000 f84d 	bl	8000ce8 <__udivmoddi4>
 8000c4e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c52:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c56:	b004      	add	sp, #16
 8000c58:	4770      	bx	lr
 8000c5a:	4240      	negs	r0, r0
 8000c5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c60:	2b00      	cmp	r3, #0
 8000c62:	db1b      	blt.n	8000c9c <__aeabi_ldivmod+0x84>
 8000c64:	f000 f840 	bl	8000ce8 <__udivmoddi4>
 8000c68:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c6c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c70:	b004      	add	sp, #16
 8000c72:	4240      	negs	r0, r0
 8000c74:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c78:	4252      	negs	r2, r2
 8000c7a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c7e:	4770      	bx	lr
 8000c80:	4252      	negs	r2, r2
 8000c82:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c86:	f000 f82f 	bl	8000ce8 <__udivmoddi4>
 8000c8a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c8e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c92:	b004      	add	sp, #16
 8000c94:	4240      	negs	r0, r0
 8000c96:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c9a:	4770      	bx	lr
 8000c9c:	4252      	negs	r2, r2
 8000c9e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000ca2:	f000 f821 	bl	8000ce8 <__udivmoddi4>
 8000ca6:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000caa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cae:	b004      	add	sp, #16
 8000cb0:	4252      	negs	r2, r2
 8000cb2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000cb6:	4770      	bx	lr

08000cb8 <__aeabi_uldivmod>:
 8000cb8:	b953      	cbnz	r3, 8000cd0 <__aeabi_uldivmod+0x18>
 8000cba:	b94a      	cbnz	r2, 8000cd0 <__aeabi_uldivmod+0x18>
 8000cbc:	2900      	cmp	r1, #0
 8000cbe:	bf08      	it	eq
 8000cc0:	2800      	cmpeq	r0, #0
 8000cc2:	bf1c      	itt	ne
 8000cc4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cc8:	f04f 30ff 	movne.w	r0, #4294967295
 8000ccc:	f000 b988 	b.w	8000fe0 <__aeabi_idiv0>
 8000cd0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cd4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cd8:	f000 f806 	bl	8000ce8 <__udivmoddi4>
 8000cdc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000ce0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000ce4:	b004      	add	sp, #16
 8000ce6:	4770      	bx	lr

08000ce8 <__udivmoddi4>:
 8000ce8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cec:	9d08      	ldr	r5, [sp, #32]
 8000cee:	468e      	mov	lr, r1
 8000cf0:	4604      	mov	r4, r0
 8000cf2:	4688      	mov	r8, r1
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	d14a      	bne.n	8000d8e <__udivmoddi4+0xa6>
 8000cf8:	428a      	cmp	r2, r1
 8000cfa:	4617      	mov	r7, r2
 8000cfc:	d962      	bls.n	8000dc4 <__udivmoddi4+0xdc>
 8000cfe:	fab2 f682 	clz	r6, r2
 8000d02:	b14e      	cbz	r6, 8000d18 <__udivmoddi4+0x30>
 8000d04:	f1c6 0320 	rsb	r3, r6, #32
 8000d08:	fa01 f806 	lsl.w	r8, r1, r6
 8000d0c:	fa20 f303 	lsr.w	r3, r0, r3
 8000d10:	40b7      	lsls	r7, r6
 8000d12:	ea43 0808 	orr.w	r8, r3, r8
 8000d16:	40b4      	lsls	r4, r6
 8000d18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d1c:	fa1f fc87 	uxth.w	ip, r7
 8000d20:	fbb8 f1fe 	udiv	r1, r8, lr
 8000d24:	0c23      	lsrs	r3, r4, #16
 8000d26:	fb0e 8811 	mls	r8, lr, r1, r8
 8000d2a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d2e:	fb01 f20c 	mul.w	r2, r1, ip
 8000d32:	429a      	cmp	r2, r3
 8000d34:	d909      	bls.n	8000d4a <__udivmoddi4+0x62>
 8000d36:	18fb      	adds	r3, r7, r3
 8000d38:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d3c:	f080 80ea 	bcs.w	8000f14 <__udivmoddi4+0x22c>
 8000d40:	429a      	cmp	r2, r3
 8000d42:	f240 80e7 	bls.w	8000f14 <__udivmoddi4+0x22c>
 8000d46:	3902      	subs	r1, #2
 8000d48:	443b      	add	r3, r7
 8000d4a:	1a9a      	subs	r2, r3, r2
 8000d4c:	b2a3      	uxth	r3, r4
 8000d4e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d52:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d56:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d5a:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d5e:	459c      	cmp	ip, r3
 8000d60:	d909      	bls.n	8000d76 <__udivmoddi4+0x8e>
 8000d62:	18fb      	adds	r3, r7, r3
 8000d64:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d68:	f080 80d6 	bcs.w	8000f18 <__udivmoddi4+0x230>
 8000d6c:	459c      	cmp	ip, r3
 8000d6e:	f240 80d3 	bls.w	8000f18 <__udivmoddi4+0x230>
 8000d72:	443b      	add	r3, r7
 8000d74:	3802      	subs	r0, #2
 8000d76:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d7a:	eba3 030c 	sub.w	r3, r3, ip
 8000d7e:	2100      	movs	r1, #0
 8000d80:	b11d      	cbz	r5, 8000d8a <__udivmoddi4+0xa2>
 8000d82:	40f3      	lsrs	r3, r6
 8000d84:	2200      	movs	r2, #0
 8000d86:	e9c5 3200 	strd	r3, r2, [r5]
 8000d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d8e:	428b      	cmp	r3, r1
 8000d90:	d905      	bls.n	8000d9e <__udivmoddi4+0xb6>
 8000d92:	b10d      	cbz	r5, 8000d98 <__udivmoddi4+0xb0>
 8000d94:	e9c5 0100 	strd	r0, r1, [r5]
 8000d98:	2100      	movs	r1, #0
 8000d9a:	4608      	mov	r0, r1
 8000d9c:	e7f5      	b.n	8000d8a <__udivmoddi4+0xa2>
 8000d9e:	fab3 f183 	clz	r1, r3
 8000da2:	2900      	cmp	r1, #0
 8000da4:	d146      	bne.n	8000e34 <__udivmoddi4+0x14c>
 8000da6:	4573      	cmp	r3, lr
 8000da8:	d302      	bcc.n	8000db0 <__udivmoddi4+0xc8>
 8000daa:	4282      	cmp	r2, r0
 8000dac:	f200 8105 	bhi.w	8000fba <__udivmoddi4+0x2d2>
 8000db0:	1a84      	subs	r4, r0, r2
 8000db2:	eb6e 0203 	sbc.w	r2, lr, r3
 8000db6:	2001      	movs	r0, #1
 8000db8:	4690      	mov	r8, r2
 8000dba:	2d00      	cmp	r5, #0
 8000dbc:	d0e5      	beq.n	8000d8a <__udivmoddi4+0xa2>
 8000dbe:	e9c5 4800 	strd	r4, r8, [r5]
 8000dc2:	e7e2      	b.n	8000d8a <__udivmoddi4+0xa2>
 8000dc4:	2a00      	cmp	r2, #0
 8000dc6:	f000 8090 	beq.w	8000eea <__udivmoddi4+0x202>
 8000dca:	fab2 f682 	clz	r6, r2
 8000dce:	2e00      	cmp	r6, #0
 8000dd0:	f040 80a4 	bne.w	8000f1c <__udivmoddi4+0x234>
 8000dd4:	1a8a      	subs	r2, r1, r2
 8000dd6:	0c03      	lsrs	r3, r0, #16
 8000dd8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000ddc:	b280      	uxth	r0, r0
 8000dde:	b2bc      	uxth	r4, r7
 8000de0:	2101      	movs	r1, #1
 8000de2:	fbb2 fcfe 	udiv	ip, r2, lr
 8000de6:	fb0e 221c 	mls	r2, lr, ip, r2
 8000dea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000dee:	fb04 f20c 	mul.w	r2, r4, ip
 8000df2:	429a      	cmp	r2, r3
 8000df4:	d907      	bls.n	8000e06 <__udivmoddi4+0x11e>
 8000df6:	18fb      	adds	r3, r7, r3
 8000df8:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000dfc:	d202      	bcs.n	8000e04 <__udivmoddi4+0x11c>
 8000dfe:	429a      	cmp	r2, r3
 8000e00:	f200 80e0 	bhi.w	8000fc4 <__udivmoddi4+0x2dc>
 8000e04:	46c4      	mov	ip, r8
 8000e06:	1a9b      	subs	r3, r3, r2
 8000e08:	fbb3 f2fe 	udiv	r2, r3, lr
 8000e0c:	fb0e 3312 	mls	r3, lr, r2, r3
 8000e10:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000e14:	fb02 f404 	mul.w	r4, r2, r4
 8000e18:	429c      	cmp	r4, r3
 8000e1a:	d907      	bls.n	8000e2c <__udivmoddi4+0x144>
 8000e1c:	18fb      	adds	r3, r7, r3
 8000e1e:	f102 30ff 	add.w	r0, r2, #4294967295
 8000e22:	d202      	bcs.n	8000e2a <__udivmoddi4+0x142>
 8000e24:	429c      	cmp	r4, r3
 8000e26:	f200 80ca 	bhi.w	8000fbe <__udivmoddi4+0x2d6>
 8000e2a:	4602      	mov	r2, r0
 8000e2c:	1b1b      	subs	r3, r3, r4
 8000e2e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e32:	e7a5      	b.n	8000d80 <__udivmoddi4+0x98>
 8000e34:	f1c1 0620 	rsb	r6, r1, #32
 8000e38:	408b      	lsls	r3, r1
 8000e3a:	fa22 f706 	lsr.w	r7, r2, r6
 8000e3e:	431f      	orrs	r7, r3
 8000e40:	fa0e f401 	lsl.w	r4, lr, r1
 8000e44:	fa20 f306 	lsr.w	r3, r0, r6
 8000e48:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e4c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e50:	4323      	orrs	r3, r4
 8000e52:	fa00 f801 	lsl.w	r8, r0, r1
 8000e56:	fa1f fc87 	uxth.w	ip, r7
 8000e5a:	fbbe f0f9 	udiv	r0, lr, r9
 8000e5e:	0c1c      	lsrs	r4, r3, #16
 8000e60:	fb09 ee10 	mls	lr, r9, r0, lr
 8000e64:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000e68:	fb00 fe0c 	mul.w	lr, r0, ip
 8000e6c:	45a6      	cmp	lr, r4
 8000e6e:	fa02 f201 	lsl.w	r2, r2, r1
 8000e72:	d909      	bls.n	8000e88 <__udivmoddi4+0x1a0>
 8000e74:	193c      	adds	r4, r7, r4
 8000e76:	f100 3aff 	add.w	sl, r0, #4294967295
 8000e7a:	f080 809c 	bcs.w	8000fb6 <__udivmoddi4+0x2ce>
 8000e7e:	45a6      	cmp	lr, r4
 8000e80:	f240 8099 	bls.w	8000fb6 <__udivmoddi4+0x2ce>
 8000e84:	3802      	subs	r0, #2
 8000e86:	443c      	add	r4, r7
 8000e88:	eba4 040e 	sub.w	r4, r4, lr
 8000e8c:	fa1f fe83 	uxth.w	lr, r3
 8000e90:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e94:	fb09 4413 	mls	r4, r9, r3, r4
 8000e98:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000e9c:	fb03 fc0c 	mul.w	ip, r3, ip
 8000ea0:	45a4      	cmp	ip, r4
 8000ea2:	d908      	bls.n	8000eb6 <__udivmoddi4+0x1ce>
 8000ea4:	193c      	adds	r4, r7, r4
 8000ea6:	f103 3eff 	add.w	lr, r3, #4294967295
 8000eaa:	f080 8082 	bcs.w	8000fb2 <__udivmoddi4+0x2ca>
 8000eae:	45a4      	cmp	ip, r4
 8000eb0:	d97f      	bls.n	8000fb2 <__udivmoddi4+0x2ca>
 8000eb2:	3b02      	subs	r3, #2
 8000eb4:	443c      	add	r4, r7
 8000eb6:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000eba:	eba4 040c 	sub.w	r4, r4, ip
 8000ebe:	fba0 ec02 	umull	lr, ip, r0, r2
 8000ec2:	4564      	cmp	r4, ip
 8000ec4:	4673      	mov	r3, lr
 8000ec6:	46e1      	mov	r9, ip
 8000ec8:	d362      	bcc.n	8000f90 <__udivmoddi4+0x2a8>
 8000eca:	d05f      	beq.n	8000f8c <__udivmoddi4+0x2a4>
 8000ecc:	b15d      	cbz	r5, 8000ee6 <__udivmoddi4+0x1fe>
 8000ece:	ebb8 0203 	subs.w	r2, r8, r3
 8000ed2:	eb64 0409 	sbc.w	r4, r4, r9
 8000ed6:	fa04 f606 	lsl.w	r6, r4, r6
 8000eda:	fa22 f301 	lsr.w	r3, r2, r1
 8000ede:	431e      	orrs	r6, r3
 8000ee0:	40cc      	lsrs	r4, r1
 8000ee2:	e9c5 6400 	strd	r6, r4, [r5]
 8000ee6:	2100      	movs	r1, #0
 8000ee8:	e74f      	b.n	8000d8a <__udivmoddi4+0xa2>
 8000eea:	fbb1 fcf2 	udiv	ip, r1, r2
 8000eee:	0c01      	lsrs	r1, r0, #16
 8000ef0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000ef4:	b280      	uxth	r0, r0
 8000ef6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000efa:	463b      	mov	r3, r7
 8000efc:	4638      	mov	r0, r7
 8000efe:	463c      	mov	r4, r7
 8000f00:	46b8      	mov	r8, r7
 8000f02:	46be      	mov	lr, r7
 8000f04:	2620      	movs	r6, #32
 8000f06:	fbb1 f1f7 	udiv	r1, r1, r7
 8000f0a:	eba2 0208 	sub.w	r2, r2, r8
 8000f0e:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000f12:	e766      	b.n	8000de2 <__udivmoddi4+0xfa>
 8000f14:	4601      	mov	r1, r0
 8000f16:	e718      	b.n	8000d4a <__udivmoddi4+0x62>
 8000f18:	4610      	mov	r0, r2
 8000f1a:	e72c      	b.n	8000d76 <__udivmoddi4+0x8e>
 8000f1c:	f1c6 0220 	rsb	r2, r6, #32
 8000f20:	fa2e f302 	lsr.w	r3, lr, r2
 8000f24:	40b7      	lsls	r7, r6
 8000f26:	40b1      	lsls	r1, r6
 8000f28:	fa20 f202 	lsr.w	r2, r0, r2
 8000f2c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f30:	430a      	orrs	r2, r1
 8000f32:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f36:	b2bc      	uxth	r4, r7
 8000f38:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f3c:	0c11      	lsrs	r1, r2, #16
 8000f3e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f42:	fb08 f904 	mul.w	r9, r8, r4
 8000f46:	40b0      	lsls	r0, r6
 8000f48:	4589      	cmp	r9, r1
 8000f4a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f4e:	b280      	uxth	r0, r0
 8000f50:	d93e      	bls.n	8000fd0 <__udivmoddi4+0x2e8>
 8000f52:	1879      	adds	r1, r7, r1
 8000f54:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f58:	d201      	bcs.n	8000f5e <__udivmoddi4+0x276>
 8000f5a:	4589      	cmp	r9, r1
 8000f5c:	d81f      	bhi.n	8000f9e <__udivmoddi4+0x2b6>
 8000f5e:	eba1 0109 	sub.w	r1, r1, r9
 8000f62:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f66:	fb09 f804 	mul.w	r8, r9, r4
 8000f6a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f6e:	b292      	uxth	r2, r2
 8000f70:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f74:	4542      	cmp	r2, r8
 8000f76:	d229      	bcs.n	8000fcc <__udivmoddi4+0x2e4>
 8000f78:	18ba      	adds	r2, r7, r2
 8000f7a:	f109 31ff 	add.w	r1, r9, #4294967295
 8000f7e:	d2c4      	bcs.n	8000f0a <__udivmoddi4+0x222>
 8000f80:	4542      	cmp	r2, r8
 8000f82:	d2c2      	bcs.n	8000f0a <__udivmoddi4+0x222>
 8000f84:	f1a9 0102 	sub.w	r1, r9, #2
 8000f88:	443a      	add	r2, r7
 8000f8a:	e7be      	b.n	8000f0a <__udivmoddi4+0x222>
 8000f8c:	45f0      	cmp	r8, lr
 8000f8e:	d29d      	bcs.n	8000ecc <__udivmoddi4+0x1e4>
 8000f90:	ebbe 0302 	subs.w	r3, lr, r2
 8000f94:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000f98:	3801      	subs	r0, #1
 8000f9a:	46e1      	mov	r9, ip
 8000f9c:	e796      	b.n	8000ecc <__udivmoddi4+0x1e4>
 8000f9e:	eba7 0909 	sub.w	r9, r7, r9
 8000fa2:	4449      	add	r1, r9
 8000fa4:	f1a8 0c02 	sub.w	ip, r8, #2
 8000fa8:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fac:	fb09 f804 	mul.w	r8, r9, r4
 8000fb0:	e7db      	b.n	8000f6a <__udivmoddi4+0x282>
 8000fb2:	4673      	mov	r3, lr
 8000fb4:	e77f      	b.n	8000eb6 <__udivmoddi4+0x1ce>
 8000fb6:	4650      	mov	r0, sl
 8000fb8:	e766      	b.n	8000e88 <__udivmoddi4+0x1a0>
 8000fba:	4608      	mov	r0, r1
 8000fbc:	e6fd      	b.n	8000dba <__udivmoddi4+0xd2>
 8000fbe:	443b      	add	r3, r7
 8000fc0:	3a02      	subs	r2, #2
 8000fc2:	e733      	b.n	8000e2c <__udivmoddi4+0x144>
 8000fc4:	f1ac 0c02 	sub.w	ip, ip, #2
 8000fc8:	443b      	add	r3, r7
 8000fca:	e71c      	b.n	8000e06 <__udivmoddi4+0x11e>
 8000fcc:	4649      	mov	r1, r9
 8000fce:	e79c      	b.n	8000f0a <__udivmoddi4+0x222>
 8000fd0:	eba1 0109 	sub.w	r1, r1, r9
 8000fd4:	46c4      	mov	ip, r8
 8000fd6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fda:	fb09 f804 	mul.w	r8, r9, r4
 8000fde:	e7c4      	b.n	8000f6a <__udivmoddi4+0x282>

08000fe0 <__aeabi_idiv0>:
 8000fe0:	4770      	bx	lr
 8000fe2:	bf00      	nop

08000fe4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000fe4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800101c <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000fe8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000fea:	e003      	b.n	8000ff4 <LoopCopyDataInit>

08000fec <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000fec:	4b0c      	ldr	r3, [pc, #48]	@ (8001020 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000fee:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000ff0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000ff2:	3104      	adds	r1, #4

08000ff4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000ff4:	480b      	ldr	r0, [pc, #44]	@ (8001024 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000ff6:	4b0c      	ldr	r3, [pc, #48]	@ (8001028 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ff8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000ffa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000ffc:	d3f6      	bcc.n	8000fec <CopyDataInit>
  ldr  r2, =_sbss
 8000ffe:	4a0b      	ldr	r2, [pc, #44]	@ (800102c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001000:	e002      	b.n	8001008 <LoopFillZerobss>

08001002 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001002:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001004:	f842 3b04 	str.w	r3, [r2], #4

08001008 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001008:	4b09      	ldr	r3, [pc, #36]	@ (8001030 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800100a:	429a      	cmp	r2, r3
  bcc  FillZerobss
 800100c:	d3f9      	bcc.n	8001002 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800100e:	f009 f8d1 	bl	800a1b4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001012:	f029 f933 	bl	802a27c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001016:	f001 f987 	bl	8002328 <main>
  bx  lr    
 800101a:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 800101c:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8001020:	0804e000 	.word	0x0804e000
  ldr  r0, =_sdata
 8001024:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001028:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 800102c:	20000380 	.word	0x20000380
  ldr  r3, = _ebss
 8001030:	20014ca0 	.word	0x20014ca0

08001034 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001034:	e7fe      	b.n	8001034 <ADC_IRQHandler>

08001036 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001036:	4770      	bx	lr

08001038 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001038:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800103a:	f000 fda7 	bl	8001b8c <touchgfx_components_init>
    touchgfx_init();
}
 800103e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8001042:	f000 bd29 	b.w	8001a98 <touchgfx_init>

08001046 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8001046:	f000 bda3 	b.w	8001b90 <touchgfx_taskEntry>

0800104a <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800104a:	4770      	bx	lr

0800104c <_ZN20STM32TouchControllerD0Ev>:
 800104c:	b510      	push	{r4, lr}
 800104e:	2104      	movs	r1, #4
 8001050:	4604      	mov	r4, r0
 8001052:	f027 fdf1 	bl	8028c38 <_ZdlPvj>
 8001056:	4620      	mov	r0, r4
 8001058:	bd10      	pop	{r4, pc}
	...

0800105c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 800105c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800105e:	4b0c      	ldr	r3, [pc, #48]	@ (8001090 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001060:	4c0c      	ldr	r4, [pc, #48]	@ (8001094 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001062:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001064:	4b0c      	ldr	r3, [pc, #48]	@ (8001098 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001066:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8001068:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800106a:	6863      	ldr	r3, [r4, #4]
 800106c:	4798      	blx	r3
 800106e:	f640 0311 	movw	r3, #2065	@ 0x811
 8001072:	4298      	cmp	r0, r3
 8001074:	d10a      	bne.n	800108c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001076:	4d09      	ldr	r5, [pc, #36]	@ (800109c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001078:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800107a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800107c:	2082      	movs	r0, #130	@ 0x82
 800107e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001080:	682b      	ldr	r3, [r5, #0]
 8001082:	2082      	movs	r0, #130	@ 0x82
 8001084:	68db      	ldr	r3, [r3, #12]
 8001086:	4798      	blx	r3
 8001088:	2000      	movs	r0, #0
    }

    return ret;
}
 800108a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800108c:	2001      	movs	r0, #1
 800108e:	e7fc      	b.n	800108a <_Z11BSP_TS_Inittt+0x2e>
 8001090:	200003a6 	.word	0x200003a6
 8001094:	2000004c 	.word	0x2000004c
 8001098:	200003a4 	.word	0x200003a4
 800109c:	200003a8 	.word	0x200003a8

080010a0 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 80010a0:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80010a4:	20f0      	movs	r0, #240	@ 0xf0
 80010a6:	f7ff bfd9 	b.w	800105c <_Z11BSP_TS_Inittt>
	...

080010ac <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 80010ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80010ae:	4d2f      	ldr	r5, [pc, #188]	@ (800116c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80010b0:	682b      	ldr	r3, [r5, #0]
{
 80010b2:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80010b4:	691b      	ldr	r3, [r3, #16]
 80010b6:	2082      	movs	r0, #130	@ 0x82
 80010b8:	4798      	blx	r3
 80010ba:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 80010bc:	2800      	cmp	r0, #0
 80010be:	d044      	beq.n	800114a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 80010c0:	682b      	ldr	r3, [r5, #0]
 80010c2:	f10d 0206 	add.w	r2, sp, #6
 80010c6:	695b      	ldr	r3, [r3, #20]
 80010c8:	a901      	add	r1, sp, #4
 80010ca:	2082      	movs	r0, #130	@ 0x82
 80010cc:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 80010ce:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80010d2:	f5a2 72b4 	sub.w	r2, r2, #360	@ 0x168
 80010d6:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80010d8:	2a0a      	cmp	r2, #10
 80010da:	d938      	bls.n	800114e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 80010dc:	230b      	movs	r3, #11
 80010de:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80010e2:	4b23      	ldr	r3, [pc, #140]	@ (8001170 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
 80010e4:	881b      	ldrh	r3, [r3, #0]
 80010e6:	429a      	cmp	r2, r3
 80010e8:	d901      	bls.n	80010ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x42>
        {
            yr = TsYBoundary - 1;
 80010ea:	3b01      	subs	r3, #1
 80010ec:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80010ee:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80010f2:	4820      	ldr	r0, [pc, #128]	@ (8001174 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
 80010f4:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 80010f8:	428b      	cmp	r3, r1
 80010fa:	d82a      	bhi.n	8001152 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80010fc:	f5c3 6371 	rsb	r3, r3, #3856	@ 0xf10
 8001100:	330e      	adds	r3, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001102:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 8001104:	b29b      	uxth	r3, r3
        xr = x / 15;
 8001106:	250f      	movs	r5, #15
 8001108:	fbb3 f3f5 	udiv	r3, r3, r5
        else if (xr > TsXBoundary)
 800110c:	4d1a      	ldr	r5, [pc, #104]	@ (8001178 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>)
 800110e:	882d      	ldrh	r5, [r5, #0]
 8001110:	42ab      	cmp	r3, r5
            xr = TsXBoundary - 1;
 8001112:	bf84      	itt	hi
 8001114:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8001118:	b2ab      	uxthhi	r3, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 800111a:	428b      	cmp	r3, r1
 800111c:	461d      	mov	r5, r3
 800111e:	b28e      	uxth	r6, r1
 8001120:	d920      	bls.n	8001164 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>
 8001122:	1b9b      	subs	r3, r3, r6
 8001124:	b299      	uxth	r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001126:	4e15      	ldr	r6, [pc, #84]	@ (800117c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001128:	6837      	ldr	r7, [r6, #0]
 800112a:	b2bb      	uxth	r3, r7
 800112c:	42ba      	cmp	r2, r7
 800112e:	bf8c      	ite	hi
 8001130:	1ad3      	subhi	r3, r2, r3
 8001132:	1a9b      	subls	r3, r3, r2
 8001134:	b29b      	uxth	r3, r3

        if (xDiff + yDiff > 5)
 8001136:	4419      	add	r1, r3
 8001138:	2905      	cmp	r1, #5
        {
            _x = x;
 800113a:	bfc8      	it	gt
 800113c:	6005      	strgt	r5, [r0, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 800113e:	6803      	ldr	r3, [r0, #0]
            _y = y;
 8001140:	bfc8      	it	gt
 8001142:	6032      	strgt	r2, [r6, #0]
        TsState->X = _x;
 8001144:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001146:	6833      	ldr	r3, [r6, #0]
 8001148:	80a3      	strh	r3, [r4, #4]
    }
}
 800114a:	b003      	add	sp, #12
 800114c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 800114e:	2200      	movs	r2, #0
 8001150:	e7cd      	b.n	80010ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x42>
            x = 3800 - x;
 8001152:	f5c3 636d 	rsb	r3, r3, #3792	@ 0xed0
 8001156:	3308      	adds	r3, #8
 8001158:	b29b      	uxth	r3, r3
        if (xr <= 0)
 800115a:	2b0e      	cmp	r3, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 800115c:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 800115e:	d8d2      	bhi.n	8001106 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x5a>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001160:	2500      	movs	r5, #0
            xr = 0;
 8001162:	462b      	mov	r3, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001164:	1ac9      	subs	r1, r1, r3
 8001166:	b289      	uxth	r1, r1
 8001168:	e7dd      	b.n	8001126 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
 800116a:	bf00      	nop
 800116c:	200003a8 	.word	0x200003a8
 8001170:	200003a4 	.word	0x200003a4
 8001174:	200003a0 	.word	0x200003a0
 8001178:	200003a6 	.word	0x200003a6
 800117c:	2000039c 	.word	0x2000039c

08001180 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001180:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001182:	4668      	mov	r0, sp
{
 8001184:	460d      	mov	r5, r1
 8001186:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001188:	f7ff ff90 	bl	80010ac <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 800118c:	f8bd 0000 	ldrh.w	r0, [sp]
 8001190:	b140      	cbz	r0, 80011a4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
        x = state.X;
 8001192:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001196:	602b      	str	r3, [r5, #0]
        y = 320-state.Y;
 8001198:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800119c:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 80011a0:	6023      	str	r3, [r4, #0]
        return true;
 80011a2:	2001      	movs	r0, #1
}
 80011a4:	b003      	add	sp, #12
 80011a6:	bd30      	pop	{r4, r5, pc}

080011a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 80011a8:	2803      	cmp	r0, #3
 80011aa:	d821      	bhi.n	80011f0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 80011ac:	e8df f000 	tbb	[pc, r0]
 80011b0:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 80011b4:	4b0f      	ldr	r3, [pc, #60]	@ (80011f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011b6:	681a      	ldr	r2, [r3, #0]
 80011b8:	fab2 f282 	clz	r2, r2
 80011bc:	0952      	lsrs	r2, r2, #5
 80011be:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80011c0:	480d      	ldr	r0, [pc, #52]	@ (80011f8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80011c2:	f009 bcbf 	b.w	800ab44 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80011c6:	4b0b      	ldr	r3, [pc, #44]	@ (80011f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011c8:	685a      	ldr	r2, [r3, #4]
 80011ca:	fab2 f282 	clz	r2, r2
 80011ce:	0952      	lsrs	r2, r2, #5
 80011d0:	2108      	movs	r1, #8
 80011d2:	e7f5      	b.n	80011c0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80011d4:	4b07      	ldr	r3, [pc, #28]	@ (80011f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011d6:	689a      	ldr	r2, [r3, #8]
 80011d8:	fab2 f282 	clz	r2, r2
 80011dc:	0952      	lsrs	r2, r2, #5
 80011de:	2110      	movs	r1, #16
 80011e0:	e7ee      	b.n	80011c0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80011e2:	4b04      	ldr	r3, [pc, #16]	@ (80011f4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011e4:	68da      	ldr	r2, [r3, #12]
 80011e6:	fab2 f282 	clz	r2, r2
 80011ea:	0952      	lsrs	r2, r2, #5
 80011ec:	2120      	movs	r1, #32
 80011ee:	e7e7      	b.n	80011c0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80011f0:	4770      	bx	lr
 80011f2:	bf00      	nop
 80011f4:	200003ac 	.word	0x200003ac
 80011f8:	40021000 	.word	0x40021000

080011fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80011fc:	2803      	cmp	r0, #3
 80011fe:	d821      	bhi.n	8001244 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8001200:	e8df f000 	tbb	[pc, r0]
 8001204:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001208:	4b0f      	ldr	r3, [pc, #60]	@ (8001248 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800120a:	681a      	ldr	r2, [r3, #0]
 800120c:	3a00      	subs	r2, #0
 800120e:	bf18      	it	ne
 8001210:	2201      	movne	r2, #1
 8001212:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001214:	480d      	ldr	r0, [pc, #52]	@ (800124c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001216:	f009 bc95 	b.w	800ab44 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 800121a:	4b0b      	ldr	r3, [pc, #44]	@ (8001248 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800121c:	685a      	ldr	r2, [r3, #4]
 800121e:	3a00      	subs	r2, #0
 8001220:	bf18      	it	ne
 8001222:	2201      	movne	r2, #1
 8001224:	2108      	movs	r1, #8
 8001226:	e7f5      	b.n	8001214 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001228:	4b07      	ldr	r3, [pc, #28]	@ (8001248 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800122a:	689a      	ldr	r2, [r3, #8]
 800122c:	3a00      	subs	r2, #0
 800122e:	bf18      	it	ne
 8001230:	2201      	movne	r2, #1
 8001232:	2110      	movs	r1, #16
 8001234:	e7ee      	b.n	8001214 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001236:	4b04      	ldr	r3, [pc, #16]	@ (8001248 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001238:	68da      	ldr	r2, [r3, #12]
 800123a:	3a00      	subs	r2, #0
 800123c:	bf18      	it	ne
 800123e:	2201      	movne	r2, #1
 8001240:	2120      	movs	r1, #32
 8001242:	e7e7      	b.n	8001214 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8001244:	4770      	bx	lr
 8001246:	bf00      	nop
 8001248:	200003ac 	.word	0x200003ac
 800124c:	40021000 	.word	0x40021000

08001250 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001250:	2803      	cmp	r0, #3
 8001252:	d80d      	bhi.n	8001270 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8001254:	e8df f000 	tbb	[pc, r0]
 8001258:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800125c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800125e:	4805      	ldr	r0, [pc, #20]	@ (8001274 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8001260:	f009 bc75 	b.w	800ab4e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001264:	2108      	movs	r1, #8
 8001266:	e7fa      	b.n	800125e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001268:	2110      	movs	r1, #16
 800126a:	e7f8      	b.n	800125e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800126c:	2120      	movs	r1, #32
 800126e:	e7f6      	b.n	800125e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8001270:	4770      	bx	lr
 8001272:	bf00      	nop
 8001274:	40021000 	.word	0x40021000

08001278 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001278:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800127a:	2803      	cmp	r0, #3
 800127c:	d811      	bhi.n	80012a2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800127e:	e8df f000 	tbb	[pc, r0]
 8001282:	0a02      	.short	0x0a02
 8001284:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001286:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001288:	4807      	ldr	r0, [pc, #28]	@ (80012a8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800128a:	f009 fc55 	bl	800ab38 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800128e:	1e43      	subs	r3, r0, #1
 8001290:	4258      	negs	r0, r3
 8001292:	4158      	adcs	r0, r3
 8001294:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001296:	2108      	movs	r1, #8
 8001298:	e7f6      	b.n	8001288 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800129a:	2110      	movs	r1, #16
 800129c:	e7f4      	b.n	8001288 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800129e:	2120      	movs	r1, #32
 80012a0:	e7f2      	b.n	8001288 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 80012a2:	2000      	movs	r0, #0
 80012a4:	e7f3      	b.n	800128e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 80012a6:	bf00      	nop
 80012a8:	40021000 	.word	0x40021000

080012ac <_ZN8touchgfx4GPIO4initEv>:
{
 80012ac:	b570      	push	{r4, r5, r6, lr}
 80012ae:	4d08      	ldr	r5, [pc, #32]	@ (80012d0 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80012b0:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80012b2:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80012b4:	b2e0      	uxtb	r0, r4
 80012b6:	f7ff ffdf 	bl	8001278 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80012ba:	b118      	cbz	r0, 80012c4 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80012bc:	682b      	ldr	r3, [r5, #0]
 80012be:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80012c0:	bf18      	it	ne
 80012c2:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80012c4:	3401      	adds	r4, #1
 80012c6:	2c05      	cmp	r4, #5
 80012c8:	f105 0504 	add.w	r5, r5, #4
 80012cc:	d1f2      	bne.n	80012b4 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80012ce:	bd70      	pop	{r4, r5, r6, pc}
 80012d0:	200003ac 	.word	0x200003ac

080012d4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80012d4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80012d6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 80012da:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 80012de:	4770      	bx	lr

080012e0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80012e0:	2000      	movs	r0, #0
 80012e2:	4770      	bx	lr

080012e4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80012e4:	4b03      	ldr	r3, [pc, #12]	@ (80012f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80012e6:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80012e8:	3900      	subs	r1, #0
 80012ea:	bf18      	it	ne
 80012ec:	2101      	movne	r1, #1
 80012ee:	7019      	strb	r1, [r3, #0]
    }
 80012f0:	4770      	bx	lr
 80012f2:	bf00      	nop
 80012f4:	20013f5f 	.word	0x20013f5f

080012f8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80012f8:	2000      	movs	r0, #0
 80012fa:	4770      	bx	lr

080012fc <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80012fc:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80012fe:	b10b      	cbz	r3, 8001304 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001300:	4608      	mov	r0, r1
 8001302:	4718      	bx	r3
        }
    }
 8001304:	4770      	bx	lr

08001306 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001306:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800130a:	4770      	bx	lr

0800130c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800130c:	6840      	ldr	r0, [r0, #4]
 800130e:	6803      	ldr	r3, [r0, #0]
 8001310:	699b      	ldr	r3, [r3, #24]
 8001312:	4718      	bx	r3

08001314 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001314:	4770      	bx	lr

08001316 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001316:	4770      	bx	lr

08001318 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001318:	4770      	bx	lr
	...

0800131c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 800131c:	b510      	push	{r4, lr}
 800131e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001320:	f000 fd44 	bl	8001dac <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001324:	6823      	ldr	r3, [r4, #0]
 8001326:	4903      	ldr	r1, [pc, #12]	@ (8001334 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001328:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800132c:	4620      	mov	r0, r4
}
 800132e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001332:	4718      	bx	r3
 8001334:	d0000000 	.word	0xd0000000

08001338 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001338:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800133a:	6803      	ldr	r3, [r0, #0]
{
 800133c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800133e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001342:	4798      	blx	r3
    enableInterrupts();
 8001344:	6823      	ldr	r3, [r4, #0]
 8001346:	4620      	mov	r0, r4
 8001348:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800134a:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800134c:	f000 f8ec 	bl	8001528 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001350:	6823      	ldr	r3, [r4, #0]
 8001352:	4620      	mov	r0, r4
 8001354:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001356:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001358:	2029      	movs	r0, #41	@ 0x29
 800135a:	f001 fa65 	bl	8002828 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800135e:	f000 f8e3 	bl	8001528 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001362:	6823      	ldr	r3, [r4, #0]
 8001364:	4620      	mov	r0, r4
 8001366:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001368:	4798      	blx	r3
    for (;;)
 800136a:	e7f8      	b.n	800135e <_ZN11TouchGFXHAL9taskEntryEv+0x26>

0800136c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800136c:	b510      	push	{r4, lr}
 800136e:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001370:	f00e fee8 	bl	8010144 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001374:	6823      	ldr	r3, [r4, #0]
 8001376:	4620      	mov	r0, r4
 8001378:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 800137c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001380:	4718      	bx	r3

08001382 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001382:	f000 bcf7 	b.w	8001d74 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001386 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001386:	f000 bcfb 	b.w	8001d80 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800138a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800138a:	f000 bd2d 	b.w	8001de8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800138e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800138e:	f000 bccd 	b.w	8001d2c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001392 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001392:	f000 bd3d 	b.w	8001e10 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001396 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001396:	f000 bd45 	b.w	8001e24 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800139a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800139a:	f000 bcd1 	b.w	8001d40 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

0800139e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800139e:	f00e b93d 	b.w	800f61c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080013a2 <_ZN11TouchGFXHALD0Ev>:
 80013a2:	b510      	push	{r4, lr}
 80013a4:	217c      	movs	r1, #124	@ 0x7c
 80013a6:	4604      	mov	r4, r0
 80013a8:	f027 fc46 	bl	8028c38 <_ZdlPvj>
 80013ac:	4620      	mov	r0, r4
 80013ae:	bd10      	pop	{r4, pc}

080013b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80013b0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80013b2:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 80013b6:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 80013ba:	4b0c      	ldr	r3, [pc, #48]	@ (80013ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80013bc:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80013be:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80013c0:	d009      	beq.n	80013d6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80013c2:	b93a      	cbnz	r2, 80013d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013c4:	4a0a      	ldr	r2, [pc, #40]	@ (80013f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80013c6:	490b      	ldr	r1, [pc, #44]	@ (80013f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013c8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80013ca:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80013cc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013ce:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80013d0:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80013d2:	701a      	strb	r2, [r3, #0]
    }
 80013d4:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80013d6:	2a00      	cmp	r2, #0
 80013d8:	d0fc      	beq.n	80013d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013da:	4a05      	ldr	r2, [pc, #20]	@ (80013f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80013dc:	4905      	ldr	r1, [pc, #20]	@ (80013f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013de:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80013e0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80013e2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013e4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80013e6:	2200      	movs	r2, #0
 80013e8:	e7f3      	b.n	80013d2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80013ea:	bf00      	nop
 80013ec:	20013f58 	.word	0x20013f58
 80013f0:	20013f54 	.word	0x20013f54
 80013f4:	20013f56 	.word	0x20013f56

080013f8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80013f8:	b570      	push	{r4, r5, r6, lr}
 80013fa:	460d      	mov	r5, r1
 80013fc:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80013fe:	b935      	cbnz	r5, 800140e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001400:	4b09      	ldr	r3, [pc, #36]	@ (8001428 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001402:	4a0a      	ldr	r2, [pc, #40]	@ (800142c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001404:	480a      	ldr	r0, [pc, #40]	@ (8001430 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001406:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800140a:	f028 fc53 	bl	8029cb4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800140e:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001412:	4b08      	ldr	r3, [pc, #32]	@ (8001434 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001414:	3a00      	subs	r2, #0
 8001416:	bf18      	it	ne
 8001418:	2201      	movne	r2, #1
 800141a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800141c:	6803      	ldr	r3, [r0, #0]
    }
 800141e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001422:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001426:	4718      	bx	r3
 8001428:	0802b138 	.word	0x0802b138
 800142c:	0802b170 	.word	0x0802b170
 8001430:	0802b1be 	.word	0x0802b1be
 8001434:	20013f5e 	.word	0x20013f5e

08001438 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001438:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800143a:	4b09      	ldr	r3, [pc, #36]	@ (8001460 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 800143c:	881b      	ldrh	r3, [r3, #0]
 800143e:	428b      	cmp	r3, r1
 8001440:	d803      	bhi.n	800144a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001442:	4b08      	ldr	r3, [pc, #32]	@ (8001464 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001444:	881b      	ldrh	r3, [r3, #0]
 8001446:	4293      	cmp	r3, r2
 8001448:	d905      	bls.n	8001456 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800144a:	4b07      	ldr	r3, [pc, #28]	@ (8001468 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 800144c:	4a07      	ldr	r2, [pc, #28]	@ (800146c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800144e:	4808      	ldr	r0, [pc, #32]	@ (8001470 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001450:	219e      	movs	r1, #158	@ 0x9e
 8001452:	f028 fc2f 	bl	8029cb4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001456:	4b07      	ldr	r3, [pc, #28]	@ (8001474 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001458:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800145a:	4b07      	ldr	r3, [pc, #28]	@ (8001478 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 800145c:	801a      	strh	r2, [r3, #0]
    }
 800145e:	bd08      	pop	{r3, pc}
 8001460:	20013f54 	.word	0x20013f54
 8001464:	20013f56 	.word	0x20013f56
 8001468:	0802b203 	.word	0x0802b203
 800146c:	0802b266 	.word	0x0802b266
 8001470:	0802b1be 	.word	0x0802b1be
 8001474:	20013f5a 	.word	0x20013f5a
 8001478:	20013f5c 	.word	0x20013f5c

0800147c <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 800147c:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 800147e:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001482:	b118      	cbz	r0, 800148c <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001484:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8001486:	6803      	ldr	r3, [r0, #0]
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	4718      	bx	r3
    }
 800148c:	4770      	bx	lr
	...

08001490 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001490:	2101      	movs	r1, #1
{
 8001492:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001494:	2200      	movs	r2, #0
 8001496:	4608      	mov	r0, r1
 8001498:	f00b fdb6 	bl	800d008 <osSemaphoreNew>
 800149c:	4b0a      	ldr	r3, [pc, #40]	@ (80014c8 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800149e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80014a0:	b928      	cbnz	r0, 80014ae <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80014a2:	4b0a      	ldr	r3, [pc, #40]	@ (80014cc <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80014a4:	4a0a      	ldr	r2, [pc, #40]	@ (80014d0 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80014a6:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80014a8:	480a      	ldr	r0, [pc, #40]	@ (80014d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80014aa:	f028 fc03 	bl	8029cb4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80014ae:	2200      	movs	r2, #0
 80014b0:	2104      	movs	r1, #4
 80014b2:	2001      	movs	r0, #1
 80014b4:	f00b fe47 	bl	800d146 <osMessageQueueNew>
 80014b8:	4b07      	ldr	r3, [pc, #28]	@ (80014d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80014ba:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80014bc:	b918      	cbnz	r0, 80014c6 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80014be:	4b07      	ldr	r3, [pc, #28]	@ (80014dc <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80014c0:	4a03      	ldr	r2, [pc, #12]	@ (80014d0 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80014c2:	212c      	movs	r1, #44	@ 0x2c
 80014c4:	e7f0      	b.n	80014a8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80014c6:	bd08      	pop	{r3, pc}
 80014c8:	200003c0 	.word	0x200003c0
 80014cc:	0802b2a9 	.word	0x0802b2a9
 80014d0:	0802b2f2 	.word	0x0802b2f2
 80014d4:	0802b321 	.word	0x0802b321
 80014d8:	200003bc 	.word	0x200003bc
 80014dc:	0802b35f 	.word	0x0802b35f

080014e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80014e0:	4b02      	ldr	r3, [pc, #8]	@ (80014ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80014e2:	f04f 31ff 	mov.w	r1, #4294967295
 80014e6:	6818      	ldr	r0, [r3, #0]
 80014e8:	f00b bdd8 	b.w	800d09c <osSemaphoreAcquire>
 80014ec:	200003c0 	.word	0x200003c0

080014f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80014f0:	4b01      	ldr	r3, [pc, #4]	@ (80014f8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80014f2:	6818      	ldr	r0, [r3, #0]
 80014f4:	f00b bdfe 	b.w	800d0f4 <osSemaphoreRelease>
 80014f8:	200003c0 	.word	0x200003c0

080014fc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80014fc:	4b02      	ldr	r3, [pc, #8]	@ (8001508 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80014fe:	2100      	movs	r1, #0
 8001500:	6818      	ldr	r0, [r3, #0]
 8001502:	f00b bdcb 	b.w	800d09c <osSemaphoreAcquire>
 8001506:	bf00      	nop
 8001508:	200003c0 	.word	0x200003c0

0800150c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 800150c:	f7ff bff0 	b.w	80014f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001510 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001510:	4803      	ldr	r0, [pc, #12]	@ (8001520 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001512:	4904      	ldr	r1, [pc, #16]	@ (8001524 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001514:	6800      	ldr	r0, [r0, #0]
 8001516:	2300      	movs	r3, #0
 8001518:	461a      	mov	r2, r3
 800151a:	f00b be4f 	b.w	800d1bc <osMessageQueuePut>
 800151e:	bf00      	nop
 8001520:	200003bc 	.word	0x200003bc
 8001524:	20000004 	.word	0x20000004

08001528 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001528:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800152a:	4c08      	ldr	r4, [pc, #32]	@ (800154c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800152c:	2300      	movs	r3, #0
 800152e:	461a      	mov	r2, r3
 8001530:	a901      	add	r1, sp, #4
 8001532:	6820      	ldr	r0, [r4, #0]
 8001534:	f00b fe73 	bl	800d21e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001538:	6820      	ldr	r0, [r4, #0]
 800153a:	f04f 33ff 	mov.w	r3, #4294967295
 800153e:	2200      	movs	r2, #0
 8001540:	a901      	add	r1, sp, #4
 8001542:	f00b fe6c 	bl	800d21e <osMessageQueueGet>
}
 8001546:	b002      	add	sp, #8
 8001548:	bd10      	pop	{r4, pc}
 800154a:	bf00      	nop
 800154c:	200003bc 	.word	0x200003bc

08001550 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001550:	6803      	ldr	r3, [r0, #0]
 8001552:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001554:	4718      	bx	r3

08001556 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001556:	2001      	movs	r0, #1
 8001558:	4770      	bx	lr

0800155a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800155a:	6803      	ldr	r3, [r0, #0]
 800155c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800155e:	4718      	bx	r3

08001560 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8001560:	e7fe      	b.n	8001560 <DMA2D_XferErrorCallback>

08001562 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001562:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8001566:	4770      	bx	lr

08001568 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001568:	4b05      	ldr	r3, [pc, #20]	@ (8001580 <_ZN8STM32DMAD1Ev+0x18>)
 800156a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800156c:	4b05      	ldr	r3, [pc, #20]	@ (8001584 <_ZN8STM32DMAD1Ev+0x1c>)
 800156e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001572:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001576:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800157a:	f3bf 8f6f 	isb	sy
}
 800157e:	4770      	bx	lr
 8001580:	0802c530 	.word	0x0802c530
 8001584:	e000e100 	.word	0xe000e100

08001588 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001588:	b510      	push	{r4, lr}
 800158a:	4604      	mov	r4, r0
}
 800158c:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001590:	f7ff ffea 	bl	8001568 <_ZN8STM32DMAD1Ev>
 8001594:	4620      	mov	r0, r4
 8001596:	f027 fb4f 	bl	8028c38 <_ZdlPvj>
 800159a:	4620      	mov	r0, r4
 800159c:	bd10      	pop	{r4, pc}
	...

080015a0 <_ZN8STM32DMA10initializeEv>:
{
 80015a0:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80015a2:	2300      	movs	r3, #0
 80015a4:	9301      	str	r3, [sp, #4]
 80015a6:	4b0e      	ldr	r3, [pc, #56]	@ (80015e0 <_ZN8STM32DMA10initializeEv+0x40>)
 80015a8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80015aa:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80015ae:	631a      	str	r2, [r3, #48]	@ 0x30
 80015b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80015b2:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 80015b6:	9201      	str	r2, [sp, #4]
 80015b8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80015ba:	691a      	ldr	r2, [r3, #16]
 80015bc:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80015c0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80015c2:	691a      	ldr	r2, [r3, #16]
 80015c4:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 80015c8:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80015ca:	4b06      	ldr	r3, [pc, #24]	@ (80015e4 <_ZN8STM32DMA10initializeEv+0x44>)
 80015cc:	4a06      	ldr	r2, [pc, #24]	@ (80015e8 <_ZN8STM32DMA10initializeEv+0x48>)
 80015ce:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 80015d0:	4a06      	ldr	r2, [pc, #24]	@ (80015ec <_ZN8STM32DMA10initializeEv+0x4c>)
 80015d2:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80015d4:	4b06      	ldr	r3, [pc, #24]	@ (80015f0 <_ZN8STM32DMA10initializeEv+0x50>)
 80015d6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80015da:	609a      	str	r2, [r3, #8]
}
 80015dc:	b002      	add	sp, #8
 80015de:	4770      	bx	lr
 80015e0:	40023800 	.word	0x40023800
 80015e4:	20002fe0 	.word	0x20002fe0
 80015e8:	08001841 	.word	0x08001841
 80015ec:	08001561 	.word	0x08001561
 80015f0:	e000e100 	.word	0xe000e100

080015f4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80015f4:	b508      	push	{r3, lr}
    switch (format)
 80015f6:	280a      	cmp	r0, #10
 80015f8:	d809      	bhi.n	800160e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80015fa:	e8df f000 	tbb	[pc, r0]
 80015fe:	1006      	.short	0x1006
 8001600:	0808080e 	.word	0x0808080e
 8001604:	10101008 	.word	0x10101008
 8001608:	10          	.byte	0x10
 8001609:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800160a:	2002      	movs	r0, #2
}
 800160c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 800160e:	4b05      	ldr	r3, [pc, #20]	@ (8001624 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001610:	4a05      	ldr	r2, [pc, #20]	@ (8001628 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001612:	4806      	ldr	r0, [pc, #24]	@ (800162c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001614:	2190      	movs	r1, #144	@ 0x90
 8001616:	f028 fb4d 	bl	8029cb4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800161a:	2000      	movs	r0, #0
 800161c:	e7f6      	b.n	800160c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800161e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001620:	e7f4      	b.n	800160c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001622:	bf00      	nop
 8001624:	0802b3a1 	.word	0x0802b3a1
 8001628:	0802b3bc 	.word	0x0802b3bc
 800162c:	0802b407 	.word	0x0802b407

08001630 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001630:	b538      	push	{r3, r4, r5, lr}
 8001632:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001634:	7f88      	ldrb	r0, [r1, #30]
 8001636:	f7ff ffdd 	bl	80015f4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800163a:	8aa5      	ldrh	r5, [r4, #20]
 800163c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800163e:	4b16      	ldr	r3, [pc, #88]	@ (8001698 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001640:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001642:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001644:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8001648:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800164a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800164c:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800164e:	1b52      	subs	r2, r2, r5
 8001650:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001652:	6825      	ldr	r5, [r4, #0]
 8001654:	2d08      	cmp	r5, #8
 8001656:	d10e      	bne.n	8001676 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001658:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800165a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800165c:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800165e:	7f20      	ldrb	r0, [r4, #28]
 8001660:	4a0e      	ldr	r2, [pc, #56]	@ (800169c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001662:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001666:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001668:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800166a:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 800166c:	4a0c      	ldr	r2, [pc, #48]	@ (80016a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800166e:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001670:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001672:	601a      	str	r2, [r3, #0]
    }
}
 8001674:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001676:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001678:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800167a:	611a      	str	r2, [r3, #16]
 800167c:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800167e:	0a0a      	lsrs	r2, r1, #8
 8001680:	0948      	lsrs	r0, r1, #5
 8001682:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001686:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800168a:	4302      	orrs	r2, r0
 800168c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001690:	430a      	orrs	r2, r1
 8001692:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001694:	4a03      	ldr	r2, [pc, #12]	@ (80016a4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001696:	e7ec      	b.n	8001672 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001698:	4002b000 	.word	0x4002b000
 800169c:	00010009 	.word	0x00010009
 80016a0:	00022301 	.word	0x00022301
 80016a4:	00032301 	.word	0x00032301

080016a8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 80016a8:	b508      	push	{r3, lr}
    switch (format)
 80016aa:	280b      	cmp	r0, #11
 80016ac:	d80b      	bhi.n	80016c6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 80016ae:	e8df f000 	tbb	[pc, r0]
 80016b2:	1206      	.short	0x1206
 80016b4:	0a0a0a10 	.word	0x0a0a0a10
 80016b8:	0808080a 	.word	0x0808080a
 80016bc:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80016be:	2002      	movs	r0, #2
}
 80016c0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80016c2:	2005      	movs	r0, #5
        break;
 80016c4:	e7fc      	b.n	80016c0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 80016c6:	4b05      	ldr	r3, [pc, #20]	@ (80016dc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80016c8:	4a05      	ldr	r2, [pc, #20]	@ (80016e0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80016ca:	4806      	ldr	r0, [pc, #24]	@ (80016e4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 80016cc:	216f      	movs	r1, #111	@ 0x6f
 80016ce:	f028 faf1 	bl	8029cb4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80016d2:	2000      	movs	r0, #0
 80016d4:	e7f4      	b.n	80016c0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80016d6:	2001      	movs	r0, #1
    return dma2dColorMode;
 80016d8:	e7f2      	b.n	80016c0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80016da:	bf00      	nop
 80016dc:	0802b3a1 	.word	0x0802b3a1
 80016e0:	0802b443 	.word	0x0802b443
 80016e4:	0802b407 	.word	0x0802b407

080016e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 80016e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80016ec:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 80016f0:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80016f2:	4640      	mov	r0, r8
 80016f4:	f7ff ffd8 	bl	80016a8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016f8:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80016fa:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016fc:	4638      	mov	r0, r7
 80016fe:	f7ff ffd3 	bl	80016a8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001702:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001704:	4638      	mov	r0, r7
 8001706:	f7ff ff75 	bl	80015f4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800170a:	8aa1      	ldrh	r1, [r4, #20]
 800170c:	8b62      	ldrh	r2, [r4, #26]
 800170e:	4b44      	ldr	r3, [pc, #272]	@ (8001820 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001710:	1a52      	subs	r2, r2, r1
 8001712:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001714:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001716:	8b22      	ldrh	r2, [r4, #24]
 8001718:	1a52      	subs	r2, r2, r1
 800171a:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800171c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800171e:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001720:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8001724:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001726:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001728:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800172a:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800172c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 800172e:	6820      	ldr	r0, [r4, #0]
 8001730:	2880      	cmp	r0, #128	@ 0x80
 8001732:	d028      	beq.n	8001786 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001734:	7f22      	ldrb	r2, [r4, #28]
 8001736:	d80f      	bhi.n	8001758 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001738:	2820      	cmp	r0, #32
 800173a:	d067      	beq.n	800180c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 800173c:	2840      	cmp	r0, #64	@ 0x40
 800173e:	d065      	beq.n	800180c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001740:	2804      	cmp	r0, #4
 8001742:	d01a      	beq.n	800177a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001744:	4b36      	ldr	r3, [pc, #216]	@ (8001820 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001746:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800174a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 800174e:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001750:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001752:	d061      	beq.n	8001818 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001754:	4a33      	ldr	r2, [pc, #204]	@ (8001824 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001756:	e044      	b.n	80017e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001758:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800175c:	d004      	beq.n	8001768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 800175e:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001762:	d1ef      	bne.n	8001744 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001764:	4830      	ldr	r0, [pc, #192]	@ (8001828 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001766:	e000      	b.n	800176a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001768:	4830      	ldr	r0, [pc, #192]	@ (800182c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800176a:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 800176e:	61da      	str	r2, [r3, #28]
 8001770:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001772:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001774:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001776:	6159      	str	r1, [r3, #20]
 8001778:	e032      	b.n	80017e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800177a:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 800177e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001782:	61da      	str	r2, [r3, #28]
 8001784:	e7f6      	b.n	8001774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001786:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001788:	1d02      	adds	r2, r0, #4
 800178a:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800178c:	7f22      	ldrb	r2, [r4, #28]
 800178e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001792:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001796:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001798:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800179a:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800179c:	7801      	ldrb	r1, [r0, #0]
 800179e:	b141      	cbz	r1, 80017b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 80017a0:	2901      	cmp	r1, #1
 80017a2:	d021      	beq.n	80017e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 80017a4:	4b22      	ldr	r3, [pc, #136]	@ (8001830 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 80017a6:	4a23      	ldr	r2, [pc, #140]	@ (8001834 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 80017a8:	4823      	ldr	r0, [pc, #140]	@ (8001838 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 80017aa:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 80017ae:	f028 fa81 	bl	8029cb4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80017b2:	69da      	ldr	r2, [r3, #28]
 80017b4:	8841      	ldrh	r1, [r0, #2]
 80017b6:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80017ba:	3901      	subs	r1, #1
 80017bc:	f022 0210 	bic.w	r2, r2, #16
 80017c0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80017c4:	61da      	str	r2, [r3, #28]
            bool blend = true;
 80017c6:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80017c8:	4b15      	ldr	r3, [pc, #84]	@ (8001820 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80017ca:	69da      	ldr	r2, [r3, #28]
 80017cc:	f042 0220 	orr.w	r2, r2, #32
 80017d0:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80017d2:	69da      	ldr	r2, [r3, #28]
 80017d4:	0692      	lsls	r2, r2, #26
 80017d6:	d4fc      	bmi.n	80017d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80017d8:	2210      	movs	r2, #16
 80017da:	609a      	str	r2, [r3, #8]
            if (blend)
 80017dc:	2900      	cmp	r1, #0
 80017de:	d0b9      	beq.n	8001754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80017e0:	4a16      	ldr	r2, [pc, #88]	@ (800183c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80017e2:	601a      	str	r2, [r3, #0]
}
 80017e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 80017e8:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80017ec:	69da      	ldr	r2, [r3, #28]
 80017ee:	8840      	ldrh	r0, [r0, #2]
 80017f0:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80017f4:	f100 30ff 	add.w	r0, r0, #4294967295
 80017f8:	f022 0210 	bic.w	r2, r2, #16
 80017fc:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001800:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8001804:	bf18      	it	ne
 8001806:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001808:	61da      	str	r2, [r3, #28]
                break;
 800180a:	e7dd      	b.n	80017c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800180c:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001810:	4b03      	ldr	r3, [pc, #12]	@ (8001820 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001812:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001816:	e7b4      	b.n	8001782 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001818:	f242 3201 	movw	r2, #8961	@ 0x2301
 800181c:	e7e1      	b.n	80017e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800181e:	bf00      	nop
 8001820:	4002b000 	.word	0x4002b000
 8001824:	00012301 	.word	0x00012301
 8001828:	00020009 	.word	0x00020009
 800182c:	0002000a 	.word	0x0002000a
 8001830:	0802b48d 	.word	0x0802b48d
 8001834:	0802b4a7 	.word	0x0802b4a7
 8001838:	0802b407 	.word	0x0802b407
 800183c:	00022301 	.word	0x00022301

08001840 <DMA2D_XferCpltCallback>:
        return instance;
 8001840:	4b02      	ldr	r3, [pc, #8]	@ (800184c <DMA2D_XferCpltCallback+0xc>)
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001846:	6803      	ldr	r3, [r0, #0]
 8001848:	695b      	ldr	r3, [r3, #20]
 800184a:	4718      	bx	r3
 800184c:	20013f60 	.word	0x20013f60

08001850 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001850:	b570      	push	{r4, r5, r6, lr}
 8001852:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001854:	4625      	mov	r5, r4
 8001856:	4b0a      	ldr	r3, [pc, #40]	@ (8001880 <_ZN8STM32DMAC1Ev+0x30>)
 8001858:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800185a:	2600      	movs	r6, #0
 800185c:	6060      	str	r0, [r4, #4]
 800185e:	7226      	strb	r6, [r4, #8]
 8001860:	7266      	strb	r6, [r4, #9]
 8001862:	f845 3b20 	str.w	r3, [r5], #32
 8001866:	2260      	movs	r2, #96	@ 0x60
 8001868:	4629      	mov	r1, r5
 800186a:	f00e fdc3 	bl	80103f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800186e:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001872:	60ee      	str	r6, [r5, #12]
 8001874:	3524      	adds	r5, #36	@ 0x24
 8001876:	429d      	cmp	r5, r3
 8001878:	d1fb      	bne.n	8001872 <_ZN8STM32DMAC1Ev+0x22>
}
 800187a:	4620      	mov	r0, r4
 800187c:	bd70      	pop	{r4, r5, r6, pc}
 800187e:	bf00      	nop
 8001880:	0802c530 	.word	0x0802c530

08001884 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001884:	4b03      	ldr	r3, [pc, #12]	@ (8001894 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8001886:	681a      	ldr	r2, [r3, #0]
 8001888:	07d2      	lsls	r2, r2, #31
 800188a:	d4fc      	bmi.n	8001886 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800188c:	2223      	movs	r2, #35	@ 0x23
 800188e:	609a      	str	r2, [r3, #8]
}
 8001890:	4770      	bx	lr
 8001892:	bf00      	nop
 8001894:	4002b000 	.word	0x4002b000

08001898 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8001898:	4770      	bx	lr
	...

0800189c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 800189c:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800189e:	4c0f      	ldr	r4, [pc, #60]	@ (80018dc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 80018a0:	6825      	ldr	r5, [r4, #0]
 80018a2:	07ed      	lsls	r5, r5, #31
 80018a4:	d4fc      	bmi.n	80018a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018a6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018a8:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018aa:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018ac:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80018b0:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 80018b2:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80018b4:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018b6:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80018b8:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 80018ba:	d00a      	beq.n	80018d2 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80018bc:	4908      	ldr	r1, [pc, #32]	@ (80018e0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018be:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80018c0:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 80018c4:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 80018c6:	4b07      	ldr	r3, [pc, #28]	@ (80018e4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 80018c8:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 80018ca:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 80018cc:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 80018ce:	6023      	str	r3, [r4, #0]
    }
}
 80018d0:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80018d2:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 80018d4:	9b03      	ldr	r3, [sp, #12]
 80018d6:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 80018d8:	4b03      	ldr	r3, [pc, #12]	@ (80018e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 80018da:	e7f8      	b.n	80018ce <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 80018dc:	4002b000 	.word	0x4002b000
 80018e0:	00010009 	.word	0x00010009
 80018e4:	00020001 	.word	0x00020001
 80018e8:	00030001 	.word	0x00030001

080018ec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 80018ec:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80018ee:	4c0e      	ldr	r4, [pc, #56]	@ (8001928 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 80018f0:	6825      	ldr	r5, [r4, #0]
 80018f2:	07ed      	lsls	r5, r5, #31
 80018f4:	d4fc      	bmi.n	80018f0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018f6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018f8:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018fa:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018fc:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001900:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8001902:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001904:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001906:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001908:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800190a:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 800190c:	d008      	beq.n	8001920 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800190e:	061b      	lsls	r3, r3, #24
 8001910:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8001914:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001916:	4b05      	ldr	r3, [pc, #20]	@ (800192c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001918:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800191a:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 800191c:	6023      	str	r3, [r4, #0]
    }
}
 800191e:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001920:	4b03      	ldr	r3, [pc, #12]	@ (8001930 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8001922:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8001924:	2301      	movs	r3, #1
 8001926:	e7f9      	b.n	800191c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8001928:	4002b000 	.word	0x4002b000
 800192c:	00020001 	.word	0x00020001
 8001930:	ff020002 	.word	0xff020002

08001934 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8001934:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001936:	4c0b      	ldr	r4, [pc, #44]	@ (8001964 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8001938:	6825      	ldr	r5, [r4, #0]
 800193a:	07ed      	lsls	r5, r5, #31
 800193c:	d4fc      	bmi.n	8001938 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800193e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001940:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001942:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001944:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001946:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800194a:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800194c:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001950:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001952:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001954:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8001956:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001958:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800195a:	4b03      	ldr	r3, [pc, #12]	@ (8001968 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800195c:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800195e:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001960:	6023      	str	r3, [r4, #0]
}
 8001962:	bd30      	pop	{r4, r5, pc}
 8001964:	4002b000 	.word	0x4002b000
 8001968:	00020001 	.word	0x00020001

0800196c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 800196c:	2001      	movs	r0, #1
 800196e:	4770      	bx	lr

08001970 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001970:	2038      	movs	r0, #56	@ 0x38
 8001972:	4770      	bx	lr

08001974 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001974:	2338      	movs	r3, #56	@ 0x38
 8001976:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800197a:	3008      	adds	r0, #8
 800197c:	4770      	bx	lr

0800197e <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 800197e:	2338      	movs	r3, #56	@ 0x38
 8001980:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001984:	3008      	adds	r0, #8
 8001986:	4770      	bx	lr

08001988 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001988:	2001      	movs	r0, #1
 800198a:	4770      	bx	lr

0800198c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800198c:	f641 007c 	movw	r0, #6268	@ 0x187c
 8001990:	4770      	bx	lr

08001992 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001992:	f641 037c 	movw	r3, #6268	@ 0x187c
 8001996:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800199a:	3008      	adds	r0, #8
 800199c:	4770      	bx	lr

0800199e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800199e:	f641 037c 	movw	r3, #6268	@ 0x187c
 80019a2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80019a6:	3008      	adds	r0, #8
 80019a8:	4770      	bx	lr

080019aa <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80019aa:	2001      	movs	r0, #1
 80019ac:	4770      	bx	lr

080019ae <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80019ae:	2010      	movs	r0, #16
 80019b0:	4770      	bx	lr

080019b2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80019b2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80019b6:	3008      	adds	r0, #8
 80019b8:	4770      	bx	lr

080019ba <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80019ba:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80019be:	3008      	adds	r0, #8
 80019c0:	4770      	bx	lr

080019c2 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartScreenScreenNoTransition();
 80019c2:	4608      	mov	r0, r1
 80019c4:	f002 bbd2 	b.w	800416c <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>

080019c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80019c8:	b510      	push	{r4, lr}
 80019ca:	4b03      	ldr	r3, [pc, #12]	@ (80019d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 80019cc:	6003      	str	r3, [r0, #0]
 80019ce:	4604      	mov	r4, r0
 80019d0:	f00d fb79 	bl	800f0c6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80019d4:	4620      	mov	r0, r4
 80019d6:	bd10      	pop	{r4, pc}
 80019d8:	0802c5e8 	.word	0x0802c5e8

080019dc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80019dc:	b510      	push	{r4, lr}
 80019de:	4604      	mov	r4, r0
 80019e0:	f7ff fff2 	bl	80019c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80019e4:	4620      	mov	r0, r4
 80019e6:	2140      	movs	r1, #64	@ 0x40
 80019e8:	f027 f926 	bl	8028c38 <_ZdlPvj>
 80019ec:	4620      	mov	r0, r4
 80019ee:	bd10      	pop	{r4, pc}

080019f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80019f0:	b510      	push	{r4, lr}
 80019f2:	4b03      	ldr	r3, [pc, #12]	@ (8001a00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80019f4:	6003      	str	r3, [r0, #0]
 80019f6:	4604      	mov	r4, r0
 80019f8:	f00d fb65 	bl	800f0c6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80019fc:	4620      	mov	r0, r4
 80019fe:	bd10      	pop	{r4, pc}
 8001a00:	0802c5b4 	.word	0x0802c5b4

08001a04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001a04:	b510      	push	{r4, lr}
 8001a06:	4604      	mov	r4, r0
 8001a08:	f7ff fff2 	bl	80019f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a0c:	4620      	mov	r0, r4
 8001a0e:	f641 0184 	movw	r1, #6276	@ 0x1884
 8001a12:	f027 f911 	bl	8028c38 <_ZdlPvj>
 8001a16:	4620      	mov	r0, r4
 8001a18:	bd10      	pop	{r4, pc}
	...

08001a1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001a1c:	b510      	push	{r4, lr}
 8001a1e:	4b03      	ldr	r3, [pc, #12]	@ (8001a2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001a20:	6003      	str	r3, [r0, #0]
 8001a22:	4604      	mov	r4, r0
 8001a24:	f00d fb4f 	bl	800f0c6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001a28:	4620      	mov	r0, r4
 8001a2a:	bd10      	pop	{r4, pc}
 8001a2c:	0802c580 	.word	0x0802c580

08001a30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001a30:	b510      	push	{r4, lr}
 8001a32:	4604      	mov	r4, r0
 8001a34:	f7ff fff2 	bl	8001a1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a38:	4620      	mov	r0, r4
 8001a3a:	2118      	movs	r1, #24
 8001a3c:	f027 f8fc 	bl	8028c38 <_ZdlPvj>
 8001a40:	4620      	mov	r0, r4
 8001a42:	bd10      	pop	{r4, pc}

08001a44 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001a44:	b510      	push	{r4, lr}
 8001a46:	4b09      	ldr	r3, [pc, #36]	@ (8001a6c <_ZN12FrontendHeapD1Ev+0x28>)
 8001a48:	6003      	str	r3, [r0, #0]
 8001a4a:	4604      	mov	r4, r0
 8001a4c:	f500 50c5 	add.w	r0, r0, #6304	@ 0x18a0
 8001a50:	3010      	adds	r0, #16
 8001a52:	f7ff ffb9 	bl	80019c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001a56:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001a5a:	f7ff ffc9 	bl	80019f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a5e:	f104 0014 	add.w	r0, r4, #20
 8001a62:	f7ff ffdb 	bl	8001a1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a66:	4620      	mov	r0, r4
 8001a68:	bd10      	pop	{r4, pc}
 8001a6a:	bf00      	nop
 8001a6c:	0802c61c 	.word	0x0802c61c

08001a70 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001a70:	b508      	push	{r3, lr}
 8001a72:	4802      	ldr	r0, [pc, #8]	@ (8001a7c <__tcf_0+0xc>)
 8001a74:	f7ff ffe6 	bl	8001a44 <_ZN12FrontendHeapD1Ev>
 8001a78:	bd08      	pop	{r3, pc}
 8001a7a:	bf00      	nop
 8001a7c:	20001294 	.word	0x20001294

08001a80 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001a80:	b510      	push	{r4, lr}
 8001a82:	4604      	mov	r4, r0
 8001a84:	f7ff ffde 	bl	8001a44 <_ZN12FrontendHeapD1Ev>
 8001a88:	4620      	mov	r0, r4
 8001a8a:	f44f 51d3 	mov.w	r1, #6752	@ 0x1a60
 8001a8e:	f027 f8d3 	bl	8028c38 <_ZdlPvj>
 8001a92:	4620      	mov	r0, r4
 8001a94:	bd10      	pop	{r4, pc}
	...

08001a98 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001a98:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001a9c:	f001 fa3e 	bl	8002f1c <_ZN14BitmapDatabase11getInstanceEv>
 8001aa0:	4605      	mov	r5, r0
 8001aa2:	f001 fa3f 	bl	8002f24 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001aa6:	2400      	movs	r4, #0
 8001aa8:	4601      	mov	r1, r0
 8001aaa:	4623      	mov	r3, r4
 8001aac:	4628      	mov	r0, r5
 8001aae:	4622      	mov	r2, r4
 8001ab0:	9400      	str	r4, [sp, #0]
 8001ab2:	f018 f865 	bl	8019b80 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001ab6:	4b27      	ldr	r3, [pc, #156]	@ (8001b54 <touchgfx_init+0xbc>)
 8001ab8:	4a27      	ldr	r2, [pc, #156]	@ (8001b58 <touchgfx_init+0xc0>)
 8001aba:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001abc:	4620      	mov	r0, r4
 8001abe:	f005 fc7b 	bl	80073b8 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8001ac2:	4d26      	ldr	r5, [pc, #152]	@ (8001b5c <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001ac4:	4b26      	ldr	r3, [pc, #152]	@ (8001b60 <touchgfx_init+0xc8>)
 8001ac6:	4a27      	ldr	r2, [pc, #156]	@ (8001b64 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8001ac8:	4827      	ldr	r0, [pc, #156]	@ (8001b68 <touchgfx_init+0xd0>)
 8001aca:	609a      	str	r2, [r3, #8]
 8001acc:	f017 ffc0 	bl	8019a50 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001ad0:	682b      	ldr	r3, [r5, #0]
 8001ad2:	f3bf 8f5b 	dmb	ish
 8001ad6:	07db      	lsls	r3, r3, #31
 8001ad8:	d436      	bmi.n	8001b48 <touchgfx_init+0xb0>
 8001ada:	4628      	mov	r0, r5
 8001adc:	f027 f8ae 	bl	8028c3c <__cxa_guard_acquire>
 8001ae0:	b390      	cbz	r0, 8001b48 <touchgfx_init+0xb0>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001ae2:	4c22      	ldr	r4, [pc, #136]	@ (8001b6c <touchgfx_init+0xd4>)
          screenStorage(scr),
          transitionStorage(tra),
 8001ae4:	4f22      	ldr	r7, [pc, #136]	@ (8001b70 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001ae6:	4b23      	ldr	r3, [pc, #140]	@ (8001b74 <touchgfx_init+0xdc>)
 8001ae8:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8001aea:	f107 0654 	add.w	r6, r7, #84	@ 0x54
        : presenterStorage(pres),
 8001aee:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001af2:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 8001af6:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001af8:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001afc:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001afe:	6126      	str	r6, [r4, #16]
 8001b00:	f00d fae2 	bl	800f0c8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b04:	4b1c      	ldr	r3, [pc, #112]	@ (8001b78 <touchgfx_init+0xe0>)
 8001b06:	6163      	str	r3, [r4, #20]
 8001b08:	4640      	mov	r0, r8
 8001b0a:	f00d fadd 	bl	800f0c8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b0e:	4b1b      	ldr	r3, [pc, #108]	@ (8001b7c <touchgfx_init+0xe4>)
 8001b10:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001b12:	4638      	mov	r0, r7
 8001b14:	f00d fad8 	bl	800f0c8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b18:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8001b1c:	f503 600f 	add.w	r0, r3, #2288	@ 0x8f0
 8001b20:	4a17      	ldr	r2, [pc, #92]	@ (8001b80 <touchgfx_init+0xe8>)
 8001b22:	f8c3 28b0 	str.w	r2, [r3, #2224]	@ 0x8b0
 8001b26:	f008 f841 	bl	8009bac <_ZN5ModelC1Ev>
 8001b2a:	4622      	mov	r2, r4
 8001b2c:	f107 0140 	add.w	r1, r7, #64	@ 0x40
 8001b30:	4630      	mov	r0, r6
 8001b32:	f006 fd5d 	bl	80085f0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001b36:	4630      	mov	r0, r6
 8001b38:	f002 fb18 	bl	800416c <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001b3c:	4811      	ldr	r0, [pc, #68]	@ (8001b84 <touchgfx_init+0xec>)
 8001b3e:	f028 f8d7 	bl	8029cf0 <atexit>
 8001b42:	4628      	mov	r0, r5
 8001b44:	f027 f886 	bl	8028c54 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001b48:	480f      	ldr	r0, [pc, #60]	@ (8001b88 <touchgfx_init+0xf0>)
}
 8001b4a:	b002      	add	sp, #8
 8001b4c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001b50:	f7ff bbe4 	b.w	800131c <_ZN11TouchGFXHAL10initializeEv>
 8001b54:	20013fc4 	.word	0x20013fc4
 8001b58:	20000440 	.word	0x20000440
 8001b5c:	20001290 	.word	0x20001290
 8001b60:	20000460 	.word	0x20000460
 8001b64:	20000444 	.word	0x20000444
 8001b68:	20000008 	.word	0x20000008
 8001b6c:	20001294 	.word	0x20001294
 8001b70:	20002b44 	.word	0x20002b44
 8001b74:	0802c61c 	.word	0x0802c61c
 8001b78:	0802c580 	.word	0x0802c580
 8001b7c:	0802c5b4 	.word	0x0802c5b4
 8001b80:	0802c5e8 	.word	0x0802c5e8
 8001b84:	08001a71 	.word	0x08001a71
 8001b88:	200003c4 	.word	0x200003c4

08001b8c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001b8c:	4770      	bx	lr
	...

08001b90 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001b90:	4801      	ldr	r0, [pc, #4]	@ (8001b98 <touchgfx_taskEntry+0x8>)
 8001b92:	f7ff bbd1 	b.w	8001338 <_ZN11TouchGFXHAL9taskEntryEv>
 8001b96:	bf00      	nop
 8001b98:	200003c4 	.word	0x200003c4

08001b9c <_GLOBAL__sub_I_touchgfx_init>:
}
 8001b9c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001b9e:	4e24      	ldr	r6, [pc, #144]	@ (8001c30 <_GLOBAL__sub_I_touchgfx_init+0x94>)
{
public:

    STM32TouchController() {}
 8001ba0:	4c24      	ldr	r4, [pc, #144]	@ (8001c34 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8001ba2:	4d25      	ldr	r5, [pc, #148]	@ (8001c38 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8001ba4:	4b25      	ldr	r3, [pc, #148]	@ (8001c3c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8001ba6:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001ba8:	4630      	mov	r0, r6
 8001baa:	f7ff fe51 	bl	8001850 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001bae:	4628      	mov	r0, r5
 8001bb0:	f01d f8ec 	bl	801ed8c <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8001bb4:	4822      	ldr	r0, [pc, #136]	@ (8001c40 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001bb6:	f015 fc79 	bl	80174ac <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8001bba:	4b22      	ldr	r3, [pc, #136]	@ (8001c44 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001bbc:	4822      	ldr	r0, [pc, #136]	@ (8001c48 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          touchController(touchCtrl),
 8001bbe:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001bc0:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001bc2:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8001bc6:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001bca:	4920      	ldr	r1, [pc, #128]	@ (8001c4c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001bcc:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001bce:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001bd2:	491f      	ldr	r1, [pc, #124]	@ (8001c50 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 8001bd4:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8001bd6:	491f      	ldr	r1, [pc, #124]	@ (8001c54 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
          useAuxiliaryLCD(false),
 8001bd8:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
        instance = this;
 8001bdc:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001bde:	21f0      	movs	r1, #240	@ 0xf0
 8001be0:	8001      	strh	r1, [r0, #0]
 8001be2:	481d      	ldr	r0, [pc, #116]	@ (8001c58 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          lastY(0),
 8001be4:	665a      	str	r2, [r3, #100]	@ 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001be6:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001be8:	481c      	ldr	r0, [pc, #112]	@ (8001c5c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          updateMCULoad(0),
 8001bea:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001bee:	f44f 71a0 	mov.w	r1, #320	@ 0x140
          buttonController(0),
 8001bf2:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001bf6:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001bfa:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001bfe:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001c02:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001c06:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001c0a:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001c0e:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          cc_begin(0),
 8001c12:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 8001c14:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001c18:	8001      	strh	r1, [r0, #0]
 8001c1a:	4811      	ldr	r0, [pc, #68]	@ (8001c60 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001c1c:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001c1e:	4911      	ldr	r1, [pc, #68]	@ (8001c64 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 8001c20:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001c22:	2201      	movs	r2, #1
 8001c24:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001c28:	4a0f      	ldr	r2, [pc, #60]	@ (8001c68 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 8001c2a:	601a      	str	r2, [r3, #0]
}
 8001c2c:	bd70      	pop	{r4, r5, r6, pc}
 8001c2e:	bf00      	nop
 8001c30:	200004ec 	.word	0x200004ec
 8001c34:	2000128c 	.word	0x2000128c
 8001c38:	20000460 	.word	0x20000460
 8001c3c:	0802b128 	.word	0x0802b128
 8001c40:	20000444 	.word	0x20000444
 8001c44:	200003c4 	.word	0x200003c4
 8001c48:	20013f54 	.word	0x20013f54
 8001c4c:	01000001 	.word	0x01000001
 8001c50:	01010000 	.word	0x01010000
 8001c54:	20013f60 	.word	0x20013f60
 8001c58:	20013f5a 	.word	0x20013f5a
 8001c5c:	20013f56 	.word	0x20013f56
 8001c60:	20013f5c 	.word	0x20013f5c
 8001c64:	20013f58 	.word	0x20013f58
 8001c68:	0802c458 	.word	0x0802c458

08001c6c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001c6c:	4801      	ldr	r0, [pc, #4]	@ (8001c74 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001c6e:	f7ff bc7b 	b.w	8001568 <_ZN8STM32DMAD1Ev>
 8001c72:	bf00      	nop
 8001c74:	200004ec 	.word	0x200004ec

08001c78 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001c78:	2000      	movs	r0, #0
 8001c7a:	4770      	bx	lr

08001c7c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001c7c:	8081      	strh	r1, [r0, #4]
    }
 8001c7e:	4770      	bx	lr

08001c80 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001c80:	80c1      	strh	r1, [r0, #6]
    }
 8001c82:	4770      	bx	lr

08001c84 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001c84:	8101      	strh	r1, [r0, #8]
    }
 8001c86:	4770      	bx	lr

08001c88 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001c88:	8141      	strh	r1, [r0, #10]
    }
 8001c8a:	4770      	bx	lr

08001c8c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001c8c:	4770      	bx	lr

08001c8e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001c8e:	4770      	bx	lr

08001c90 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001c90:	4770      	bx	lr

08001c92 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001c92:	4770      	bx	lr

08001c94 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001c94:	4770      	bx	lr

08001c96 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001c96:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001c98:	88c4      	ldrh	r4, [r0, #6]
 8001c9a:	6803      	ldr	r3, [r0, #0]
 8001c9c:	1b12      	subs	r2, r2, r4
 8001c9e:	8884      	ldrh	r4, [r0, #4]
 8001ca0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001ca2:	1b09      	subs	r1, r1, r4
 8001ca4:	b212      	sxth	r2, r2
    }
 8001ca6:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001caa:	b209      	sxth	r1, r1
 8001cac:	4718      	bx	r3

08001cae <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001cae:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001cb2:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001cb4:	f04f 33ff 	mov.w	r3, #4294967295
 8001cb8:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001cba:	6813      	ldr	r3, [r2, #0]
 8001cbc:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001cbe:	6010      	str	r0, [r2, #0]
    }
 8001cc0:	4770      	bx	lr

08001cc2 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001cc2:	2000      	movs	r0, #0
 8001cc4:	4770      	bx	lr

08001cc6 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001cc6:	888b      	ldrh	r3, [r1, #4]
 8001cc8:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001cca:	2001      	movs	r0, #1
 8001ccc:	4770      	bx	lr

08001cce <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001cce:	4770      	bx	lr

08001cd0 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001cd0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8001cd4:	4770      	bx	lr

08001cd6 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001cd6:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8001cda:	4770      	bx	lr

08001cdc <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001cdc:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001cde:	2200      	movs	r2, #0
        return rect.width;
 8001ce0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001ce4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001ce8:	8002      	strh	r2, [r0, #0]
 8001cea:	8042      	strh	r2, [r0, #2]
 8001cec:	8084      	strh	r4, [r0, #4]
 8001cee:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001cf0:	bd10      	pop	{r4, pc}

08001cf2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001cf2:	2200      	movs	r2, #0
 8001cf4:	8002      	strh	r2, [r0, #0]
 8001cf6:	8042      	strh	r2, [r0, #2]
 8001cf8:	8082      	strh	r2, [r0, #4]
 8001cfa:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001cfc:	4770      	bx	lr

08001cfe <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8001cfe:	7701      	strb	r1, [r0, #28]
    }
 8001d00:	4770      	bx	lr

08001d02 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 8001d02:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 8001d06:	4770      	bx	lr

08001d08 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 8001d08:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8001d0c:	4770      	bx	lr

08001d0e <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8001d0e:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 8001d12:	4770      	bx	lr

08001d14 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 8001d14:	2001      	movs	r0, #1
 8001d16:	4770      	bx	lr

08001d18 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 8001d18:	3098      	adds	r0, #152	@ 0x98
 8001d1a:	4770      	bx	lr

08001d1c <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 8001d1c:	308c      	adds	r0, #140	@ 0x8c
 8001d1e:	4770      	bx	lr

08001d20 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 8001d20:	3084      	adds	r0, #132	@ 0x84
 8001d22:	4770      	bx	lr

08001d24 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001d24:	4770      	bx	lr

08001d26 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001d26:	4770      	bx	lr

08001d28 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 8001d28:	4770      	bx	lr
	...

08001d2c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001d2c:	4b03      	ldr	r3, [pc, #12]	@ (8001d3c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001d2e:	2290      	movs	r2, #144	@ 0x90
 8001d30:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001d34:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001d38:	4770      	bx	lr
 8001d3a:	bf00      	nop
 8001d3c:	e000e100 	.word	0xe000e100

08001d40 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001d40:	4a09      	ldr	r2, [pc, #36]	@ (8001d68 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001d42:	490a      	ldr	r1, [pc, #40]	@ (8001d6c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001d44:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001d46:	480a      	ldr	r0, [pc, #40]	@ (8001d70 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001d48:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001d4c:	3b01      	subs	r3, #1
 8001d4e:	b29b      	uxth	r3, r3
 8001d50:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001d52:	6911      	ldr	r1, [r2, #16]
 8001d54:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001d58:	3901      	subs	r1, #1
 8001d5a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001d5c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001d5e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001d60:	f043 0301 	orr.w	r3, r3, #1
 8001d64:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001d66:	4770      	bx	lr
 8001d68:	40016800 	.word	0x40016800
 8001d6c:	20002cf6 	.word	0x20002cf6
 8001d70:	20002cf4 	.word	0x20002cf4

08001d74 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001d74:	4b01      	ldr	r3, [pc, #4]	@ (8001d7c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001d76:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001d7a:	4770      	bx	lr
 8001d7c:	40016800 	.word	0x40016800

08001d80 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001d80:	4b02      	ldr	r3, [pc, #8]	@ (8001d8c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001d82:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001d84:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001d88:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001d8a:	4770      	bx	lr
 8001d8c:	40016800 	.word	0x40016800

08001d90 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001d90:	b510      	push	{r4, lr}
 8001d92:	212c      	movs	r1, #44	@ 0x2c
 8001d94:	4604      	mov	r4, r0
 8001d96:	f026 ff4f 	bl	8028c38 <_ZdlPvj>
 8001d9a:	4620      	mov	r0, r4
 8001d9c:	bd10      	pop	{r4, pc}

08001d9e <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001d9e:	b510      	push	{r4, lr}
 8001da0:	21bc      	movs	r1, #188	@ 0xbc
 8001da2:	4604      	mov	r4, r0
 8001da4:	f026 ff48 	bl	8028c38 <_ZdlPvj>
 8001da8:	4620      	mov	r0, r4
 8001daa:	bd10      	pop	{r4, pc}

08001dac <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001dac:	b570      	push	{r4, r5, r6, lr}
 8001dae:	4604      	mov	r4, r0
    HAL::initialize();
 8001db0:	f00d fc89 	bl	800f6c6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001db4:	6823      	ldr	r3, [r4, #0]
 8001db6:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 8001db8:	f014 fa24 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
 8001dbc:	4601      	mov	r1, r0
 8001dbe:	4620      	mov	r0, r4
 8001dc0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001dc2:	6823      	ldr	r3, [r4, #0]
 8001dc4:	4a05      	ldr	r2, [pc, #20]	@ (8001ddc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001dc6:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8001dca:	4620      	mov	r0, r4
 8001dcc:	46ac      	mov	ip, r5
 8001dce:	2300      	movs	r3, #0
}
 8001dd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001dd4:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001dd8:	4760      	bx	ip
 8001dda:	bf00      	nop
 8001ddc:	d004b000 	.word	0xd004b000

08001de0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001de0:	f00d bc58 	b.w	800f694 <_ZN8touchgfx3HAL10beginFrameEv>

08001de4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001de4:	f00d bc62 	b.w	800f6ac <_ZN8touchgfx3HAL8endFrameEv>

08001de8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001de8:	f00d bc1e 	b.w	800f628 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001dec <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001dec:	f00d bd7f 	b.w	800f8ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001df0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001df0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8001df4:	b112      	cbz	r2, 8001dfc <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001df6:	6803      	ldr	r3, [r0, #0]
 8001df8:	695b      	ldr	r3, [r3, #20]
 8001dfa:	4718      	bx	r3
    }
 8001dfc:	4770      	bx	lr

08001dfe <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001dfe:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8001e02:	b11a      	cbz	r2, 8001e0c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001e04:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8001e08:	b102      	cbz	r2, 8001e0c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001e0a:	6018      	str	r0, [r3, #0]
        }
    }
 8001e0c:	4770      	bx	lr
	...

08001e10 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e10:	4b03      	ldr	r3, [pc, #12]	@ (8001e20 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001e12:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001e16:	609a      	str	r2, [r3, #8]
 8001e18:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001e1c:	609a      	str	r2, [r3, #8]
}
 8001e1e:	4770      	bx	lr
 8001e20:	e000e100 	.word	0xe000e100

08001e24 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e24:	4b08      	ldr	r3, [pc, #32]	@ (8001e48 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001e26:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001e2a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e2e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e32:	f3bf 8f6f 	isb	sy
 8001e36:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001e3a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e3e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e42:	f3bf 8f6f 	isb	sy
}
 8001e46:	4770      	bx	lr
 8001e48:	e000e100 	.word	0xe000e100

08001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001e4c:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001e4e:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001e50:	4e12      	ldr	r6, [pc, #72]	@ (8001e9c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001e52:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001e54:	4b12      	ldr	r3, [pc, #72]	@ (8001ea0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001e56:	6003      	str	r3, [r0, #0]
 8001e58:	6833      	ldr	r3, [r6, #0]
 8001e5a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 8001e5e:	4605      	mov	r5, r0
 8001e60:	b10a      	cbz	r2, 8001e66 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001e62:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001e64:	b900      	cbnz	r0, 8001e68 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001e66:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001e68:	6803      	ldr	r3, [r0, #0]
 8001e6a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001e6c:	4798      	blx	r3
        return auxiliaryLCD;
 8001e6e:	6833      	ldr	r3, [r6, #0]
 8001e70:	fab0 f480 	clz	r4, r0
 8001e74:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001e76:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001e78:	b130      	cbz	r0, 8001e88 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001e7a:	6803      	ldr	r3, [r0, #0]
 8001e7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001e7e:	4798      	blx	r3
 8001e80:	2800      	cmp	r0, #0
 8001e82:	bf08      	it	eq
 8001e84:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001e88:	b92c      	cbnz	r4, 8001e96 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001e8a:	4b06      	ldr	r3, [pc, #24]	@ (8001ea4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001e8c:	4a06      	ldr	r2, [pc, #24]	@ (8001ea8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001e8e:	4807      	ldr	r0, [pc, #28]	@ (8001eac <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001e90:	212c      	movs	r1, #44	@ 0x2c
 8001e92:	f027 ff0f 	bl	8029cb4 <__assert_func>
    }
 8001e96:	4628      	mov	r0, r5
 8001e98:	bd70      	pop	{r4, r5, r6, pc}
 8001e9a:	bf00      	nop
 8001e9c:	20013f60 	.word	0x20013f60
 8001ea0:	0802c630 	.word	0x0802c630
 8001ea4:	0802b4e5 	.word	0x0802b4e5
 8001ea8:	0802b543 	.word	0x0802b543
 8001eac:	0802b57c 	.word	0x0802b57c

08001eb0 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001eb0:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8001eb2:	4e24      	ldr	r6, [pc, #144]	@ (8001f44 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x94>)
 8001eb4:	6835      	ldr	r5, [r6, #0]
 8001eb6:	f3bf 8f5b 	dmb	ish
 8001eba:	f015 0501 	ands.w	r5, r5, #1
 8001ebe:	d13f      	bne.n	8001f40 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x90>
 8001ec0:	4630      	mov	r0, r6
 8001ec2:	f026 febb 	bl	8028c3c <__cxa_guard_acquire>
 8001ec6:	2800      	cmp	r0, #0
 8001ec8:	d03a      	beq.n	8001f40 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x90>
class CWRVectorRenderer : public VectorRenderer
 8001eca:	4c1f      	ldr	r4, [pc, #124]	@ (8001f48 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001ecc:	4b1f      	ldr	r3, [pc, #124]	@ (8001f4c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001ece:	6125      	str	r5, [r4, #16]
 8001ed0:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8001ed4:	e9c4 3500 	strd	r3, r5, [r4]
 8001ed8:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001edc:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001ede:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001ee0:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 8001ee2:	f015 fd42 	bl	801796a <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 8001ee6:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001eea:	f010 fb51 	bl	8012590 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8001eee:	4b18      	ldr	r3, [pc, #96]	@ (8001f50 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001ef0:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001ef2:	4620      	mov	r0, r4
 8001ef4:	4b17      	ldr	r3, [pc, #92]	@ (8001f54 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 8001ef6:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001efa:	f7ff ffa7 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001efe:	4b16      	ldr	r3, [pc, #88]	@ (8001f58 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 8001f00:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 8001f04:	3324      	adds	r3, #36	@ 0x24
 8001f06:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8001f0a:	2364      	movs	r3, #100	@ 0x64
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8001f0c:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8001f10:	2300      	movs	r3, #0
 8001f12:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 8001f16:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8001f1a:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8001f1e:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 8001f22:	480e      	ldr	r0, [pc, #56]	@ (8001f5c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 8001f24:	4b0e      	ldr	r3, [pc, #56]	@ (8001f60 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8001f26:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 8001f2a:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 8001f2e:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8001f32:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8001f36:	f027 fedb 	bl	8029cf0 <atexit>
 8001f3a:	4630      	mov	r0, r6
 8001f3c:	f026 fe8a 	bl	8028c54 <__cxa_guard_release>
}
 8001f40:	4801      	ldr	r0, [pc, #4]	@ (8001f48 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001f42:	bd70      	pop	{r4, r5, r6, pc}
 8001f44:	20002cf8 	.word	0x20002cf8
 8001f48:	20002cfc 	.word	0x20002cfc
 8001f4c:	0802d260 	.word	0x0802d260
 8001f50:	0802c650 	.word	0x0802c650
 8001f54:	0802c6c8 	.word	0x0802c6c8
 8001f58:	0802d214 	.word	0x0802d214
 8001f5c:	08001d29 	.word	0x08001d29
 8001f60:	0802d1f4 	.word	0x0802d1f4

08001f64 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001f64:	b510      	push	{r4, lr}
        return instance;
 8001f66:	4c14      	ldr	r4, [pc, #80]	@ (8001fb8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001f68:	6823      	ldr	r3, [r4, #0]
 8001f6a:	b323      	cbz	r3, 8001fb6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001f6c:	4b13      	ldr	r3, [pc, #76]	@ (8001fbc <HAL_LTDC_LineEventCallback+0x58>)
 8001f6e:	4a14      	ldr	r2, [pc, #80]	@ (8001fc0 <HAL_LTDC_LineEventCallback+0x5c>)
 8001f70:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f72:	8811      	ldrh	r1, [r2, #0]
 8001f74:	428b      	cmp	r3, r1
 8001f76:	d113      	bne.n	8001fa0 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001f78:	4b12      	ldr	r3, [pc, #72]	@ (8001fc4 <HAL_LTDC_LineEventCallback+0x60>)
 8001f7a:	8819      	ldrh	r1, [r3, #0]
 8001f7c:	f009 fbea 	bl	800b754 <HAL_LTDC_ProgramLineEvent>
 8001f80:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001f82:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8001f86:	3301      	adds	r3, #1
 8001f88:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001f8c:	f7ff fac0 	bl	8001510 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001f90:	6820      	ldr	r0, [r4, #0]
 8001f92:	f00e f8d7 	bl	8010144 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001f96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001f9a:	2000      	movs	r0, #0
 8001f9c:	f7ff b904 	b.w	80011a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001fa0:	f009 fbd8 	bl	800b754 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001fa4:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001fa6:	6803      	ldr	r3, [r0, #0]
 8001fa8:	6a1b      	ldr	r3, [r3, #32]
 8001faa:	4798      	blx	r3
    }
 8001fac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001fb0:	2000      	movs	r0, #0
 8001fb2:	f7ff b923 	b.w	80011fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001fb6:	bd10      	pop	{r4, pc}
 8001fb8:	20013f60 	.word	0x20013f60
 8001fbc:	40016800 	.word	0x40016800
 8001fc0:	20002cf6 	.word	0x20002cf6
 8001fc4:	20002cf4 	.word	0x20002cf4

08001fc8 <_Z10uart_printPKc>:
#define JOY_THRESHOLD_RIGHT  3000     // Ngưỡng cho chuyển động phải


uint32_t tick_counter = 0;            // Biến đếm thời gian

void uart_print(const char* msg) {
 8001fc8:	b510      	push	{r4, lr}
 8001fca:	4604      	mov	r4, r0
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8001fcc:	f7fe f910 	bl	80001f0 <strlen>
 8001fd0:	4621      	mov	r1, r4
 8001fd2:	b282      	uxth	r2, r0
}
 8001fd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8001fd8:	4802      	ldr	r0, [pc, #8]	@ (8001fe4 <_Z10uart_printPKc+0x1c>)
 8001fda:	f04f 33ff 	mov.w	r3, #4294967295
 8001fde:	f00a be96 	b.w	800cd0e <HAL_UART_Transmit>
 8001fe2:	bf00      	nop
 8001fe4:	20002dd0 	.word	0x20002dd0

08001fe8 <JoystickTask>:

extern "C" void JoystickTask(void *argument)
{
 8001fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    // Khởi tạo giá trị ADC ở giữa dải (2048 cho ADC 12-bit)
    uint32_t adc_values[4] = {2048, 2048, 2048, 2048}; // Lưu giá trị ADC: [JOY1_X, JOY1_Y, JOY2_X, JOY2_Y]
 8001fec:	4c6e      	ldr	r4, [pc, #440]	@ (80021a8 <JoystickTask+0x1c0>)
 8001fee:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
{
 8001ff2:	b0b3      	sub	sp, #204	@ 0xcc
    uint32_t adc_values[4] = {2048, 2048, 2048, 2048}; // Lưu giá trị ADC: [JOY1_X, JOY1_Y, JOY2_X, JOY2_Y]
 8001ff4:	ad06      	add	r5, sp, #24
 8001ff6:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
    // Cấu hình kênh ADC
    ADC_ChannelConfTypeDef sConfig = {0};
    uint8_t channel_rank = 1;

    // Cấu hình tất cả 4 kênh cho ADC1 ở chế độ Scan
    uint32_t channels[4] = {JOY1_X_CHANNEL, JOY1_Y_CHANNEL, JOY2_X_CHANNEL, JOY2_Y_CHANNEL};
 8001ffa:	3410      	adds	r4, #16
    ADC_ChannelConfTypeDef sConfig = {0};
 8001ffc:	2300      	movs	r3, #0
 8001ffe:	930d      	str	r3, [sp, #52]	@ 0x34
    uint32_t channels[4] = {JOY1_X_CHANNEL, JOY1_Y_CHANNEL, JOY2_X_CHANNEL, JOY2_Y_CHANNEL};
 8002000:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8002004:	ad0e      	add	r5, sp, #56	@ 0x38
 8002006:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800200a:	2401      	movs	r4, #1
    for (int i = 0; i < 4; i++) {
        sConfig.Channel = channels[i];
        sConfig.Rank = channel_rank++;
        sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 800200c:	2606      	movs	r6, #6
        sConfig.Channel = channels[i];
 800200e:	f855 3b04 	ldr.w	r3, [r5], #4
        HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8002012:	4866      	ldr	r0, [pc, #408]	@ (80021ac <JoystickTask+0x1c4>)
        sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 8002014:	960c      	str	r6, [sp, #48]	@ 0x30
        sConfig.Rank = channel_rank++;
 8002016:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
        HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 800201a:	a90a      	add	r1, sp, #40	@ 0x28
    for (int i = 0; i < 4; i++) {
 800201c:	3401      	adds	r4, #1
        HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 800201e:	f008 faaf 	bl	800a580 <HAL_ADC_ConfigChannel>
    for (int i = 0; i < 4; i++) {
 8002022:	2c05      	cmp	r4, #5
 8002024:	d1f3      	bne.n	800200e <JoystickTask+0x26>
    }

    // Cấu hình ADC1 ở chế độ Scan
    hadc1.Instance->CR1 |= ADC_CR1_SCAN; // Bật chế độ Scan
 8002026:	4b61      	ldr	r3, [pc, #388]	@ (80021ac <JoystickTask+0x1c4>)
    GPIO_PinState lastJoy1ButtonState = GPIO_PIN_SET;
    GPIO_PinState lastJoy2ButtonState = GPIO_PIN_SET;

    for (;;) {
        // Bắt đầu quét tất cả các kênh
        HAL_ADC_Start(&hadc1);
 8002028:	4f60      	ldr	r7, [pc, #384]	@ (80021ac <JoystickTask+0x1c4>)
    hadc1.Instance->CR1 |= ADC_CR1_SCAN; // Bật chế độ Scan
 800202a:	681b      	ldr	r3, [r3, #0]
        if (adc_values[1] < JOY_THRESHOLD_LEFT) {
            command = JOY1_LEFT;
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
        } else if (adc_values[1] > JOY_THRESHOLD_RIGHT) {
            command = JOY1_RIGHT;
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 800202c:	4c60      	ldr	r4, [pc, #384]	@ (80021b0 <JoystickTask+0x1c8>)
    hadc1.Instance->CR1 |= ADC_CR1_SCAN; // Bật chế độ Scan
 800202e:	685a      	ldr	r2, [r3, #4]
 8002030:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002034:	605a      	str	r2, [r3, #4]
    hadc1.Instance->SQR1 &= ~(ADC_SQR1_L); // Xóa số lượng kênh
 8002036:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002038:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800203c:	62da      	str	r2, [r3, #44]	@ 0x2c
    hadc1.Instance->SQR1 |= (3 << 20); // Thiết lập 4 kênh (L = 3, vì đếm từ 0)
 800203e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
    GPIO_PinState lastJoy2ButtonState = GPIO_PIN_SET;
 8002040:	f04f 0801 	mov.w	r8, #1
    hadc1.Instance->SQR1 |= (3 << 20); // Thiết lập 4 kênh (L = 3, vì đếm từ 0)
 8002044:	f442 1240 	orr.w	r2, r2, #3145728	@ 0x300000
 8002048:	62da      	str	r2, [r3, #44]	@ 0x2c
    GPIO_PinState lastJoy1ButtonState = GPIO_PIN_SET;
 800204a:	4646      	mov	r6, r8
        HAL_ADC_Start(&hadc1);
 800204c:	4638      	mov	r0, r7
 800204e:	f008 f9a7 	bl	800a3a0 <HAL_ADC_Start>
        for (int i = 0; i < 4; i++) {
 8002052:	f10d 0918 	add.w	r9, sp, #24
 8002056:	2500      	movs	r5, #0
            HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8002058:	f04f 31ff 	mov.w	r1, #4294967295
 800205c:	4638      	mov	r0, r7
 800205e:	f008 fa38 	bl	800a4d2 <HAL_ADC_PollForConversion>
            adc_values[i] = HAL_ADC_GetValue(&hadc1);
 8002062:	4638      	mov	r0, r7
 8002064:	f008 fa88 	bl	800a578 <HAL_ADC_GetValue>
        for (int i = 0; i < 4; i++) {
 8002068:	3501      	adds	r5, #1
 800206a:	2d04      	cmp	r5, #4
            adc_values[i] = HAL_ADC_GetValue(&hadc1);
 800206c:	f849 0b04 	str.w	r0, [r9], #4
        for (int i = 0; i < 4; i++) {
 8002070:	d1f2      	bne.n	8002058 <JoystickTask+0x70>
        HAL_ADC_Stop(&hadc1);
 8002072:	4638      	mov	r0, r7
 8002074:	f008 fa12 	bl	800a49c <HAL_ADC_Stop>
        if (adc_values[1] < JOY_THRESHOLD_LEFT) {
 8002078:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800207c:	f5ba 7f7a 	cmp.w	sl, #1000	@ 0x3e8
 8002080:	d267      	bcs.n	8002152 <JoystickTask+0x16a>
            command = JOY1_LEFT;
 8002082:	2300      	movs	r3, #0
 8002084:	f88d 3017 	strb.w	r3, [sp, #23]
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 8002088:	6820      	ldr	r0, [r4, #0]
 800208a:	461a      	mov	r2, r3
 800208c:	f10d 0117 	add.w	r1, sp, #23
 8002090:	f00b f894 	bl	800d1bc <osMessageQueuePut>
        }

        // Trục Y
        if (adc_values[0] < JOY_THRESHOLD_LEFT) {
 8002094:	f8dd 9018 	ldr.w	r9, [sp, #24]
 8002098:	f5b9 7f7a 	cmp.w	r9, #1000	@ 0x3e8
 800209c:	d262      	bcs.n	8002164 <JoystickTask+0x17c>
            command = JOY1_UP;
 800209e:	2302      	movs	r3, #2
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
        }else if (adc_values[0] > JOY_THRESHOLD_RIGHT) {
			command = JOY1_DOWN;
 80020a0:	f88d 3017 	strb.w	r3, [sp, #23]
			osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 80020a4:	2300      	movs	r3, #0
 80020a6:	6820      	ldr	r0, [r4, #0]
 80020a8:	461a      	mov	r2, r3
 80020aa:	f10d 0117 	add.w	r1, sp, #23
 80020ae:	f00b f885 	bl	800d1bc <osMessageQueuePut>
		}

        // Xử lý nút bấm Joystick 1
        GPIO_PinState joy1ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY1_BUTTON_PIN);
 80020b2:	4840      	ldr	r0, [pc, #256]	@ (80021b4 <JoystickTask+0x1cc>)
 80020b4:	2104      	movs	r1, #4
 80020b6:	f008 fd3f 	bl	800ab38 <HAL_GPIO_ReadPin>
        if (joy1ButtonState == GPIO_PIN_RESET && lastJoy1ButtonState == GPIO_PIN_SET) {
 80020ba:	4605      	mov	r5, r0
 80020bc:	b958      	cbnz	r0, 80020d6 <JoystickTask+0xee>
 80020be:	2e01      	cmp	r6, #1
 80020c0:	d109      	bne.n	80020d6 <JoystickTask+0xee>
            command = JOY1_BUTTON;
 80020c2:	2308      	movs	r3, #8
 80020c4:	f88d 3017 	strb.w	r3, [sp, #23]
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 80020c8:	4602      	mov	r2, r0
 80020ca:	4603      	mov	r3, r0
 80020cc:	f10d 0117 	add.w	r1, sp, #23
 80020d0:	6820      	ldr	r0, [r4, #0]
 80020d2:	f00b f873 	bl	800d1bc <osMessageQueuePut>
        }
        lastJoy1ButtonState = joy1ButtonState;

        // Xử lý Joystick 2
        // Trục X
        if (adc_values[3] < JOY_THRESHOLD_LEFT) {
 80020d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80020d8:	9303      	str	r3, [sp, #12]
 80020da:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80020de:	d247      	bcs.n	8002170 <JoystickTask+0x188>
            command = JOY2_LEFT;
 80020e0:	2304      	movs	r3, #4
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
        } else if (adc_values[3] > JOY_THRESHOLD_RIGHT) {
            command = JOY2_RIGHT;
 80020e2:	f88d 3017 	strb.w	r3, [sp, #23]
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 80020e6:	2300      	movs	r3, #0
 80020e8:	6820      	ldr	r0, [r4, #0]
 80020ea:	461a      	mov	r2, r3
 80020ec:	f10d 0117 	add.w	r1, sp, #23
 80020f0:	f00b f864 	bl	800d1bc <osMessageQueuePut>
        }

        // Trục Y
        if (adc_values[2] < JOY_THRESHOLD_LEFT) {
 80020f4:	f8dd b020 	ldr.w	fp, [sp, #32]
 80020f8:	f5bb 7f7a 	cmp.w	fp, #1000	@ 0x3e8
 80020fc:	d23f      	bcs.n	800217e <JoystickTask+0x196>
            command = JOY2_UP;
 80020fe:	2306      	movs	r3, #6
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
        }
        else if (adc_values[2] > JOY_THRESHOLD_RIGHT) {
		   command = JOY2_DOWN;
 8002100:	f88d 3017 	strb.w	r3, [sp, #23]
		   osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 8002104:	2300      	movs	r3, #0
 8002106:	6820      	ldr	r0, [r4, #0]
 8002108:	461a      	mov	r2, r3
 800210a:	f10d 0117 	add.w	r1, sp, #23
 800210e:	f00b f855 	bl	800d1bc <osMessageQueuePut>
	   }
        // Xử lý nút bấm Joystick 2
        GPIO_PinState joy2ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY2_BUTTON_PIN);
 8002112:	4828      	ldr	r0, [pc, #160]	@ (80021b4 <JoystickTask+0x1cc>)
 8002114:	2108      	movs	r1, #8
 8002116:	f008 fd0f 	bl	800ab38 <HAL_GPIO_ReadPin>
        if (joy2ButtonState == GPIO_PIN_RESET && lastJoy2ButtonState == GPIO_PIN_SET) {
 800211a:	4606      	mov	r6, r0
 800211c:	b960      	cbnz	r0, 8002138 <JoystickTask+0x150>
 800211e:	f1b8 0f01 	cmp.w	r8, #1
 8002122:	d109      	bne.n	8002138 <JoystickTask+0x150>
            command = JOY2_BUTTON;
 8002124:	2309      	movs	r3, #9
 8002126:	f88d 3017 	strb.w	r3, [sp, #23]
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 800212a:	4602      	mov	r2, r0
 800212c:	4603      	mov	r3, r0
 800212e:	f10d 0117 	add.w	r1, sp, #23
 8002132:	6820      	ldr	r0, [r4, #0]
 8002134:	f00b f842 	bl	800d1bc <osMessageQueuePut>
        }
        lastJoy2ButtonState = joy2ButtonState;

        // Cập nhật bộ đếm thời gian
        tick_counter += 20;
 8002138:	4a1f      	ldr	r2, [pc, #124]	@ (80021b8 <JoystickTask+0x1d0>)
 800213a:	6813      	ldr	r3, [r2, #0]
 800213c:	3314      	adds	r3, #20
        if (tick_counter >= 500) {
 800213e:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8002142:	d222      	bcs.n	800218a <JoystickTask+0x1a2>
        tick_counter += 20;
 8002144:	6013      	str	r3, [r2, #0]
            sprintf(buffer, "JOY1: X=%lu, Y=%lu | JOY2: X=%lu, Y=%lu\r\n",
                    adc_values[0], adc_values[1], adc_values[2], adc_values[3]);
            uart_print(buffer);
        }

        osDelay(10); // Tạm dừng 10ms
 8002146:	200a      	movs	r0, #10
        lastJoy2ButtonState = joy2ButtonState;
 8002148:	46b0      	mov	r8, r6
        osDelay(10); // Tạm dừng 10ms
 800214a:	f00a ff51 	bl	800cff0 <osDelay>
        lastJoy1ButtonState = joy1ButtonState;
 800214e:	462e      	mov	r6, r5
    }
 8002150:	e77c      	b.n	800204c <JoystickTask+0x64>
        } else if (adc_values[1] > JOY_THRESHOLD_RIGHT) {
 8002152:	f640 33b8 	movw	r3, #3000	@ 0xbb8
 8002156:	459a      	cmp	sl, r3
 8002158:	d99c      	bls.n	8002094 <JoystickTask+0xac>
            command = JOY1_RIGHT;
 800215a:	2301      	movs	r3, #1
 800215c:	f88d 3017 	strb.w	r3, [sp, #23]
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 8002160:	2300      	movs	r3, #0
 8002162:	e791      	b.n	8002088 <JoystickTask+0xa0>
        }else if (adc_values[0] > JOY_THRESHOLD_RIGHT) {
 8002164:	f640 33b8 	movw	r3, #3000	@ 0xbb8
 8002168:	4599      	cmp	r9, r3
 800216a:	d9a2      	bls.n	80020b2 <JoystickTask+0xca>
			command = JOY1_DOWN;
 800216c:	2303      	movs	r3, #3
 800216e:	e797      	b.n	80020a0 <JoystickTask+0xb8>
        } else if (adc_values[3] > JOY_THRESHOLD_RIGHT) {
 8002170:	9a03      	ldr	r2, [sp, #12]
 8002172:	f640 33b8 	movw	r3, #3000	@ 0xbb8
 8002176:	429a      	cmp	r2, r3
 8002178:	d9bc      	bls.n	80020f4 <JoystickTask+0x10c>
            command = JOY2_RIGHT;
 800217a:	2305      	movs	r3, #5
 800217c:	e7b1      	b.n	80020e2 <JoystickTask+0xfa>
        else if (adc_values[2] > JOY_THRESHOLD_RIGHT) {
 800217e:	f640 33b8 	movw	r3, #3000	@ 0xbb8
 8002182:	459b      	cmp	fp, r3
 8002184:	d9c5      	bls.n	8002112 <JoystickTask+0x12a>
		   command = JOY2_DOWN;
 8002186:	2307      	movs	r3, #7
 8002188:	e7ba      	b.n	8002100 <JoystickTask+0x118>
            tick_counter = 0;
 800218a:	2300      	movs	r3, #0
 800218c:	6013      	str	r3, [r2, #0]
            sprintf(buffer, "JOY1: X=%lu, Y=%lu | JOY2: X=%lu, Y=%lu\r\n",
 800218e:	9b03      	ldr	r3, [sp, #12]
 8002190:	490a      	ldr	r1, [pc, #40]	@ (80021bc <JoystickTask+0x1d4>)
 8002192:	e9cd b300 	strd	fp, r3, [sp]
 8002196:	464a      	mov	r2, r9
 8002198:	4653      	mov	r3, sl
 800219a:	a812      	add	r0, sp, #72	@ 0x48
 800219c:	f027 ff60 	bl	802a060 <siprintf>
            uart_print(buffer);
 80021a0:	a812      	add	r0, sp, #72	@ 0x48
 80021a2:	f7ff ff11 	bl	8001fc8 <_Z10uart_printPKc>
 80021a6:	e7ce      	b.n	8002146 <JoystickTask+0x15e>
 80021a8:	0802b0c0 	.word	0x0802b0c0
 80021ac:	20002e10 	.word	0x20002e10
 80021b0:	20002dc0 	.word	0x20002dc0
 80021b4:	40021800 	.word	0x40021800
 80021b8:	20002db8 	.word	0x20002db8
 80021bc:	0802b5de 	.word	0x0802b5de

080021c0 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80021c0:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80021c2:	4b06      	ldr	r3, [pc, #24]	@ (80021dc <SPI5_Write+0x1c>)
{
 80021c4:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80021c8:	681b      	ldr	r3, [r3, #0]
 80021ca:	4805      	ldr	r0, [pc, #20]	@ (80021e0 <SPI5_Write+0x20>)
 80021cc:	2201      	movs	r2, #1
 80021ce:	f10d 0106 	add.w	r1, sp, #6
 80021d2:	f00a f86f 	bl	800c2b4 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80021d6:	b003      	add	sp, #12
 80021d8:	f85d fb04 	ldr.w	pc, [sp], #4
 80021dc:	2000000c 	.word	0x2000000c
 80021e0:	20002e8c 	.word	0x20002e8c

080021e4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80021e4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80021e6:	2064      	movs	r0, #100	@ 0x64
 80021e8:	f00a ff02 	bl	800cff0 <osDelay>
  for(;;)
 80021ec:	e7fb      	b.n	80021e6 <StartDefaultTask+0x2>
	...

080021f0 <SystemClock_Config>:
{
 80021f0:	b530      	push	{r4, r5, lr}
 80021f2:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80021f4:	2210      	movs	r2, #16
 80021f6:	2100      	movs	r1, #0
 80021f8:	a80a      	add	r0, sp, #40	@ 0x28
 80021fa:	f027 ff96 	bl	802a12a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80021fe:	2214      	movs	r2, #20
 8002200:	2100      	movs	r1, #0
 8002202:	a803      	add	r0, sp, #12
 8002204:	f027 ff91 	bl	802a12a <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8002208:	2400      	movs	r4, #0
 800220a:	4b1e      	ldr	r3, [pc, #120]	@ (8002284 <SystemClock_Config+0x94>)
 800220c:	9401      	str	r4, [sp, #4]
 800220e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002210:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8002214:	641a      	str	r2, [r3, #64]	@ 0x40
 8002216:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002218:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800221c:	9301      	str	r3, [sp, #4]
 800221e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002220:	4b19      	ldr	r3, [pc, #100]	@ (8002288 <SystemClock_Config+0x98>)
 8002222:	9402      	str	r4, [sp, #8]
 8002224:	681a      	ldr	r2, [r3, #0]
 8002226:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800222a:	601a      	str	r2, [r3, #0]
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8002232:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002234:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002236:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002238:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800223c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002240:	2502      	movs	r5, #2
 8002242:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8002246:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002248:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 360;
 800224c:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8002250:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002254:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8002256:	2304      	movs	r3, #4
 8002258:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800225a:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800225c:	f009 fad2 	bl	800b804 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8002260:	f009 fa96 	bl	800b790 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002264:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002266:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800226a:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 800226e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002272:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002276:	2105      	movs	r1, #5
 8002278:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800227a:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800227c:	f009 fc9e 	bl	800bbbc <HAL_RCC_ClockConfig>
}
 8002280:	b015      	add	sp, #84	@ 0x54
 8002282:	bd30      	pop	{r4, r5, pc}
 8002284:	40023800 	.word	0x40023800
 8002288:	40007000 	.word	0x40007000

0800228c <MX_ADC1_Init>:
void MX_ADC1_Init(void){
 800228c:	b082      	sub	sp, #8
    __HAL_RCC_ADC1_CLK_ENABLE();
 800228e:	2300      	movs	r3, #0
 8002290:	4a0f      	ldr	r2, [pc, #60]	@ (80022d0 <MX_ADC1_Init+0x44>)
 8002292:	9301      	str	r3, [sp, #4]
 8002294:	6c51      	ldr	r1, [r2, #68]	@ 0x44
      hadc1.Instance = ADC1;
 8002296:	480f      	ldr	r0, [pc, #60]	@ (80022d4 <MX_ADC1_Init+0x48>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8002298:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
 800229c:	6451      	str	r1, [r2, #68]	@ 0x44
 800229e:	6c52      	ldr	r2, [r2, #68]	@ 0x44
      hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80022a0:	6083      	str	r3, [r0, #8]
    __HAL_RCC_ADC1_CLK_ENABLE();
 80022a2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80022a6:	9201      	str	r2, [sp, #4]
 80022a8:	9a01      	ldr	r2, [sp, #4]
      hadc1.Instance = ADC1;
 80022aa:	4a0b      	ldr	r2, [pc, #44]	@ (80022d8 <MX_ADC1_Init+0x4c>)
      hadc1.Init.ScanConvMode = DISABLE;
 80022ac:	6103      	str	r3, [r0, #16]
      hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80022ae:	e9c0 2300 	strd	r2, r3, [r0]
      hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80022b2:	4a0a      	ldr	r2, [pc, #40]	@ (80022dc <MX_ADC1_Init+0x50>)
 80022b4:	6282      	str	r2, [r0, #40]	@ 0x28
      hadc1.Init.NbrOfConversion = 1;
 80022b6:	2201      	movs	r2, #1
      hadc1.Init.ContinuousConvMode = DISABLE;
 80022b8:	7603      	strb	r3, [r0, #24]
      hadc1.Init.DiscontinuousConvMode = DISABLE;
 80022ba:	f880 3020 	strb.w	r3, [r0, #32]
      hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80022be:	62c3      	str	r3, [r0, #44]	@ 0x2c
      hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80022c0:	60c3      	str	r3, [r0, #12]
      hadc1.Init.NbrOfConversion = 1;
 80022c2:	61c2      	str	r2, [r0, #28]
      hadc1.Init.DMAContinuousRequests = DISABLE;
 80022c4:	f880 3030 	strb.w	r3, [r0, #48]	@ 0x30
      hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80022c8:	6142      	str	r2, [r0, #20]
}
 80022ca:	b002      	add	sp, #8
    HAL_ADC_Init(&hadc1);
 80022cc:	f007 bfc2 	b.w	800a254 <HAL_ADC_Init>
 80022d0:	40023800 	.word	0x40023800
 80022d4:	20002e10 	.word	0x20002e10
 80022d8:	40012000 	.word	0x40012000
 80022dc:	0f000001 	.word	0x0f000001

080022e0 <MX_USART1_UART_Init>:
{
 80022e0:	b082      	sub	sp, #8
    __HAL_RCC_USART1_CLK_ENABLE();
 80022e2:	2300      	movs	r3, #0
 80022e4:	4a0d      	ldr	r2, [pc, #52]	@ (800231c <MX_USART1_UART_Init+0x3c>)
 80022e6:	9301      	str	r3, [sp, #4]
 80022e8:	6c51      	ldr	r1, [r2, #68]	@ 0x44
    huart1.Instance = USART1;
 80022ea:	480d      	ldr	r0, [pc, #52]	@ (8002320 <MX_USART1_UART_Init+0x40>)
    __HAL_RCC_USART1_CLK_ENABLE();
 80022ec:	f041 0110 	orr.w	r1, r1, #16
 80022f0:	6451      	str	r1, [r2, #68]	@ 0x44
 80022f2:	6c52      	ldr	r2, [r2, #68]	@ 0x44
    huart1.Init.BaudRate = 115200;
 80022f4:	490b      	ldr	r1, [pc, #44]	@ (8002324 <MX_USART1_UART_Init+0x44>)
    huart1.Init.Parity = UART_PARITY_NONE;
 80022f6:	6103      	str	r3, [r0, #16]
    __HAL_RCC_USART1_CLK_ENABLE();
 80022f8:	f002 0210 	and.w	r2, r2, #16
 80022fc:	9201      	str	r2, [sp, #4]
 80022fe:	9a01      	ldr	r2, [sp, #4]
    huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002300:	61c3      	str	r3, [r0, #28]
    huart1.Init.BaudRate = 115200;
 8002302:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002306:	e9c0 1200 	strd	r1, r2, [r0]
    huart1.Init.Mode = UART_MODE_TX_RX;
 800230a:	220c      	movs	r2, #12
    huart1.Init.StopBits = UART_STOPBITS_1;
 800230c:	e9c0 3302 	strd	r3, r3, [r0, #8]
    huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002310:	e9c0 2305 	strd	r2, r3, [r0, #20]
}
 8002314:	b002      	add	sp, #8
    if (HAL_UART_Init(&huart1) != HAL_OK)
 8002316:	f00a bccc 	b.w	800ccb2 <HAL_UART_Init>
 800231a:	bf00      	nop
 800231c:	40023800 	.word	0x40023800
 8002320:	20002dd0 	.word	0x20002dd0
 8002324:	40011000 	.word	0x40011000

08002328 <main>:
{
 8002328:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 800232c:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 800232e:	f007 ff4f 	bl	800a1d0 <HAL_Init>
  MX_ADC1_Init();
 8002332:	f7ff ffab 	bl	800228c <MX_ADC1_Init>
  SystemClock_Config();
 8002336:	f7ff ff5b 	bl	80021f0 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800233a:	2214      	movs	r2, #20
 800233c:	2100      	movs	r1, #0
 800233e:	a80d      	add	r0, sp, #52	@ 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002340:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002342:	f027 fef2 	bl	802a12a <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002346:	4bc5      	ldr	r3, [pc, #788]	@ (800265c <main+0x334>)
 8002348:	9400      	str	r4, [sp, #0]
 800234a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800234c:	48c4      	ldr	r0, [pc, #784]	@ (8002660 <main+0x338>)
  hi2c3.Instance = I2C3;
 800234e:	4dc5      	ldr	r5, [pc, #788]	@ (8002664 <main+0x33c>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002350:	f042 0210 	orr.w	r2, r2, #16
 8002354:	631a      	str	r2, [r3, #48]	@ 0x30
 8002356:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002358:	f002 0210 	and.w	r2, r2, #16
 800235c:	9200      	str	r2, [sp, #0]
 800235e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002360:	9401      	str	r4, [sp, #4]
 8002362:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002364:	f042 0220 	orr.w	r2, r2, #32
 8002368:	631a      	str	r2, [r3, #48]	@ 0x30
 800236a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800236c:	f002 0220 	and.w	r2, r2, #32
 8002370:	9201      	str	r2, [sp, #4]
 8002372:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002374:	9402      	str	r4, [sp, #8]
 8002376:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002378:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800237c:	631a      	str	r2, [r3, #48]	@ 0x30
 800237e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002380:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8002384:	9202      	str	r2, [sp, #8]
 8002386:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002388:	9403      	str	r4, [sp, #12]
 800238a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800238c:	f042 0204 	orr.w	r2, r2, #4
 8002390:	631a      	str	r2, [r3, #48]	@ 0x30
 8002392:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002394:	f002 0204 	and.w	r2, r2, #4
 8002398:	9203      	str	r2, [sp, #12]
 800239a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800239c:	9404      	str	r4, [sp, #16]
 800239e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023a0:	f042 0201 	orr.w	r2, r2, #1
 80023a4:	631a      	str	r2, [r3, #48]	@ 0x30
 80023a6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023a8:	f002 0201 	and.w	r2, r2, #1
 80023ac:	9204      	str	r2, [sp, #16]
 80023ae:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80023b0:	9405      	str	r4, [sp, #20]
 80023b2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023b4:	f042 0202 	orr.w	r2, r2, #2
 80023b8:	631a      	str	r2, [r3, #48]	@ 0x30
 80023ba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023bc:	f002 0202 	and.w	r2, r2, #2
 80023c0:	9205      	str	r2, [sp, #20]
 80023c2:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80023c4:	9406      	str	r4, [sp, #24]
 80023c6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023c8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80023cc:	631a      	str	r2, [r3, #48]	@ 0x30
 80023ce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023d0:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80023d4:	9206      	str	r2, [sp, #24]
 80023d6:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80023d8:	9407      	str	r4, [sp, #28]
 80023da:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023dc:	f042 0208 	orr.w	r2, r2, #8
 80023e0:	631a      	str	r2, [r3, #48]	@ 0x30
 80023e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023e4:	f003 0308 	and.w	r3, r3, #8
 80023e8:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80023ea:	4622      	mov	r2, r4
 80023ec:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80023ee:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80023f0:	f008 fba8 	bl	800ab44 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80023f4:	489c      	ldr	r0, [pc, #624]	@ (8002668 <main+0x340>)
 80023f6:	4622      	mov	r2, r4
 80023f8:	2104      	movs	r1, #4
 80023fa:	f008 fba3 	bl	800ab44 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80023fe:	4622      	mov	r2, r4
 8002400:	489a      	ldr	r0, [pc, #616]	@ (800266c <main+0x344>)
 8002402:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8002406:	f008 fb9d 	bl	800ab44 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800240a:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800240c:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002410:	233c      	movs	r3, #60	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002412:	4893      	ldr	r0, [pc, #588]	@ (8002660 <main+0x338>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002414:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002418:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800241a:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800241c:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002420:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002424:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002426:	f008 faa3 	bl	800a970 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800242a:	488f      	ldr	r0, [pc, #572]	@ (8002668 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800242c:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800242e:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002430:	e9cd b60d 	strd	fp, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002434:	9710      	str	r7, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002436:	f008 fa9b 	bl	800a970 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800243a:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800243e:	488b      	ldr	r0, [pc, #556]	@ (800266c <main+0x344>)
 8002440:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002442:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002446:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800244a:	f008 fa91 	bl	800a970 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_5|GPIO_PIN_7;
 800244e:	23a1      	movs	r3, #161	@ 0xa1
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002450:	4887      	ldr	r0, [pc, #540]	@ (8002670 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002452:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002454:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002456:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800245a:	e9cd 380d 	strd	r3, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800245e:	f008 fa87 	bl	800a970 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002462:	4881      	ldr	r0, [pc, #516]	@ (8002668 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002464:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002466:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002468:	e9cd 980d 	strd	r9, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800246c:	f008 fa80 	bl	800a970 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8002470:	230c      	movs	r3, #12
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002472:	4880      	ldr	r0, [pc, #512]	@ (8002674 <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002474:	960f      	str	r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002476:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002478:	e9cd 340d 	strd	r3, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800247c:	f008 fa78 	bl	800a970 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_9 | GPIO_PIN_10;
 8002480:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002484:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002486:	e9cd 370d 	strd	r3, r7, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800248a:	4879      	ldr	r0, [pc, #484]	@ (8002670 <main+0x348>)
  GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800248c:	2307      	movs	r3, #7
 800248e:	9311      	str	r3, [sp, #68]	@ 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002490:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002494:	f008 fa6c 	bl	800a970 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8002498:	4877      	ldr	r0, [pc, #476]	@ (8002678 <main+0x350>)
 800249a:	4a78      	ldr	r2, [pc, #480]	@ (800267c <main+0x354>)
 800249c:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800249e:	f008 f95d 	bl	800a75c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80024a2:	4b77      	ldr	r3, [pc, #476]	@ (8002680 <main+0x358>)
 80024a4:	4a77      	ldr	r2, [pc, #476]	@ (8002684 <main+0x35c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80024a6:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80024a8:	e9c5 3200 	strd	r3, r2, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80024ac:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80024ae:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80024b2:	e9c5 2404 	strd	r2, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80024b6:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80024ba:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80024be:	f008 fd4f 	bl	800af60 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80024c2:	2110      	movs	r1, #16
 80024c4:	4628      	mov	r0, r5
 80024c6:	f008 ff93 	bl	800b3f0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80024ca:	4621      	mov	r1, r4
 80024cc:	4628      	mov	r0, r5
 80024ce:	f008 ffae 	bl	800b42e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80024d2:	486d      	ldr	r0, [pc, #436]	@ (8002688 <main+0x360>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80024d4:	496d      	ldr	r1, [pc, #436]	@ (800268c <main+0x364>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80024d6:	6284      	str	r4, [r0, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80024d8:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80024dc:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80024e0:	f44f 7500 	mov.w	r5, #512	@ 0x200
 80024e4:	2218      	movs	r2, #24
  hspi5.Init.CRCPolynomial = 10;
 80024e6:	f04f 0a0a 	mov.w	sl, #10
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80024ea:	e9c0 5206 	strd	r5, r2, [r0, #24]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80024ee:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80024f2:	4d67      	ldr	r5, [pc, #412]	@ (8002690 <main+0x368>)
  hspi5.Init.CRCPolynomial = 10;
 80024f4:	f8c0 a02c 	str.w	sl, [r0, #44]	@ 0x2c
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80024f8:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80024fc:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8002500:	f009 fe7c 	bl	800c1fc <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8002504:	4a63      	ldr	r2, [pc, #396]	@ (8002694 <main+0x36c>)
  SdramTiming.LoadToActiveDelay = 2;
 8002506:	970d      	str	r7, [sp, #52]	@ 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8002508:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 800250c:	e9c5 2600 	strd	r2, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8002510:	2240      	movs	r2, #64	@ 0x40
 8002512:	e9c5 c204 	strd	ip, r2, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8002516:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800251a:	e9c5 2406 	strd	r2, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800251e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  SdramTiming.ExitSelfRefreshDelay = 7;
 8002522:	2307      	movs	r3, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8002524:	e9c5 2408 	strd	r2, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002528:	a90d      	add	r1, sp, #52	@ 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800252a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800252e:	4628      	mov	r0, r5
  SdramTiming.WriteRecoveryTime = 3;
 8002530:	e9cd 3810 	strd	r3, r8, [sp, #64]	@ 0x40
  SdramTiming.SelfRefreshTime = 4;
 8002534:	e9cd 3b0e 	strd	r3, fp, [sp, #56]	@ 0x38
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8002538:	62aa      	str	r2, [r5, #40]	@ 0x28
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800253a:	e9c5 4b02 	strd	r4, fp, [r5, #8]
  SdramTiming.RCDDelay = 2;
 800253e:	e9cd 7712 	strd	r7, r7, [sp, #72]	@ 0x48
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002542:	f009 fd3f 	bl	800bfc4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002546:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800254a:	a909      	add	r1, sp, #36	@ 0x24
 800254c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800254e:	e9cd 6909 	strd	r6, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8002552:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
 __IO uint32_t tmpmrd =0;
 8002556:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002558:	f009 fd54 	bl	800c004 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800255c:	4630      	mov	r0, r6
 800255e:	f007 fe63 	bl	800a228 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002562:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002566:	a909      	add	r1, sp, #36	@ 0x24
 8002568:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800256a:	e9cd 7909 	strd	r7, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 800256e:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002572:	f009 fd47 	bl	800c004 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002576:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800257a:	a909      	add	r1, sp, #36	@ 0x24
 800257c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800257e:	e9cd 8909 	strd	r8, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8002582:	e9cd b40b 	strd	fp, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002586:	f009 fd3d 	bl	800c004 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800258a:	f44f 730c 	mov.w	r3, #560	@ 0x230
 800258e:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8002590:	9b08      	ldr	r3, [sp, #32]
 8002592:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002594:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002598:	a909      	add	r1, sp, #36	@ 0x24
 800259a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800259c:	e9cd b909 	strd	fp, r9, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 80025a0:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80025a2:	f009 fd2f 	bl	800c004 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80025a6:	f240 516a 	movw	r1, #1386	@ 0x56a
 80025aa:	4628      	mov	r0, r5
 80025ac:	f009 fd48 	bl	800c040 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80025b0:	2234      	movs	r2, #52	@ 0x34
 80025b2:	4621      	mov	r1, r4
 80025b4:	eb0d 0002 	add.w	r0, sp, r2
 80025b8:	f027 fdb7 	bl	802a12a <memset>
  hltdc.Instance = LTDC;
 80025bc:	4d36      	ldr	r5, [pc, #216]	@ (8002698 <main+0x370>)
 80025be:	4b37      	ldr	r3, [pc, #220]	@ (800269c <main+0x374>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80025c0:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80025c2:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 80025c6:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 80025c8:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80025cc:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 80025ce:	f240 1e0d 	movw	lr, #269	@ 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 80025d2:	e9c5 3807 	strd	r3, r8, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80025d6:	f240 1343 	movw	r3, #323	@ 0x143
 80025da:	e9c5 e309 	strd	lr, r3, [r5, #36]	@ 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80025de:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80025e0:	f240 1347 	movw	r3, #327	@ 0x147
 80025e4:	f240 1817 	movw	r8, #279	@ 0x117
 80025e8:	e9c5 830b 	strd	r8, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80025ec:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 80025f0:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 80025f2:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80025f6:	f008 ffb5 	bl	800b564 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80025fa:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 80025fc:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 80025fe:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8002602:	f44f 6980 	mov.w	r9, #1024	@ 0x400
 8002606:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8002608:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.WindowY0 = 0;
 800260c:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8002610:	e9cd 9114 	strd	r9, r1, [sp, #80]	@ 0x50
  pLayerCfg.ImageWidth = 240;
 8002614:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002618:	a90d      	add	r1, sp, #52	@ 0x34
 800261a:	4622      	mov	r2, r4
 800261c:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800261e:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  LcdDrv = &ili9341_drv;
 8002622:	4d1f      	ldr	r5, [pc, #124]	@ (80026a0 <main+0x378>)
  pLayerCfg.ImageHeight = 320;
 8002624:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.WindowX0 = 0;
 8002626:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8002628:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 800262c:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002630:	f009 f863 	bl	800b6fa <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8002634:	4b1b      	ldr	r3, [pc, #108]	@ (80026a4 <main+0x37c>)
 8002636:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800263c:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 800263e:	4d1a      	ldr	r5, [pc, #104]	@ (80026a8 <main+0x380>)
  LcdDrv->DisplayOff();
 8002640:	68db      	ldr	r3, [r3, #12]
 8002642:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8002644:	4b19      	ldr	r3, [pc, #100]	@ (80026ac <main+0x384>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002646:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8002648:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 800264c:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8002650:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8002654:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
 8002658:	e02a      	b.n	80026b0 <main+0x388>
 800265a:	bf00      	nop
 800265c:	40023800 	.word	0x40023800
 8002660:	40021000 	.word	0x40021000
 8002664:	20002f8c 	.word	0x20002f8c
 8002668:	40020800 	.word	0x40020800
 800266c:	40020c00 	.word	0x40020c00
 8002670:	40020000 	.word	0x40020000
 8002674:	40021800 	.word	0x40021800
 8002678:	20003020 	.word	0x20003020
 800267c:	40023000 	.word	0x40023000
 8002680:	40005c00 	.word	0x40005c00
 8002684:	000186a0 	.word	0x000186a0
 8002688:	20002e8c 	.word	0x20002e8c
 800268c:	40015000 	.word	0x40015000
 8002690:	20002e58 	.word	0x20002e58
 8002694:	a0000140 	.word	0xa0000140
 8002698:	20002ee4 	.word	0x20002ee4
 800269c:	40016800 	.word	0x40016800
 80026a0:	20002dbc 	.word	0x20002dbc
 80026a4:	20000014 	.word	0x20000014
 80026a8:	20002fe0 	.word	0x20002fe0
 80026ac:	4002b000 	.word	0x4002b000
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80026b0:	f008 f864 	bl	800a77c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80026b4:	4631      	mov	r1, r6
 80026b6:	4628      	mov	r0, r5
 80026b8:	f008 f916 	bl	800a8e8 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 80026bc:	f7fe fcbc 	bl	8001038 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80026c0:	f7fe fcb9 	bl	8001036 <MX_TouchGFX_PreOSInit>
  MX_USART1_UART_Init();
 80026c4:	f7ff fe0c 	bl	80022e0 <MX_USART1_UART_Init>
  osKernelInitialize();
 80026c8:	f00a fc22 	bl	800cf10 <osKernelInitialize>
  joystickQueueHandle = osMessageQueueNew(10, sizeof(JoystickCommand_t), &joystickQueue_attributes);
 80026cc:	4a0f      	ldr	r2, [pc, #60]	@ (800270c <main+0x3e4>)
 80026ce:	4631      	mov	r1, r6
 80026d0:	4650      	mov	r0, sl
 80026d2:	f00a fd38 	bl	800d146 <osMessageQueueNew>
 80026d6:	4b0e      	ldr	r3, [pc, #56]	@ (8002710 <main+0x3e8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80026d8:	4a0e      	ldr	r2, [pc, #56]	@ (8002714 <main+0x3ec>)
  joystickQueueHandle = osMessageQueueNew(10, sizeof(JoystickCommand_t), &joystickQueue_attributes);
 80026da:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80026dc:	4621      	mov	r1, r4
 80026de:	480e      	ldr	r0, [pc, #56]	@ (8002718 <main+0x3f0>)
 80026e0:	f00a fc42 	bl	800cf68 <osThreadNew>
 80026e4:	4b0d      	ldr	r3, [pc, #52]	@ (800271c <main+0x3f4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80026e6:	4a0e      	ldr	r2, [pc, #56]	@ (8002720 <main+0x3f8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80026e8:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80026ea:	4621      	mov	r1, r4
 80026ec:	480d      	ldr	r0, [pc, #52]	@ (8002724 <main+0x3fc>)
 80026ee:	f00a fc3b 	bl	800cf68 <osThreadNew>
 80026f2:	4b0d      	ldr	r3, [pc, #52]	@ (8002728 <main+0x400>)
  joystickTaskHandle = osThreadNew(JoystickTask, NULL, &joystickTask_attributes);
 80026f4:	4a0d      	ldr	r2, [pc, #52]	@ (800272c <main+0x404>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80026f6:	6018      	str	r0, [r3, #0]
  joystickTaskHandle = osThreadNew(JoystickTask, NULL, &joystickTask_attributes);
 80026f8:	4621      	mov	r1, r4
 80026fa:	480d      	ldr	r0, [pc, #52]	@ (8002730 <main+0x408>)
 80026fc:	f00a fc34 	bl	800cf68 <osThreadNew>
 8002700:	4b0c      	ldr	r3, [pc, #48]	@ (8002734 <main+0x40c>)
 8002702:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8002704:	f00a fc16 	bl	800cf34 <osKernelStart>
  while (1)
 8002708:	e7fe      	b.n	8002708 <main+0x3e0>
 800270a:	bf00      	nop
 800270c:	0802c70c 	.word	0x0802c70c
 8002710:	20002dc0 	.word	0x20002dc0
 8002714:	0802c76c 	.word	0x0802c76c
 8002718:	080021e5 	.word	0x080021e5
 800271c:	20002dcc 	.word	0x20002dcc
 8002720:	0802c748 	.word	0x0802c748
 8002724:	08001047 	.word	0x08001047
 8002728:	20002dc8 	.word	0x20002dc8
 800272c:	0802c724 	.word	0x0802c724
 8002730:	08001fe9 	.word	0x08001fe9
 8002734:	20002dc4 	.word	0x20002dc4

08002738 <IOE_Init>:
void IOE_Init(void)
 8002738:	4770      	bx	lr

0800273a <IOE_ITConfig>:
void IOE_ITConfig(void)
 800273a:	4770      	bx	lr

0800273c <IOE_Write>:
{
 800273c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800273e:	4b09      	ldr	r3, [pc, #36]	@ (8002764 <IOE_Write+0x28>)
 8002740:	f88d 2017 	strb.w	r2, [sp, #23]
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	9302      	str	r3, [sp, #8]
 8002748:	f10d 0217 	add.w	r2, sp, #23
 800274c:	2301      	movs	r3, #1
 800274e:	9200      	str	r2, [sp, #0]
 8002750:	9301      	str	r3, [sp, #4]
 8002752:	460a      	mov	r2, r1
 8002754:	4601      	mov	r1, r0
 8002756:	4804      	ldr	r0, [pc, #16]	@ (8002768 <IOE_Write+0x2c>)
 8002758:	f008 fcaa 	bl	800b0b0 <HAL_I2C_Mem_Write>
}
 800275c:	b007      	add	sp, #28
 800275e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002762:	bf00      	nop
 8002764:	20000010 	.word	0x20000010
 8002768:	20002f8c 	.word	0x20002f8c

0800276c <IOE_Read>:
{
 800276c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800276e:	2300      	movs	r3, #0
 8002770:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8002774:	4b08      	ldr	r3, [pc, #32]	@ (8002798 <IOE_Read+0x2c>)
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	9302      	str	r3, [sp, #8]
{
 800277a:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800277c:	2301      	movs	r3, #1
 800277e:	f10d 0117 	add.w	r1, sp, #23
 8002782:	9100      	str	r1, [sp, #0]
 8002784:	9301      	str	r3, [sp, #4]
 8002786:	4601      	mov	r1, r0
 8002788:	4804      	ldr	r0, [pc, #16]	@ (800279c <IOE_Read+0x30>)
 800278a:	f008 fd21 	bl	800b1d0 <HAL_I2C_Mem_Read>
}
 800278e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8002792:	b007      	add	sp, #28
 8002794:	f85d fb04 	ldr.w	pc, [sp], #4
 8002798:	20000010 	.word	0x20000010
 800279c:	20002f8c 	.word	0x20002f8c

080027a0 <IOE_ReadMultiple>:
{
 80027a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80027a2:	4c08      	ldr	r4, [pc, #32]	@ (80027c4 <IOE_ReadMultiple+0x24>)
 80027a4:	6824      	ldr	r4, [r4, #0]
 80027a6:	9200      	str	r2, [sp, #0]
 80027a8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80027ac:	460a      	mov	r2, r1
 80027ae:	2301      	movs	r3, #1
 80027b0:	4601      	mov	r1, r0
 80027b2:	4805      	ldr	r0, [pc, #20]	@ (80027c8 <IOE_ReadMultiple+0x28>)
 80027b4:	f008 fd0c 	bl	800b1d0 <HAL_I2C_Mem_Read>
}
 80027b8:	3800      	subs	r0, #0
 80027ba:	bf18      	it	ne
 80027bc:	2001      	movne	r0, #1
 80027be:	b004      	add	sp, #16
 80027c0:	bd10      	pop	{r4, pc}
 80027c2:	bf00      	nop
 80027c4:	20000010 	.word	0x20000010
 80027c8:	20002f8c 	.word	0x20002f8c

080027cc <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 80027cc:	f007 bd2c 	b.w	800a228 <HAL_Delay>

080027d0 <LCD_IO_Init>:
{
 80027d0:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80027d2:	4c06      	ldr	r4, [pc, #24]	@ (80027ec <LCD_IO_Init+0x1c>)
 80027d4:	2200      	movs	r2, #0
 80027d6:	4620      	mov	r0, r4
 80027d8:	2104      	movs	r1, #4
 80027da:	f008 f9b3 	bl	800ab44 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80027de:	4620      	mov	r0, r4
 80027e0:	2201      	movs	r2, #1
}
 80027e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80027e6:	2104      	movs	r1, #4
 80027e8:	f008 b9ac 	b.w	800ab44 <HAL_GPIO_WritePin>
 80027ec:	40020800 	.word	0x40020800

080027f0 <LCD_IO_WriteData>:
{
 80027f0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80027f2:	4d0b      	ldr	r5, [pc, #44]	@ (8002820 <LCD_IO_WriteData+0x30>)
{
 80027f4:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80027f6:	2201      	movs	r2, #1
 80027f8:	480a      	ldr	r0, [pc, #40]	@ (8002824 <LCD_IO_WriteData+0x34>)
 80027fa:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80027fe:	f008 f9a1 	bl	800ab44 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002802:	2200      	movs	r2, #0
 8002804:	2104      	movs	r1, #4
 8002806:	4628      	mov	r0, r5
 8002808:	f008 f99c 	bl	800ab44 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800280c:	4620      	mov	r0, r4
 800280e:	f7ff fcd7 	bl	80021c0 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002812:	4628      	mov	r0, r5
 8002814:	2201      	movs	r2, #1
}
 8002816:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800281a:	2104      	movs	r1, #4
 800281c:	f008 b992 	b.w	800ab44 <HAL_GPIO_WritePin>
 8002820:	40020800 	.word	0x40020800
 8002824:	40020c00 	.word	0x40020c00

08002828 <LCD_IO_WriteReg>:
{
 8002828:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800282a:	4d0b      	ldr	r5, [pc, #44]	@ (8002858 <LCD_IO_WriteReg+0x30>)
{
 800282c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800282e:	2200      	movs	r2, #0
 8002830:	480a      	ldr	r0, [pc, #40]	@ (800285c <LCD_IO_WriteReg+0x34>)
 8002832:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002836:	f008 f985 	bl	800ab44 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800283a:	2200      	movs	r2, #0
 800283c:	2104      	movs	r1, #4
 800283e:	4628      	mov	r0, r5
 8002840:	f008 f980 	bl	800ab44 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8002844:	4620      	mov	r0, r4
 8002846:	f7ff fcbb 	bl	80021c0 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800284a:	4628      	mov	r0, r5
 800284c:	2201      	movs	r2, #1
}
 800284e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002852:	2104      	movs	r1, #4
 8002854:	f008 b976 	b.w	800ab44 <HAL_GPIO_WritePin>
 8002858:	40020800 	.word	0x40020800
 800285c:	40020c00 	.word	0x40020c00

08002860 <LCD_IO_ReadData>:
{
 8002860:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002862:	4e14      	ldr	r6, [pc, #80]	@ (80028b4 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002864:	4f14      	ldr	r7, [pc, #80]	@ (80028b8 <LCD_IO_ReadData+0x58>)
{
 8002866:	4605      	mov	r5, r0
 8002868:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800286a:	4630      	mov	r0, r6
 800286c:	2200      	movs	r2, #0
 800286e:	2104      	movs	r1, #4
 8002870:	f008 f968 	bl	800ab44 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002874:	2200      	movs	r2, #0
 8002876:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800287a:	4638      	mov	r0, r7
 800287c:	f008 f962 	bl	800ab44 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002880:	4628      	mov	r0, r5
 8002882:	f7ff fc9d 	bl	80021c0 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8002886:	4b0d      	ldr	r3, [pc, #52]	@ (80028bc <LCD_IO_ReadData+0x5c>)
 8002888:	480d      	ldr	r0, [pc, #52]	@ (80028c0 <LCD_IO_ReadData+0x60>)
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	4622      	mov	r2, r4
 800288e:	a901      	add	r1, sp, #4
 8002890:	f009 febc 	bl	800c60c <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002894:	4638      	mov	r0, r7
 8002896:	2201      	movs	r2, #1
 8002898:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 800289c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800289e:	f008 f951 	bl	800ab44 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80028a2:	4630      	mov	r0, r6
 80028a4:	2201      	movs	r2, #1
 80028a6:	2104      	movs	r1, #4
 80028a8:	f008 f94c 	bl	800ab44 <HAL_GPIO_WritePin>
}
 80028ac:	4620      	mov	r0, r4
 80028ae:	b003      	add	sp, #12
 80028b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80028b2:	bf00      	nop
 80028b4:	40020800 	.word	0x40020800
 80028b8:	40020c00 	.word	0x40020c00
 80028bc:	2000000c 	.word	0x2000000c
 80028c0:	20002e8c 	.word	0x20002e8c

080028c4 <LCD_Delay>:
  HAL_Delay(Delay);
 80028c4:	f007 bcb0 	b.w	800a228 <HAL_Delay>

080028c8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80028c8:	6802      	ldr	r2, [r0, #0]
 80028ca:	4b03      	ldr	r3, [pc, #12]	@ (80028d8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80028cc:	429a      	cmp	r2, r3
 80028ce:	d101      	bne.n	80028d4 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80028d0:	f007 bc98 	b.w	800a204 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80028d4:	4770      	bx	lr
 80028d6:	bf00      	nop
 80028d8:	40001000 	.word	0x40001000

080028dc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80028dc:	4770      	bx	lr
	...

080028e0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80028e0:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80028e2:	4b0e      	ldr	r3, [pc, #56]	@ (800291c <HAL_MspInit+0x3c>)
 80028e4:	2200      	movs	r2, #0
 80028e6:	9200      	str	r2, [sp, #0]
 80028e8:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80028ea:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 80028ee:	6459      	str	r1, [r3, #68]	@ 0x44
 80028f0:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80028f2:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 80028f6:	9100      	str	r1, [sp, #0]
 80028f8:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80028fa:	9201      	str	r2, [sp, #4]
 80028fc:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80028fe:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8002902:	6419      	str	r1, [r3, #64]	@ 0x40
 8002904:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002906:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800290a:	9301      	str	r3, [sp, #4]
 800290c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800290e:	210f      	movs	r1, #15
 8002910:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002914:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002916:	f007 bee1 	b.w	800a6dc <HAL_NVIC_SetPriority>
 800291a:	bf00      	nop
 800291c:	40023800 	.word	0x40023800

08002920 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002920:	6802      	ldr	r2, [r0, #0]
 8002922:	4b09      	ldr	r3, [pc, #36]	@ (8002948 <HAL_CRC_MspInit+0x28>)
 8002924:	429a      	cmp	r2, r3
{
 8002926:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002928:	d10b      	bne.n	8002942 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800292a:	2300      	movs	r3, #0
 800292c:	9301      	str	r3, [sp, #4]
 800292e:	4b07      	ldr	r3, [pc, #28]	@ (800294c <HAL_CRC_MspInit+0x2c>)
 8002930:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002932:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8002936:	631a      	str	r2, [r3, #48]	@ 0x30
 8002938:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800293a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800293e:	9301      	str	r3, [sp, #4]
 8002940:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 8002942:	b002      	add	sp, #8
 8002944:	4770      	bx	lr
 8002946:	bf00      	nop
 8002948:	40023000 	.word	0x40023000
 800294c:	40023800 	.word	0x40023800

08002950 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002950:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002952:	4b0f      	ldr	r3, [pc, #60]	@ (8002990 <HAL_DMA2D_MspInit+0x40>)
 8002954:	6802      	ldr	r2, [r0, #0]
 8002956:	429a      	cmp	r2, r3
 8002958:	d116      	bne.n	8002988 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800295a:	2200      	movs	r2, #0
 800295c:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8002960:	9201      	str	r2, [sp, #4]
 8002962:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002964:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8002968:	6319      	str	r1, [r3, #48]	@ 0x30
 800296a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800296c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002970:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002972:	2105      	movs	r1, #5
 8002974:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002976:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002978:	f007 feb0 	bl	800a6dc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800297c:	205a      	movs	r0, #90	@ 0x5a

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
 800297e:	b003      	add	sp, #12
 8002980:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002984:	f007 bedc 	b.w	800a740 <HAL_NVIC_EnableIRQ>
}
 8002988:	b003      	add	sp, #12
 800298a:	f85d fb04 	ldr.w	pc, [sp], #4
 800298e:	bf00      	nop
 8002990:	4002b000 	.word	0x4002b000

08002994 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002994:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002998:	4604      	mov	r4, r0
 800299a:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800299c:	2214      	movs	r2, #20
 800299e:	2100      	movs	r1, #0
 80029a0:	a803      	add	r0, sp, #12
 80029a2:	f027 fbc2 	bl	802a12a <memset>
  if(hi2c->Instance==I2C3)
 80029a6:	6822      	ldr	r2, [r4, #0]
 80029a8:	4b24      	ldr	r3, [pc, #144]	@ (8002a3c <HAL_I2C_MspInit+0xa8>)
 80029aa:	429a      	cmp	r2, r3
 80029ac:	d143      	bne.n	8002a36 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80029ae:	4c24      	ldr	r4, [pc, #144]	@ (8002a40 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80029b0:	4824      	ldr	r0, [pc, #144]	@ (8002a44 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80029b2:	2500      	movs	r5, #0
 80029b4:	9500      	str	r5, [sp, #0]
 80029b6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80029b8:	f043 0304 	orr.w	r3, r3, #4
 80029bc:	6323      	str	r3, [r4, #48]	@ 0x30
 80029be:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80029c0:	f003 0304 	and.w	r3, r3, #4
 80029c4:	9300      	str	r3, [sp, #0]
 80029c6:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029c8:	9501      	str	r5, [sp, #4]
 80029ca:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80029cc:	f043 0301 	orr.w	r3, r3, #1
 80029d0:	6323      	str	r3, [r4, #48]	@ 0x30
 80029d2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80029d4:	f003 0301 	and.w	r3, r3, #1
 80029d8:	9301      	str	r3, [sp, #4]
 80029da:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80029dc:	f04f 0912 	mov.w	r9, #18
 80029e0:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80029e4:	f04f 0801 	mov.w	r8, #1
 80029e8:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80029ea:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80029ec:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80029ee:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80029f2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80029f6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80029f8:	f007 ffba 	bl	800a970 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80029fc:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a00:	4811      	ldr	r0, [pc, #68]	@ (8002a48 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002a02:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a04:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002a06:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a0a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a0e:	f007 ffaf 	bl	800a970 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002a12:	9502      	str	r5, [sp, #8]
 8002a14:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002a16:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002a1a:	6423      	str	r3, [r4, #64]	@ 0x40
 8002a1c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002a1e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002a22:	9302      	str	r3, [sp, #8]
 8002a24:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002a26:	6a23      	ldr	r3, [r4, #32]
 8002a28:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002a2c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002a2e:	6a23      	ldr	r3, [r4, #32]
 8002a30:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002a34:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */

  }

}
 8002a36:	b009      	add	sp, #36	@ 0x24
 8002a38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002a3c:	40005c00 	.word	0x40005c00
 8002a40:	40023800 	.word	0x40023800
 8002a44:	40020800 	.word	0x40020800
 8002a48:	40020000 	.word	0x40020000

08002a4c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002a4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a4e:	b099      	sub	sp, #100	@ 0x64
 8002a50:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002a52:	2214      	movs	r2, #20
 8002a54:	2100      	movs	r1, #0
 8002a56:	a807      	add	r0, sp, #28
 8002a58:	f027 fb67 	bl	802a12a <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002a5c:	2230      	movs	r2, #48	@ 0x30
 8002a5e:	eb0d 0002 	add.w	r0, sp, r2
 8002a62:	2100      	movs	r1, #0
 8002a64:	f027 fb61 	bl	802a12a <memset>
  if(hltdc->Instance==LTDC)
 8002a68:	6822      	ldr	r2, [r4, #0]
 8002a6a:	4b5e      	ldr	r3, [pc, #376]	@ (8002be4 <HAL_LTDC_MspInit+0x198>)
 8002a6c:	429a      	cmp	r2, r3
 8002a6e:	f040 80b7 	bne.w	8002be0 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002a72:	2308      	movs	r3, #8
 8002a74:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002a76:	23c0      	movs	r3, #192	@ 0xc0
 8002a78:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002a7a:	2304      	movs	r3, #4
 8002a7c:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002a7e:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002a80:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8002a84:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002a86:	f009 f971 	bl	800bd6c <HAL_RCCEx_PeriphCLKConfig>
 8002a8a:	b108      	cbz	r0, 8002a90 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8002a8c:	f7ff ff26 	bl	80028dc <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002a90:	4b55      	ldr	r3, [pc, #340]	@ (8002be8 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a92:	4856      	ldr	r0, [pc, #344]	@ (8002bec <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002a94:	2400      	movs	r4, #0
 8002a96:	9400      	str	r4, [sp, #0]
 8002a98:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002a9a:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002a9e:	645a      	str	r2, [r3, #68]	@ 0x44
 8002aa0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002aa2:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8002aa6:	9200      	str	r2, [sp, #0]
 8002aa8:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002aaa:	9401      	str	r4, [sp, #4]
 8002aac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002aae:	f042 0220 	orr.w	r2, r2, #32
 8002ab2:	631a      	str	r2, [r3, #48]	@ 0x30
 8002ab4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002ab6:	f002 0220 	and.w	r2, r2, #32
 8002aba:	9201      	str	r2, [sp, #4]
 8002abc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002abe:	9402      	str	r4, [sp, #8]
 8002ac0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002ac2:	f042 0201 	orr.w	r2, r2, #1
 8002ac6:	631a      	str	r2, [r3, #48]	@ 0x30
 8002ac8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002aca:	f002 0201 	and.w	r2, r2, #1
 8002ace:	9202      	str	r2, [sp, #8]
 8002ad0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002ad2:	9403      	str	r4, [sp, #12]
 8002ad4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002ad6:	f042 0202 	orr.w	r2, r2, #2
 8002ada:	631a      	str	r2, [r3, #48]	@ 0x30
 8002adc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002ade:	f002 0202 	and.w	r2, r2, #2
 8002ae2:	9203      	str	r2, [sp, #12]
 8002ae4:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002ae6:	9404      	str	r4, [sp, #16]
 8002ae8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002aea:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002aee:	631a      	str	r2, [r3, #48]	@ 0x30
 8002af0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002af2:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8002af6:	9204      	str	r2, [sp, #16]
 8002af8:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002afa:	9405      	str	r4, [sp, #20]
 8002afc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002afe:	f042 0204 	orr.w	r2, r2, #4
 8002b02:	631a      	str	r2, [r3, #48]	@ 0x30
 8002b04:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002b06:	f002 0204 	and.w	r2, r2, #4
 8002b0a:	9205      	str	r2, [sp, #20]
 8002b0c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002b0e:	9406      	str	r4, [sp, #24]
 8002b10:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002b12:	f042 0208 	orr.w	r2, r2, #8
 8002b16:	631a      	str	r2, [r3, #48]	@ 0x30
 8002b18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b1a:	f003 0308 	and.w	r3, r3, #8
 8002b1e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b20:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b22:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002b24:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b26:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b28:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002b2c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b2e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b32:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002b36:	f007 ff1b 	bl	800a970 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002b3a:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b3e:	482c      	ldr	r0, [pc, #176]	@ (8002bf0 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b40:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b42:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b44:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002b48:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b4a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b4e:	f007 ff0f 	bl	800a970 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002b52:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b54:	4827      	ldr	r0, [pc, #156]	@ (8002bf4 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002b56:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b58:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b5a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b5e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b62:	f007 ff05 	bl	800a970 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002b66:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b6a:	4822      	ldr	r0, [pc, #136]	@ (8002bf4 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b6c:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b6e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b70:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b74:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b78:	f007 fefa 	bl	800a970 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002b7c:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b80:	481d      	ldr	r0, [pc, #116]	@ (8002bf8 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b82:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b84:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b86:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b8a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b8e:	f007 feef 	bl	800a970 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002b92:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002b94:	4819      	ldr	r0, [pc, #100]	@ (8002bfc <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b96:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002b98:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b9a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b9e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002ba2:	f007 fee5 	bl	800a970 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002ba6:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ba8:	4815      	ldr	r0, [pc, #84]	@ (8002c00 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002baa:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002bac:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002bae:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002bb2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002bb6:	f007 fedb 	bl	800a970 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002bba:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002bbe:	480e      	ldr	r0, [pc, #56]	@ (8002bf8 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002bc0:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002bc2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002bc4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002bc8:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002bcc:	f007 fed0 	bl	800a970 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002bd0:	2058      	movs	r0, #88	@ 0x58
 8002bd2:	4622      	mov	r2, r4
 8002bd4:	2105      	movs	r1, #5
 8002bd6:	f007 fd81 	bl	800a6dc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002bda:	2058      	movs	r0, #88	@ 0x58
 8002bdc:	f007 fdb0 	bl	800a740 <HAL_NVIC_EnableIRQ>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002be0:	b019      	add	sp, #100	@ 0x64
 8002be2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002be4:	40016800 	.word	0x40016800
 8002be8:	40023800 	.word	0x40023800
 8002bec:	40021400 	.word	0x40021400
 8002bf0:	40020000 	.word	0x40020000
 8002bf4:	40020400 	.word	0x40020400
 8002bf8:	40021800 	.word	0x40021800
 8002bfc:	40020800 	.word	0x40020800
 8002c00:	40020c00 	.word	0x40020c00

08002c04 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002c04:	b510      	push	{r4, lr}
 8002c06:	4604      	mov	r4, r0
 8002c08:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002c0a:	2214      	movs	r2, #20
 8002c0c:	2100      	movs	r1, #0
 8002c0e:	a803      	add	r0, sp, #12
 8002c10:	f027 fa8b 	bl	802a12a <memset>
  if(hspi->Instance==SPI5)
 8002c14:	6822      	ldr	r2, [r4, #0]
 8002c16:	4b14      	ldr	r3, [pc, #80]	@ (8002c68 <HAL_SPI_MspInit+0x64>)
 8002c18:	429a      	cmp	r2, r3
 8002c1a:	d123      	bne.n	8002c64 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002c1c:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002c20:	2100      	movs	r1, #0
 8002c22:	9101      	str	r1, [sp, #4]
 8002c24:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c26:	4811      	ldr	r0, [pc, #68]	@ (8002c6c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002c28:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002c2c:	645a      	str	r2, [r3, #68]	@ 0x44
 8002c2e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002c30:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002c34:	9201      	str	r2, [sp, #4]
 8002c36:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002c38:	9102      	str	r1, [sp, #8]
 8002c3a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002c3c:	f042 0220 	orr.w	r2, r2, #32
 8002c40:	631a      	str	r2, [r3, #48]	@ 0x30
 8002c42:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002c44:	f003 0320 	and.w	r3, r3, #32
 8002c48:	9302      	str	r3, [sp, #8]
 8002c4a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c4c:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8002c50:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002c52:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c54:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002c58:	2305      	movs	r3, #5
 8002c5a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c5e:	a903      	add	r1, sp, #12
 8002c60:	f007 fe86 	bl	800a970 <HAL_GPIO_Init>

  /* USER CODE END SPI5_MspInit 1 */

  }

}
 8002c64:	b008      	add	sp, #32
 8002c66:	bd10      	pop	{r4, pc}
 8002c68:	40015000 	.word	0x40015000
 8002c6c:	40021400 	.word	0x40021400

08002c70 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002c70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c74:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002c76:	2300      	movs	r3, #0
 8002c78:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002c7a:	4b2b      	ldr	r3, [pc, #172]	@ (8002d28 <HAL_SDRAM_MspInit+0xb8>)
 8002c7c:	681c      	ldr	r4, [r3, #0]
 8002c7e:	2c00      	cmp	r4, #0
 8002c80:	d14f      	bne.n	8002d22 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8002c82:	f04f 0801 	mov.w	r8, #1
 8002c86:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002c8a:	4b28      	ldr	r3, [pc, #160]	@ (8002d2c <HAL_SDRAM_MspInit+0xbc>)
 8002c8c:	9400      	str	r4, [sp, #0]
 8002c8e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c90:	4827      	ldr	r0, [pc, #156]	@ (8002d30 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002c92:	ea42 0208 	orr.w	r2, r2, r8
 8002c96:	639a      	str	r2, [r3, #56]	@ 0x38
 8002c98:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002c9a:	ea03 0308 	and.w	r3, r3, r8
 8002c9e:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ca0:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ca2:	2603      	movs	r6, #3
 8002ca4:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002ca6:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002ca8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002caa:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8002cae:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002cb2:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002cb6:	f007 fe5b 	bl	800a970 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002cba:	481e      	ldr	r0, [pc, #120]	@ (8002d34 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002cbc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002cbe:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002cc0:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002cc4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002cc8:	f007 fe52 	bl	800a970 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002ccc:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002cd0:	4819      	ldr	r0, [pc, #100]	@ (8002d38 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002cd2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002cd4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002cd6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002cda:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002cde:	f007 fe47 	bl	800a970 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002ce2:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002ce6:	4815      	ldr	r0, [pc, #84]	@ (8002d3c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ce8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002cea:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002cec:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002cf0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002cf4:	f007 fe3c 	bl	800a970 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002cf8:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002cfc:	4810      	ldr	r0, [pc, #64]	@ (8002d40 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002cfe:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002d00:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d02:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002d06:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002d0a:	f007 fe31 	bl	800a970 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002d0e:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d10:	480c      	ldr	r0, [pc, #48]	@ (8002d44 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002d12:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d14:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d16:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002d1a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d1e:	f007 fe27 	bl	800a970 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002d22:	b006      	add	sp, #24
 8002d24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002d28:	20003028 	.word	0x20003028
 8002d2c:	40023800 	.word	0x40023800
 8002d30:	40021400 	.word	0x40021400
 8002d34:	40020800 	.word	0x40020800
 8002d38:	40021800 	.word	0x40021800
 8002d3c:	40021000 	.word	0x40021000
 8002d40:	40020c00 	.word	0x40020c00
 8002d44:	40020400 	.word	0x40020400

08002d48 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002d48:	b570      	push	{r4, r5, r6, lr}
 8002d4a:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002d4c:	2300      	movs	r3, #0
 8002d4e:	9302      	str	r3, [sp, #8]
 8002d50:	4b20      	ldr	r3, [pc, #128]	@ (8002dd4 <HAL_InitTick+0x8c>)
 8002d52:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002d54:	f042 0210 	orr.w	r2, r2, #16
 8002d58:	641a      	str	r2, [r3, #64]	@ 0x40
 8002d5a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d5c:	f003 0310 	and.w	r3, r3, #16
 8002d60:	9302      	str	r3, [sp, #8]
{
 8002d62:	4605      	mov	r5, r0

/* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002d64:	a901      	add	r1, sp, #4
 8002d66:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002d68:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002d6a:	f008 ffe1 	bl	800bd30 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002d6e:	9b06      	ldr	r3, [sp, #24]
 8002d70:	bb4b      	cbnz	r3, 8002dc6 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002d72:	f008 ffbd 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002d76:	4e18      	ldr	r6, [pc, #96]	@ (8002dd8 <HAL_InitTick+0x90>)
 8002d78:	4b18      	ldr	r3, [pc, #96]	@ (8002ddc <HAL_InitTick+0x94>)
 8002d7a:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002d7c:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8002d80:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002d82:	4b17      	ldr	r3, [pc, #92]	@ (8002de0 <HAL_InitTick+0x98>)
 8002d84:	fbb0 f3f3 	udiv	r3, r0, r3
 8002d88:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002d8a:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002d8c:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002d8e:	2300      	movs	r3, #0
 8002d90:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002d92:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002d94:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002d96:	f009 fe09 	bl	800c9ac <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002d9a:	4604      	mov	r4, r0
 8002d9c:	b980      	cbnz	r0, 8002dc0 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002d9e:	4630      	mov	r0, r6
 8002da0:	f009 fcda 	bl	800c758 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002da4:	4604      	mov	r4, r0
 8002da6:	b958      	cbnz	r0, 8002dc0 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002da8:	2036      	movs	r0, #54	@ 0x36
 8002daa:	f007 fcc9 	bl	800a740 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002dae:	2d0f      	cmp	r5, #15
 8002db0:	d80d      	bhi.n	8002dce <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002db2:	4622      	mov	r2, r4
 8002db4:	4629      	mov	r1, r5
 8002db6:	2036      	movs	r0, #54	@ 0x36
 8002db8:	f007 fc90 	bl	800a6dc <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002dbc:	4b09      	ldr	r3, [pc, #36]	@ (8002de4 <HAL_InitTick+0x9c>)
 8002dbe:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002dc0:	4620      	mov	r0, r4
 8002dc2:	b008      	add	sp, #32
 8002dc4:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002dc6:	f008 ff93 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 8002dca:	0040      	lsls	r0, r0, #1
 8002dcc:	e7d3      	b.n	8002d76 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002dce:	2401      	movs	r4, #1
 8002dd0:	e7f6      	b.n	8002dc0 <HAL_InitTick+0x78>
 8002dd2:	bf00      	nop
 8002dd4:	40023800 	.word	0x40023800
 8002dd8:	2000302c 	.word	0x2000302c
 8002ddc:	40001000 	.word	0x40001000
 8002de0:	000f4240 	.word	0x000f4240
 8002de4:	2000007c 	.word	0x2000007c

08002de8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002de8:	4770      	bx	lr

08002dea <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002dea:	e7fe      	b.n	8002dea <HardFault_Handler>

08002dec <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002dec:	e7fe      	b.n	8002dec <MemManage_Handler>

08002dee <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002dee:	e7fe      	b.n	8002dee <BusFault_Handler>

08002df0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002df0:	e7fe      	b.n	8002df0 <UsageFault_Handler>

08002df2 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8002df2:	4770      	bx	lr

08002df4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002df4:	4801      	ldr	r0, [pc, #4]	@ (8002dfc <TIM6_DAC_IRQHandler+0x8>)
 8002df6:	f009 bced 	b.w	800c7d4 <HAL_TIM_IRQHandler>
 8002dfa:	bf00      	nop
 8002dfc:	2000302c 	.word	0x2000302c

08002e00 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002e00:	4801      	ldr	r0, [pc, #4]	@ (8002e08 <LTDC_IRQHandler+0x8>)
 8002e02:	f008 bc1d 	b.w	800b640 <HAL_LTDC_IRQHandler>
 8002e06:	bf00      	nop
 8002e08:	20002ee4 	.word	0x20002ee4

08002e0c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002e0c:	4801      	ldr	r0, [pc, #4]	@ (8002e14 <DMA2D_IRQHandler+0x8>)
 8002e0e:	f007 bce1 	b.w	800a7d4 <HAL_DMA2D_IRQHandler>
 8002e12:	bf00      	nop
 8002e14:	20002fe0 	.word	0x20002fe0

08002e18 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002e18:	2001      	movs	r0, #1
 8002e1a:	4770      	bx	lr

08002e1c <_kill>:

int _kill(int pid, int sig)
{
 8002e1c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002e1e:	f027 fa27 	bl	802a270 <__errno>
 8002e22:	2316      	movs	r3, #22
 8002e24:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002e26:	f04f 30ff 	mov.w	r0, #4294967295
 8002e2a:	bd08      	pop	{r3, pc}

08002e2c <_exit>:

void _exit (int status)
{
 8002e2c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002e2e:	f027 fa1f 	bl	802a270 <__errno>
 8002e32:	2316      	movs	r3, #22
 8002e34:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002e36:	e7fe      	b.n	8002e36 <_exit+0xa>

08002e38 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002e38:	b570      	push	{r4, r5, r6, lr}
 8002e3a:	460d      	mov	r5, r1
 8002e3c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e3e:	460e      	mov	r6, r1
 8002e40:	1b73      	subs	r3, r6, r5
 8002e42:	429c      	cmp	r4, r3
 8002e44:	dc01      	bgt.n	8002e4a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002e46:	4620      	mov	r0, r4
 8002e48:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002e4a:	f3af 8000 	nop.w
 8002e4e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e52:	e7f5      	b.n	8002e40 <_read+0x8>

08002e54 <_close>:
//}

int _close(int file)
{
	return -1;
}
 8002e54:	f04f 30ff 	mov.w	r0, #4294967295
 8002e58:	4770      	bx	lr

08002e5a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002e5a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002e5e:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002e60:	2000      	movs	r0, #0
 8002e62:	4770      	bx	lr

08002e64 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002e64:	2001      	movs	r0, #1
 8002e66:	4770      	bx	lr

08002e68 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002e68:	2000      	movs	r0, #0
 8002e6a:	4770      	bx	lr

08002e6c <_write>:
{
	errno = ENOMEM;
	return -1;
}
__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002e6c:	b510      	push	{r4, lr}
    HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len, HAL_MAX_DELAY);
 8002e6e:	f04f 33ff 	mov.w	r3, #4294967295
{
 8002e72:	4614      	mov	r4, r2
    HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len, HAL_MAX_DELAY);
 8002e74:	4802      	ldr	r0, [pc, #8]	@ (8002e80 <_write+0x14>)
 8002e76:	b292      	uxth	r2, r2
 8002e78:	f009 ff49 	bl	800cd0e <HAL_UART_Transmit>
    return len;
}
 8002e7c:	4620      	mov	r0, r4
 8002e7e:	bd10      	pop	{r4, pc}
 8002e80:	20002dd0 	.word	0x20002dd0

08002e84 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002e84:	4a0a      	ldr	r2, [pc, #40]	@ (8002eb0 <_sbrk+0x2c>)
 8002e86:	6811      	ldr	r1, [r2, #0]
{
 8002e88:	b508      	push	{r3, lr}
 8002e8a:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002e8c:	b909      	cbnz	r1, 8002e92 <_sbrk+0xe>
		heap_end = &end;
 8002e8e:	4909      	ldr	r1, [pc, #36]	@ (8002eb4 <_sbrk+0x30>)
 8002e90:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002e92:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002e94:	4669      	mov	r1, sp
 8002e96:	4403      	add	r3, r0
 8002e98:	428b      	cmp	r3, r1
 8002e9a:	d906      	bls.n	8002eaa <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002e9c:	f027 f9e8 	bl	802a270 <__errno>
 8002ea0:	230c      	movs	r3, #12
 8002ea2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002ea4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002ea8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002eaa:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002eac:	e7fc      	b.n	8002ea8 <_sbrk+0x24>
 8002eae:	bf00      	nop
 8002eb0:	20003074 	.word	0x20003074
 8002eb4:	20014ca0 	.word	0x20014ca0

08002eb8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_08 = 5; // verdana_20_4bpp
    static const touchgfx::FontId TYPOGRAPHY_09 = 5; // verdana_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 7;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002eb8:	4770      	bx	lr

08002eba <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002eba:	b508      	push	{r3, lr}
    switch (typography)
 8002ebc:	290c      	cmp	r1, #12
 8002ebe:	d824      	bhi.n	8002f0a <_ZN23ApplicationFontProvider7getFontEt+0x50>
 8002ec0:	e8df f001 	tbb	[pc, r1]
 8002ec4:	130f0b07 	.word	0x130f0b07
 8002ec8:	1f1f1f17 	.word	0x1f1f1f17
 8002ecc:	1f1f1b1f 	.word	0x1f1f1b1f
 8002ed0:	1f          	.byte	0x1f
 8002ed1:	00          	.byte	0x00
    {
    case Typography::DEFAULT:
        // verdana_17_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002ed2:	f004 fabd 	bl	8007450 <_ZN17TypedTextDatabase8getFontsEv>
 8002ed6:	6800      	ldr	r0, [r0, #0]
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
    default:
        return 0;
    }
}
 8002ed8:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002eda:	f004 fab9 	bl	8007450 <_ZN17TypedTextDatabase8getFontsEv>
 8002ede:	6840      	ldr	r0, [r0, #4]
 8002ee0:	e7fa      	b.n	8002ed8 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002ee2:	f004 fab5 	bl	8007450 <_ZN17TypedTextDatabase8getFontsEv>
 8002ee6:	6880      	ldr	r0, [r0, #8]
 8002ee8:	e7f6      	b.n	8002ed8 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002eea:	f004 fab1 	bl	8007450 <_ZN17TypedTextDatabase8getFontsEv>
 8002eee:	68c0      	ldr	r0, [r0, #12]
 8002ef0:	e7f2      	b.n	8002ed8 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 8002ef2:	f004 faad 	bl	8007450 <_ZN17TypedTextDatabase8getFontsEv>
 8002ef6:	6900      	ldr	r0, [r0, #16]
 8002ef8:	e7ee      	b.n	8002ed8 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 8002efa:	f004 faa9 	bl	8007450 <_ZN17TypedTextDatabase8getFontsEv>
 8002efe:	6980      	ldr	r0, [r0, #24]
 8002f00:	e7ea      	b.n	8002ed8 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 8002f02:	f004 faa5 	bl	8007450 <_ZN17TypedTextDatabase8getFontsEv>
 8002f06:	6940      	ldr	r0, [r0, #20]
 8002f08:	e7e6      	b.n	8002ed8 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
    switch (typography)
 8002f0a:	2000      	movs	r0, #0
 8002f0c:	e7e4      	b.n	8002ed8 <_ZN23ApplicationFontProvider7getFontEt+0x1e>

08002f0e <_ZN23ApplicationFontProviderD0Ev>:
 8002f0e:	b510      	push	{r4, lr}
 8002f10:	2104      	movs	r1, #4
 8002f12:	4604      	mov	r4, r0
 8002f14:	f025 fe90 	bl	8028c38 <_ZdlPvj>
 8002f18:	4620      	mov	r0, r4
 8002f1a:	bd10      	pop	{r4, pc}

08002f1c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002f1c:	4800      	ldr	r0, [pc, #0]	@ (8002f20 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002f1e:	4770      	bx	lr
 8002f20:	0802c7a4 	.word	0x0802c7a4

08002f24 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002f24:	2005      	movs	r0, #5
 8002f26:	4770      	bx	lr

08002f28 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002f28:	b513      	push	{r0, r1, r4, lr}
 8002f2a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002f2c:	b151      	cbz	r1, 8002f44 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f2e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002f30:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002f32:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f36:	aa01      	add	r2, sp, #4
 8002f38:	689c      	ldr	r4, [r3, #8]
 8002f3a:	f10d 0303 	add.w	r3, sp, #3
 8002f3e:	47a0      	blx	r4
        return glyph;
    }
 8002f40:	b002      	add	sp, #8
 8002f42:	bd10      	pop	{r4, pc}
            return 0;
 8002f44:	4608      	mov	r0, r1
 8002f46:	e7fb      	b.n	8002f40 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002f48 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002f48:	89c0      	ldrh	r0, [r0, #14]
 8002f4a:	4770      	bx	lr

08002f4c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002f4c:	8a00      	ldrh	r0, [r0, #16]
 8002f4e:	4770      	bx	lr

08002f50 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002f50:	88c0      	ldrh	r0, [r0, #6]
 8002f52:	4770      	bx	lr

08002f54 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002f54:	8880      	ldrh	r0, [r0, #4]
 8002f56:	4770      	bx	lr

08002f58 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002f58:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f5a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002f5e:	4770      	bx	lr

08002f60 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002f60:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f62:	09c0      	lsrs	r0, r0, #7
 8002f64:	4770      	bx	lr

08002f66 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002f66:	2000      	movs	r0, #0
 8002f68:	4770      	bx	lr
	...

08002f6c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002f6c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002f74 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002f70:	4770      	bx	lr
 8002f72:	bf00      	nop
 8002f74:	00000000 	.word	0x00000000

08002f78 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002f78:	4770      	bx	lr

08002f7a <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002f7a:	4770      	bx	lr

08002f7c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002f7c:	4770      	bx	lr

08002f7e <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002f7e:	4770      	bx	lr

08002f80 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002f80:	4770      	bx	lr

08002f82 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002f82:	4770      	bx	lr

08002f84 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002f84:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002f86:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 8002f88:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002f8a:	466d      	mov	r5, sp
        rect.width = width;
 8002f8c:	8101      	strh	r1, [r0, #8]
 8002f8e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002f92:	4601      	mov	r1, r0
    virtual void setWidth(int16_t width)
 8002f94:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002f96:	4628      	mov	r0, r5
 8002f98:	4798      	blx	r3
 8002f9a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002f9e:	343c      	adds	r4, #60	@ 0x3c
 8002fa0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002fa4:	b005      	add	sp, #20
 8002fa6:	bd30      	pop	{r4, r5, pc}

08002fa8 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002fa8:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002faa:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 8002fac:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002fae:	466d      	mov	r5, sp
        rect.height = height;
 8002fb0:	8141      	strh	r1, [r0, #10]
 8002fb2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002fb6:	4601      	mov	r1, r0
    virtual void setHeight(int16_t height)
 8002fb8:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002fba:	4628      	mov	r0, r5
 8002fbc:	4798      	blx	r3
 8002fbe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002fc2:	343c      	adds	r4, #60	@ 0x3c
 8002fc4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002fc8:	b005      	add	sp, #20
 8002fca:	bd30      	pop	{r4, r5, pc}

08002fcc <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002fcc:	2200      	movs	r2, #0
 8002fce:	8002      	strh	r2, [r0, #0]
 8002fd0:	8042      	strh	r2, [r0, #2]
 8002fd2:	8082      	strh	r2, [r0, #4]
 8002fd4:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002fd6:	4770      	bx	lr

08002fd8 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002fd8:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 8002fdc:	4770      	bx	lr

08002fde <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002fde:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002fe0:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002fe2:	4604      	mov	r4, r0
        setX(x);
 8002fe4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002fe6:	4615      	mov	r5, r2
        setX(x);
 8002fe8:	4798      	blx	r3
        setBaselineY(baselineY);
 8002fea:	6823      	ldr	r3, [r4, #0]
 8002fec:	4629      	mov	r1, r5
 8002fee:	4620      	mov	r0, r4
 8002ff0:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 8002ff2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002ff6:	4718      	bx	r3

08002ff8 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002ff8:	2000      	movs	r0, #0
 8002ffa:	4770      	bx	lr

08002ffc <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002ffc:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8002ffe:	4770      	bx	lr

08003000 <_ZN8touchgfx9DraggableINS_3BoxEED1Ev>:
 * can be freely moved around using the touch screen.
 *
 * @tparam T specifies the type to extend with the Draggable behavior.
 */
template <class T>
class Draggable : public T
 8003000:	4770      	bx	lr

08003002 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003002:	4770      	bx	lr

08003004 <_ZN23EasyReadyScreenViewBase11setupScreenEv>:
}

void EasyReadyScreenViewBase::setupScreen()
{

}
 8003004:	4770      	bx	lr

08003006 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8003006:	b510      	push	{r4, lr}
    }
 8003008:	2108      	movs	r1, #8
    virtual ~TypedText()
 800300a:	4604      	mov	r4, r0
    }
 800300c:	f025 fe14 	bl	8028c38 <_ZdlPvj>
 8003010:	4620      	mov	r0, r4
 8003012:	bd10      	pop	{r4, pc}

08003014 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003014:	b510      	push	{r4, lr}
 8003016:	214c      	movs	r1, #76	@ 0x4c
 8003018:	4604      	mov	r4, r0
 800301a:	f025 fe0d 	bl	8028c38 <_ZdlPvj>
 800301e:	4620      	mov	r0, r4
 8003020:	bd10      	pop	{r4, pc}

08003022 <_ZN8touchgfx9DraggableINS_3BoxEED0Ev>:
 8003022:	b510      	push	{r4, lr}
 8003024:	212c      	movs	r1, #44	@ 0x2c
 8003026:	4604      	mov	r4, r0
 8003028:	f025 fe06 	bl	8028c38 <_ZdlPvj>
 800302c:	4620      	mov	r0, r4
 800302e:	bd10      	pop	{r4, pc}

08003030 <_ZN8touchgfx9DraggableINS_3BoxEE15handleDragEventERKNS_9DragEventE>:
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 8003030:	890b      	ldrh	r3, [r1, #8]
 8003032:	898a      	ldrh	r2, [r1, #12]
 8003034:	1ad2      	subs	r2, r2, r3
        return dragNewX - dragOldX;
 8003036:	894b      	ldrh	r3, [r1, #10]
 8003038:	88c9      	ldrh	r1, [r1, #6]
 800303a:	1a59      	subs	r1, r3, r1
     * @param  event The drag event.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        T::handleDragEvent(event);
        T::moveRelative(event.getDeltaX(), event.getDeltaY());
 800303c:	b212      	sxth	r2, r2
 800303e:	b209      	sxth	r1, r1
 8003040:	f014 ba00 	b.w	8017444 <_ZN8touchgfx8Drawable12moveRelativeEss>

08003044 <_ZN23EasyReadyScreenViewBaseD1Ev>:
EasyReadyScreenViewBase::~EasyReadyScreenViewBase()
 8003044:	b510      	push	{r4, lr}
 8003046:	4b03      	ldr	r3, [pc, #12]	@ (8003054 <_ZN23EasyReadyScreenViewBaseD1Ev+0x10>)
 8003048:	6003      	str	r3, [r0, #0]
 800304a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800304c:	f011 fbe0 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003050:	4620      	mov	r0, r4
 8003052:	bd10      	pop	{r4, pc}
 8003054:	0802c918 	.word	0x0802c918

08003058 <_ZN23EasyReadyScreenViewBaseD0Ev>:
EasyReadyScreenViewBase::~EasyReadyScreenViewBase()
 8003058:	b510      	push	{r4, lr}
 800305a:	4b06      	ldr	r3, [pc, #24]	@ (8003074 <_ZN23EasyReadyScreenViewBaseD0Ev+0x1c>)
 800305c:	6003      	str	r3, [r0, #0]
 800305e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003060:	f011 fbd6 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003064:	4620      	mov	r0, r4
 8003066:	f241 51b8 	movw	r1, #5560	@ 0x15b8
 800306a:	f025 fde5 	bl	8028c38 <_ZdlPvj>
 800306e:	4620      	mov	r0, r4
 8003070:	bd10      	pop	{r4, pc}
 8003072:	bf00      	nop
 8003074:	0802c918 	.word	0x0802c918

08003078 <_ZNK8touchgfx3Box17invalidateContentEv>:
        return alpha;
    }

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 8003078:	b508      	push	{r3, lr}
    {
        if (alpha > 0)
 800307a:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
 800307e:	b10b      	cbz	r3, 8003084 <_ZNK8touchgfx3Box17invalidateContentEv+0xc>
        {
            Widget::invalidateContent();
 8003080:	f7fe feb6 	bl	8001df0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
        }
    }
 8003084:	bd08      	pop	{r3, pc}

08003086 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003086:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003088:	f7fe feb2 	bl	8001df0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800308c:	bd08      	pop	{r3, pc}
	...

08003090 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003090:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003092:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003094:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003096:	4b12      	ldr	r3, [pc, #72]	@ (80030e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003098:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800309a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800309c:	b28d      	uxth	r5, r1
 800309e:	b92b      	cbnz	r3, 80030ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80030a0:	4b10      	ldr	r3, [pc, #64]	@ (80030e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80030a2:	4a11      	ldr	r2, [pc, #68]	@ (80030e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80030a4:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80030a6:	4811      	ldr	r0, [pc, #68]	@ (80030ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80030a8:	f026 fe04 	bl	8029cb4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80030ac:	4910      	ldr	r1, [pc, #64]	@ (80030f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80030ae:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80030b0:	8809      	ldrh	r1, [r1, #0]
 80030b2:	4291      	cmp	r1, r2
 80030b4:	d803      	bhi.n	80030be <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80030b6:	4b0f      	ldr	r3, [pc, #60]	@ (80030f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80030b8:	4a0b      	ldr	r2, [pc, #44]	@ (80030e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80030ba:	216d      	movs	r1, #109	@ 0x6d
 80030bc:	e7f3      	b.n	80030a6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80030be:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80030c2:	4b0d      	ldr	r3, [pc, #52]	@ (80030f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80030c4:	681b      	ldr	r3, [r3, #0]
 80030c6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80030ca:	6803      	ldr	r3, [r0, #0]
 80030cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030ce:	4798      	blx	r3
 80030d0:	1a29      	subs	r1, r5, r0
 80030d2:	4633      	mov	r3, r6
 80030d4:	4620      	mov	r0, r4
 80030d6:	b209      	sxth	r1, r1
    }
 80030d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80030dc:	4718      	bx	r3
 80030de:	bf00      	nop
 80030e0:	20013fb8 	.word	0x20013fb8
 80030e4:	0802b638 	.word	0x0802b638
 80030e8:	0802b67a 	.word	0x0802b67a
 80030ec:	0802b6b5 	.word	0x0802b6b5
 80030f0:	20013fbc 	.word	0x20013fbc
 80030f4:	0802b6fc 	.word	0x0802b6fc
 80030f8:	20013fc0 	.word	0x20013fc0

080030fc <_ZN23EasyReadyScreenViewBase15handleTickEventEv>:

void EasyReadyScreenViewBase::handleTickEvent()
{
 80030fc:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 80030fe:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 8003102:	f8d4 35b4 	ldr.w	r3, [r4, #1460]	@ 0x5b4
 8003106:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8003108:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 800310a:	f8c4 35b4 	str.w	r3, [r4, #1460]	@ 0x5b4
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 800310e:	d106      	bne.n	800311e <_ZN23EasyReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003110:	f013 f878 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to EasyScreen
        //Go to EasyScreen with no screen transition
        application().gotoEasyScreenScreenNoTransition();
 8003114:	f001 f88a 	bl	800422c <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 8003118:	2300      	movs	r3, #0
 800311a:	f8c4 35b4 	str.w	r3, [r4, #1460]	@ 0x5b4
    }
}
 800311e:	bd10      	pop	{r4, pc}

08003120 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003120:	2200      	movs	r2, #0
 8003122:	f04f 31ff 	mov.w	r1, #4294967295
 8003126:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800312a:	6082      	str	r2, [r0, #8]
    }
 800312c:	4770      	bx	lr

0800312e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800312e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8003130:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8003132:	4604      	mov	r4, r0
        setX(x);
 8003134:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8003136:	4615      	mov	r5, r2
        setX(x);
 8003138:	4798      	blx	r3
        setY(y);
 800313a:	6823      	ldr	r3, [r4, #0]
 800313c:	4629      	mov	r1, r5
 800313e:	4620      	mov	r0, r4
 8003140:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8003142:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003146:	4718      	bx	r3

08003148 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003148:	b570      	push	{r4, r5, r6, lr}
 800314a:	4604      	mov	r4, r0
 800314c:	461d      	mov	r5, r3
 800314e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003152:	f7ff ffec 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003156:	6823      	ldr	r3, [r4, #0]
 8003158:	4629      	mov	r1, r5
 800315a:	4620      	mov	r0, r4
 800315c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800315e:	4798      	blx	r3
        setHeight(height);
 8003160:	6823      	ldr	r3, [r4, #0]
 8003162:	4631      	mov	r1, r6
 8003164:	4620      	mov	r0, r4
 8003166:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8003168:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800316c:	4718      	bx	r3
	...

08003170 <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 8003170:	4a09      	ldr	r2, [pc, #36]	@ (8003198 <_ZN8touchgfx3BoxC1Ev+0x28>)
 8003172:	6002      	str	r2, [r0, #0]
          touchable(false),
 8003174:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003178:	2200      	movs	r2, #0
 800317a:	8481      	strh	r1, [r0, #36]	@ 0x24
 800317c:	21ff      	movs	r1, #255	@ 0xff
 800317e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003182:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003186:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800318a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800318e:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : color(col)
 8003192:	6282      	str	r2, [r0, #40]	@ 0x28
    }
 8003194:	4770      	bx	lr
 8003196:	bf00      	nop
 8003198:	0802d5b8 	.word	0x0802d5b8

0800319c <_ZN8touchgfx8TextAreaC1Ev>:
          touchable(false),
 800319c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80031a0:	8481      	strh	r1, [r0, #36]	@ 0x24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80031a2:	490d      	ldr	r1, [pc, #52]	@ (80031d8 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80031a4:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 80031a6:	490d      	ldr	r1, [pc, #52]	@ (80031dc <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80031a8:	6281      	str	r1, [r0, #40]	@ 0x28
 80031aa:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80031ae:	8581      	strh	r1, [r0, #44]	@ 0x2c
 80031b0:	f44f 017f 	mov.w	r1, #16711680	@ 0xff0000
        : x(0), y(0), width(0), height(0)
 80031b4:	2200      	movs	r2, #0
 80031b6:	6341      	str	r1, [r0, #52]	@ 0x34
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80031b8:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 80031bc:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80031c0:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80031c4:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80031c8:	e9c0 2207 	strd	r2, r2, [r0, #28]
              text(0)
 80031cc:	e9c0 1210 	strd	r1, r2, [r0, #64]	@ 0x40
        : color(col)
 80031d0:	6302      	str	r2, [r0, #48]	@ 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80031d2:	8702      	strh	r2, [r0, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80031d4:	63c2      	str	r2, [r0, #60]	@ 0x3c
    }
 80031d6:	4770      	bx	lr
 80031d8:	0802d528 	.word	0x0802d528
 80031dc:	0802c810 	.word	0x0802c810

080031e0 <_ZN23EasyReadyScreenViewBaseC1Ev>:
EasyReadyScreenViewBase::EasyReadyScreenViewBase() :
 80031e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031e4:	4604      	mov	r4, r0
 80031e6:	b091      	sub	sp, #68	@ 0x44
    frameCountInteraction1Interval(0)
 80031e8:	4627      	mov	r7, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80031ea:	f04f 0b00 	mov.w	fp, #0
 80031ee:	f014 ff41 	bl	8018074 <_ZN8touchgfx6ScreenC1Ev>
 80031f2:	4bd4      	ldr	r3, [pc, #848]	@ (8003544 <_ZN23EasyReadyScreenViewBaseC1Ev+0x364>)
 80031f4:	f8c4 b03c 	str.w	fp, [r4, #60]	@ 0x3c
 80031f8:	f847 3b40 	str.w	r3, [r7], #64
 80031fc:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
 8003200:	4638      	mov	r0, r7
 8003202:	f7ff ffb5 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8003206:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800320a:	4630      	mov	r0, r6
 800320c:	f7ff ffb0 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8003210:	4640      	mov	r0, r8
 8003212:	f7ff ffad 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8003216:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 800321a:	4618      	mov	r0, r3
 800321c:	9305      	str	r3, [sp, #20]
 800321e:	f7ff ffa7 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8003222:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8003226:	4618      	mov	r0, r3
 8003228:	9306      	str	r3, [sp, #24]
 800322a:	f00e fca3 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 800322e:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 8003232:	4618      	mov	r0, r3
 8003234:	9309      	str	r3, [sp, #36]	@ 0x24
 8003236:	f7fe fe09 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800323a:	4bc3      	ldr	r3, [pc, #780]	@ (8003548 <_ZN23EasyReadyScreenViewBaseC1Ev+0x368>)
 800323c:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 8003240:	3324      	adds	r3, #36	@ 0x24
 8003242:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        : T()
 8003246:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 800324a:	4618      	mov	r0, r3
 800324c:	f8c4 b144 	str.w	fp, [r4, #324]	@ 0x144
 8003250:	4dbe      	ldr	r5, [pc, #760]	@ (800354c <_ZN23EasyReadyScreenViewBaseC1Ev+0x36c>)
 8003252:	9308      	str	r3, [sp, #32]
        touchable = touch;
 8003254:	f04f 0901 	mov.w	r9, #1
 8003258:	f7ff ff8a 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 800325c:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 8003260:	f504 7ad2 	add.w	sl, r4, #420	@ 0x1a4
 8003264:	4618      	mov	r0, r3
 8003266:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 800326a:	f884 9170 	strb.w	r9, [r4, #368]	@ 0x170
 800326e:	9307      	str	r3, [sp, #28]
 8003270:	f7ff ff7e 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8003274:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 8003278:	f884 919c 	strb.w	r9, [r4, #412]	@ 0x19c
 800327c:	4650      	mov	r0, sl
 800327e:	f7ff ff8d 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 8003282:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
 8003286:	4618      	mov	r0, r3
 8003288:	9302      	str	r3, [sp, #8]
 800328a:	f7ff ff87 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 800328e:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 8003292:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8003294:	4dae      	ldr	r5, [pc, #696]	@ (8003550 <_ZN23EasyReadyScreenViewBaseC1Ev+0x370>)
        : TextArea()
 8003296:	9303      	str	r3, [sp, #12]
 8003298:	f7ff ff80 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 800329c:	f504 7320 	add.w	r3, r4, #640	@ 0x280
        : TextAreaWithWildcardBase(), wc1(0)
 80032a0:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
        : TextArea()
 80032a4:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80032a6:	f8c4 b27c 	str.w	fp, [r4, #636]	@ 0x27c
        : TextArea()
 80032aa:	9304      	str	r3, [sp, #16]
 80032ac:	f7ff ff76 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 80032b0:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
        : TextAreaWithWildcardBase(), wc1(0)
 80032b4:	f8c4 5280 	str.w	r5, [r4, #640]	@ 0x280
 80032b8:	f8c4 b2c8 	str.w	fp, [r4, #712]	@ 0x2c8
    __background.setPosition(0, 0, 320, 240);
 80032bc:	25f0      	movs	r5, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 80032be:	f8c3 b5b4 	str.w	fp, [r3, #1460]	@ 0x5b4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80032c2:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 80032c6:	f504 703d 	add.w	r0, r4, #756	@ 0x2f4
 80032ca:	f011 fa97 	bl	80147fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80032ce:	465a      	mov	r2, fp
 80032d0:	4638      	mov	r0, r7
 80032d2:	9500      	str	r5, [sp, #0]
 80032d4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80032d8:	4659      	mov	r1, fp
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80032da:	f104 0904 	add.w	r9, r4, #4
 80032de:	f7ff ff33 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80032e2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80032e6:	4639      	mov	r1, r7
 80032e8:	66a3      	str	r3, [r4, #104]	@ 0x68
 80032ea:	4648      	mov	r0, r9
 80032ec:	f00b ff00 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032f0:	f04f 37ff 	mov.w	r7, #4294967295
    box3.setPosition(0, 0, 320, 240);
 80032f4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80032f8:	465a      	mov	r2, fp
 80032fa:	4630      	mov	r0, r6
 80032fc:	9500      	str	r5, [sp, #0]
 80032fe:	4659      	mov	r1, fp
 8003300:	f7ff ff22 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003304:	4631      	mov	r1, r6
 8003306:	f8c4 7094 	str.w	r7, [r4, #148]	@ 0x94
 800330a:	4648      	mov	r0, r9
 800330c:	f00b fef0 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 318, 236);
 8003310:	2202      	movs	r2, #2
 8003312:	23ec      	movs	r3, #236	@ 0xec
 8003314:	4611      	mov	r1, r2
 8003316:	4640      	mov	r0, r8
 8003318:	9300      	str	r3, [sp, #0]
 800331a:	f44f 739f 	mov.w	r3, #318	@ 0x13e
 800331e:	f7ff ff13 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003322:	4b8c      	ldr	r3, [pc, #560]	@ (8003554 <_ZN23EasyReadyScreenViewBaseC1Ev+0x374>)
 8003324:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8003328:	4641      	mov	r1, r8
 800332a:	4648      	mov	r0, r9
 800332c:	f00b fee0 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8003330:	465a      	mov	r2, fp
 8003332:	9805      	ldr	r0, [sp, #20]
 8003334:	9500      	str	r5, [sp, #0]
 8003336:	2303      	movs	r3, #3
 8003338:	21a0      	movs	r1, #160	@ 0xa0
 800333a:	f7ff ff05 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 800333e:	23dc      	movs	r3, #220	@ 0xdc
 8003340:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8003342:	f8c4 70ec 	str.w	r7, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8003346:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 800334a:	4648      	mov	r0, r9
 800334c:	f00b fed0 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(155, 114, 14, 14);
 8003350:	230e      	movs	r3, #14
 8003352:	2272      	movs	r2, #114	@ 0x72
 8003354:	9806      	ldr	r0, [sp, #24]
 8003356:	9300      	str	r3, [sp, #0]
 8003358:	219b      	movs	r1, #155	@ 0x9b
 800335a:	f7ff fef5 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800335e:	23c0      	movs	r3, #192	@ 0xc0
 8003360:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003364:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8003368:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 800336c:	4b7a      	ldr	r3, [pc, #488]	@ (8003558 <_ZN23EasyReadyScreenViewBaseC1Ev+0x378>)
 800336e:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003372:	f649 0361 	movw	r3, #39009	@ 0x9861
 8003376:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
        canvasPainter = &painter;
 800337a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800337c:	9906      	ldr	r1, [sp, #24]
 800337e:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        this->circleCenterY = CWRUtil::toQ5(y);
 8003382:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
 8003386:	4648      	mov	r0, r9
    paddle1.setPosition(8, 100, 5, 40);
 8003388:	2528      	movs	r5, #40	@ 0x28
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 800338a:	f8c4 b130 	str.w	fp, [r4, #304]	@ 0x130
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800338e:	f8c4 b128 	str.w	fp, [r4, #296]	@ 0x128
 8003392:	f00b fead 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003396:	2305      	movs	r3, #5
 8003398:	2264      	movs	r2, #100	@ 0x64
 800339a:	9808      	ldr	r0, [sp, #32]
 800339c:	9500      	str	r5, [sp, #0]
 800339e:	2108      	movs	r1, #8
 80033a0:	f7ff fed2 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 80033a4:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 80033a6:	f8c4 7174 	str.w	r7, [r4, #372]	@ 0x174
 80033aa:	4648      	mov	r0, r9
 80033ac:	f00b fea0 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 100, 5, 40);
 80033b0:	2305      	movs	r3, #5
 80033b2:	2264      	movs	r2, #100	@ 0x64
 80033b4:	9807      	ldr	r0, [sp, #28]
 80033b6:	9500      	str	r5, [sp, #0]
 80033b8:	f44f 719a 	mov.w	r1, #308	@ 0x134
 80033bc:	f7ff fec4 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
    player1.setPosition(116, 95, 19, 52);
 80033c0:	f04f 0834 	mov.w	r8, #52	@ 0x34
 80033c4:	9907      	ldr	r1, [sp, #28]
 80033c6:	f8c4 71a0 	str.w	r7, [r4, #416]	@ 0x1a0
 80033ca:	4648      	mov	r0, r9
        boundingArea = calculateBoundingArea();
 80033cc:	446d      	add	r5, sp
 80033ce:	f00b fe8f 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80033d2:	2313      	movs	r3, #19
 80033d4:	225f      	movs	r2, #95	@ 0x5f
 80033d6:	4650      	mov	r0, sl
 80033d8:	f8cd 8000 	str.w	r8, [sp]
 80033dc:	2174      	movs	r1, #116	@ 0x74
 80033de:	f7ff feb3 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 80033e2:	4651      	mov	r1, sl
        color = newColor;
 80033e4:	f8c4 71d4 	str.w	r7, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 80033e8:	4628      	mov	r0, r5
        linespace = space;
 80033ea:	f8a4 b1d8 	strh.w	fp, [r4, #472]	@ 0x1d8
        boundingArea = calculateBoundingArea();
 80033ee:	f00f fd45 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80033f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80033f6:	f504 76f0 	add.w	r6, r4, #480	@ 0x1e0
 80033fa:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        wideTextAction = action;
 80033fe:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8003402:	4651      	mov	r1, sl
        wideTextAction = action;
 8003404:	f884 21dd 	strb.w	r2, [r4, #477]	@ 0x1dd
        boundingArea = calculateBoundingArea();
 8003408:	4628      	mov	r0, r5
 800340a:	f00f fd37 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800340e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 8003412:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8003416:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 800341a:	4651      	mov	r1, sl
        rotation = textRotation;
 800341c:	f884 31dc 	strb.w	r3, [r4, #476]	@ 0x1dc
        boundingArea = calculateBoundingArea();
 8003420:	4628      	mov	r0, r5
 8003422:	f00f fd2b 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003426:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800342a:	2315      	movs	r3, #21
 800342c:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1OW4));
 8003430:	4650      	mov	r0, sl
 8003432:	4e4a      	ldr	r6, [pc, #296]	@ (800355c <_ZN23EasyReadyScreenViewBaseC1Ev+0x37c>)
 8003434:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8003438:	a90e      	add	r1, sp, #56	@ 0x38
 800343a:	960e      	str	r6, [sp, #56]	@ 0x38
 800343c:	f00f ffc6 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
 8003440:	f06f 0141 	mvn.w	r1, #65	@ 0x41
 8003444:	f884 11da 	strb.w	r1, [r4, #474]	@ 0x1da
 8003448:	4648      	mov	r0, r9
 800344a:	4651      	mov	r1, sl
 800344c:	f00b fe50 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(187, 95, 19, 52);
 8003450:	2313      	movs	r3, #19
 8003452:	225f      	movs	r2, #95	@ 0x5f
 8003454:	9802      	ldr	r0, [sp, #8]
 8003456:	f8cd 8000 	str.w	r8, [sp]
 800345a:	21bb      	movs	r1, #187	@ 0xbb
 800345c:	f7ff fe74 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003460:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 8003462:	f8c4 721c 	str.w	r7, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 8003466:	4628      	mov	r0, r5
        linespace = space;
 8003468:	f8a4 b220 	strh.w	fp, [r4, #544]	@ 0x220
        boundingArea = calculateBoundingArea();
 800346c:	f00f fd06 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003470:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003474:	f504 780a 	add.w	r8, r4, #552	@ 0x228
 8003478:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        wideTextAction = action;
 800347c:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8003480:	9902      	ldr	r1, [sp, #8]
        wideTextAction = action;
 8003482:	f884 2225 	strb.w	r2, [r4, #549]	@ 0x225
        boundingArea = calculateBoundingArea();
 8003486:	4628      	mov	r0, r5
        wideTextAction = action;
 8003488:	4617      	mov	r7, r2
        boundingArea = calculateBoundingArea();
 800348a:	f00f fcf7 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800348e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003492:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8003496:	9902      	ldr	r1, [sp, #8]
        rotation = textRotation;
 8003498:	f884 7224 	strb.w	r7, [r4, #548]	@ 0x224
        boundingArea = calculateBoundingArea();
 800349c:	4628      	mov	r0, r5
 800349e:	f00f fced 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80034a2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034a6:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ERV8));
 80034aa:	aa0e      	add	r2, sp, #56	@ 0x38
 80034ac:	2312      	movs	r3, #18
 80034ae:	4611      	mov	r1, r2
 80034b0:	9802      	ldr	r0, [sp, #8]
 80034b2:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 80034b6:	960e      	str	r6, [sp, #56]	@ 0x38
 80034b8:	f00f ff88 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
 80034bc:	f06f 0141 	mvn.w	r1, #65	@ 0x41
 80034c0:	f884 1222 	strb.w	r1, [r4, #546]	@ 0x222
 80034c4:	4648      	mov	r0, r9
 80034c6:	9902      	ldr	r1, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80034c8:	f8df a0ac 	ldr.w	sl, [pc, #172]	@ 8003578 <_ZN23EasyReadyScreenViewBaseC1Ev+0x398>
 80034cc:	f00b fe10 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(53, 112);
 80034d0:	2270      	movs	r2, #112	@ 0x70
 80034d2:	9803      	ldr	r0, [sp, #12]
 80034d4:	2135      	movs	r1, #53	@ 0x35
 80034d6:	f7ff fe2a 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80034da:	4b21      	ldr	r3, [pc, #132]	@ (8003560 <_ZN23EasyReadyScreenViewBaseC1Ev+0x380>)
 80034dc:	f8c4 3264 	str.w	r3, [r4, #612]	@ 0x264
        boundingArea = calculateBoundingArea();
 80034e0:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 80034e4:	9903      	ldr	r1, [sp, #12]
 80034e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80034ea:	f8a4 b268 	strh.w	fp, [r4, #616]	@ 0x268
        boundingArea = calculateBoundingArea();
 80034ee:	4628      	mov	r0, r5
 80034f0:	4798      	blx	r3
 80034f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034f6:	f504 771c 	add.w	r7, r4, #624	@ 0x270
        rotation = textRotation;
 80034fa:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 80034fe:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        rotation = textRotation;
 8003502:	f884 326c 	strb.w	r3, [r4, #620]	@ 0x26c
        boundingArea = calculateBoundingArea();
 8003506:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 800350a:	9903      	ldr	r1, [sp, #12]
 800350c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003510:	4628      	mov	r0, r5
 8003512:	4798      	blx	r3
 8003514:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003518:	f8da 3000 	ldr.w	r3, [sl]
 800351c:	e887 0007 	stmia.w	r7, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER1BUFFER).getText());
 8003520:	f504 7733 	add.w	r7, r4, #716	@ 0x2cc
 8003524:	b92b      	cbnz	r3, 8003532 <_ZN23EasyReadyScreenViewBaseC1Ev+0x352>
 8003526:	4b0f      	ldr	r3, [pc, #60]	@ (8003564 <_ZN23EasyReadyScreenViewBaseC1Ev+0x384>)
 8003528:	4a0f      	ldr	r2, [pc, #60]	@ (8003568 <_ZN23EasyReadyScreenViewBaseC1Ev+0x388>)
 800352a:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800352c:	480f      	ldr	r0, [pc, #60]	@ (800356c <_ZN23EasyReadyScreenViewBaseC1Ev+0x38c>)
 800352e:	f026 fbc1 	bl	8029cb4 <__assert_func>
 8003532:	4b0f      	ldr	r3, [pc, #60]	@ (8003570 <_ZN23EasyReadyScreenViewBaseC1Ev+0x390>)
 8003534:	881b      	ldrh	r3, [r3, #0]
 8003536:	2b09      	cmp	r3, #9
 8003538:	d820      	bhi.n	800357c <_ZN23EasyReadyScreenViewBaseC1Ev+0x39c>
 800353a:	4b0e      	ldr	r3, [pc, #56]	@ (8003574 <_ZN23EasyReadyScreenViewBaseC1Ev+0x394>)
 800353c:	4a0a      	ldr	r2, [pc, #40]	@ (8003568 <_ZN23EasyReadyScreenViewBaseC1Ev+0x388>)
 800353e:	2161      	movs	r1, #97	@ 0x61
 8003540:	e7f4      	b.n	800352c <_ZN23EasyReadyScreenViewBaseC1Ev+0x34c>
 8003542:	bf00      	nop
 8003544:	0802c918 	.word	0x0802c918
 8003548:	0802d214 	.word	0x0802d214
 800354c:	0802c8b0 	.word	0x0802c8b0
 8003550:	0802c820 	.word	0x0802c820
 8003554:	ff0c3837 	.word	0xff0c3837
 8003558:	ff990c0c 	.word	0xff990c0c
 800355c:	0802c810 	.word	0x0802c810
 8003560:	ffdeab5f 	.word	0xffdeab5f
 8003564:	0802b638 	.word	0x0802b638
 8003568:	0802b73a 	.word	0x0802b73a
 800356c:	0802b6b5 	.word	0x0802b6b5
 8003570:	20013fbc 	.word	0x20013fbc
 8003574:	0802b6fc 	.word	0x0802b6fc
 8003578:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 800357c:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 8003670 <_ZN23EasyReadyScreenViewBaseC1Ev+0x490>
 8003580:	2109      	movs	r1, #9
 8003582:	f8d8 0000 	ldr.w	r0, [r8]
 8003586:	f003 ff53 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 800358a:	4a36      	ldr	r2, [pc, #216]	@ (8003664 <_ZN23EasyReadyScreenViewBaseC1Ev+0x484>)
 800358c:	4603      	mov	r3, r0
 800358e:	210a      	movs	r1, #10
 8003590:	4638      	mov	r0, r7
 8003592:	f016 fa4f 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 8003596:	9803      	ldr	r0, [sp, #12]
        wc1 = value;
 8003598:	f8c4 727c 	str.w	r7, [r4, #636]	@ 0x27c
 800359c:	f00f fef6 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        alpha = newAlpha;
 80035a0:	27d2      	movs	r7, #210	@ 0xd2
        : typedTextId(id)
 80035a2:	2314      	movs	r3, #20
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HVEB));
 80035a4:	9803      	ldr	r0, [sp, #12]
 80035a6:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 80035aa:	a90e      	add	r1, sp, #56	@ 0x38
 80035ac:	960e      	str	r6, [sp, #56]	@ 0x38
 80035ae:	f00f ff0d 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035b2:	9903      	ldr	r1, [sp, #12]
 80035b4:	f884 726a 	strb.w	r7, [r4, #618]	@ 0x26a
 80035b8:	4648      	mov	r0, r9
 80035ba:	f00b fd99 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(243, 111);
 80035be:	226f      	movs	r2, #111	@ 0x6f
 80035c0:	9804      	ldr	r0, [sp, #16]
 80035c2:	21f3      	movs	r1, #243	@ 0xf3
 80035c4:	f7ff fdb3 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80035c8:	4b27      	ldr	r3, [pc, #156]	@ (8003668 <_ZN23EasyReadyScreenViewBaseC1Ev+0x488>)
 80035ca:	f8c4 32b0 	str.w	r3, [r4, #688]	@ 0x2b0
        boundingArea = calculateBoundingArea();
 80035ce:	f8d4 3280 	ldr.w	r3, [r4, #640]	@ 0x280
 80035d2:	9904      	ldr	r1, [sp, #16]
 80035d4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80035d8:	f8a4 b2b4 	strh.w	fp, [r4, #692]	@ 0x2b4
        boundingArea = calculateBoundingArea();
 80035dc:	4628      	mov	r0, r5
 80035de:	4798      	blx	r3
 80035e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80035e4:	f504 7b2f 	add.w	fp, r4, #700	@ 0x2bc
        rotation = textRotation;
 80035e8:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 80035ec:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 80035f0:	f884 32b8 	strb.w	r3, [r4, #696]	@ 0x2b8
        boundingArea = calculateBoundingArea();
 80035f4:	f8d4 3280 	ldr.w	r3, [r4, #640]	@ 0x280
 80035f8:	9904      	ldr	r1, [sp, #16]
 80035fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80035fe:	4628      	mov	r0, r5
 8003600:	4798      	blx	r3
 8003602:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003606:	f8da 3000 	ldr.w	r3, [sl]
 800360a:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER1BUFFER).getText());
 800360e:	f504 7538 	add.w	r5, r4, #736	@ 0x2e0
 8003612:	2b00      	cmp	r3, #0
 8003614:	d087      	beq.n	8003526 <_ZN23EasyReadyScreenViewBaseC1Ev+0x346>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003616:	4b15      	ldr	r3, [pc, #84]	@ (800366c <_ZN23EasyReadyScreenViewBaseC1Ev+0x48c>)
 8003618:	881b      	ldrh	r3, [r3, #0]
 800361a:	2b09      	cmp	r3, #9
 800361c:	d98d      	bls.n	800353a <_ZN23EasyReadyScreenViewBaseC1Ev+0x35a>
        return texts->getText(typedTextId);
 800361e:	f8d8 0000 	ldr.w	r0, [r8]
 8003622:	2109      	movs	r1, #9
 8003624:	f003 ff04 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8003628:	4a0e      	ldr	r2, [pc, #56]	@ (8003664 <_ZN23EasyReadyScreenViewBaseC1Ev+0x484>)
 800362a:	4603      	mov	r3, r0
 800362c:	210a      	movs	r1, #10
 800362e:	4628      	mov	r0, r5
 8003630:	f016 fa00 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 8003634:	9804      	ldr	r0, [sp, #16]
 8003636:	f8c4 52c8 	str.w	r5, [r4, #712]	@ 0x2c8
 800363a:	f00f fea7 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800363e:	2313      	movs	r3, #19
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WSW0));
 8003640:	9804      	ldr	r0, [sp, #16]
 8003642:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8003646:	a90e      	add	r1, sp, #56	@ 0x38
 8003648:	960e      	str	r6, [sp, #56]	@ 0x38
 800364a:	f00f febf 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800364e:	4648      	mov	r0, r9
 8003650:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 8003652:	f884 72b6 	strb.w	r7, [r4, #694]	@ 0x2b6
 8003656:	f00b fd4b 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800365a:	4620      	mov	r0, r4
 800365c:	b011      	add	sp, #68	@ 0x44
 800365e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003662:	bf00      	nop
 8003664:	0802b785 	.word	0x0802b785
 8003668:	ffdeab5f 	.word	0xffdeab5f
 800366c:	20013fbc 	.word	0x20013fbc
 8003670:	20013fc4 	.word	0x20013fc4

08003674 <_ZN18EasyScreenViewBase11setupScreenEv>:
}

void EasyScreenViewBase::setupScreen()
{

}
 8003674:	4770      	bx	lr
	...

08003678 <_ZN18EasyScreenViewBaseD1Ev>:
EasyScreenViewBase::~EasyScreenViewBase()
 8003678:	b510      	push	{r4, lr}
 800367a:	4b03      	ldr	r3, [pc, #12]	@ (8003688 <_ZN18EasyScreenViewBaseD1Ev+0x10>)
 800367c:	6003      	str	r3, [r0, #0]
 800367e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003680:	f011 f8c6 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003684:	4620      	mov	r0, r4
 8003686:	bd10      	pop	{r4, pc}
 8003688:	0802c94c 	.word	0x0802c94c

0800368c <_ZN18EasyScreenViewBaseD0Ev>:
EasyScreenViewBase::~EasyScreenViewBase()
 800368c:	b510      	push	{r4, lr}
 800368e:	4b06      	ldr	r3, [pc, #24]	@ (80036a8 <_ZN18EasyScreenViewBaseD0Ev+0x1c>)
 8003690:	6003      	str	r3, [r0, #0]
 8003692:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003694:	f011 f8bc 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003698:	4620      	mov	r0, r4
 800369a:	f241 61bc 	movw	r1, #5820	@ 0x16bc
 800369e:	f025 facb 	bl	8028c38 <_ZdlPvj>
 80036a2:	4620      	mov	r0, r4
 80036a4:	bd10      	pop	{r4, pc}
 80036a6:	bf00      	nop
 80036a8:	0802c94c 	.word	0x0802c94c

080036ac <_ZN18EasyScreenViewBaseC1Ev>:
EasyScreenViewBase::EasyScreenViewBase()
 80036ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036b0:	4604      	mov	r4, r0
 80036b2:	b095      	sub	sp, #84	@ 0x54
 80036b4:	4625      	mov	r5, r4
 80036b6:	2600      	movs	r6, #0
 80036b8:	f014 fcdc 	bl	8018074 <_ZN8touchgfx6ScreenC1Ev>
 80036bc:	4b98      	ldr	r3, [pc, #608]	@ (8003920 <_ZN18EasyScreenViewBaseC1Ev+0x274>)
 80036be:	63e6      	str	r6, [r4, #60]	@ 0x3c
 80036c0:	f845 3b40 	str.w	r3, [r5], #64
 80036c4:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 80036c8:	4628      	mov	r0, r5
 80036ca:	f7ff fd51 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 80036ce:	4650      	mov	r0, sl
 80036d0:	f7ff fd4e 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 80036d4:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 80036d8:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
 80036dc:	4618      	mov	r0, r3
 80036de:	9307      	str	r3, [sp, #28]
 80036e0:	f7ff fd46 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 80036e4:	4640      	mov	r0, r8
 80036e6:	f7ff fd43 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 80036ea:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 80036ee:	4618      	mov	r0, r3
 80036f0:	4f8c      	ldr	r7, [pc, #560]	@ (8003924 <_ZN18EasyScreenViewBaseC1Ev+0x278>)
 80036f2:	930a      	str	r3, [sp, #40]	@ 0x28
 80036f4:	f04f 0901 	mov.w	r9, #1
 80036f8:	f7ff fd3a 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 80036fc:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8003700:	4618      	mov	r0, r3
        : TextArea()
 8003702:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 8003706:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 800370a:	f884 9114 	strb.w	r9, [r4, #276]	@ 0x114
 800370e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003710:	f7ff fd2e 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8003714:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 8003718:	f884 9140 	strb.w	r9, [r4, #320]	@ 0x140
        : TextAreaWithWildcardBase(), wc1(0)
 800371c:	4f82      	ldr	r7, [pc, #520]	@ (8003928 <_ZN18EasyScreenViewBaseC1Ev+0x27c>)
        : TextArea()
 800371e:	4658      	mov	r0, fp
 8003720:	f504 79ca 	add.w	r9, r4, #404	@ 0x194
 8003724:	f7ff fd3a 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003728:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 800372c:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 8003730:	4648      	mov	r0, r9
 8003732:	f7ff fd33 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 8003736:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 800373a:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 800373e:	4618      	mov	r0, r3
 8003740:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 8003744:	9305      	str	r3, [sp, #20]
 8003746:	f7ff fd29 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 800374a:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 800374e:	4618      	mov	r0, r3
 8003750:	9306      	str	r3, [sp, #24]
 8003752:	f7ff fd23 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 8003756:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 800375a:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800375c:	4f73      	ldr	r7, [pc, #460]	@ (800392c <_ZN18EasyScreenViewBaseC1Ev+0x280>)
 800375e:	9308      	str	r3, [sp, #32]
 8003760:	f00e fa08 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 8003764:	f504 732e 	add.w	r3, r4, #696	@ 0x2b8
 8003768:	4618      	mov	r0, r3
 800376a:	930d      	str	r3, [sp, #52]	@ 0x34
 800376c:	f7fe fb6e 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003770:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003774:	f8c4 32c0 	str.w	r3, [r4, #704]	@ 0x2c0
 8003778:	f504 7333 	add.w	r3, r4, #716	@ 0x2cc
 800377c:	f8c4 72b8 	str.w	r7, [r4, #696]	@ 0x2b8
 8003780:	4618      	mov	r0, r3
 8003782:	f8c4 62c4 	str.w	r6, [r4, #708]	@ 0x2c4
 8003786:	9303      	str	r3, [sp, #12]
 8003788:	f00f f8aa 	bl	80128e0 <_ZN8touchgfx4LineC1Ev>
 800378c:	f504 734f 	add.w	r3, r4, #828	@ 0x33c
 8003790:	4618      	mov	r0, r3
 8003792:	930c      	str	r3, [sp, #48]	@ 0x30
 8003794:	f7fe fb5a 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003798:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800379c:	f8c4 3344 	str.w	r3, [r4, #836]	@ 0x344
 80037a0:	f504 7354 	add.w	r3, r4, #848	@ 0x350
 80037a4:	f8c4 733c 	str.w	r7, [r4, #828]	@ 0x33c
 80037a8:	4618      	mov	r0, r3
 80037aa:	f8c4 6348 	str.w	r6, [r4, #840]	@ 0x348
 80037ae:	9304      	str	r3, [sp, #16]
 80037b0:	f00f f896 	bl	80128e0 <_ZN8touchgfx4LineC1Ev>
 80037b4:	f504 7370 	add.w	r3, r4, #960	@ 0x3c0
 80037b8:	4618      	mov	r0, r3
 80037ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 80037bc:	f7fe fb46 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80037c0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80037c4:	f8c4 73c0 	str.w	r7, [r4, #960]	@ 0x3c0
 80037c8:	f8c4 33c8 	str.w	r3, [r4, #968]	@ 0x3c8
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80037cc:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 80037d0:	f504 707f 	add.w	r0, r4, #1020	@ 0x3fc
 80037d4:	f8c4 63cc 	str.w	r6, [r4, #972]	@ 0x3cc
 80037d8:	f011 f810 	bl	80147fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80037dc:	23f0      	movs	r3, #240	@ 0xf0
 80037de:	4632      	mov	r2, r6
 80037e0:	4628      	mov	r0, r5
 80037e2:	9300      	str	r3, [sp, #0]
 80037e4:	4631      	mov	r1, r6
 80037e6:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80037ea:	f7ff fcad 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037ee:	1d27      	adds	r7, r4, #4
 80037f0:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80037f4:	4629      	mov	r1, r5
 80037f6:	66a3      	str	r3, [r4, #104]	@ 0x68
 80037f8:	4638      	mov	r0, r7
 80037fa:	f00b fc79 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 80037fe:	23f0      	movs	r3, #240	@ 0xf0
 8003800:	4632      	mov	r2, r6
 8003802:	4650      	mov	r0, sl
 8003804:	9300      	str	r3, [sp, #0]
 8003806:	4631      	mov	r1, r6
 8003808:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800380c:	f7ff fc9c 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003810:	f04f 33ff 	mov.w	r3, #4294967295
 8003814:	4651      	mov	r1, sl
 8003816:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 800381a:	4638      	mov	r0, r7
 800381c:	f00b fc68 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 8003820:	2202      	movs	r2, #2
 8003822:	23ec      	movs	r3, #236	@ 0xec
 8003824:	4611      	mov	r1, r2
 8003826:	9807      	ldr	r0, [sp, #28]
 8003828:	9300      	str	r3, [sp, #0]
 800382a:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 800382e:	f7ff fc8b 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003832:	4b3f      	ldr	r3, [pc, #252]	@ (8003930 <_ZN18EasyScreenViewBaseC1Ev+0x284>)
 8003834:	9907      	ldr	r1, [sp, #28]
 8003836:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 800383a:	4638      	mov	r0, r7
 800383c:	f00b fc58 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8003840:	23f0      	movs	r3, #240	@ 0xf0
 8003842:	4632      	mov	r2, r6
 8003844:	4640      	mov	r0, r8
 8003846:	9300      	str	r3, [sp, #0]
 8003848:	21a0      	movs	r1, #160	@ 0xa0
 800384a:	2303      	movs	r3, #3
 800384c:	f7ff fc7c 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003850:	f04f 33ff 	mov.w	r3, #4294967295
 8003854:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8003858:	23dc      	movs	r3, #220	@ 0xdc
 800385a:	4641      	mov	r1, r8
    paddle1.setPosition(8, 100, 5, 40);
 800385c:	2528      	movs	r5, #40	@ 0x28
 800385e:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 8003862:	4638      	mov	r0, r7
 8003864:	f00b fc44 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003868:	2264      	movs	r2, #100	@ 0x64
 800386a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800386c:	9500      	str	r5, [sp, #0]
 800386e:	2305      	movs	r3, #5
 8003870:	2108      	movs	r1, #8
 8003872:	f7ff fc69 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003876:	f04f 33ff 	mov.w	r3, #4294967295
 800387a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800387c:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 8003880:	4638      	mov	r0, r7
 8003882:	f00b fc35 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(307, 100, 5, 40);
 8003886:	2264      	movs	r2, #100	@ 0x64
 8003888:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800388a:	9500      	str	r5, [sp, #0]
 800388c:	2305      	movs	r3, #5
 800388e:	f240 1133 	movw	r1, #307	@ 0x133
 8003892:	f7ff fc59 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003896:	f04f 33ff 	mov.w	r3, #4294967295
 800389a:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
 800389e:	9909      	ldr	r1, [sp, #36]	@ 0x24
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80038a0:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 800394c <_ZN18EasyScreenViewBaseC1Ev+0x2a0>
 80038a4:	4638      	mov	r0, r7
 80038a6:	f00b fc23 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 80038aa:	2216      	movs	r2, #22
 80038ac:	21b8      	movs	r1, #184	@ 0xb8
 80038ae:	4658      	mov	r0, fp
 80038b0:	f7ff fc3d 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80038b4:	4b1f      	ldr	r3, [pc, #124]	@ (8003934 <_ZN18EasyScreenViewBaseC1Ev+0x288>)
 80038b6:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 80038ba:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 80038be:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 80038c2:	ad0e      	add	r5, sp, #56	@ 0x38
 80038c4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80038c8:	4659      	mov	r1, fp
 80038ca:	4628      	mov	r0, r5
 80038cc:	4798      	blx	r3
 80038ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80038d2:	f504 78c2 	add.w	r8, r4, #388	@ 0x184
        rotation = textRotation;
 80038d6:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 80038da:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80038de:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 80038e2:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 80038e6:	4659      	mov	r1, fp
 80038e8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80038ec:	4628      	mov	r0, r5
 80038ee:	4798      	blx	r3
 80038f0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER1).getText());
 80038f4:	f504 7375 	add.w	r3, r4, #980	@ 0x3d4
 80038f8:	9307      	str	r3, [sp, #28]
 80038fa:	f8da 3000 	ldr.w	r3, [sl]
 80038fe:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8003902:	b92b      	cbnz	r3, 8003910 <_ZN18EasyScreenViewBaseC1Ev+0x264>
 8003904:	4b0c      	ldr	r3, [pc, #48]	@ (8003938 <_ZN18EasyScreenViewBaseC1Ev+0x28c>)
 8003906:	4a0d      	ldr	r2, [pc, #52]	@ (800393c <_ZN18EasyScreenViewBaseC1Ev+0x290>)
 8003908:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800390a:	480d      	ldr	r0, [pc, #52]	@ (8003940 <_ZN18EasyScreenViewBaseC1Ev+0x294>)
 800390c:	f026 f9d2 	bl	8029cb4 <__assert_func>
 8003910:	4b0c      	ldr	r3, [pc, #48]	@ (8003944 <_ZN18EasyScreenViewBaseC1Ev+0x298>)
 8003912:	881b      	ldrh	r3, [r3, #0]
 8003914:	2b06      	cmp	r3, #6
 8003916:	d81b      	bhi.n	8003950 <_ZN18EasyScreenViewBaseC1Ev+0x2a4>
 8003918:	4b0b      	ldr	r3, [pc, #44]	@ (8003948 <_ZN18EasyScreenViewBaseC1Ev+0x29c>)
 800391a:	4a08      	ldr	r2, [pc, #32]	@ (800393c <_ZN18EasyScreenViewBaseC1Ev+0x290>)
 800391c:	2161      	movs	r1, #97	@ 0x61
 800391e:	e7f4      	b.n	800390a <_ZN18EasyScreenViewBaseC1Ev+0x25e>
 8003920:	0802c94c 	.word	0x0802c94c
 8003924:	0802c8b0 	.word	0x0802c8b0
 8003928:	0802c820 	.word	0x0802c820
 800392c:	0802d214 	.word	0x0802d214
 8003930:	ff0c3837 	.word	0xff0c3837
 8003934:	ff595656 	.word	0xff595656
 8003938:	0802b638 	.word	0x0802b638
 800393c:	0802b73a 	.word	0x0802b73a
 8003940:	0802b6b5 	.word	0x0802b6b5
 8003944:	20013fbc 	.word	0x20013fbc
 8003948:	0802b6fc 	.word	0x0802b6fc
 800394c:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 8003950:	f8df 82d8 	ldr.w	r8, [pc, #728]	@ 8003c2c <_ZN18EasyScreenViewBaseC1Ev+0x580>
 8003954:	2106      	movs	r1, #6
 8003956:	f8d8 0000 	ldr.w	r0, [r8]
 800395a:	f003 fd69 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 800395e:	4aae      	ldr	r2, [pc, #696]	@ (8003c18 <_ZN18EasyScreenViewBaseC1Ev+0x56c>)
 8003960:	4603      	mov	r3, r0
 8003962:	210a      	movs	r1, #10
 8003964:	9807      	ldr	r0, [sp, #28]
 8003966:	f016 f865 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800396a:	9b07      	ldr	r3, [sp, #28]
 800396c:	f8c4 3190 	str.w	r3, [r4, #400]	@ 0x190
    score2.resizeToCurrentText();
 8003970:	4658      	mov	r0, fp
 8003972:	f00f fd0b 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003976:	4ba9      	ldr	r3, [pc, #676]	@ (8003c1c <_ZN18EasyScreenViewBaseC1Ev+0x570>)
 8003978:	9312      	str	r3, [sp, #72]	@ 0x48
 800397a:	f04f 0221 	mov.w	r2, #33	@ 0x21
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I1JY));
 800397e:	4658      	mov	r0, fp
 8003980:	a912      	add	r1, sp, #72	@ 0x48
 8003982:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
 8003986:	f00f fd21 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800398a:	4659      	mov	r1, fp
 800398c:	4638      	mov	r0, r7
 800398e:	f00b fbaf 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 8003992:	22c3      	movs	r2, #195	@ 0xc3
 8003994:	2175      	movs	r1, #117	@ 0x75
 8003996:	4648      	mov	r0, r9
 8003998:	f7ff fbc9 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800399c:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 80039a0:	4a9f      	ldr	r2, [pc, #636]	@ (8003c20 <_ZN18EasyScreenViewBaseC1Ev+0x574>)
        boundingArea = calculateBoundingArea();
 80039a2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 80039a6:	f8c4 21c4 	str.w	r2, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 80039aa:	4649      	mov	r1, r9
 80039ac:	4628      	mov	r0, r5
        linespace = space;
 80039ae:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 80039b2:	4798      	blx	r3
 80039b4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80039b8:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 80039bc:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 80039c0:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 80039c4:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 80039c8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 80039cc:	f884 21cc 	strb.w	r2, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 80039d0:	4649      	mov	r1, r9
 80039d2:	4628      	mov	r0, r5
 80039d4:	4798      	blx	r3
 80039d6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039da:	f8da 3000 	ldr.w	r3, [sl]
 80039de:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER1).getText());
 80039e2:	f504 7b7a 	add.w	fp, r4, #1000	@ 0x3e8
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	d08c      	beq.n	8003904 <_ZN18EasyScreenViewBaseC1Ev+0x258>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039ea:	4a8e      	ldr	r2, [pc, #568]	@ (8003c24 <_ZN18EasyScreenViewBaseC1Ev+0x578>)
 80039ec:	8813      	ldrh	r3, [r2, #0]
 80039ee:	2b05      	cmp	r3, #5
 80039f0:	d992      	bls.n	8003918 <_ZN18EasyScreenViewBaseC1Ev+0x26c>
        return texts->getText(typedTextId);
 80039f2:	f8d8 0000 	ldr.w	r0, [r8]
 80039f6:	2105      	movs	r1, #5
 80039f8:	f003 fd1a 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 80039fc:	4a86      	ldr	r2, [pc, #536]	@ (8003c18 <_ZN18EasyScreenViewBaseC1Ev+0x56c>)
 80039fe:	4603      	mov	r3, r0
 8003a00:	210a      	movs	r1, #10
 8003a02:	4658      	mov	r0, fp
 8003a04:	f016 f816 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score1.resizeToCurrentText();
 8003a08:	4648      	mov	r0, r9
 8003a0a:	f8c4 b1dc 	str.w	fp, [r4, #476]	@ 0x1dc
 8003a0e:	f00f fcbd 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003a12:	f04f 0820 	mov.w	r8, #32
 8003a16:	4b81      	ldr	r3, [pc, #516]	@ (8003c1c <_ZN18EasyScreenViewBaseC1Ev+0x570>)
 8003a18:	9312      	str	r3, [sp, #72]	@ 0x48
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NJHY));
 8003a1a:	4648      	mov	r0, r9
 8003a1c:	a912      	add	r1, sp, #72	@ 0x48
    player1.setPosition(140, 180, 19, 52);
 8003a1e:	f04f 0a34 	mov.w	sl, #52	@ 0x34
 8003a22:	f8ad 804c 	strh.w	r8, [sp, #76]	@ 0x4c
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NJHY));
 8003a26:	f00f fcd1 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a2a:	4649      	mov	r1, r9
 8003a2c:	4638      	mov	r0, r7
 8003a2e:	f00b fb5f 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(140, 180, 19, 52);
 8003a32:	2313      	movs	r3, #19
 8003a34:	22b4      	movs	r2, #180	@ 0xb4
 8003a36:	9805      	ldr	r0, [sp, #20]
 8003a38:	f8cd a000 	str.w	sl, [sp]
 8003a3c:	218c      	movs	r1, #140	@ 0x8c
 8003a3e:	f7ff fb83 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003a42:	f04f 31ff 	mov.w	r1, #4294967295
 8003a46:	f8c4 1210 	str.w	r1, [r4, #528]	@ 0x210
        boundingArea = calculateBoundingArea();
 8003a4a:	4628      	mov	r0, r5
 8003a4c:	9905      	ldr	r1, [sp, #20]
        linespace = space;
 8003a4e:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 8003a52:	f00f fa13 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a56:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a5a:	f504 7907 	add.w	r9, r4, #540	@ 0x21c
 8003a5e:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8003a62:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 8003a66:	9905      	ldr	r1, [sp, #20]
        rotation = textRotation;
 8003a68:	f884 2218 	strb.w	r2, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 8003a6c:	4628      	mov	r0, r5
 8003a6e:	f00f fa05 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a76:	4b69      	ldr	r3, [pc, #420]	@ (8003c1c <_ZN18EasyScreenViewBaseC1Ev+0x570>)
 8003a78:	9312      	str	r3, [sp, #72]	@ 0x48
 8003a7a:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8003a7e:	231f      	movs	r3, #31
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G2S8));
 8003a80:	9805      	ldr	r0, [sp, #20]
 8003a82:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
 8003a86:	a912      	add	r1, sp, #72	@ 0x48
        alpha = newAlpha;
 8003a88:	f04f 09be 	mov.w	r9, #190	@ 0xbe
 8003a8c:	f00f fc9e 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a90:	9905      	ldr	r1, [sp, #20]
 8003a92:	f884 9216 	strb.w	r9, [r4, #534]	@ 0x216
 8003a96:	4638      	mov	r0, r7
 8003a98:	f00b fb2a 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 8003a9c:	2313      	movs	r3, #19
 8003a9e:	9806      	ldr	r0, [sp, #24]
 8003aa0:	f8cd a000 	str.w	sl, [sp]
 8003aa4:	2207      	movs	r2, #7
 8003aa6:	21a5      	movs	r1, #165	@ 0xa5
 8003aa8:	f7ff fb4e 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003aac:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003ab0:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8003ab2:	f8c4 2258 	str.w	r2, [r4, #600]	@ 0x258
        boundingArea = calculateBoundingArea();
 8003ab6:	4628      	mov	r0, r5
        linespace = space;
 8003ab8:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 8003abc:	f00f f9de 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003ac0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ac4:	f504 7a19 	add.w	sl, r4, #612	@ 0x264
 8003ac8:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        rotation = textRotation;
 8003acc:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8003ad0:	9906      	ldr	r1, [sp, #24]
        rotation = textRotation;
 8003ad2:	f884 2260 	strb.w	r2, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8003ad6:	4628      	mov	r0, r5
 8003ad8:	f00f f9d0 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003adc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ae0:	4b4e      	ldr	r3, [pc, #312]	@ (8003c1c <_ZN18EasyScreenViewBaseC1Ev+0x570>)
 8003ae2:	9312      	str	r3, [sp, #72]	@ 0x48
 8003ae4:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
 8003ae8:	231e      	movs	r3, #30
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OD39));
 8003aea:	9806      	ldr	r0, [sp, #24]
 8003aec:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
 8003af0:	a912      	add	r1, sp, #72	@ 0x48
 8003af2:	f00f fc6b 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003af6:	9906      	ldr	r1, [sp, #24]
        alpha = newAlpha;
 8003af8:	f884 925e 	strb.w	r9, [r4, #606]	@ 0x25e
 8003afc:	4638      	mov	r0, r7
 8003afe:	f00b faf7 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8003b02:	230e      	movs	r3, #14
 8003b04:	2272      	movs	r2, #114	@ 0x72
 8003b06:	9808      	ldr	r0, [sp, #32]
 8003b08:	9300      	str	r3, [sp, #0]
 8003b0a:	219a      	movs	r1, #154	@ 0x9a
 8003b0c:	f7ff fb1c 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8003b10:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 8003b12:	e9c4 33a7 	strd	r3, r3, [r4, #668]	@ 0x29c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003b16:	23c0      	movs	r3, #192	@ 0xc0
 8003b18:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003b1c:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8003b20:	f8c4 32ac 	str.w	r3, [r4, #684]	@ 0x2ac
 8003b24:	4b40      	ldr	r3, [pc, #256]	@ (8003c28 <_ZN18EasyScreenViewBaseC1Ev+0x57c>)
 8003b26:	f8c4 32c4 	str.w	r3, [r4, #708]	@ 0x2c4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003b2a:	f649 0361 	movw	r3, #39009	@ 0x9861
 8003b2e:	f8a4 32c8 	strh.w	r3, [r4, #712]	@ 0x2c8
 8003b32:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003b34:	9908      	ldr	r1, [sp, #32]
 8003b36:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
 8003b3a:	4638      	mov	r0, r7
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8003b3c:	f8c4 62b0 	str.w	r6, [r4, #688]	@ 0x2b0
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8003b40:	f8c4 62a8 	str.w	r6, [r4, #680]	@ 0x2a8
 8003b44:	f00b fad4 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(13, 114, 33, 19);
 8003b48:	2313      	movs	r3, #19
 8003b4a:	9803      	ldr	r0, [sp, #12]
 8003b4c:	9300      	str	r3, [sp, #0]
 8003b4e:	2272      	movs	r2, #114	@ 0x72
 8003b50:	2321      	movs	r3, #33	@ 0x21
 8003b52:	210d      	movs	r1, #13
 8003b54:	f7ff faf8 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b58:	f04f 33ff 	mov.w	r3, #4294967295
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003b5c:	22a0      	movs	r2, #160	@ 0xa0
 8003b5e:	f8c4 3348 	str.w	r3, [r4, #840]	@ 0x348
 8003b62:	f8a4 334c 	strh.w	r3, [r4, #844]	@ 0x34c
 8003b66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003b68:	f8c4 32f4 	str.w	r3, [r4, #756]	@ 0x2f4
 8003b6c:	4611      	mov	r1, r2
 8003b6e:	9803      	ldr	r0, [sp, #12]
 8003b70:	f00e ffcc 	bl	8012b0c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003b74:	9803      	ldr	r0, [sp, #12]
 8003b76:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8003b7a:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 8003b7e:	f00e ffd0 	bl	8012b22 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003b82:	f8d4 3308 	ldr.w	r3, [r4, #776]	@ 0x308
 8003b86:	4543      	cmp	r3, r8
 8003b88:	d004      	beq.n	8003b94 <_ZN18EasyScreenViewBaseC1Ev+0x4e8>
            return;
        }

        lineWidthQ5 = widthQ5;

        updateCachedShape();
 8003b8a:	9803      	ldr	r0, [sp, #12]
        lineWidthQ5 = widthQ5;
 8003b8c:	f8c4 8308 	str.w	r8, [r4, #776]	@ 0x308
        updateCachedShape();
 8003b90:	f00e fec6 	bl	8012920 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8003b94:	9803      	ldr	r0, [sp, #12]
 8003b96:	2100      	movs	r1, #0
 8003b98:	f00e ffce 	bl	8012b38 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 8003b9c:	235f      	movs	r3, #95	@ 0x5f
 8003b9e:	9903      	ldr	r1, [sp, #12]
 8003ba0:	f884 32f2 	strb.w	r3, [r4, #754]	@ 0x2f2
 8003ba4:	4638      	mov	r0, r7
 8003ba6:	f00b faa3 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(268, 114, 33, 19);
 8003baa:	2313      	movs	r3, #19
 8003bac:	9804      	ldr	r0, [sp, #16]
 8003bae:	9300      	str	r3, [sp, #0]
 8003bb0:	2272      	movs	r2, #114	@ 0x72
 8003bb2:	2321      	movs	r3, #33	@ 0x21
 8003bb4:	f44f 7186 	mov.w	r1, #268	@ 0x10c
 8003bb8:	f7ff fac6 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003bbc:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003bc0:	22a0      	movs	r2, #160	@ 0xa0
 8003bc2:	f8c4 33cc 	str.w	r3, [r4, #972]	@ 0x3cc
 8003bc6:	f8a4 33d0 	strh.w	r3, [r4, #976]	@ 0x3d0
        canvasPainter = &painter;
 8003bca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003bcc:	f8c4 3378 	str.w	r3, [r4, #888]	@ 0x378
 8003bd0:	4611      	mov	r1, r2
 8003bd2:	9804      	ldr	r0, [sp, #16]
 8003bd4:	f00e ff9a 	bl	8012b0c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003bd8:	9804      	ldr	r0, [sp, #16]
 8003bda:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8003bde:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 8003be2:	f00e ff9e 	bl	8012b22 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003be6:	f8d4 338c 	ldr.w	r3, [r4, #908]	@ 0x38c
 8003bea:	2b20      	cmp	r3, #32
 8003bec:	d005      	beq.n	8003bfa <_ZN18EasyScreenViewBaseC1Ev+0x54e>
        lineWidthQ5 = widthQ5;
 8003bee:	2320      	movs	r3, #32
        updateCachedShape();
 8003bf0:	9804      	ldr	r0, [sp, #16]
        lineWidthQ5 = widthQ5;
 8003bf2:	f8c4 338c 	str.w	r3, [r4, #908]	@ 0x38c
        updateCachedShape();
 8003bf6:	f00e fe93 	bl	8012920 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8003bfa:	9804      	ldr	r0, [sp, #16]
 8003bfc:	2100      	movs	r1, #0
 8003bfe:	f00e ff9b 	bl	8012b38 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 8003c02:	235f      	movs	r3, #95	@ 0x5f
 8003c04:	4638      	mov	r0, r7
 8003c06:	9904      	ldr	r1, [sp, #16]
 8003c08:	f884 3376 	strb.w	r3, [r4, #886]	@ 0x376
 8003c0c:	f00b fa70 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003c10:	4620      	mov	r0, r4
 8003c12:	b015      	add	sp, #84	@ 0x54
 8003c14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c18:	0802b785 	.word	0x0802b785
 8003c1c:	0802c810 	.word	0x0802c810
 8003c20:	ff595656 	.word	0xff595656
 8003c24:	20013fbc 	.word	0x20013fbc
 8003c28:	ff990c0c 	.word	0xff990c0c
 8003c2c:	20013fc4 	.word	0x20013fc4

08003c30 <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003c30:	4770      	bx	lr

08003c32 <_ZN17EndScreenViewBaseD1Ev>:
}

EndScreenViewBase::~EndScreenViewBase()
{

}
 8003c32:	4770      	bx	lr

08003c34 <_ZN17EndScreenViewBase11setupScreenEv>:

void EndScreenViewBase::setupScreen()
{

}
 8003c34:	4770      	bx	lr

08003c36 <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8003c36:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8003c38:	68c2      	ldr	r2, [r0, #12]
 8003c3a:	6844      	ldr	r4, [r0, #4]
 8003c3c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003c3e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003c40:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003c44:	07d2      	lsls	r2, r2, #31
 8003c46:	bf48      	it	mi
 8003c48:	5962      	ldrmi	r2, [r4, r5]
 8003c4a:	689b      	ldr	r3, [r3, #8]
    }
 8003c4c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003c4e:	bf48      	it	mi
 8003c50:	58d3      	ldrmi	r3, [r2, r3]
 8003c52:	4718      	bx	r3

08003c54 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    /**
     * Query if this object is valid.
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
 8003c54:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8003c56:	6840      	ldr	r0, [r0, #4]
 8003c58:	b130      	cbz	r0, 8003c68 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003c5a:	689a      	ldr	r2, [r3, #8]
 8003c5c:	b91a      	cbnz	r2, 8003c66 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003c5e:	68d8      	ldr	r0, [r3, #12]
 8003c60:	f000 0001 	and.w	r0, r0, #1
 8003c64:	4770      	bx	lr
 8003c66:	2001      	movs	r0, #1
    }
 8003c68:	4770      	bx	lr

08003c6a <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003c6a:	b510      	push	{r4, lr}
 8003c6c:	2110      	movs	r1, #16
 8003c6e:	4604      	mov	r4, r0
 8003c70:	f024 ffe2 	bl	8028c38 <_ZdlPvj>
 8003c74:	4620      	mov	r0, r4
 8003c76:	bd10      	pop	{r4, pc}

08003c78 <_ZN17EndScreenViewBaseD0Ev>:
EndScreenViewBase::~EndScreenViewBase()
 8003c78:	b510      	push	{r4, lr}
}
 8003c7a:	f44f 71cc 	mov.w	r1, #408	@ 0x198
EndScreenViewBase::~EndScreenViewBase()
 8003c7e:	4604      	mov	r4, r0
}
 8003c80:	f024 ffda 	bl	8028c38 <_ZdlPvj>
 8003c84:	4620      	mov	r0, r4
 8003c86:	bd10      	pop	{r4, pc}

08003c88 <_ZN17EndScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void EndScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &playagainButton)
 8003c88:	3098      	adds	r0, #152	@ 0x98
 8003c8a:	4288      	cmp	r0, r1
{
 8003c8c:	b508      	push	{r3, lr}
    if (&src == &playagainButton)
 8003c8e:	d105      	bne.n	8003c9c <_ZN17EndScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~EndScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003c90:	f012 fab8 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When playagainButton clicked change screen to StartScreen
        //Go to StartScreen with screen transition towards East
        application().gotoStartScreenScreenWipeTransitionEast();
    }
}
 8003c94:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoStartScreenScreenWipeTransitionEast();
 8003c98:	f000 ba78 	b.w	800418c <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv>
}
 8003c9c:	bd08      	pop	{r3, pc}
	...

08003ca0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003ca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 8003ca2:	4b19      	ldr	r3, [pc, #100]	@ (8003d08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 8003ca4:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 8003ca6:	881b      	ldrh	r3, [r3, #0]
 8003ca8:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003caa:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003cac:	d92a      	bls.n	8003d04 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003cae:	4b17      	ldr	r3, [pc, #92]	@ (8003d0c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	b92b      	cbnz	r3, 8003cc0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003cb4:	4b16      	ldr	r3, [pc, #88]	@ (8003d10 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003cb6:	4a17      	ldr	r2, [pc, #92]	@ (8003d14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003cb8:	4817      	ldr	r0, [pc, #92]	@ (8003d18 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003cba:	216c      	movs	r1, #108	@ 0x6c
 8003cbc:	f025 fffa 	bl	8029cb4 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003cc0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003cc4:	4b15      	ldr	r3, [pc, #84]	@ (8003d1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003ccc:	4b14      	ldr	r3, [pc, #80]	@ (8003d20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8003cce:	6818      	ldr	r0, [r3, #0]
 8003cd0:	f003 fbae 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003cd4:	682b      	ldr	r3, [r5, #0]
 8003cd6:	4607      	mov	r7, r0
 8003cd8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003cda:	4628      	mov	r0, r5
 8003cdc:	4798      	blx	r3
 8003cde:	682b      	ldr	r3, [r5, #0]
 8003ce0:	4604      	mov	r4, r0
 8003ce2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003ce4:	4639      	mov	r1, r7
 8003ce6:	4628      	mov	r0, r5
 8003ce8:	4798      	blx	r3
 8003cea:	682b      	ldr	r3, [r5, #0]
 8003cec:	fb14 f400 	smulbb	r4, r4, r0
 8003cf0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003cf2:	4639      	mov	r1, r7
 8003cf4:	4628      	mov	r0, r5
 8003cf6:	4798      	blx	r3
 8003cf8:	b2a4      	uxth	r4, r4
 8003cfa:	1823      	adds	r3, r4, r0
 8003cfc:	b21b      	sxth	r3, r3
 8003cfe:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8003d02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d04:	2300      	movs	r3, #0
 8003d06:	e7fa      	b.n	8003cfe <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8003d08:	20013fbc 	.word	0x20013fbc
 8003d0c:	20013fb8 	.word	0x20013fb8
 8003d10:	0802b638 	.word	0x0802b638
 8003d14:	0802b67a 	.word	0x0802b67a
 8003d18:	0802b6b5 	.word	0x0802b6b5
 8003d1c:	20013fc0 	.word	0x20013fc0
 8003d20:	20013fc4 	.word	0x20013fc4

08003d24 <_ZN17EndScreenViewBaseC1Ev>:
EndScreenViewBase::EndScreenViewBase() :
 8003d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d28:	4604      	mov	r4, r0
 8003d2a:	b08b      	sub	sp, #44	@ 0x2c
    buttonCallback(this, &EndScreenViewBase::buttonCallbackHandler)
 8003d2c:	46a2      	mov	sl, r4
 8003d2e:	2500      	movs	r5, #0
 8003d30:	f014 f9a0 	bl	8018074 <_ZN8touchgfx6ScreenC1Ev>
 8003d34:	4b6b      	ldr	r3, [pc, #428]	@ (8003ee4 <_ZN17EndScreenViewBaseC1Ev+0x1c0>)
 8003d36:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003d38:	f84a 3b40 	str.w	r3, [sl], #64
 8003d3c:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003d40:	4650      	mov	r0, sl
 8003d42:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 8003d46:	f7ff fa13 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8003d4a:	4658      	mov	r0, fp
 8003d4c:	f7ff fa10 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 8003d50:	f104 06e0 	add.w	r6, r4, #224	@ 0xe0
 8003d54:	4648      	mov	r0, r9
 8003d56:	f00f fe95 	bl	8013a84 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003d5a:	4630      	mov	r0, r6
 8003d5c:	f7ff fa1e 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 8003d60:	f504 7896 	add.w	r8, r4, #300	@ 0x12c
        : TextAreaWithWildcardBase(), wc1(0)
 8003d64:	4b60      	ldr	r3, [pc, #384]	@ (8003ee8 <_ZN17EndScreenViewBaseC1Ev+0x1c4>)
 8003d66:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
 8003d6a:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
 8003d6e:	4640      	mov	r0, r8
 8003d70:	f7ff fa14 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003d74:	4b5d      	ldr	r3, [pc, #372]	@ (8003eec <_ZN17EndScreenViewBaseC1Ev+0x1c8>)
 8003d76:	e9c4 3462 	strd	r3, r4, [r4, #392]	@ 0x188
 8003d7a:	4b5d      	ldr	r3, [pc, #372]	@ (8003ef0 <_ZN17EndScreenViewBaseC1Ev+0x1cc>)
 8003d7c:	e9c4 3564 	strd	r3, r5, [r4, #400]	@ 0x190
    __background.setPosition(0, 0, 320, 240);
 8003d80:	23f0      	movs	r3, #240	@ 0xf0
 8003d82:	462a      	mov	r2, r5
 8003d84:	4650      	mov	r0, sl
 8003d86:	9300      	str	r3, [sp, #0]
 8003d88:	4629      	mov	r1, r5
 8003d8a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003d8e:	f7ff f9db 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d92:	1d27      	adds	r7, r4, #4
 8003d94:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003d98:	4651      	mov	r1, sl
 8003d9a:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003d9c:	4638      	mov	r0, r7
 8003d9e:	f00b f9a7 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 320, 240);
 8003da2:	23f0      	movs	r3, #240	@ 0xf0
 8003da4:	462a      	mov	r2, r5
 8003da6:	4658      	mov	r0, fp
 8003da8:	9300      	str	r3, [sp, #0]
 8003daa:	4629      	mov	r1, r5
 8003dac:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003db0:	f7ff f9ca 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003db4:	4b4f      	ldr	r3, [pc, #316]	@ (8003ef4 <_ZN17EndScreenViewBaseC1Ev+0x1d0>)
 8003db6:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8003dba:	4659      	mov	r1, fp
 8003dbc:	4638      	mov	r0, r7
 8003dbe:	f00b f997 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    playagainButton.setXY(91, 164);
 8003dc2:	4648      	mov	r0, r9
 8003dc4:	22a4      	movs	r2, #164	@ 0xa4
 8003dc6:	215b      	movs	r1, #91	@ 0x5b
 8003dc8:	f7ff f9b1 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
    playagainButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_DISABLED_ID));
 8003dcc:	aa08      	add	r2, sp, #32
 8003dce:	a907      	add	r1, sp, #28
 8003dd0:	4648      	mov	r0, r9
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003dd2:	f8ad 501c 	strh.w	r5, [sp, #28]
 8003dd6:	f8ad 5020 	strh.w	r5, [sp, #32]
 8003dda:	f00f fb4a 	bl	8013472 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003dde:	2323      	movs	r3, #35	@ 0x23
        updateTextPosition();
 8003de0:	4648      	mov	r0, r9
 8003de2:	f8a4 30d0 	strh.w	r3, [r4, #208]	@ 0xd0
 8003de6:	f7ff ff5b 	bl	8003ca0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8003dea:	4a43      	ldr	r2, [pc, #268]	@ (8003ef8 <_ZN17EndScreenViewBaseC1Ev+0x1d4>)
        color = newColor;
 8003dec:	f8df a12c 	ldr.w	sl, [pc, #300]	@ 8003f1c <_ZN17EndScreenViewBaseC1Ev+0x1f8>
 8003df0:	f04f 33ff 	mov.w	r3, #4294967295
 8003df4:	e9c4 2335 	strd	r2, r3, [r4, #212]	@ 0xd4
    playagainButton.setAction(buttonCallback);
 8003df8:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003dfc:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8003e00:	4649      	mov	r1, r9
 8003e02:	4638      	mov	r0, r7
 8003e04:	f00b f974 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    playerwin.setXY(105, 93);
 8003e08:	225d      	movs	r2, #93	@ 0x5d
 8003e0a:	2169      	movs	r1, #105	@ 0x69
 8003e0c:	4630      	mov	r0, r6
 8003e0e:	f7ff f98e 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003e12:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
        color = newColor;
 8003e16:	f8c4 a110 	str.w	sl, [r4, #272]	@ 0x110
        boundingArea = calculateBoundingArea();
 8003e1a:	f10d 0908 	add.w	r9, sp, #8
 8003e1e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8003e22:	f8a4 5114 	strh.w	r5, [r4, #276]	@ 0x114
        boundingArea = calculateBoundingArea();
 8003e26:	4631      	mov	r1, r6
 8003e28:	4648      	mov	r0, r9
 8003e2a:	4798      	blx	r3
 8003e2c:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8003e30:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8003e34:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e38:	4b30      	ldr	r3, [pc, #192]	@ (8003efc <_ZN17EndScreenViewBaseC1Ev+0x1d8>)
 8003e3a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(playerwinBuffer, PLAYERWIN_SIZE, "%s", touchgfx::TypedText(T_WINNERBUFFER).getText());
 8003e3c:	f504 7bba 	add.w	fp, r4, #372	@ 0x174
 8003e40:	b92b      	cbnz	r3, 8003e4e <_ZN17EndScreenViewBaseC1Ev+0x12a>
 8003e42:	4b2f      	ldr	r3, [pc, #188]	@ (8003f00 <_ZN17EndScreenViewBaseC1Ev+0x1dc>)
 8003e44:	4a2f      	ldr	r2, [pc, #188]	@ (8003f04 <_ZN17EndScreenViewBaseC1Ev+0x1e0>)
 8003e46:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e48:	482f      	ldr	r0, [pc, #188]	@ (8003f08 <_ZN17EndScreenViewBaseC1Ev+0x1e4>)
 8003e4a:	f025 ff33 	bl	8029cb4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003e4e:	4b2f      	ldr	r3, [pc, #188]	@ (8003f0c <_ZN17EndScreenViewBaseC1Ev+0x1e8>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e50:	881b      	ldrh	r3, [r3, #0]
 8003e52:	b91b      	cbnz	r3, 8003e5c <_ZN17EndScreenViewBaseC1Ev+0x138>
 8003e54:	4b2e      	ldr	r3, [pc, #184]	@ (8003f10 <_ZN17EndScreenViewBaseC1Ev+0x1ec>)
 8003e56:	4a2b      	ldr	r2, [pc, #172]	@ (8003f04 <_ZN17EndScreenViewBaseC1Ev+0x1e0>)
 8003e58:	2161      	movs	r1, #97	@ 0x61
 8003e5a:	e7f5      	b.n	8003e48 <_ZN17EndScreenViewBaseC1Ev+0x124>
        return texts->getText(typedTextId);
 8003e5c:	4b2d      	ldr	r3, [pc, #180]	@ (8003f14 <_ZN17EndScreenViewBaseC1Ev+0x1f0>)
 8003e5e:	4629      	mov	r1, r5
 8003e60:	6818      	ldr	r0, [r3, #0]
 8003e62:	f003 fae5 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8003e66:	4a2c      	ldr	r2, [pc, #176]	@ (8003f18 <_ZN17EndScreenViewBaseC1Ev+0x1f4>)
 8003e68:	4603      	mov	r3, r0
 8003e6a:	210a      	movs	r1, #10
 8003e6c:	4658      	mov	r0, fp
 8003e6e:	f015 fde1 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003e72:	f8c4 b128 	str.w	fp, [r4, #296]	@ 0x128
    playerwin.resizeToCurrentText();
 8003e76:	4630      	mov	r0, r6
 8003e78:	f00f fa88 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003e7c:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 8003f20 <_ZN17EndScreenViewBaseC1Ev+0x1fc>
 8003e80:	f8cd b020 	str.w	fp, [sp, #32]
 8003e84:	2328      	movs	r3, #40	@ 0x28
    playerwin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9392));
 8003e86:	a908      	add	r1, sp, #32
 8003e88:	4630      	mov	r0, r6
 8003e8a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003e8e:	f00f fa9d 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e92:	4631      	mov	r1, r6
 8003e94:	4638      	mov	r0, r7
 8003e96:	f00b f92b 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    winner.setXY(91, 28);
 8003e9a:	221c      	movs	r2, #28
 8003e9c:	4640      	mov	r0, r8
 8003e9e:	215b      	movs	r1, #91	@ 0x5b
 8003ea0:	f7ff f945 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
 8003ea4:	4641      	mov	r1, r8
 8003ea6:	4648      	mov	r0, r9
        color = newColor;
 8003ea8:	f8c4 a15c 	str.w	sl, [r4, #348]	@ 0x15c
        linespace = space;
 8003eac:	f8a4 5160 	strh.w	r5, [r4, #352]	@ 0x160
        boundingArea = calculateBoundingArea();
 8003eb0:	f00e ffe4 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003eb4:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8003eb8:	f504 73b4 	add.w	r3, r4, #360	@ 0x168
 8003ebc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003ec0:	2322      	movs	r3, #34	@ 0x22
    winner.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86XU));
 8003ec2:	a908      	add	r1, sp, #32
 8003ec4:	4640      	mov	r0, r8
 8003ec6:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003eca:	f8cd b020 	str.w	fp, [sp, #32]
 8003ece:	f00f fa7d 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ed2:	4638      	mov	r0, r7
 8003ed4:	4641      	mov	r1, r8
 8003ed6:	f00b f90b 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003eda:	4620      	mov	r0, r4
 8003edc:	b00b      	add	sp, #44	@ 0x2c
 8003ede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ee2:	bf00      	nop
 8003ee4:	0802c998 	.word	0x0802c998
 8003ee8:	0802c820 	.word	0x0802c820
 8003eec:	0802c980 	.word	0x0802c980
 8003ef0:	08003c89 	.word	0x08003c89
 8003ef4:	ffaddced 	.word	0xffaddced
 8003ef8:	ffedf1f5 	.word	0xffedf1f5
 8003efc:	20013fb8 	.word	0x20013fb8
 8003f00:	0802b638 	.word	0x0802b638
 8003f04:	0802b73a 	.word	0x0802b73a
 8003f08:	0802b6b5 	.word	0x0802b6b5
 8003f0c:	20013fbc 	.word	0x20013fbc
 8003f10:	0802b6fc 	.word	0x0802b6fc
 8003f14:	20013fc4 	.word	0x20013fc4
 8003f18:	0802b785 	.word	0x0802b785
 8003f1c:	ff3f4669 	.word	0xff3f4669
 8003f20:	0802c810 	.word	0x0802c810

08003f24 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003f24:	4770      	bx	lr

08003f26 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003f26:	4770      	bx	lr

08003f28 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003f28:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8003f2c:	6808      	ldr	r0, [r1, #0]
 8003f2e:	6849      	ldr	r1, [r1, #4]
 8003f30:	c303      	stmia	r3!, {r0, r1}
    }
 8003f32:	4770      	bx	lr

08003f34 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003f34:	4770      	bx	lr

08003f36 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003f36:	4770      	bx	lr

08003f38 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003f38:	6041      	str	r1, [r0, #4]
    }
 8003f3a:	4770      	bx	lr

08003f3c <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003f3c:	b510      	push	{r4, lr}
 8003f3e:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8003f40:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003f44:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003f48:	8002      	strh	r2, [r0, #0]
 8003f4a:	8042      	strh	r2, [r0, #2]
 8003f4c:	8084      	strh	r4, [r0, #4]
 8003f4e:	80c1      	strh	r1, [r0, #6]
        }
 8003f50:	bd10      	pop	{r4, pc}

08003f52 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8003f52:	4770      	bx	lr

08003f54 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003f54:	4770      	bx	lr

08003f56 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003f56:	4770      	bx	lr

08003f58 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8003f58:	4b06      	ldr	r3, [pc, #24]	@ (8003f74 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003f5a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003f5e:	2300      	movs	r3, #0
 8003f60:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// StartScreen

void FrontendApplicationBase::gotoStartScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003f64:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003f68:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003f6c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoStartScreenScreenNoTransition();
    }
 8003f70:	4770      	bx	lr
 8003f72:	bf00      	nop
 8003f74:	080047c1 	.word	0x080047c1

08003f78 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003f78:	2301      	movs	r3, #1
 8003f7a:	7203      	strb	r3, [r0, #8]
    }
 8003f7c:	4770      	bx	lr

08003f7e <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003f7e:	4770      	bx	lr

08003f80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003f80:	4770      	bx	lr

08003f82 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003f82:	4770      	bx	lr

08003f84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003f84:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003f86:	6840      	ldr	r0, [r0, #4]
 8003f88:	6803      	ldr	r3, [r0, #0]
 8003f8a:	3110      	adds	r1, #16
 8003f8c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8003f8e:	4718      	bx	r3

08003f90 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 8003f90:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8003f92:	6840      	ldr	r0, [r0, #4]
 8003f94:	6803      	ldr	r3, [r0, #0]
 8003f96:	3110      	adds	r1, #16
 8003f98:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003f9a:	4718      	bx	r3

08003f9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003f9c:	4770      	bx	lr

08003f9e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003f9e:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003fa0:	68c2      	ldr	r2, [r0, #12]
 8003fa2:	6841      	ldr	r1, [r0, #4]
 8003fa4:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003fa6:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003fa8:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003fac:	07d2      	lsls	r2, r2, #31
 8003fae:	bf48      	it	mi
 8003fb0:	590a      	ldrmi	r2, [r1, r4]
 8003fb2:	689b      	ldr	r3, [r3, #8]
    }
 8003fb4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003fb8:	bf48      	it	mi
 8003fba:	58d3      	ldrmi	r3, [r2, r3]
 8003fbc:	4718      	bx	r3

08003fbe <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8003fbe:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8003fc0:	6840      	ldr	r0, [r0, #4]
 8003fc2:	b130      	cbz	r0, 8003fd2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003fc4:	689a      	ldr	r2, [r3, #8]
 8003fc6:	b91a      	cbnz	r2, 8003fd0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8003fc8:	68d8      	ldr	r0, [r3, #12]
 8003fca:	f000 0001 	and.w	r0, r0, #1
 8003fce:	4770      	bx	lr
 8003fd0:	2001      	movs	r0, #1
    }
 8003fd2:	4770      	bx	lr

08003fd4 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003fd4:	b510      	push	{r4, lr}
 8003fd6:	210c      	movs	r1, #12
 8003fd8:	4604      	mov	r4, r0
 8003fda:	f024 fe2d 	bl	8028c38 <_ZdlPvj>
 8003fde:	4620      	mov	r0, r4
 8003fe0:	bd10      	pop	{r4, pc}

08003fe2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003fe2:	b510      	push	{r4, lr}
 8003fe4:	2110      	movs	r1, #16
 8003fe6:	4604      	mov	r4, r0
 8003fe8:	f024 fe26 	bl	8028c38 <_ZdlPvj>
 8003fec:	4620      	mov	r0, r4
 8003fee:	bd10      	pop	{r4, pc}

08003ff0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003ff0:	b510      	push	{r4, lr}
 8003ff2:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003ff6:	4604      	mov	r4, r0
 8003ff8:	f024 fe1e 	bl	8028c38 <_ZdlPvj>
 8003ffc:	4620      	mov	r0, r4
 8003ffe:	bd10      	pop	{r4, pc}

08004000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8004000:	b510      	push	{r4, lr}
 8004002:	2138      	movs	r1, #56	@ 0x38
 8004004:	4604      	mov	r4, r0
 8004006:	f024 fe17 	bl	8028c38 <_ZdlPvj>
 800400a:	4620      	mov	r0, r4
 800400c:	bd10      	pop	{r4, pc}

0800400e <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 800400e:	b510      	push	{r4, lr}
 8004010:	2128      	movs	r1, #40	@ 0x28
 8004012:	4604      	mov	r4, r0
 8004014:	f024 fe10 	bl	8028c38 <_ZdlPvj>
 8004018:	4620      	mov	r0, r4
 800401a:	bd10      	pop	{r4, pc}

0800401c <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800401c:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 800401e:	f012 f8f1 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
 8004022:	6803      	ldr	r3, [r0, #0]
    }
 8004024:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8004028:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800402a:	4718      	bx	r3

0800402c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800402c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800402e:	4604      	mov	r4, r0
        animationCounter++;
 8004030:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004032:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004034:	3001      	adds	r0, #1
 8004036:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004038:	4298      	cmp	r0, r3
        animationCounter++;
 800403a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 800403c:	d905      	bls.n	800404a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800403e:	2301      	movs	r3, #1
 8004040:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004042:	2300      	movs	r3, #0
 8004044:	72a3      	strb	r3, [r4, #10]
    }
 8004046:	b003      	add	sp, #12
 8004048:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800404a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800404e:	2100      	movs	r1, #0
 8004050:	f014 f9c2 	bl	80183d8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004054:	07c3      	lsls	r3, r0, #31
 8004056:	d507      	bpl.n	8004068 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x3c>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004058:	2800      	cmp	r0, #0
 800405a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800405e:	bfc8      	it	gt
 8004060:	2301      	movgt	r3, #1
 8004062:	fa13 f080 	uxtah	r0, r3, r0
 8004066:	b200      	sxth	r0, r0
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004068:	4b14      	ldr	r3, [pc, #80]	@ (80040bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x90>)
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800406a:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800406c:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800406e:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004070:	b283      	uxth	r3, r0
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004072:	4813      	ldr	r0, [pc, #76]	@ (80040c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
 8004074:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004078:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800407c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800407e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004080:	442b      	add	r3, r5
 8004082:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004084:	b212      	sxth	r2, r2
 8004086:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800408a:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800408c:	8322      	strh	r2, [r4, #24]
 800408e:	f8ad 2000 	strh.w	r2, [sp]
 8004092:	2200      	movs	r2, #0
 8004094:	691b      	ldr	r3, [r3, #16]
 8004096:	f8ad 2002 	strh.w	r2, [sp, #2]
 800409a:	4669      	mov	r1, sp
 800409c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800409e:	7aa3      	ldrb	r3, [r4, #10]
 80040a0:	2b01      	cmp	r3, #1
 80040a2:	d1d0      	bne.n	8004046 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80040a4:	4b07      	ldr	r3, [pc, #28]	@ (80040c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
 80040a6:	781b      	ldrb	r3, [r3, #0]
 80040a8:	2b00      	cmp	r3, #0
 80040aa:	d0cc      	beq.n	8004046 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80040ac:	f012 f8aa 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80040b0:	b003      	add	sp, #12
 80040b2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80040b6:	f012 b8ab 	b.w	8016210 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
 80040ba:	bf00      	nop
 80040bc:	20013f54 	.word	0x20013f54
 80040c0:	20013f56 	.word	0x20013f56
 80040c4:	20013f5e 	.word	0x20013f5e

080040c8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80040c8:	b510      	push	{r4, lr}
 80040ca:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80040cc:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 80040d0:	b158      	cbz	r0, 80040ea <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80040d2:	6803      	ldr	r3, [r0, #0]
 80040d4:	68db      	ldr	r3, [r3, #12]
 80040d6:	4798      	blx	r3
 80040d8:	b138      	cbz	r0, 80040ea <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80040da:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 80040de:	6803      	ldr	r3, [r0, #0]
 80040e0:	689b      	ldr	r3, [r3, #8]
 80040e2:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80040e4:	2300      	movs	r3, #0
 80040e6:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80040ea:	bd10      	pop	{r4, pc}

080040ec <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80040ec:	4b04      	ldr	r3, [pc, #16]	@ (8004100 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80040f4:	b10a      	cbz	r2, 80040fa <_ZN8touchgfx3HAL3lcdEv+0xe>
 80040f6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80040f8:	b900      	cbnz	r0, 80040fc <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80040fa:	6898      	ldr	r0, [r3, #8]
    }
 80040fc:	4770      	bx	lr
 80040fe:	bf00      	nop
 8004100:	20013f60 	.word	0x20013f60

08004104 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004104:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004106:	4617      	mov	r7, r2
 8004108:	4604      	mov	r4, r0
 800410a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800410c:	f012 f964 	bl	80163d8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004110:	4b12      	ldr	r3, [pc, #72]	@ (800415c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8004112:	601c      	str	r4, [r3, #0]
      model(m)
 8004114:	4b12      	ldr	r3, [pc, #72]	@ (8004160 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004116:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004118:	4b12      	ldr	r3, [pc, #72]	@ (8004164 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 800411a:	2500      	movs	r5, #0
 800411c:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 8004120:	4b11      	ldr	r3, [pc, #68]	@ (8004168 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8004122:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 8004126:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8004128:	6803      	ldr	r3, [r0, #0]
 800412a:	4629      	mov	r1, r5
 800412c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800412e:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 8004132:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8004136:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004138:	4628      	mov	r0, r5
 800413a:	f003 f93d 	bl	80073b8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800413e:	f7ff ffd5 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 8004142:	f01c fc76 	bl	8020a32 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8004146:	f7ff ffd1 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 800414a:	f01c fced 	bl	8020b28 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800414e:	f7ff ffcd 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 8004152:	f01c fcf5 	bl	8020b40 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8004156:	4620      	mov	r0, r4
 8004158:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800415a:	bf00      	nop
 800415c:	20013fb4 	.word	0x20013fb4
 8004160:	0802ca4c 	.word	0x0802ca4c
 8004164:	0802ca34 	.word	0x0802ca34
 8004168:	20013f60 	.word	0x20013f60

0800416c <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800416c:	4b06      	ldr	r3, [pc, #24]	@ (8004188 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv+0x1c>)
 800416e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004172:	2300      	movs	r3, #0
 8004174:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004178:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 800417c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004180:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004184:	4770      	bx	lr
 8004186:	bf00      	nop
 8004188:	080047c1 	.word	0x080047c1

0800418c <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv>:
 800418c:	4b06      	ldr	r3, [pc, #24]	@ (80041a8 <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv+0x1c>)
 800418e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004192:	2300      	movs	r3, #0
 8004194:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004198:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 800419c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80041a0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80041a4:	4770      	bx	lr
 80041a6:	bf00      	nop
 80041a8:	08004d2d 	.word	0x08004d2d

080041ac <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>:
 80041ac:	4b06      	ldr	r3, [pc, #24]	@ (80041c8 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv+0x1c>)
 80041ae:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80041b2:	2300      	movs	r3, #0
 80041b4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// HardScreen

void FrontendApplicationBase::gotoHardScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHardScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80041b8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80041bc:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80041c0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80041c4:	4770      	bx	lr
 80041c6:	bf00      	nop
 80041c8:	08004675 	.word	0x08004675

080041cc <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv>:
 80041cc:	4b06      	ldr	r3, [pc, #24]	@ (80041e8 <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv+0x1c>)
 80041ce:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80041d2:	2300      	movs	r3, #0
 80041d4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// HardReadyScreen

void FrontendApplicationBase::gotoHardReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHardReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80041d8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80041dc:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80041e0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80041e4:	4770      	bx	lr
 80041e6:	bf00      	nop
 80041e8:	08004bf1 	.word	0x08004bf1

080041ec <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>:
 80041ec:	4b06      	ldr	r3, [pc, #24]	@ (8004208 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv+0x1c>)
 80041ee:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80041f2:	2300      	movs	r3, #0
 80041f4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MediumScreen

void FrontendApplicationBase::gotoMediumScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMediumScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80041f8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80041fc:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004200:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004204:	4770      	bx	lr
 8004206:	bf00      	nop
 8004208:	08004529 	.word	0x08004529

0800420c <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv>:
 800420c:	4b06      	ldr	r3, [pc, #24]	@ (8004228 <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv+0x1c>)
 800420e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004212:	2300      	movs	r3, #0
 8004214:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MediumReadyScreen

void FrontendApplicationBase::gotoMediumReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMediumReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004218:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 800421c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004220:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004224:	4770      	bx	lr
 8004226:	bf00      	nop
 8004228:	08004ab5 	.word	0x08004ab5

0800422c <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>:
 800422c:	4b06      	ldr	r3, [pc, #24]	@ (8004248 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv+0x1c>)
 800422e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004232:	2300      	movs	r3, #0
 8004234:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EasyScreen

void FrontendApplicationBase::gotoEasyScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEasyScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004238:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 800423c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004240:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004244:	4770      	bx	lr
 8004246:	bf00      	nop
 8004248:	080043dd 	.word	0x080043dd

0800424c <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv>:
 800424c:	4b06      	ldr	r3, [pc, #24]	@ (8004268 <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv+0x1c>)
 800424e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004252:	2300      	movs	r3, #0
 8004254:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EasyReadyScreen

void FrontendApplicationBase::gotoEasyReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEasyReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004258:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 800425c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004260:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004264:	4770      	bx	lr
 8004266:	bf00      	nop
 8004268:	08004979 	.word	0x08004979

0800426c <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>:
 800426c:	4b06      	ldr	r3, [pc, #24]	@ (8004288 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv+0x1c>)
 800426e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004272:	2300      	movs	r3, #0
 8004274:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EndScreen

void FrontendApplicationBase::gotoEndScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEndScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004278:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 800427c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004280:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004284:	4770      	bx	lr
 8004286:	bf00      	nop
 8004288:	08004295 	.word	0x08004295

0800428c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800428c:	6803      	ldr	r3, [r0, #0]
 800428e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004290:	4718      	bx	r3
	...

08004294 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoEndScreenScreenNoTransitionImpl()
{
 8004294:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<EndScreenView, EndScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004298:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800429c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800429e:	68b0      	ldr	r0, [r6, #8]
 80042a0:	6803      	ldr	r3, [r0, #0]
 80042a2:	6a1b      	ldr	r3, [r3, #32]
 80042a4:	4798      	blx	r3
 80042a6:	f5b0 7fcc 	cmp.w	r0, #408	@ 0x198
 80042aa:	d205      	bcs.n	80042b8 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x24>
 80042ac:	4b43      	ldr	r3, [pc, #268]	@ (80043bc <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x128>)
 80042ae:	4a44      	ldr	r2, [pc, #272]	@ (80043c0 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 80042b0:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80042b2:	4844      	ldr	r0, [pc, #272]	@ (80043c4 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x130>)
 80042b4:	f025 fcfe 	bl	8029cb4 <__assert_func>
 80042b8:	6870      	ldr	r0, [r6, #4]
 80042ba:	6803      	ldr	r3, [r0, #0]
 80042bc:	6a1b      	ldr	r3, [r3, #32]
 80042be:	4798      	blx	r3
 80042c0:	280f      	cmp	r0, #15
 80042c2:	d803      	bhi.n	80042cc <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x38>
 80042c4:	4b40      	ldr	r3, [pc, #256]	@ (80043c8 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x134>)
 80042c6:	4a3e      	ldr	r2, [pc, #248]	@ (80043c0 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 80042c8:	21a4      	movs	r1, #164	@ 0xa4
 80042ca:	e7f2      	b.n	80042b2 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80042cc:	68f0      	ldr	r0, [r6, #12]
 80042ce:	6803      	ldr	r3, [r0, #0]
 80042d0:	6a1b      	ldr	r3, [r3, #32]
 80042d2:	4798      	blx	r3
 80042d4:	280b      	cmp	r0, #11
 80042d6:	d803      	bhi.n	80042e0 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x4c>
 80042d8:	4b3c      	ldr	r3, [pc, #240]	@ (80043cc <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x138>)
 80042da:	4a39      	ldr	r2, [pc, #228]	@ (80043c0 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 80042dc:	21a5      	movs	r1, #165	@ 0xa5
 80042de:	e7e8      	b.n	80042b2 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80042e0:	f011 ff90 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80042e4:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 80043d4 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80042e8:	3004      	adds	r0, #4
 80042ea:	f011 ffd8 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80042ee:	f8d9 0000 	ldr.w	r0, [r9]
 80042f2:	b110      	cbz	r0, 80042fa <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80042f4:	6803      	ldr	r3, [r0, #0]
 80042f6:	68db      	ldr	r3, [r3, #12]
 80042f8:	4798      	blx	r3
    if (*currentTrans)
 80042fa:	f8d9 0000 	ldr.w	r0, [r9]
 80042fe:	b110      	cbz	r0, 8004306 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004300:	6803      	ldr	r3, [r0, #0]
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	4798      	blx	r3
    if (*currentScreen)
 8004306:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80043d8 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x144>
 800430a:	f8d8 0000 	ldr.w	r0, [r8]
 800430e:	b110      	cbz	r0, 8004316 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004310:	6803      	ldr	r3, [r0, #0]
 8004312:	695b      	ldr	r3, [r3, #20]
 8004314:	4798      	blx	r3
    if (*currentPresenter)
 8004316:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800431a:	b110      	cbz	r0, 8004322 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800431c:	6803      	ldr	r3, [r0, #0]
 800431e:	685b      	ldr	r3, [r3, #4]
 8004320:	4798      	blx	r3
    if (*currentScreen)
 8004322:	f8d8 0000 	ldr.w	r0, [r8]
 8004326:	b110      	cbz	r0, 800432e <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004328:	6803      	ldr	r3, [r0, #0]
 800432a:	681b      	ldr	r3, [r3, #0]
 800432c:	4798      	blx	r3
    if (*currentPresenter)
 800432e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004332:	b110      	cbz	r0, 800433a <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004334:	6803      	ldr	r3, [r0, #0]
 8004336:	689b      	ldr	r3, [r3, #8]
 8004338:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800433a:	68f0      	ldr	r0, [r6, #12]
 800433c:	2100      	movs	r1, #0
 800433e:	f7ff ffa5 	bl	800428c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 8004342:	f04f 0b00 	mov.w	fp, #0
 8004346:	4b22      	ldr	r3, [pc, #136]	@ (80043d0 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x13c>)
 8004348:	f8c0 b004 	str.w	fp, [r0, #4]
 800434c:	4604      	mov	r4, r0
 800434e:	f880 b008 	strb.w	fp, [r0, #8]
 8004352:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004354:	68b0      	ldr	r0, [r6, #8]
 8004356:	6803      	ldr	r3, [r0, #0]
 8004358:	4659      	mov	r1, fp
 800435a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800435c:	4798      	blx	r3
 800435e:	4605      	mov	r5, r0
 8004360:	f004 f8fa 	bl	8008558 <_ZN13EndScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004364:	6870      	ldr	r0, [r6, #4]
 8004366:	6803      	ldr	r3, [r0, #0]
 8004368:	4659      	mov	r1, fp
 800436a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800436c:	4798      	blx	r3
 800436e:	4629      	mov	r1, r5
 8004370:	4606      	mov	r6, r0
 8004372:	f004 f8cd 	bl	8008510 <_ZN18EndScreenPresenterC1ER13EndScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8004376:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004378:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800437c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004380:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004384:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004388:	682b      	ldr	r3, [r5, #0]
    virtual void movePaddle2Right() {}
    virtual void paddle1Action() {}
    virtual void paddle2Action() {}
    void bind(Model* m)
    {
        model = m;
 800438a:	f8c6 a008 	str.w	sl, [r6, #8]
 800438e:	4628      	mov	r0, r5
 8004390:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004392:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004394:	4798      	blx	r3
    newPresenter->activate();
 8004396:	6833      	ldr	r3, [r6, #0]
 8004398:	4630      	mov	r0, r6
 800439a:	681b      	ldr	r3, [r3, #0]
 800439c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800439e:	4621      	mov	r1, r4
 80043a0:	4628      	mov	r0, r5
 80043a2:	f014 f813 	bl	80183cc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80043a6:	6823      	ldr	r3, [r4, #0]
 80043a8:	4620      	mov	r0, r4
 80043aa:	691b      	ldr	r3, [r3, #16]
 80043ac:	4798      	blx	r3
    newTransition->invalidate();
 80043ae:	6823      	ldr	r3, [r4, #0]
 80043b0:	695b      	ldr	r3, [r3, #20]
 80043b2:	4620      	mov	r0, r4
}
 80043b4:	b001      	add	sp, #4
 80043b6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043ba:	4718      	bx	r3
 80043bc:	0802b788 	.word	0x0802b788
 80043c0:	0802b816 	.word	0x0802b816
 80043c4:	0802b8ec 	.word	0x0802b8ec
 80043c8:	0802b933 	.word	0x0802b933
 80043cc:	0802b9d6 	.word	0x0802b9d6
 80043d0:	0802caa0 	.word	0x0802caa0
 80043d4:	20013fa8 	.word	0x20013fa8
 80043d8:	20013fa4 	.word	0x20013fa4

080043dc <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv>:
{
 80043dc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<EasyScreenView, EasyScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80043e0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80043e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80043e6:	68b0      	ldr	r0, [r6, #8]
 80043e8:	6803      	ldr	r3, [r0, #0]
 80043ea:	6a1b      	ldr	r3, [r3, #32]
 80043ec:	4798      	blx	r3
 80043ee:	f241 63fb 	movw	r3, #5883	@ 0x16fb
 80043f2:	4298      	cmp	r0, r3
 80043f4:	d805      	bhi.n	8004402 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x26>
 80043f6:	4b44      	ldr	r3, [pc, #272]	@ (8004508 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x12c>)
 80043f8:	4a44      	ldr	r2, [pc, #272]	@ (800450c <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 80043fa:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043fc:	4844      	ldr	r0, [pc, #272]	@ (8004510 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x134>)
 80043fe:	f025 fc59 	bl	8029cb4 <__assert_func>
 8004402:	6870      	ldr	r0, [r6, #4]
 8004404:	6803      	ldr	r3, [r0, #0]
 8004406:	6a1b      	ldr	r3, [r3, #32]
 8004408:	4798      	blx	r3
 800440a:	280f      	cmp	r0, #15
 800440c:	d803      	bhi.n	8004416 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x3a>
 800440e:	4b41      	ldr	r3, [pc, #260]	@ (8004514 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x138>)
 8004410:	4a3e      	ldr	r2, [pc, #248]	@ (800450c <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 8004412:	21a4      	movs	r1, #164	@ 0xa4
 8004414:	e7f2      	b.n	80043fc <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004416:	68f0      	ldr	r0, [r6, #12]
 8004418:	6803      	ldr	r3, [r0, #0]
 800441a:	6a1b      	ldr	r3, [r3, #32]
 800441c:	4798      	blx	r3
 800441e:	280b      	cmp	r0, #11
 8004420:	d803      	bhi.n	800442a <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x4e>
 8004422:	4b3d      	ldr	r3, [pc, #244]	@ (8004518 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x13c>)
 8004424:	4a39      	ldr	r2, [pc, #228]	@ (800450c <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 8004426:	21a5      	movs	r1, #165	@ 0xa5
 8004428:	e7e8      	b.n	80043fc <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800442a:	f011 feeb 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800442e:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8004520 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x144>
 8004432:	3004      	adds	r0, #4
 8004434:	f011 ff33 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004438:	f8d9 0000 	ldr.w	r0, [r9]
 800443c:	b110      	cbz	r0, 8004444 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800443e:	6803      	ldr	r3, [r0, #0]
 8004440:	68db      	ldr	r3, [r3, #12]
 8004442:	4798      	blx	r3
    if (*currentTrans)
 8004444:	f8d9 0000 	ldr.w	r0, [r9]
 8004448:	b110      	cbz	r0, 8004450 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800444a:	6803      	ldr	r3, [r0, #0]
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	4798      	blx	r3
    if (*currentScreen)
 8004450:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004524 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x148>
 8004454:	f8d8 0000 	ldr.w	r0, [r8]
 8004458:	b110      	cbz	r0, 8004460 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800445a:	6803      	ldr	r3, [r0, #0]
 800445c:	695b      	ldr	r3, [r3, #20]
 800445e:	4798      	blx	r3
    if (*currentPresenter)
 8004460:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004464:	b110      	cbz	r0, 800446c <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004466:	6803      	ldr	r3, [r0, #0]
 8004468:	685b      	ldr	r3, [r3, #4]
 800446a:	4798      	blx	r3
    if (*currentScreen)
 800446c:	f8d8 0000 	ldr.w	r0, [r8]
 8004470:	b110      	cbz	r0, 8004478 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004472:	6803      	ldr	r3, [r0, #0]
 8004474:	681b      	ldr	r3, [r3, #0]
 8004476:	4798      	blx	r3
    if (*currentPresenter)
 8004478:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800447c:	b110      	cbz	r0, 8004484 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800447e:	6803      	ldr	r3, [r0, #0]
 8004480:	689b      	ldr	r3, [r3, #8]
 8004482:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004484:	68f0      	ldr	r0, [r6, #12]
 8004486:	2100      	movs	r1, #0
 8004488:	f7ff ff00 	bl	800428c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800448c:	f04f 0b00 	mov.w	fp, #0
 8004490:	4b22      	ldr	r3, [pc, #136]	@ (800451c <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x140>)
 8004492:	f8c0 b004 	str.w	fp, [r0, #4]
 8004496:	4604      	mov	r4, r0
 8004498:	f880 b008 	strb.w	fp, [r0, #8]
 800449c:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800449e:	68b0      	ldr	r0, [r6, #8]
 80044a0:	6803      	ldr	r3, [r0, #0]
 80044a2:	4659      	mov	r1, fp
 80044a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80044a6:	4798      	blx	r3
 80044a8:	4605      	mov	r5, r0
 80044aa:	f003 f8cb 	bl	8007644 <_ZN14EasyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80044ae:	6870      	ldr	r0, [r6, #4]
 80044b0:	6803      	ldr	r3, [r0, #0]
 80044b2:	4659      	mov	r1, fp
 80044b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80044b6:	4798      	blx	r3
 80044b8:	4629      	mov	r1, r5
 80044ba:	4606      	mov	r6, r0
 80044bc:	f003 f896 	bl	80075ec <_ZN19EasyScreenPresenterC1ER14EasyScreenView>
    model->bind(newPresenter);
 80044c0:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80044c2:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80044c6:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80044ca:	f8c8 5000 	str.w	r5, [r8]
 80044ce:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80044d2:	682b      	ldr	r3, [r5, #0]
 80044d4:	f8c6 a008 	str.w	sl, [r6, #8]
 80044d8:	4628      	mov	r0, r5
 80044da:	68db      	ldr	r3, [r3, #12]
 80044dc:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80044de:	4798      	blx	r3
    newPresenter->activate();
 80044e0:	6833      	ldr	r3, [r6, #0]
 80044e2:	4630      	mov	r0, r6
 80044e4:	681b      	ldr	r3, [r3, #0]
 80044e6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80044e8:	4621      	mov	r1, r4
 80044ea:	4628      	mov	r0, r5
 80044ec:	f013 ff6e 	bl	80183cc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80044f0:	6823      	ldr	r3, [r4, #0]
 80044f2:	4620      	mov	r0, r4
 80044f4:	691b      	ldr	r3, [r3, #16]
 80044f6:	4798      	blx	r3
    newTransition->invalidate();
 80044f8:	6823      	ldr	r3, [r4, #0]
 80044fa:	695b      	ldr	r3, [r3, #20]
 80044fc:	4620      	mov	r0, r4
}
 80044fe:	b001      	add	sp, #4
 8004500:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004504:	4718      	bx	r3
 8004506:	bf00      	nop
 8004508:	0802b788 	.word	0x0802b788
 800450c:	0802ba79 	.word	0x0802ba79
 8004510:	0802b8ec 	.word	0x0802b8ec
 8004514:	0802b933 	.word	0x0802b933
 8004518:	0802b9d6 	.word	0x0802b9d6
 800451c:	0802caa0 	.word	0x0802caa0
 8004520:	20013fa8 	.word	0x20013fa8
 8004524:	20013fa4 	.word	0x20013fa4

08004528 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv>:
{
 8004528:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MediumScreenView, MediumScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800452c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004530:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004532:	68b0      	ldr	r0, [r6, #8]
 8004534:	6803      	ldr	r3, [r0, #0]
 8004536:	6a1b      	ldr	r3, [r3, #32]
 8004538:	4798      	blx	r3
 800453a:	f241 7353 	movw	r3, #5971	@ 0x1753
 800453e:	4298      	cmp	r0, r3
 8004540:	d805      	bhi.n	800454e <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x26>
 8004542:	4b44      	ldr	r3, [pc, #272]	@ (8004654 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x12c>)
 8004544:	4a44      	ldr	r2, [pc, #272]	@ (8004658 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 8004546:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004548:	4844      	ldr	r0, [pc, #272]	@ (800465c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x134>)
 800454a:	f025 fbb3 	bl	8029cb4 <__assert_func>
 800454e:	6870      	ldr	r0, [r6, #4]
 8004550:	6803      	ldr	r3, [r0, #0]
 8004552:	6a1b      	ldr	r3, [r3, #32]
 8004554:	4798      	blx	r3
 8004556:	280f      	cmp	r0, #15
 8004558:	d803      	bhi.n	8004562 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x3a>
 800455a:	4b41      	ldr	r3, [pc, #260]	@ (8004660 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x138>)
 800455c:	4a3e      	ldr	r2, [pc, #248]	@ (8004658 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 800455e:	21a4      	movs	r1, #164	@ 0xa4
 8004560:	e7f2      	b.n	8004548 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004562:	68f0      	ldr	r0, [r6, #12]
 8004564:	6803      	ldr	r3, [r0, #0]
 8004566:	6a1b      	ldr	r3, [r3, #32]
 8004568:	4798      	blx	r3
 800456a:	280b      	cmp	r0, #11
 800456c:	d803      	bhi.n	8004576 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x4e>
 800456e:	4b3d      	ldr	r3, [pc, #244]	@ (8004664 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x13c>)
 8004570:	4a39      	ldr	r2, [pc, #228]	@ (8004658 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 8004572:	21a5      	movs	r1, #165	@ 0xa5
 8004574:	e7e8      	b.n	8004548 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004576:	f011 fe45 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800457a:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 800466c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x144>
 800457e:	3004      	adds	r0, #4
 8004580:	f011 fe8d 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004584:	f8d9 0000 	ldr.w	r0, [r9]
 8004588:	b110      	cbz	r0, 8004590 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800458a:	6803      	ldr	r3, [r0, #0]
 800458c:	68db      	ldr	r3, [r3, #12]
 800458e:	4798      	blx	r3
    if (*currentTrans)
 8004590:	f8d9 0000 	ldr.w	r0, [r9]
 8004594:	b110      	cbz	r0, 800459c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8004596:	6803      	ldr	r3, [r0, #0]
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	4798      	blx	r3
    if (*currentScreen)
 800459c:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004670 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x148>
 80045a0:	f8d8 0000 	ldr.w	r0, [r8]
 80045a4:	b110      	cbz	r0, 80045ac <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80045a6:	6803      	ldr	r3, [r0, #0]
 80045a8:	695b      	ldr	r3, [r3, #20]
 80045aa:	4798      	blx	r3
    if (*currentPresenter)
 80045ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80045b0:	b110      	cbz	r0, 80045b8 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80045b2:	6803      	ldr	r3, [r0, #0]
 80045b4:	685b      	ldr	r3, [r3, #4]
 80045b6:	4798      	blx	r3
    if (*currentScreen)
 80045b8:	f8d8 0000 	ldr.w	r0, [r8]
 80045bc:	b110      	cbz	r0, 80045c4 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80045be:	6803      	ldr	r3, [r0, #0]
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	4798      	blx	r3
    if (*currentPresenter)
 80045c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80045c8:	b110      	cbz	r0, 80045d0 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80045ca:	6803      	ldr	r3, [r0, #0]
 80045cc:	689b      	ldr	r3, [r3, #8]
 80045ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045d0:	68f0      	ldr	r0, [r6, #12]
 80045d2:	2100      	movs	r1, #0
 80045d4:	f7ff fe5a 	bl	800428c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80045d8:	f04f 0b00 	mov.w	fp, #0
 80045dc:	4b22      	ldr	r3, [pc, #136]	@ (8004668 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x140>)
 80045de:	f8c0 b004 	str.w	fp, [r0, #4]
 80045e2:	4604      	mov	r4, r0
 80045e4:	f880 b008 	strb.w	fp, [r0, #8]
 80045e8:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80045ea:	68b0      	ldr	r0, [r6, #8]
 80045ec:	6803      	ldr	r3, [r0, #0]
 80045ee:	4659      	mov	r1, fp
 80045f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045f2:	4798      	blx	r3
 80045f4:	4605      	mov	r5, r0
 80045f6:	f004 ff29 	bl	800944c <_ZN16MediumScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045fa:	6870      	ldr	r0, [r6, #4]
 80045fc:	6803      	ldr	r3, [r0, #0]
 80045fe:	4659      	mov	r1, fp
 8004600:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004602:	4798      	blx	r3
 8004604:	4629      	mov	r1, r5
 8004606:	4606      	mov	r6, r0
 8004608:	f004 fef4 	bl	80093f4 <_ZN21MediumScreenPresenterC1ER16MediumScreenView>
    model->bind(newPresenter);
 800460c:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800460e:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004612:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004616:	f8c8 5000 	str.w	r5, [r8]
 800461a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800461e:	682b      	ldr	r3, [r5, #0]
 8004620:	f8c6 a008 	str.w	sl, [r6, #8]
 8004624:	4628      	mov	r0, r5
 8004626:	68db      	ldr	r3, [r3, #12]
 8004628:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800462a:	4798      	blx	r3
    newPresenter->activate();
 800462c:	6833      	ldr	r3, [r6, #0]
 800462e:	4630      	mov	r0, r6
 8004630:	681b      	ldr	r3, [r3, #0]
 8004632:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004634:	4621      	mov	r1, r4
 8004636:	4628      	mov	r0, r5
 8004638:	f013 fec8 	bl	80183cc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800463c:	6823      	ldr	r3, [r4, #0]
 800463e:	4620      	mov	r0, r4
 8004640:	691b      	ldr	r3, [r3, #16]
 8004642:	4798      	blx	r3
    newTransition->invalidate();
 8004644:	6823      	ldr	r3, [r4, #0]
 8004646:	695b      	ldr	r3, [r3, #20]
 8004648:	4620      	mov	r0, r4
}
 800464a:	b001      	add	sp, #4
 800464c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004650:	4718      	bx	r3
 8004652:	bf00      	nop
 8004654:	0802b788 	.word	0x0802b788
 8004658:	0802bb51 	.word	0x0802bb51
 800465c:	0802b8ec 	.word	0x0802b8ec
 8004660:	0802b933 	.word	0x0802b933
 8004664:	0802b9d6 	.word	0x0802b9d6
 8004668:	0802caa0 	.word	0x0802caa0
 800466c:	20013fa8 	.word	0x20013fa8
 8004670:	20013fa4 	.word	0x20013fa4

08004674 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv>:
{
 8004674:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<HardScreenView, HardScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004678:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800467c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800467e:	68b0      	ldr	r0, [r6, #8]
 8004680:	6803      	ldr	r3, [r0, #0]
 8004682:	6a1b      	ldr	r3, [r3, #32]
 8004684:	4798      	blx	r3
 8004686:	f641 0303 	movw	r3, #6147	@ 0x1803
 800468a:	4298      	cmp	r0, r3
 800468c:	d805      	bhi.n	800469a <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x26>
 800468e:	4b44      	ldr	r3, [pc, #272]	@ (80047a0 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x12c>)
 8004690:	4a44      	ldr	r2, [pc, #272]	@ (80047a4 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 8004692:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004694:	4844      	ldr	r0, [pc, #272]	@ (80047a8 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x134>)
 8004696:	f025 fb0d 	bl	8029cb4 <__assert_func>
 800469a:	6870      	ldr	r0, [r6, #4]
 800469c:	6803      	ldr	r3, [r0, #0]
 800469e:	6a1b      	ldr	r3, [r3, #32]
 80046a0:	4798      	blx	r3
 80046a2:	280f      	cmp	r0, #15
 80046a4:	d803      	bhi.n	80046ae <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x3a>
 80046a6:	4b41      	ldr	r3, [pc, #260]	@ (80047ac <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x138>)
 80046a8:	4a3e      	ldr	r2, [pc, #248]	@ (80047a4 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 80046aa:	21a4      	movs	r1, #164	@ 0xa4
 80046ac:	e7f2      	b.n	8004694 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80046ae:	68f0      	ldr	r0, [r6, #12]
 80046b0:	6803      	ldr	r3, [r0, #0]
 80046b2:	6a1b      	ldr	r3, [r3, #32]
 80046b4:	4798      	blx	r3
 80046b6:	280b      	cmp	r0, #11
 80046b8:	d803      	bhi.n	80046c2 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x4e>
 80046ba:	4b3d      	ldr	r3, [pc, #244]	@ (80047b0 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x13c>)
 80046bc:	4a39      	ldr	r2, [pc, #228]	@ (80047a4 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 80046be:	21a5      	movs	r1, #165	@ 0xa5
 80046c0:	e7e8      	b.n	8004694 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80046c2:	f011 fd9f 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80046c6:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80047b8 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x144>
 80046ca:	3004      	adds	r0, #4
 80046cc:	f011 fde7 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80046d0:	f8d9 0000 	ldr.w	r0, [r9]
 80046d4:	b110      	cbz	r0, 80046dc <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80046d6:	6803      	ldr	r3, [r0, #0]
 80046d8:	68db      	ldr	r3, [r3, #12]
 80046da:	4798      	blx	r3
    if (*currentTrans)
 80046dc:	f8d9 0000 	ldr.w	r0, [r9]
 80046e0:	b110      	cbz	r0, 80046e8 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80046e2:	6803      	ldr	r3, [r0, #0]
 80046e4:	681b      	ldr	r3, [r3, #0]
 80046e6:	4798      	blx	r3
    if (*currentScreen)
 80046e8:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80047bc <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x148>
 80046ec:	f8d8 0000 	ldr.w	r0, [r8]
 80046f0:	b110      	cbz	r0, 80046f8 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80046f2:	6803      	ldr	r3, [r0, #0]
 80046f4:	695b      	ldr	r3, [r3, #20]
 80046f6:	4798      	blx	r3
    if (*currentPresenter)
 80046f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80046fc:	b110      	cbz	r0, 8004704 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80046fe:	6803      	ldr	r3, [r0, #0]
 8004700:	685b      	ldr	r3, [r3, #4]
 8004702:	4798      	blx	r3
    if (*currentScreen)
 8004704:	f8d8 0000 	ldr.w	r0, [r8]
 8004708:	b110      	cbz	r0, 8004710 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800470a:	6803      	ldr	r3, [r0, #0]
 800470c:	681b      	ldr	r3, [r3, #0]
 800470e:	4798      	blx	r3
    if (*currentPresenter)
 8004710:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004714:	b110      	cbz	r0, 800471c <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004716:	6803      	ldr	r3, [r0, #0]
 8004718:	689b      	ldr	r3, [r3, #8]
 800471a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800471c:	68f0      	ldr	r0, [r6, #12]
 800471e:	2100      	movs	r1, #0
 8004720:	f7ff fdb4 	bl	800428c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004724:	f04f 0b00 	mov.w	fp, #0
 8004728:	4b22      	ldr	r3, [pc, #136]	@ (80047b4 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x140>)
 800472a:	f8c0 b004 	str.w	fp, [r0, #4]
 800472e:	4604      	mov	r4, r0
 8004730:	f880 b008 	strb.w	fp, [r0, #8]
 8004734:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004736:	68b0      	ldr	r0, [r6, #8]
 8004738:	6803      	ldr	r3, [r0, #0]
 800473a:	4659      	mov	r1, fp
 800473c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800473e:	4798      	blx	r3
 8004740:	4605      	mov	r5, r0
 8004742:	f004 f829 	bl	8008798 <_ZN14HardScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004746:	6870      	ldr	r0, [r6, #4]
 8004748:	6803      	ldr	r3, [r0, #0]
 800474a:	4659      	mov	r1, fp
 800474c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800474e:	4798      	blx	r3
 8004750:	4629      	mov	r1, r5
 8004752:	4606      	mov	r6, r0
 8004754:	f003 fff4 	bl	8008740 <_ZN19HardScreenPresenterC1ER14HardScreenView>
    model->bind(newPresenter);
 8004758:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800475a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800475e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004762:	f8c8 5000 	str.w	r5, [r8]
 8004766:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800476a:	682b      	ldr	r3, [r5, #0]
 800476c:	f8c6 a008 	str.w	sl, [r6, #8]
 8004770:	4628      	mov	r0, r5
 8004772:	68db      	ldr	r3, [r3, #12]
 8004774:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004776:	4798      	blx	r3
    newPresenter->activate();
 8004778:	6833      	ldr	r3, [r6, #0]
 800477a:	4630      	mov	r0, r6
 800477c:	681b      	ldr	r3, [r3, #0]
 800477e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004780:	4621      	mov	r1, r4
 8004782:	4628      	mov	r0, r5
 8004784:	f013 fe22 	bl	80183cc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004788:	6823      	ldr	r3, [r4, #0]
 800478a:	4620      	mov	r0, r4
 800478c:	691b      	ldr	r3, [r3, #16]
 800478e:	4798      	blx	r3
    newTransition->invalidate();
 8004790:	6823      	ldr	r3, [r4, #0]
 8004792:	695b      	ldr	r3, [r3, #20]
 8004794:	4620      	mov	r0, r4
}
 8004796:	b001      	add	sp, #4
 8004798:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800479c:	4718      	bx	r3
 800479e:	bf00      	nop
 80047a0:	0802b788 	.word	0x0802b788
 80047a4:	0802bc2d 	.word	0x0802bc2d
 80047a8:	0802b8ec 	.word	0x0802b8ec
 80047ac:	0802b933 	.word	0x0802b933
 80047b0:	0802b9d6 	.word	0x0802b9d6
 80047b4:	0802caa0 	.word	0x0802caa0
 80047b8:	20013fa8 	.word	0x20013fa8
 80047bc:	20013fa4 	.word	0x20013fa4

080047c0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv>:
{
 80047c0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047c4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80047c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047ca:	68b0      	ldr	r0, [r6, #8]
 80047cc:	6803      	ldr	r3, [r0, #0]
 80047ce:	6a1b      	ldr	r3, [r3, #32]
 80047d0:	4798      	blx	r3
 80047d2:	f641 037b 	movw	r3, #6267	@ 0x187b
 80047d6:	4298      	cmp	r0, r3
 80047d8:	d805      	bhi.n	80047e6 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x26>
 80047da:	4b44      	ldr	r3, [pc, #272]	@ (80048ec <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x12c>)
 80047dc:	4a44      	ldr	r2, [pc, #272]	@ (80048f0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 80047de:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047e0:	4844      	ldr	r0, [pc, #272]	@ (80048f4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x134>)
 80047e2:	f025 fa67 	bl	8029cb4 <__assert_func>
 80047e6:	6870      	ldr	r0, [r6, #4]
 80047e8:	6803      	ldr	r3, [r0, #0]
 80047ea:	6a1b      	ldr	r3, [r3, #32]
 80047ec:	4798      	blx	r3
 80047ee:	280f      	cmp	r0, #15
 80047f0:	d803      	bhi.n	80047fa <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x3a>
 80047f2:	4b41      	ldr	r3, [pc, #260]	@ (80048f8 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x138>)
 80047f4:	4a3e      	ldr	r2, [pc, #248]	@ (80048f0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 80047f6:	21a4      	movs	r1, #164	@ 0xa4
 80047f8:	e7f2      	b.n	80047e0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80047fa:	68f0      	ldr	r0, [r6, #12]
 80047fc:	6803      	ldr	r3, [r0, #0]
 80047fe:	6a1b      	ldr	r3, [r3, #32]
 8004800:	4798      	blx	r3
 8004802:	280b      	cmp	r0, #11
 8004804:	d803      	bhi.n	800480e <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x4e>
 8004806:	4b3d      	ldr	r3, [pc, #244]	@ (80048fc <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x13c>)
 8004808:	4a39      	ldr	r2, [pc, #228]	@ (80048f0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 800480a:	21a5      	movs	r1, #165	@ 0xa5
 800480c:	e7e8      	b.n	80047e0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800480e:	f011 fcf9 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004812:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8004904 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x144>
 8004816:	3004      	adds	r0, #4
 8004818:	f011 fd41 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800481c:	f8d9 0000 	ldr.w	r0, [r9]
 8004820:	b110      	cbz	r0, 8004828 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8004822:	6803      	ldr	r3, [r0, #0]
 8004824:	68db      	ldr	r3, [r3, #12]
 8004826:	4798      	blx	r3
    if (*currentTrans)
 8004828:	f8d9 0000 	ldr.w	r0, [r9]
 800482c:	b110      	cbz	r0, 8004834 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800482e:	6803      	ldr	r3, [r0, #0]
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	4798      	blx	r3
    if (*currentScreen)
 8004834:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004908 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x148>
 8004838:	f8d8 0000 	ldr.w	r0, [r8]
 800483c:	b110      	cbz	r0, 8004844 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800483e:	6803      	ldr	r3, [r0, #0]
 8004840:	695b      	ldr	r3, [r3, #20]
 8004842:	4798      	blx	r3
    if (*currentPresenter)
 8004844:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004848:	b110      	cbz	r0, 8004850 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800484a:	6803      	ldr	r3, [r0, #0]
 800484c:	685b      	ldr	r3, [r3, #4]
 800484e:	4798      	blx	r3
    if (*currentScreen)
 8004850:	f8d8 0000 	ldr.w	r0, [r8]
 8004854:	b110      	cbz	r0, 800485c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004856:	6803      	ldr	r3, [r0, #0]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	4798      	blx	r3
    if (*currentPresenter)
 800485c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004860:	b110      	cbz	r0, 8004868 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004862:	6803      	ldr	r3, [r0, #0]
 8004864:	689b      	ldr	r3, [r3, #8]
 8004866:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004868:	68f0      	ldr	r0, [r6, #12]
 800486a:	2100      	movs	r1, #0
 800486c:	f7ff fd0e 	bl	800428c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004870:	f04f 0b00 	mov.w	fp, #0
 8004874:	4b22      	ldr	r3, [pc, #136]	@ (8004900 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x140>)
 8004876:	f8c0 b004 	str.w	fp, [r0, #4]
 800487a:	4604      	mov	r4, r0
 800487c:	f880 b008 	strb.w	fp, [r0, #8]
 8004880:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004882:	68b0      	ldr	r0, [r6, #8]
 8004884:	6803      	ldr	r3, [r0, #0]
 8004886:	4659      	mov	r1, fp
 8004888:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800488a:	4798      	blx	r3
 800488c:	4605      	mov	r5, r0
 800488e:	f005 f9e5 	bl	8009c5c <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004892:	6870      	ldr	r0, [r6, #4]
 8004894:	6803      	ldr	r3, [r0, #0]
 8004896:	4659      	mov	r1, fp
 8004898:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800489a:	4798      	blx	r3
 800489c:	4629      	mov	r1, r5
 800489e:	4606      	mov	r6, r0
 80048a0:	f005 f9ba 	bl	8009c18 <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
 80048a4:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80048a6:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80048aa:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80048ae:	f8c8 5000 	str.w	r5, [r8]
 80048b2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048b6:	682b      	ldr	r3, [r5, #0]
 80048b8:	f8c6 a008 	str.w	sl, [r6, #8]
 80048bc:	4628      	mov	r0, r5
 80048be:	68db      	ldr	r3, [r3, #12]
 80048c0:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80048c2:	4798      	blx	r3
    newPresenter->activate();
 80048c4:	6833      	ldr	r3, [r6, #0]
 80048c6:	4630      	mov	r0, r6
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048cc:	4621      	mov	r1, r4
 80048ce:	4628      	mov	r0, r5
 80048d0:	f013 fd7c 	bl	80183cc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048d4:	6823      	ldr	r3, [r4, #0]
 80048d6:	4620      	mov	r0, r4
 80048d8:	691b      	ldr	r3, [r3, #16]
 80048da:	4798      	blx	r3
    newTransition->invalidate();
 80048dc:	6823      	ldr	r3, [r4, #0]
 80048de:	695b      	ldr	r3, [r3, #20]
 80048e0:	4620      	mov	r0, r4
}
 80048e2:	b001      	add	sp, #4
 80048e4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048e8:	4718      	bx	r3
 80048ea:	bf00      	nop
 80048ec:	0802b788 	.word	0x0802b788
 80048f0:	0802bd05 	.word	0x0802bd05
 80048f4:	0802b8ec 	.word	0x0802b8ec
 80048f8:	0802b933 	.word	0x0802b933
 80048fc:	0802b9d6 	.word	0x0802b9d6
 8004900:	0802caa0 	.word	0x0802caa0
 8004904:	20013fa8 	.word	0x20013fa8
 8004908:	20013fa4 	.word	0x20013fa4

0800490c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 800490c:	6803      	ldr	r3, [r0, #0]
 800490e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004910:	4718      	bx	r3
	...

08004914 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
 8004914:	2300      	movs	r3, #0
    WipeTransition(const uint8_t transitionSteps = 20)
 8004916:	b570      	push	{r4, r5, r6, lr}
          solid()
 8004918:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800491c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8004920:	e9c0 3309 	strd	r3, r3, [r0, #36]	@ 0x24
 8004924:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8004928:	6043      	str	r3, [r0, #4]
 800492a:	7203      	strb	r3, [r0, #8]
          animationCounter(0),
 800492c:	7283      	strb	r3, [r0, #10]
          calculatedValue(0),
 800492e:	81c3      	strh	r3, [r0, #14]
          solid()
 8004930:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8004934:	6343      	str	r3, [r0, #52]	@ 0x34
    class FullSolidRect : public Widget
 8004936:	4b0c      	ldr	r3, [pc, #48]	@ (8004968 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 8004938:	6103      	str	r3, [r0, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 800493a:	4b0c      	ldr	r3, [pc, #48]	@ (800496c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
          animationSteps(transitionSteps),
 800493c:	7241      	strb	r1, [r0, #9]
            targetValue = HAL::DISPLAY_WIDTH;
 800493e:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004942:	4b0b      	ldr	r3, [pc, #44]	@ (8004970 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
          solid()
 8004944:	4a0b      	ldr	r2, [pc, #44]	@ (8004974 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004946:	f9b3 6000 	ldrsh.w	r6, [r3]
          solid()
 800494a:	6002      	str	r2, [r0, #0]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800494c:	f100 0510 	add.w	r5, r0, #16
    WipeTransition(const uint8_t transitionSteps = 20)
 8004950:	4604      	mov	r4, r0
            targetValue = HAL::DISPLAY_WIDTH;
 8004952:	8181      	strh	r1, [r0, #12]
        setWidth(width);
 8004954:	4628      	mov	r0, r5
 8004956:	f7fd f995 	bl	8001c84 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800495a:	4628      	mov	r0, r5
 800495c:	4631      	mov	r1, r6
 800495e:	f7fd f993 	bl	8001c88 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 8004962:	4620      	mov	r0, r4
 8004964:	bd70      	pop	{r4, r5, r6, pc}
 8004966:	bf00      	nop
 8004968:	0802c9cc 	.word	0x0802c9cc
 800496c:	20013f54 	.word	0x20013f54
 8004970:	20013f56 	.word	0x20013f56
 8004974:	0802cac4 	.word	0x0802cac4

08004978 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv>:
{
 8004978:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<EasyReadyScreenView, EasyReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800497c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004980:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004982:	68b0      	ldr	r0, [r6, #8]
 8004984:	6803      	ldr	r3, [r0, #0]
 8004986:	6a1b      	ldr	r3, [r3, #32]
 8004988:	4798      	blx	r3
 800498a:	f241 53bb 	movw	r3, #5563	@ 0x15bb
 800498e:	4298      	cmp	r0, r3
 8004990:	d805      	bhi.n	800499e <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x26>
 8004992:	4b41      	ldr	r3, [pc, #260]	@ (8004a98 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 8004994:	4a41      	ldr	r2, [pc, #260]	@ (8004a9c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004996:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004998:	4841      	ldr	r0, [pc, #260]	@ (8004aa0 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 800499a:	f025 f98b 	bl	8029cb4 <__assert_func>
 800499e:	6870      	ldr	r0, [r6, #4]
 80049a0:	6803      	ldr	r3, [r0, #0]
 80049a2:	6a1b      	ldr	r3, [r3, #32]
 80049a4:	4798      	blx	r3
 80049a6:	280f      	cmp	r0, #15
 80049a8:	d803      	bhi.n	80049b2 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x3a>
 80049aa:	4b3e      	ldr	r3, [pc, #248]	@ (8004aa4 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 80049ac:	4a3b      	ldr	r2, [pc, #236]	@ (8004a9c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 80049ae:	21a4      	movs	r1, #164	@ 0xa4
 80049b0:	e7f2      	b.n	8004998 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049b2:	68f0      	ldr	r0, [r6, #12]
 80049b4:	6803      	ldr	r3, [r0, #0]
 80049b6:	6a1b      	ldr	r3, [r3, #32]
 80049b8:	4798      	blx	r3
 80049ba:	2837      	cmp	r0, #55	@ 0x37
 80049bc:	d803      	bhi.n	80049c6 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x4e>
 80049be:	4b3a      	ldr	r3, [pc, #232]	@ (8004aa8 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x130>)
 80049c0:	4a36      	ldr	r2, [pc, #216]	@ (8004a9c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 80049c2:	21a5      	movs	r1, #165	@ 0xa5
 80049c4:	e7e8      	b.n	8004998 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80049c6:	f011 fc1d 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80049ca:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004aac <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x134>
 80049ce:	3004      	adds	r0, #4
 80049d0:	f011 fc65 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80049d4:	f8d9 0000 	ldr.w	r0, [r9]
 80049d8:	b110      	cbz	r0, 80049e0 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80049da:	6803      	ldr	r3, [r0, #0]
 80049dc:	68db      	ldr	r3, [r3, #12]
 80049de:	4798      	blx	r3
    if (*currentTrans)
 80049e0:	f8d9 0000 	ldr.w	r0, [r9]
 80049e4:	b110      	cbz	r0, 80049ec <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80049e6:	6803      	ldr	r3, [r0, #0]
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	4798      	blx	r3
    if (*currentScreen)
 80049ec:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8004ab0 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x138>
 80049f0:	f8d8 0000 	ldr.w	r0, [r8]
 80049f4:	b110      	cbz	r0, 80049fc <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80049f6:	6803      	ldr	r3, [r0, #0]
 80049f8:	695b      	ldr	r3, [r3, #20]
 80049fa:	4798      	blx	r3
    if (*currentPresenter)
 80049fc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004a00:	b110      	cbz	r0, 8004a08 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004a02:	6803      	ldr	r3, [r0, #0]
 8004a04:	685b      	ldr	r3, [r3, #4]
 8004a06:	4798      	blx	r3
    if (*currentScreen)
 8004a08:	f8d8 0000 	ldr.w	r0, [r8]
 8004a0c:	b110      	cbz	r0, 8004a14 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004a0e:	6803      	ldr	r3, [r0, #0]
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	4798      	blx	r3
    if (*currentPresenter)
 8004a14:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004a18:	b110      	cbz	r0, 8004a20 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004a1a:	6803      	ldr	r3, [r0, #0]
 8004a1c:	689b      	ldr	r3, [r3, #8]
 8004a1e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a20:	68f0      	ldr	r0, [r6, #12]
 8004a22:	2100      	movs	r1, #0
 8004a24:	f7ff ff72 	bl	800490c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004a28:	2114      	movs	r1, #20
 8004a2a:	4604      	mov	r4, r0
 8004a2c:	f7ff ff72 	bl	8004914 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a30:	68b0      	ldr	r0, [r6, #8]
 8004a32:	6803      	ldr	r3, [r0, #0]
 8004a34:	2100      	movs	r1, #0
 8004a36:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a38:	4798      	blx	r3
 8004a3a:	4605      	mov	r5, r0
 8004a3c:	f002 fd78 	bl	8007530 <_ZN19EasyReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a40:	6870      	ldr	r0, [r6, #4]
 8004a42:	6803      	ldr	r3, [r0, #0]
 8004a44:	2100      	movs	r1, #0
 8004a46:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a48:	4798      	blx	r3
 8004a4a:	4629      	mov	r1, r5
 8004a4c:	4606      	mov	r6, r0
 8004a4e:	f002 fd39 	bl	80074c4 <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView>
    model->bind(newPresenter);
 8004a52:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004a54:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004a58:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004a5c:	f8c8 5000 	str.w	r5, [r8]
 8004a60:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a64:	682b      	ldr	r3, [r5, #0]
 8004a66:	f8c6 a008 	str.w	sl, [r6, #8]
 8004a6a:	4628      	mov	r0, r5
 8004a6c:	68db      	ldr	r3, [r3, #12]
 8004a6e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004a70:	4798      	blx	r3
    newPresenter->activate();
 8004a72:	6833      	ldr	r3, [r6, #0]
 8004a74:	4630      	mov	r0, r6
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a7a:	4621      	mov	r1, r4
 8004a7c:	4628      	mov	r0, r5
 8004a7e:	f013 fca5 	bl	80183cc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a82:	6823      	ldr	r3, [r4, #0]
 8004a84:	4620      	mov	r0, r4
 8004a86:	691b      	ldr	r3, [r3, #16]
 8004a88:	4798      	blx	r3
    newTransition->invalidate();
 8004a8a:	6823      	ldr	r3, [r4, #0]
 8004a8c:	4620      	mov	r0, r4
 8004a8e:	695b      	ldr	r3, [r3, #20]
}
 8004a90:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a94:	4718      	bx	r3
 8004a96:	bf00      	nop
 8004a98:	0802b788 	.word	0x0802b788
 8004a9c:	0802bddf 	.word	0x0802bddf
 8004aa0:	0802b8ec 	.word	0x0802b8ec
 8004aa4:	0802b933 	.word	0x0802b933
 8004aa8:	0802b9d6 	.word	0x0802b9d6
 8004aac:	20013fa8 	.word	0x20013fa8
 8004ab0:	20013fa4 	.word	0x20013fa4

08004ab4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv>:
{
 8004ab4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MediumReadyScreenView, MediumReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ab8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004abc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004abe:	68b0      	ldr	r0, [r6, #8]
 8004ac0:	6803      	ldr	r3, [r0, #0]
 8004ac2:	6a1b      	ldr	r3, [r3, #32]
 8004ac4:	4798      	blx	r3
 8004ac6:	f241 6323 	movw	r3, #5667	@ 0x1623
 8004aca:	4298      	cmp	r0, r3
 8004acc:	d805      	bhi.n	8004ada <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x26>
 8004ace:	4b41      	ldr	r3, [pc, #260]	@ (8004bd4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 8004ad0:	4a41      	ldr	r2, [pc, #260]	@ (8004bd8 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004ad2:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ad4:	4841      	ldr	r0, [pc, #260]	@ (8004bdc <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 8004ad6:	f025 f8ed 	bl	8029cb4 <__assert_func>
 8004ada:	6870      	ldr	r0, [r6, #4]
 8004adc:	6803      	ldr	r3, [r0, #0]
 8004ade:	6a1b      	ldr	r3, [r3, #32]
 8004ae0:	4798      	blx	r3
 8004ae2:	280f      	cmp	r0, #15
 8004ae4:	d803      	bhi.n	8004aee <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x3a>
 8004ae6:	4b3e      	ldr	r3, [pc, #248]	@ (8004be0 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 8004ae8:	4a3b      	ldr	r2, [pc, #236]	@ (8004bd8 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004aea:	21a4      	movs	r1, #164	@ 0xa4
 8004aec:	e7f2      	b.n	8004ad4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004aee:	68f0      	ldr	r0, [r6, #12]
 8004af0:	6803      	ldr	r3, [r0, #0]
 8004af2:	6a1b      	ldr	r3, [r3, #32]
 8004af4:	4798      	blx	r3
 8004af6:	2837      	cmp	r0, #55	@ 0x37
 8004af8:	d803      	bhi.n	8004b02 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x4e>
 8004afa:	4b3a      	ldr	r3, [pc, #232]	@ (8004be4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x130>)
 8004afc:	4a36      	ldr	r2, [pc, #216]	@ (8004bd8 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004afe:	21a5      	movs	r1, #165	@ 0xa5
 8004b00:	e7e8      	b.n	8004ad4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004b02:	f011 fb7f 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b06:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004be8 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x134>
 8004b0a:	3004      	adds	r0, #4
 8004b0c:	f011 fbc7 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b10:	f8d9 0000 	ldr.w	r0, [r9]
 8004b14:	b110      	cbz	r0, 8004b1c <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004b16:	6803      	ldr	r3, [r0, #0]
 8004b18:	68db      	ldr	r3, [r3, #12]
 8004b1a:	4798      	blx	r3
    if (*currentTrans)
 8004b1c:	f8d9 0000 	ldr.w	r0, [r9]
 8004b20:	b110      	cbz	r0, 8004b28 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004b22:	6803      	ldr	r3, [r0, #0]
 8004b24:	681b      	ldr	r3, [r3, #0]
 8004b26:	4798      	blx	r3
    if (*currentScreen)
 8004b28:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8004bec <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x138>
 8004b2c:	f8d8 0000 	ldr.w	r0, [r8]
 8004b30:	b110      	cbz	r0, 8004b38 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004b32:	6803      	ldr	r3, [r0, #0]
 8004b34:	695b      	ldr	r3, [r3, #20]
 8004b36:	4798      	blx	r3
    if (*currentPresenter)
 8004b38:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004b3c:	b110      	cbz	r0, 8004b44 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004b3e:	6803      	ldr	r3, [r0, #0]
 8004b40:	685b      	ldr	r3, [r3, #4]
 8004b42:	4798      	blx	r3
    if (*currentScreen)
 8004b44:	f8d8 0000 	ldr.w	r0, [r8]
 8004b48:	b110      	cbz	r0, 8004b50 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004b4a:	6803      	ldr	r3, [r0, #0]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	4798      	blx	r3
    if (*currentPresenter)
 8004b50:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004b54:	b110      	cbz	r0, 8004b5c <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004b56:	6803      	ldr	r3, [r0, #0]
 8004b58:	689b      	ldr	r3, [r3, #8]
 8004b5a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b5c:	68f0      	ldr	r0, [r6, #12]
 8004b5e:	2100      	movs	r1, #0
 8004b60:	f7ff fed4 	bl	800490c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004b64:	2114      	movs	r1, #20
 8004b66:	4604      	mov	r4, r0
 8004b68:	f7ff fed4 	bl	8004914 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b6c:	68b0      	ldr	r0, [r6, #8]
 8004b6e:	6803      	ldr	r3, [r0, #0]
 8004b70:	2100      	movs	r1, #0
 8004b72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b74:	4798      	blx	r3
 8004b76:	4605      	mov	r5, r0
 8004b78:	f004 fbde 	bl	8009338 <_ZN21MediumReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b7c:	6870      	ldr	r0, [r6, #4]
 8004b7e:	6803      	ldr	r3, [r0, #0]
 8004b80:	2100      	movs	r1, #0
 8004b82:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b84:	4798      	blx	r3
 8004b86:	4629      	mov	r1, r5
 8004b88:	4606      	mov	r6, r0
 8004b8a:	f004 fb9f 	bl	80092cc <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView>
    model->bind(newPresenter);
 8004b8e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004b90:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004b94:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004b98:	f8c8 5000 	str.w	r5, [r8]
 8004b9c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ba0:	682b      	ldr	r3, [r5, #0]
 8004ba2:	f8c6 a008 	str.w	sl, [r6, #8]
 8004ba6:	4628      	mov	r0, r5
 8004ba8:	68db      	ldr	r3, [r3, #12]
 8004baa:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004bac:	4798      	blx	r3
    newPresenter->activate();
 8004bae:	6833      	ldr	r3, [r6, #0]
 8004bb0:	4630      	mov	r0, r6
 8004bb2:	681b      	ldr	r3, [r3, #0]
 8004bb4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004bb6:	4621      	mov	r1, r4
 8004bb8:	4628      	mov	r0, r5
 8004bba:	f013 fc07 	bl	80183cc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004bbe:	6823      	ldr	r3, [r4, #0]
 8004bc0:	4620      	mov	r0, r4
 8004bc2:	691b      	ldr	r3, [r3, #16]
 8004bc4:	4798      	blx	r3
    newTransition->invalidate();
 8004bc6:	6823      	ldr	r3, [r4, #0]
 8004bc8:	4620      	mov	r0, r4
 8004bca:	695b      	ldr	r3, [r3, #20]
}
 8004bcc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004bd0:	4718      	bx	r3
 8004bd2:	bf00      	nop
 8004bd4:	0802b788 	.word	0x0802b788
 8004bd8:	0802bed3 	.word	0x0802bed3
 8004bdc:	0802b8ec 	.word	0x0802b8ec
 8004be0:	0802b933 	.word	0x0802b933
 8004be4:	0802b9d6 	.word	0x0802b9d6
 8004be8:	20013fa8 	.word	0x20013fa8
 8004bec:	20013fa4 	.word	0x20013fa4

08004bf0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv>:
{
 8004bf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<HardReadyScreenView, HardReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004bf4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004bf8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004bfa:	68b0      	ldr	r0, [r6, #8]
 8004bfc:	6803      	ldr	r3, [r0, #0]
 8004bfe:	6a1b      	ldr	r3, [r3, #32]
 8004c00:	4798      	blx	r3
 8004c02:	f241 63d3 	movw	r3, #5843	@ 0x16d3
 8004c06:	4298      	cmp	r0, r3
 8004c08:	d805      	bhi.n	8004c16 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x26>
 8004c0a:	4b41      	ldr	r3, [pc, #260]	@ (8004d10 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 8004c0c:	4a41      	ldr	r2, [pc, #260]	@ (8004d14 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004c0e:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c10:	4841      	ldr	r0, [pc, #260]	@ (8004d18 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 8004c12:	f025 f84f 	bl	8029cb4 <__assert_func>
 8004c16:	6870      	ldr	r0, [r6, #4]
 8004c18:	6803      	ldr	r3, [r0, #0]
 8004c1a:	6a1b      	ldr	r3, [r3, #32]
 8004c1c:	4798      	blx	r3
 8004c1e:	280f      	cmp	r0, #15
 8004c20:	d803      	bhi.n	8004c2a <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x3a>
 8004c22:	4b3e      	ldr	r3, [pc, #248]	@ (8004d1c <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 8004c24:	4a3b      	ldr	r2, [pc, #236]	@ (8004d14 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004c26:	21a4      	movs	r1, #164	@ 0xa4
 8004c28:	e7f2      	b.n	8004c10 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c2a:	68f0      	ldr	r0, [r6, #12]
 8004c2c:	6803      	ldr	r3, [r0, #0]
 8004c2e:	6a1b      	ldr	r3, [r3, #32]
 8004c30:	4798      	blx	r3
 8004c32:	2837      	cmp	r0, #55	@ 0x37
 8004c34:	d803      	bhi.n	8004c3e <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x4e>
 8004c36:	4b3a      	ldr	r3, [pc, #232]	@ (8004d20 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x130>)
 8004c38:	4a36      	ldr	r2, [pc, #216]	@ (8004d14 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004c3a:	21a5      	movs	r1, #165	@ 0xa5
 8004c3c:	e7e8      	b.n	8004c10 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004c3e:	f011 fae1 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c42:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004d24 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x134>
 8004c46:	3004      	adds	r0, #4
 8004c48:	f011 fb29 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c4c:	f8d9 0000 	ldr.w	r0, [r9]
 8004c50:	b110      	cbz	r0, 8004c58 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004c52:	6803      	ldr	r3, [r0, #0]
 8004c54:	68db      	ldr	r3, [r3, #12]
 8004c56:	4798      	blx	r3
    if (*currentTrans)
 8004c58:	f8d9 0000 	ldr.w	r0, [r9]
 8004c5c:	b110      	cbz	r0, 8004c64 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c5e:	6803      	ldr	r3, [r0, #0]
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	4798      	blx	r3
    if (*currentScreen)
 8004c64:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8004d28 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x138>
 8004c68:	f8d8 0000 	ldr.w	r0, [r8]
 8004c6c:	b110      	cbz	r0, 8004c74 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004c6e:	6803      	ldr	r3, [r0, #0]
 8004c70:	695b      	ldr	r3, [r3, #20]
 8004c72:	4798      	blx	r3
    if (*currentPresenter)
 8004c74:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004c78:	b110      	cbz	r0, 8004c80 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004c7a:	6803      	ldr	r3, [r0, #0]
 8004c7c:	685b      	ldr	r3, [r3, #4]
 8004c7e:	4798      	blx	r3
    if (*currentScreen)
 8004c80:	f8d8 0000 	ldr.w	r0, [r8]
 8004c84:	b110      	cbz	r0, 8004c8c <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004c86:	6803      	ldr	r3, [r0, #0]
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	4798      	blx	r3
    if (*currentPresenter)
 8004c8c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004c90:	b110      	cbz	r0, 8004c98 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004c92:	6803      	ldr	r3, [r0, #0]
 8004c94:	689b      	ldr	r3, [r3, #8]
 8004c96:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c98:	68f0      	ldr	r0, [r6, #12]
 8004c9a:	2100      	movs	r1, #0
 8004c9c:	f7ff fe36 	bl	800490c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004ca0:	2114      	movs	r1, #20
 8004ca2:	4604      	mov	r4, r0
 8004ca4:	f7ff fe36 	bl	8004914 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ca8:	68b0      	ldr	r0, [r6, #8]
 8004caa:	6803      	ldr	r3, [r0, #0]
 8004cac:	2100      	movs	r1, #0
 8004cae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cb0:	4798      	blx	r3
 8004cb2:	4605      	mov	r5, r0
 8004cb4:	f003 fcea 	bl	800868c <_ZN19HardReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004cb8:	6870      	ldr	r0, [r6, #4]
 8004cba:	6803      	ldr	r3, [r0, #0]
 8004cbc:	2100      	movs	r1, #0
 8004cbe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cc0:	4798      	blx	r3
 8004cc2:	4629      	mov	r1, r5
 8004cc4:	4606      	mov	r6, r0
 8004cc6:	f003 fcab 	bl	8008620 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView>
    model->bind(newPresenter);
 8004cca:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004ccc:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004cd0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004cd4:	f8c8 5000 	str.w	r5, [r8]
 8004cd8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004cdc:	682b      	ldr	r3, [r5, #0]
 8004cde:	f8c6 a008 	str.w	sl, [r6, #8]
 8004ce2:	4628      	mov	r0, r5
 8004ce4:	68db      	ldr	r3, [r3, #12]
 8004ce6:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004ce8:	4798      	blx	r3
    newPresenter->activate();
 8004cea:	6833      	ldr	r3, [r6, #0]
 8004cec:	4630      	mov	r0, r6
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004cf2:	4621      	mov	r1, r4
 8004cf4:	4628      	mov	r0, r5
 8004cf6:	f013 fb69 	bl	80183cc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004cfa:	6823      	ldr	r3, [r4, #0]
 8004cfc:	4620      	mov	r0, r4
 8004cfe:	691b      	ldr	r3, [r3, #16]
 8004d00:	4798      	blx	r3
    newTransition->invalidate();
 8004d02:	6823      	ldr	r3, [r4, #0]
 8004d04:	4620      	mov	r0, r4
 8004d06:	695b      	ldr	r3, [r3, #20]
}
 8004d08:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d0c:	4718      	bx	r3
 8004d0e:	bf00      	nop
 8004d10:	0802b788 	.word	0x0802b788
 8004d14:	0802bfcb 	.word	0x0802bfcb
 8004d18:	0802b8ec 	.word	0x0802b8ec
 8004d1c:	0802b933 	.word	0x0802b933
 8004d20:	0802b9d6 	.word	0x0802b9d6
 8004d24:	20013fa8 	.word	0x20013fa8
 8004d28:	20013fa4 	.word	0x20013fa4

08004d2c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv>:
{
 8004d2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d30:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004d34:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d36:	68b0      	ldr	r0, [r6, #8]
 8004d38:	6803      	ldr	r3, [r0, #0]
 8004d3a:	6a1b      	ldr	r3, [r3, #32]
 8004d3c:	4798      	blx	r3
 8004d3e:	f641 037b 	movw	r3, #6267	@ 0x187b
 8004d42:	4298      	cmp	r0, r3
 8004d44:	d805      	bhi.n	8004d52 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x26>
 8004d46:	4b41      	ldr	r3, [pc, #260]	@ (8004e4c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x120>)
 8004d48:	4a41      	ldr	r2, [pc, #260]	@ (8004e50 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 8004d4a:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d4c:	4841      	ldr	r0, [pc, #260]	@ (8004e54 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x128>)
 8004d4e:	f024 ffb1 	bl	8029cb4 <__assert_func>
 8004d52:	6870      	ldr	r0, [r6, #4]
 8004d54:	6803      	ldr	r3, [r0, #0]
 8004d56:	6a1b      	ldr	r3, [r3, #32]
 8004d58:	4798      	blx	r3
 8004d5a:	280f      	cmp	r0, #15
 8004d5c:	d803      	bhi.n	8004d66 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x3a>
 8004d5e:	4b3e      	ldr	r3, [pc, #248]	@ (8004e58 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x12c>)
 8004d60:	4a3b      	ldr	r2, [pc, #236]	@ (8004e50 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 8004d62:	21a4      	movs	r1, #164	@ 0xa4
 8004d64:	e7f2      	b.n	8004d4c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d66:	68f0      	ldr	r0, [r6, #12]
 8004d68:	6803      	ldr	r3, [r0, #0]
 8004d6a:	6a1b      	ldr	r3, [r3, #32]
 8004d6c:	4798      	blx	r3
 8004d6e:	2837      	cmp	r0, #55	@ 0x37
 8004d70:	d803      	bhi.n	8004d7a <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x4e>
 8004d72:	4b3a      	ldr	r3, [pc, #232]	@ (8004e5c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x130>)
 8004d74:	4a36      	ldr	r2, [pc, #216]	@ (8004e50 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 8004d76:	21a5      	movs	r1, #165	@ 0xa5
 8004d78:	e7e8      	b.n	8004d4c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004d7a:	f011 fa43 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d7e:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004e60 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x134>
 8004d82:	3004      	adds	r0, #4
 8004d84:	f011 fa8b 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d88:	f8d9 0000 	ldr.w	r0, [r9]
 8004d8c:	b110      	cbz	r0, 8004d94 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004d8e:	6803      	ldr	r3, [r0, #0]
 8004d90:	68db      	ldr	r3, [r3, #12]
 8004d92:	4798      	blx	r3
    if (*currentTrans)
 8004d94:	f8d9 0000 	ldr.w	r0, [r9]
 8004d98:	b110      	cbz	r0, 8004da0 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004d9a:	6803      	ldr	r3, [r0, #0]
 8004d9c:	681b      	ldr	r3, [r3, #0]
 8004d9e:	4798      	blx	r3
    if (*currentScreen)
 8004da0:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8004e64 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x138>
 8004da4:	f8d8 0000 	ldr.w	r0, [r8]
 8004da8:	b110      	cbz	r0, 8004db0 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004daa:	6803      	ldr	r3, [r0, #0]
 8004dac:	695b      	ldr	r3, [r3, #20]
 8004dae:	4798      	blx	r3
    if (*currentPresenter)
 8004db0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004db4:	b110      	cbz	r0, 8004dbc <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004db6:	6803      	ldr	r3, [r0, #0]
 8004db8:	685b      	ldr	r3, [r3, #4]
 8004dba:	4798      	blx	r3
    if (*currentScreen)
 8004dbc:	f8d8 0000 	ldr.w	r0, [r8]
 8004dc0:	b110      	cbz	r0, 8004dc8 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004dc2:	6803      	ldr	r3, [r0, #0]
 8004dc4:	681b      	ldr	r3, [r3, #0]
 8004dc6:	4798      	blx	r3
    if (*currentPresenter)
 8004dc8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004dcc:	b110      	cbz	r0, 8004dd4 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004dce:	6803      	ldr	r3, [r0, #0]
 8004dd0:	689b      	ldr	r3, [r3, #8]
 8004dd2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004dd4:	68f0      	ldr	r0, [r6, #12]
 8004dd6:	2100      	movs	r1, #0
 8004dd8:	f7ff fd98 	bl	800490c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004ddc:	2114      	movs	r1, #20
 8004dde:	4604      	mov	r4, r0
 8004de0:	f7ff fd98 	bl	8004914 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004de4:	68b0      	ldr	r0, [r6, #8]
 8004de6:	6803      	ldr	r3, [r0, #0]
 8004de8:	2100      	movs	r1, #0
 8004dea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004dec:	4798      	blx	r3
 8004dee:	4605      	mov	r5, r0
 8004df0:	f004 ff34 	bl	8009c5c <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004df4:	6870      	ldr	r0, [r6, #4]
 8004df6:	6803      	ldr	r3, [r0, #0]
 8004df8:	2100      	movs	r1, #0
 8004dfa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004dfc:	4798      	blx	r3
 8004dfe:	4629      	mov	r1, r5
 8004e00:	4606      	mov	r6, r0
 8004e02:	f004 ff09 	bl	8009c18 <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
 8004e06:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004e08:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004e0c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004e10:	f8c8 5000 	str.w	r5, [r8]
 8004e14:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e18:	682b      	ldr	r3, [r5, #0]
 8004e1a:	f8c6 a008 	str.w	sl, [r6, #8]
 8004e1e:	4628      	mov	r0, r5
 8004e20:	68db      	ldr	r3, [r3, #12]
 8004e22:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004e24:	4798      	blx	r3
    newPresenter->activate();
 8004e26:	6833      	ldr	r3, [r6, #0]
 8004e28:	4630      	mov	r0, r6
 8004e2a:	681b      	ldr	r3, [r3, #0]
 8004e2c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e2e:	4621      	mov	r1, r4
 8004e30:	4628      	mov	r0, r5
 8004e32:	f013 facb 	bl	80183cc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e36:	6823      	ldr	r3, [r4, #0]
 8004e38:	4620      	mov	r0, r4
 8004e3a:	691b      	ldr	r3, [r3, #16]
 8004e3c:	4798      	blx	r3
    newTransition->invalidate();
 8004e3e:	6823      	ldr	r3, [r4, #0]
 8004e40:	4620      	mov	r0, r4
 8004e42:	695b      	ldr	r3, [r3, #20]
}
 8004e44:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e48:	4718      	bx	r3
 8004e4a:	bf00      	nop
 8004e4c:	0802b788 	.word	0x0802b788
 8004e50:	0802c0bf 	.word	0x0802c0bf
 8004e54:	0802b8ec 	.word	0x0802b8ec
 8004e58:	0802b933 	.word	0x0802b933
 8004e5c:	0802b9d6 	.word	0x0802b9d6
 8004e60:	20013fa8 	.word	0x20013fa8
 8004e64:	20013fa4 	.word	0x20013fa4

08004e68 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004e68:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8004e6a:	4770      	bx	lr

08004e6c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004e6c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8004e6e:	4770      	bx	lr

08004e70 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004e70:	4770      	bx	lr

08004e72 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004e72:	888b      	ldrh	r3, [r1, #4]
 8004e74:	69c0      	ldr	r0, [r0, #28]
 8004e76:	680a      	ldr	r2, [r1, #0]
 8004e78:	0adb      	lsrs	r3, r3, #11
 8004e7a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004e7e:	4410      	add	r0, r2
 8004e80:	4770      	bx	lr

08004e82 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004e82:	b510      	push	{r4, lr}
 8004e84:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8004e86:	b1ba      	cbz	r2, 8004eb8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004e88:	7b10      	ldrb	r0, [r2, #12]
 8004e8a:	b168      	cbz	r0, 8004ea8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004e8c:	7b53      	ldrb	r3, [r2, #13]
 8004e8e:	7ad2      	ldrb	r2, [r2, #11]
 8004e90:	021b      	lsls	r3, r3, #8
 8004e92:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004e96:	431a      	orrs	r2, r3
 8004e98:	6a23      	ldr	r3, [r4, #32]
 8004e9a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004e9e:	881a      	ldrh	r2, [r3, #0]
 8004ea0:	428a      	cmp	r2, r1
 8004ea2:	d102      	bne.n	8004eaa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004ea4:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8004ea8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004eaa:	d805      	bhi.n	8004eb8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004eac:	3801      	subs	r0, #1
 8004eae:	b280      	uxth	r0, r0
 8004eb0:	3304      	adds	r3, #4
 8004eb2:	2800      	cmp	r0, #0
 8004eb4:	d1f3      	bne.n	8004e9e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004eb6:	e7f7      	b.n	8004ea8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004eb8:	2000      	movs	r0, #0
 8004eba:	e7f5      	b.n	8004ea8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004ebc <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004ebc:	b510      	push	{r4, lr}
 8004ebe:	212c      	movs	r1, #44	@ 0x2c
 8004ec0:	4604      	mov	r4, r0
 8004ec2:	f023 feb9 	bl	8028c38 <_ZdlPvj>
 8004ec6:	4620      	mov	r0, r4
 8004ec8:	bd10      	pop	{r4, pc}
	...

08004ecc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004ecc:	b530      	push	{r4, r5, lr}
 8004ece:	b08b      	sub	sp, #44	@ 0x2c
 8004ed0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8004ed2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8004ed6:	9508      	str	r5, [sp, #32]
 8004ed8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8004edc:	9507      	str	r5, [sp, #28]
 8004ede:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8004ee2:	9506      	str	r5, [sp, #24]
 8004ee4:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8004ee8:	9505      	str	r5, [sp, #20]
 8004eea:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8004eee:	9504      	str	r5, [sp, #16]
 8004ef0:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8004ef4:	9503      	str	r5, [sp, #12]
 8004ef6:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8004efa:	9502      	str	r5, [sp, #8]
 8004efc:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8004f00:	9501      	str	r5, [sp, #4]
 8004f02:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8004f06:	9500      	str	r5, [sp, #0]
 8004f08:	f012 fdec 	bl	8017ae4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004f0c:	4b06      	ldr	r3, [pc, #24]	@ (8004f28 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8004f0e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8004f10:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004f12:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8004f14:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8004f16:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8004f18:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004f1a:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8004f1c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8004f1e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8004f20:	4620      	mov	r0, r4
 8004f22:	b00b      	add	sp, #44	@ 0x2c
 8004f24:	bd30      	pop	{r4, r5, pc}
 8004f26:	bf00      	nop
 8004f28:	0802cae8 	.word	0x0802cae8

08004f2c <_ZN23HardReadyScreenViewBase11setupScreenEv>:
}

void HardReadyScreenViewBase::setupScreen()
{

}
 8004f2c:	4770      	bx	lr
	...

08004f30 <_ZN23HardReadyScreenViewBaseD1Ev>:
HardReadyScreenViewBase::~HardReadyScreenViewBase()
 8004f30:	b510      	push	{r4, lr}
 8004f32:	4b03      	ldr	r3, [pc, #12]	@ (8004f40 <_ZN23HardReadyScreenViewBaseD1Ev+0x10>)
 8004f34:	6003      	str	r3, [r0, #0]
 8004f36:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004f38:	f00f fc6a 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004f3c:	4620      	mov	r0, r4
 8004f3e:	bd10      	pop	{r4, pc}
 8004f40:	0802cbb8 	.word	0x0802cbb8

08004f44 <_ZN23HardReadyScreenViewBaseD0Ev>:
HardReadyScreenViewBase::~HardReadyScreenViewBase()
 8004f44:	b510      	push	{r4, lr}
 8004f46:	4b06      	ldr	r3, [pc, #24]	@ (8004f60 <_ZN23HardReadyScreenViewBaseD0Ev+0x1c>)
 8004f48:	6003      	str	r3, [r0, #0]
 8004f4a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004f4c:	f00f fc60 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004f50:	4620      	mov	r0, r4
 8004f52:	f241 61d0 	movw	r1, #5840	@ 0x16d0
 8004f56:	f023 fe6f 	bl	8028c38 <_ZdlPvj>
 8004f5a:	4620      	mov	r0, r4
 8004f5c:	bd10      	pop	{r4, pc}
 8004f5e:	bf00      	nop
 8004f60:	0802cbb8 	.word	0x0802cbb8

08004f64 <_ZN23HardReadyScreenViewBase15handleTickEventEv>:

void HardReadyScreenViewBase::handleTickEvent()
{
 8004f64:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 8004f66:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 8004f6a:	f8d4 36cc 	ldr.w	r3, [r4, #1740]	@ 0x6cc
 8004f6e:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8004f70:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 8004f72:	f8c4 36cc 	str.w	r3, [r4, #1740]	@ 0x6cc
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8004f76:	d106      	bne.n	8004f86 <_ZN23HardReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004f78:	f011 f944 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to HardScreen
        //Go to HardScreen with no screen transition
        application().gotoHardScreenScreenNoTransition();
 8004f7c:	f7ff f916 	bl	80041ac <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 8004f80:	2300      	movs	r3, #0
 8004f82:	f8c4 36cc 	str.w	r3, [r4, #1740]	@ 0x6cc
    }
}
 8004f86:	bd10      	pop	{r4, pc}

08004f88 <_ZN8touchgfx6WidgetC1Ev>:
        : x(0), y(0), width(0), height(0)
 8004f88:	2200      	movs	r2, #0
 8004f8a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8004f8e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8004f92:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8004f96:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8004f9a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004f9e:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8004fa0:	4a01      	ldr	r2, [pc, #4]	@ (8004fa8 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8004fa2:	6002      	str	r2, [r0, #0]
 8004fa4:	4770      	bx	lr
 8004fa6:	bf00      	nop
 8004fa8:	0802cb50 	.word	0x0802cb50

08004fac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8004fac:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8004fae:	2226      	movs	r2, #38	@ 0x26
    Image(const Bitmap& bmp = Bitmap())
 8004fb0:	4604      	mov	r4, r0
 8004fb2:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8004fb4:	2100      	movs	r1, #0
 8004fb6:	f025 f8b8 	bl	802a12a <memset>
 8004fba:	4620      	mov	r0, r4
 8004fbc:	f7ff ffe4 	bl	8004f88 <_ZN8touchgfx6WidgetC1Ev>
 8004fc0:	4b06      	ldr	r3, [pc, #24]	@ (8004fdc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8004fc2:	6023      	str	r3, [r4, #0]
 8004fc4:	882b      	ldrh	r3, [r5, #0]
 8004fc6:	84e3      	strh	r3, [r4, #38]	@ 0x26
 8004fc8:	23ff      	movs	r3, #255	@ 0xff
    {
        Image::setBitmap(bmp);
 8004fca:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8004fcc:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        Image::setBitmap(bmp);
 8004fd0:	4629      	mov	r1, r5
 8004fd2:	f00e fc15 	bl	8013800 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8004fd6:	4620      	mov	r0, r4
 8004fd8:	bd38      	pop	{r3, r4, r5, pc}
 8004fda:	bf00      	nop
 8004fdc:	0802d688 	.word	0x0802d688

08004fe0 <_ZN23HardReadyScreenViewBaseC1Ev>:
HardReadyScreenViewBase::HardReadyScreenViewBase() :
 8004fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fe4:	4604      	mov	r4, r0
 8004fe6:	b097      	sub	sp, #92	@ 0x5c
    frameCountInteraction1Interval(0)
 8004fe8:	46a0      	mov	r8, r4
        : presenter(0)
 8004fea:	2600      	movs	r6, #0
 8004fec:	f013 f842 	bl	8018074 <_ZN8touchgfx6ScreenC1Ev>
 8004ff0:	4bdf      	ldr	r3, [pc, #892]	@ (8005370 <_ZN23HardReadyScreenViewBaseC1Ev+0x390>)
 8004ff2:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8004ff4:	f848 3b40 	str.w	r3, [r8], #64
 8004ff8:	4640      	mov	r0, r8
 8004ffa:	f7fe f8b9 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8004ffe:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8005002:	4618      	mov	r0, r3
 8005004:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 8005008:	9309      	str	r3, [sp, #36]	@ 0x24
 800500a:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 800500e:	f7fe f8af 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005012:	4650      	mov	r0, sl
 8005014:	f7fe f8ac 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005018:	4648      	mov	r0, r9
 800501a:	f7fe f8a9 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 800501e:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8005022:	4618      	mov	r0, r3
 8005024:	930a      	str	r3, [sp, #40]	@ 0x28
 8005026:	f00c fda5 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800502a:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 800502e:	4618      	mov	r0, r3
 8005030:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005032:	f7fc ff0b 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005036:	4bcf      	ldr	r3, [pc, #828]	@ (8005374 <_ZN23HardReadyScreenViewBaseC1Ev+0x394>)
 8005038:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 800503c:	3324      	adds	r3, #36	@ 0x24
 800503e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
 8005042:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8005046:	4618      	mov	r0, r3
 8005048:	f8c4 6144 	str.w	r6, [r4, #324]	@ 0x144
 800504c:	4dca      	ldr	r5, [pc, #808]	@ (8005378 <_ZN23HardReadyScreenViewBaseC1Ev+0x398>)
 800504e:	930e      	str	r3, [sp, #56]	@ 0x38
        touchable = touch;
 8005050:	f04f 0701 	mov.w	r7, #1
 8005054:	f7fe f88c 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005058:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 800505c:	f504 7bd2 	add.w	fp, r4, #420	@ 0x1a4
 8005060:	4618      	mov	r0, r3
 8005062:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 8005066:	f884 7170 	strb.w	r7, [r4, #368]	@ 0x170
 800506a:	930d      	str	r3, [sp, #52]	@ 0x34
 800506c:	f7fe f880 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005070:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 8005074:	f884 719c 	strb.w	r7, [r4, #412]	@ 0x19c
 8005078:	4658      	mov	r0, fp
 800507a:	f7fe f88f 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 800507e:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
 8005082:	4618      	mov	r0, r3
 8005084:	9304      	str	r3, [sp, #16]
 8005086:	f7fe f889 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 800508a:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 800508e:	4618      	mov	r0, r3
 8005090:	4dba      	ldr	r5, [pc, #744]	@ (800537c <_ZN23HardReadyScreenViewBaseC1Ev+0x39c>)
 8005092:	930c      	str	r3, [sp, #48]	@ 0x30
 8005094:	f7fe f86c 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005098:	f504 731a 	add.w	r3, r4, #616	@ 0x268
 800509c:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
 80050a0:	4618      	mov	r0, r3
        : color(col)
 80050a2:	f8c4 6260 	str.w	r6, [r4, #608]	@ 0x260
 80050a6:	f8a4 6264 	strh.w	r6, [r4, #612]	@ 0x264
 80050aa:	930b      	str	r3, [sp, #44]	@ 0x2c
 80050ac:	f7fe f860 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 80050b0:	f504 7327 	add.w	r3, r4, #668	@ 0x29c
 80050b4:	f8c4 5268 	str.w	r5, [r4, #616]	@ 0x268
 80050b8:	4618      	mov	r0, r3
 80050ba:	f8c4 6294 	str.w	r6, [r4, #660]	@ 0x294
 80050be:	f8a4 6298 	strh.w	r6, [r4, #664]	@ 0x298
        : TextAreaWithWildcardBase(), wc1(0)
 80050c2:	4daf      	ldr	r5, [pc, #700]	@ (8005380 <_ZN23HardReadyScreenViewBaseC1Ev+0x3a0>)
        : TextArea()
 80050c4:	9302      	str	r3, [sp, #8]
 80050c6:	f7fe f869 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 80050ca:	f504 733a 	add.w	r3, r4, #744	@ 0x2e8
        : TextAreaWithWildcardBase(), wc1(0)
 80050ce:	f8c4 529c 	str.w	r5, [r4, #668]	@ 0x29c
        : TextArea()
 80050d2:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80050d4:	f8c4 62e4 	str.w	r6, [r4, #740]	@ 0x2e4
        : TextArea()
 80050d8:	9303      	str	r3, [sp, #12]
 80050da:	f7fe f85f 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 80050de:	f504 734d 	add.w	r3, r4, #820	@ 0x334
        : TextAreaWithWildcardBase(), wc1(0)
 80050e2:	f8c4 52e8 	str.w	r5, [r4, #744]	@ 0x2e8
 80050e6:	a914      	add	r1, sp, #80	@ 0x50
 80050e8:	f64f 75ff 	movw	r5, #65535	@ 0xffff
 80050ec:	4618      	mov	r0, r3
 80050ee:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
 80050f2:	9305      	str	r3, [sp, #20]
 80050f4:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 80050f8:	f7ff ff58 	bl	8004fac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80050fc:	f504 7358 	add.w	r3, r4, #864	@ 0x360
 8005100:	a914      	add	r1, sp, #80	@ 0x50
 8005102:	4618      	mov	r0, r3
 8005104:	9306      	str	r3, [sp, #24]
 8005106:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 800510a:	f7ff ff4f 	bl	8004fac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800510e:	f504 7363 	add.w	r3, r4, #908	@ 0x38c
 8005112:	a914      	add	r1, sp, #80	@ 0x50
 8005114:	4618      	mov	r0, r3
 8005116:	9307      	str	r3, [sp, #28]
 8005118:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 800511c:	f7ff ff46 	bl	8004fac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005120:	f504 736e 	add.w	r3, r4, #952	@ 0x3b8
 8005124:	a914      	add	r1, sp, #80	@ 0x50
 8005126:	4618      	mov	r0, r3
 8005128:	9308      	str	r3, [sp, #32]
 800512a:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 800512e:	f7ff ff3d 	bl	8004fac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005132:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
    __background.setPosition(0, 0, 320, 240);
 8005136:	25f0      	movs	r5, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 8005138:	f8c3 66cc 	str.w	r6, [r3, #1740]	@ 0x6cc
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800513c:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8005140:	f204 400c 	addw	r0, r4, #1036	@ 0x40c
 8005144:	f00f fb5a 	bl	80147fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8005148:	4632      	mov	r2, r6
 800514a:	4640      	mov	r0, r8
 800514c:	9500      	str	r5, [sp, #0]
 800514e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005152:	4631      	mov	r1, r6
 8005154:	1d27      	adds	r7, r4, #4
 8005156:	f7fd fff7 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 800515a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800515e:	4641      	mov	r1, r8
 8005160:	66a3      	str	r3, [r4, #104]	@ 0x68
 8005162:	4638      	mov	r0, r7
 8005164:	f009 ffc4 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005168:	f04f 38ff 	mov.w	r8, #4294967295
    box3.setPosition(0, 0, 320, 240);
 800516c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005170:	4632      	mov	r2, r6
 8005172:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005174:	9500      	str	r5, [sp, #0]
 8005176:	4631      	mov	r1, r6
 8005178:	f7fd ffe6 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 800517c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800517e:	f8c4 8094 	str.w	r8, [r4, #148]	@ 0x94
 8005182:	4638      	mov	r0, r7
 8005184:	f009 ffb4 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 8005188:	2202      	movs	r2, #2
 800518a:	23ec      	movs	r3, #236	@ 0xec
 800518c:	4611      	mov	r1, r2
 800518e:	4650      	mov	r0, sl
 8005190:	9300      	str	r3, [sp, #0]
 8005192:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 8005196:	f7fd ffd7 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 800519a:	4b7a      	ldr	r3, [pc, #488]	@ (8005384 <_ZN23HardReadyScreenViewBaseC1Ev+0x3a4>)
 800519c:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80051a0:	4651      	mov	r1, sl
 80051a2:	4638      	mov	r0, r7
 80051a4:	f009 ffa4 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 80051a8:	4632      	mov	r2, r6
 80051aa:	4648      	mov	r0, r9
 80051ac:	9500      	str	r5, [sp, #0]
 80051ae:	2303      	movs	r3, #3
 80051b0:	21a0      	movs	r1, #160	@ 0xa0
 80051b2:	f7fd ffc9 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 80051b6:	23dc      	movs	r3, #220	@ 0xdc
 80051b8:	4649      	mov	r1, r9
        color = newColor;
 80051ba:	f8c4 80ec 	str.w	r8, [r4, #236]	@ 0xec
        alpha = newAlpha;
 80051be:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 80051c2:	4638      	mov	r0, r7
 80051c4:	f009 ff94 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 80051c8:	230e      	movs	r3, #14
 80051ca:	2272      	movs	r2, #114	@ 0x72
 80051cc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80051ce:	9300      	str	r3, [sp, #0]
 80051d0:	219a      	movs	r1, #154	@ 0x9a
 80051d2:	f7fd ffb9 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80051d6:	23c0      	movs	r3, #192	@ 0xc0
 80051d8:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 80051dc:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 80051e0:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 80051e4:	4b68      	ldr	r3, [pc, #416]	@ (8005388 <_ZN23HardReadyScreenViewBaseC1Ev+0x3a8>)
 80051e6:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
        color565 = LCD16bpp::getNativeColor(painterColor);
 80051ea:	f649 0361 	movw	r3, #39009	@ 0x9861
 80051ee:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
        canvasPainter = &painter;
 80051f2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80051f4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80051f6:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        this->circleCenterY = CWRUtil::toQ5(y);
 80051fa:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
 80051fe:	4638      	mov	r0, r7
    paddle1.setPosition(7, 110, 5, 20);
 8005200:	2514      	movs	r5, #20
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005202:	f8c4 6130 	str.w	r6, [r4, #304]	@ 0x130
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005206:	f8c4 6128 	str.w	r6, [r4, #296]	@ 0x128
 800520a:	f009 ff71 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800520e:	2305      	movs	r3, #5
 8005210:	226e      	movs	r2, #110	@ 0x6e
 8005212:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8005214:	9500      	str	r5, [sp, #0]
 8005216:	2107      	movs	r1, #7
 8005218:	f7fd ff96 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 800521c:	990e      	ldr	r1, [sp, #56]	@ 0x38
        color = newColor;
 800521e:	f8c4 8174 	str.w	r8, [r4, #372]	@ 0x174
 8005222:	4638      	mov	r0, r7
 8005224:	f009 ff64 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 110, 5, 20);
 8005228:	2305      	movs	r3, #5
 800522a:	226e      	movs	r2, #110	@ 0x6e
 800522c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800522e:	9500      	str	r5, [sp, #0]
 8005230:	f44f 719a 	mov.w	r1, #308	@ 0x134
 8005234:	f7fd ff88 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005238:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800523a:	f8c4 81a0 	str.w	r8, [r4, #416]	@ 0x1a0
 800523e:	4638      	mov	r0, r7
 8005240:	f009 ff56 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(94, 94, 19, 52);
 8005244:	f04f 0934 	mov.w	r9, #52	@ 0x34
 8005248:	225e      	movs	r2, #94	@ 0x5e
 800524a:	ad10      	add	r5, sp, #64	@ 0x40
 800524c:	4611      	mov	r1, r2
 800524e:	2313      	movs	r3, #19
 8005250:	4658      	mov	r0, fp
 8005252:	f8cd 9000 	str.w	r9, [sp]
 8005256:	f7fd ff77 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 800525a:	4659      	mov	r1, fp
        color = newColor;
 800525c:	f8c4 81d4 	str.w	r8, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 8005260:	4628      	mov	r0, r5
        linespace = space;
 8005262:	f8a4 61d8 	strh.w	r6, [r4, #472]	@ 0x1d8
        boundingArea = calculateBoundingArea();
 8005266:	f00d fe09 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800526a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800526e:	f504 7af0 	add.w	sl, r4, #480	@ 0x1e0
        rotation = textRotation;
 8005272:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8005276:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 800527a:	4659      	mov	r1, fp
        rotation = textRotation;
 800527c:	f884 31dc 	strb.w	r3, [r4, #476]	@ 0x1dc
        boundingArea = calculateBoundingArea();
 8005280:	4628      	mov	r0, r5
 8005282:	f00d fdfb 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005286:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800528a:	4b40      	ldr	r3, [pc, #256]	@ (800538c <_ZN23HardReadyScreenViewBaseC1Ev+0x3ac>)
 800528c:	9314      	str	r3, [sp, #80]	@ 0x50
 800528e:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
 8005292:	230d      	movs	r3, #13
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7S3Y));
 8005294:	4658      	mov	r0, fp
        alpha = newAlpha;
 8005296:	f06f 0a41 	mvn.w	sl, #65	@ 0x41
 800529a:	a914      	add	r1, sp, #80	@ 0x50
 800529c:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 80052a0:	f00e f894 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80052a4:	4659      	mov	r1, fp
 80052a6:	f884 a1da 	strb.w	sl, [r4, #474]	@ 0x1da
 80052aa:	4638      	mov	r0, r7
 80052ac:	f009 ff20 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(204, 93, 19, 52);
 80052b0:	2313      	movs	r3, #19
 80052b2:	225d      	movs	r2, #93	@ 0x5d
 80052b4:	9804      	ldr	r0, [sp, #16]
 80052b6:	f8cd 9000 	str.w	r9, [sp]
 80052ba:	21cc      	movs	r1, #204	@ 0xcc
 80052bc:	f7fd ff44 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 80052c0:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80052c2:	f8c4 821c 	str.w	r8, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 80052c6:	4628      	mov	r0, r5
        linespace = space;
 80052c8:	f8a4 6220 	strh.w	r6, [r4, #544]	@ 0x220
        boundingArea = calculateBoundingArea();
 80052cc:	f00d fdd6 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80052d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80052d4:	f504 780a 	add.w	r8, r4, #552	@ 0x228
        rotation = textRotation;
 80052d8:	f04f 0b03 	mov.w	fp, #3
        boundingArea = calculateBoundingArea();
 80052dc:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 80052e0:	9904      	ldr	r1, [sp, #16]
        rotation = textRotation;
 80052e2:	f884 b224 	strb.w	fp, [r4, #548]	@ 0x224
        boundingArea = calculateBoundingArea();
 80052e6:	4628      	mov	r0, r5
 80052e8:	f00d fdc8 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80052ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80052f0:	4b26      	ldr	r3, [pc, #152]	@ (800538c <_ZN23HardReadyScreenViewBaseC1Ev+0x3ac>)
 80052f2:	9314      	str	r3, [sp, #80]	@ 0x50
 80052f4:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 80052f8:	230c      	movs	r3, #12
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SJ6Y));
 80052fa:	9804      	ldr	r0, [sp, #16]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80052fc:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8005390 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b0>
 8005300:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 8005394 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b4>
 8005304:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8005308:	a914      	add	r1, sp, #80	@ 0x50
 800530a:	f00e f85f 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800530e:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 8005310:	f884 a222 	strb.w	sl, [r4, #546]	@ 0x222
 8005314:	4638      	mov	r0, r7
    goal1.setPosition(0, 61, 2, 120);
 8005316:	f04f 0a78 	mov.w	sl, #120	@ 0x78
 800531a:	f009 fee9 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800531e:	2302      	movs	r3, #2
 8005320:	223d      	movs	r2, #61	@ 0x3d
 8005322:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8005324:	f8cd a000 	str.w	sl, [sp]
 8005328:	4631      	mov	r1, r6
 800532a:	f7fd ff0d 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 800532e:	e9c4 9897 	strd	r9, r8, [r4, #604]	@ 0x25c
 8005332:	990c      	ldr	r1, [sp, #48]	@ 0x30
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8005334:	f8a4 6264 	strh.w	r6, [r4, #612]	@ 0x264
 8005338:	4638      	mov	r0, r7
 800533a:	f009 fed9 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(318, 60, 2, 120);
 800533e:	2302      	movs	r3, #2
 8005340:	223c      	movs	r2, #60	@ 0x3c
 8005342:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8005344:	f8cd a000 	str.w	sl, [sp]
 8005348:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 800534c:	f7fd fefc 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8005350:	e9c4 98a4 	strd	r9, r8, [r4, #656]	@ 0x290
 8005354:	990b      	ldr	r1, [sp, #44]	@ 0x2c
        borderSize = size;
 8005356:	f8a4 6298 	strh.w	r6, [r4, #664]	@ 0x298
 800535a:	4638      	mov	r0, r7
 800535c:	f009 fec8 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(46, 111);
 8005360:	226f      	movs	r2, #111	@ 0x6f
 8005362:	9802      	ldr	r0, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005364:	f8df 9030 	ldr.w	r9, [pc, #48]	@ 8005398 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b8>
 8005368:	212e      	movs	r1, #46	@ 0x2e
 800536a:	f7fd fee0 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
 800536e:	e015      	b.n	800539c <_ZN23HardReadyScreenViewBaseC1Ev+0x3bc>
 8005370:	0802cbb8 	.word	0x0802cbb8
 8005374:	0802d214 	.word	0x0802d214
 8005378:	0802c8b0 	.word	0x0802c8b0
 800537c:	0802d620 	.word	0x0802d620
 8005380:	0802c820 	.word	0x0802c820
 8005384:	ff0c3837 	.word	0xff0c3837
 8005388:	ff990c0c 	.word	0xff990c0c
 800538c:	0802c810 	.word	0x0802c810
 8005390:	ff000b6e 	.word	0xff000b6e
 8005394:	ffad9334 	.word	0xffad9334
 8005398:	20013fb8 	.word	0x20013fb8
        color = newColor;
 800539c:	4b74      	ldr	r3, [pc, #464]	@ (8005570 <_ZN23HardReadyScreenViewBaseC1Ev+0x590>)
 800539e:	f8c4 32cc 	str.w	r3, [r4, #716]	@ 0x2cc
        boundingArea = calculateBoundingArea();
 80053a2:	f8d4 329c 	ldr.w	r3, [r4, #668]	@ 0x29c
 80053a6:	9902      	ldr	r1, [sp, #8]
 80053a8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80053ac:	f8a4 62d0 	strh.w	r6, [r4, #720]	@ 0x2d0
        boundingArea = calculateBoundingArea();
 80053b0:	4628      	mov	r0, r5
 80053b2:	4798      	blx	r3
 80053b4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80053b8:	f504 7836 	add.w	r8, r4, #728	@ 0x2d8
        rotation = textRotation;
 80053bc:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 80053c0:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80053c4:	f884 32d4 	strb.w	r3, [r4, #724]	@ 0x2d4
        boundingArea = calculateBoundingArea();
 80053c8:	f8d4 329c 	ldr.w	r3, [r4, #668]	@ 0x29c
 80053cc:	9902      	ldr	r1, [sp, #8]
 80053ce:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80053d2:	4628      	mov	r0, r5
 80053d4:	4798      	blx	r3
 80053d6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80053da:	f8d9 3000 	ldr.w	r3, [r9]
 80053de:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER3BUFFER).getText());
 80053e2:	f504 7879 	add.w	r8, r4, #996	@ 0x3e4
 80053e6:	b92b      	cbnz	r3, 80053f4 <_ZN23HardReadyScreenViewBaseC1Ev+0x414>
 80053e8:	4b62      	ldr	r3, [pc, #392]	@ (8005574 <_ZN23HardReadyScreenViewBaseC1Ev+0x594>)
 80053ea:	4a63      	ldr	r2, [pc, #396]	@ (8005578 <_ZN23HardReadyScreenViewBaseC1Ev+0x598>)
 80053ec:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80053ee:	4863      	ldr	r0, [pc, #396]	@ (800557c <_ZN23HardReadyScreenViewBaseC1Ev+0x59c>)
 80053f0:	f024 fc60 	bl	8029cb4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80053f4:	f8df a198 	ldr.w	sl, [pc, #408]	@ 8005590 <_ZN23HardReadyScreenViewBaseC1Ev+0x5b0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80053f8:	f8ba 3000 	ldrh.w	r3, [sl]
 80053fc:	2b08      	cmp	r3, #8
 80053fe:	d803      	bhi.n	8005408 <_ZN23HardReadyScreenViewBaseC1Ev+0x428>
 8005400:	4b5f      	ldr	r3, [pc, #380]	@ (8005580 <_ZN23HardReadyScreenViewBaseC1Ev+0x5a0>)
 8005402:	4a5d      	ldr	r2, [pc, #372]	@ (8005578 <_ZN23HardReadyScreenViewBaseC1Ev+0x598>)
 8005404:	2161      	movs	r1, #97	@ 0x61
 8005406:	e7f2      	b.n	80053ee <_ZN23HardReadyScreenViewBaseC1Ev+0x40e>
        return texts->getText(typedTextId);
 8005408:	4b5e      	ldr	r3, [pc, #376]	@ (8005584 <_ZN23HardReadyScreenViewBaseC1Ev+0x5a4>)
 800540a:	2108      	movs	r1, #8
 800540c:	6818      	ldr	r0, [r3, #0]
 800540e:	f002 f80f 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8005412:	4a5d      	ldr	r2, [pc, #372]	@ (8005588 <_ZN23HardReadyScreenViewBaseC1Ev+0x5a8>)
 8005414:	4603      	mov	r3, r0
 8005416:	210a      	movs	r1, #10
 8005418:	4640      	mov	r0, r8
 800541a:	f014 fb0b 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 800541e:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 8005420:	f8c4 82e4 	str.w	r8, [r4, #740]	@ 0x2e4
 8005424:	f00d ffb2 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        alpha = newAlpha;
 8005428:	f04f 08d2 	mov.w	r8, #210	@ 0xd2
        : typedTextId(id)
 800542c:	230b      	movs	r3, #11
 800542e:	4a57      	ldr	r2, [pc, #348]	@ (800558c <_ZN23HardReadyScreenViewBaseC1Ev+0x5ac>)
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7Q96));
 8005430:	9802      	ldr	r0, [sp, #8]
 8005432:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8005436:	a914      	add	r1, sp, #80	@ 0x50
 8005438:	9214      	str	r2, [sp, #80]	@ 0x50
 800543a:	f00d ffc7 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800543e:	9902      	ldr	r1, [sp, #8]
 8005440:	f884 82d2 	strb.w	r8, [r4, #722]	@ 0x2d2
 8005444:	4638      	mov	r0, r7
 8005446:	f009 fe53 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(245, 111);
 800544a:	226f      	movs	r2, #111	@ 0x6f
 800544c:	9803      	ldr	r0, [sp, #12]
 800544e:	21f5      	movs	r1, #245	@ 0xf5
 8005450:	f7fd fe6d 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005454:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        color = newColor;
 8005458:	4945      	ldr	r1, [pc, #276]	@ (8005570 <_ZN23HardReadyScreenViewBaseC1Ev+0x590>)
        boundingArea = calculateBoundingArea();
 800545a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 800545e:	f8c4 1318 	str.w	r1, [r4, #792]	@ 0x318
        boundingArea = calculateBoundingArea();
 8005462:	4628      	mov	r0, r5
 8005464:	9903      	ldr	r1, [sp, #12]
        linespace = space;
 8005466:	f8a4 631c 	strh.w	r6, [r4, #796]	@ 0x31c
        boundingArea = calculateBoundingArea();
 800546a:	4798      	blx	r3
 800546c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005470:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        boundingArea = calculateBoundingArea();
 8005474:	f504 7649 	add.w	r6, r4, #804	@ 0x324
 8005478:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 800547c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005480:	9903      	ldr	r1, [sp, #12]
        rotation = textRotation;
 8005482:	f884 b320 	strb.w	fp, [r4, #800]	@ 0x320
        boundingArea = calculateBoundingArea();
 8005486:	4628      	mov	r0, r5
 8005488:	4798      	blx	r3
 800548a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800548e:	f8d9 3000 	ldr.w	r3, [r9]
 8005492:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER3BUFFER).getText());
 8005496:	f504 757e 	add.w	r5, r4, #1016	@ 0x3f8
 800549a:	2b00      	cmp	r3, #0
 800549c:	d0a4      	beq.n	80053e8 <_ZN23HardReadyScreenViewBaseC1Ev+0x408>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800549e:	f8ba 3000 	ldrh.w	r3, [sl]
 80054a2:	2b08      	cmp	r3, #8
 80054a4:	d9ac      	bls.n	8005400 <_ZN23HardReadyScreenViewBaseC1Ev+0x420>
        return texts->getText(typedTextId);
 80054a6:	4b37      	ldr	r3, [pc, #220]	@ (8005584 <_ZN23HardReadyScreenViewBaseC1Ev+0x5a4>)
 80054a8:	2108      	movs	r1, #8
 80054aa:	6818      	ldr	r0, [r3, #0]
 80054ac:	f001 ffc0 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 80054b0:	4a35      	ldr	r2, [pc, #212]	@ (8005588 <_ZN23HardReadyScreenViewBaseC1Ev+0x5a8>)
 80054b2:	4603      	mov	r3, r0
 80054b4:	210a      	movs	r1, #10
 80054b6:	4628      	mov	r0, r5
 80054b8:	f014 fabc 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 80054bc:	9803      	ldr	r0, [sp, #12]
 80054be:	f8c4 5330 	str.w	r5, [r4, #816]	@ 0x330
 80054c2:	f00d ff63 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80054c6:	250a      	movs	r5, #10
 80054c8:	4a30      	ldr	r2, [pc, #192]	@ (800558c <_ZN23HardReadyScreenViewBaseC1Ev+0x5ac>)
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WFLF));
 80054ca:	9803      	ldr	r0, [sp, #12]
 80054cc:	9214      	str	r2, [sp, #80]	@ 0x50
 80054ce:	a914      	add	r1, sp, #80	@ 0x50
 80054d0:	f8ad 5054 	strh.w	r5, [sp, #84]	@ 0x54
 80054d4:	f00d ff7a 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80054d8:	9903      	ldr	r1, [sp, #12]
        alpha = newAlpha;
 80054da:	f884 831e 	strb.w	r8, [r4, #798]	@ 0x31e
 80054de:	4638      	mov	r0, r7
 80054e0:	f009 fe06 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(313, 10);
 80054e4:	462a      	mov	r2, r5
 80054e6:	9805      	ldr	r0, [sp, #20]
 80054e8:	f240 1139 	movw	r1, #313	@ 0x139
 80054ec:	f7fd fe1f 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
 80054f0:	2604      	movs	r6, #4
    image1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 80054f2:	9805      	ldr	r0, [sp, #20]
 80054f4:	f8ad 6050 	strh.w	r6, [sp, #80]	@ 0x50
 80054f8:	a914      	add	r1, sp, #80	@ 0x50
 80054fa:	f00e f981 	bl	8013800 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80054fe:	9905      	ldr	r1, [sp, #20]
 8005500:	4638      	mov	r0, r7
 8005502:	f009 fdf5 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1_1.setXY(313, 190);
 8005506:	22be      	movs	r2, #190	@ 0xbe
 8005508:	9806      	ldr	r0, [sp, #24]
 800550a:	f240 1139 	movw	r1, #313	@ 0x139
 800550e:	f7fd fe0e 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8005512:	9806      	ldr	r0, [sp, #24]
 8005514:	f8ad 6050 	strh.w	r6, [sp, #80]	@ 0x50
 8005518:	a914      	add	r1, sp, #80	@ 0x50
 800551a:	f00e f971 	bl	8013800 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800551e:	9906      	ldr	r1, [sp, #24]
 8005520:	4638      	mov	r0, r7
 8005522:	f009 fde5 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(-2, 10);
 8005526:	462a      	mov	r2, r5
 8005528:	9807      	ldr	r0, [sp, #28]
 800552a:	f06f 0101 	mvn.w	r1, #1
 800552e:	f7fd fdfe 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8005532:	9807      	ldr	r0, [sp, #28]
 8005534:	f8ad b050 	strh.w	fp, [sp, #80]	@ 0x50
 8005538:	a914      	add	r1, sp, #80	@ 0x50
 800553a:	f00e f961 	bl	8013800 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800553e:	9907      	ldr	r1, [sp, #28]
 8005540:	4638      	mov	r0, r7
 8005542:	f009 fdd5 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2_2.setXY(-2, 190);
 8005546:	22be      	movs	r2, #190	@ 0xbe
 8005548:	9808      	ldr	r0, [sp, #32]
 800554a:	f06f 0101 	mvn.w	r1, #1
 800554e:	f7fd fdee 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
    image2_2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8005552:	9808      	ldr	r0, [sp, #32]
 8005554:	f8ad b050 	strh.w	fp, [sp, #80]	@ 0x50
 8005558:	a914      	add	r1, sp, #80	@ 0x50
 800555a:	f00e f951 	bl	8013800 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800555e:	4638      	mov	r0, r7
 8005560:	9908      	ldr	r1, [sp, #32]
 8005562:	f009 fdc5 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005566:	4620      	mov	r0, r4
 8005568:	b017      	add	sp, #92	@ 0x5c
 800556a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800556e:	bf00      	nop
 8005570:	ffdeab5f 	.word	0xffdeab5f
 8005574:	0802b638 	.word	0x0802b638
 8005578:	0802b73a 	.word	0x0802b73a
 800557c:	0802b6b5 	.word	0x0802b6b5
 8005580:	0802b6fc 	.word	0x0802b6fc
 8005584:	20013fc4 	.word	0x20013fc4
 8005588:	0802b785 	.word	0x0802b785
 800558c:	0802c810 	.word	0x0802c810
 8005590:	20013fbc 	.word	0x20013fbc

08005594 <_ZN18HardScreenViewBase11setupScreenEv>:
}

void HardScreenViewBase::setupScreen()
{

}
 8005594:	4770      	bx	lr
	...

08005598 <_ZN18HardScreenViewBaseD1Ev>:
HardScreenViewBase::~HardScreenViewBase()
 8005598:	b510      	push	{r4, lr}
 800559a:	4b03      	ldr	r3, [pc, #12]	@ (80055a8 <_ZN18HardScreenViewBaseD1Ev+0x10>)
 800559c:	6003      	str	r3, [r0, #0]
 800559e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055a0:	f00f f936 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055a4:	4620      	mov	r0, r4
 80055a6:	bd10      	pop	{r4, pc}
 80055a8:	0802cbec 	.word	0x0802cbec

080055ac <_ZN18HardScreenViewBaseD0Ev>:
HardScreenViewBase::~HardScreenViewBase()
 80055ac:	b510      	push	{r4, lr}
 80055ae:	4b06      	ldr	r3, [pc, #24]	@ (80055c8 <_ZN18HardScreenViewBaseD0Ev+0x1c>)
 80055b0:	6003      	str	r3, [r0, #0]
 80055b2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055b4:	f00f f92c 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055b8:	4620      	mov	r0, r4
 80055ba:	f241 71d4 	movw	r1, #6100	@ 0x17d4
 80055be:	f023 fb3b 	bl	8028c38 <_ZdlPvj>
 80055c2:	4620      	mov	r0, r4
 80055c4:	bd10      	pop	{r4, pc}
 80055c6:	bf00      	nop
 80055c8:	0802cbec 	.word	0x0802cbec

080055cc <_ZN18HardScreenViewBaseC1Ev>:
HardScreenViewBase::HardScreenViewBase()
 80055cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055d0:	4604      	mov	r4, r0
 80055d2:	b09b      	sub	sp, #108	@ 0x6c
 80055d4:	46a2      	mov	sl, r4
 80055d6:	2600      	movs	r6, #0
 80055d8:	f012 fd4c 	bl	8018074 <_ZN8touchgfx6ScreenC1Ev>
 80055dc:	4bb5      	ldr	r3, [pc, #724]	@ (80058b4 <_ZN18HardScreenViewBaseC1Ev+0x2e8>)
 80055de:	63e6      	str	r6, [r4, #60]	@ 0x3c
 80055e0:	f84a 3b40 	str.w	r3, [sl], #64
 80055e4:	4650      	mov	r0, sl
 80055e6:	f7fd fdc3 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 80055ea:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 80055ee:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 80055f2:	4618      	mov	r0, r3
 80055f4:	930a      	str	r3, [sp, #40]	@ 0x28
 80055f6:	f7fd fdbb 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 80055fa:	4640      	mov	r0, r8
 80055fc:	f7fd fdb8 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005600:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 8005604:	4618      	mov	r0, r3
 8005606:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005608:	f7fd fdb2 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 800560c:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8005610:	4618      	mov	r0, r3
 8005612:	4fa9      	ldr	r7, [pc, #676]	@ (80058b8 <_ZN18HardScreenViewBaseC1Ev+0x2ec>)
 8005614:	9310      	str	r3, [sp, #64]	@ 0x40
 8005616:	f04f 0501 	mov.w	r5, #1
 800561a:	f7fd fda9 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 800561e:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8005622:	4618      	mov	r0, r3
        : TextArea()
 8005624:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 8005628:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 800562c:	f884 5114 	strb.w	r5, [r4, #276]	@ 0x114
 8005630:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005632:	f504 79ca 	add.w	r9, r4, #404	@ 0x194
 8005636:	f7fd fd9b 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 800563a:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 800563e:	f884 5140 	strb.w	r5, [r4, #320]	@ 0x140
        : TextAreaWithWildcardBase(), wc1(0)
 8005642:	4f9e      	ldr	r7, [pc, #632]	@ (80058bc <_ZN18HardScreenViewBaseC1Ev+0x2f0>)
        : TextArea()
 8005644:	4658      	mov	r0, fp
 8005646:	f7fd fda9 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800564a:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 800564e:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 8005652:	4648      	mov	r0, r9
 8005654:	f7fd fda2 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 8005658:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 800565c:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 8005660:	4618      	mov	r0, r3
 8005662:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 8005666:	9304      	str	r3, [sp, #16]
 8005668:	f7fd fd98 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 800566c:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8005670:	4618      	mov	r0, r3
 8005672:	9305      	str	r3, [sp, #20]
 8005674:	f7fd fd92 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 8005678:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 800567c:	4618      	mov	r0, r3
 800567e:	4f90      	ldr	r7, [pc, #576]	@ (80058c0 <_ZN18HardScreenViewBaseC1Ev+0x2f4>)
 8005680:	930e      	str	r3, [sp, #56]	@ 0x38
 8005682:	f7fd fd75 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005686:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 800568a:	f8c4 7270 	str.w	r7, [r4, #624]	@ 0x270
 800568e:	4618      	mov	r0, r3
 8005690:	f8c4 629c 	str.w	r6, [r4, #668]	@ 0x29c
 8005694:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 8005698:	930d      	str	r3, [sp, #52]	@ 0x34
 800569a:	f7fd fd69 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 800569e:	f504 7336 	add.w	r3, r4, #728	@ 0x2d8
 80056a2:	f8c4 72a4 	str.w	r7, [r4, #676]	@ 0x2a4
 80056a6:	4618      	mov	r0, r3
 80056a8:	f8c4 62d0 	str.w	r6, [r4, #720]	@ 0x2d0
 80056ac:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 80056b0:	930c      	str	r3, [sp, #48]	@ 0x30
 80056b2:	f00c fa5f 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80056b6:	f504 7348 	add.w	r3, r4, #800	@ 0x320
 80056ba:	4618      	mov	r0, r3
 80056bc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80056be:	f7fc fbc5 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80056c2:	4b80      	ldr	r3, [pc, #512]	@ (80058c4 <_ZN18HardScreenViewBaseC1Ev+0x2f8>)
 80056c4:	f8c4 3320 	str.w	r3, [r4, #800]	@ 0x320
 80056c8:	f103 0524 	add.w	r5, r3, #36	@ 0x24
 80056cc:	f504 734d 	add.w	r3, r4, #820	@ 0x334
 80056d0:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80056d4:	f8c4 5328 	str.w	r5, [r4, #808]	@ 0x328
 80056d8:	a918      	add	r1, sp, #96	@ 0x60
 80056da:	4618      	mov	r0, r3
 80056dc:	f8c4 632c 	str.w	r6, [r4, #812]	@ 0x32c
 80056e0:	9306      	str	r3, [sp, #24]
 80056e2:	f8ad 7060 	strh.w	r7, [sp, #96]	@ 0x60
 80056e6:	f7ff fc61 	bl	8004fac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80056ea:	f504 7358 	add.w	r3, r4, #864	@ 0x360
 80056ee:	a918      	add	r1, sp, #96	@ 0x60
 80056f0:	4618      	mov	r0, r3
 80056f2:	9307      	str	r3, [sp, #28]
 80056f4:	f8ad 7060 	strh.w	r7, [sp, #96]	@ 0x60
 80056f8:	f7ff fc58 	bl	8004fac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80056fc:	f504 7363 	add.w	r3, r4, #908	@ 0x38c
 8005700:	a918      	add	r1, sp, #96	@ 0x60
 8005702:	4618      	mov	r0, r3
 8005704:	9308      	str	r3, [sp, #32]
 8005706:	f8ad 7060 	strh.w	r7, [sp, #96]	@ 0x60
 800570a:	f7ff fc4f 	bl	8004fac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800570e:	f504 736e 	add.w	r3, r4, #952	@ 0x3b8
 8005712:	a918      	add	r1, sp, #96	@ 0x60
 8005714:	4618      	mov	r0, r3
 8005716:	9309      	str	r3, [sp, #36]	@ 0x24
 8005718:	f8ad 7060 	strh.w	r7, [sp, #96]	@ 0x60
 800571c:	f7ff fc46 	bl	8004fac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005720:	f504 7379 	add.w	r3, r4, #996	@ 0x3e4
 8005724:	4618      	mov	r0, r3
 8005726:	9302      	str	r3, [sp, #8]
 8005728:	f00d f8da 	bl	80128e0 <_ZN8touchgfx4LineC1Ev>
 800572c:	f204 4354 	addw	r3, r4, #1108	@ 0x454
 8005730:	4618      	mov	r0, r3
 8005732:	9312      	str	r3, [sp, #72]	@ 0x48
 8005734:	f7fc fb8a 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005738:	f1a5 0324 	sub.w	r3, r5, #36	@ 0x24
 800573c:	f8c4 3454 	str.w	r3, [r4, #1108]	@ 0x454
 8005740:	f504 638d 	add.w	r3, r4, #1128	@ 0x468
 8005744:	f8c4 545c 	str.w	r5, [r4, #1116]	@ 0x45c
 8005748:	4618      	mov	r0, r3
 800574a:	f8c4 6460 	str.w	r6, [r4, #1120]	@ 0x460
 800574e:	9303      	str	r3, [sp, #12]
 8005750:	f00d f8c6 	bl	80128e0 <_ZN8touchgfx4LineC1Ev>
 8005754:	f504 639b 	add.w	r3, r4, #1240	@ 0x4d8
 8005758:	4618      	mov	r0, r3
 800575a:	9311      	str	r3, [sp, #68]	@ 0x44
 800575c:	f7fc fb76 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005760:	f1a5 0324 	sub.w	r3, r5, #36	@ 0x24
 8005764:	f8c4 34d8 	str.w	r3, [r4, #1240]	@ 0x4d8
 8005768:	f8c4 54e0 	str.w	r5, [r4, #1248]	@ 0x4e0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800576c:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8005770:	f204 5014 	addw	r0, r4, #1300	@ 0x514
 8005774:	f8c4 64e4 	str.w	r6, [r4, #1252]	@ 0x4e4
 8005778:	f00f f840 	bl	80147fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 800577c:	23f0      	movs	r3, #240	@ 0xf0
 800577e:	4632      	mov	r2, r6
 8005780:	4650      	mov	r0, sl
 8005782:	9300      	str	r3, [sp, #0]
 8005784:	4631      	mov	r1, r6
 8005786:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800578a:	f7fd fcdd 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 800578e:	1d27      	adds	r7, r4, #4
 8005790:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8005794:	4651      	mov	r1, sl
 8005796:	66a3      	str	r3, [r4, #104]	@ 0x68
 8005798:	4638      	mov	r0, r7
 800579a:	f009 fca9 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 800579e:	23f0      	movs	r3, #240	@ 0xf0
 80057a0:	f04f 3aff 	mov.w	sl, #4294967295
 80057a4:	4632      	mov	r2, r6
 80057a6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80057a8:	9300      	str	r3, [sp, #0]
 80057aa:	4631      	mov	r1, r6
 80057ac:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80057b0:	f7fd fcca 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 80057b4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80057b6:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
 80057ba:	4638      	mov	r0, r7
 80057bc:	f009 fc98 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 80057c0:	2202      	movs	r2, #2
 80057c2:	23ec      	movs	r3, #236	@ 0xec
 80057c4:	4611      	mov	r1, r2
 80057c6:	4640      	mov	r0, r8
 80057c8:	9300      	str	r3, [sp, #0]
 80057ca:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 80057ce:	f7fd fcbb 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 80057d2:	4b3d      	ldr	r3, [pc, #244]	@ (80058c8 <_ZN18HardScreenViewBaseC1Ev+0x2fc>)
 80057d4:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80057d8:	4641      	mov	r1, r8
 80057da:	4638      	mov	r0, r7
 80057dc:	f009 fc88 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 80057e0:	23f0      	movs	r3, #240	@ 0xf0
 80057e2:	4632      	mov	r2, r6
 80057e4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80057e6:	9300      	str	r3, [sp, #0]
 80057e8:	21a0      	movs	r1, #160	@ 0xa0
 80057ea:	2303      	movs	r3, #3
 80057ec:	f7fd fcac 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 80057f0:	23dc      	movs	r3, #220	@ 0xdc
    paddle1.setPosition(7, 110, 5, 20);
 80057f2:	2514      	movs	r5, #20
 80057f4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80057f6:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 80057fa:	4638      	mov	r0, r7
        color = newColor;
 80057fc:	f8c4 a0ec 	str.w	sl, [r4, #236]	@ 0xec
 8005800:	f009 fc76 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005804:	2305      	movs	r3, #5
 8005806:	226e      	movs	r2, #110	@ 0x6e
 8005808:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800580a:	9500      	str	r5, [sp, #0]
 800580c:	2107      	movs	r1, #7
 800580e:	f7fd fc9b 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005812:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8005814:	f8c4 a118 	str.w	sl, [r4, #280]	@ 0x118
 8005818:	4638      	mov	r0, r7
 800581a:	f009 fc69 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 110, 5, 20);
 800581e:	2305      	movs	r3, #5
 8005820:	226e      	movs	r2, #110	@ 0x6e
 8005822:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8005824:	9500      	str	r5, [sp, #0]
 8005826:	f44f 719a 	mov.w	r1, #308	@ 0x134
 800582a:	f7fd fc8d 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 800582e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8005830:	f8c4 a144 	str.w	sl, [r4, #324]	@ 0x144
 8005834:	4638      	mov	r0, r7
 8005836:	f009 fc5b 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 800583a:	2216      	movs	r2, #22
 800583c:	21b8      	movs	r1, #184	@ 0xb8
 800583e:	4658      	mov	r0, fp
 8005840:	f7fd fc75 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005844:	4b21      	ldr	r3, [pc, #132]	@ (80058cc <_ZN18HardScreenViewBaseC1Ev+0x300>)
 8005846:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 800584a:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 800584e:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 8005852:	ad14      	add	r5, sp, #80	@ 0x50
 8005854:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005858:	4659      	mov	r1, fp
 800585a:	4628      	mov	r0, r5
 800585c:	4798      	blx	r3
 800585e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005862:	f504 78c2 	add.w	r8, r4, #388	@ 0x184
        rotation = textRotation;
 8005866:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 800586a:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 800586e:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 8005872:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 8005876:	4659      	mov	r1, fp
 8005878:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800587c:	4628      	mov	r0, r5
 800587e:	4798      	blx	r3
 8005880:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005884:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005888:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 80058e4 <_ZN18HardScreenViewBaseC1Ev+0x318>
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER3).getText());
 800588c:	f204 43ec 	addw	r3, r4, #1260	@ 0x4ec
 8005890:	930a      	str	r3, [sp, #40]	@ 0x28
 8005892:	f8d8 3000 	ldr.w	r3, [r8]
 8005896:	b92b      	cbnz	r3, 80058a4 <_ZN18HardScreenViewBaseC1Ev+0x2d8>
 8005898:	4b0d      	ldr	r3, [pc, #52]	@ (80058d0 <_ZN18HardScreenViewBaseC1Ev+0x304>)
 800589a:	4a0e      	ldr	r2, [pc, #56]	@ (80058d4 <_ZN18HardScreenViewBaseC1Ev+0x308>)
 800589c:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800589e:	480e      	ldr	r0, [pc, #56]	@ (80058d8 <_ZN18HardScreenViewBaseC1Ev+0x30c>)
 80058a0:	f024 fa08 	bl	8029cb4 <__assert_func>
 80058a4:	4b0d      	ldr	r3, [pc, #52]	@ (80058dc <_ZN18HardScreenViewBaseC1Ev+0x310>)
 80058a6:	881b      	ldrh	r3, [r3, #0]
 80058a8:	2b01      	cmp	r3, #1
 80058aa:	d81d      	bhi.n	80058e8 <_ZN18HardScreenViewBaseC1Ev+0x31c>
 80058ac:	4b0c      	ldr	r3, [pc, #48]	@ (80058e0 <_ZN18HardScreenViewBaseC1Ev+0x314>)
 80058ae:	4a09      	ldr	r2, [pc, #36]	@ (80058d4 <_ZN18HardScreenViewBaseC1Ev+0x308>)
 80058b0:	2161      	movs	r1, #97	@ 0x61
 80058b2:	e7f4      	b.n	800589e <_ZN18HardScreenViewBaseC1Ev+0x2d2>
 80058b4:	0802cbec 	.word	0x0802cbec
 80058b8:	0802c8b0 	.word	0x0802c8b0
 80058bc:	0802c820 	.word	0x0802c820
 80058c0:	0802d620 	.word	0x0802d620
 80058c4:	0802d214 	.word	0x0802d214
 80058c8:	ff0c3837 	.word	0xff0c3837
 80058cc:	ff595656 	.word	0xff595656
 80058d0:	0802b638 	.word	0x0802b638
 80058d4:	0802b73a 	.word	0x0802b73a
 80058d8:	0802b6b5 	.word	0x0802b6b5
 80058dc:	20013fbc 	.word	0x20013fbc
 80058e0:	0802b6fc 	.word	0x0802b6fc
 80058e4:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 80058e8:	4bc1      	ldr	r3, [pc, #772]	@ (8005bf0 <_ZN18HardScreenViewBaseC1Ev+0x624>)
 80058ea:	2101      	movs	r1, #1
 80058ec:	6818      	ldr	r0, [r3, #0]
 80058ee:	f001 fd9f 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 80058f2:	4ac0      	ldr	r2, [pc, #768]	@ (8005bf4 <_ZN18HardScreenViewBaseC1Ev+0x628>)
 80058f4:	4603      	mov	r3, r0
 80058f6:	210a      	movs	r1, #10
 80058f8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80058fa:	f014 f89b 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80058fe:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005900:	f8c4 1190 	str.w	r1, [r4, #400]	@ 0x190
    score2.resizeToCurrentText();
 8005904:	4658      	mov	r0, fp
 8005906:	f00d fd41 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800590a:	4bbb      	ldr	r3, [pc, #748]	@ (8005bf8 <_ZN18HardScreenViewBaseC1Ev+0x62c>)
 800590c:	9318      	str	r3, [sp, #96]	@ 0x60
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UN9H));
 800590e:	4658      	mov	r0, fp
 8005910:	2319      	movs	r3, #25
 8005912:	a918      	add	r1, sp, #96	@ 0x60
 8005914:	f8ad 3064 	strh.w	r3, [sp, #100]	@ 0x64
 8005918:	f00d fd58 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800591c:	4659      	mov	r1, fp
 800591e:	4638      	mov	r0, r7
 8005920:	f009 fbe6 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 8005924:	22c3      	movs	r2, #195	@ 0xc3
 8005926:	2175      	movs	r1, #117	@ 0x75
 8005928:	4648      	mov	r0, r9
 800592a:	f7fd fc00 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800592e:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 8005932:	49b2      	ldr	r1, [pc, #712]	@ (8005bfc <_ZN18HardScreenViewBaseC1Ev+0x630>)
        boundingArea = calculateBoundingArea();
 8005934:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8005938:	f8c4 11c4 	str.w	r1, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 800593c:	4628      	mov	r0, r5
 800593e:	4649      	mov	r1, r9
        linespace = space;
 8005940:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 8005944:	4798      	blx	r3
 8005946:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800594a:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 800594e:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 8005952:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8005956:	f04f 0101 	mov.w	r1, #1
        boundingArea = calculateBoundingArea();
 800595a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 800595e:	f884 11cc 	strb.w	r1, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 8005962:	4628      	mov	r0, r5
 8005964:	4649      	mov	r1, r9
 8005966:	4798      	blx	r3
 8005968:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800596c:	f8d8 3000 	ldr.w	r3, [r8]
 8005970:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER3).getText());
 8005974:	f504 6ba0 	add.w	fp, r4, #1280	@ 0x500
 8005978:	2b00      	cmp	r3, #0
 800597a:	d08d      	beq.n	8005898 <_ZN18HardScreenViewBaseC1Ev+0x2cc>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800597c:	49a0      	ldr	r1, [pc, #640]	@ (8005c00 <_ZN18HardScreenViewBaseC1Ev+0x634>)
 800597e:	880b      	ldrh	r3, [r1, #0]
 8005980:	2b02      	cmp	r3, #2
 8005982:	d993      	bls.n	80058ac <_ZN18HardScreenViewBaseC1Ev+0x2e0>
        return texts->getText(typedTextId);
 8005984:	4a9a      	ldr	r2, [pc, #616]	@ (8005bf0 <_ZN18HardScreenViewBaseC1Ev+0x624>)
 8005986:	2102      	movs	r1, #2
 8005988:	6810      	ldr	r0, [r2, #0]
 800598a:	f001 fd51 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 800598e:	4a99      	ldr	r2, [pc, #612]	@ (8005bf4 <_ZN18HardScreenViewBaseC1Ev+0x628>)
 8005990:	4603      	mov	r3, r0
 8005992:	210a      	movs	r1, #10
 8005994:	4658      	mov	r0, fp
 8005996:	f014 f84d 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score1.resizeToCurrentText();
 800599a:	4648      	mov	r0, r9
 800599c:	f8c4 b1dc 	str.w	fp, [r4, #476]	@ 0x1dc
 80059a0:	f00d fcf4 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OTAD));
 80059a4:	aa18      	add	r2, sp, #96	@ 0x60
        : typedTextId(id)
 80059a6:	4b94      	ldr	r3, [pc, #592]	@ (8005bf8 <_ZN18HardScreenViewBaseC1Ev+0x62c>)
 80059a8:	9318      	str	r3, [sp, #96]	@ 0x60
 80059aa:	4611      	mov	r1, r2
 80059ac:	2318      	movs	r3, #24
 80059ae:	4648      	mov	r0, r9
 80059b0:	f8ad 3064 	strh.w	r3, [sp, #100]	@ 0x64
 80059b4:	f00d fd0a 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80059b8:	4649      	mov	r1, r9
 80059ba:	4638      	mov	r0, r7
    player1.setPosition(140, 180, 19, 52);
 80059bc:	f04f 0934 	mov.w	r9, #52	@ 0x34
 80059c0:	f009 fb96 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80059c4:	2313      	movs	r3, #19
 80059c6:	22b4      	movs	r2, #180	@ 0xb4
 80059c8:	9804      	ldr	r0, [sp, #16]
 80059ca:	f8cd 9000 	str.w	r9, [sp]
 80059ce:	218c      	movs	r1, #140	@ 0x8c
 80059d0:	f7fd fbba 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 80059d4:	4628      	mov	r0, r5
 80059d6:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80059d8:	f8c4 a210 	str.w	sl, [r4, #528]	@ 0x210
        linespace = space;
 80059dc:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 80059e0:	f00d fa4c 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80059e8:	f504 7807 	add.w	r8, r4, #540	@ 0x21c
 80059ec:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80059f0:	f04f 0101 	mov.w	r1, #1
        boundingArea = calculateBoundingArea();
 80059f4:	4628      	mov	r0, r5
        rotation = textRotation;
 80059f6:	f884 1218 	strb.w	r1, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 80059fa:	9904      	ldr	r1, [sp, #16]
 80059fc:	f00d fa3e 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a00:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005a04:	4b7c      	ldr	r3, [pc, #496]	@ (8005bf8 <_ZN18HardScreenViewBaseC1Ev+0x62c>)
 8005a06:	9318      	str	r3, [sp, #96]	@ 0x60
 8005a08:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8005a0c:	2317      	movs	r3, #23
        alpha = newAlpha;
 8005a0e:	f04f 08be 	mov.w	r8, #190	@ 0xbe
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z3TY));
 8005a12:	9804      	ldr	r0, [sp, #16]
 8005a14:	f8ad 3064 	strh.w	r3, [sp, #100]	@ 0x64
 8005a18:	a918      	add	r1, sp, #96	@ 0x60
 8005a1a:	f00d fcd7 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a1e:	9904      	ldr	r1, [sp, #16]
 8005a20:	f884 8216 	strb.w	r8, [r4, #534]	@ 0x216
 8005a24:	4638      	mov	r0, r7
 8005a26:	f009 fb63 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 8005a2a:	2313      	movs	r3, #19
 8005a2c:	2207      	movs	r2, #7
 8005a2e:	9805      	ldr	r0, [sp, #20]
 8005a30:	f8cd 9000 	str.w	r9, [sp]
 8005a34:	21a5      	movs	r1, #165	@ 0xa5
 8005a36:	f7fd fb87 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8005a3a:	4628      	mov	r0, r5
 8005a3c:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8005a3e:	f8c4 a258 	str.w	sl, [r4, #600]	@ 0x258
        linespace = space;
 8005a42:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 8005a46:	f00d fa19 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a4a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005a4e:	f504 7919 	add.w	r9, r4, #612	@ 0x264
 8005a52:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8005a56:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8005a5a:	4628      	mov	r0, r5
 8005a5c:	9905      	ldr	r1, [sp, #20]
        rotation = textRotation;
 8005a5e:	f884 2260 	strb.w	r2, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8005a62:	f00d fa0b 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a66:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005a6a:	4b63      	ldr	r3, [pc, #396]	@ (8005bf8 <_ZN18HardScreenViewBaseC1Ev+0x62c>)
 8005a6c:	9318      	str	r3, [sp, #96]	@ 0x60
 8005a6e:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8005a72:	2316      	movs	r3, #22
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FY8E));
 8005a74:	9805      	ldr	r0, [sp, #20]
        borderColor = colorBorder;
 8005a76:	4d63      	ldr	r5, [pc, #396]	@ (8005c04 <_ZN18HardScreenViewBaseC1Ev+0x638>)
 8005a78:	f8ad 3064 	strh.w	r3, [sp, #100]	@ 0x64
 8005a7c:	a918      	add	r1, sp, #96	@ 0x60
 8005a7e:	f00d fca5 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    goal1.setPosition(0, 60, 2, 120);
 8005a82:	f04f 0978 	mov.w	r9, #120	@ 0x78
 8005a86:	9905      	ldr	r1, [sp, #20]
        alpha = newAlpha;
 8005a88:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
 8005a8c:	4638      	mov	r0, r7
 8005a8e:	f8df 817c 	ldr.w	r8, [pc, #380]	@ 8005c0c <_ZN18HardScreenViewBaseC1Ev+0x640>
 8005a92:	f009 fb2d 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005a96:	2302      	movs	r3, #2
 8005a98:	223c      	movs	r2, #60	@ 0x3c
 8005a9a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8005a9c:	f8cd 9000 	str.w	r9, [sp]
 8005aa0:	4631      	mov	r1, r6
 8005aa2:	f7fd fb51 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005aa6:	e9c4 85a6 	strd	r8, r5, [r4, #664]	@ 0x298
 8005aaa:	990e      	ldr	r1, [sp, #56]	@ 0x38
        borderSize = size;
 8005aac:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 8005ab0:	4638      	mov	r0, r7
 8005ab2:	f009 fb1d 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(318, 60, 2, 120);
 8005ab6:	2302      	movs	r3, #2
 8005ab8:	223c      	movs	r2, #60	@ 0x3c
 8005aba:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8005abc:	f8cd 9000 	str.w	r9, [sp]
 8005ac0:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 8005ac4:	f7fd fb40 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8005ac8:	e9c4 85b3 	strd	r8, r5, [r4, #716]	@ 0x2cc
 8005acc:	990d      	ldr	r1, [sp, #52]	@ 0x34
        borderSize = size;
 8005ace:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 8005ad2:	4638      	mov	r0, r7
 8005ad4:	f009 fb0c 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8005ad8:	230e      	movs	r3, #14
 8005ada:	2272      	movs	r2, #114	@ 0x72
 8005adc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8005ade:	9300      	str	r3, [sp, #0]
 8005ae0:	219a      	movs	r1, #154	@ 0x9a
 8005ae2:	f7fd fb31 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8005ae6:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 8005ae8:	e9c4 33c1 	strd	r3, r3, [r4, #772]	@ 0x304
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005aec:	23c0      	movs	r3, #192	@ 0xc0
 8005aee:	f8c4 330c 	str.w	r3, [r4, #780]	@ 0x30c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005af2:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8005af6:	f8c4 3314 	str.w	r3, [r4, #788]	@ 0x314
 8005afa:	4b43      	ldr	r3, [pc, #268]	@ (8005c08 <_ZN18HardScreenViewBaseC1Ev+0x63c>)
 8005afc:	f8c4 332c 	str.w	r3, [r4, #812]	@ 0x32c
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005b00:	f649 0361 	movw	r3, #39009	@ 0x9861
 8005b04:	f8a4 3330 	strh.w	r3, [r4, #816]	@ 0x330
 8005b08:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005b0a:	f8c4 3300 	str.w	r3, [r4, #768]	@ 0x300
 8005b0e:	990c      	ldr	r1, [sp, #48]	@ 0x30
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005b10:	f8c4 6318 	str.w	r6, [r4, #792]	@ 0x318
 8005b14:	4638      	mov	r0, r7
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005b16:	f8c4 6310 	str.w	r6, [r4, #784]	@ 0x310
 8005b1a:	f009 fae9 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 10);
 8005b1e:	220a      	movs	r2, #10
 8005b20:	9806      	ldr	r0, [sp, #24]
 8005b22:	f06f 0102 	mvn.w	r1, #2
 8005b26:	f7fd fb02 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
 8005b2a:	f04f 0503 	mov.w	r5, #3
    image1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8005b2e:	9806      	ldr	r0, [sp, #24]
 8005b30:	f8ad 5060 	strh.w	r5, [sp, #96]	@ 0x60
 8005b34:	a918      	add	r1, sp, #96	@ 0x60
 8005b36:	f00d fe63 	bl	8013800 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b3a:	9906      	ldr	r1, [sp, #24]
 8005b3c:	4638      	mov	r0, r7
 8005b3e:	f009 fad7 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1_1.setXY(-3, 189);
 8005b42:	22bd      	movs	r2, #189	@ 0xbd
 8005b44:	9807      	ldr	r0, [sp, #28]
 8005b46:	f06f 0102 	mvn.w	r1, #2
 8005b4a:	f7fd faf0 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8005b4e:	9807      	ldr	r0, [sp, #28]
 8005b50:	f8ad 5060 	strh.w	r5, [sp, #96]	@ 0x60
 8005b54:	a918      	add	r1, sp, #96	@ 0x60
 8005b56:	f00d fe53 	bl	8013800 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b5a:	9907      	ldr	r1, [sp, #28]
 8005b5c:	4638      	mov	r0, r7
 8005b5e:	f009 fac7 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(313, 10);
 8005b62:	220a      	movs	r2, #10
 8005b64:	9808      	ldr	r0, [sp, #32]
 8005b66:	f240 1139 	movw	r1, #313	@ 0x139
 8005b6a:	f7fd fae0 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
 8005b6e:	2504      	movs	r5, #4
    image2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8005b70:	9808      	ldr	r0, [sp, #32]
 8005b72:	f8ad 5060 	strh.w	r5, [sp, #96]	@ 0x60
 8005b76:	a918      	add	r1, sp, #96	@ 0x60
 8005b78:	f00d fe42 	bl	8013800 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b7c:	9908      	ldr	r1, [sp, #32]
 8005b7e:	4638      	mov	r0, r7
 8005b80:	f009 fab6 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2_2.setXY(313, 189);
 8005b84:	22bd      	movs	r2, #189	@ 0xbd
 8005b86:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005b88:	f240 1139 	movw	r1, #313	@ 0x139
 8005b8c:	f7fd facf 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
    image2_2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8005b90:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005b92:	f8ad 5060 	strh.w	r5, [sp, #96]	@ 0x60
 8005b96:	a918      	add	r1, sp, #96	@ 0x60
 8005b98:	f00d fe32 	bl	8013800 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b9c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005b9e:	4638      	mov	r0, r7
 8005ba0:	f009 faa6 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(13, 114, 33, 19);
 8005ba4:	2313      	movs	r3, #19
 8005ba6:	9802      	ldr	r0, [sp, #8]
 8005ba8:	9300      	str	r3, [sp, #0]
 8005baa:	2272      	movs	r2, #114	@ 0x72
 8005bac:	2321      	movs	r3, #33	@ 0x21
 8005bae:	210d      	movs	r1, #13
 8005bb0:	f7fd faca 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005bb4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8005bb6:	f8c4 340c 	str.w	r3, [r4, #1036]	@ 0x40c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005bba:	22a0      	movs	r2, #160	@ 0xa0
 8005bbc:	4611      	mov	r1, r2
 8005bbe:	9802      	ldr	r0, [sp, #8]
 8005bc0:	f8c4 a460 	str.w	sl, [r4, #1120]	@ 0x460
 8005bc4:	f8a4 a464 	strh.w	sl, [r4, #1124]	@ 0x464
 8005bc8:	f00c ffa0 	bl	8012b0c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005bcc:	9802      	ldr	r0, [sp, #8]
 8005bce:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8005bd2:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 8005bd6:	f00c ffa4 	bl	8012b22 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005bda:	f8d4 3420 	ldr.w	r3, [r4, #1056]	@ 0x420
 8005bde:	2b20      	cmp	r3, #32
 8005be0:	d016      	beq.n	8005c10 <_ZN18HardScreenViewBaseC1Ev+0x644>
        lineWidthQ5 = widthQ5;
 8005be2:	2320      	movs	r3, #32
        updateCachedShape();
 8005be4:	9802      	ldr	r0, [sp, #8]
        lineWidthQ5 = widthQ5;
 8005be6:	f8c4 3420 	str.w	r3, [r4, #1056]	@ 0x420
        updateCachedShape();
 8005bea:	f00c fe99 	bl	8012920 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8005bee:	e00f      	b.n	8005c10 <_ZN18HardScreenViewBaseC1Ev+0x644>
 8005bf0:	20013fc4 	.word	0x20013fc4
 8005bf4:	0802b785 	.word	0x0802b785
 8005bf8:	0802c810 	.word	0x0802c810
 8005bfc:	ff595656 	.word	0xff595656
 8005c00:	20013fbc 	.word	0x20013fbc
 8005c04:	ffad9334 	.word	0xffad9334
 8005c08:	ff990c0c 	.word	0xff990c0c
 8005c0c:	ff000b6e 	.word	0xff000b6e
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005c10:	9802      	ldr	r0, [sp, #8]
 8005c12:	2100      	movs	r1, #0
 8005c14:	f00c ff90 	bl	8012b38 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 8005c18:	235f      	movs	r3, #95	@ 0x5f
 8005c1a:	9902      	ldr	r1, [sp, #8]
 8005c1c:	f884 340a 	strb.w	r3, [r4, #1034]	@ 0x40a
 8005c20:	4638      	mov	r0, r7
 8005c22:	f009 fa65 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(269, 110, 33, 19);
 8005c26:	2313      	movs	r3, #19
 8005c28:	9803      	ldr	r0, [sp, #12]
 8005c2a:	9300      	str	r3, [sp, #0]
 8005c2c:	226e      	movs	r2, #110	@ 0x6e
 8005c2e:	2321      	movs	r3, #33	@ 0x21
 8005c30:	f240 110d 	movw	r1, #269	@ 0x10d
 8005c34:	f7fd fa88 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c38:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005c3c:	22a0      	movs	r2, #160	@ 0xa0
 8005c3e:	f8c4 34e4 	str.w	r3, [r4, #1252]	@ 0x4e4
 8005c42:	f8a4 34e8 	strh.w	r3, [r4, #1256]	@ 0x4e8
        canvasPainter = &painter;
 8005c46:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005c48:	f8c4 3490 	str.w	r3, [r4, #1168]	@ 0x490
 8005c4c:	4611      	mov	r1, r2
 8005c4e:	9803      	ldr	r0, [sp, #12]
 8005c50:	f00c ff5c 	bl	8012b0c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005c54:	9803      	ldr	r0, [sp, #12]
 8005c56:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8005c5a:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 8005c5e:	f00c ff60 	bl	8012b22 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005c62:	f8d4 34a4 	ldr.w	r3, [r4, #1188]	@ 0x4a4
 8005c66:	2b20      	cmp	r3, #32
 8005c68:	d005      	beq.n	8005c76 <_ZN18HardScreenViewBaseC1Ev+0x6aa>
        lineWidthQ5 = widthQ5;
 8005c6a:	2320      	movs	r3, #32
        updateCachedShape();
 8005c6c:	9803      	ldr	r0, [sp, #12]
        lineWidthQ5 = widthQ5;
 8005c6e:	f8c4 34a4 	str.w	r3, [r4, #1188]	@ 0x4a4
        updateCachedShape();
 8005c72:	f00c fe55 	bl	8012920 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005c76:	9803      	ldr	r0, [sp, #12]
 8005c78:	2100      	movs	r1, #0
 8005c7a:	f00c ff5d 	bl	8012b38 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 8005c7e:	235f      	movs	r3, #95	@ 0x5f
 8005c80:	4638      	mov	r0, r7
 8005c82:	9903      	ldr	r1, [sp, #12]
 8005c84:	f884 348e 	strb.w	r3, [r4, #1166]	@ 0x48e
 8005c88:	f009 fa32 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005c8c:	4620      	mov	r0, r4
 8005c8e:	b01b      	add	sp, #108	@ 0x6c
 8005c90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005c94 <_ZN25MediumReadyScreenViewBase11setupScreenEv>:
}

void MediumReadyScreenViewBase::setupScreen()
{

}
 8005c94:	4770      	bx	lr
	...

08005c98 <_ZN25MediumReadyScreenViewBaseD1Ev>:
MediumReadyScreenViewBase::~MediumReadyScreenViewBase()
 8005c98:	b510      	push	{r4, lr}
 8005c9a:	4b03      	ldr	r3, [pc, #12]	@ (8005ca8 <_ZN25MediumReadyScreenViewBaseD1Ev+0x10>)
 8005c9c:	6003      	str	r3, [r0, #0]
 8005c9e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ca0:	f00e fdb6 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ca4:	4620      	mov	r0, r4
 8005ca6:	bd10      	pop	{r4, pc}
 8005ca8:	0802cc20 	.word	0x0802cc20

08005cac <_ZN25MediumReadyScreenViewBaseD0Ev>:
MediumReadyScreenViewBase::~MediumReadyScreenViewBase()
 8005cac:	b510      	push	{r4, lr}
 8005cae:	4b06      	ldr	r3, [pc, #24]	@ (8005cc8 <_ZN25MediumReadyScreenViewBaseD0Ev+0x1c>)
 8005cb0:	6003      	str	r3, [r0, #0]
 8005cb2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005cb4:	f00e fdac 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005cb8:	4620      	mov	r0, r4
 8005cba:	f44f 51b1 	mov.w	r1, #5664	@ 0x1620
 8005cbe:	f022 ffbb 	bl	8028c38 <_ZdlPvj>
 8005cc2:	4620      	mov	r0, r4
 8005cc4:	bd10      	pop	{r4, pc}
 8005cc6:	bf00      	nop
 8005cc8:	0802cc20 	.word	0x0802cc20

08005ccc <_ZN25MediumReadyScreenViewBase15handleTickEventEv>:

void MediumReadyScreenViewBase::handleTickEvent()
{
 8005ccc:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 8005cce:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 8005cd2:	f8d4 361c 	ldr.w	r3, [r4, #1564]	@ 0x61c
 8005cd6:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8005cd8:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 8005cda:	f8c4 361c 	str.w	r3, [r4, #1564]	@ 0x61c
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8005cde:	d106      	bne.n	8005cee <_ZN25MediumReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005ce0:	f010 fa90 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to MediumScreen
        //Go to MediumScreen with no screen transition
        application().gotoMediumScreenScreenNoTransition();
 8005ce4:	f7fe fa82 	bl	80041ec <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 8005ce8:	2300      	movs	r3, #0
 8005cea:	f8c4 361c 	str.w	r3, [r4, #1564]	@ 0x61c
    }
}
 8005cee:	bd10      	pop	{r4, pc}

08005cf0 <_ZN25MediumReadyScreenViewBaseC1Ev>:
MediumReadyScreenViewBase::MediumReadyScreenViewBase() :
 8005cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cf4:	4604      	mov	r4, r0
 8005cf6:	b093      	sub	sp, #76	@ 0x4c
    frameCountInteraction1Interval(0)
 8005cf8:	46a1      	mov	r9, r4
 8005cfa:	2600      	movs	r6, #0
 8005cfc:	f012 f9ba 	bl	8018074 <_ZN8touchgfx6ScreenC1Ev>
 8005d00:	4bde      	ldr	r3, [pc, #888]	@ (800607c <_ZN25MediumReadyScreenViewBaseC1Ev+0x38c>)
 8005d02:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8005d04:	f849 3b40 	str.w	r3, [r9], #64
 8005d08:	4648      	mov	r0, r9
 8005d0a:	f7fd fa31 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005d0e:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8005d12:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 8005d16:	4618      	mov	r0, r3
 8005d18:	9304      	str	r3, [sp, #16]
 8005d1a:	f7fd fa29 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005d1e:	4650      	mov	r0, sl
 8005d20:	f7fd fa26 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005d24:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 8005d28:	4618      	mov	r0, r3
 8005d2a:	9305      	str	r3, [sp, #20]
 8005d2c:	f7fd fa20 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005d30:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8005d34:	4618      	mov	r0, r3
 8005d36:	9306      	str	r3, [sp, #24]
 8005d38:	f00b ff1c 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005d3c:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 8005d40:	4618      	mov	r0, r3
 8005d42:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005d44:	f7fc f882 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005d48:	4bcd      	ldr	r3, [pc, #820]	@ (8006080 <_ZN25MediumReadyScreenViewBaseC1Ev+0x390>)
 8005d4a:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 8005d4e:	3324      	adds	r3, #36	@ 0x24
 8005d50:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
 8005d54:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8005d58:	4618      	mov	r0, r3
 8005d5a:	f8c4 6144 	str.w	r6, [r4, #324]	@ 0x144
 8005d5e:	4dc9      	ldr	r5, [pc, #804]	@ (8006084 <_ZN25MediumReadyScreenViewBaseC1Ev+0x394>)
 8005d60:	930a      	str	r3, [sp, #40]	@ 0x28
 8005d62:	f04f 0701 	mov.w	r7, #1
 8005d66:	f7fd fa03 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005d6a:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 8005d6e:	f504 78d2 	add.w	r8, r4, #420	@ 0x1a4
 8005d72:	4618      	mov	r0, r3
 8005d74:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 8005d78:	f884 7170 	strb.w	r7, [r4, #368]	@ 0x170
 8005d7c:	f504 7bf6 	add.w	fp, r4, #492	@ 0x1ec
 8005d80:	9309      	str	r3, [sp, #36]	@ 0x24
 8005d82:	f7fd f9f5 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005d86:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 8005d8a:	f884 719c 	strb.w	r7, [r4, #412]	@ 0x19c
 8005d8e:	4640      	mov	r0, r8
 8005d90:	f7fd fa04 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 8005d94:	4658      	mov	r0, fp
 8005d96:	f7fd fa01 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8005d9a:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 8005d9e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005da0:	4db9      	ldr	r5, [pc, #740]	@ (8006088 <_ZN25MediumReadyScreenViewBaseC1Ev+0x398>)
        : TextArea()
 8005da2:	9302      	str	r3, [sp, #8]
 8005da4:	f7fd f9fa 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 8005da8:	f504 7320 	add.w	r3, r4, #640	@ 0x280
        : TextAreaWithWildcardBase(), wc1(0)
 8005dac:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
 8005db0:	4618      	mov	r0, r3
 8005db2:	f8c4 627c 	str.w	r6, [r4, #636]	@ 0x27c
 8005db6:	4fb5      	ldr	r7, [pc, #724]	@ (800608c <_ZN25MediumReadyScreenViewBaseC1Ev+0x39c>)
 8005db8:	9308      	str	r3, [sp, #32]
 8005dba:	f7fd f9d9 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8005dbe:	f504 732d 	add.w	r3, r4, #692	@ 0x2b4
 8005dc2:	f8c4 7280 	str.w	r7, [r4, #640]	@ 0x280
 8005dc6:	4618      	mov	r0, r3
 8005dc8:	f8c4 62ac 	str.w	r6, [r4, #684]	@ 0x2ac
 8005dcc:	f8a4 62b0 	strh.w	r6, [r4, #688]	@ 0x2b0
 8005dd0:	9307      	str	r3, [sp, #28]
 8005dd2:	f7fd f9cd 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 8005dd6:	f504 733a 	add.w	r3, r4, #744	@ 0x2e8
 8005dda:	f8c4 72b4 	str.w	r7, [r4, #692]	@ 0x2b4
 8005dde:	4618      	mov	r0, r3
 8005de0:	f8c4 62e0 	str.w	r6, [r4, #736]	@ 0x2e0
 8005de4:	f8a4 62e4 	strh.w	r6, [r4, #740]	@ 0x2e4
 8005de8:	9303      	str	r3, [sp, #12]
 8005dea:	f7fd f9d7 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 8005dee:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
        : TextAreaWithWildcardBase(), wc1(0)
 8005df2:	f8c4 52e8 	str.w	r5, [r4, #744]	@ 0x2e8
 8005df6:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
    __background.setPosition(0, 0, 320, 240);
 8005dfa:	25f0      	movs	r5, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 8005dfc:	f8c3 661c 	str.w	r6, [r3, #1564]	@ 0x61c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005e00:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8005e04:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 8005e08:	f00e fcf8 	bl	80147fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8005e0c:	4632      	mov	r2, r6
 8005e0e:	4648      	mov	r0, r9
 8005e10:	9500      	str	r5, [sp, #0]
 8005e12:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005e16:	4631      	mov	r1, r6
 8005e18:	1d27      	adds	r7, r4, #4
 8005e1a:	f7fd f995 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e1e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8005e22:	4649      	mov	r1, r9
 8005e24:	66a3      	str	r3, [r4, #104]	@ 0x68
 8005e26:	4638      	mov	r0, r7
 8005e28:	f009 f962 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005e2c:	f04f 39ff 	mov.w	r9, #4294967295
    box3.setPosition(0, 0, 320, 240);
 8005e30:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005e34:	4632      	mov	r2, r6
 8005e36:	9804      	ldr	r0, [sp, #16]
 8005e38:	9500      	str	r5, [sp, #0]
 8005e3a:	4631      	mov	r1, r6
 8005e3c:	f7fd f984 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e40:	9904      	ldr	r1, [sp, #16]
 8005e42:	f8c4 9094 	str.w	r9, [r4, #148]	@ 0x94
 8005e46:	4638      	mov	r0, r7
 8005e48:	f009 f952 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 318, 236);
 8005e4c:	2202      	movs	r2, #2
 8005e4e:	23ec      	movs	r3, #236	@ 0xec
 8005e50:	4611      	mov	r1, r2
 8005e52:	4650      	mov	r0, sl
 8005e54:	9300      	str	r3, [sp, #0]
 8005e56:	f44f 739f 	mov.w	r3, #318	@ 0x13e
 8005e5a:	f7fd f975 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e5e:	4b8c      	ldr	r3, [pc, #560]	@ (8006090 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a0>)
 8005e60:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8005e64:	4651      	mov	r1, sl
 8005e66:	4638      	mov	r0, r7
 8005e68:	f009 f942 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8005e6c:	4632      	mov	r2, r6
 8005e6e:	9805      	ldr	r0, [sp, #20]
 8005e70:	9500      	str	r5, [sp, #0]
 8005e72:	2303      	movs	r3, #3
 8005e74:	21a0      	movs	r1, #160	@ 0xa0
 8005e76:	f7fd f967 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 8005e7a:	23dc      	movs	r3, #220	@ 0xdc
 8005e7c:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8005e7e:	f8c4 90ec 	str.w	r9, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8005e82:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 8005e86:	4638      	mov	r0, r7
 8005e88:	f009 f932 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(155, 114, 14, 14);
 8005e8c:	230e      	movs	r3, #14
 8005e8e:	2272      	movs	r2, #114	@ 0x72
 8005e90:	9806      	ldr	r0, [sp, #24]
 8005e92:	9300      	str	r3, [sp, #0]
 8005e94:	219b      	movs	r1, #155	@ 0x9b
 8005e96:	f7fd f957 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005e9a:	23c0      	movs	r3, #192	@ 0xc0
 8005e9c:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005ea0:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8005ea4:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 8005ea8:	4b7a      	ldr	r3, [pc, #488]	@ (8006094 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a4>)
 8005eaa:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005eae:	f649 0361 	movw	r3, #39009	@ 0x9861
 8005eb2:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
        canvasPainter = &painter;
 8005eb6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005eb8:	9906      	ldr	r1, [sp, #24]
 8005eba:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        this->circleCenterY = CWRUtil::toQ5(y);
 8005ebe:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
 8005ec2:	4638      	mov	r0, r7
    paddle1.setPosition(10, 100, 5, 40);
 8005ec4:	2528      	movs	r5, #40	@ 0x28
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005ec6:	f8c4 6130 	str.w	r6, [r4, #304]	@ 0x130
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005eca:	f8c4 6128 	str.w	r6, [r4, #296]	@ 0x128
 8005ece:	f009 f90f 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005ed2:	2305      	movs	r3, #5
 8005ed4:	2264      	movs	r2, #100	@ 0x64
 8005ed6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005ed8:	9500      	str	r5, [sp, #0]
 8005eda:	210a      	movs	r1, #10
 8005edc:	f7fd f934 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ee0:	990a      	ldr	r1, [sp, #40]	@ 0x28
        color = newColor;
 8005ee2:	f8c4 9174 	str.w	r9, [r4, #372]	@ 0x174
 8005ee6:	4638      	mov	r0, r7
 8005ee8:	f009 f902 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(307, 100, 5, 40);
 8005eec:	2305      	movs	r3, #5
 8005eee:	2264      	movs	r2, #100	@ 0x64
 8005ef0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005ef2:	9500      	str	r5, [sp, #0]
 8005ef4:	f240 1133 	movw	r1, #307	@ 0x133
 8005ef8:	f7fd f926 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005efc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005efe:	f8c4 91a0 	str.w	r9, [r4, #416]	@ 0x1a0
 8005f02:	4638      	mov	r0, r7
 8005f04:	f009 f8f4 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(116, 95, 19, 52);
 8005f08:	2334      	movs	r3, #52	@ 0x34
        boundingArea = calculateBoundingArea();
 8005f0a:	ad0c      	add	r5, sp, #48	@ 0x30
 8005f0c:	225f      	movs	r2, #95	@ 0x5f
 8005f0e:	4640      	mov	r0, r8
 8005f10:	9300      	str	r3, [sp, #0]
 8005f12:	2174      	movs	r1, #116	@ 0x74
 8005f14:	2313      	movs	r3, #19
 8005f16:	f7fd f917 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f1a:	4641      	mov	r1, r8
        color = newColor;
 8005f1c:	f8c4 91d4 	str.w	r9, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 8005f20:	4628      	mov	r0, r5
        linespace = space;
 8005f22:	f8a4 61d8 	strh.w	r6, [r4, #472]	@ 0x1d8
        boundingArea = calculateBoundingArea();
 8005f26:	f00c ffa9 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f2e:	f504 7af0 	add.w	sl, r4, #480	@ 0x1e0
 8005f32:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        wideTextAction = action;
 8005f36:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8005f3a:	4641      	mov	r1, r8
        wideTextAction = action;
 8005f3c:	f884 21dd 	strb.w	r2, [r4, #477]	@ 0x1dd
        boundingArea = calculateBoundingArea();
 8005f40:	4628      	mov	r0, r5
 8005f42:	f00c ff9b 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 8005f4a:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8005f4e:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005f52:	4641      	mov	r1, r8
        rotation = textRotation;
 8005f54:	f884 31dc 	strb.w	r3, [r4, #476]	@ 0x1dc
        boundingArea = calculateBoundingArea();
 8005f58:	4628      	mov	r0, r5
 8005f5a:	f00c ff8f 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f5e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f62:	4b4d      	ldr	r3, [pc, #308]	@ (8006098 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a8>)
 8005f64:	9310      	str	r3, [sp, #64]	@ 0x40
 8005f66:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
 8005f6a:	2311      	movs	r3, #17
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDK7));
 8005f6c:	4640      	mov	r0, r8
 8005f6e:	a910      	add	r1, sp, #64	@ 0x40
        alpha = newAlpha;
 8005f70:	f04f 0abe 	mov.w	sl, #190	@ 0xbe
 8005f74:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8005f78:	f00d fa28 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f7c:	4641      	mov	r1, r8
 8005f7e:	4638      	mov	r0, r7
 8005f80:	f884 a1da 	strb.w	sl, [r4, #474]	@ 0x1da
 8005f84:	f009 f8b4 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(187, 95, 19, 52);
 8005f88:	2134      	movs	r1, #52	@ 0x34
 8005f8a:	2313      	movs	r3, #19
 8005f8c:	225f      	movs	r2, #95	@ 0x5f
 8005f8e:	4658      	mov	r0, fp
 8005f90:	9100      	str	r1, [sp, #0]
 8005f92:	21bb      	movs	r1, #187	@ 0xbb
 8005f94:	f7fd f8d8 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8005f98:	4659      	mov	r1, fp
        color = newColor;
 8005f9a:	f8c4 921c 	str.w	r9, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 8005f9e:	4628      	mov	r0, r5
        linespace = space;
 8005fa0:	f8a4 6220 	strh.w	r6, [r4, #544]	@ 0x220
        boundingArea = calculateBoundingArea();
 8005fa4:	f00c ff6a 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fa8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fac:	f504 780a 	add.w	r8, r4, #552	@ 0x228
 8005fb0:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        wideTextAction = action;
 8005fb4:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8005fb8:	4659      	mov	r1, fp
        wideTextAction = action;
 8005fba:	f884 2225 	strb.w	r2, [r4, #549]	@ 0x225
        boundingArea = calculateBoundingArea();
 8005fbe:	4628      	mov	r0, r5
        wideTextAction = action;
 8005fc0:	4691      	mov	r9, r2
        boundingArea = calculateBoundingArea();
 8005fc2:	f00c ff5b 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fc6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fca:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005fce:	4659      	mov	r1, fp
 8005fd0:	4628      	mov	r0, r5
        rotation = textRotation;
 8005fd2:	f884 9224 	strb.w	r9, [r4, #548]	@ 0x224
        boundingArea = calculateBoundingArea();
 8005fd6:	f00c ff51 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fda:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fde:	4b2e      	ldr	r3, [pc, #184]	@ (8006098 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a8>)
 8005fe0:	9310      	str	r3, [sp, #64]	@ 0x40
 8005fe2:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8005fe6:	2310      	movs	r3, #16
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CWXV));
 8005fe8:	4658      	mov	r0, fp
 8005fea:	a910      	add	r1, sp, #64	@ 0x40
 8005fec:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8005ff0:	f00d f9ec 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ff4:	4659      	mov	r1, fp
 8005ff6:	4638      	mov	r0, r7
        alpha = newAlpha;
 8005ff8:	f884 a222 	strb.w	sl, [r4, #546]	@ 0x222
 8005ffc:	f009 f878 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(53, 113);
 8006000:	2271      	movs	r2, #113	@ 0x71
 8006002:	9802      	ldr	r0, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006004:	f8df b0a8 	ldr.w	fp, [pc, #168]	@ 80060b0 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c0>
 8006008:	2135      	movs	r1, #53	@ 0x35
 800600a:	f7fd f890 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800600e:	4b23      	ldr	r3, [pc, #140]	@ (800609c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3ac>)
 8006010:	f8c4 3264 	str.w	r3, [r4, #612]	@ 0x264
        boundingArea = calculateBoundingArea();
 8006014:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 8006018:	9902      	ldr	r1, [sp, #8]
 800601a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 800601e:	f8a4 6268 	strh.w	r6, [r4, #616]	@ 0x268
        boundingArea = calculateBoundingArea();
 8006022:	4628      	mov	r0, r5
 8006024:	4798      	blx	r3
 8006026:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800602a:	f504 781c 	add.w	r8, r4, #624	@ 0x270
        rotation = textRotation;
 800602e:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8006032:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8006036:	f884 326c 	strb.w	r3, [r4, #620]	@ 0x26c
        boundingArea = calculateBoundingArea();
 800603a:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 800603e:	9902      	ldr	r1, [sp, #8]
 8006040:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006044:	4628      	mov	r0, r5
 8006046:	4798      	blx	r3
 8006048:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800604c:	f8db 3000 	ldr.w	r3, [fp]
 8006050:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER2BUFFER).getText());
 8006054:	f504 784d 	add.w	r8, r4, #820	@ 0x334
 8006058:	b92b      	cbnz	r3, 8006066 <_ZN25MediumReadyScreenViewBaseC1Ev+0x376>
 800605a:	4b11      	ldr	r3, [pc, #68]	@ (80060a0 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b0>)
 800605c:	4a11      	ldr	r2, [pc, #68]	@ (80060a4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b4>)
 800605e:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006060:	4811      	ldr	r0, [pc, #68]	@ (80060a8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b8>)
 8006062:	f023 fe27 	bl	8029cb4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006066:	f8df a04c 	ldr.w	sl, [pc, #76]	@ 80060b4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800606a:	f8ba 3000 	ldrh.w	r3, [sl]
 800606e:	2b07      	cmp	r3, #7
 8006070:	d822      	bhi.n	80060b8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c8>
 8006072:	4b0e      	ldr	r3, [pc, #56]	@ (80060ac <_ZN25MediumReadyScreenViewBaseC1Ev+0x3bc>)
 8006074:	4a0b      	ldr	r2, [pc, #44]	@ (80060a4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b4>)
 8006076:	2161      	movs	r1, #97	@ 0x61
 8006078:	e7f2      	b.n	8006060 <_ZN25MediumReadyScreenViewBaseC1Ev+0x370>
 800607a:	bf00      	nop
 800607c:	0802cc20 	.word	0x0802cc20
 8006080:	0802d214 	.word	0x0802d214
 8006084:	0802c8b0 	.word	0x0802c8b0
 8006088:	0802c820 	.word	0x0802c820
 800608c:	0802d620 	.word	0x0802d620
 8006090:	ff0c3837 	.word	0xff0c3837
 8006094:	ff990c0c 	.word	0xff990c0c
 8006098:	0802c810 	.word	0x0802c810
 800609c:	ffdeab5f 	.word	0xffdeab5f
 80060a0:	0802b638 	.word	0x0802b638
 80060a4:	0802b73a 	.word	0x0802b73a
 80060a8:	0802b6b5 	.word	0x0802b6b5
 80060ac:	0802b6fc 	.word	0x0802b6fc
 80060b0:	20013fb8 	.word	0x20013fb8
 80060b4:	20013fbc 	.word	0x20013fbc
        return texts->getText(typedTextId);
 80060b8:	f8df 914c 	ldr.w	r9, [pc, #332]	@ 8006208 <_ZN25MediumReadyScreenViewBaseC1Ev+0x518>
 80060bc:	2107      	movs	r1, #7
 80060be:	f8d9 0000 	ldr.w	r0, [r9]
 80060c2:	f001 f9b5 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 80060c6:	4a4b      	ldr	r2, [pc, #300]	@ (80061f4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x504>)
 80060c8:	4603      	mov	r3, r0
 80060ca:	210a      	movs	r1, #10
 80060cc:	4640      	mov	r0, r8
 80060ce:	f013 fcb1 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 80060d2:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 80060d4:	f8c4 827c 	str.w	r8, [r4, #636]	@ 0x27c
 80060d8:	f00d f958 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80060dc:	4b46      	ldr	r3, [pc, #280]	@ (80061f8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x508>)
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MH9F));
 80060de:	9802      	ldr	r0, [sp, #8]
 80060e0:	9310      	str	r3, [sp, #64]	@ 0x40
 80060e2:	a910      	add	r1, sp, #64	@ 0x40
 80060e4:	230f      	movs	r3, #15
        alpha = newAlpha;
 80060e6:	f04f 08d2 	mov.w	r8, #210	@ 0xd2
 80060ea:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80060ee:	f00d f96d 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060f2:	9902      	ldr	r1, [sp, #8]
 80060f4:	f884 826a 	strb.w	r8, [r4, #618]	@ 0x26a
 80060f8:	4638      	mov	r0, r7
 80060fa:	f008 fff9 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal1.setPosition(318, 60, 2, 120);
 80060fe:	2278      	movs	r2, #120	@ 0x78
 8006100:	2302      	movs	r3, #2
 8006102:	9808      	ldr	r0, [sp, #32]
 8006104:	9200      	str	r2, [sp, #0]
 8006106:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 800610a:	223c      	movs	r2, #60	@ 0x3c
 800610c:	f7fd f81c 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006110:	4a3a      	ldr	r2, [pc, #232]	@ (80061fc <_ZN25MediumReadyScreenViewBaseC1Ev+0x50c>)
 8006112:	493b      	ldr	r1, [pc, #236]	@ (8006200 <_ZN25MediumReadyScreenViewBaseC1Ev+0x510>)
        borderSize = size;
 8006114:	f8a4 62b0 	strh.w	r6, [r4, #688]	@ 0x2b0
        borderColor = colorBorder;
 8006118:	e9c4 21aa 	strd	r2, r1, [r4, #680]	@ 0x2a8
 800611c:	4638      	mov	r0, r7
 800611e:	9908      	ldr	r1, [sp, #32]
 8006120:	f008 ffe6 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(0, 60, 2, 120);
 8006124:	2078      	movs	r0, #120	@ 0x78
 8006126:	2302      	movs	r3, #2
 8006128:	4631      	mov	r1, r6
 800612a:	9000      	str	r0, [sp, #0]
 800612c:	223c      	movs	r2, #60	@ 0x3c
 800612e:	9807      	ldr	r0, [sp, #28]
 8006130:	f7fd f80a 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006134:	4a31      	ldr	r2, [pc, #196]	@ (80061fc <_ZN25MediumReadyScreenViewBaseC1Ev+0x50c>)
 8006136:	4932      	ldr	r1, [pc, #200]	@ (8006200 <_ZN25MediumReadyScreenViewBaseC1Ev+0x510>)
        borderSize = size;
 8006138:	f8a4 62e4 	strh.w	r6, [r4, #740]	@ 0x2e4
        borderColor = colorBorder;
 800613c:	e9c4 21b7 	strd	r2, r1, [r4, #732]	@ 0x2dc
 8006140:	4638      	mov	r0, r7
 8006142:	9907      	ldr	r1, [sp, #28]
 8006144:	f008 ffd4 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(243, 111);
 8006148:	9803      	ldr	r0, [sp, #12]
 800614a:	226f      	movs	r2, #111	@ 0x6f
 800614c:	21f3      	movs	r1, #243	@ 0xf3
 800614e:	f7fc ffee 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006152:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        color = newColor;
 8006156:	4a2b      	ldr	r2, [pc, #172]	@ (8006204 <_ZN25MediumReadyScreenViewBaseC1Ev+0x514>)
        boundingArea = calculateBoundingArea();
 8006158:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800615c:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 800615e:	f8c4 2318 	str.w	r2, [r4, #792]	@ 0x318
        boundingArea = calculateBoundingArea();
 8006162:	4628      	mov	r0, r5
        linespace = space;
 8006164:	f8a4 631c 	strh.w	r6, [r4, #796]	@ 0x31c
        boundingArea = calculateBoundingArea();
 8006168:	4798      	blx	r3
 800616a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 800616e:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        boundingArea = calculateBoundingArea();
 8006172:	f504 7649 	add.w	r6, r4, #804	@ 0x324
 8006176:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 800617a:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 800617e:	4628      	mov	r0, r5
 8006180:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006184:	9903      	ldr	r1, [sp, #12]
        rotation = textRotation;
 8006186:	f884 2320 	strb.w	r2, [r4, #800]	@ 0x320
        boundingArea = calculateBoundingArea();
 800618a:	4798      	blx	r3
 800618c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006190:	f8db 3000 	ldr.w	r3, [fp]
 8006194:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER2BUFFER).getText());
 8006198:	f504 7552 	add.w	r5, r4, #840	@ 0x348
 800619c:	2b00      	cmp	r3, #0
 800619e:	f43f af5c 	beq.w	800605a <_ZN25MediumReadyScreenViewBaseC1Ev+0x36a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80061a2:	f8ba 3000 	ldrh.w	r3, [sl]
 80061a6:	2b07      	cmp	r3, #7
 80061a8:	f67f af63 	bls.w	8006072 <_ZN25MediumReadyScreenViewBaseC1Ev+0x382>
        return texts->getText(typedTextId);
 80061ac:	f8d9 0000 	ldr.w	r0, [r9]
 80061b0:	2107      	movs	r1, #7
 80061b2:	f001 f93d 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 80061b6:	4a0f      	ldr	r2, [pc, #60]	@ (80061f4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x504>)
 80061b8:	4603      	mov	r3, r0
 80061ba:	210a      	movs	r1, #10
 80061bc:	4628      	mov	r0, r5
 80061be:	f013 fc39 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 80061c2:	9803      	ldr	r0, [sp, #12]
 80061c4:	f8c4 5330 	str.w	r5, [r4, #816]	@ 0x330
 80061c8:	f00d f8e0 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80061cc:	4b0a      	ldr	r3, [pc, #40]	@ (80061f8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x508>)
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CZR5));
 80061ce:	9803      	ldr	r0, [sp, #12]
 80061d0:	9310      	str	r3, [sp, #64]	@ 0x40
 80061d2:	a910      	add	r1, sp, #64	@ 0x40
 80061d4:	f04f 030e 	mov.w	r3, #14
 80061d8:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80061dc:	f00d f8f6 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061e0:	4638      	mov	r0, r7
 80061e2:	9903      	ldr	r1, [sp, #12]
        alpha = newAlpha;
 80061e4:	f884 831e 	strb.w	r8, [r4, #798]	@ 0x31e
 80061e8:	f008 ff82 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80061ec:	4620      	mov	r0, r4
 80061ee:	b013      	add	sp, #76	@ 0x4c
 80061f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061f4:	0802b785 	.word	0x0802b785
 80061f8:	0802c810 	.word	0x0802c810
 80061fc:	ff000b6e 	.word	0xff000b6e
 8006200:	ffad9334 	.word	0xffad9334
 8006204:	ffdeab5f 	.word	0xffdeab5f
 8006208:	20013fc4 	.word	0x20013fc4

0800620c <_ZN20MediumScreenViewBase11setupScreenEv>:
}

void MediumScreenViewBase::setupScreen()
{

}
 800620c:	4770      	bx	lr
	...

08006210 <_ZN20MediumScreenViewBaseD1Ev>:
MediumScreenViewBase::~MediumScreenViewBase()
 8006210:	b510      	push	{r4, lr}
 8006212:	4b03      	ldr	r3, [pc, #12]	@ (8006220 <_ZN20MediumScreenViewBaseD1Ev+0x10>)
 8006214:	6003      	str	r3, [r0, #0]
 8006216:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006218:	f00e fafa 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800621c:	4620      	mov	r0, r4
 800621e:	bd10      	pop	{r4, pc}
 8006220:	0802cc54 	.word	0x0802cc54

08006224 <_ZN20MediumScreenViewBaseD0Ev>:
MediumScreenViewBase::~MediumScreenViewBase()
 8006224:	b510      	push	{r4, lr}
 8006226:	4b06      	ldr	r3, [pc, #24]	@ (8006240 <_ZN20MediumScreenViewBaseD0Ev+0x1c>)
 8006228:	6003      	str	r3, [r0, #0]
 800622a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800622c:	f00e faf0 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006230:	4620      	mov	r0, r4
 8006232:	f241 7124 	movw	r1, #5924	@ 0x1724
 8006236:	f022 fcff 	bl	8028c38 <_ZdlPvj>
 800623a:	4620      	mov	r0, r4
 800623c:	bd10      	pop	{r4, pc}
 800623e:	bf00      	nop
 8006240:	0802cc54 	.word	0x0802cc54

08006244 <_ZN20MediumScreenViewBaseC1Ev>:
MediumScreenViewBase::MediumScreenViewBase()
 8006244:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006248:	4604      	mov	r4, r0
 800624a:	b097      	sub	sp, #92	@ 0x5c
 800624c:	46a2      	mov	sl, r4
 800624e:	2600      	movs	r6, #0
 8006250:	f011 ff10 	bl	8018074 <_ZN8touchgfx6ScreenC1Ev>
 8006254:	4ba0      	ldr	r3, [pc, #640]	@ (80064d8 <_ZN20MediumScreenViewBaseC1Ev+0x294>)
 8006256:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8006258:	f84a 3b40 	str.w	r3, [sl], #64
 800625c:	4650      	mov	r0, sl
 800625e:	f7fc ff87 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8006262:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8006266:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800626a:	4618      	mov	r0, r3
 800626c:	9306      	str	r3, [sp, #24]
 800626e:	f7fc ff7f 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8006272:	4640      	mov	r0, r8
 8006274:	f7fc ff7c 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8006278:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 800627c:	4618      	mov	r0, r3
 800627e:	9307      	str	r3, [sp, #28]
 8006280:	f7fc ff76 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8006284:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8006288:	4618      	mov	r0, r3
 800628a:	4f94      	ldr	r7, [pc, #592]	@ (80064dc <_ZN20MediumScreenViewBaseC1Ev+0x298>)
 800628c:	930c      	str	r3, [sp, #48]	@ 0x30
 800628e:	f04f 0501 	mov.w	r5, #1
 8006292:	f7fc ff6d 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8006296:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 800629a:	4618      	mov	r0, r3
        : TextArea()
 800629c:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 80062a0:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 80062a4:	f884 5114 	strb.w	r5, [r4, #276]	@ 0x114
 80062a8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80062aa:	f504 79ca 	add.w	r9, r4, #404	@ 0x194
 80062ae:	f7fc ff5f 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 80062b2:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 80062b6:	f884 5140 	strb.w	r5, [r4, #320]	@ 0x140
        : TextAreaWithWildcardBase(), wc1(0)
 80062ba:	4f89      	ldr	r7, [pc, #548]	@ (80064e0 <_ZN20MediumScreenViewBaseC1Ev+0x29c>)
        : TextArea()
 80062bc:	4658      	mov	r0, fp
 80062be:	f7fc ff6d 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80062c2:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 80062c6:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 80062ca:	4648      	mov	r0, r9
 80062cc:	f7fc ff66 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 80062d0:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 80062d4:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 80062d8:	4618      	mov	r0, r3
 80062da:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 80062de:	9304      	str	r3, [sp, #16]
 80062e0:	f7fc ff5c 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
 80062e4:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 80062e8:	4618      	mov	r0, r3
 80062ea:	9305      	str	r3, [sp, #20]
 80062ec:	f7fc ff56 	bl	800319c <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 80062f0:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 80062f4:	4618      	mov	r0, r3
 80062f6:	4f7b      	ldr	r7, [pc, #492]	@ (80064e4 <_ZN20MediumScreenViewBaseC1Ev+0x2a0>)
 80062f8:	930a      	str	r3, [sp, #40]	@ 0x28
 80062fa:	f7fc ff39 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 80062fe:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 8006302:	f8c4 7270 	str.w	r7, [r4, #624]	@ 0x270
 8006306:	4618      	mov	r0, r3
 8006308:	f8c4 629c 	str.w	r6, [r4, #668]	@ 0x29c
 800630c:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 8006310:	9309      	str	r3, [sp, #36]	@ 0x24
 8006312:	f7fc ff2d 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8006316:	f504 7336 	add.w	r3, r4, #728	@ 0x2d8
 800631a:	f8c4 72a4 	str.w	r7, [r4, #676]	@ 0x2a4
 800631e:	4618      	mov	r0, r3
 8006320:	f8c4 62d0 	str.w	r6, [r4, #720]	@ 0x2d0
 8006324:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006328:	4f6f      	ldr	r7, [pc, #444]	@ (80064e8 <_ZN20MediumScreenViewBaseC1Ev+0x2a4>)
 800632a:	9308      	str	r3, [sp, #32]
 800632c:	f00b fc22 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 8006330:	f504 7348 	add.w	r3, r4, #800	@ 0x320
 8006334:	4618      	mov	r0, r3
 8006336:	f107 0524 	add.w	r5, r7, #36	@ 0x24
 800633a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800633c:	f7fb fd86 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006340:	f504 734d 	add.w	r3, r4, #820	@ 0x334
 8006344:	f8c4 7320 	str.w	r7, [r4, #800]	@ 0x320
 8006348:	f8c4 5328 	str.w	r5, [r4, #808]	@ 0x328
 800634c:	4618      	mov	r0, r3
 800634e:	f8c4 632c 	str.w	r6, [r4, #812]	@ 0x32c
 8006352:	9302      	str	r3, [sp, #8]
 8006354:	f00c fac4 	bl	80128e0 <_ZN8touchgfx4LineC1Ev>
 8006358:	f504 7369 	add.w	r3, r4, #932	@ 0x3a4
 800635c:	4618      	mov	r0, r3
 800635e:	930e      	str	r3, [sp, #56]	@ 0x38
 8006360:	f7fb fd74 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006364:	f504 736e 	add.w	r3, r4, #952	@ 0x3b8
 8006368:	f8c4 73a4 	str.w	r7, [r4, #932]	@ 0x3a4
 800636c:	f8c4 53ac 	str.w	r5, [r4, #940]	@ 0x3ac
 8006370:	4618      	mov	r0, r3
 8006372:	f8c4 63b0 	str.w	r6, [r4, #944]	@ 0x3b0
 8006376:	9303      	str	r3, [sp, #12]
 8006378:	f00c fab2 	bl	80128e0 <_ZN8touchgfx4LineC1Ev>
 800637c:	f504 6385 	add.w	r3, r4, #1064	@ 0x428
 8006380:	4618      	mov	r0, r3
 8006382:	930d      	str	r3, [sp, #52]	@ 0x34
 8006384:	f7fb fd62 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006388:	f8c4 7428 	str.w	r7, [r4, #1064]	@ 0x428
 800638c:	f8c4 5430 	str.w	r5, [r4, #1072]	@ 0x430
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006390:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8006394:	f204 4064 	addw	r0, r4, #1124	@ 0x464
 8006398:	f8c4 6434 	str.w	r6, [r4, #1076]	@ 0x434
 800639c:	f00e fa2e 	bl	80147fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80063a0:	23f0      	movs	r3, #240	@ 0xf0
 80063a2:	4632      	mov	r2, r6
 80063a4:	4650      	mov	r0, sl
 80063a6:	9300      	str	r3, [sp, #0]
 80063a8:	4631      	mov	r1, r6
 80063aa:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80063ae:	f7fc fecb 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063b2:	1d27      	adds	r7, r4, #4
 80063b4:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80063b8:	4651      	mov	r1, sl
 80063ba:	66a3      	str	r3, [r4, #104]	@ 0x68
 80063bc:	4638      	mov	r0, r7
 80063be:	f008 fe97 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 80063c2:	23f0      	movs	r3, #240	@ 0xf0
 80063c4:	f04f 3aff 	mov.w	sl, #4294967295
 80063c8:	4632      	mov	r2, r6
 80063ca:	9806      	ldr	r0, [sp, #24]
 80063cc:	9300      	str	r3, [sp, #0]
 80063ce:	4631      	mov	r1, r6
 80063d0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80063d4:	f7fc feb8 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063d8:	9906      	ldr	r1, [sp, #24]
 80063da:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
 80063de:	4638      	mov	r0, r7
 80063e0:	f008 fe86 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 80063e4:	2202      	movs	r2, #2
 80063e6:	23ec      	movs	r3, #236	@ 0xec
 80063e8:	4611      	mov	r1, r2
 80063ea:	4640      	mov	r0, r8
 80063ec:	9300      	str	r3, [sp, #0]
 80063ee:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 80063f2:	f7fc fea9 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063f6:	4b3d      	ldr	r3, [pc, #244]	@ (80064ec <_ZN20MediumScreenViewBaseC1Ev+0x2a8>)
 80063f8:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80063fc:	4641      	mov	r1, r8
 80063fe:	4638      	mov	r0, r7
 8006400:	f008 fe76 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8006404:	23f0      	movs	r3, #240	@ 0xf0
 8006406:	4632      	mov	r2, r6
 8006408:	9807      	ldr	r0, [sp, #28]
 800640a:	9300      	str	r3, [sp, #0]
 800640c:	21a0      	movs	r1, #160	@ 0xa0
 800640e:	2303      	movs	r3, #3
 8006410:	f7fc fe9a 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 8006414:	23dc      	movs	r3, #220	@ 0xdc
    paddle1.setPosition(7, 101, 5, 40);
 8006416:	2528      	movs	r5, #40	@ 0x28
 8006418:	9907      	ldr	r1, [sp, #28]
 800641a:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 800641e:	4638      	mov	r0, r7
        color = newColor;
 8006420:	f8c4 a0ec 	str.w	sl, [r4, #236]	@ 0xec
 8006424:	f008 fe64 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006428:	2305      	movs	r3, #5
 800642a:	2265      	movs	r2, #101	@ 0x65
 800642c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800642e:	9500      	str	r5, [sp, #0]
 8006430:	2107      	movs	r1, #7
 8006432:	f7fc fe89 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006436:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8006438:	f8c4 a118 	str.w	sl, [r4, #280]	@ 0x118
 800643c:	4638      	mov	r0, r7
 800643e:	f008 fe57 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 101, 5, 40);
 8006442:	2305      	movs	r3, #5
 8006444:	2265      	movs	r2, #101	@ 0x65
 8006446:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8006448:	9500      	str	r5, [sp, #0]
 800644a:	f44f 719a 	mov.w	r1, #308	@ 0x134
 800644e:	f7fc fe7b 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006452:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006454:	f8c4 a144 	str.w	sl, [r4, #324]	@ 0x144
 8006458:	4638      	mov	r0, r7
 800645a:	f008 fe49 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 800645e:	2216      	movs	r2, #22
 8006460:	21b8      	movs	r1, #184	@ 0xb8
 8006462:	4658      	mov	r0, fp
 8006464:	f7fc fe63 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006468:	4b21      	ldr	r3, [pc, #132]	@ (80064f0 <_ZN20MediumScreenViewBaseC1Ev+0x2ac>)
 800646a:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 800646e:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 8006472:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 8006476:	ad10      	add	r5, sp, #64	@ 0x40
 8006478:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800647c:	4659      	mov	r1, fp
 800647e:	4628      	mov	r0, r5
 8006480:	4798      	blx	r3
 8006482:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006486:	f504 78c2 	add.w	r8, r4, #388	@ 0x184
        rotation = textRotation;
 800648a:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 800648e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8006492:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 8006496:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 800649a:	4659      	mov	r1, fp
 800649c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80064a0:	4628      	mov	r0, r5
 80064a2:	4798      	blx	r3
 80064a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80064a8:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80064ac:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 8006508 <_ZN20MediumScreenViewBaseC1Ev+0x2c4>
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER2).getText());
 80064b0:	f204 433c 	addw	r3, r4, #1084	@ 0x43c
 80064b4:	9306      	str	r3, [sp, #24]
 80064b6:	f8d8 3000 	ldr.w	r3, [r8]
 80064ba:	b92b      	cbnz	r3, 80064c8 <_ZN20MediumScreenViewBaseC1Ev+0x284>
 80064bc:	4b0d      	ldr	r3, [pc, #52]	@ (80064f4 <_ZN20MediumScreenViewBaseC1Ev+0x2b0>)
 80064be:	4a0e      	ldr	r2, [pc, #56]	@ (80064f8 <_ZN20MediumScreenViewBaseC1Ev+0x2b4>)
 80064c0:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80064c2:	480e      	ldr	r0, [pc, #56]	@ (80064fc <_ZN20MediumScreenViewBaseC1Ev+0x2b8>)
 80064c4:	f023 fbf6 	bl	8029cb4 <__assert_func>
 80064c8:	4b0d      	ldr	r3, [pc, #52]	@ (8006500 <_ZN20MediumScreenViewBaseC1Ev+0x2bc>)
 80064ca:	881b      	ldrh	r3, [r3, #0]
 80064cc:	2b03      	cmp	r3, #3
 80064ce:	d81d      	bhi.n	800650c <_ZN20MediumScreenViewBaseC1Ev+0x2c8>
 80064d0:	4b0c      	ldr	r3, [pc, #48]	@ (8006504 <_ZN20MediumScreenViewBaseC1Ev+0x2c0>)
 80064d2:	4a09      	ldr	r2, [pc, #36]	@ (80064f8 <_ZN20MediumScreenViewBaseC1Ev+0x2b4>)
 80064d4:	2161      	movs	r1, #97	@ 0x61
 80064d6:	e7f4      	b.n	80064c2 <_ZN20MediumScreenViewBaseC1Ev+0x27e>
 80064d8:	0802cc54 	.word	0x0802cc54
 80064dc:	0802c8b0 	.word	0x0802c8b0
 80064e0:	0802c820 	.word	0x0802c820
 80064e4:	0802d620 	.word	0x0802d620
 80064e8:	0802d214 	.word	0x0802d214
 80064ec:	ff0c3837 	.word	0xff0c3837
 80064f0:	ff595656 	.word	0xff595656
 80064f4:	0802b638 	.word	0x0802b638
 80064f8:	0802b73a 	.word	0x0802b73a
 80064fc:	0802b6b5 	.word	0x0802b6b5
 8006500:	20013fbc 	.word	0x20013fbc
 8006504:	0802b6fc 	.word	0x0802b6fc
 8006508:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 800650c:	4bc1      	ldr	r3, [pc, #772]	@ (8006814 <_ZN20MediumScreenViewBaseC1Ev+0x5d0>)
 800650e:	2103      	movs	r1, #3
 8006510:	6818      	ldr	r0, [r3, #0]
 8006512:	f000 ff8d 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8006516:	4ac0      	ldr	r2, [pc, #768]	@ (8006818 <_ZN20MediumScreenViewBaseC1Ev+0x5d4>)
 8006518:	4603      	mov	r3, r0
 800651a:	210a      	movs	r1, #10
 800651c:	9806      	ldr	r0, [sp, #24]
 800651e:	f013 fa89 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006522:	9906      	ldr	r1, [sp, #24]
 8006524:	f8c4 1190 	str.w	r1, [r4, #400]	@ 0x190
    score2.resizeToCurrentText();
 8006528:	4658      	mov	r0, fp
 800652a:	f00c ff2f 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800652e:	4bbb      	ldr	r3, [pc, #748]	@ (800681c <_ZN20MediumScreenViewBaseC1Ev+0x5d8>)
 8006530:	9314      	str	r3, [sp, #80]	@ 0x50
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KK9M));
 8006532:	4658      	mov	r0, fp
 8006534:	231d      	movs	r3, #29
 8006536:	a914      	add	r1, sp, #80	@ 0x50
 8006538:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 800653c:	f00c ff46 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006540:	4659      	mov	r1, fp
 8006542:	4638      	mov	r0, r7
 8006544:	f008 fdd4 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 8006548:	22c3      	movs	r2, #195	@ 0xc3
 800654a:	2175      	movs	r1, #117	@ 0x75
 800654c:	4648      	mov	r0, r9
 800654e:	f7fc fdee 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006552:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 8006556:	49b2      	ldr	r1, [pc, #712]	@ (8006820 <_ZN20MediumScreenViewBaseC1Ev+0x5dc>)
        boundingArea = calculateBoundingArea();
 8006558:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 800655c:	f8c4 11c4 	str.w	r1, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 8006560:	4628      	mov	r0, r5
 8006562:	4649      	mov	r1, r9
        linespace = space;
 8006564:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 8006568:	4798      	blx	r3
 800656a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800656e:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 8006572:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 8006576:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 800657a:	f04f 0101 	mov.w	r1, #1
        boundingArea = calculateBoundingArea();
 800657e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 8006582:	f884 11cc 	strb.w	r1, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 8006586:	4628      	mov	r0, r5
 8006588:	4649      	mov	r1, r9
 800658a:	4798      	blx	r3
 800658c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006590:	f8d8 3000 	ldr.w	r3, [r8]
 8006594:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER2).getText());
 8006598:	f504 6b8a 	add.w	fp, r4, #1104	@ 0x450
 800659c:	2b00      	cmp	r3, #0
 800659e:	d08d      	beq.n	80064bc <_ZN20MediumScreenViewBaseC1Ev+0x278>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80065a0:	49a0      	ldr	r1, [pc, #640]	@ (8006824 <_ZN20MediumScreenViewBaseC1Ev+0x5e0>)
 80065a2:	880b      	ldrh	r3, [r1, #0]
 80065a4:	2b04      	cmp	r3, #4
 80065a6:	d993      	bls.n	80064d0 <_ZN20MediumScreenViewBaseC1Ev+0x28c>
        return texts->getText(typedTextId);
 80065a8:	4a9a      	ldr	r2, [pc, #616]	@ (8006814 <_ZN20MediumScreenViewBaseC1Ev+0x5d0>)
 80065aa:	2104      	movs	r1, #4
 80065ac:	6810      	ldr	r0, [r2, #0]
 80065ae:	f000 ff3f 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 80065b2:	4a99      	ldr	r2, [pc, #612]	@ (8006818 <_ZN20MediumScreenViewBaseC1Ev+0x5d4>)
 80065b4:	4603      	mov	r3, r0
 80065b6:	210a      	movs	r1, #10
 80065b8:	4658      	mov	r0, fp
 80065ba:	f013 fa3b 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score1.resizeToCurrentText();
 80065be:	4648      	mov	r0, r9
 80065c0:	f8c4 b1dc 	str.w	fp, [r4, #476]	@ 0x1dc
 80065c4:	f00c fee2 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ATHF));
 80065c8:	aa14      	add	r2, sp, #80	@ 0x50
        : typedTextId(id)
 80065ca:	4b94      	ldr	r3, [pc, #592]	@ (800681c <_ZN20MediumScreenViewBaseC1Ev+0x5d8>)
 80065cc:	9314      	str	r3, [sp, #80]	@ 0x50
 80065ce:	4611      	mov	r1, r2
 80065d0:	231c      	movs	r3, #28
 80065d2:	4648      	mov	r0, r9
 80065d4:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 80065d8:	f00c fef8 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065dc:	4649      	mov	r1, r9
 80065de:	4638      	mov	r0, r7
    player1.setPosition(140, 180, 19, 52);
 80065e0:	f04f 0934 	mov.w	r9, #52	@ 0x34
 80065e4:	f008 fd84 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065e8:	2313      	movs	r3, #19
 80065ea:	22b4      	movs	r2, #180	@ 0xb4
 80065ec:	9804      	ldr	r0, [sp, #16]
 80065ee:	f8cd 9000 	str.w	r9, [sp]
 80065f2:	218c      	movs	r1, #140	@ 0x8c
 80065f4:	f7fc fda8 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 80065f8:	4628      	mov	r0, r5
 80065fa:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80065fc:	f8c4 a210 	str.w	sl, [r4, #528]	@ 0x210
        linespace = space;
 8006600:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 8006604:	f00c fc3a 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006608:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800660c:	f504 7807 	add.w	r8, r4, #540	@ 0x21c
 8006610:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8006614:	f04f 0101 	mov.w	r1, #1
        boundingArea = calculateBoundingArea();
 8006618:	4628      	mov	r0, r5
        rotation = textRotation;
 800661a:	f884 1218 	strb.w	r1, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 800661e:	9904      	ldr	r1, [sp, #16]
 8006620:	f00c fc2c 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006624:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006628:	4b7c      	ldr	r3, [pc, #496]	@ (800681c <_ZN20MediumScreenViewBaseC1Ev+0x5d8>)
 800662a:	9314      	str	r3, [sp, #80]	@ 0x50
 800662c:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8006630:	231b      	movs	r3, #27
        alpha = newAlpha;
 8006632:	f04f 08be 	mov.w	r8, #190	@ 0xbe
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V9P9));
 8006636:	9804      	ldr	r0, [sp, #16]
 8006638:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 800663c:	a914      	add	r1, sp, #80	@ 0x50
 800663e:	f00c fec5 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006642:	9904      	ldr	r1, [sp, #16]
 8006644:	f884 8216 	strb.w	r8, [r4, #534]	@ 0x216
 8006648:	4638      	mov	r0, r7
 800664a:	f008 fd51 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 800664e:	2313      	movs	r3, #19
 8006650:	2207      	movs	r2, #7
 8006652:	9805      	ldr	r0, [sp, #20]
 8006654:	f8cd 9000 	str.w	r9, [sp]
 8006658:	21a5      	movs	r1, #165	@ 0xa5
 800665a:	f7fc fd75 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 800665e:	4628      	mov	r0, r5
 8006660:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8006662:	f8c4 a258 	str.w	sl, [r4, #600]	@ 0x258
        linespace = space;
 8006666:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 800666a:	f00c fc07 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800666e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006672:	f504 7919 	add.w	r9, r4, #612	@ 0x264
 8006676:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 800667a:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 800667e:	4628      	mov	r0, r5
 8006680:	9905      	ldr	r1, [sp, #20]
        rotation = textRotation;
 8006682:	f884 2260 	strb.w	r2, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8006686:	f00c fbf9 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800668a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800668e:	4b63      	ldr	r3, [pc, #396]	@ (800681c <_ZN20MediumScreenViewBaseC1Ev+0x5d8>)
 8006690:	9314      	str	r3, [sp, #80]	@ 0x50
 8006692:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8006696:	231a      	movs	r3, #26
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UJJ8));
 8006698:	9805      	ldr	r0, [sp, #20]
 800669a:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 800669e:	a914      	add	r1, sp, #80	@ 0x50
 80066a0:	f00c fe94 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066a4:	9905      	ldr	r1, [sp, #20]
        alpha = newAlpha;
 80066a6:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
 80066aa:	4638      	mov	r0, r7
    goal2.setPosition(318, 60, 2, 120);
 80066ac:	f04f 0878 	mov.w	r8, #120	@ 0x78
 80066b0:	f008 fd1e 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80066b4:	223c      	movs	r2, #60	@ 0x3c
 80066b6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80066b8:	f8cd 8000 	str.w	r8, [sp]
 80066bc:	2302      	movs	r3, #2
 80066be:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 80066c2:	f7fc fd41 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80066c6:	4d58      	ldr	r5, [pc, #352]	@ (8006828 <_ZN20MediumScreenViewBaseC1Ev+0x5e4>)
 80066c8:	4b58      	ldr	r3, [pc, #352]	@ (800682c <_ZN20MediumScreenViewBaseC1Ev+0x5e8>)
 80066ca:	990a      	ldr	r1, [sp, #40]	@ 0x28
        borderSize = size;
 80066cc:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
        borderColor = colorBorder;
 80066d0:	e9c4 53a6 	strd	r5, r3, [r4, #664]	@ 0x298
 80066d4:	4638      	mov	r0, r7
 80066d6:	f008 fd0b 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal1.setPosition(0, 60, 2, 120);
 80066da:	223c      	movs	r2, #60	@ 0x3c
 80066dc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80066de:	f8cd 8000 	str.w	r8, [sp]
 80066e2:	2302      	movs	r3, #2
 80066e4:	4631      	mov	r1, r6
 80066e6:	f7fc fd2f 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 80066ea:	4b51      	ldr	r3, [pc, #324]	@ (8006830 <_ZN20MediumScreenViewBaseC1Ev+0x5ec>)
 80066ec:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80066ee:	f8c4 32d0 	str.w	r3, [r4, #720]	@ 0x2d0
 80066f2:	4638      	mov	r0, r7
 80066f4:	f8c4 52cc 	str.w	r5, [r4, #716]	@ 0x2cc
        borderSize = size;
 80066f8:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 80066fc:	f008 fcf8 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8006700:	230e      	movs	r3, #14
 8006702:	2272      	movs	r2, #114	@ 0x72
 8006704:	9808      	ldr	r0, [sp, #32]
 8006706:	9300      	str	r3, [sp, #0]
 8006708:	219a      	movs	r1, #154	@ 0x9a
 800670a:	f7fc fd1d 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 800670e:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 8006710:	e9c4 33c1 	strd	r3, r3, [r4, #772]	@ 0x304
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006714:	23c0      	movs	r3, #192	@ 0xc0
 8006716:	f8c4 330c 	str.w	r3, [r4, #780]	@ 0x30c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800671a:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 800671e:	f8c4 3314 	str.w	r3, [r4, #788]	@ 0x314
 8006722:	4b44      	ldr	r3, [pc, #272]	@ (8006834 <_ZN20MediumScreenViewBaseC1Ev+0x5f0>)
 8006724:	f8c4 332c 	str.w	r3, [r4, #812]	@ 0x32c
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006728:	f649 0361 	movw	r3, #39009	@ 0x9861
 800672c:	f8a4 3330 	strh.w	r3, [r4, #816]	@ 0x330
 8006730:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006732:	9908      	ldr	r1, [sp, #32]
 8006734:	f8c4 3300 	str.w	r3, [r4, #768]	@ 0x300
 8006738:	4638      	mov	r0, r7
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 800673a:	f8c4 6318 	str.w	r6, [r4, #792]	@ 0x318
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800673e:	f8c4 6310 	str.w	r6, [r4, #784]	@ 0x310
 8006742:	f008 fcd5 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(13, 114, 33, 19);
 8006746:	2313      	movs	r3, #19
 8006748:	9802      	ldr	r0, [sp, #8]
 800674a:	9300      	str	r3, [sp, #0]
 800674c:	2272      	movs	r2, #114	@ 0x72
 800674e:	2321      	movs	r3, #33	@ 0x21
 8006750:	210d      	movs	r1, #13
 8006752:	f7fc fcf9 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006756:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006758:	f8c4 335c 	str.w	r3, [r4, #860]	@ 0x35c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800675c:	22a0      	movs	r2, #160	@ 0xa0
 800675e:	4611      	mov	r1, r2
 8006760:	9802      	ldr	r0, [sp, #8]
 8006762:	f8c4 a3b0 	str.w	sl, [r4, #944]	@ 0x3b0
 8006766:	f8a4 a3b4 	strh.w	sl, [r4, #948]	@ 0x3b4
 800676a:	f00c f9cf 	bl	8012b0c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800676e:	9802      	ldr	r0, [sp, #8]
 8006770:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8006774:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 8006778:	f00c f9d3 	bl	8012b22 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800677c:	f8d4 3370 	ldr.w	r3, [r4, #880]	@ 0x370
 8006780:	2b20      	cmp	r3, #32
 8006782:	d005      	beq.n	8006790 <_ZN20MediumScreenViewBaseC1Ev+0x54c>
        lineWidthQ5 = widthQ5;
 8006784:	2320      	movs	r3, #32
        updateCachedShape();
 8006786:	9802      	ldr	r0, [sp, #8]
        lineWidthQ5 = widthQ5;
 8006788:	f8c4 3370 	str.w	r3, [r4, #880]	@ 0x370
        updateCachedShape();
 800678c:	f00c f8c8 	bl	8012920 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8006790:	9802      	ldr	r0, [sp, #8]
 8006792:	2100      	movs	r1, #0
 8006794:	f00c f9d0 	bl	8012b38 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 8006798:	235f      	movs	r3, #95	@ 0x5f
 800679a:	9902      	ldr	r1, [sp, #8]
 800679c:	f884 335a 	strb.w	r3, [r4, #858]	@ 0x35a
 80067a0:	4638      	mov	r0, r7
 80067a2:	f008 fca5 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(268, 114, 33, 19);
 80067a6:	2313      	movs	r3, #19
 80067a8:	9803      	ldr	r0, [sp, #12]
 80067aa:	9300      	str	r3, [sp, #0]
 80067ac:	2272      	movs	r2, #114	@ 0x72
 80067ae:	2321      	movs	r3, #33	@ 0x21
 80067b0:	f44f 7186 	mov.w	r1, #268	@ 0x10c
 80067b4:	f7fc fcc8 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 80067b8:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80067bc:	22a0      	movs	r2, #160	@ 0xa0
 80067be:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
 80067c2:	f8a4 3438 	strh.w	r3, [r4, #1080]	@ 0x438
        canvasPainter = &painter;
 80067c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80067c8:	f8c4 33e0 	str.w	r3, [r4, #992]	@ 0x3e0
 80067cc:	4611      	mov	r1, r2
 80067ce:	9803      	ldr	r0, [sp, #12]
 80067d0:	f00c f99c 	bl	8012b0c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80067d4:	9803      	ldr	r0, [sp, #12]
 80067d6:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 80067da:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 80067de:	f00c f9a0 	bl	8012b22 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80067e2:	f8d4 33f4 	ldr.w	r3, [r4, #1012]	@ 0x3f4
 80067e6:	2b20      	cmp	r3, #32
 80067e8:	d005      	beq.n	80067f6 <_ZN20MediumScreenViewBaseC1Ev+0x5b2>
        lineWidthQ5 = widthQ5;
 80067ea:	2320      	movs	r3, #32
        updateCachedShape();
 80067ec:	9803      	ldr	r0, [sp, #12]
        lineWidthQ5 = widthQ5;
 80067ee:	f8c4 33f4 	str.w	r3, [r4, #1012]	@ 0x3f4
        updateCachedShape();
 80067f2:	f00c f895 	bl	8012920 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 80067f6:	9803      	ldr	r0, [sp, #12]
 80067f8:	2100      	movs	r1, #0
 80067fa:	f00c f99d 	bl	8012b38 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 80067fe:	235f      	movs	r3, #95	@ 0x5f
 8006800:	4638      	mov	r0, r7
 8006802:	9903      	ldr	r1, [sp, #12]
 8006804:	f884 33de 	strb.w	r3, [r4, #990]	@ 0x3de
 8006808:	f008 fc72 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800680c:	4620      	mov	r0, r4
 800680e:	b017      	add	sp, #92	@ 0x5c
 8006810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006814:	20013fc4 	.word	0x20013fc4
 8006818:	0802b785 	.word	0x0802b785
 800681c:	0802c810 	.word	0x0802c810
 8006820:	ff595656 	.word	0xff595656
 8006824:	20013fbc 	.word	0x20013fbc
 8006828:	ff000b6e 	.word	0xff000b6e
 800682c:	ffad9334 	.word	0xffad9334
 8006830:	ff3b2f05 	.word	0xff3b2f05
 8006834:	ff990c0c 	.word	0xff990c0c

08006838 <_ZN19StartScreenViewBase7action1Ev>:
     * Custom Actions
     */
    virtual void action1()
    {
        // Override and implement this function in Screen1
    }
 8006838:	4770      	bx	lr

0800683a <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800683a:	4770      	bx	lr

0800683c <_ZN19StartScreenViewBase11setupScreenEv>:
}

void StartScreenViewBase::setupScreen()
{

}
 800683c:	4770      	bx	lr

0800683e <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800683e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006840:	68c2      	ldr	r2, [r0, #12]
 8006842:	6844      	ldr	r4, [r0, #4]
 8006844:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006846:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006848:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800684c:	07d2      	lsls	r2, r2, #31
 800684e:	bf48      	it	mi
 8006850:	5962      	ldrmi	r2, [r4, r5]
 8006852:	689b      	ldr	r3, [r3, #8]
    }
 8006854:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006856:	bf48      	it	mi
 8006858:	58d3      	ldrmi	r3, [r2, r3]
 800685a:	4718      	bx	r3

0800685c <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800685c:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800685e:	6840      	ldr	r0, [r0, #4]
 8006860:	b130      	cbz	r0, 8006870 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006862:	689a      	ldr	r2, [r3, #8]
 8006864:	b91a      	cbnz	r2, 800686e <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8006866:	68d8      	ldr	r0, [r3, #12]
 8006868:	f000 0001 	and.w	r0, r0, #1
 800686c:	4770      	bx	lr
 800686e:	2001      	movs	r0, #1
    }
 8006870:	4770      	bx	lr

08006872 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006872:	b510      	push	{r4, lr}
 8006874:	2110      	movs	r1, #16
 8006876:	4604      	mov	r4, r0
 8006878:	f022 f9de 	bl	8028c38 <_ZdlPvj>
 800687c:	4620      	mov	r0, r4
 800687e:	bd10      	pop	{r4, pc}

08006880 <_ZN19StartScreenViewBaseD1Ev>:
StartScreenViewBase::~StartScreenViewBase()
 8006880:	b510      	push	{r4, lr}
 8006882:	4b03      	ldr	r3, [pc, #12]	@ (8006890 <_ZN19StartScreenViewBaseD1Ev+0x10>)
 8006884:	6003      	str	r3, [r0, #0]
 8006886:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006888:	f00d ffc2 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800688c:	4620      	mov	r0, r4
 800688e:	bd10      	pop	{r4, pc}
 8006890:	0802cca0 	.word	0x0802cca0

08006894 <_ZN19StartScreenViewBaseD0Ev>:
StartScreenViewBase::~StartScreenViewBase()
 8006894:	b510      	push	{r4, lr}
 8006896:	4b06      	ldr	r3, [pc, #24]	@ (80068b0 <_ZN19StartScreenViewBaseD0Ev+0x1c>)
 8006898:	6003      	str	r3, [r0, #0]
 800689a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800689c:	f00d ffb8 	bl	8014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80068a0:	4620      	mov	r0, r4
 80068a2:	f641 017c 	movw	r1, #6268	@ 0x187c
 80068a6:	f022 f9c7 	bl	8028c38 <_ZdlPvj>
 80068aa:	4620      	mov	r0, r4
 80068ac:	bd10      	pop	{r4, pc}
 80068ae:	bf00      	nop
 80068b0:	0802cca0 	.word	0x0802cca0

080068b4 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80068b4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonEasy)
 80068b6:	f100 03e0 	add.w	r3, r0, #224	@ 0xe0
 80068ba:	4299      	cmp	r1, r3
{
 80068bc:	4604      	mov	r4, r0
 80068be:	460d      	mov	r5, r1
    if (&src == &buttonEasy)
 80068c0:	d103      	bne.n	80068ca <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80068c2:	f00f fc9f 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonEasy clicked change screen to EasyReadyScreen
        //Go to EasyReadyScreen with screen transition towards East
        application().gotoEasyReadyScreenScreenWipeTransitionEast();
 80068c6:	f7fd fcc1 	bl	800424c <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv>
    }
    if (&src == &buttonMedium)
 80068ca:	f204 5364 	addw	r3, r4, #1380	@ 0x564
 80068ce:	429d      	cmp	r5, r3
 80068d0:	d103      	bne.n	80068da <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80068d2:	f00f fc97 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonMedium clicked change screen to MediumReadyScreen
        //Go to MediumReadyScreen with screen transition towards East
        application().gotoMediumReadyScreenScreenWipeTransitionEast();
 80068d6:	f7fd fc99 	bl	800420c <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv>
    }
    if (&src == &buttonHard)
 80068da:	3498      	adds	r4, #152	@ 0x98
 80068dc:	42a5      	cmp	r5, r4
 80068de:	d105      	bne.n	80068ec <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
 80068e0:	f00f fc90 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonHard clicked change screen to HardReadyScreen
        //Go to HardReadyScreen with screen transition towards East
        application().gotoHardReadyScreenScreenWipeTransitionEast();
    }
}
 80068e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoHardReadyScreenScreenWipeTransitionEast();
 80068e8:	f7fd bc70 	b.w	80041cc <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv>
}
 80068ec:	bd38      	pop	{r3, r4, r5, pc}
	...

080068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>:
    PainterRGB565(colortype color = 0)
 80068f0:	b538      	push	{r3, r4, r5, lr}
 80068f2:	4604      	mov	r4, r0
 80068f4:	460d      	mov	r5, r1
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80068f6:	f7fb faa9 	bl	8001e4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80068fa:	4b03      	ldr	r3, [pc, #12]	@ (8006908 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x18>)
 80068fc:	6023      	str	r3, [r4, #0]
 80068fe:	3324      	adds	r3, #36	@ 0x24
 8006900:	60e5      	str	r5, [r4, #12]
 8006902:	60a3      	str	r3, [r4, #8]
    }
 8006904:	4620      	mov	r0, r4
 8006906:	bd38      	pop	{r3, r4, r5, pc}
 8006908:	0802d214 	.word	0x0802d214

0800690c <_ZN19StartScreenViewBaseC1Ev>:
StartScreenViewBase::StartScreenViewBase() :
 800690c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006910:	4604      	mov	r4, r0
 8006912:	b0a5      	sub	sp, #148	@ 0x94
    buttonCallback(this, &StartScreenViewBase::buttonCallbackHandler)
 8006914:	46a1      	mov	r9, r4
 8006916:	2500      	movs	r5, #0
 8006918:	f011 fbac 	bl	8018074 <_ZN8touchgfx6ScreenC1Ev>
 800691c:	4be2      	ldr	r3, [pc, #904]	@ (8006ca8 <_ZN19StartScreenViewBaseC1Ev+0x39c>)
 800691e:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8006920:	f849 3b40 	str.w	r3, [r9], #64
 8006924:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8006928:	4648      	mov	r0, r9
 800692a:	f7fc fc21 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 800692e:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8006932:	4650      	mov	r0, sl
 8006934:	f7fc fc1c 	bl	8003170 <_ZN8touchgfx3BoxC1Ev>
 8006938:	f104 07e0 	add.w	r7, r4, #224	@ 0xe0
 800693c:	4640      	mov	r0, r8
 800693e:	f00d f8a1 	bl	8013a84 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006942:	4638      	mov	r0, r7
 8006944:	f00d f89e 	bl	8013a84 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006948:	f504 7394 	add.w	r3, r4, #296	@ 0x128
 800694c:	4618      	mov	r0, r3
 800694e:	9306      	str	r3, [sp, #24]
 8006950:	f00b f910 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 8006954:	f504 73b8 	add.w	r3, r4, #368	@ 0x170
 8006958:	4629      	mov	r1, r5
 800695a:	4618      	mov	r0, r3
 800695c:	9311      	str	r3, [sp, #68]	@ 0x44
 800695e:	f7ff ffc7 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006962:	f504 73c2 	add.w	r3, r4, #388	@ 0x184
 8006966:	4618      	mov	r0, r3
 8006968:	9307      	str	r3, [sp, #28]
 800696a:	f00b f903 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 800696e:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 8006972:	4629      	mov	r1, r5
 8006974:	4618      	mov	r0, r3
 8006976:	9312      	str	r3, [sp, #72]	@ 0x48
 8006978:	f7ff ffba 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 800697c:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
 8006980:	4618      	mov	r0, r3
 8006982:	9308      	str	r3, [sp, #32]
 8006984:	f00b f8f6 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 8006988:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 800698c:	4629      	mov	r1, r5
 800698e:	4618      	mov	r0, r3
 8006990:	9313      	str	r3, [sp, #76]	@ 0x4c
 8006992:	f7ff ffad 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006996:	f504 730f 	add.w	r3, r4, #572	@ 0x23c
 800699a:	4618      	mov	r0, r3
 800699c:	9309      	str	r3, [sp, #36]	@ 0x24
 800699e:	f00b f8e9 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 80069a2:	f504 7321 	add.w	r3, r4, #644	@ 0x284
 80069a6:	4629      	mov	r1, r5
 80069a8:	4618      	mov	r0, r3
 80069aa:	9314      	str	r3, [sp, #80]	@ 0x50
 80069ac:	f7ff ffa0 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 80069b0:	f504 7326 	add.w	r3, r4, #664	@ 0x298
 80069b4:	4618      	mov	r0, r3
 80069b6:	930a      	str	r3, [sp, #40]	@ 0x28
 80069b8:	f00b f8dc 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 80069bc:	f504 7338 	add.w	r3, r4, #736	@ 0x2e0
 80069c0:	4629      	mov	r1, r5
 80069c2:	4618      	mov	r0, r3
 80069c4:	9315      	str	r3, [sp, #84]	@ 0x54
 80069c6:	f7ff ff93 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 80069ca:	f504 733d 	add.w	r3, r4, #756	@ 0x2f4
 80069ce:	4618      	mov	r0, r3
 80069d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80069d2:	f00b f8cf 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 80069d6:	f504 734f 	add.w	r3, r4, #828	@ 0x33c
 80069da:	4629      	mov	r1, r5
 80069dc:	4618      	mov	r0, r3
 80069de:	9316      	str	r3, [sp, #88]	@ 0x58
 80069e0:	f7ff ff86 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 80069e4:	f504 7354 	add.w	r3, r4, #848	@ 0x350
 80069e8:	4618      	mov	r0, r3
 80069ea:	930c      	str	r3, [sp, #48]	@ 0x30
 80069ec:	f00b f8c2 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 80069f0:	f504 7366 	add.w	r3, r4, #920	@ 0x398
 80069f4:	4629      	mov	r1, r5
 80069f6:	4618      	mov	r0, r3
 80069f8:	9317      	str	r3, [sp, #92]	@ 0x5c
 80069fa:	f7ff ff79 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 80069fe:	f504 736b 	add.w	r3, r4, #940	@ 0x3ac
 8006a02:	9305      	str	r3, [sp, #20]
          touchable(false),
 8006a04:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8006a08:	f8a4 33d0 	strh.w	r3, [r4, #976]	@ 0x3d0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006a0c:	4ba7      	ldr	r3, [pc, #668]	@ (8006cac <_ZN19StartScreenViewBaseC1Ev+0x3a0>)
 8006a0e:	f8c4 33ac 	str.w	r3, [r4, #940]	@ 0x3ac
 8006a12:	4ba7      	ldr	r3, [pc, #668]	@ (8006cb0 <_ZN19StartScreenViewBaseC1Ev+0x3a4>)
 8006a14:	f8c4 33d4 	str.w	r3, [r4, #980]	@ 0x3d4
 8006a18:	f04f 31ff 	mov.w	r1, #4294967295
 8006a1c:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8006a20:	f04f 30ff 	mov.w	r0, #4294967295
 8006a24:	f8c4 33e0 	str.w	r3, [r4, #992]	@ 0x3e0
              text(0)
 8006a28:	e9c4 05fb 	strd	r0, r5, [r4, #1004]	@ 0x3ec
 8006a2c:	f8a4 13d8 	strh.w	r1, [r4, #984]	@ 0x3d8
 8006a30:	f504 707d 	add.w	r0, r4, #1012	@ 0x3f4
        : x(0), y(0), width(0), height(0)
 8006a34:	e9c4 55ec 	strd	r5, r5, [r4, #944]	@ 0x3b0
 8006a38:	e9c4 55ee 	strd	r5, r5, [r4, #952]	@ 0x3b8
          nextSibling(0),
 8006a3c:	e9c4 55f0 	strd	r5, r5, [r4, #960]	@ 0x3c0
          cachedAbsX(0),
 8006a40:	e9c4 55f2 	strd	r5, r5, [r4, #968]	@ 0x3c8
        : color(col)
 8006a44:	f8c4 53dc 	str.w	r5, [r4, #988]	@ 0x3dc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006a48:	f8a4 53e4 	strh.w	r5, [r4, #996]	@ 0x3e4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8006a4c:	f8c4 53e8 	str.w	r5, [r4, #1000]	@ 0x3e8
 8006a50:	900d      	str	r0, [sp, #52]	@ 0x34
 8006a52:	f00b f88f 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 8006a56:	4629      	mov	r1, r5
 8006a58:	f204 403c 	addw	r0, r4, #1084	@ 0x43c
 8006a5c:	9018      	str	r0, [sp, #96]	@ 0x60
 8006a5e:	f7ff ff47 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006a62:	f504 608a 	add.w	r0, r4, #1104	@ 0x450
 8006a66:	900e      	str	r0, [sp, #56]	@ 0x38
 8006a68:	f00b f884 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 8006a6c:	4629      	mov	r1, r5
 8006a6e:	f504 6093 	add.w	r0, r4, #1176	@ 0x498
 8006a72:	9019      	str	r0, [sp, #100]	@ 0x64
 8006a74:	f7ff ff3c 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006a78:	f204 40ac 	addw	r0, r4, #1196	@ 0x4ac
 8006a7c:	900f      	str	r0, [sp, #60]	@ 0x3c
 8006a7e:	f00b f879 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 8006a82:	4629      	mov	r1, r5
 8006a84:	f204 40f4 	addw	r0, r4, #1268	@ 0x4f4
 8006a88:	901a      	str	r0, [sp, #104]	@ 0x68
 8006a8a:	f7ff ff31 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006a8e:	f504 60a1 	add.w	r0, r4, #1288	@ 0x508
 8006a92:	9010      	str	r0, [sp, #64]	@ 0x40
 8006a94:	f00b f86e 	bl	8011b74 <_ZN8touchgfx6CircleC1Ev>
 8006a98:	4629      	mov	r1, r5
 8006a9a:	f504 60aa 	add.w	r0, r4, #1360	@ 0x550
 8006a9e:	901b      	str	r0, [sp, #108]	@ 0x6c
 8006aa0:	f7ff ff26 	bl	80068f0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006aa4:	f204 5064 	addw	r0, r4, #1380	@ 0x564
 8006aa8:	9003      	str	r0, [sp, #12]
 8006aaa:	f00c ffeb 	bl	8013a84 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006aae:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8006ab2:	4a80      	ldr	r2, [pc, #512]	@ (8006cb4 <_ZN19StartScreenViewBaseC1Ev+0x3a8>)
 8006ab4:	f8c3 286c 	str.w	r2, [r3, #2156]	@ 0x86c
 8006ab8:	4a7f      	ldr	r2, [pc, #508]	@ (8006cb8 <_ZN19StartScreenViewBaseC1Ev+0x3ac>)
 8006aba:	f8c3 4870 	str.w	r4, [r3, #2160]	@ 0x870
 8006abe:	f8c3 2874 	str.w	r2, [r3, #2164]	@ 0x874
 8006ac2:	f8c3 5878 	str.w	r5, [r3, #2168]	@ 0x878
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006ac6:	f204 50ac 	addw	r0, r4, #1452	@ 0x5ac
    __background.setPosition(0, 0, 320, 240);
 8006aca:	f04f 0bf0 	mov.w	fp, #240	@ 0xf0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006ace:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8006ad2:	f00d fe93 	bl	80147fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8006ad6:	462a      	mov	r2, r5
 8006ad8:	f8cd b000 	str.w	fp, [sp]
 8006adc:	4629      	mov	r1, r5
 8006ade:	4648      	mov	r0, r9
 8006ae0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8006ae4:	1d26      	adds	r6, r4, #4
 8006ae6:	f7fc fb2f 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006aea:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8006aee:	66a3      	str	r3, [r4, #104]	@ 0x68
 8006af0:	4649      	mov	r1, r9
 8006af2:	4630      	mov	r0, r6
 8006af4:	f008 fafc 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setPosition(0, 0, 320, 240);
 8006af8:	462a      	mov	r2, r5
 8006afa:	f8cd b000 	str.w	fp, [sp]
 8006afe:	4629      	mov	r1, r5
 8006b00:	4650      	mov	r0, sl
 8006b02:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8006b06:	f7fc fb1f 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b0a:	4b6c      	ldr	r3, [pc, #432]	@ (8006cbc <_ZN19StartScreenViewBaseC1Ev+0x3b0>)
 8006b0c:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8006b10:	4651      	mov	r1, sl
 8006b12:	4630      	mov	r0, r6
 8006b14:	f008 faec 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonHard.setXY(85, 102);
 8006b18:	4640      	mov	r0, r8
 8006b1a:	2266      	movs	r2, #102	@ 0x66
 8006b1c:	2155      	movs	r1, #85	@ 0x55
 8006b1e:	f7fc fb06 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
    buttonHard.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 8006b22:	a821      	add	r0, sp, #132	@ 0x84
 8006b24:	f04f 0b01 	mov.w	fp, #1
 8006b28:	aa22      	add	r2, sp, #136	@ 0x88
 8006b2a:	4601      	mov	r1, r0
 8006b2c:	f04f 0902 	mov.w	r9, #2
 8006b30:	4640      	mov	r0, r8
 8006b32:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 8006b36:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 8006b3a:	f00c fc9a 	bl	8013472 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006b3e:	2324      	movs	r3, #36	@ 0x24
 8006b40:	f8a4 30d0 	strh.w	r3, [r4, #208]	@ 0xd0
        updateTextPosition();
 8006b44:	4640      	mov	r0, r8
 8006b46:	f7fd f8ab 	bl	8003ca0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8006b4a:	f04f 30ff 	mov.w	r0, #4294967295
 8006b4e:	f8c4 00d8 	str.w	r0, [r4, #216]	@ 0xd8
    buttonHard.setAction(buttonCallback);
 8006b52:	f504 50c3 	add.w	r0, r4, #6240	@ 0x1860
        color = col;
 8006b56:	4b5a      	ldr	r3, [pc, #360]	@ (8006cc0 <_ZN19StartScreenViewBaseC1Ev+0x3b4>)
 8006b58:	f8c4 30d4 	str.w	r3, [r4, #212]	@ 0xd4
 8006b5c:	300c      	adds	r0, #12
 8006b5e:	9004      	str	r0, [sp, #16]
 8006b60:	f8c4 00c0 	str.w	r0, [r4, #192]	@ 0xc0
 8006b64:	4641      	mov	r1, r8
 8006b66:	4630      	mov	r0, r6
 8006b68:	f008 fac2 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonEasy.setXY(1, 50);
 8006b6c:	4659      	mov	r1, fp
 8006b6e:	4638      	mov	r0, r7
 8006b70:	2232      	movs	r2, #50	@ 0x32
 8006b72:	f7fc fadc 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
    buttonEasy.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 8006b76:	a821      	add	r0, sp, #132	@ 0x84
 8006b78:	aa22      	add	r2, sp, #136	@ 0x88
 8006b7a:	4601      	mov	r1, r0
 8006b7c:	4638      	mov	r0, r7
 8006b7e:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 8006b82:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 8006b86:	f00c fc74 	bl	8013472 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b8a:	2325      	movs	r3, #37	@ 0x25
 8006b8c:	f8a4 3118 	strh.w	r3, [r4, #280]	@ 0x118
        updateTextPosition();
 8006b90:	4638      	mov	r0, r7
 8006b92:	f7fd f885 	bl	8003ca0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b96:	9904      	ldr	r1, [sp, #16]
        color = col;
 8006b98:	4b49      	ldr	r3, [pc, #292]	@ (8006cc0 <_ZN19StartScreenViewBaseC1Ev+0x3b4>)
 8006b9a:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
        colorPressed = col;
 8006b9e:	f04f 30ff 	mov.w	r0, #4294967295
    circle5_1_4.setPosition(207, 197, 29, 29);
 8006ba2:	f04f 0a1d 	mov.w	sl, #29
 8006ba6:	f8c4 0120 	str.w	r0, [r4, #288]	@ 0x120
 8006baa:	f8c4 1108 	str.w	r1, [r4, #264]	@ 0x108
 8006bae:	4630      	mov	r0, r6
 8006bb0:	4639      	mov	r1, r7
 8006bb2:	f008 fa9d 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006bb6:	9806      	ldr	r0, [sp, #24]
 8006bb8:	f8cd a000 	str.w	sl, [sp]
 8006bbc:	4653      	mov	r3, sl
 8006bbe:	22c5      	movs	r2, #197	@ 0xc5
 8006bc0:	21cf      	movs	r1, #207	@ 0xcf
 8006bc2:	f7fc fac1 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bc6:	4b3f      	ldr	r3, [pc, #252]	@ (8006cc4 <_ZN19StartScreenViewBaseC1Ev+0x3b8>)
        canvasPainter = &painter;
 8006bc8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8006bca:	f8c4 317c 	str.w	r3, [r4, #380]	@ 0x17c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006bce:	f44f 5834 	mov.w	r8, #11520	@ 0x2d00
        this->circleCenterX = CWRUtil::toQ5(x);
 8006bd2:	f44f 77f0 	mov.w	r7, #480	@ 0x1e0
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006bd6:	f44f 79a0 	mov.w	r9, #320	@ 0x140
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006bda:	f24d 4314 	movw	r3, #54292	@ 0xd414
        this->circleCenterY = CWRUtil::toQ5(y);
 8006bde:	e9c4 7755 	strd	r7, r7, [r4, #340]	@ 0x154
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006be2:	f8c4 915c 	str.w	r9, [r4, #348]	@ 0x15c
 8006be6:	f8a4 3180 	strh.w	r3, [r4, #384]	@ 0x180
 8006bea:	f8c4 1150 	str.w	r1, [r4, #336]	@ 0x150
 8006bee:	4630      	mov	r0, r6
 8006bf0:	9906      	ldr	r1, [sp, #24]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006bf2:	f8c4 5168 	str.w	r5, [r4, #360]	@ 0x168
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006bf6:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006bfa:	f8c4 8164 	str.w	r8, [r4, #356]	@ 0x164
 8006bfe:	f008 fa77 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1_3.setPosition(91, 197, 29, 29);
 8006c02:	9807      	ldr	r0, [sp, #28]
 8006c04:	f8cd a000 	str.w	sl, [sp]
 8006c08:	4653      	mov	r3, sl
 8006c0a:	22c5      	movs	r2, #197	@ 0xc5
 8006c0c:	215b      	movs	r1, #91	@ 0x5b
 8006c0e:	f7fc fa9b 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c12:	4b2d      	ldr	r3, [pc, #180]	@ (8006cc8 <_ZN19StartScreenViewBaseC1Ev+0x3bc>)
 8006c14:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8006c16:	f8c4 31d8 	str.w	r3, [r4, #472]	@ 0x1d8
 8006c1a:	f24a 533a 	movw	r3, #42298	@ 0xa53a
        this->circleCenterY = CWRUtil::toQ5(y);
 8006c1e:	e9c4 776c 	strd	r7, r7, [r4, #432]	@ 0x1b0
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006c22:	f8c4 91b8 	str.w	r9, [r4, #440]	@ 0x1b8
 8006c26:	f8a4 31dc 	strh.w	r3, [r4, #476]	@ 0x1dc
 8006c2a:	f8c4 11ac 	str.w	r1, [r4, #428]	@ 0x1ac
 8006c2e:	4630      	mov	r0, r6
 8006c30:	9907      	ldr	r1, [sp, #28]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006c32:	f8c4 51c4 	str.w	r5, [r4, #452]	@ 0x1c4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006c36:	e9c4 586f 	strd	r5, r8, [r4, #444]	@ 0x1bc
 8006c3a:	f008 fa59 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_4.setPosition(149, 197, 29, 29);
 8006c3e:	9808      	ldr	r0, [sp, #32]
 8006c40:	f8cd a000 	str.w	sl, [sp]
 8006c44:	4653      	mov	r3, sl
 8006c46:	22c5      	movs	r2, #197	@ 0xc5
 8006c48:	2195      	movs	r1, #149	@ 0x95
 8006c4a:	f7fc fa7d 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c4e:	4b1f      	ldr	r3, [pc, #124]	@ (8006ccc <_ZN19StartScreenViewBaseC1Ev+0x3c0>)
 8006c50:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006c52:	f8c4 3234 	str.w	r3, [r4, #564]	@ 0x234
 8006c56:	f64d 53b9 	movw	r3, #56761	@ 0xddb9
        this->circleCenterY = CWRUtil::toQ5(y);
 8006c5a:	e9c4 7783 	strd	r7, r7, [r4, #524]	@ 0x20c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006c5e:	f8c4 9214 	str.w	r9, [r4, #532]	@ 0x214
 8006c62:	f8a4 3238 	strh.w	r3, [r4, #568]	@ 0x238
 8006c66:	f8c4 1208 	str.w	r1, [r4, #520]	@ 0x208
 8006c6a:	4630      	mov	r0, r6
 8006c6c:	9908      	ldr	r1, [sp, #32]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006c6e:	f8c4 5220 	str.w	r5, [r4, #544]	@ 0x220
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006c72:	e9c4 5886 	strd	r5, r8, [r4, #536]	@ 0x218
 8006c76:	f008 fa3b 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_2_1.setPosition(236, 168, 29, 29);
 8006c7a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006c7c:	f8cd a000 	str.w	sl, [sp]
 8006c80:	4653      	mov	r3, sl
 8006c82:	22a8      	movs	r2, #168	@ 0xa8
 8006c84:	21ec      	movs	r1, #236	@ 0xec
 8006c86:	f7fc fa5f 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c8a:	4b11      	ldr	r3, [pc, #68]	@ (8006cd0 <_ZN19StartScreenViewBaseC1Ev+0x3c4>)
 8006c8c:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8006c8e:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
 8006c92:	f248 6316 	movw	r3, #34326	@ 0x8616
        this->circleCenterY = CWRUtil::toQ5(y);
 8006c96:	e9c4 779a 	strd	r7, r7, [r4, #616]	@ 0x268
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006c9a:	f8c4 9270 	str.w	r9, [r4, #624]	@ 0x270
 8006c9e:	f8a4 3294 	strh.w	r3, [r4, #660]	@ 0x294
 8006ca2:	f8c4 1264 	str.w	r1, [r4, #612]	@ 0x264
 8006ca6:	e015      	b.n	8006cd4 <_ZN19StartScreenViewBaseC1Ev+0x3c8>
 8006ca8:	0802cca0 	.word	0x0802cca0
 8006cac:	0802d528 	.word	0x0802d528
 8006cb0:	0802c810 	.word	0x0802c810
 8006cb4:	0802cc88 	.word	0x0802cc88
 8006cb8:	080068b5 	.word	0x080068b5
 8006cbc:	ffaddced 	.word	0xffaddced
 8006cc0:	ff395080 	.word	0xff395080
 8006cc4:	ffd483a5 	.word	0xffd483a5
 8006cc8:	ffa1a4d1 	.word	0xffa1a4d1
 8006ccc:	ffdeb4ca 	.word	0xffdeb4ca
 8006cd0:	ff86c2b7 	.word	0xff86c2b7
 8006cd4:	4630      	mov	r0, r6
 8006cd6:	9909      	ldr	r1, [sp, #36]	@ 0x24
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006cd8:	f8c4 527c 	str.w	r5, [r4, #636]	@ 0x27c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006cdc:	e9c4 589d 	strd	r5, r8, [r4, #628]	@ 0x274
 8006ce0:	f008 fa06 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_2.setPosition(117, 168, 29, 29);
 8006ce4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006ce6:	f8cd a000 	str.w	sl, [sp]
 8006cea:	4653      	mov	r3, sl
 8006cec:	22a8      	movs	r2, #168	@ 0xa8
 8006cee:	2175      	movs	r1, #117	@ 0x75
 8006cf0:	f7fc fa2a 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006cf4:	4b98      	ldr	r3, [pc, #608]	@ (8006f58 <_ZN19StartScreenViewBaseC1Ev+0x64c>)
 8006cf6:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8006cf8:	f8c4 32ec 	str.w	r3, [r4, #748]	@ 0x2ec
 8006cfc:	f64e 6373 	movw	r3, #61043	@ 0xee73
        this->circleCenterY = CWRUtil::toQ5(y);
 8006d00:	e9c4 77b1 	strd	r7, r7, [r4, #708]	@ 0x2c4
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006d04:	f8c4 92cc 	str.w	r9, [r4, #716]	@ 0x2cc
 8006d08:	f8a4 32f0 	strh.w	r3, [r4, #752]	@ 0x2f0
 8006d0c:	f8c4 12c0 	str.w	r1, [r4, #704]	@ 0x2c0
 8006d10:	4630      	mov	r0, r6
 8006d12:	990a      	ldr	r1, [sp, #40]	@ 0x28
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006d14:	f8c4 52d8 	str.w	r5, [r4, #728]	@ 0x2d8
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006d18:	e9c4 58b4 	strd	r5, r8, [r4, #720]	@ 0x2d0
 8006d1c:	f008 f9e8 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1_1.setPosition(178, 168, 29, 29);
 8006d20:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8006d22:	f8cd a000 	str.w	sl, [sp]
 8006d26:	4653      	mov	r3, sl
 8006d28:	22a8      	movs	r2, #168	@ 0xa8
 8006d2a:	21b2      	movs	r1, #178	@ 0xb2
 8006d2c:	f7fc fa0c 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d30:	4b8a      	ldr	r3, [pc, #552]	@ (8006f5c <_ZN19StartScreenViewBaseC1Ev+0x650>)
 8006d32:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8006d34:	f8c4 3348 	str.w	r3, [r4, #840]	@ 0x348
 8006d38:	f649 6332 	movw	r3, #40498	@ 0x9e32
        this->circleCenterY = CWRUtil::toQ5(y);
 8006d3c:	e9c4 77c8 	strd	r7, r7, [r4, #800]	@ 0x320
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006d40:	f8c4 9328 	str.w	r9, [r4, #808]	@ 0x328
 8006d44:	f8a4 334c 	strh.w	r3, [r4, #844]	@ 0x34c
 8006d48:	f8c4 131c 	str.w	r1, [r4, #796]	@ 0x31c
 8006d4c:	4630      	mov	r0, r6
 8006d4e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006d50:	f8c4 5334 	str.w	r5, [r4, #820]	@ 0x334
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006d54:	e9c4 58cb 	strd	r5, r8, [r4, #812]	@ 0x32c
 8006d58:	f008 f9ca 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1.setPosition(62, 168, 29, 29);
 8006d5c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8006d5e:	f8cd a000 	str.w	sl, [sp]
 8006d62:	4653      	mov	r3, sl
 8006d64:	22a8      	movs	r2, #168	@ 0xa8
 8006d66:	213e      	movs	r1, #62	@ 0x3e
 8006d68:	f7fc f9ee 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d6c:	4b7c      	ldr	r3, [pc, #496]	@ (8006f60 <_ZN19StartScreenViewBaseC1Ev+0x654>)
 8006d6e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8006d70:	f8c4 33a4 	str.w	r3, [r4, #932]	@ 0x3a4
 8006d74:	f64e 4392 	movw	r3, #60562	@ 0xec92
        this->circleCenterY = CWRUtil::toQ5(y);
 8006d78:	e9c4 77df 	strd	r7, r7, [r4, #892]	@ 0x37c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006d7c:	f8c4 9384 	str.w	r9, [r4, #900]	@ 0x384
 8006d80:	f8a4 33a8 	strh.w	r3, [r4, #936]	@ 0x3a8
 8006d84:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
 8006d88:	4630      	mov	r0, r6
 8006d8a:	990c      	ldr	r1, [sp, #48]	@ 0x30
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006d8c:	f8c4 5390 	str.w	r5, [r4, #912]	@ 0x390
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006d90:	e9c4 58e2 	strd	r5, r8, [r4, #904]	@ 0x388
 8006d94:	f008 f9ac 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    titleText.setPosition(89, 10, 159, 49);
 8006d98:	2331      	movs	r3, #49	@ 0x31
 8006d9a:	9805      	ldr	r0, [sp, #20]
 8006d9c:	9300      	str	r3, [sp, #0]
 8006d9e:	220a      	movs	r2, #10
 8006da0:	239f      	movs	r3, #159	@ 0x9f
 8006da2:	2159      	movs	r1, #89	@ 0x59
 8006da4:	f7fc f9d0 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8006da8:	af1c      	add	r7, sp, #112	@ 0x70
        color = newColor;
 8006daa:	4b6e      	ldr	r3, [pc, #440]	@ (8006f64 <_ZN19StartScreenViewBaseC1Ev+0x658>)
        boundingArea = calculateBoundingArea();
 8006dac:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8006dae:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
        boundingArea = calculateBoundingArea();
 8006db2:	4638      	mov	r0, r7
        linespace = space;
 8006db4:	f8a4 b3e0 	strh.w	fp, [r4, #992]	@ 0x3e0
        boundingArea = calculateBoundingArea();
 8006db8:	f00c f860 	bl	8012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006dbc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006dc0:	f504 737a 	add.w	r3, r4, #1000	@ 0x3e8
 8006dc4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006dc8:	4a67      	ldr	r2, [pc, #412]	@ (8006f68 <_ZN19StartScreenViewBaseC1Ev+0x65c>)
 8006dca:	9222      	str	r2, [sp, #136]	@ 0x88
    titleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YPFP));
 8006dcc:	aa22      	add	r2, sp, #136	@ 0x88
 8006dce:	2327      	movs	r3, #39	@ 0x27
 8006dd0:	4611      	mov	r1, r2
 8006dd2:	9805      	ldr	r0, [sp, #20]
 8006dd4:	f8ad 308c 	strh.w	r3, [sp, #140]	@ 0x8c
    circle1.setPosition(-26, -30, 80, 80);
 8006dd8:	f04f 0a50 	mov.w	sl, #80	@ 0x50
    titleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YPFP));
 8006ddc:	f00c faf6 	bl	80133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006de0:	9905      	ldr	r1, [sp, #20]
 8006de2:	4630      	mov	r0, r6
 8006de4:	f008 f984 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle1.setPosition(-26, -30, 80, 80);
 8006de8:	4653      	mov	r3, sl
 8006dea:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8006dec:	f8cd a000 	str.w	sl, [sp]
 8006df0:	f06f 021d 	mvn.w	r2, #29
 8006df4:	f06f 0119 	mvn.w	r1, #25
 8006df8:	f7fc f9a6 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006dfc:	f04f 32ff 	mov.w	r2, #4294967295
        this->circleCenterX = CWRUtil::toQ5(x);
 8006e00:	f44f 67a0 	mov.w	r7, #1280	@ 0x500
 8006e04:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
 8006e08:	f04f 31ff 	mov.w	r1, #4294967295
 8006e0c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8006e0e:	f8a4 144c 	strh.w	r1, [r4, #1100]	@ 0x44c
 8006e12:	f8c4 241c 	str.w	r2, [r4, #1052]	@ 0x41c
 8006e16:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8006e18:	f8c4 7420 	str.w	r7, [r4, #1056]	@ 0x420
 8006e1c:	4630      	mov	r0, r6
        this->circleCenterY = CWRUtil::toQ5(y);
 8006e1e:	f8c4 7424 	str.w	r7, [r4, #1060]	@ 0x424
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006e22:	f8c4 7428 	str.w	r7, [r4, #1064]	@ 0x428
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006e26:	f8c4 5434 	str.w	r5, [r4, #1076]	@ 0x434
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006e2a:	f8c4 542c 	str.w	r5, [r4, #1068]	@ 0x42c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006e2e:	f8c4 8430 	str.w	r8, [r4, #1072]	@ 0x430
 8006e32:	f008 f95d 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle2.setPosition(270, -30, 80, 80);
 8006e36:	4653      	mov	r3, sl
 8006e38:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8006e3a:	f8cd a000 	str.w	sl, [sp]
 8006e3e:	f06f 021d 	mvn.w	r2, #29
 8006e42:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 8006e46:	f7fc f97f 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e4a:	f648 695d 	movw	r9, #36445	@ 0x8e5d
 8006e4e:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8006e50:	4a46      	ldr	r2, [pc, #280]	@ (8006f6c <_ZN19StartScreenViewBaseC1Ev+0x660>)
 8006e52:	f8c4 24a4 	str.w	r2, [r4, #1188]	@ 0x4a4
 8006e56:	f8a4 94a8 	strh.w	r9, [r4, #1192]	@ 0x4a8
 8006e5a:	f8c4 1478 	str.w	r1, [r4, #1144]	@ 0x478
 8006e5e:	4630      	mov	r0, r6
 8006e60:	990e      	ldr	r1, [sp, #56]	@ 0x38
        this->circleCenterX = CWRUtil::toQ5(x);
 8006e62:	f8c4 747c 	str.w	r7, [r4, #1148]	@ 0x47c
        this->circleCenterY = CWRUtil::toQ5(y);
 8006e66:	f8c4 7480 	str.w	r7, [r4, #1152]	@ 0x480
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006e6a:	f8c4 7484 	str.w	r7, [r4, #1156]	@ 0x484
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006e6e:	f8c4 5490 	str.w	r5, [r4, #1168]	@ 0x490
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006e72:	f8c4 5488 	str.w	r5, [r4, #1160]	@ 0x488
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006e76:	f8c4 848c 	str.w	r8, [r4, #1164]	@ 0x48c
 8006e7a:	f008 f939 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle3.setPosition(-26, 189, 80, 80);
 8006e7e:	4653      	mov	r3, sl
 8006e80:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8006e82:	f8cd a000 	str.w	sl, [sp]
 8006e86:	22bd      	movs	r2, #189	@ 0xbd
 8006e88:	f06f 0119 	mvn.w	r1, #25
 8006e8c:	f7fc f95c 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e90:	4a36      	ldr	r2, [pc, #216]	@ (8006f6c <_ZN19StartScreenViewBaseC1Ev+0x660>)
 8006e92:	f8c4 2500 	str.w	r2, [r4, #1280]	@ 0x500
 8006e96:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8006e98:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8006e9a:	f8a4 9504 	strh.w	r9, [r4, #1284]	@ 0x504
 8006e9e:	f8c4 24d4 	str.w	r2, [r4, #1236]	@ 0x4d4
 8006ea2:	4630      	mov	r0, r6
        this->circleCenterX = CWRUtil::toQ5(x);
 8006ea4:	f8c4 74d8 	str.w	r7, [r4, #1240]	@ 0x4d8
        this->circleCenterY = CWRUtil::toQ5(y);
 8006ea8:	f8c4 74dc 	str.w	r7, [r4, #1244]	@ 0x4dc
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006eac:	f8c4 74e0 	str.w	r7, [r4, #1248]	@ 0x4e0
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006eb0:	f8c4 54ec 	str.w	r5, [r4, #1260]	@ 0x4ec
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006eb4:	f8c4 54e4 	str.w	r5, [r4, #1252]	@ 0x4e4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006eb8:	f8c4 84e8 	str.w	r8, [r4, #1256]	@ 0x4e8
 8006ebc:	f008 f918 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle4.setPosition(270, 189, 80, 80);
 8006ec0:	4653      	mov	r3, sl
 8006ec2:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8006ec4:	f8cd a000 	str.w	sl, [sp]
 8006ec8:	22bd      	movs	r2, #189	@ 0xbd
 8006eca:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 8006ece:	f7fc f93b 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ed2:	f04f 32ff 	mov.w	r2, #4294967295
 8006ed6:	f8c4 255c 	str.w	r2, [r4, #1372]	@ 0x55c
 8006eda:	f04f 31ff 	mov.w	r1, #4294967295
 8006ede:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8006ee0:	f8a4 1560 	strh.w	r1, [r4, #1376]	@ 0x560
 8006ee4:	f8c4 2530 	str.w	r2, [r4, #1328]	@ 0x530
 8006ee8:	9910      	ldr	r1, [sp, #64]	@ 0x40
        this->circleCenterX = CWRUtil::toQ5(x);
 8006eea:	f8c4 7534 	str.w	r7, [r4, #1332]	@ 0x534
 8006eee:	4630      	mov	r0, r6
        this->circleCenterY = CWRUtil::toQ5(y);
 8006ef0:	f8c4 7538 	str.w	r7, [r4, #1336]	@ 0x538
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006ef4:	f8c4 753c 	str.w	r7, [r4, #1340]	@ 0x53c
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006ef8:	f8c4 5548 	str.w	r5, [r4, #1352]	@ 0x548
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006efc:	f8c4 5540 	str.w	r5, [r4, #1344]	@ 0x540
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006f00:	f8c4 8544 	str.w	r8, [r4, #1348]	@ 0x544
 8006f04:	f008 f8f4 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonMedium.setXY(170, 50);
 8006f08:	9803      	ldr	r0, [sp, #12]
 8006f0a:	2232      	movs	r2, #50	@ 0x32
 8006f0c:	21aa      	movs	r1, #170	@ 0xaa
 8006f0e:	f7fc f90e 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
 8006f12:	f04f 0902 	mov.w	r9, #2
    buttonMedium.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 8006f16:	aa22      	add	r2, sp, #136	@ 0x88
 8006f18:	a921      	add	r1, sp, #132	@ 0x84
 8006f1a:	9803      	ldr	r0, [sp, #12]
 8006f1c:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 8006f20:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 8006f24:	f00c faa5 	bl	8013472 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006f28:	2326      	movs	r3, #38	@ 0x26
        updateTextPosition();
 8006f2a:	9803      	ldr	r0, [sp, #12]
 8006f2c:	f8a4 359c 	strh.w	r3, [r4, #1436]	@ 0x59c
 8006f30:	f7fc feb6 	bl	8003ca0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8006f34:	4b0e      	ldr	r3, [pc, #56]	@ (8006f70 <_ZN19StartScreenViewBaseC1Ev+0x664>)
 8006f36:	f8c4 35a0 	str.w	r3, [r4, #1440]	@ 0x5a0
        colorPressed = col;
 8006f3a:	f04f 33ff 	mov.w	r3, #4294967295
 8006f3e:	f8c4 35a4 	str.w	r3, [r4, #1444]	@ 0x5a4
 8006f42:	9b04      	ldr	r3, [sp, #16]
 8006f44:	9903      	ldr	r1, [sp, #12]
 8006f46:	f8c4 358c 	str.w	r3, [r4, #1420]	@ 0x58c
 8006f4a:	4630      	mov	r0, r6
 8006f4c:	f008 f8d0 	bl	800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006f50:	4620      	mov	r0, r4
 8006f52:	b025      	add	sp, #148	@ 0x94
 8006f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f58:	ffebcf9b 	.word	0xffebcf9b
 8006f5c:	ff99c793 	.word	0xff99c793
 8006f60:	ffeb9191 	.word	0xffeb9191
 8006f64:	ff325d8f 	.word	0xff325d8f
 8006f68:	0802c810 	.word	0x0802c810
 8006f6c:	ff88caeb 	.word	0xff88caeb
 8006f70:	ff395080 	.word	0xff395080

08006f74 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_15_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_15_4bpp()
{
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 8006f74:	4770      	bx	lr
	...

08006f78 <_Z23getFont_comicbd_15_4bppv>:
{
 8006f78:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 8006f7a:	4d17      	ldr	r5, [pc, #92]	@ (8006fd8 <_Z23getFont_comicbd_15_4bppv+0x60>)
 8006f7c:	682c      	ldr	r4, [r5, #0]
 8006f7e:	f014 0401 	ands.w	r4, r4, #1
{
 8006f82:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 8006f84:	f3bf 8f5b 	dmb	ish
 8006f88:	d122      	bne.n	8006fd0 <_Z23getFont_comicbd_15_4bppv+0x58>
 8006f8a:	4628      	mov	r0, r5
 8006f8c:	f021 fe56 	bl	8028c3c <__cxa_guard_acquire>
 8006f90:	b1f0      	cbz	r0, 8006fd0 <_Z23getFont_comicbd_15_4bppv+0x58>
 8006f92:	233f      	movs	r3, #63	@ 0x3f
 8006f94:	9309      	str	r3, [sp, #36]	@ 0x24
 8006f96:	4b11      	ldr	r3, [pc, #68]	@ (8006fdc <_Z23getFont_comicbd_15_4bppv+0x64>)
 8006f98:	9308      	str	r3, [sp, #32]
 8006f9a:	4b11      	ldr	r3, [pc, #68]	@ (8006fe0 <_Z23getFont_comicbd_15_4bppv+0x68>)
 8006f9c:	9307      	str	r3, [sp, #28]
 8006f9e:	2301      	movs	r3, #1
 8006fa0:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8006fa4:	9304      	str	r3, [sp, #16]
 8006fa6:	2304      	movs	r3, #4
 8006fa8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006fac:	230f      	movs	r3, #15
 8006fae:	490d      	ldr	r1, [pc, #52]	@ (8006fe4 <_Z23getFont_comicbd_15_4bppv+0x6c>)
 8006fb0:	9300      	str	r3, [sp, #0]
 8006fb2:	2209      	movs	r2, #9
 8006fb4:	2313      	movs	r3, #19
 8006fb6:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006fba:	480b      	ldr	r0, [pc, #44]	@ (8006fe8 <_Z23getFont_comicbd_15_4bppv+0x70>)
 8006fbc:	940a      	str	r4, [sp, #40]	@ 0x28
 8006fbe:	9401      	str	r4, [sp, #4]
 8006fc0:	f7fd ff84 	bl	8004ecc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006fc4:	4809      	ldr	r0, [pc, #36]	@ (8006fec <_Z23getFont_comicbd_15_4bppv+0x74>)
 8006fc6:	f022 fe93 	bl	8029cf0 <atexit>
 8006fca:	4628      	mov	r0, r5
 8006fcc:	f021 fe42 	bl	8028c54 <__cxa_guard_release>
    return comicbd_15_4bpp;
}
 8006fd0:	4805      	ldr	r0, [pc, #20]	@ (8006fe8 <_Z23getFont_comicbd_15_4bppv+0x70>)
 8006fd2:	b00f      	add	sp, #60	@ 0x3c
 8006fd4:	bd30      	pop	{r4, r5, pc}
 8006fd6:	bf00      	nop
 8006fd8:	20003078 	.word	0x20003078
 8006fdc:	08030d94 	.word	0x08030d94
 8006fe0:	08030db0 	.word	0x08030db0
 8006fe4:	08030880 	.word	0x08030880
 8006fe8:	2000307c 	.word	0x2000307c
 8006fec:	08006f75 	.word	0x08006f75

08006ff0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_18_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_18_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_18_4bpp()
{
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 8006ff0:	4770      	bx	lr
	...

08006ff4 <_Z23getFont_comicbd_18_4bppv>:
{
 8006ff4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 8006ff6:	4d17      	ldr	r5, [pc, #92]	@ (8007054 <_Z23getFont_comicbd_18_4bppv+0x60>)
 8006ff8:	682c      	ldr	r4, [r5, #0]
 8006ffa:	f014 0401 	ands.w	r4, r4, #1
{
 8006ffe:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 8007000:	f3bf 8f5b 	dmb	ish
 8007004:	d122      	bne.n	800704c <_Z23getFont_comicbd_18_4bppv+0x58>
 8007006:	4628      	mov	r0, r5
 8007008:	f021 fe18 	bl	8028c3c <__cxa_guard_acquire>
 800700c:	b1f0      	cbz	r0, 800704c <_Z23getFont_comicbd_18_4bppv+0x58>
 800700e:	233f      	movs	r3, #63	@ 0x3f
 8007010:	9309      	str	r3, [sp, #36]	@ 0x24
 8007012:	4b11      	ldr	r3, [pc, #68]	@ (8007058 <_Z23getFont_comicbd_18_4bppv+0x64>)
 8007014:	9308      	str	r3, [sp, #32]
 8007016:	4b11      	ldr	r3, [pc, #68]	@ (800705c <_Z23getFont_comicbd_18_4bppv+0x68>)
 8007018:	9307      	str	r3, [sp, #28]
 800701a:	2301      	movs	r3, #1
 800701c:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8007020:	9304      	str	r3, [sp, #16]
 8007022:	2304      	movs	r3, #4
 8007024:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007028:	2312      	movs	r3, #18
 800702a:	490d      	ldr	r1, [pc, #52]	@ (8007060 <_Z23getFont_comicbd_18_4bppv+0x6c>)
 800702c:	9300      	str	r3, [sp, #0]
 800702e:	221f      	movs	r2, #31
 8007030:	2317      	movs	r3, #23
 8007032:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8007036:	480b      	ldr	r0, [pc, #44]	@ (8007064 <_Z23getFont_comicbd_18_4bppv+0x70>)
 8007038:	940a      	str	r4, [sp, #40]	@ 0x28
 800703a:	9401      	str	r4, [sp, #4]
 800703c:	f7fd ff46 	bl	8004ecc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007040:	4809      	ldr	r0, [pc, #36]	@ (8007068 <_Z23getFont_comicbd_18_4bppv+0x74>)
 8007042:	f022 fe55 	bl	8029cf0 <atexit>
 8007046:	4628      	mov	r0, r5
 8007048:	f021 fe04 	bl	8028c54 <__cxa_guard_release>
    return comicbd_18_4bpp;
}
 800704c:	4805      	ldr	r0, [pc, #20]	@ (8007064 <_Z23getFont_comicbd_18_4bppv+0x70>)
 800704e:	b00f      	add	sp, #60	@ 0x3c
 8007050:	bd30      	pop	{r4, r5, pc}
 8007052:	bf00      	nop
 8007054:	200030a8 	.word	0x200030a8
 8007058:	08030d98 	.word	0x08030d98
 800705c:	08030db4 	.word	0x08030db4
 8007060:	08030900 	.word	0x08030900
 8007064:	200030ac 	.word	0x200030ac
 8007068:	08006ff1 	.word	0x08006ff1

0800706c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_20_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_20_4bpp()
{
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 800706c:	4770      	bx	lr
	...

08007070 <_Z23getFont_comicbd_20_4bppv>:
{
 8007070:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 8007072:	4d16      	ldr	r5, [pc, #88]	@ (80070cc <_Z23getFont_comicbd_20_4bppv+0x5c>)
 8007074:	682c      	ldr	r4, [r5, #0]
 8007076:	f014 0401 	ands.w	r4, r4, #1
{
 800707a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 800707c:	f3bf 8f5b 	dmb	ish
 8007080:	d121      	bne.n	80070c6 <_Z23getFont_comicbd_20_4bppv+0x56>
 8007082:	4628      	mov	r0, r5
 8007084:	f021 fdda 	bl	8028c3c <__cxa_guard_acquire>
 8007088:	b1e8      	cbz	r0, 80070c6 <_Z23getFont_comicbd_20_4bppv+0x56>
 800708a:	233f      	movs	r3, #63	@ 0x3f
 800708c:	9309      	str	r3, [sp, #36]	@ 0x24
 800708e:	4b10      	ldr	r3, [pc, #64]	@ (80070d0 <_Z23getFont_comicbd_20_4bppv+0x60>)
 8007090:	9308      	str	r3, [sp, #32]
 8007092:	4b10      	ldr	r3, [pc, #64]	@ (80070d4 <_Z23getFont_comicbd_20_4bppv+0x64>)
 8007094:	4910      	ldr	r1, [pc, #64]	@ (80070d8 <_Z23getFont_comicbd_20_4bppv+0x68>)
 8007096:	4811      	ldr	r0, [pc, #68]	@ (80070dc <_Z23getFont_comicbd_20_4bppv+0x6c>)
 8007098:	940a      	str	r4, [sp, #40]	@ 0x28
 800709a:	2201      	movs	r2, #1
 800709c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80070a0:	2304      	movs	r3, #4
 80070a2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80070a6:	2314      	movs	r3, #20
 80070a8:	9300      	str	r3, [sp, #0]
 80070aa:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80070ae:	2315      	movs	r3, #21
 80070b0:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80070b4:	9405      	str	r4, [sp, #20]
 80070b6:	f7fd ff09 	bl	8004ecc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80070ba:	4809      	ldr	r0, [pc, #36]	@ (80070e0 <_Z23getFont_comicbd_20_4bppv+0x70>)
 80070bc:	f022 fe18 	bl	8029cf0 <atexit>
 80070c0:	4628      	mov	r0, r5
 80070c2:	f021 fdc7 	bl	8028c54 <__cxa_guard_release>
    return comicbd_20_4bpp;
}
 80070c6:	4805      	ldr	r0, [pc, #20]	@ (80070dc <_Z23getFont_comicbd_20_4bppv+0x6c>)
 80070c8:	b00f      	add	sp, #60	@ 0x3c
 80070ca:	bd30      	pop	{r4, r5, pc}
 80070cc:	200030d8 	.word	0x200030d8
 80070d0:	08030d9c 	.word	0x08030d9c
 80070d4:	08030db8 	.word	0x08030db8
 80070d8:	08030ab4 	.word	0x08030ab4
 80070dc:	200030dc 	.word	0x200030dc
 80070e0:	0800706d 	.word	0x0800706d

080070e4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_28_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_28_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_28_4bpp()
{
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 80070e4:	4770      	bx	lr
	...

080070e8 <_Z23getFont_comicbd_28_4bppv>:
{
 80070e8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 80070ea:	4d17      	ldr	r5, [pc, #92]	@ (8007148 <_Z23getFont_comicbd_28_4bppv+0x60>)
 80070ec:	682c      	ldr	r4, [r5, #0]
 80070ee:	f014 0401 	ands.w	r4, r4, #1
{
 80070f2:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 80070f4:	f3bf 8f5b 	dmb	ish
 80070f8:	d122      	bne.n	8007140 <_Z23getFont_comicbd_28_4bppv+0x58>
 80070fa:	4628      	mov	r0, r5
 80070fc:	f021 fd9e 	bl	8028c3c <__cxa_guard_acquire>
 8007100:	b1f0      	cbz	r0, 8007140 <_Z23getFont_comicbd_28_4bppv+0x58>
 8007102:	233f      	movs	r3, #63	@ 0x3f
 8007104:	9309      	str	r3, [sp, #36]	@ 0x24
 8007106:	4b11      	ldr	r3, [pc, #68]	@ (800714c <_Z23getFont_comicbd_28_4bppv+0x64>)
 8007108:	9308      	str	r3, [sp, #32]
 800710a:	4b11      	ldr	r3, [pc, #68]	@ (8007150 <_Z23getFont_comicbd_28_4bppv+0x68>)
 800710c:	9307      	str	r3, [sp, #28]
 800710e:	2301      	movs	r3, #1
 8007110:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8007114:	9304      	str	r3, [sp, #16]
 8007116:	2304      	movs	r3, #4
 8007118:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800711c:	231c      	movs	r3, #28
 800711e:	490d      	ldr	r1, [pc, #52]	@ (8007154 <_Z23getFont_comicbd_28_4bppv+0x6c>)
 8007120:	9300      	str	r3, [sp, #0]
 8007122:	220b      	movs	r2, #11
 8007124:	231d      	movs	r3, #29
 8007126:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800712a:	480b      	ldr	r0, [pc, #44]	@ (8007158 <_Z23getFont_comicbd_28_4bppv+0x70>)
 800712c:	940a      	str	r4, [sp, #40]	@ 0x28
 800712e:	9401      	str	r4, [sp, #4]
 8007130:	f7fd fecc 	bl	8004ecc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007134:	4809      	ldr	r0, [pc, #36]	@ (800715c <_Z23getFont_comicbd_28_4bppv+0x74>)
 8007136:	f022 fddb 	bl	8029cf0 <atexit>
 800713a:	4628      	mov	r0, r5
 800713c:	f021 fd8a 	bl	8028c54 <__cxa_guard_release>
    return comicbd_28_4bpp;
}
 8007140:	4805      	ldr	r0, [pc, #20]	@ (8007158 <_Z23getFont_comicbd_28_4bppv+0x70>)
 8007142:	b00f      	add	sp, #60	@ 0x3c
 8007144:	bd30      	pop	{r4, r5, pc}
 8007146:	bf00      	nop
 8007148:	20003108 	.word	0x20003108
 800714c:	08030da0 	.word	0x08030da0
 8007150:	08030dbc 	.word	0x08030dbc
 8007154:	08030ac4 	.word	0x08030ac4
 8007158:	2000310c 	.word	0x2000310c
 800715c:	080070e5 	.word	0x080070e5

08007160 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicz_29_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicz_29_4bpp();

touchgfx::GeneratedFont& getFont_comicz_29_4bpp()
{
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 8007160:	4770      	bx	lr
	...

08007164 <_Z22getFont_comicz_29_4bppv>:
{
 8007164:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 8007166:	4d17      	ldr	r5, [pc, #92]	@ (80071c4 <_Z22getFont_comicz_29_4bppv+0x60>)
 8007168:	682c      	ldr	r4, [r5, #0]
 800716a:	f014 0401 	ands.w	r4, r4, #1
{
 800716e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 8007170:	f3bf 8f5b 	dmb	ish
 8007174:	d123      	bne.n	80071be <_Z22getFont_comicz_29_4bppv+0x5a>
 8007176:	4628      	mov	r0, r5
 8007178:	f021 fd60 	bl	8028c3c <__cxa_guard_acquire>
 800717c:	b1f8      	cbz	r0, 80071be <_Z22getFont_comicz_29_4bppv+0x5a>
 800717e:	233f      	movs	r3, #63	@ 0x3f
 8007180:	9309      	str	r3, [sp, #36]	@ 0x24
 8007182:	4b11      	ldr	r3, [pc, #68]	@ (80071c8 <_Z22getFont_comicz_29_4bppv+0x64>)
 8007184:	9308      	str	r3, [sp, #32]
 8007186:	4b11      	ldr	r3, [pc, #68]	@ (80071cc <_Z22getFont_comicz_29_4bppv+0x68>)
 8007188:	9307      	str	r3, [sp, #28]
 800718a:	2203      	movs	r2, #3
 800718c:	2301      	movs	r3, #1
 800718e:	e9cd 3205 	strd	r3, r2, [sp, #20]
 8007192:	9304      	str	r3, [sp, #16]
 8007194:	2304      	movs	r3, #4
 8007196:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800719a:	231d      	movs	r3, #29
 800719c:	490c      	ldr	r1, [pc, #48]	@ (80071d0 <_Z22getFont_comicz_29_4bppv+0x6c>)
 800719e:	9300      	str	r3, [sp, #0]
 80071a0:	221c      	movs	r2, #28
 80071a2:	2325      	movs	r3, #37	@ 0x25
 80071a4:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80071a8:	480a      	ldr	r0, [pc, #40]	@ (80071d4 <_Z22getFont_comicz_29_4bppv+0x70>)
 80071aa:	940a      	str	r4, [sp, #40]	@ 0x28
 80071ac:	9401      	str	r4, [sp, #4]
 80071ae:	f7fd fe8d 	bl	8004ecc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80071b2:	4809      	ldr	r0, [pc, #36]	@ (80071d8 <_Z22getFont_comicz_29_4bppv+0x74>)
 80071b4:	f022 fd9c 	bl	8029cf0 <atexit>
 80071b8:	4628      	mov	r0, r5
 80071ba:	f021 fd4b 	bl	8028c54 <__cxa_guard_release>
    return comicz_29_4bpp;
}
 80071be:	4805      	ldr	r0, [pc, #20]	@ (80071d4 <_Z22getFont_comicz_29_4bppv+0x70>)
 80071c0:	b00f      	add	sp, #60	@ 0x3c
 80071c2:	bd30      	pop	{r4, r5, pc}
 80071c4:	20003138 	.word	0x20003138
 80071c8:	08030da4 	.word	0x08030da4
 80071cc:	08030dc0 	.word	0x08030dc0
 80071d0:	08030b60 	.word	0x08030b60
 80071d4:	2000313c 	.word	0x2000313c
 80071d8:	08007161 	.word	0x08007161

080071dc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_17_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_17_4bpp();

touchgfx::GeneratedFont& getFont_verdana_17_4bpp()
{
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 80071dc:	4770      	bx	lr
	...

080071e0 <_Z23getFont_verdana_17_4bppv>:
{
 80071e0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 80071e2:	4d16      	ldr	r5, [pc, #88]	@ (800723c <_Z23getFont_verdana_17_4bppv+0x5c>)
 80071e4:	682c      	ldr	r4, [r5, #0]
 80071e6:	f014 0401 	ands.w	r4, r4, #1
{
 80071ea:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 80071ec:	f3bf 8f5b 	dmb	ish
 80071f0:	d121      	bne.n	8007236 <_Z23getFont_verdana_17_4bppv+0x56>
 80071f2:	4628      	mov	r0, r5
 80071f4:	f021 fd22 	bl	8028c3c <__cxa_guard_acquire>
 80071f8:	b1e8      	cbz	r0, 8007236 <_Z23getFont_verdana_17_4bppv+0x56>
 80071fa:	233f      	movs	r3, #63	@ 0x3f
 80071fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80071fe:	4b10      	ldr	r3, [pc, #64]	@ (8007240 <_Z23getFont_verdana_17_4bppv+0x60>)
 8007200:	9308      	str	r3, [sp, #32]
 8007202:	4b10      	ldr	r3, [pc, #64]	@ (8007244 <_Z23getFont_verdana_17_4bppv+0x64>)
 8007204:	4910      	ldr	r1, [pc, #64]	@ (8007248 <_Z23getFont_verdana_17_4bppv+0x68>)
 8007206:	4811      	ldr	r0, [pc, #68]	@ (800724c <_Z23getFont_verdana_17_4bppv+0x6c>)
 8007208:	940a      	str	r4, [sp, #40]	@ 0x28
 800720a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800720e:	2201      	movs	r2, #1
 8007210:	2304      	movs	r3, #4
 8007212:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007216:	2311      	movs	r3, #17
 8007218:	9300      	str	r3, [sp, #0]
 800721a:	220b      	movs	r2, #11
 800721c:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8007220:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007224:	9405      	str	r4, [sp, #20]
 8007226:	f7fd fe51 	bl	8004ecc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800722a:	4809      	ldr	r0, [pc, #36]	@ (8007250 <_Z23getFont_verdana_17_4bppv+0x70>)
 800722c:	f022 fd60 	bl	8029cf0 <atexit>
 8007230:	4628      	mov	r0, r5
 8007232:	f021 fd0f 	bl	8028c54 <__cxa_guard_release>
    return verdana_17_4bpp;
}
 8007236:	4805      	ldr	r0, [pc, #20]	@ (800724c <_Z23getFont_verdana_17_4bppv+0x6c>)
 8007238:	b00f      	add	sp, #60	@ 0x3c
 800723a:	bd30      	pop	{r4, r5, pc}
 800723c:	20003168 	.word	0x20003168
 8007240:	08030da8 	.word	0x08030da8
 8007244:	08030dc4 	.word	0x08030dc4
 8007248:	08030ce8 	.word	0x08030ce8
 800724c:	2000316c 	.word	0x2000316c
 8007250:	080071dd 	.word	0x080071dd

08007254 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007254:	4770      	bx	lr
	...

08007258 <_Z23getFont_verdana_20_4bppv>:
{
 8007258:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800725a:	4d16      	ldr	r5, [pc, #88]	@ (80072b4 <_Z23getFont_verdana_20_4bppv+0x5c>)
 800725c:	682c      	ldr	r4, [r5, #0]
 800725e:	f014 0401 	ands.w	r4, r4, #1
{
 8007262:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007264:	f3bf 8f5b 	dmb	ish
 8007268:	d120      	bne.n	80072ac <_Z23getFont_verdana_20_4bppv+0x54>
 800726a:	4628      	mov	r0, r5
 800726c:	f021 fce6 	bl	8028c3c <__cxa_guard_acquire>
 8007270:	b1e0      	cbz	r0, 80072ac <_Z23getFont_verdana_20_4bppv+0x54>
 8007272:	233f      	movs	r3, #63	@ 0x3f
 8007274:	9309      	str	r3, [sp, #36]	@ 0x24
 8007276:	4b10      	ldr	r3, [pc, #64]	@ (80072b8 <_Z23getFont_verdana_20_4bppv+0x60>)
 8007278:	9308      	str	r3, [sp, #32]
 800727a:	4b10      	ldr	r3, [pc, #64]	@ (80072bc <_Z23getFont_verdana_20_4bppv+0x64>)
 800727c:	4910      	ldr	r1, [pc, #64]	@ (80072c0 <_Z23getFont_verdana_20_4bppv+0x68>)
 800727e:	4811      	ldr	r0, [pc, #68]	@ (80072c4 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8007280:	940a      	str	r4, [sp, #40]	@ 0x28
 8007282:	2201      	movs	r2, #1
 8007284:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007288:	2304      	movs	r3, #4
 800728a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800728e:	2314      	movs	r3, #20
 8007290:	9300      	str	r3, [sp, #0]
 8007292:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8007296:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800729a:	9405      	str	r4, [sp, #20]
 800729c:	f7fd fe16 	bl	8004ecc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80072a0:	4809      	ldr	r0, [pc, #36]	@ (80072c8 <_Z23getFont_verdana_20_4bppv+0x70>)
 80072a2:	f022 fd25 	bl	8029cf0 <atexit>
 80072a6:	4628      	mov	r0, r5
 80072a8:	f021 fcd4 	bl	8028c54 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80072ac:	4805      	ldr	r0, [pc, #20]	@ (80072c4 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80072ae:	b00f      	add	sp, #60	@ 0x3c
 80072b0:	bd30      	pop	{r4, r5, pc}
 80072b2:	bf00      	nop
 80072b4:	20003198 	.word	0x20003198
 80072b8:	08030dac 	.word	0x08030dac
 80072bc:	08030dc8 	.word	0x08030dc8
 80072c0:	08030d84 	.word	0x08030d84
 80072c4:	2000319c 	.word	0x2000319c
 80072c8:	08007255 	.word	0x08007255

080072cc <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 80072cc:	2000      	movs	r0, #0
 80072ce:	4770      	bx	lr

080072d0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 80072d0:	2000      	movs	r0, #0
 80072d2:	4770      	bx	lr

080072d4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80072d4:	b40e      	push	{r1, r2, r3}
 80072d6:	b503      	push	{r0, r1, lr}
 80072d8:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80072da:	2100      	movs	r1, #0
{
 80072dc:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80072e0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80072e2:	f00f ff03 	bl	80170ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80072e6:	b002      	add	sp, #8
 80072e8:	f85d eb04 	ldr.w	lr, [sp], #4
 80072ec:	b003      	add	sp, #12
 80072ee:	4770      	bx	lr

080072f0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80072f0:	b40c      	push	{r2, r3}
 80072f2:	b507      	push	{r0, r1, r2, lr}
 80072f4:	ab04      	add	r3, sp, #16
 80072f6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80072fa:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80072fc:	f00f fef6 	bl	80170ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007300:	b003      	add	sp, #12
 8007302:	f85d eb04 	ldr.w	lr, [sp], #4
 8007306:	b002      	add	sp, #8
 8007308:	4770      	bx	lr
	...

0800730c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800730c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800730e:	b510      	push	{r4, lr}
 8007310:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007312:	b373      	cbz	r3, 8007372 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007314:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8007316:	b92b      	cbnz	r3, 8007324 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007318:	4b18      	ldr	r3, [pc, #96]	@ (800737c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800731a:	4a19      	ldr	r2, [pc, #100]	@ (8007380 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800731c:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800731e:	4819      	ldr	r0, [pc, #100]	@ (8007384 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007320:	f022 fcc8 	bl	8029cb4 <__assert_func>
            return buffer[pos];
 8007324:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8007326:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800732a:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 800732c:	b30b      	cbz	r3, 8007372 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800732e:	f011 fdd8 	bl	8018ee2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007332:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8007334:	2b01      	cmp	r3, #1
 8007336:	d803      	bhi.n	8007340 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007338:	4b13      	ldr	r3, [pc, #76]	@ (8007388 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800733a:	4a14      	ldr	r2, [pc, #80]	@ (800738c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800733c:	21cb      	movs	r1, #203	@ 0xcb
 800733e:	e7ee      	b.n	800731e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007340:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8007342:	1c53      	adds	r3, r2, #1
 8007344:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007346:	2b09      	cmp	r3, #9
 8007348:	4619      	mov	r1, r3
 800734a:	bf88      	it	hi
 800734c:	f1a3 010a 	subhi.w	r1, r3, #10
 8007350:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007354:	f640 103f 	movw	r0, #2367	@ 0x93f
 8007358:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 800735a:	4281      	cmp	r1, r0
 800735c:	d109      	bne.n	8007372 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800735e:	2b0a      	cmp	r3, #10
 8007360:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007364:	bf28      	it	cs
 8007366:	2300      	movcs	r3, #0
 8007368:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800736c:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 800736e:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8007370:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007372:	4620      	mov	r0, r4
}
 8007374:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007378:	f011 bcb6 	b.w	8018ce8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800737c:	0802c1ab 	.word	0x0802c1ab
 8007380:	0802c1b4 	.word	0x0802c1b4
 8007384:	0802c25f 	.word	0x0802c25f
 8007388:	0802c2a9 	.word	0x0802c2a9
 800738c:	0802c2b7 	.word	0x0802c2b7

08007390 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8007390:	f011 bc71 	b.w	8018c76 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007394 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007394:	b510      	push	{r4, lr}
 8007396:	b086      	sub	sp, #24
 8007398:	ac02      	add	r4, sp, #8
 800739a:	e884 0006 	stmia.w	r4, {r1, r2}
 800739e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80073a0:	ab0a      	add	r3, sp, #40	@ 0x28
 80073a2:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80073a4:	9301      	str	r3, [sp, #4]
 80073a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80073a8:	9300      	str	r3, [sp, #0]
 80073aa:	4621      	mov	r1, r4
 80073ac:	9b08      	ldr	r3, [sp, #32]
 80073ae:	f00e fac7 	bl	8015940 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80073b2:	b006      	add	sp, #24
 80073b4:	bd10      	pop	{r4, pc}
	...

080073b8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80073b8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80073ba:	bb18      	cbnz	r0, 8007404 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80073bc:	4b12      	ldr	r3, [pc, #72]	@ (8007408 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80073be:	4813      	ldr	r0, [pc, #76]	@ (800740c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80073c0:	681c      	ldr	r4, [r3, #0]
 80073c2:	4913      	ldr	r1, [pc, #76]	@ (8007410 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80073c4:	b1b4      	cbz	r4, 80073f4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80073c6:	6822      	ldr	r2, [r4, #0]
 80073c8:	4422      	add	r2, r4
 80073ca:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80073cc:	6862      	ldr	r2, [r4, #4]
 80073ce:	4422      	add	r2, r4
 80073d0:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80073d2:	68a2      	ldr	r2, [r4, #8]
 80073d4:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80073d6:	4b0f      	ldr	r3, [pc, #60]	@ (8007414 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80073d8:	2200      	movs	r2, #0
 80073da:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80073dc:	f000 f838 	bl	8007450 <_ZN17TypedTextDatabase8getFontsEv>
 80073e0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80073e2:	f000 f833 	bl	800744c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80073e6:	4b0c      	ldr	r3, [pc, #48]	@ (8007418 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80073e8:	601c      	str	r4, [r3, #0]
        fonts = f;
 80073ea:	4b0c      	ldr	r3, [pc, #48]	@ (800741c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80073ec:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80073ee:	4b0c      	ldr	r3, [pc, #48]	@ (8007420 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80073f0:	8018      	strh	r0, [r3, #0]
    }
}
 80073f2:	e007      	b.n	8007404 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80073f4:	4b0b      	ldr	r3, [pc, #44]	@ (8007424 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80073f6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80073f8:	4b0b      	ldr	r3, [pc, #44]	@ (8007428 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80073fa:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80073fc:	4b0b      	ldr	r3, [pc, #44]	@ (800742c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80073fe:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8007400:	2c00      	cmp	r4, #0
 8007402:	d1e8      	bne.n	80073d6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8007404:	bd38      	pop	{r3, r4, r5, pc}
 8007406:	bf00      	nop
 8007408:	200031d4 	.word	0x200031d4
 800740c:	200031cc 	.word	0x200031cc
 8007410:	200031c8 	.word	0x200031c8
 8007414:	200031d0 	.word	0x200031d0
 8007418:	20013fb8 	.word	0x20013fb8
 800741c:	20013fc0 	.word	0x20013fc0
 8007420:	20013fbc 	.word	0x20013fbc
 8007424:	08030e70 	.word	0x08030e70
 8007428:	08030dcc 	.word	0x08030dcc
 800742c:	08030f04 	.word	0x08030f04

08007430 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8007430:	4b04      	ldr	r3, [pc, #16]	@ (8007444 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8007432:	681b      	ldr	r3, [r3, #0]
 8007434:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007438:	4b03      	ldr	r3, [pc, #12]	@ (8007448 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800743a:	681b      	ldr	r3, [r3, #0]
}
 800743c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8007440:	4770      	bx	lr
 8007442:	bf00      	nop
 8007444:	200031c8 	.word	0x200031c8
 8007448:	200031cc 	.word	0x200031cc

0800744c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800744c:	2029      	movs	r0, #41	@ 0x29
 800744e:	4770      	bx	lr

08007450 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007450:	4800      	ldr	r0, [pc, #0]	@ (8007454 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007452:	4770      	bx	lr
 8007454:	200031d8 	.word	0x200031d8

08007458 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 6:
        touchgfx_fonts[6] = &(getFont_comicbd_15_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007458:	b510      	push	{r4, lr}
    &(getFont_verdana_17_4bpp()),
 800745a:	f7ff fec1 	bl	80071e0 <_Z23getFont_verdana_17_4bppv>
};
 800745e:	4c0a      	ldr	r4, [pc, #40]	@ (8007488 <_GLOBAL__sub_I_touchgfx_fonts+0x30>)
 8007460:	6020      	str	r0, [r4, #0]
    &(getFont_comicz_29_4bpp()),
 8007462:	f7ff fe7f 	bl	8007164 <_Z22getFont_comicz_29_4bppv>
};
 8007466:	6060      	str	r0, [r4, #4]
    &(getFont_comicbd_18_4bpp()),
 8007468:	f7ff fdc4 	bl	8006ff4 <_Z23getFont_comicbd_18_4bppv>
};
 800746c:	60a0      	str	r0, [r4, #8]
    &(getFont_comicbd_20_4bpp()),
 800746e:	f7ff fdff 	bl	8007070 <_Z23getFont_comicbd_20_4bppv>
};
 8007472:	60e0      	str	r0, [r4, #12]
    &(getFont_comicbd_28_4bpp()),
 8007474:	f7ff fe38 	bl	80070e8 <_Z23getFont_comicbd_28_4bppv>
};
 8007478:	6120      	str	r0, [r4, #16]
    &(getFont_verdana_20_4bpp()),
 800747a:	f7ff feed 	bl	8007258 <_Z23getFont_verdana_20_4bppv>
};
 800747e:	6160      	str	r0, [r4, #20]
    &(getFont_comicbd_15_4bpp())
 8007480:	f7ff fd7a 	bl	8006f78 <_Z23getFont_comicbd_15_4bppv>
};
 8007484:	61a0      	str	r0, [r4, #24]
} // namespace TypedTextDatabase
 8007486:	bd10      	pop	{r4, pc}
 8007488:	200031d8 	.word	0x200031d8

0800748c <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 800748c:	b510      	push	{r4, lr}
    pointArray = 0;
 800748e:	2400      	movs	r4, #0
 8007490:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8007492:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8007494:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8007496:	601c      	str	r4, [r3, #0]
}
 8007498:	bd10      	pop	{r4, pc}

0800749a <_ZN13ModelListener15movePaddle1LeftEv>:
    virtual void movePaddle1Left() {}
 800749a:	4770      	bx	lr

0800749c <_ZN13ModelListener16movePaddle1RightEv>:
    virtual void movePaddle1Right() {}
 800749c:	4770      	bx	lr

0800749e <_ZN13ModelListener15movePaddle2LeftEv>:
    virtual void movePaddle2Left() {}
 800749e:	4770      	bx	lr

080074a0 <_ZN13ModelListener16movePaddle2RightEv>:
    virtual void movePaddle2Right() {}
 80074a0:	4770      	bx	lr

080074a2 <_ZN13ModelListener13paddle1ActionEv>:
    virtual void paddle1Action() {}
 80074a2:	4770      	bx	lr

080074a4 <_ZN13ModelListener13paddle2ActionEv>:
    virtual void paddle2Action() {}
 80074a4:	4770      	bx	lr

080074a6 <_ZN24EasyReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~EasyReadyScreenPresenter() {}
 80074a6:	4770      	bx	lr

080074a8 <_ZThn4_N24EasyReadyScreenPresenterD1Ev>:
 80074a8:	3804      	subs	r0, #4
 80074aa:	4770      	bx	lr

080074ac <_ZN24EasyReadyScreenPresenter10deactivateEv>:
}

void EasyReadyScreenPresenter::activate()
{

}
 80074ac:	4770      	bx	lr

080074ae <_ZN24EasyReadyScreenPresenterD0Ev>:
 80074ae:	b510      	push	{r4, lr}
 80074b0:	2110      	movs	r1, #16
 80074b2:	4604      	mov	r4, r0
 80074b4:	f021 fbc0 	bl	8028c38 <_ZdlPvj>
 80074b8:	4620      	mov	r0, r4
 80074ba:	bd10      	pop	{r4, pc}

080074bc <_ZThn4_N24EasyReadyScreenPresenterD0Ev>:
 80074bc:	f1a0 0004 	sub.w	r0, r0, #4
 80074c0:	e7f5      	b.n	80074ae <_ZN24EasyReadyScreenPresenterD0Ev>
	...

080074c4 <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView>:
    ModelListener() : model(0) {}
 80074c4:	2200      	movs	r2, #0
 80074c6:	6082      	str	r2, [r0, #8]
    : view(v)
 80074c8:	4a02      	ldr	r2, [pc, #8]	@ (80074d4 <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView+0x10>)
 80074ca:	6002      	str	r2, [r0, #0]
 80074cc:	3218      	adds	r2, #24
 80074ce:	6042      	str	r2, [r0, #4]
 80074d0:	60c1      	str	r1, [r0, #12]
}
 80074d2:	4770      	bx	lr
 80074d4:	0802ccd8 	.word	0x0802ccd8

080074d8 <_ZN19EasyReadyScreenView14tearDownScreenEv>:
}

void EasyReadyScreenView::tearDownScreen()
{
    EasyReadyScreenViewBase::tearDownScreen();
}
 80074d8:	4770      	bx	lr
	...

080074dc <_ZN19EasyReadyScreenViewD1Ev>:

class EasyReadyScreenView : public EasyReadyScreenViewBase
{
public:
    EasyReadyScreenView();
    virtual ~EasyReadyScreenView() {}
 80074dc:	b510      	push	{r4, lr}
 80074de:	4b03      	ldr	r3, [pc, #12]	@ (80074ec <_ZN19EasyReadyScreenViewD1Ev+0x10>)
 80074e0:	6003      	str	r3, [r0, #0]
 80074e2:	4604      	mov	r4, r0
 80074e4:	f7fb fdae 	bl	8003044 <_ZN23EasyReadyScreenViewBaseD1Ev>
 80074e8:	4620      	mov	r0, r4
 80074ea:	bd10      	pop	{r4, pc}
 80074ec:	0802cd18 	.word	0x0802cd18

080074f0 <_ZN19EasyReadyScreenViewD0Ev>:
 80074f0:	b510      	push	{r4, lr}
 80074f2:	4604      	mov	r4, r0
 80074f4:	f7ff fff2 	bl	80074dc <_ZN19EasyReadyScreenViewD1Ev>
 80074f8:	4620      	mov	r0, r4
 80074fa:	f241 51bc 	movw	r1, #5564	@ 0x15bc
 80074fe:	f021 fb9b 	bl	8028c38 <_ZdlPvj>
 8007502:	4620      	mov	r0, r4
 8007504:	bd10      	pop	{r4, pc}

08007506 <_ZN19EasyReadyScreenView15handleTickEventEv>:
void EasyReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 8007506:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 800750a:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 800750c:	f8d2 15b8 	ldr.w	r1, [r2, #1464]	@ 0x5b8
 8007510:	2900      	cmp	r1, #0
 8007512:	dd07      	ble.n	8007524 <_ZN19EasyReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 8007514:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 8007516:	3901      	subs	r1, #1

	    }else{
	    	application().gotoEasyScreenScreenNoTransition();
	    }

}
 8007518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 800751c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 800751e:	f8c2 15b8 	str.w	r1, [r2, #1464]	@ 0x5b8
	        updateCounter(tickCounter);
 8007522:	4718      	bx	r3
 8007524:	f00e fe6e 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007528:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoEasyScreenScreenNoTransition();
 800752c:	f7fc be7e 	b.w	800422c <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>

08007530 <_ZN19EasyReadyScreenViewC1Ev>:
EasyReadyScreenView::EasyReadyScreenView()
 8007530:	b510      	push	{r4, lr}
 8007532:	4604      	mov	r4, r0
 8007534:	f7fb fe54 	bl	80031e0 <_ZN23EasyReadyScreenViewBaseC1Ev>
 8007538:	4b04      	ldr	r3, [pc, #16]	@ (800754c <_ZN19EasyReadyScreenViewC1Ev+0x1c>)
 800753a:	6023      	str	r3, [r4, #0]
 800753c:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8007540:	22b4      	movs	r2, #180	@ 0xb4
 8007542:	f8c3 25b8 	str.w	r2, [r3, #1464]	@ 0x5b8
}
 8007546:	4620      	mov	r0, r4
 8007548:	bd10      	pop	{r4, pc}
 800754a:	bf00      	nop
 800754c:	0802cd18 	.word	0x0802cd18

08007550 <_ZN19EasyReadyScreenView11setupScreenEv>:
{
 8007550:	b510      	push	{r4, lr}
 8007552:	4604      	mov	r4, r0
    EasyReadyScreenViewBase::setupScreen();
 8007554:	f7fb fd56 	bl	8003004 <_ZN23EasyReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 8007558:	6823      	ldr	r3, [r4, #0]
 800755a:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 800755e:	4620      	mov	r0, r4
 8007560:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007562:	f8d2 15b8 	ldr.w	r1, [r2, #1464]	@ 0x5b8
}
 8007566:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 800756a:	4718      	bx	r3

0800756c <_ZN19EasyReadyScreenView13updateCounterEi>:
void EasyReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 800756c:	2978      	cmp	r1, #120	@ 0x78
{
 800756e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007570:	4605      	mov	r5, r0
	    if (value > 120)
 8007572:	dc23      	bgt.n	80075bc <_ZN19EasyReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 8007574:	293c      	cmp	r1, #60	@ 0x3c
 8007576:	dc23      	bgt.n	80075c0 <_ZN19EasyReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 8007578:	2900      	cmp	r1, #0
 800757a:	bfd4      	ite	le
 800757c:	2400      	movle	r4, #0
 800757e:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8007580:	f505 7733 	add.w	r7, r5, #716	@ 0x2cc
 8007584:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007586:	f505 7638 	add.w	r6, r5, #736	@ 0x2e0
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 800758a:	4a0e      	ldr	r2, [pc, #56]	@ (80075c4 <_ZN19EasyReadyScreenView13updateCounterEi+0x58>)
 800758c:	210a      	movs	r1, #10
 800758e:	4638      	mov	r0, r7
 8007590:	f012 fa50 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007594:	4623      	mov	r3, r4
 8007596:	4a0b      	ldr	r2, [pc, #44]	@ (80075c4 <_ZN19EasyReadyScreenView13updateCounterEi+0x58>)
 8007598:	210a      	movs	r1, #10
 800759a:	4630      	mov	r0, r6
 800759c:	f012 fa4a 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 80075a0:	f505 700d 	add.w	r0, r5, #564	@ 0x234
 80075a4:	f8c5 727c 	str.w	r7, [r5, #636]	@ 0x27c
 80075a8:	f8c5 62c8 	str.w	r6, [r5, #712]	@ 0x2c8
 80075ac:	f00f fec8 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 80075b0:	f505 7020 	add.w	r0, r5, #640	@ 0x280
}
 80075b4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 80075b8:	f00f bec2 	b.w	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 80075bc:	2403      	movs	r4, #3
 80075be:	e7df      	b.n	8007580 <_ZN19EasyReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 80075c0:	2402      	movs	r4, #2
 80075c2:	e7dd      	b.n	8007580 <_ZN19EasyReadyScreenView13updateCounterEi+0x14>
 80075c4:	0802c389 	.word	0x0802c389

080075c8 <_ZN19EasyScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~EasyScreenPresenter() {}
 80075c8:	4770      	bx	lr

080075ca <_ZThn4_N19EasyScreenPresenterD1Ev>:
 80075ca:	3804      	subs	r0, #4
 80075cc:	4770      	bx	lr

080075ce <_ZN19EasyScreenPresenter10deactivateEv>:
}

void EasyScreenPresenter::deactivate()
{

}
 80075ce:	4770      	bx	lr

080075d0 <_ZN19EasyScreenPresenterD0Ev>:
 80075d0:	b510      	push	{r4, lr}
 80075d2:	2110      	movs	r1, #16
 80075d4:	4604      	mov	r4, r0
 80075d6:	f021 fb2f 	bl	8028c38 <_ZdlPvj>
 80075da:	4620      	mov	r0, r4
 80075dc:	bd10      	pop	{r4, pc}

080075de <_ZThn4_N19EasyScreenPresenterD0Ev>:
 80075de:	f1a0 0004 	sub.w	r0, r0, #4
 80075e2:	e7f5      	b.n	80075d0 <_ZN19EasyScreenPresenterD0Ev>

080075e4 <_ZN19EasyScreenPresenter8activateEv>:
	model->resetGame();
 80075e4:	6880      	ldr	r0, [r0, #8]
 80075e6:	f002 bb03 	b.w	8009bf0 <_ZN5Model9resetGameEv>
	...

080075ec <_ZN19EasyScreenPresenterC1ER14EasyScreenView>:
 80075ec:	2200      	movs	r2, #0
 80075ee:	6082      	str	r2, [r0, #8]
    : view(v)
 80075f0:	4a02      	ldr	r2, [pc, #8]	@ (80075fc <_ZN19EasyScreenPresenterC1ER14EasyScreenView+0x10>)
 80075f2:	6002      	str	r2, [r0, #0]
 80075f4:	3218      	adds	r2, #24
 80075f6:	6042      	str	r2, [r0, #4]
 80075f8:	60c1      	str	r1, [r0, #12]
}
 80075fa:	4770      	bx	lr
 80075fc:	0802cd50 	.word	0x0802cd50

08007600 <_ZN19EasyScreenPresenter13goToEndScreenEi>:
void  EasyScreenPresenter::handleTickEvent()
{

}
void EasyScreenPresenter::goToEndScreen(int winner)
{
 8007600:	b508      	push	{r3, lr}
    // Gửi thông tin người chiến thắng đến Model
    model->setWinner(winner);
 8007602:	6880      	ldr	r0, [r0, #8]
 8007604:	f002 fae0 	bl	8009bc8 <_ZN5Model9setWinnerEi>
    // Yêu cầu chuyển đến EndScreen
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8007608:	f00e fdfc 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
}
 800760c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8007610:	f7fc be2c 	b.w	800426c <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

08007614 <_ZN14EasyScreenView14tearDownScreenEv>:

// Phương thức dọn dẹp khi thoát màn hình
void EasyScreenView::tearDownScreen()
{
    EasyScreenViewBase::tearDownScreen();
}
 8007614:	4770      	bx	lr
	...

08007618 <_ZN14EasyScreenViewD1Ev>:

class EasyScreenView : public EasyScreenViewBase
{
public:
    EasyScreenView();
    virtual ~EasyScreenView() {}
 8007618:	b510      	push	{r4, lr}
 800761a:	4b03      	ldr	r3, [pc, #12]	@ (8007628 <_ZN14EasyScreenViewD1Ev+0x10>)
 800761c:	6003      	str	r3, [r0, #0]
 800761e:	4604      	mov	r4, r0
 8007620:	f7fc f82a 	bl	8003678 <_ZN18EasyScreenViewBaseD1Ev>
 8007624:	4620      	mov	r0, r4
 8007626:	bd10      	pop	{r4, pc}
 8007628:	0802cd90 	.word	0x0802cd90

0800762c <_ZN14EasyScreenViewD0Ev>:
 800762c:	b510      	push	{r4, lr}
 800762e:	4604      	mov	r4, r0
 8007630:	f7ff fff2 	bl	8007618 <_ZN14EasyScreenViewD1Ev>
 8007634:	4620      	mov	r0, r4
 8007636:	f241 61fc 	movw	r1, #5884	@ 0x16fc
 800763a:	f021 fafd 	bl	8028c38 <_ZdlPvj>
 800763e:	4620      	mov	r0, r4
 8007640:	bd10      	pop	{r4, pc}
	...

08007644 <_ZN14EasyScreenViewC1Ev>:
EasyScreenView::EasyScreenView() : ballX(160), ballY(80), ballVelX(1), ballVelY(1),
 8007644:	b510      	push	{r4, lr}
 8007646:	4604      	mov	r4, r0
                                   lineAngle1(0.0f), lineAngle2(0.0f)
 8007648:	f7fc f830 	bl	80036ac <_ZN18EasyScreenViewBaseC1Ev>
 800764c:	4b19      	ldr	r3, [pc, #100]	@ (80076b4 <_ZN14EasyScreenViewC1Ev+0x70>)
 800764e:	6023      	str	r3, [r4, #0]
EasyScreenView::EasyScreenView() : ballX(160), ballY(80), ballVelX(1), ballVelY(1),
 8007650:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8007654:	f203 62bc 	addw	r2, r3, #1724	@ 0x6bc
 8007658:	4917      	ldr	r1, [pc, #92]	@ (80076b8 <_ZN14EasyScreenViewC1Ev+0x74>)
 800765a:	6011      	str	r1, [r2, #0]
 800765c:	f504 52b6 	add.w	r2, r4, #5824	@ 0x16c0
 8007660:	4916      	ldr	r1, [pc, #88]	@ (80076bc <_ZN14EasyScreenViewC1Ev+0x78>)
 8007662:	6011      	str	r1, [r2, #0]
 8007664:	f203 61c4 	addw	r1, r3, #1732	@ 0x6c4
 8007668:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800766c:	600a      	str	r2, [r1, #0]
 800766e:	f503 61d9 	add.w	r1, r3, #1736	@ 0x6c8
}
 8007672:	4620      	mov	r0, r4
EasyScreenView::EasyScreenView() : ballX(160), ballY(80), ballVelX(1), ballVelY(1),
 8007674:	600a      	str	r2, [r1, #0]
                                   waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 8007676:	2200      	movs	r2, #0
                                   desiredBallVelY1(0.0f), desiredBallVelY2(0.0f),
 8007678:	f203 61ec 	addw	r1, r3, #1772	@ 0x6ec
                                   waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 800767c:	f883 26cc 	strb.w	r2, [r3, #1740]	@ 0x6cc
 8007680:	f8c3 26d0 	str.w	r2, [r3, #1744]	@ 0x6d0
 8007684:	f8c3 26d4 	str.w	r2, [r3, #1748]	@ 0x6d4
                                   score1(0), score2(0), gameOver(false),
 8007688:	f8c3 26d8 	str.w	r2, [r3, #1752]	@ 0x6d8
 800768c:	f8c3 26dc 	str.w	r2, [r3, #1756]	@ 0x6dc
 8007690:	f883 26e0 	strb.w	r2, [r3, #1760]	@ 0x6e0
                                   buzzerBeepCounter(0), buzzerBeepState(false),
 8007694:	f8c3 26e4 	str.w	r2, [r3, #1764]	@ 0x6e4
 8007698:	f883 26e8 	strb.w	r2, [r3, #1768]	@ 0x6e8
                                   desiredBallVelY1(0.0f), desiredBallVelY2(0.0f),
 800769c:	2200      	movs	r2, #0
 800769e:	600a      	str	r2, [r1, #0]
 80076a0:	f503 61de 	add.w	r1, r3, #1776	@ 0x6f0
 80076a4:	600a      	str	r2, [r1, #0]
                                   lineAngle1(0.0f), lineAngle2(0.0f)
 80076a6:	f203 61f4 	addw	r1, r3, #1780	@ 0x6f4
 80076aa:	f503 63df 	add.w	r3, r3, #1784	@ 0x6f8
 80076ae:	600a      	str	r2, [r1, #0]
 80076b0:	601a      	str	r2, [r3, #0]
}
 80076b2:	bd10      	pop	{r4, pc}
 80076b4:	0802cd90 	.word	0x0802cd90
 80076b8:	43200000 	.word	0x43200000
 80076bc:	42a00000 	.word	0x42a00000

080076c0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80076c0:	0152      	lsls	r2, r2, #5
 80076c2:	0149      	lsls	r1, r1, #5
 80076c4:	f00b ba22 	b.w	8012b0c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

080076c8 <_ZN8touchgfx4Line6setEndIfEEvT_S2_>:
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80076c8:	eef0 7a60 	vmov.f32	s15, s1
 80076cc:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80076d0:	ee17 2a90 	vmov	r2, s15
 80076d4:	eef0 7a40 	vmov.f32	s15, s0
 80076d8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80076dc:	ee17 1a90 	vmov	r1, s15
 80076e0:	f00b ba1f 	b.w	8012b22 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

080076e4 <_ZN14EasyScreenView11setupScreenEv>:
{
 80076e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80076e8:	4605      	mov	r5, r0
    score1 = 0;
 80076ea:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
    ballX = 160;
 80076ee:	f204 67bc 	addw	r7, r4, #1724	@ 0x6bc
    EasyScreenViewBase::setupScreen();
 80076f2:	f7fb ffbf 	bl	8003674 <_ZN18EasyScreenViewBase11setupScreenEv>
    ballY = 120;
 80076f6:	f505 58b6 	add.w	r8, r5, #5824	@ 0x16c0
    score1 = 0;
 80076fa:	2300      	movs	r3, #0
    ballX = 160;
 80076fc:	4a34      	ldr	r2, [pc, #208]	@ (80077d0 <_ZN14EasyScreenView11setupScreenEv+0xec>)
    score1 = 0;
 80076fe:	f8c4 36d8 	str.w	r3, [r4, #1752]	@ 0x6d8
    score2 = 0;
 8007702:	f8c4 36dc 	str.w	r3, [r4, #1756]	@ 0x6dc
    gameOver = false;
 8007706:	f884 36e0 	strb.w	r3, [r4, #1760]	@ 0x6e0
    ballVelX = 1;
 800770a:	f204 61c4 	addw	r1, r4, #1732	@ 0x6c4
    ballX = 160;
 800770e:	603a      	str	r2, [r7, #0]
    ballY = 120;
 8007710:	4a30      	ldr	r2, [pc, #192]	@ (80077d4 <_ZN14EasyScreenView11setupScreenEv+0xf0>)
 8007712:	f8c8 2000 	str.w	r2, [r8]
    ballVelX = 1;
 8007716:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800771a:	600a      	str	r2, [r1, #0]
    ballVelY = 1;
 800771c:	f504 61d9 	add.w	r1, r4, #1736	@ 0x6c8
    line1.invalidate();
 8007720:	f505 7033 	add.w	r0, r5, #716	@ 0x2cc
    ballVelY = 1;
 8007724:	600a      	str	r2, [r1, #0]
    desiredBallVelY1 = 0.0f;
 8007726:	f204 61ec 	addw	r1, r4, #1772	@ 0x6ec
 800772a:	2200      	movs	r2, #0
    waitingForServe = false;
 800772c:	f884 36cc 	strb.w	r3, [r4, #1740]	@ 0x6cc
    serveDelayTicks = 0;
 8007730:	f8c4 36d0 	str.w	r3, [r4, #1744]	@ 0x6d0
    servingPlayer = 0;
 8007734:	f8c4 36d4 	str.w	r3, [r4, #1748]	@ 0x6d4
    buzzerBeepCounter = 0;
 8007738:	f8c4 36e4 	str.w	r3, [r4, #1764]	@ 0x6e4
    buzzerBeepState = false;
 800773c:	f884 36e8 	strb.w	r3, [r4, #1768]	@ 0x6e8
    desiredBallVelY1 = 0.0f;
 8007740:	600a      	str	r2, [r1, #0]
    desiredBallVelY2 = 0.0f;
 8007742:	f504 61de 	add.w	r1, r4, #1776	@ 0x6f0
    ball.invalidate();
 8007746:	f505 761c 	add.w	r6, r5, #624	@ 0x270
    desiredBallVelY2 = 0.0f;
 800774a:	600a      	str	r2, [r1, #0]
    lineAngle1 = 0.0f;
 800774c:	f204 61f4 	addw	r1, r4, #1780	@ 0x6f4
 8007750:	600a      	str	r2, [r1, #0]
    lineAngle2 = 0.0f;
 8007752:	f504 61df 	add.w	r1, r4, #1784	@ 0x6f8
 8007756:	600a      	str	r2, [r1, #0]
        visible = vis;
 8007758:	f885 32f1 	strb.w	r3, [r5, #753]	@ 0x2f1
 800775c:	f885 3375 	strb.w	r3, [r5, #885]	@ 0x375
    line1.invalidate();
 8007760:	f00a fefa 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    line1_1.invalidate();
 8007764:	f505 7054 	add.w	r0, r5, #848	@ 0x350
 8007768:	f00a fef6 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    ball.invalidate();
 800776c:	4630      	mov	r0, r6
 800776e:	f00a fef3 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    ball.moveTo(ballX, ballY);
 8007772:	ed98 7a00 	vldr	s14, [r8]
 8007776:	edd7 7a00 	vldr	s15, [r7]
 800777a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800777e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007782:	ee17 3a10 	vmov	r3, s14
 8007786:	b21a      	sxth	r2, r3
 8007788:	ee17 3a90 	vmov	r3, s15
 800778c:	4630      	mov	r0, r6
 800778e:	b219      	sxth	r1, r3
 8007790:	f7fa fa81 	bl	8001c96 <_ZN8touchgfx8Drawable6moveToEss>
    ball.invalidate();
 8007794:	4630      	mov	r0, r6
        Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007796:	4e10      	ldr	r6, [pc, #64]	@ (80077d8 <_ZN14EasyScreenView11setupScreenEv+0xf4>)
    ball.invalidate();
 8007798:	f00a fede 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 800779c:	f8d4 36d8 	ldr.w	r3, [r4, #1752]	@ 0x6d8
 80077a0:	4632      	mov	r2, r6
 80077a2:	210a      	movs	r1, #10
 80077a4:	f505 707a 	add.w	r0, r5, #1000	@ 0x3e8
 80077a8:	f012 f944 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        EasyScreenViewBase::score1.invalidate();
 80077ac:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 80077b0:	f00f fdc6 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
        Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 80077b4:	f8d4 36dc 	ldr.w	r3, [r4, #1756]	@ 0x6dc
 80077b8:	4632      	mov	r2, r6
 80077ba:	f505 7075 	add.w	r0, r5, #980	@ 0x3d4
 80077be:	210a      	movs	r1, #10
 80077c0:	f012 f938 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        EasyScreenViewBase::score2.invalidate();
 80077c4:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 80077c8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        EasyScreenViewBase::score2.invalidate();
 80077cc:	f00f bdb8 	b.w	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
 80077d0:	43200000 	.word	0x43200000
 80077d4:	42f00000 	.word	0x42f00000
 80077d8:	0802c389 	.word	0x0802c389
 80077dc:	00000000 	.word	0x00000000

080077e0 <_ZN14EasyScreenView15handleTickEventEv>:

// Phương thức xử lý sự kiện tick (gọi định kỳ, thường 60 FPS)
void EasyScreenView::handleTickEvent()
{
 80077e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if (gameOver) {
 80077e4:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 80077e8:	ed2d 8b04 	vpush	{d8-d9}
    if (gameOver) {
 80077ec:	f895 36e0 	ldrb.w	r3, [r5, #1760]	@ 0x6e0
{
 80077f0:	b085      	sub	sp, #20
 80077f2:	4604      	mov	r4, r0
    if (gameOver) {
 80077f4:	b18b      	cbz	r3, 800781a <_ZN14EasyScreenView15handleTickEventEv+0x3a>
 80077f6:	2300      	movs	r3, #0
 80077f8:	f880 32f1 	strb.w	r3, [r0, #753]	@ 0x2f1
 80077fc:	f880 3375 	strb.w	r3, [r0, #885]	@ 0x375
        line1.setVisible(false);
        line1_1.setVisible(false);
        line1.invalidate();
 8007800:	f500 7033 	add.w	r0, r0, #716	@ 0x2cc
 8007804:	f00a fea8 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        line1_1.invalidate();
 8007808:	f504 7054 	add.w	r0, r4, #848	@ 0x350
                       line1_1.invalidate();
        }
        ball.moveTo(ballX, ballY);
        ball.invalidate();
    }
}
 800780c:	b005      	add	sp, #20
 800780e:	ecbd 8b04 	vpop	{d8-d9}
 8007812:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        line1_1.invalidate();
 8007816:	f00a be9f 	b.w	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    if (buzzerBeepCounter > 0) {
 800781a:	f8d5 36e4 	ldr.w	r3, [r5, #1764]	@ 0x6e4
 800781e:	2b00      	cmp	r3, #0
 8007820:	dd1b      	ble.n	800785a <_ZN14EasyScreenView15handleTickEventEv+0x7a>
        if (buzzerBeepCounter % 6 == 0) {
 8007822:	2206      	movs	r2, #6
 8007824:	fb93 f1f2 	sdiv	r1, r3, r2
 8007828:	fb02 3311 	mls	r3, r2, r1, r3
 800782c:	b953      	cbnz	r3, 8007844 <_ZN14EasyScreenView15handleTickEventEv+0x64>
            buzzerBeepState = !buzzerBeepState;
 800782e:	f895 26e8 	ldrb.w	r2, [r5, #1768]	@ 0x6e8
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 8007832:	4813      	ldr	r0, [pc, #76]	@ (8007880 <_ZN14EasyScreenView15handleTickEventEv+0xa0>)
            buzzerBeepState = !buzzerBeepState;
 8007834:	f082 0201 	eor.w	r2, r2, #1
 8007838:	f885 26e8 	strb.w	r2, [r5, #1768]	@ 0x6e8
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 800783c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8007840:	f003 f980 	bl	800ab44 <HAL_GPIO_WritePin>
        buzzerBeepCounter--;
 8007844:	f8d5 26e4 	ldr.w	r2, [r5, #1764]	@ 0x6e4
 8007848:	3a01      	subs	r2, #1
 800784a:	f8c5 26e4 	str.w	r2, [r5, #1764]	@ 0x6e4
        if (buzzerBeepCounter == 0) {
 800784e:	b922      	cbnz	r2, 800785a <_ZN14EasyScreenView15handleTickEventEv+0x7a>
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET);
 8007850:	480b      	ldr	r0, [pc, #44]	@ (8007880 <_ZN14EasyScreenView15handleTickEventEv+0xa0>)
 8007852:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8007856:	f003 f975 	bl	800ab44 <HAL_GPIO_WritePin>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 800785a:	4f0a      	ldr	r7, [pc, #40]	@ (8007884 <_ZN14EasyScreenView15handleTickEventEv+0xa4>)
 800785c:	e02b      	b.n	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
        switch (command) {
 800785e:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8007862:	2b09      	cmp	r3, #9
 8007864:	d827      	bhi.n	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007866:	e8df f013 	tbh	[pc, r3, lsl #1]
 800786a:	000f      	.short	0x000f
 800786c:	020f01ec 	.word	0x020f01ec
 8007870:	01f402ab 	.word	0x01f402ab
 8007874:	02d90207 	.word	0x02d90207
 8007878:	03900370 	.word	0x03900370
 800787c:	03e1      	.short	0x03e1
 800787e:	bf00      	nop
 8007880:	40020c00 	.word	0x40020c00
 8007884:	20002dc0 	.word	0x20002dc0
        return rect.y;
 8007888:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
                int16_t newY = paddle1.getY() + 2;
 800788c:	1c9e      	adds	r6, r3, #2
                if (newY > 198) newY = 198;
 800788e:	b236      	sxth	r6, r6
 8007890:	2ec6      	cmp	r6, #198	@ 0xc6
 8007892:	bfa8      	it	ge
 8007894:	26c6      	movge	r6, #198	@ 0xc6
                if (newY != paddle1.getY()) {
 8007896:	429e      	cmp	r6, r3
 8007898:	d00d      	beq.n	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    paddle1.invalidate();
 800789a:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 800789e:	4640      	mov	r0, r8
 80078a0:	f00f fd4e 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
                    paddle1.moveTo(paddle1.getX(), newY);
 80078a4:	f9b4 10f4 	ldrsh.w	r1, [r4, #244]	@ 0xf4
 80078a8:	4632      	mov	r2, r6
                    paddle2.moveTo(paddle2.getX(), newY);
 80078aa:	4640      	mov	r0, r8
 80078ac:	f7fa f9f3 	bl	8001c96 <_ZN8touchgfx8Drawable6moveToEss>
                    paddle2.invalidate();
 80078b0:	4640      	mov	r0, r8
 80078b2:	f00f fd45 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 80078b6:	2300      	movs	r3, #0
 80078b8:	6838      	ldr	r0, [r7, #0]
 80078ba:	461a      	mov	r2, r3
 80078bc:	f10d 010f 	add.w	r1, sp, #15
 80078c0:	f005 fcad 	bl	800d21e <osMessageQueueGet>
 80078c4:	2800      	cmp	r0, #0
 80078c6:	d0ca      	beq.n	800785e <_ZN14EasyScreenView15handleTickEventEv+0x7e>
    if (!waitingForServe) {
 80078c8:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 80078cc:	f504 56b6 	add.w	r6, r4, #5824	@ 0x16c0
 80078d0:	f504 771c 	add.w	r7, r4, #624	@ 0x270
 80078d4:	2b00      	cmp	r3, #0
 80078d6:	f040 84f4 	bne.w	80082c2 <_ZN14EasyScreenView15handleTickEventEv+0xae2>
        ball.invalidate();
 80078da:	4638      	mov	r0, r7
 80078dc:	f00a fe3c 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        ballX += ballVelX;
 80078e0:	f205 63c4 	addw	r3, r5, #1732	@ 0x6c4
 80078e4:	ed93 6a00 	vldr	s12, [r3]
 80078e8:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 80078ec:	edd3 6a00 	vldr	s13, [r3]
 80078f0:	ee76 6a26 	vadd.f32	s13, s12, s13
        ballY += ballVelY;
 80078f4:	f505 62d9 	add.w	r2, r5, #1736	@ 0x6c8
        ballX += ballVelX;
 80078f8:	edc3 6a00 	vstr	s13, [r3]
        ballY += ballVelY;
 80078fc:	edd2 7a00 	vldr	s15, [r2]
 8007900:	ed96 7a00 	vldr	s14, [r6]
 8007904:	ee37 7a87 	vadd.f32	s14, s15, s14
        if (ballY < 0) {
 8007908:	f04f 0a00 	mov.w	sl, #0
 800790c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8007910:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        ballY += ballVelY;
 8007914:	ed86 7a00 	vstr	s14, [r6]
        if (ballY < 0) {
 8007918:	f140 83dd 	bpl.w	80080d6 <_ZN14EasyScreenView15handleTickEventEv+0x8f6>
            ballY = 0;
 800791c:	f8c6 a000 	str.w	sl, [r6]
            ballVelY = -ballVelY;
 8007920:	eef1 7a67 	vneg.f32	s15, s15
 8007924:	edc2 7a00 	vstr	s15, [r2]
        return rect.x;
 8007928:	f9b4 20f4 	ldrsh.w	r2, [r4, #244]	@ 0xf4
        if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 800792c:	f9b4 30f8 	ldrsh.w	r3, [r4, #248]	@ 0xf8
 8007930:	4413      	add	r3, r2
 8007932:	ee07 3a90 	vmov	s15, r3
 8007936:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballY + ball.getHeight() >= paddle1.getY() &&
 800793a:	eef4 6ae7 	vcmpe.f32	s13, s15
 800793e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007942:	d833      	bhi.n	80079ac <_ZN14EasyScreenView15handleTickEventEv+0x1cc>
            ballX >= paddle1.getX() &&
 8007944:	ee07 2a10 	vmov	s14, r2
 8007948:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
        if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 800794c:	eef4 6ac7 	vcmpe.f32	s13, s14
 8007950:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007954:	db2a      	blt.n	80079ac <_ZN14EasyScreenView15handleTickEventEv+0x1cc>
            ballY + ball.getHeight() >= paddle1.getY() &&
 8007956:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
        return rect.y;
 800795a:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 800795e:	edd6 6a00 	vldr	s13, [r6]
 8007962:	ee07 3a10 	vmov	s14, r3
 8007966:	ee05 2a90 	vmov	s11, r2
 800796a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800796e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8007972:	ee37 7a26 	vadd.f32	s14, s14, s13
            ballX >= paddle1.getX() &&
 8007976:	eeb4 7ae5 	vcmpe.f32	s14, s11
 800797a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800797e:	db15      	blt.n	80079ac <_ZN14EasyScreenView15handleTickEventEv+0x1cc>
            ballY <= paddle1.getY() + paddle1.getHeight()) {
 8007980:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8007984:	4413      	add	r3, r2
 8007986:	ee07 3a10 	vmov	s14, r3
 800798a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            ballY + ball.getHeight() >= paddle1.getY() &&
 800798e:	eef4 6ac7 	vcmpe.f32	s13, s14
 8007992:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007996:	d809      	bhi.n	80079ac <_ZN14EasyScreenView15handleTickEventEv+0x1cc>
            ballX = paddle1.getX() + paddle1.getWidth();
 8007998:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 800799c:	edc3 7a00 	vstr	s15, [r3]
            ballVelX = -ballVelX;
 80079a0:	eeb1 6a46 	vneg.f32	s12, s12
 80079a4:	f205 63c4 	addw	r3, r5, #1732	@ 0x6c4
 80079a8:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 80079ac:	f9b4 0278 	ldrsh.w	r0, [r4, #632]	@ 0x278
        return rect.x;
 80079b0:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
        if (ballX + ball.getWidth() >= paddle2.getX() &&
 80079b4:	ee07 0a90 	vmov	s15, r0
 80079b8:	f205 61bc 	addw	r1, r5, #1724	@ 0x6bc
 80079bc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80079c0:	edd1 6a00 	vldr	s13, [r1]
 80079c4:	ee07 3a90 	vmov	s15, r3
 80079c8:	ee77 6a26 	vadd.f32	s13, s14, s13
 80079cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballY + ball.getHeight() >= paddle2.getY() &&
 80079d0:	eef4 6ae7 	vcmpe.f32	s13, s15
 80079d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079d8:	db3b      	blt.n	8007a52 <_ZN14EasyScreenView15handleTickEventEv+0x272>
            ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 80079da:	f9b4 2124 	ldrsh.w	r2, [r4, #292]	@ 0x124
 80079de:	441a      	add	r2, r3
 80079e0:	ee07 2a90 	vmov	s15, r2
 80079e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        if (ballX + ball.getWidth() >= paddle2.getX() &&
 80079e8:	eef4 6ae7 	vcmpe.f32	s13, s15
 80079ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079f0:	d82f      	bhi.n	8007a52 <_ZN14EasyScreenView15handleTickEventEv+0x272>
            ballY + ball.getHeight() >= paddle2.getY() &&
 80079f2:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
        return rect.y;
 80079f6:	f9b4 c122 	ldrsh.w	ip, [r4, #290]	@ 0x122
 80079fa:	edd6 6a00 	vldr	s13, [r6]
 80079fe:	ee07 2a90 	vmov	s15, r2
 8007a02:	ee06 ca10 	vmov	s12, ip
 8007a06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a0a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8007a0e:	ee77 7aa6 	vadd.f32	s15, s15, s13
            ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8007a12:	eef4 7ac6 	vcmpe.f32	s15, s12
 8007a16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a1a:	db1a      	blt.n	8007a52 <_ZN14EasyScreenView15handleTickEventEv+0x272>
            ballY <= paddle2.getY() + paddle2.getHeight()) {
 8007a1c:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	@ 0x126
 8007a20:	4462      	add	r2, ip
 8007a22:	ee07 2a90 	vmov	s15, r2
 8007a26:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballY + ball.getHeight() >= paddle2.getY() &&
 8007a2a:	eef4 6ae7 	vcmpe.f32	s13, s15
 8007a2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a32:	d80e      	bhi.n	8007a52 <_ZN14EasyScreenView15handleTickEventEv+0x272>
            ballX = paddle2.getX() - ball.getWidth();
 8007a34:	1a1b      	subs	r3, r3, r0
 8007a36:	ee07 3a90 	vmov	s15, r3
 8007a3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballVelX = -ballVelX;
 8007a3e:	f205 63c4 	addw	r3, r5, #1732	@ 0x6c4
            ballX = paddle2.getX() - ball.getWidth();
 8007a42:	edc1 7a00 	vstr	s15, [r1]
            ballVelX = -ballVelX;
 8007a46:	edd3 7a00 	vldr	s15, [r3]
 8007a4a:	eef1 7a67 	vneg.f32	s15, s15
 8007a4e:	edc3 7a00 	vstr	s15, [r3]
        if (ballX < 0) {
 8007a52:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 8007a56:	edd3 7a00 	vldr	s15, [r3]
 8007a5a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a62:	f140 8365 	bpl.w	8008130 <_ZN14EasyScreenView15handleTickEventEv+0x950>
            score2++;
 8007a66:	f8d5 36dc 	ldr.w	r3, [r5, #1756]	@ 0x6dc
            Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007a6a:	4ae7      	ldr	r2, [pc, #924]	@ (8007e08 <_ZN14EasyScreenView15handleTickEventEv+0x628>)
            score2++;
 8007a6c:	3301      	adds	r3, #1
 8007a6e:	f8c5 36dc 	str.w	r3, [r5, #1756]	@ 0x6dc
            Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007a72:	210a      	movs	r1, #10
 8007a74:	f504 7075 	add.w	r0, r4, #980	@ 0x3d4
 8007a78:	f011 ffdc 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
            EasyScreenViewBase::score2.invalidate();
 8007a7c:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 8007a80:	f00f fc5e 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
            buzzerBeepState = true;
 8007a84:	f04f 0801 	mov.w	r8, #1
            buzzerBeepCounter = 18;
 8007a88:	2312      	movs	r3, #18
 8007a8a:	f8c5 36e4 	str.w	r3, [r5, #1764]	@ 0x6e4
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8007a8e:	48df      	ldr	r0, [pc, #892]	@ (8007e0c <_ZN14EasyScreenView15handleTickEventEv+0x62c>)
            buzzerBeepState = true;
 8007a90:	f885 86e8 	strb.w	r8, [r5, #1768]	@ 0x6e8
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8007a94:	4642      	mov	r2, r8
 8007a96:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8007a9a:	f003 f853 	bl	800ab44 <HAL_GPIO_WritePin>
            if (score2 >= 11) {
 8007a9e:	f8d5 36dc 	ldr.w	r3, [r5, #1756]	@ 0x6dc
 8007aa2:	2b0a      	cmp	r3, #10
 8007aa4:	dd05      	ble.n	8007ab2 <_ZN14EasyScreenView15handleTickEventEv+0x2d2>
                presenter->goToEndScreen(2);
 8007aa6:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                gameOver = true;
 8007aa8:	f885 86e0 	strb.w	r8, [r5, #1760]	@ 0x6e0
                presenter->goToEndScreen(2);
 8007aac:	2102      	movs	r1, #2
 8007aae:	f7ff fda7 	bl	8007600 <_ZN19EasyScreenPresenter13goToEndScreenEi>
        visible = vis;
 8007ab2:	2300      	movs	r3, #0
 8007ab4:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
            ball.invalidate();
 8007ab8:	4638      	mov	r0, r7
 8007aba:	f00a fd4d 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            serveDelayTicks = 60;
 8007abe:	233c      	movs	r3, #60	@ 0x3c
 8007ac0:	f8c5 36d0 	str.w	r3, [r5, #1744]	@ 0x6d0
            servingPlayer = 2;
 8007ac4:	2302      	movs	r3, #2
            ballX = paddle2.getX() - ball.getWidth() - 10;
 8007ac6:	f9b4 2278 	ldrsh.w	r2, [r4, #632]	@ 0x278
            servingPlayer = 2;
 8007aca:	f8c5 36d4 	str.w	r3, [r5, #1748]	@ 0x6d4
            ballX = paddle2.getX() - ball.getWidth() - 10;
 8007ace:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 8007ad2:	1a9b      	subs	r3, r3, r2
 8007ad4:	3b0a      	subs	r3, #10
 8007ad6:	ee07 3a90 	vmov	s15, r3
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007ada:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8007ade:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007ae2:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8007ae6:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8007aea:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
            ballX = paddle2.getX() - ball.getWidth() - 10;
 8007aee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007af2:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8007af6:	eba3 0362 	sub.w	r3, r3, r2, asr #1
            waitingForServe = true;
 8007afa:	f04f 0901 	mov.w	r9, #1
            ballX = paddle2.getX() - ball.getWidth() - 10;
 8007afe:	f205 68bc 	addw	r8, r5, #1724	@ 0x6bc
            waitingForServe = true;
 8007b02:	f885 96cc 	strb.w	r9, [r5, #1740]	@ 0x6cc
            ballX = paddle2.getX() - ball.getWidth() - 10;
 8007b06:	edc8 7a00 	vstr	s15, [r8]
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007b0a:	ee07 3a90 	vmov	s15, r3
            lineAngle2 = 0.0f;
 8007b0e:	f505 6bdf 	add.w	fp, r5, #1784	@ 0x6f8
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007b12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            desiredBallVelY2 = 0.0f;
 8007b16:	f505 63de 	add.w	r3, r5, #1776	@ 0x6f0
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007b1a:	edc6 7a00 	vstr	s15, [r6]
            desiredBallVelY2 = 0.0f;
 8007b1e:	f8c3 a000 	str.w	sl, [r3]
            lineAngle2 = 0.0f;
 8007b22:	f8cb a000 	str.w	sl, [fp]
            line1_1.invalidate();
 8007b26:	f504 7a54 	add.w	sl, r4, #848	@ 0x350
 8007b2a:	4650      	mov	r0, sl
 8007b2c:	f00a fd14 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007b30:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 8007b34:	edd8 7a00 	vldr	s15, [r8]
 8007b38:	ee07 3a10 	vmov	s14, r3
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007b3c:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007b40:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007b44:	ee06 3a90 	vmov	s13, r3
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007b48:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8007b4c:	eee7 7a06 	vfma.f32	s15, s14, s12
                        line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007b50:	2321      	movs	r3, #33	@ 0x21
 8007b52:	4650      	mov	r0, sl
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007b54:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8007b58:	ed96 7a00 	vldr	s14, [r6]
                        line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007b5c:	9300      	str	r3, [sp, #0]
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007b5e:	eea6 7a86 	vfma.f32	s14, s13, s12
                        line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007b62:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8007b66:	ee37 7a48 	vsub.f32	s14, s14, s16
 8007b6a:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8007b6e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007b72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b76:	ee17 2a10 	vmov	r2, s14
 8007b7a:	ee17 1a90 	vmov	r1, s15
 8007b7e:	b212      	sxth	r2, r2
 8007b80:	b209      	sxth	r1, r1
 8007b82:	f7fb fae1 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
                        line1_1.setStart(16, 16);
 8007b86:	2210      	movs	r2, #16
 8007b88:	4611      	mov	r1, r2
 8007b8a:	4650      	mov	r0, sl
 8007b8c:	f7ff fd98 	bl	80076c0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                        line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 8007b90:	f8db 0000 	ldr.w	r0, [fp]
 8007b94:	f7f8 fce8 	bl	8000568 <__aeabi_f2d>
 8007b98:	a399      	add	r3, pc, #612	@ (adr r3, 8007e00 <_ZN14EasyScreenView15handleTickEventEv+0x620>)
 8007b9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b9e:	f7f8 fd3b 	bl	8000618 <__aeabi_dmul>
 8007ba2:	4b9b      	ldr	r3, [pc, #620]	@ (8007e10 <_ZN14EasyScreenView15handleTickEventEv+0x630>)
 8007ba4:	2200      	movs	r2, #0
 8007ba6:	f7f8 fe61 	bl	800086c <__aeabi_ddiv>
 8007baa:	f7f8 ffe5 	bl	8000b78 <__aeabi_d2f>
 8007bae:	ee08 0a90 	vmov	s17, r0
 8007bb2:	eeb0 0a68 	vmov.f32	s0, s17
 8007bb6:	f021 f8b3 	bl	8028d20 <cosf>
 8007bba:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8007bbe:	eef0 9a48 	vmov.f32	s19, s16
 8007bc2:	eee0 9a09 	vfma.f32	s19, s0, s18
 8007bc6:	eeb0 0a68 	vmov.f32	s0, s17
 8007bca:	f021 f8ed 	bl	8028da8 <sinf>
 8007bce:	eef0 0a48 	vmov.f32	s1, s16
 8007bd2:	eee0 0a09 	vfma.f32	s1, s0, s18
 8007bd6:	4650      	mov	r0, sl
 8007bd8:	eeb0 0a69 	vmov.f32	s0, s19
 8007bdc:	f7ff fd74 	bl	80076c8 <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8007be0:	f884 9375 	strb.w	r9, [r4, #885]	@ 0x375
                        line1.invalidate();
 8007be4:	4650      	mov	r0, sl
 8007be6:	f00a fcb7 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        ball.moveTo(ballX, ballY);
 8007bea:	ed96 7a00 	vldr	s14, [r6]
 8007bee:	edd8 7a00 	vldr	s15, [r8]
 8007bf2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007bf6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007bfa:	ee17 3a10 	vmov	r3, s14
 8007bfe:	b21a      	sxth	r2, r3
 8007c00:	ee17 3a90 	vmov	r3, s15
 8007c04:	4638      	mov	r0, r7
 8007c06:	b219      	sxth	r1, r3
 8007c08:	f7fa f845 	bl	8001c96 <_ZN8touchgfx8Drawable6moveToEss>
        ball.moveTo(ballX, ballY);
 8007c0c:	ed96 7a00 	vldr	s14, [r6]
 8007c10:	f205 65bc 	addw	r5, r5, #1724	@ 0x6bc
 8007c14:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007c18:	edd5 7a00 	vldr	s15, [r5]
 8007c1c:	ee17 3a10 	vmov	r3, s14
 8007c20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c24:	b21a      	sxth	r2, r3
 8007c26:	ee17 3a90 	vmov	r3, s15
 8007c2a:	4638      	mov	r0, r7
 8007c2c:	b219      	sxth	r1, r3
 8007c2e:	f7fa f832 	bl	8001c96 <_ZN8touchgfx8Drawable6moveToEss>
        ball.invalidate();
 8007c32:	4638      	mov	r0, r7
 8007c34:	f00a fc90 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
}
 8007c38:	b005      	add	sp, #20
 8007c3a:	ecbd 8b04 	vpop	{d8-d9}
 8007c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return rect.y;
 8007c42:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
                int16_t newY = paddle1.getY() - 2;
 8007c46:	1e9e      	subs	r6, r3, #2
                if (newY < 2) newY = 2;
 8007c48:	b236      	sxth	r6, r6
 8007c4a:	2e02      	cmp	r6, #2
 8007c4c:	bfb8      	it	lt
 8007c4e:	2602      	movlt	r6, #2
 8007c50:	e621      	b.n	8007896 <_ZN14EasyScreenView15handleTickEventEv+0xb6>
 8007c52:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
                int16_t newY = paddle2.getY() + 2;
 8007c56:	1c9e      	adds	r6, r3, #2
                if (newY > 198) newY = 198;
 8007c58:	b236      	sxth	r6, r6
 8007c5a:	2ec6      	cmp	r6, #198	@ 0xc6
 8007c5c:	bfa8      	it	ge
 8007c5e:	26c6      	movge	r6, #198	@ 0xc6
                if (newY != paddle2.getY()) {
 8007c60:	429e      	cmp	r6, r3
 8007c62:	f43f ae28 	beq.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    paddle2.invalidate();
 8007c66:	f504 788e 	add.w	r8, r4, #284	@ 0x11c
 8007c6a:	4640      	mov	r0, r8
 8007c6c:	f00f fb68 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
                    paddle2.moveTo(paddle2.getX(), newY);
 8007c70:	f9b4 1120 	ldrsh.w	r1, [r4, #288]	@ 0x120
 8007c74:	4632      	mov	r2, r6
 8007c76:	e618      	b.n	80078aa <_ZN14EasyScreenView15handleTickEventEv+0xca>
 8007c78:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
                int16_t newY = paddle2.getY() - 2;
 8007c7c:	1e9e      	subs	r6, r3, #2
                if (newY < 2) newY = 2;
 8007c7e:	b236      	sxth	r6, r6
 8007c80:	2e02      	cmp	r6, #2
 8007c82:	bfb8      	it	lt
 8007c84:	2602      	movlt	r6, #2
                if (newY != paddle2.getY()) {
 8007c86:	e7eb      	b.n	8007c60 <_ZN14EasyScreenView15handleTickEventEv+0x480>
                if (waitingForServe && servingPlayer == 1) {
 8007c88:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007c8c:	2b00      	cmp	r3, #0
 8007c8e:	f43f ae12 	beq.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007c92:	f8d5 86d4 	ldr.w	r8, [r5, #1748]	@ 0x6d4
 8007c96:	f1b8 0f01 	cmp.w	r8, #1
 8007c9a:	f47f ae0c 	bne.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    desiredBallVelY1 -= 0.2f;
 8007c9e:	f205 63ec 	addw	r3, r5, #1772	@ 0x6ec
 8007ca2:	ed93 0a00 	vldr	s0, [r3]
 8007ca6:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8007e14 <_ZN14EasyScreenView15handleTickEventEv+0x634>
 8007caa:	ee30 0a67 	vsub.f32	s0, s0, s15
                    if (desiredBallVelY1 < -2.0f) desiredBallVelY1 = -2.0f;
 8007cae:	eef8 7a00 	vmov.f32	s15, #128	@ 0xc0000000 -2.0
 8007cb2:	eeb4 0a67 	vcmp.f32	s0, s15
 8007cb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007cba:	bf48      	it	mi
 8007cbc:	eeb0 0a67 	vmovmi.f32	s0, s15
 8007cc0:	ed83 0a00 	vstr	s0, [r3]
                    lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 8007cc4:	eef0 0a00 	vmov.f32	s1, #0	@ 0x40000000  2.0
                    lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 8007cc8:	f021 f809 	bl	8028cde <atan2f>
 8007ccc:	eddf 7a52 	vldr	s15, [pc, #328]	@ 8007e18 <_ZN14EasyScreenView15handleTickEventEv+0x638>
 8007cd0:	ee60 7a27 	vmul.f32	s15, s0, s15
 8007cd4:	f205 69f4 	addw	r9, r5, #1780	@ 0x6f4
 8007cd8:	ee17 0a90 	vmov	r0, s15
 8007cdc:	f7f8 fc44 	bl	8000568 <__aeabi_f2d>
 8007ce0:	a347      	add	r3, pc, #284	@ (adr r3, 8007e00 <_ZN14EasyScreenView15handleTickEventEv+0x620>)
 8007ce2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ce6:	f7f8 fdc1 	bl	800086c <__aeabi_ddiv>
 8007cea:	f7f8 ff45 	bl	8000b78 <__aeabi_d2f>
                    line1.invalidate();
 8007cee:	f504 7633 	add.w	r6, r4, #716	@ 0x2cc
                    lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 8007cf2:	f8c9 0000 	str.w	r0, [r9]
                    line1.invalidate();
 8007cf6:	4630      	mov	r0, r6
 8007cf8:	f00a fc2e 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007cfc:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 8007d00:	ee07 3a10 	vmov	s14, r3
 8007d04:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 8007d08:	edd3 7a00 	vldr	s15, [r3]
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007d0c:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007d10:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007d14:	ee06 3a90 	vmov	s13, r3
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007d18:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007d1c:	f504 53b6 	add.w	r3, r4, #5824	@ 0x16c0
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007d20:	eee7 7a06 	vfma.f32	s15, s14, s12
                                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007d24:	4630      	mov	r0, r6
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007d26:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8007d2a:	ed93 7a00 	vldr	s14, [r3]
 8007d2e:	eea6 7a86 	vfma.f32	s14, s13, s12
                                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007d32:	2321      	movs	r3, #33	@ 0x21
 8007d34:	9300      	str	r3, [sp, #0]
 8007d36:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8007d3a:	ee37 7a48 	vsub.f32	s14, s14, s16
 8007d3e:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8007d42:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007d46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d4a:	ee17 2a10 	vmov	r2, s14
 8007d4e:	ee17 1a90 	vmov	r1, s15
 8007d52:	b212      	sxth	r2, r2
 8007d54:	b209      	sxth	r1, r1
 8007d56:	f7fb f9f7 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
                                        line1.setStart(16, 16);
 8007d5a:	2210      	movs	r2, #16
 8007d5c:	4611      	mov	r1, r2
 8007d5e:	4630      	mov	r0, r6
 8007d60:	f7ff fcae 	bl	80076c0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                                        line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 8007d64:	f8d9 0000 	ldr.w	r0, [r9]
 8007d68:	f7f8 fbfe 	bl	8000568 <__aeabi_f2d>
 8007d6c:	a324      	add	r3, pc, #144	@ (adr r3, 8007e00 <_ZN14EasyScreenView15handleTickEventEv+0x620>)
 8007d6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d72:	f7f8 fc51 	bl	8000618 <__aeabi_dmul>
 8007d76:	4b26      	ldr	r3, [pc, #152]	@ (8007e10 <_ZN14EasyScreenView15handleTickEventEv+0x630>)
 8007d78:	2200      	movs	r2, #0
 8007d7a:	f7f8 fd77 	bl	800086c <__aeabi_ddiv>
 8007d7e:	f7f8 fefb 	bl	8000b78 <__aeabi_d2f>
 8007d82:	ee08 0a90 	vmov	s17, r0
 8007d86:	eeb0 0a68 	vmov.f32	s0, s17
 8007d8a:	f020 ffc9 	bl	8028d20 <cosf>
 8007d8e:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8007d92:	eef0 9a48 	vmov.f32	s19, s16
 8007d96:	eee0 9a09 	vfma.f32	s19, s0, s18
 8007d9a:	eeb0 0a68 	vmov.f32	s0, s17
 8007d9e:	f021 f803 	bl	8028da8 <sinf>
 8007da2:	eef0 0a48 	vmov.f32	s1, s16
 8007da6:	eee0 0a09 	vfma.f32	s1, s0, s18
 8007daa:	4630      	mov	r0, r6
 8007dac:	eeb0 0a69 	vmov.f32	s0, s19
 8007db0:	f7ff fc8a 	bl	80076c8 <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
        visible = vis;
 8007db4:	f884 82f1 	strb.w	r8, [r4, #753]	@ 0x2f1
                                        line1_1.invalidate();
 8007db8:	4630      	mov	r0, r6
                    line1_1.invalidate();
 8007dba:	f00a fbcd 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8007dbe:	e57a      	b.n	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                if (waitingForServe && servingPlayer == 1) {
 8007dc0:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007dc4:	2b00      	cmp	r3, #0
 8007dc6:	f43f ad76 	beq.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007dca:	f8d5 86d4 	ldr.w	r8, [r5, #1748]	@ 0x6d4
 8007dce:	f1b8 0f01 	cmp.w	r8, #1
 8007dd2:	f47f ad70 	bne.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    desiredBallVelY1 += 0.2f;
 8007dd6:	f205 63ec 	addw	r3, r5, #1772	@ 0x6ec
 8007dda:	ed93 0a00 	vldr	s0, [r3]
 8007dde:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8007e14 <_ZN14EasyScreenView15handleTickEventEv+0x634>
 8007de2:	ee30 0a27 	vadd.f32	s0, s0, s15
                    if (desiredBallVelY1 > 2.0f) desiredBallVelY1 = 2.0f;
 8007de6:	eef0 0a00 	vmov.f32	s1, #0	@ 0x40000000  2.0
 8007dea:	eeb4 0a60 	vcmp.f32	s0, s1
 8007dee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007df2:	bfc8      	it	gt
 8007df4:	eeb0 0a60 	vmovgt.f32	s0, s1
 8007df8:	ed83 0a00 	vstr	s0, [r3]
 8007dfc:	e764      	b.n	8007cc8 <_ZN14EasyScreenView15handleTickEventEv+0x4e8>
 8007dfe:	bf00      	nop
 8007e00:	54442d18 	.word	0x54442d18
 8007e04:	400921fb 	.word	0x400921fb
 8007e08:	0802c389 	.word	0x0802c389
 8007e0c:	40020c00 	.word	0x40020c00
 8007e10:	40668000 	.word	0x40668000
 8007e14:	3e4ccccd 	.word	0x3e4ccccd
 8007e18:	43340000 	.word	0x43340000
                if (waitingForServe && servingPlayer == 2) {
 8007e1c:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007e20:	2b00      	cmp	r3, #0
 8007e22:	f43f ad48 	beq.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007e26:	f8d5 36d4 	ldr.w	r3, [r5, #1748]	@ 0x6d4
 8007e2a:	2b02      	cmp	r3, #2
 8007e2c:	f47f ad43 	bne.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    desiredBallVelY2 -= 0.2f;
 8007e30:	f505 63de 	add.w	r3, r5, #1776	@ 0x6f0
 8007e34:	ed93 0a00 	vldr	s0, [r3]
 8007e38:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8007e14 <_ZN14EasyScreenView15handleTickEventEv+0x634>
 8007e3c:	ee30 0a67 	vsub.f32	s0, s0, s15
                    if (desiredBallVelY2 < -2.0f) desiredBallVelY2 = -2.0f;
 8007e40:	eef8 0a00 	vmov.f32	s1, #128	@ 0xc0000000 -2.0
 8007e44:	eeb4 0a60 	vcmp.f32	s0, s1
 8007e48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e4c:	bf48      	it	mi
 8007e4e:	eeb0 0a60 	vmovmi.f32	s0, s1
 8007e52:	ed83 0a00 	vstr	s0, [r3]
                    lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 8007e56:	f020 ff42 	bl	8028cde <atan2f>
 8007e5a:	ed5f 7a11 	vldr	s15, [pc, #-68]	@ 8007e18 <_ZN14EasyScreenView15handleTickEventEv+0x638>
 8007e5e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8007e62:	f505 68df 	add.w	r8, r5, #1784	@ 0x6f8
 8007e66:	ee17 0a90 	vmov	r0, s15
 8007e6a:	f7f8 fb7d 	bl	8000568 <__aeabi_f2d>
 8007e6e:	a3aa      	add	r3, pc, #680	@ (adr r3, 8008118 <_ZN14EasyScreenView15handleTickEventEv+0x938>)
 8007e70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e74:	f7f8 fcfa 	bl	800086c <__aeabi_ddiv>
 8007e78:	f7f8 fe7e 	bl	8000b78 <__aeabi_d2f>
                    line1_1.invalidate();
 8007e7c:	f504 7654 	add.w	r6, r4, #848	@ 0x350
                    lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 8007e80:	f8c8 0000 	str.w	r0, [r8]
                    line1_1.invalidate();
 8007e84:	4630      	mov	r0, r6
 8007e86:	f00a fb67 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007e8a:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 8007e8e:	ee07 3a10 	vmov	s14, r3
 8007e92:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 8007e96:	edd3 7a00 	vldr	s15, [r3]
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007e9a:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007e9e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007ea2:	ee06 3a90 	vmov	s13, r3
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007ea6:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007eaa:	f504 53b6 	add.w	r3, r4, #5824	@ 0x16c0
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007eae:	eee7 7a06 	vfma.f32	s15, s14, s12
                                        line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007eb2:	4630      	mov	r0, r6
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007eb4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8007eb8:	ed93 7a00 	vldr	s14, [r3]
 8007ebc:	eea6 7a86 	vfma.f32	s14, s13, s12
                                        line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007ec0:	2321      	movs	r3, #33	@ 0x21
 8007ec2:	9300      	str	r3, [sp, #0]
 8007ec4:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8007ec8:	ee37 7a48 	vsub.f32	s14, s14, s16
 8007ecc:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8007ed0:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007ed4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ed8:	ee17 2a10 	vmov	r2, s14
 8007edc:	ee17 1a90 	vmov	r1, s15
 8007ee0:	b212      	sxth	r2, r2
 8007ee2:	b209      	sxth	r1, r1
 8007ee4:	f7fb f930 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
                                        line1_1.setStart(16, 16);
 8007ee8:	2210      	movs	r2, #16
 8007eea:	4611      	mov	r1, r2
 8007eec:	4630      	mov	r0, r6
 8007eee:	f7ff fbe7 	bl	80076c0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                                        line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 8007ef2:	f8d8 0000 	ldr.w	r0, [r8]
 8007ef6:	f7f8 fb37 	bl	8000568 <__aeabi_f2d>
 8007efa:	a387      	add	r3, pc, #540	@ (adr r3, 8008118 <_ZN14EasyScreenView15handleTickEventEv+0x938>)
 8007efc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f00:	f7f8 fb8a 	bl	8000618 <__aeabi_dmul>
 8007f04:	4b86      	ldr	r3, [pc, #536]	@ (8008120 <_ZN14EasyScreenView15handleTickEventEv+0x940>)
 8007f06:	2200      	movs	r2, #0
 8007f08:	f7f8 fcb0 	bl	800086c <__aeabi_ddiv>
 8007f0c:	f7f8 fe34 	bl	8000b78 <__aeabi_d2f>
 8007f10:	ee08 0a90 	vmov	s17, r0
 8007f14:	eeb0 0a68 	vmov.f32	s0, s17
 8007f18:	f020 ff02 	bl	8028d20 <cosf>
 8007f1c:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8007f20:	eef0 9a48 	vmov.f32	s19, s16
 8007f24:	eee0 9a09 	vfma.f32	s19, s0, s18
 8007f28:	eeb0 0a68 	vmov.f32	s0, s17
 8007f2c:	f020 ff3c 	bl	8028da8 <sinf>
 8007f30:	eef0 0a48 	vmov.f32	s1, s16
 8007f34:	eee0 0a09 	vfma.f32	s1, s0, s18
 8007f38:	4630      	mov	r0, r6
 8007f3a:	eeb0 0a69 	vmov.f32	s0, s19
 8007f3e:	f7ff fbc3 	bl	80076c8 <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8007f42:	2301      	movs	r3, #1
 8007f44:	f884 3375 	strb.w	r3, [r4, #885]	@ 0x375
 8007f48:	e736      	b.n	8007db8 <_ZN14EasyScreenView15handleTickEventEv+0x5d8>
                if (waitingForServe && servingPlayer == 2) {
 8007f4a:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007f4e:	2b00      	cmp	r3, #0
 8007f50:	f43f acb1 	beq.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007f54:	f8d5 36d4 	ldr.w	r3, [r5, #1748]	@ 0x6d4
 8007f58:	2b02      	cmp	r3, #2
 8007f5a:	f47f acac 	bne.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    desiredBallVelY2 += 0.2f;
 8007f5e:	f505 63de 	add.w	r3, r5, #1776	@ 0x6f0
 8007f62:	ed93 0a00 	vldr	s0, [r3]
 8007f66:	eddf 7a6f 	vldr	s15, [pc, #444]	@ 8008124 <_ZN14EasyScreenView15handleTickEventEv+0x944>
 8007f6a:	ee30 0a27 	vadd.f32	s0, s0, s15
                    if (desiredBallVelY2 > 2.0f) desiredBallVelY2 = 2.0f;
 8007f6e:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8007f72:	eeb4 0a67 	vcmp.f32	s0, s15
 8007f76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f7a:	bfc8      	it	gt
 8007f7c:	eeb0 0a67 	vmovgt.f32	s0, s15
 8007f80:	ed83 0a00 	vstr	s0, [r3]
                    lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 8007f84:	eef8 0a00 	vmov.f32	s1, #128	@ 0xc0000000 -2.0
 8007f88:	e765      	b.n	8007e56 <_ZN14EasyScreenView15handleTickEventEv+0x676>
                if (waitingForServe && servingPlayer == 1) {
 8007f8a:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007f8e:	2b00      	cmp	r3, #0
 8007f90:	f43f ac91 	beq.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007f94:	f8d5 36d4 	ldr.w	r3, [r5, #1748]	@ 0x6d4
 8007f98:	2b01      	cmp	r3, #1
 8007f9a:	f47f ac8c 	bne.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    waitingForServe = false;
 8007f9e:	2300      	movs	r3, #0
 8007fa0:	f885 36cc 	strb.w	r3, [r5, #1740]	@ 0x6cc
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 8007fa4:	f205 63ec 	addw	r3, r5, #1772	@ 0x6ec
 8007fa8:	ed93 8a00 	vldr	s16, [r3]
 8007fac:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8007fb0:	eee8 7a48 	vfms.f32	s15, s16, s16
 8007fb4:	ee17 0a90 	vmov	r0, s15
 8007fb8:	f7f8 fad6 	bl	8000568 <__aeabi_f2d>
 8007fbc:	ec41 0b10 	vmov	d0, r0, r1
 8007fc0:	f020 fe61 	bl	8028c86 <sqrt>
 8007fc4:	ec51 0b10 	vmov	r0, r1, d0
 8007fc8:	f7f8 fdd6 	bl	8000b78 <__aeabi_d2f>
 8007fcc:	ee07 0a90 	vmov	s15, r0
                    if (ballVelX < 0.5f) {
 8007fd0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 8007fd4:	f205 63c4 	addw	r3, r5, #1732	@ 0x6c4
                    if (ballVelX < 0.5f) {
 8007fd8:	eef4 7ac7 	vcmpe.f32	s15, s14
                    ballVelY = desiredBallVelY1;
 8007fdc:	f505 62d9 	add.w	r2, r5, #1736	@ 0x6c8
                    if (ballVelX < 0.5f) {
 8007fe0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 8007fe4:	6018      	str	r0, [r3, #0]
                    ballVelY = desiredBallVelY1;
 8007fe6:	ed82 8a00 	vstr	s16, [r2]
                    if (ballVelX < 0.5f) {
 8007fea:	d50e      	bpl.n	800800a <_ZN14EasyScreenView15handleTickEventEv+0x82a>
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8007fec:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8007ff0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                        ballVelX = 0.5f;
 8007ff4:	ed83 7a00 	vstr	s14, [r3]
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8007ff8:	db14      	blt.n	8008024 <_ZN14EasyScreenView15handleTickEventEv+0x844>
 8007ffa:	a143      	add	r1, pc, #268	@ (adr r1, 8008108 <_ZN14EasyScreenView15handleTickEventEv+0x928>)
 8007ffc:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008000:	f7f8 fdba 	bl	8000b78 <__aeabi_d2f>
 8008004:	f505 66d9 	add.w	r6, r5, #1736	@ 0x6c8
 8008008:	6030      	str	r0, [r6, #0]
 800800a:	2301      	movs	r3, #1
 800800c:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
                    ball.invalidate();
 8008010:	f504 701c 	add.w	r0, r4, #624	@ 0x270
 8008014:	f00a faa0 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8008018:	2300      	movs	r3, #0
 800801a:	f884 32f1 	strb.w	r3, [r4, #753]	@ 0x2f1
                    line1.invalidate();
 800801e:	f504 7033 	add.w	r0, r4, #716	@ 0x2cc
 8008022:	e6ca      	b.n	8007dba <_ZN14EasyScreenView15handleTickEventEv+0x5da>
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8008024:	a13a      	add	r1, pc, #232	@ (adr r1, 8008110 <_ZN14EasyScreenView15handleTickEventEv+0x930>)
 8008026:	e9d1 0100 	ldrd	r0, r1, [r1]
 800802a:	e7e9      	b.n	8008000 <_ZN14EasyScreenView15handleTickEventEv+0x820>
                if (waitingForServe && servingPlayer == 2) {
 800802c:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8008030:	2b00      	cmp	r3, #0
 8008032:	f43f ac40 	beq.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8008036:	f8d5 36d4 	ldr.w	r3, [r5, #1748]	@ 0x6d4
 800803a:	2b02      	cmp	r3, #2
 800803c:	f47f ac3b 	bne.w	80078b6 <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    waitingForServe = false;
 8008040:	2300      	movs	r3, #0
 8008042:	f885 36cc 	strb.w	r3, [r5, #1740]	@ 0x6cc
                    ballVelX = -sqrt(speed * speed - desiredBallVelY2 * desiredBallVelY2);
 8008046:	f505 63de 	add.w	r3, r5, #1776	@ 0x6f0
 800804a:	ed93 8a00 	vldr	s16, [r3]
 800804e:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8008052:	eee8 7a48 	vfms.f32	s15, s16, s16
 8008056:	ee17 0a90 	vmov	r0, s15
 800805a:	f7f8 fa85 	bl	8000568 <__aeabi_f2d>
 800805e:	ec41 0b10 	vmov	d0, r0, r1
 8008062:	f020 fe10 	bl	8028c86 <sqrt>
 8008066:	ec51 0b10 	vmov	r0, r1, d0
 800806a:	f7f8 fd85 	bl	8000b78 <__aeabi_d2f>
 800806e:	ee07 0a90 	vmov	s15, r0
 8008072:	f205 63c4 	addw	r3, r5, #1732	@ 0x6c4
 8008076:	eeb1 7a67 	vneg.f32	s14, s15
 800807a:	ed83 7a00 	vstr	s14, [r3]
                    if (ballVelX > -0.5f) {
 800807e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8008082:	eef4 7ac7 	vcmpe.f32	s15, s14
                    ballVelY = desiredBallVelY2;
 8008086:	f505 62d9 	add.w	r2, r5, #1736	@ 0x6c8
                    if (ballVelX > -0.5f) {
 800808a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                    ballVelY = desiredBallVelY2;
 800808e:	ed82 8a00 	vstr	s16, [r2]
                    if (ballVelX > -0.5f) {
 8008092:	d50f      	bpl.n	80080b4 <_ZN14EasyScreenView15handleTickEventEv+0x8d4>
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8008094:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
                        ballVelX = -0.5f;
 8008098:	f04f 423f 	mov.w	r2, #3204448256	@ 0xbf000000
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800809c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                        ballVelX = -0.5f;
 80080a0:	601a      	str	r2, [r3, #0]
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 80080a2:	db14      	blt.n	80080ce <_ZN14EasyScreenView15handleTickEventEv+0x8ee>
 80080a4:	a118      	add	r1, pc, #96	@ (adr r1, 8008108 <_ZN14EasyScreenView15handleTickEventEv+0x928>)
 80080a6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80080aa:	f7f8 fd65 	bl	8000b78 <__aeabi_d2f>
 80080ae:	f505 66d9 	add.w	r6, r5, #1736	@ 0x6c8
 80080b2:	6030      	str	r0, [r6, #0]
 80080b4:	2301      	movs	r3, #1
 80080b6:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
                    ball.invalidate();
 80080ba:	f504 701c 	add.w	r0, r4, #624	@ 0x270
 80080be:	f00a fa4b 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 80080c2:	2300      	movs	r3, #0
 80080c4:	f884 3375 	strb.w	r3, [r4, #885]	@ 0x375
                    line1_1.invalidate();
 80080c8:	f504 7054 	add.w	r0, r4, #848	@ 0x350
 80080cc:	e675      	b.n	8007dba <_ZN14EasyScreenView15handleTickEventEv+0x5da>
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 80080ce:	a110      	add	r1, pc, #64	@ (adr r1, 8008110 <_ZN14EasyScreenView15handleTickEventEv+0x930>)
 80080d0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80080d4:	e7e9      	b.n	80080aa <_ZN14EasyScreenView15handleTickEventEv+0x8ca>
        return rect.height;
 80080d6:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
        } else if (ballY + ball.getHeight() > 240) {
 80080da:	ee05 3a90 	vmov	s11, r3
 80080de:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80080e2:	ee35 7a87 	vadd.f32	s14, s11, s14
 80080e6:	eddf 5a10 	vldr	s11, [pc, #64]	@ 8008128 <_ZN14EasyScreenView15handleTickEventEv+0x948>
 80080ea:	eeb4 7ae5 	vcmpe.f32	s14, s11
 80080ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80080f2:	f77f ac19 	ble.w	8007928 <_ZN14EasyScreenView15handleTickEventEv+0x148>
            ballY = 240 - ball.getHeight();
 80080f6:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 80080fa:	ee07 3a10 	vmov	s14, r3
 80080fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008102:	ed86 7a00 	vstr	s14, [r6]
 8008106:	e40b      	b.n	8007920 <_ZN14EasyScreenView15handleTickEventEv+0x140>
 8008108:	b14f4eda 	.word	0xb14f4eda
 800810c:	3ffefbde 	.word	0x3ffefbde
 8008110:	b14f4eda 	.word	0xb14f4eda
 8008114:	bffefbde 	.word	0xbffefbde
 8008118:	54442d18 	.word	0x54442d18
 800811c:	400921fb 	.word	0x400921fb
 8008120:	40668000 	.word	0x40668000
 8008124:	3e4ccccd 	.word	0x3e4ccccd
 8008128:	43700000 	.word	0x43700000
 800812c:	43a00000 	.word	0x43a00000
        } else if (ballX + ball.getWidth() > 320) {
 8008130:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008134:	ed5f 7a03 	vldr	s15, [pc, #-12]	@ 800812c <_ZN14EasyScreenView15handleTickEventEv+0x94c>
 8008138:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800813c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008140:	f77f ad64 	ble.w	8007c0c <_ZN14EasyScreenView15handleTickEventEv+0x42c>
            score1++;
 8008144:	f8d5 36d8 	ldr.w	r3, [r5, #1752]	@ 0x6d8
            Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008148:	4ae5      	ldr	r2, [pc, #916]	@ (80084e0 <_ZN14EasyScreenView15handleTickEventEv+0xd00>)
            score1++;
 800814a:	3301      	adds	r3, #1
 800814c:	f8c5 36d8 	str.w	r3, [r5, #1752]	@ 0x6d8
            Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008150:	210a      	movs	r1, #10
 8008152:	f504 707a 	add.w	r0, r4, #1000	@ 0x3e8
 8008156:	f011 fc6d 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
            EasyScreenViewBase::score1.invalidate();
 800815a:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 800815e:	f00f f8ef 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
            buzzerBeepState = true;
 8008162:	f04f 0801 	mov.w	r8, #1
            buzzerBeepCounter = 18;
 8008166:	2312      	movs	r3, #18
 8008168:	f8c5 36e4 	str.w	r3, [r5, #1764]	@ 0x6e4
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 800816c:	48dd      	ldr	r0, [pc, #884]	@ (80084e4 <_ZN14EasyScreenView15handleTickEventEv+0xd04>)
            buzzerBeepState = true;
 800816e:	f885 86e8 	strb.w	r8, [r5, #1768]	@ 0x6e8
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8008172:	4642      	mov	r2, r8
 8008174:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008178:	f002 fce4 	bl	800ab44 <HAL_GPIO_WritePin>
            if (score1 >= 11) {
 800817c:	f8d5 36d8 	ldr.w	r3, [r5, #1752]	@ 0x6d8
 8008180:	2b0a      	cmp	r3, #10
 8008182:	dd05      	ble.n	8008190 <_ZN14EasyScreenView15handleTickEventEv+0x9b0>
                presenter->goToEndScreen(1);
 8008184:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                gameOver = true;
 8008186:	f885 86e0 	strb.w	r8, [r5, #1760]	@ 0x6e0
                presenter->goToEndScreen(1);
 800818a:	4641      	mov	r1, r8
 800818c:	f7ff fa38 	bl	8007600 <_ZN19EasyScreenPresenter13goToEndScreenEi>
        visible = vis;
 8008190:	2300      	movs	r3, #0
 8008192:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
            ball.invalidate();
 8008196:	4638      	mov	r0, r7
 8008198:	f00a f9de 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            serveDelayTicks = 60;
 800819c:	233c      	movs	r3, #60	@ 0x3c
            ballX = paddle1.getX() + paddle1.getWidth() + 10;
 800819e:	f9b4 20f8 	ldrsh.w	r2, [r4, #248]	@ 0xf8
            serveDelayTicks = 60;
 80081a2:	f8c5 36d0 	str.w	r3, [r5, #1744]	@ 0x6d0
            ballX = paddle1.getX() + paddle1.getWidth() + 10;
 80081a6:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 80081aa:	4413      	add	r3, r2
 80081ac:	330a      	adds	r3, #10
 80081ae:	ee07 3a90 	vmov	s15, r3
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 80081b2:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 80081b6:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80081ba:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 80081be:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80081c2:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
            ballX = paddle1.getX() + paddle1.getWidth() + 10;
 80081c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 80081ca:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80081ce:	eba3 0362 	sub.w	r3, r3, r2, asr #1
            waitingForServe = true;
 80081d2:	f04f 0901 	mov.w	r9, #1
            ballX = paddle1.getX() + paddle1.getWidth() + 10;
 80081d6:	f205 68bc 	addw	r8, r5, #1724	@ 0x6bc
            waitingForServe = true;
 80081da:	f885 96cc 	strb.w	r9, [r5, #1740]	@ 0x6cc
            servingPlayer = 1;
 80081de:	f8c5 96d4 	str.w	r9, [r5, #1748]	@ 0x6d4
            ballX = paddle1.getX() + paddle1.getWidth() + 10;
 80081e2:	edc8 7a00 	vstr	s15, [r8]
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 80081e6:	ee07 3a90 	vmov	s15, r3
            lineAngle1 = 0.0f;
 80081ea:	f205 6bf4 	addw	fp, r5, #1780	@ 0x6f4
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 80081ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            desiredBallVelY1 = 0.0f;
 80081f2:	f205 63ec 	addw	r3, r5, #1772	@ 0x6ec
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 80081f6:	edc6 7a00 	vstr	s15, [r6]
            desiredBallVelY1 = 0.0f;
 80081fa:	f8c3 a000 	str.w	sl, [r3]
            lineAngle1 = 0.0f;
 80081fe:	f8cb a000 	str.w	sl, [fp]
            line1.invalidate();
 8008202:	f504 7a33 	add.w	sl, r4, #716	@ 0x2cc
 8008206:	4650      	mov	r0, sl
 8008208:	f00a f9a6 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800820c:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 8008210:	edd8 7a00 	vldr	s15, [r8]
 8008214:	ee07 3a10 	vmov	s14, r3
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008218:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800821c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008220:	ee06 3a90 	vmov	s13, r3
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8008224:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8008228:	eee7 7a06 	vfma.f32	s15, s14, s12
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800822c:	2321      	movs	r3, #33	@ 0x21
 800822e:	4650      	mov	r0, sl
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008230:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008234:	ed96 7a00 	vldr	s14, [r6]
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8008238:	9300      	str	r3, [sp, #0]
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800823a:	eea6 7a86 	vfma.f32	s14, s13, s12
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800823e:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8008242:	ee37 7a48 	vsub.f32	s14, s14, s16
 8008246:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800824a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800824e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008252:	ee17 2a10 	vmov	r2, s14
 8008256:	ee17 1a90 	vmov	r1, s15
 800825a:	b212      	sxth	r2, r2
 800825c:	b209      	sxth	r1, r1
 800825e:	f7fa ff73 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
                        line1.setStart(16, 16);
 8008262:	2210      	movs	r2, #16
 8008264:	4611      	mov	r1, r2
 8008266:	4650      	mov	r0, sl
 8008268:	f7ff fa2a 	bl	80076c0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                        line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 800826c:	f8db 0000 	ldr.w	r0, [fp]
 8008270:	f7f8 f97a 	bl	8000568 <__aeabi_f2d>
 8008274:	a398      	add	r3, pc, #608	@ (adr r3, 80084d8 <_ZN14EasyScreenView15handleTickEventEv+0xcf8>)
 8008276:	e9d3 2300 	ldrd	r2, r3, [r3]
 800827a:	f7f8 f9cd 	bl	8000618 <__aeabi_dmul>
 800827e:	4b9a      	ldr	r3, [pc, #616]	@ (80084e8 <_ZN14EasyScreenView15handleTickEventEv+0xd08>)
 8008280:	2200      	movs	r2, #0
 8008282:	f7f8 faf3 	bl	800086c <__aeabi_ddiv>
 8008286:	f7f8 fc77 	bl	8000b78 <__aeabi_d2f>
 800828a:	ee08 0a90 	vmov	s17, r0
 800828e:	eeb0 0a68 	vmov.f32	s0, s17
 8008292:	f020 fd45 	bl	8028d20 <cosf>
 8008296:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 800829a:	eef0 9a48 	vmov.f32	s19, s16
 800829e:	eee0 9a09 	vfma.f32	s19, s0, s18
 80082a2:	eeb0 0a68 	vmov.f32	s0, s17
 80082a6:	f020 fd7f 	bl	8028da8 <sinf>
 80082aa:	eef0 0a48 	vmov.f32	s1, s16
 80082ae:	eee0 0a09 	vfma.f32	s1, s0, s18
 80082b2:	4650      	mov	r0, sl
 80082b4:	eeb0 0a69 	vmov.f32	s0, s19
 80082b8:	f7ff fa06 	bl	80076c8 <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 80082bc:	f884 92f1 	strb.w	r9, [r4, #753]	@ 0x2f1
 80082c0:	e490      	b.n	8007be4 <_ZN14EasyScreenView15handleTickEventEv+0x404>
        if (serveDelayTicks > 0) {
 80082c2:	f8d5 36d0 	ldr.w	r3, [r5, #1744]	@ 0x6d0
 80082c6:	2b00      	cmp	r3, #0
 80082c8:	dd09      	ble.n	80082de <_ZN14EasyScreenView15handleTickEventEv+0xafe>
            serveDelayTicks--;
 80082ca:	3b01      	subs	r3, #1
 80082cc:	f8c5 36d0 	str.w	r3, [r5, #1744]	@ 0x6d0
            if (serveDelayTicks == 0) {
 80082d0:	b92b      	cbnz	r3, 80082de <_ZN14EasyScreenView15handleTickEventEv+0xafe>
 80082d2:	2301      	movs	r3, #1
 80082d4:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
                ball.invalidate();
 80082d8:	4638      	mov	r0, r7
 80082da:	f00a f93d 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        if (servingPlayer == 1) {
 80082de:	f8d5 86d4 	ldr.w	r8, [r5, #1748]	@ 0x6d4
 80082e2:	f1b8 0f01 	cmp.w	r8, #1
 80082e6:	d179      	bne.n	80083dc <_ZN14EasyScreenView15handleTickEventEv+0xbfc>
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 80082e8:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 80082ec:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80082f0:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 80082f4:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80082f8:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
 80082fc:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8008300:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8008304:	ee07 3a90 	vmov	s15, r3
 8008308:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            line1.invalidate();
 800830c:	f504 7933 	add.w	r9, r4, #716	@ 0x2cc
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8008310:	edc6 7a00 	vstr	s15, [r6]
            line1.invalidate();
 8008314:	4648      	mov	r0, r9
 8008316:	f00a f91f 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800831a:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 800831e:	ee07 3a10 	vmov	s14, r3
 8008322:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 8008326:	edd3 7a00 	vldr	s15, [r3]
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800832a:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800832e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008332:	ee06 3a90 	vmov	s13, r3
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8008336:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800833a:	eee7 7a06 	vfma.f32	s15, s14, s12
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800833e:	2321      	movs	r3, #33	@ 0x21
 8008340:	4648      	mov	r0, r9
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008342:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008346:	ed96 7a00 	vldr	s14, [r6]
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800834a:	9300      	str	r3, [sp, #0]
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800834c:	eea6 7a86 	vfma.f32	s14, s13, s12
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8008350:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8008354:	ee37 7a48 	vsub.f32	s14, s14, s16
 8008358:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800835c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008360:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008364:	ee17 2a10 	vmov	r2, s14
 8008368:	ee17 1a90 	vmov	r1, s15
 800836c:	b212      	sxth	r2, r2
 800836e:	b209      	sxth	r1, r1
 8008370:	f7fa feea 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
                        line1.setStart(16, 16);
 8008374:	2210      	movs	r2, #16
 8008376:	4611      	mov	r1, r2
 8008378:	4648      	mov	r0, r9
 800837a:	f7ff f9a1 	bl	80076c0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                        line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 800837e:	f205 63f4 	addw	r3, r5, #1780	@ 0x6f4
 8008382:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8008386:	6818      	ldr	r0, [r3, #0]
 8008388:	f7f8 f8ee 	bl	8000568 <__aeabi_f2d>
 800838c:	a352      	add	r3, pc, #328	@ (adr r3, 80084d8 <_ZN14EasyScreenView15handleTickEventEv+0xcf8>)
 800838e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008392:	f7f8 f941 	bl	8000618 <__aeabi_dmul>
 8008396:	4b54      	ldr	r3, [pc, #336]	@ (80084e8 <_ZN14EasyScreenView15handleTickEventEv+0xd08>)
 8008398:	2200      	movs	r2, #0
 800839a:	f7f8 fa67 	bl	800086c <__aeabi_ddiv>
 800839e:	f7f8 fbeb 	bl	8000b78 <__aeabi_d2f>
 80083a2:	ee08 0a90 	vmov	s17, r0
 80083a6:	eeb0 0a68 	vmov.f32	s0, s17
 80083aa:	f020 fcb9 	bl	8028d20 <cosf>
 80083ae:	eef0 9a48 	vmov.f32	s19, s16
 80083b2:	eee0 9a09 	vfma.f32	s19, s0, s18
 80083b6:	eeb0 0a68 	vmov.f32	s0, s17
 80083ba:	f020 fcf5 	bl	8028da8 <sinf>
 80083be:	eef0 0a48 	vmov.f32	s1, s16
 80083c2:	eee0 0a09 	vfma.f32	s1, s0, s18
 80083c6:	4648      	mov	r0, r9
 80083c8:	eeb0 0a69 	vmov.f32	s0, s19
 80083cc:	f7ff f97c 	bl	80076c8 <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 80083d0:	f884 82f1 	strb.w	r8, [r4, #753]	@ 0x2f1
                        line1.invalidate();
 80083d4:	4648      	mov	r0, r9
                       line1_1.invalidate();
 80083d6:	f00a f8bf 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 80083da:	e417      	b.n	8007c0c <_ZN14EasyScreenView15handleTickEventEv+0x42c>
        } else if (servingPlayer == 2) {
 80083dc:	f1b8 0f02 	cmp.w	r8, #2
 80083e0:	f47f ac14 	bne.w	8007c0c <_ZN14EasyScreenView15handleTickEventEv+0x42c>
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 80083e4:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 80083e8:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80083ec:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 80083f0:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80083f4:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
 80083f8:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80083fc:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8008400:	ee07 3a90 	vmov	s15, r3
 8008404:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            line1_1.invalidate();
 8008408:	f504 7854 	add.w	r8, r4, #848	@ 0x350
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 800840c:	edc6 7a00 	vstr	s15, [r6]
            line1_1.invalidate();
 8008410:	4640      	mov	r0, r8
 8008412:	f00a f8a1 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                       float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8008416:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 800841a:	ee07 3a10 	vmov	s14, r3
 800841e:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 8008422:	edd3 7a00 	vldr	s15, [r3]
                       float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008426:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                       float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800842a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                       float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800842e:	ee06 3a90 	vmov	s13, r3
                       float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8008432:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8008436:	eee7 7a06 	vfma.f32	s15, s14, s12
                       line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800843a:	2321      	movs	r3, #33	@ 0x21
 800843c:	4640      	mov	r0, r8
                       float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800843e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008442:	ed96 7a00 	vldr	s14, [r6]
                       line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8008446:	9300      	str	r3, [sp, #0]
                       float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008448:	eea6 7a86 	vfma.f32	s14, s13, s12
                       line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800844c:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8008450:	ee37 7a48 	vsub.f32	s14, s14, s16
 8008454:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8008458:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800845c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008460:	ee17 2a10 	vmov	r2, s14
 8008464:	ee17 1a90 	vmov	r1, s15
 8008468:	b212      	sxth	r2, r2
 800846a:	b209      	sxth	r1, r1
 800846c:	f7fa fe6c 	bl	8003148 <_ZN8touchgfx8Drawable11setPositionEssss>
                       line1_1.setStart(16, 16);
 8008470:	2210      	movs	r2, #16
 8008472:	4611      	mov	r1, r2
 8008474:	4640      	mov	r0, r8
 8008476:	f7ff f923 	bl	80076c0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                       line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 800847a:	f505 63df 	add.w	r3, r5, #1784	@ 0x6f8
 800847e:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8008482:	6818      	ldr	r0, [r3, #0]
 8008484:	f7f8 f870 	bl	8000568 <__aeabi_f2d>
 8008488:	a313      	add	r3, pc, #76	@ (adr r3, 80084d8 <_ZN14EasyScreenView15handleTickEventEv+0xcf8>)
 800848a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800848e:	f7f8 f8c3 	bl	8000618 <__aeabi_dmul>
 8008492:	4b15      	ldr	r3, [pc, #84]	@ (80084e8 <_ZN14EasyScreenView15handleTickEventEv+0xd08>)
 8008494:	2200      	movs	r2, #0
 8008496:	f7f8 f9e9 	bl	800086c <__aeabi_ddiv>
 800849a:	f7f8 fb6d 	bl	8000b78 <__aeabi_d2f>
 800849e:	ee08 0a90 	vmov	s17, r0
 80084a2:	eeb0 0a68 	vmov.f32	s0, s17
 80084a6:	f020 fc3b 	bl	8028d20 <cosf>
 80084aa:	eef0 9a48 	vmov.f32	s19, s16
 80084ae:	eee0 9a09 	vfma.f32	s19, s0, s18
 80084b2:	eeb0 0a68 	vmov.f32	s0, s17
 80084b6:	f020 fc77 	bl	8028da8 <sinf>
 80084ba:	eef0 0a48 	vmov.f32	s1, s16
 80084be:	eee0 0a09 	vfma.f32	s1, s0, s18
 80084c2:	4640      	mov	r0, r8
 80084c4:	eeb0 0a69 	vmov.f32	s0, s19
 80084c8:	f7ff f8fe 	bl	80076c8 <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 80084cc:	2301      	movs	r3, #1
 80084ce:	f884 3375 	strb.w	r3, [r4, #885]	@ 0x375
                       line1_1.invalidate();
 80084d2:	4640      	mov	r0, r8
 80084d4:	e77f      	b.n	80083d6 <_ZN14EasyScreenView15handleTickEventEv+0xbf6>
 80084d6:	bf00      	nop
 80084d8:	54442d18 	.word	0x54442d18
 80084dc:	400921fb 	.word	0x400921fb
 80084e0:	0802c389 	.word	0x0802c389
 80084e4:	40020c00 	.word	0x40020c00
 80084e8:	40668000 	.word	0x40668000

080084ec <_ZN18EndScreenPresenterD1Ev>:
    virtual void deactivate();
    int getWinner(int playerId);
    void handlePlayAgain();


    virtual ~EndScreenPresenter() {}
 80084ec:	4770      	bx	lr

080084ee <_ZThn4_N18EndScreenPresenterD1Ev>:
 80084ee:	3804      	subs	r0, #4
 80084f0:	4770      	bx	lr

080084f2 <_ZN18EndScreenPresenter8activateEv>:

}

void EndScreenPresenter::activate()
{
	view.updateWinner();
 80084f2:	68c0      	ldr	r0, [r0, #12]
 80084f4:	6803      	ldr	r3, [r0, #0]
 80084f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80084f8:	4718      	bx	r3

080084fa <_ZN18EndScreenPresenter10deactivateEv>:
}

void EndScreenPresenter::deactivate()
{

}
 80084fa:	4770      	bx	lr

080084fc <_ZN18EndScreenPresenterD0Ev>:
 80084fc:	b510      	push	{r4, lr}
 80084fe:	2110      	movs	r1, #16
 8008500:	4604      	mov	r4, r0
 8008502:	f020 fb99 	bl	8028c38 <_ZdlPvj>
 8008506:	4620      	mov	r0, r4
 8008508:	bd10      	pop	{r4, pc}

0800850a <_ZThn4_N18EndScreenPresenterD0Ev>:
 800850a:	f1a0 0004 	sub.w	r0, r0, #4
 800850e:	e7f5      	b.n	80084fc <_ZN18EndScreenPresenterD0Ev>

08008510 <_ZN18EndScreenPresenterC1ER13EndScreenView>:
 8008510:	2200      	movs	r2, #0
 8008512:	6082      	str	r2, [r0, #8]
    : view(v)
 8008514:	4a02      	ldr	r2, [pc, #8]	@ (8008520 <_ZN18EndScreenPresenterC1ER13EndScreenView+0x10>)
 8008516:	6002      	str	r2, [r0, #0]
 8008518:	3218      	adds	r2, #24
 800851a:	6042      	str	r2, [r0, #4]
 800851c:	60c1      	str	r1, [r0, #12]
}
 800851e:	4770      	bx	lr
 8008520:	0802cdc4 	.word	0x0802cdc4

08008524 <_ZN18EndScreenPresenter9getWinnerEi>:
int EndScreenPresenter::getWinner(int playerId)
{
    return model->getWinner(playerId);
 8008524:	6880      	ldr	r0, [r0, #8]
 8008526:	f001 bb55 	b.w	8009bd4 <_ZN5Model9getWinnerEi>

0800852a <_ZN13EndScreenView14tearDownScreenEv>:


void EndScreenView::tearDownScreen()
{
    EndScreenViewBase::tearDownScreen();
}
 800852a:	4770      	bx	lr

0800852c <_ZN13EndScreenViewD1Ev>:

class EndScreenView : public EndScreenViewBase
{
public:
    EndScreenView();
    virtual ~EndScreenView() {}
 800852c:	b510      	push	{r4, lr}
 800852e:	4b03      	ldr	r3, [pc, #12]	@ (800853c <_ZN13EndScreenViewD1Ev+0x10>)
 8008530:	6003      	str	r3, [r0, #0]
 8008532:	4604      	mov	r4, r0
 8008534:	f7fb fb7d 	bl	8003c32 <_ZN17EndScreenViewBaseD1Ev>
 8008538:	4620      	mov	r0, r4
 800853a:	bd10      	pop	{r4, pc}
 800853c:	0802ce04 	.word	0x0802ce04

08008540 <_ZN13EndScreenViewD0Ev>:
 8008540:	b510      	push	{r4, lr}
 8008542:	4604      	mov	r4, r0
 8008544:	f7ff fff2 	bl	800852c <_ZN13EndScreenViewD1Ev>
 8008548:	4620      	mov	r0, r4
 800854a:	f44f 71cc 	mov.w	r1, #408	@ 0x198
 800854e:	f020 fb73 	bl	8028c38 <_ZdlPvj>
 8008552:	4620      	mov	r0, r4
 8008554:	bd10      	pop	{r4, pc}
	...

08008558 <_ZN13EndScreenViewC1Ev>:
EndScreenView::EndScreenView()
 8008558:	b510      	push	{r4, lr}
 800855a:	4604      	mov	r4, r0
 800855c:	f7fb fbe2 	bl	8003d24 <_ZN17EndScreenViewBaseC1Ev>
 8008560:	4b01      	ldr	r3, [pc, #4]	@ (8008568 <_ZN13EndScreenViewC1Ev+0x10>)
 8008562:	6023      	str	r3, [r4, #0]
}
 8008564:	4620      	mov	r0, r4
 8008566:	bd10      	pop	{r4, pc}
 8008568:	0802ce04 	.word	0x0802ce04

0800856c <_ZN13EndScreenView11setupScreenEv>:
    EndScreenViewBase::setupScreen();
 800856c:	f7fb bb62 	b.w	8003c34 <_ZN17EndScreenViewBase11setupScreenEv>

08008570 <_ZN13EndScreenView12updateWinnerEv>:

void EndScreenView::updateWinner()
{
 8008570:	b538      	push	{r3, r4, r5, lr}
    // Gán số vào playerwinBuffer
    int valueToDisplay = 0;
    if (presenter->getWinner(1)) {
 8008572:	2101      	movs	r1, #1
{
 8008574:	4604      	mov	r4, r0
    if (presenter->getWinner(1)) {
 8008576:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8008578:	f7ff ffd4 	bl	8008524 <_ZN18EndScreenPresenter9getWinnerEi>
 800857c:	bb00      	cbnz	r0, 80085c0 <_ZN13EndScreenView12updateWinnerEv+0x50>
        valueToDisplay = 1;
    } else if (presenter->getWinner(2)) {
 800857e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8008580:	2102      	movs	r1, #2
 8008582:	f7ff ffcf 	bl	8008524 <_ZN18EndScreenPresenter9getWinnerEi>
 8008586:	1e03      	subs	r3, r0, #0
 8008588:	bf18      	it	ne
 800858a:	2301      	movne	r3, #1
 800858c:	005b      	lsls	r3, r3, #1
        valueToDisplay = 2;
    }
    Unicode::snprintf(playerwinBuffer, PLAYERWIN_SIZE, "%d", valueToDisplay);
 800858e:	f504 75ba 	add.w	r5, r4, #372	@ 0x174
 8008592:	4a0c      	ldr	r2, [pc, #48]	@ (80085c4 <_ZN13EndScreenView12updateWinnerEv+0x54>)
 8008594:	210a      	movs	r1, #10
 8008596:	4628      	mov	r0, r5
 8008598:	f011 fa4c 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    playerwinBuffer[PLAYERWIN_SIZE - 1] = 0; // Đảm bảo null terminator
 800859c:	2300      	movs	r3, #0
 800859e:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
    playerwin.setWildcard(playerwinBuffer); // Liên kết lại buffer
    playerwin.resizeToCurrentText(); // Điều chỉnh kích thước
 80085a2:	f104 05e0 	add.w	r5, r4, #224	@ 0xe0
    playerwinBuffer[PLAYERWIN_SIZE - 1] = 0; // Đảm bảo null terminator
 80085a6:	f8a4 3186 	strh.w	r3, [r4, #390]	@ 0x186
    playerwin.resizeToCurrentText(); // Điều chỉnh kích thước
 80085aa:	4628      	mov	r0, r5
 80085ac:	f00a feee 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80085b0:	2301      	movs	r3, #1
 80085b2:	f884 3105 	strb.w	r3, [r4, #261]	@ 0x105
    playerwin.setVisible(true); // Đảm bảo hiển thị
    playerwin.invalidate(); // Yêu cầu vẽ lại
 80085b6:	4628      	mov	r0, r5
}
 80085b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    playerwin.invalidate(); // Yêu cầu vẽ lại
 80085bc:	f00e bec0 	b.w	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
        valueToDisplay = 1;
 80085c0:	2301      	movs	r3, #1
 80085c2:	e7e4      	b.n	800858e <_ZN13EndScreenView12updateWinnerEv+0x1e>
 80085c4:	0802c389 	.word	0x0802c389

080085c8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80085c8:	4770      	bx	lr

080085ca <_ZN19FrontendApplicationD0Ev>:
 80085ca:	b510      	push	{r4, lr}
 80085cc:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80085d0:	4604      	mov	r4, r0
 80085d2:	f020 fb31 	bl	8028c38 <_ZdlPvj>
 80085d6:	4620      	mov	r0, r4
 80085d8:	bd10      	pop	{r4, pc}

080085da <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80085da:	b510      	push	{r4, lr}
 80085dc:	4604      	mov	r4, r0
    {
        model.tick();
 80085de:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80085e2:	f001 faeb 	bl	8009bbc <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80085e6:	4620      	mov	r0, r4
    }
 80085e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80085ec:	f00d beb4 	b.w	8016358 <_ZN8touchgfx11Application15handleTickEventEv>

080085f0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80085f0:	b510      	push	{r4, lr}
 80085f2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80085f4:	f7fb fd86 	bl	8004104 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80085f8:	4b01      	ldr	r3, [pc, #4]	@ (8008600 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80085fa:	6023      	str	r3, [r4, #0]
{

}
 80085fc:	4620      	mov	r0, r4
 80085fe:	bd10      	pop	{r4, pc}
 8008600:	0802ce3c 	.word	0x0802ce3c

08008604 <_ZN24HardReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~HardReadyScreenPresenter() {}
 8008604:	4770      	bx	lr

08008606 <_ZThn4_N24HardReadyScreenPresenterD1Ev>:
 8008606:	3804      	subs	r0, #4
 8008608:	4770      	bx	lr

0800860a <_ZN24HardReadyScreenPresenter10deactivateEv>:
}

void HardReadyScreenPresenter::activate()
{

}
 800860a:	4770      	bx	lr

0800860c <_ZN24HardReadyScreenPresenterD0Ev>:
 800860c:	b510      	push	{r4, lr}
 800860e:	2110      	movs	r1, #16
 8008610:	4604      	mov	r4, r0
 8008612:	f020 fb11 	bl	8028c38 <_ZdlPvj>
 8008616:	4620      	mov	r0, r4
 8008618:	bd10      	pop	{r4, pc}

0800861a <_ZThn4_N24HardReadyScreenPresenterD0Ev>:
 800861a:	f1a0 0004 	sub.w	r0, r0, #4
 800861e:	e7f5      	b.n	800860c <_ZN24HardReadyScreenPresenterD0Ev>

08008620 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView>:
 8008620:	2200      	movs	r2, #0
 8008622:	6082      	str	r2, [r0, #8]
    : view(v)
 8008624:	4a02      	ldr	r2, [pc, #8]	@ (8008630 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView+0x10>)
 8008626:	6002      	str	r2, [r0, #0]
 8008628:	3218      	adds	r2, #24
 800862a:	6042      	str	r2, [r0, #4]
 800862c:	60c1      	str	r1, [r0, #12]
}
 800862e:	4770      	bx	lr
 8008630:	0802ce90 	.word	0x0802ce90

08008634 <_ZN19HardReadyScreenView14tearDownScreenEv>:
}

void HardReadyScreenView::tearDownScreen()
{
    HardReadyScreenViewBase::tearDownScreen();
}
 8008634:	4770      	bx	lr
	...

08008638 <_ZN19HardReadyScreenViewD1Ev>:

class HardReadyScreenView : public HardReadyScreenViewBase
{
public:
    HardReadyScreenView();
    virtual ~HardReadyScreenView() {}
 8008638:	b510      	push	{r4, lr}
 800863a:	4b03      	ldr	r3, [pc, #12]	@ (8008648 <_ZN19HardReadyScreenViewD1Ev+0x10>)
 800863c:	6003      	str	r3, [r0, #0]
 800863e:	4604      	mov	r4, r0
 8008640:	f7fc fc76 	bl	8004f30 <_ZN23HardReadyScreenViewBaseD1Ev>
 8008644:	4620      	mov	r0, r4
 8008646:	bd10      	pop	{r4, pc}
 8008648:	0802ced0 	.word	0x0802ced0

0800864c <_ZN19HardReadyScreenViewD0Ev>:
 800864c:	b510      	push	{r4, lr}
 800864e:	4604      	mov	r4, r0
 8008650:	f7ff fff2 	bl	8008638 <_ZN19HardReadyScreenViewD1Ev>
 8008654:	4620      	mov	r0, r4
 8008656:	f241 61d4 	movw	r1, #5844	@ 0x16d4
 800865a:	f020 faed 	bl	8028c38 <_ZdlPvj>
 800865e:	4620      	mov	r0, r4
 8008660:	bd10      	pop	{r4, pc}

08008662 <_ZN19HardReadyScreenView15handleTickEventEv>:
void HardReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 8008662:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 8008666:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 8008668:	f8d2 16d0 	ldr.w	r1, [r2, #1744]	@ 0x6d0
 800866c:	2900      	cmp	r1, #0
 800866e:	dd07      	ble.n	8008680 <_ZN19HardReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 8008670:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 8008672:	3901      	subs	r1, #1

	    }else{
	    	application().gotoHardScreenScreenNoTransition();
	    }

}
 8008674:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 8008678:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 800867a:	f8c2 16d0 	str.w	r1, [r2, #1744]	@ 0x6d0
	        updateCounter(tickCounter);
 800867e:	4718      	bx	r3
 8008680:	f00d fdc0 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
}
 8008684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoHardScreenScreenNoTransition();
 8008688:	f7fb bd90 	b.w	80041ac <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>

0800868c <_ZN19HardReadyScreenViewC1Ev>:
HardReadyScreenView::HardReadyScreenView()
 800868c:	b510      	push	{r4, lr}
 800868e:	4604      	mov	r4, r0
 8008690:	f7fc fca6 	bl	8004fe0 <_ZN23HardReadyScreenViewBaseC1Ev>
 8008694:	4b04      	ldr	r3, [pc, #16]	@ (80086a8 <_ZN19HardReadyScreenViewC1Ev+0x1c>)
 8008696:	6023      	str	r3, [r4, #0]
 8008698:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800869c:	22b4      	movs	r2, #180	@ 0xb4
 800869e:	f8c3 26d0 	str.w	r2, [r3, #1744]	@ 0x6d0
}
 80086a2:	4620      	mov	r0, r4
 80086a4:	bd10      	pop	{r4, pc}
 80086a6:	bf00      	nop
 80086a8:	0802ced0 	.word	0x0802ced0

080086ac <_ZN19HardReadyScreenView11setupScreenEv>:
{
 80086ac:	b510      	push	{r4, lr}
 80086ae:	4604      	mov	r4, r0
    HardReadyScreenViewBase::setupScreen();
 80086b0:	f7fc fc3c 	bl	8004f2c <_ZN23HardReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 80086b4:	6823      	ldr	r3, [r4, #0]
 80086b6:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 80086ba:	4620      	mov	r0, r4
 80086bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80086be:	f8d2 16d0 	ldr.w	r1, [r2, #1744]	@ 0x6d0
}
 80086c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 80086c6:	4718      	bx	r3

080086c8 <_ZN19HardReadyScreenView13updateCounterEi>:
void HardReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 80086c8:	2978      	cmp	r1, #120	@ 0x78
{
 80086ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80086cc:	4605      	mov	r5, r0
	    if (value > 120)
 80086ce:	dc23      	bgt.n	8008718 <_ZN19HardReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 80086d0:	293c      	cmp	r1, #60	@ 0x3c
 80086d2:	dc23      	bgt.n	800871c <_ZN19HardReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 80086d4:	2900      	cmp	r1, #0
 80086d6:	bfd4      	ite	le
 80086d8:	2400      	movle	r4, #0
 80086da:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 80086dc:	f505 7779 	add.w	r7, r5, #996	@ 0x3e4
 80086e0:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 80086e2:	f505 767e 	add.w	r6, r5, #1016	@ 0x3f8
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 80086e6:	4a0e      	ldr	r2, [pc, #56]	@ (8008720 <_ZN19HardReadyScreenView13updateCounterEi+0x58>)
 80086e8:	210a      	movs	r1, #10
 80086ea:	4638      	mov	r0, r7
 80086ec:	f011 f9a2 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 80086f0:	4623      	mov	r3, r4
 80086f2:	4a0b      	ldr	r2, [pc, #44]	@ (8008720 <_ZN19HardReadyScreenView13updateCounterEi+0x58>)
 80086f4:	210a      	movs	r1, #10
 80086f6:	4630      	mov	r0, r6
 80086f8:	f011 f99c 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 80086fc:	f505 7027 	add.w	r0, r5, #668	@ 0x29c
 8008700:	f8c5 72e4 	str.w	r7, [r5, #740]	@ 0x2e4
 8008704:	f8c5 6330 	str.w	r6, [r5, #816]	@ 0x330
 8008708:	f00e fe1a 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 800870c:	f505 703a 	add.w	r0, r5, #744	@ 0x2e8
}
 8008710:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 8008714:	f00e be14 	b.w	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 8008718:	2403      	movs	r4, #3
 800871a:	e7df      	b.n	80086dc <_ZN19HardReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 800871c:	2402      	movs	r4, #2
 800871e:	e7dd      	b.n	80086dc <_ZN19HardReadyScreenView13updateCounterEi+0x14>
 8008720:	0802c389 	.word	0x0802c389

08008724 <_ZN19HardScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~HardScreenPresenter() {}
 8008724:	4770      	bx	lr

08008726 <_ZThn4_N19HardScreenPresenterD1Ev>:
 8008726:	3804      	subs	r0, #4
 8008728:	4770      	bx	lr

0800872a <_ZN19HardScreenPresenter10deactivateEv>:
}

void HardScreenPresenter::activate()
{

}
 800872a:	4770      	bx	lr

0800872c <_ZN19HardScreenPresenterD0Ev>:
 800872c:	b510      	push	{r4, lr}
 800872e:	2110      	movs	r1, #16
 8008730:	4604      	mov	r4, r0
 8008732:	f020 fa81 	bl	8028c38 <_ZdlPvj>
 8008736:	4620      	mov	r0, r4
 8008738:	bd10      	pop	{r4, pc}

0800873a <_ZThn4_N19HardScreenPresenterD0Ev>:
 800873a:	f1a0 0004 	sub.w	r0, r0, #4
 800873e:	e7f5      	b.n	800872c <_ZN19HardScreenPresenterD0Ev>

08008740 <_ZN19HardScreenPresenterC1ER14HardScreenView>:
 8008740:	2200      	movs	r2, #0
 8008742:	6082      	str	r2, [r0, #8]
    : view(v)
 8008744:	4a02      	ldr	r2, [pc, #8]	@ (8008750 <_ZN19HardScreenPresenterC1ER14HardScreenView+0x10>)
 8008746:	6002      	str	r2, [r0, #0]
 8008748:	3218      	adds	r2, #24
 800874a:	6042      	str	r2, [r0, #4]
 800874c:	60c1      	str	r1, [r0, #12]
}
 800874e:	4770      	bx	lr
 8008750:	0802cf08 	.word	0x0802cf08

08008754 <_ZN19HardScreenPresenter13goToEndScreenEi>:
void HardScreenPresenter::handleTickEvent()
{

}
void HardScreenPresenter::goToEndScreen(int winner)
{
 8008754:	b508      	push	{r3, lr}
    model->setWinner(winner);
 8008756:	6880      	ldr	r0, [r0, #8]
 8008758:	f001 fa36 	bl	8009bc8 <_ZN5Model9setWinnerEi>
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 800875c:	f00d fd52 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
}
 8008760:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8008764:	f7fb bd82 	b.w	800426c <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

08008768 <_ZN14HardScreenView14tearDownScreenEv>:
}

void HardScreenView::tearDownScreen()
{
    HardScreenViewBase::tearDownScreen();
}
 8008768:	4770      	bx	lr
	...

0800876c <_ZN14HardScreenViewD1Ev>:

class HardScreenView : public HardScreenViewBase
{
public:
    HardScreenView();
    virtual ~HardScreenView() {}
 800876c:	b510      	push	{r4, lr}
 800876e:	4b03      	ldr	r3, [pc, #12]	@ (800877c <_ZN14HardScreenViewD1Ev+0x10>)
 8008770:	6003      	str	r3, [r0, #0]
 8008772:	4604      	mov	r4, r0
 8008774:	f7fc ff10 	bl	8005598 <_ZN18HardScreenViewBaseD1Ev>
 8008778:	4620      	mov	r0, r4
 800877a:	bd10      	pop	{r4, pc}
 800877c:	0802cf48 	.word	0x0802cf48

08008780 <_ZN14HardScreenViewD0Ev>:
 8008780:	b510      	push	{r4, lr}
 8008782:	4604      	mov	r4, r0
 8008784:	f7ff fff2 	bl	800876c <_ZN14HardScreenViewD1Ev>
 8008788:	4620      	mov	r0, r4
 800878a:	f641 0104 	movw	r1, #6148	@ 0x1804
 800878e:	f020 fa53 	bl	8028c38 <_ZdlPvj>
 8008792:	4620      	mov	r0, r4
 8008794:	bd10      	pop	{r4, pc}
	...

08008798 <_ZN14HardScreenViewC1Ev>:
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 8008798:	b510      	push	{r4, lr}
 800879a:	4604      	mov	r4, r0
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false)
 800879c:	f7fc ff16 	bl	80055cc <_ZN18HardScreenViewBaseC1Ev>
 80087a0:	4b12      	ldr	r3, [pc, #72]	@ (80087ec <_ZN14HardScreenViewC1Ev+0x54>)
 80087a2:	6023      	str	r3, [r4, #0]
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 80087a4:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 80087a8:	f203 72d4 	addw	r2, r3, #2004	@ 0x7d4
 80087ac:	4910      	ldr	r1, [pc, #64]	@ (80087f0 <_ZN14HardScreenViewC1Ev+0x58>)
 80087ae:	6011      	str	r1, [r2, #0]
 80087b0:	f503 62fb 	add.w	r2, r3, #2008	@ 0x7d8
 80087b4:	490f      	ldr	r1, [pc, #60]	@ (80087f4 <_ZN14HardScreenViewC1Ev+0x5c>)
 80087b6:	6011      	str	r1, [r2, #0]
 80087b8:	f203 71dc 	addw	r1, r3, #2012	@ 0x7dc
 80087bc:	4a0e      	ldr	r2, [pc, #56]	@ (80087f8 <_ZN14HardScreenViewC1Ev+0x60>)
 80087be:	600a      	str	r2, [r1, #0]
 80087c0:	f504 51bf 	add.w	r1, r4, #6112	@ 0x17e0
}
 80087c4:	4620      	mov	r0, r4
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 80087c6:	600a      	str	r2, [r1, #0]
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 80087c8:	2200      	movs	r2, #0
 80087ca:	f883 27e4 	strb.w	r2, [r3, #2020]	@ 0x7e4
 80087ce:	f8c3 27e8 	str.w	r2, [r3, #2024]	@ 0x7e8
 80087d2:	f8c3 27ec 	str.w	r2, [r3, #2028]	@ 0x7ec
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false)
 80087d6:	f8c3 27f0 	str.w	r2, [r3, #2032]	@ 0x7f0
 80087da:	f8c3 27f4 	str.w	r2, [r3, #2036]	@ 0x7f4
 80087de:	f883 27f8 	strb.w	r2, [r3, #2040]	@ 0x7f8
 80087e2:	f8c3 27fc 	str.w	r2, [r3, #2044]	@ 0x7fc
 80087e6:	f883 2800 	strb.w	r2, [r3, #2048]	@ 0x800
}
 80087ea:	bd10      	pop	{r4, pc}
 80087ec:	0802cf48 	.word	0x0802cf48
 80087f0:	43200000 	.word	0x43200000
 80087f4:	42f00000 	.word	0x42f00000
 80087f8:	3fb33333 	.word	0x3fb33333

080087fc <_ZN14HardScreenView11setupScreenEv>:
{
 80087fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008800:	4605      	mov	r5, r0
    score1 = 0;
 8008802:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
	ballX = 160;
 8008806:	f204 77d4 	addw	r7, r4, #2004	@ 0x7d4
    HardScreenViewBase::setupScreen();
 800880a:	f7fc fec3 	bl	8005594 <_ZN18HardScreenViewBase11setupScreenEv>
	ballY = 120;
 800880e:	f504 68fb 	add.w	r8, r4, #2008	@ 0x7d8
    score1 = 0;
 8008812:	2300      	movs	r3, #0
	ballX = 160;
 8008814:	4a27      	ldr	r2, [pc, #156]	@ (80088b4 <_ZN14HardScreenView11setupScreenEv+0xb8>)
    score1 = 0;
 8008816:	f8c4 37f0 	str.w	r3, [r4, #2032]	@ 0x7f0
	score2 = 0;
 800881a:	f8c4 37f4 	str.w	r3, [r4, #2036]	@ 0x7f4
	gameOver = false;
 800881e:	f884 37f8 	strb.w	r3, [r4, #2040]	@ 0x7f8
	ballVelX = 1.4f;
 8008822:	f204 71dc 	addw	r1, r4, #2012	@ 0x7dc
	ballX = 160;
 8008826:	603a      	str	r2, [r7, #0]
	ballY = 120;
 8008828:	4a23      	ldr	r2, [pc, #140]	@ (80088b8 <_ZN14HardScreenView11setupScreenEv+0xbc>)
 800882a:	f8c8 2000 	str.w	r2, [r8]
	ballVelX = 1.4f;
 800882e:	4a23      	ldr	r2, [pc, #140]	@ (80088bc <_ZN14HardScreenView11setupScreenEv+0xc0>)
 8008830:	600a      	str	r2, [r1, #0]
	ballVelY = 1.4f;
 8008832:	f505 51bf 	add.w	r1, r5, #6112	@ 0x17e0
	ball.invalidate();
 8008836:	f505 7636 	add.w	r6, r5, #728	@ 0x2d8
	ballVelY = 1.4f;
 800883a:	600a      	str	r2, [r1, #0]
	ball.invalidate();
 800883c:	4630      	mov	r0, r6
	waitingForServe = false;
 800883e:	f884 37e4 	strb.w	r3, [r4, #2020]	@ 0x7e4
	serveDelayTicks = 0;
 8008842:	f8c4 37e8 	str.w	r3, [r4, #2024]	@ 0x7e8
	servingPlayer = 0;
 8008846:	f8c4 37ec 	str.w	r3, [r4, #2028]	@ 0x7ec
    buzzerBeepCounter = 0;
 800884a:	f8c4 37fc 	str.w	r3, [r4, #2044]	@ 0x7fc
    buzzerBeepState = false;
 800884e:	f884 3800 	strb.w	r3, [r4, #2048]	@ 0x800
	ball.invalidate();
 8008852:	f009 fe81 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.moveTo(ballX, ballY);
 8008856:	ed98 7a00 	vldr	s14, [r8]
 800885a:	edd7 7a00 	vldr	s15, [r7]
 800885e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008862:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008866:	ee17 3a10 	vmov	r3, s14
 800886a:	b21a      	sxth	r2, r3
 800886c:	ee17 3a90 	vmov	r3, s15
 8008870:	4630      	mov	r0, r6
 8008872:	b219      	sxth	r1, r3
 8008874:	f7f9 fa0f 	bl	8001c96 <_ZN8touchgfx8Drawable6moveToEss>
	ball.invalidate();
 8008878:	4630      	mov	r0, r6
	Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 800887a:	4e11      	ldr	r6, [pc, #68]	@ (80088c0 <_ZN14HardScreenView11setupScreenEv+0xc4>)
	ball.invalidate();
 800887c:	f009 fe6c 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008880:	f8d4 37f0 	ldr.w	r3, [r4, #2032]	@ 0x7f0
 8008884:	4632      	mov	r2, r6
 8008886:	210a      	movs	r1, #10
 8008888:	f505 60a0 	add.w	r0, r5, #1280	@ 0x500
 800888c:	f011 f8d2 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	HardScreenViewBase::score1.invalidate();
 8008890:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8008894:	f00e fd54 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8008898:	f8d4 37f4 	ldr.w	r3, [r4, #2036]	@ 0x7f4
 800889c:	4632      	mov	r2, r6
 800889e:	f205 40ec 	addw	r0, r5, #1260	@ 0x4ec
 80088a2:	210a      	movs	r1, #10
 80088a4:	f011 f8c6 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	HardScreenViewBase::score2.invalidate();
 80088a8:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 80088ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	HardScreenViewBase::score2.invalidate();
 80088b0:	f00e bd46 	b.w	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
 80088b4:	43200000 	.word	0x43200000
 80088b8:	42f00000 	.word	0x42f00000
 80088bc:	3fb33333 	.word	0x3fb33333
 80088c0:	0802c389 	.word	0x0802c389

080088c4 <_ZN14HardScreenView15handleTickEventEv>:

void HardScreenView::handleTickEvent()
{
 80088c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}

    if (gameOver) {
 80088c8:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 80088cc:	4604      	mov	r4, r0
    if (gameOver) {
 80088ce:	f895 37f8 	ldrb.w	r3, [r5, #2040]	@ 0x7f8
 80088d2:	2b00      	cmp	r3, #0
 80088d4:	f040 8390 	bne.w	8008ff8 <_ZN14HardScreenView15handleTickEventEv+0x734>
        return; // Không xử lý nếu trò chơi kết thúc
    }
    // Xử lý bíp buzzer
	if (buzzerBeepCounter > 0) {
 80088d8:	f8d5 37fc 	ldr.w	r3, [r5, #2044]	@ 0x7fc
 80088dc:	2b00      	cmp	r3, #0
 80088de:	dd1b      	ble.n	8008918 <_ZN14HardScreenView15handleTickEventEv+0x54>
		if (buzzerBeepCounter % 6 == 0) { // Bíp mỗi 100ms (6 ticks tại 60 FPS)
 80088e0:	2206      	movs	r2, #6
 80088e2:	fb93 f1f2 	sdiv	r1, r3, r2
 80088e6:	fb02 3311 	mls	r3, r2, r1, r3
 80088ea:	b953      	cbnz	r3, 8008902 <_ZN14HardScreenView15handleTickEventEv+0x3e>
			buzzerBeepState = !buzzerBeepState;
 80088ec:	f895 2800 	ldrb.w	r2, [r5, #2048]	@ 0x800
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 80088f0:	4812      	ldr	r0, [pc, #72]	@ (800893c <_ZN14HardScreenView15handleTickEventEv+0x78>)
			buzzerBeepState = !buzzerBeepState;
 80088f2:	f082 0201 	eor.w	r2, r2, #1
 80088f6:	f885 2800 	strb.w	r2, [r5, #2048]	@ 0x800
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 80088fa:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80088fe:	f002 f921 	bl	800ab44 <HAL_GPIO_WritePin>
		}
		buzzerBeepCounter--;
 8008902:	f8d5 27fc 	ldr.w	r2, [r5, #2044]	@ 0x7fc
 8008906:	3a01      	subs	r2, #1
 8008908:	f8c5 27fc 	str.w	r2, [r5, #2044]	@ 0x7fc
		if (buzzerBeepCounter == 0) {
 800890c:	b922      	cbnz	r2, 8008918 <_ZN14HardScreenView15handleTickEventEv+0x54>
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET); // Tắt buzzer sau khi bíp xong
 800890e:	480b      	ldr	r0, [pc, #44]	@ (800893c <_ZN14HardScreenView15handleTickEventEv+0x78>)
 8008910:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008914:	f002 f916 	bl	800ab44 <HAL_GPIO_WritePin>
		}
	}

    JoystickCommand_t command;
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8008918:	4f09      	ldr	r7, [pc, #36]	@ (8008940 <_ZN14HardScreenView15handleTickEventEv+0x7c>)
 800891a:	e02a      	b.n	8008972 <_ZN14HardScreenView15handleTickEventEv+0xae>
        switch (command) {
 800891c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8008920:	2b09      	cmp	r3, #9
 8008922:	d826      	bhi.n	8008972 <_ZN14HardScreenView15handleTickEventEv+0xae>
 8008924:	e8df f013 	tbh	[pc, r3, lsl #1]
 8008928:	0240000e 	.word	0x0240000e
 800892c:	00250025 	.word	0x00250025
 8008930:	025c0249 	.word	0x025c0249
 8008934:	00250025 	.word	0x00250025
 8008938:	029b0264 	.word	0x029b0264
 800893c:	40020c00 	.word	0x40020c00
 8008940:	20002dc0 	.word	0x20002dc0
        return rect.y;
 8008944:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
            case JOY1_LEFT:
				{
					int16_t newY=paddle1.getY()+2;
 8008948:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 800894a:	b236      	sxth	r6, r6
 800894c:	2ec6      	cmp	r6, #198	@ 0xc6
 800894e:	bfa8      	it	ge
 8008950:	26c6      	movge	r6, #198	@ 0xc6
						newY = 198; // Dừng tại cạnh dưới
					}
                    if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008952:	429e      	cmp	r6, r3
				{
					int16_t newY = paddle1.getY() - 2;
					if (newY < 2) {
						newY = 2; // Dừng tại cạnh trên
					}
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008954:	d00d      	beq.n	8008972 <_ZN14HardScreenView15handleTickEventEv+0xae>
						paddle1.invalidate();
 8008956:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 800895a:	4640      	mov	r0, r8
 800895c:	f00e fcf0 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle1.moveTo(paddle1.getX(), newY);
 8008960:	f9b4 10f4 	ldrsh.w	r1, [r4, #244]	@ 0xf4
 8008964:	4632      	mov	r2, r6
					if (newY >198) {
						newY = 198; // Dừng tại cạnh dưới
					}
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
						paddle2.invalidate();
						paddle2.moveTo(paddle2.getX(), newY);
 8008966:	4640      	mov	r0, r8
 8008968:	f7f9 f995 	bl	8001c96 <_ZN8touchgfx8Drawable6moveToEss>
						paddle2.invalidate();
 800896c:	4640      	mov	r0, r8
 800896e:	f00e fce7 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8008972:	2300      	movs	r3, #0
 8008974:	6838      	ldr	r0, [r7, #0]
 8008976:	461a      	mov	r2, r3
 8008978:	f10d 0107 	add.w	r1, sp, #7
 800897c:	f004 fc4f 	bl	800d21e <osMessageQueueGet>
 8008980:	2800      	cmp	r0, #0
 8008982:	d0cb      	beq.n	800891c <_ZN14HardScreenView15handleTickEventEv+0x58>
				break;
        }
    }

    // Cập nhật bóng nếu không chờ phát
        if (!waitingForServe) {
 8008984:	f895 87e4 	ldrb.w	r8, [r5, #2020]	@ 0x7e4
 8008988:	f504 7636 	add.w	r6, r4, #728	@ 0x2d8
 800898c:	f1b8 0f00 	cmp.w	r8, #0
 8008990:	f040 8448 	bne.w	8009224 <_ZN14HardScreenView15handleTickEventEv+0x960>
            ball.invalidate();
 8008994:	4630      	mov	r0, r6
 8008996:	f009 fddf 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ballX += ballVelX;
 800899a:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 800899e:	ed93 6a00 	vldr	s12, [r3]
 80089a2:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 80089a6:	edd3 6a00 	vldr	s13, [r3]
 80089aa:	ee76 6a26 	vadd.f32	s13, s12, s13
            ballY += ballVelY;
 80089ae:	f505 62fb 	add.w	r2, r5, #2008	@ 0x7d8
            ballX += ballVelX;
 80089b2:	edc3 6a00 	vstr	s13, [r3]
            ballY += ballVelY;
 80089b6:	f504 51bf 	add.w	r1, r4, #6112	@ 0x17e0
 80089ba:	edd1 7a00 	vldr	s15, [r1]
 80089be:	ed92 7a00 	vldr	s14, [r2]
 80089c2:	ee37 7a87 	vadd.f32	s14, s15, s14

            // Xử lý va chạm với cạnh trên/dưới
            if (ballY < 0) {
 80089c6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80089ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            ballY += ballVelY;
 80089ce:	ed82 7a00 	vstr	s14, [r2]
            if (ballY < 0) {
 80089d2:	f140 8278 	bpl.w	8008ec6 <_ZN14HardScreenView15handleTickEventEv+0x602>
                ballY = 0;
 80089d6:	2300      	movs	r3, #0
 80089d8:	6013      	str	r3, [r2, #0]
                ballVelY = -ballVelY;
            } else if (ballY + ball.getHeight() > 240) {
                ballY = 240 - ball.getHeight();
                ballVelY = -ballVelY;
 80089da:	eef1 7a67 	vneg.f32	s15, s15
 80089de:	edc1 7a00 	vstr	s15, [r1]
        return rect.x;
 80089e2:	f9b4 20f4 	ldrsh.w	r2, [r4, #244]	@ 0xf4
            }

            // Xử lý va chạm với paddle1 (bên trái)
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 80089e6:	f9b4 30f8 	ldrsh.w	r3, [r4, #248]	@ 0xf8
 80089ea:	4413      	add	r3, r2
 80089ec:	ee07 3a90 	vmov	s15, r3
 80089f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballX >= paddle1.getX() &&
                ballY + ball.getHeight() >= paddle1.getY() &&
 80089f4:	eef4 6ae7 	vcmpe.f32	s13, s15
 80089f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80089fc:	d835      	bhi.n	8008a6a <_ZN14HardScreenView15handleTickEventEv+0x1a6>
                ballX >= paddle1.getX() &&
 80089fe:	ee07 2a10 	vmov	s14, r2
 8008a02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8008a06:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008a0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a0e:	db2c      	blt.n	8008a6a <_ZN14HardScreenView15handleTickEventEv+0x1a6>
                ballY + ball.getHeight() >= paddle1.getY() &&
 8008a10:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008a14:	edd3 6a00 	vldr	s13, [r3]
 8008a18:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 8008a1c:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 8008a20:	ee07 3a10 	vmov	s14, r3
 8008a24:	ee05 2a90 	vmov	s11, r2
 8008a28:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008a2c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008a30:	ee37 7a26 	vadd.f32	s14, s14, s13
                ballX >= paddle1.getX() &&
 8008a34:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8008a38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a3c:	db15      	blt.n	8008a6a <_ZN14HardScreenView15handleTickEventEv+0x1a6>
                ballY <= paddle1.getY() + paddle1.getHeight()) {
 8008a3e:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8008a42:	4413      	add	r3, r2
 8008a44:	ee07 3a10 	vmov	s14, r3
 8008a48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle1.getY() &&
 8008a4c:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008a50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a54:	d809      	bhi.n	8008a6a <_ZN14HardScreenView15handleTickEventEv+0x1a6>
                ballX = paddle1.getX() + paddle1.getWidth();
 8008a56:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 8008a5a:	edc3 7a00 	vstr	s15, [r3]
                ballVelX = -ballVelX;
 8008a5e:	eeb1 6a46 	vneg.f32	s12, s12
 8008a62:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008a66:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 8008a6a:	f9b4 02e0 	ldrsh.w	r0, [r4, #736]	@ 0x2e0
        return rect.x;
 8008a6e:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
            }

            // Xử lý va chạm với paddle2 (bên phải)
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8008a72:	ee07 0a90 	vmov	s15, r0
 8008a76:	f205 71d4 	addw	r1, r5, #2004	@ 0x7d4
 8008a7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008a7e:	edd1 6a00 	vldr	s13, [r1]
 8008a82:	ee07 3a10 	vmov	s14, r3
 8008a86:	ee77 6aa6 	vadd.f32	s13, s15, s13
 8008a8a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
                ballY + ball.getHeight() >= paddle2.getY() &&
 8008a8e:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a96:	db3d      	blt.n	8008b14 <_ZN14HardScreenView15handleTickEventEv+0x250>
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8008a98:	f9b4 2124 	ldrsh.w	r2, [r4, #292]	@ 0x124
 8008a9c:	441a      	add	r2, r3
 8008a9e:	ee07 2a10 	vmov	s14, r2
 8008aa2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8008aa6:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008aaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008aae:	d831      	bhi.n	8008b14 <_ZN14HardScreenView15handleTickEventEv+0x250>
                ballY + ball.getHeight() >= paddle2.getY() &&
 8008ab0:	f505 62fb 	add.w	r2, r5, #2008	@ 0x7d8
 8008ab4:	edd2 6a00 	vldr	s13, [r2]
 8008ab8:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
        return rect.y;
 8008abc:	f9b4 7122 	ldrsh.w	r7, [r4, #290]	@ 0x122
 8008ac0:	ee07 2a10 	vmov	s14, r2
 8008ac4:	ee06 7a10 	vmov	s12, r7
 8008ac8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008acc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8008ad0:	ee37 7a26 	vadd.f32	s14, s14, s13
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8008ad4:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8008ad8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008adc:	db1a      	blt.n	8008b14 <_ZN14HardScreenView15handleTickEventEv+0x250>
                ballY <= paddle2.getY() + paddle2.getHeight()) {
 8008ade:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	@ 0x126
 8008ae2:	443a      	add	r2, r7
 8008ae4:	ee07 2a10 	vmov	s14, r2
 8008ae8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle2.getY() &&
 8008aec:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008af0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008af4:	d80e      	bhi.n	8008b14 <_ZN14HardScreenView15handleTickEventEv+0x250>
                ballX = paddle2.getX() - ball.getWidth();
 8008af6:	1a1b      	subs	r3, r3, r0
 8008af8:	ee07 3a10 	vmov	s14, r3
 8008afc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballVelX = -ballVelX;
 8008b00:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
                ballX = paddle2.getX() - ball.getWidth();
 8008b04:	ed81 7a00 	vstr	s14, [r1]
                ballVelX = -ballVelX;
 8008b08:	ed93 7a00 	vldr	s14, [r3]
 8008b0c:	eeb1 7a47 	vneg.f32	s14, s14
 8008b10:	ed83 7a00 	vstr	s14, [r3]
        return rect.x;
 8008b14:	f9b4 2338 	ldrsh.w	r2, [r4, #824]	@ 0x338

            // Xử lý va chạm với các image
                   bool imageCollision = false;
                   int newServingPlayer = 0;
                   // Kiểm tra va chạm với image1
                   if (ballX + ball.getWidth() >= image1.getX() &&
 8008b18:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 8008b1c:	ed93 7a00 	vldr	s14, [r3]
 8008b20:	ee06 2a90 	vmov	s13, r2
 8008b24:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008b28:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image1.getX() + image1.getWidth() &&
                       ballY + ball.getHeight() >= image1.getY() &&
 8008b2c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008b30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b34:	f2c0 81e0 	blt.w	8008ef8 <_ZN14HardScreenView15handleTickEventEv+0x634>
                       ballX <= image1.getX() + image1.getWidth() &&
 8008b38:	f9b4 333c 	ldrsh.w	r3, [r4, #828]	@ 0x33c
 8008b3c:	4413      	add	r3, r2
 8008b3e:	ee06 3a90 	vmov	s13, r3
 8008b42:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image1.getX() &&
 8008b46:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8008b4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b4e:	f200 81d3 	bhi.w	8008ef8 <_ZN14HardScreenView15handleTickEventEv+0x634>
                       ballY + ball.getHeight() >= image1.getY() &&
 8008b52:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008b56:	ed93 6a00 	vldr	s12, [r3]
 8008b5a:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 8008b5e:	f9b4 233a 	ldrsh.w	r2, [r4, #826]	@ 0x33a
 8008b62:	ee06 3a90 	vmov	s13, r3
 8008b66:	ee05 2a90 	vmov	s11, r2
 8008b6a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008b6e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008b72:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image1.getX() + image1.getWidth() &&
 8008b76:	eef4 6ae5 	vcmpe.f32	s13, s11
 8008b7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b7e:	f2c0 81bb 	blt.w	8008ef8 <_ZN14HardScreenView15handleTickEventEv+0x634>
                       ballY <= image1.getY() + image1.getHeight()) {
 8008b82:	f9b4 333e 	ldrsh.w	r3, [r4, #830]	@ 0x33e
 8008b86:	4413      	add	r3, r2
 8008b88:	ee06 3a90 	vmov	s13, r3
 8008b8c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image1.getY() &&
 8008b90:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8008b94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b98:	f200 81ae 	bhi.w	8008ef8 <_ZN14HardScreenView15handleTickEventEv+0x634>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1; // Nếu bóng đi sang phải, người chơi 1 phát; ngược lại, người chơi 2
 8008b9c:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008ba0:	edd3 6a00 	vldr	s13, [r3]
 8008ba4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8008ba8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008bac:	f340 81a6 	ble.w	8008efc <_ZN14HardScreenView15handleTickEventEv+0x638>
 8008bb0:	2702      	movs	r7, #2
                       imageCollision = true;
 8008bb2:	f04f 0801 	mov.w	r8, #1
        return rect.x;
 8008bb6:	f9b4 2364 	ldrsh.w	r2, [r4, #868]	@ 0x364
                   }
                   // Kiểm tra va chạm với image1_1
                   if (ballX + ball.getWidth() >= image1_1.getX() &&
 8008bba:	ee06 2a90 	vmov	s13, r2
 8008bbe:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
                       ballY + ball.getHeight() >= image1_1.getY() &&
 8008bc2:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008bc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008bca:	db3c      	blt.n	8008c46 <_ZN14HardScreenView15handleTickEventEv+0x382>
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
 8008bcc:	f9b4 3368 	ldrsh.w	r3, [r4, #872]	@ 0x368
 8008bd0:	4413      	add	r3, r2
 8008bd2:	ee06 3a90 	vmov	s13, r3
 8008bd6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image1_1.getX() &&
 8008bda:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8008bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008be2:	d830      	bhi.n	8008c46 <_ZN14HardScreenView15handleTickEventEv+0x382>
                       ballY + ball.getHeight() >= image1_1.getY() &&
 8008be4:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008be8:	ed93 6a00 	vldr	s12, [r3]
 8008bec:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 8008bf0:	f9b4 2366 	ldrsh.w	r2, [r4, #870]	@ 0x366
 8008bf4:	ee06 3a90 	vmov	s13, r3
 8008bf8:	ee05 2a90 	vmov	s11, r2
 8008bfc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008c00:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008c04:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
 8008c08:	eef4 6ae5 	vcmpe.f32	s13, s11
 8008c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c10:	db19      	blt.n	8008c46 <_ZN14HardScreenView15handleTickEventEv+0x382>
                       ballY <= image1_1.getY() + image1_1.getHeight()) {
 8008c12:	f9b4 336a 	ldrsh.w	r3, [r4, #874]	@ 0x36a
 8008c16:	4413      	add	r3, r2
 8008c18:	ee06 3a90 	vmov	s13, r3
 8008c1c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image1_1.getY() &&
 8008c20:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8008c24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c28:	d80d      	bhi.n	8008c46 <_ZN14HardScreenView15handleTickEventEv+0x382>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8008c2a:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008c2e:	edd3 6a00 	vldr	s13, [r3]
 8008c32:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8008c36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c3a:	bfd3      	iteet	le
 8008c3c:	2701      	movle	r7, #1
 8008c3e:	2702      	movgt	r7, #2
                       imageCollision = true;
 8008c40:	f04f 0801 	movgt.w	r8, #1
 8008c44:	46b8      	movle	r8, r7
        return rect.x;
 8008c46:	f9b4 2390 	ldrsh.w	r2, [r4, #912]	@ 0x390
                   }
                   // Kiểm tra va chạm với image2
                   if (ballX + ball.getWidth() >= image2.getX() &&
 8008c4a:	ee06 2a90 	vmov	s13, r2
 8008c4e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image2.getX() + image2.getWidth() &&
                       ballY + ball.getHeight() >= image2.getY() &&
 8008c52:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008c56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c5a:	db3c      	blt.n	8008cd6 <_ZN14HardScreenView15handleTickEventEv+0x412>
                       ballX <= image2.getX() + image2.getWidth() &&
 8008c5c:	f9b4 3394 	ldrsh.w	r3, [r4, #916]	@ 0x394
 8008c60:	4413      	add	r3, r2
 8008c62:	ee06 3a90 	vmov	s13, r3
 8008c66:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image2.getX() &&
 8008c6a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8008c6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c72:	d830      	bhi.n	8008cd6 <_ZN14HardScreenView15handleTickEventEv+0x412>
                       ballY + ball.getHeight() >= image2.getY() &&
 8008c74:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008c78:	ed93 6a00 	vldr	s12, [r3]
 8008c7c:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 8008c80:	f9b4 2392 	ldrsh.w	r2, [r4, #914]	@ 0x392
 8008c84:	ee06 3a90 	vmov	s13, r3
 8008c88:	ee05 2a90 	vmov	s11, r2
 8008c8c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008c90:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008c94:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image2.getX() + image2.getWidth() &&
 8008c98:	eef4 6ae5 	vcmpe.f32	s13, s11
 8008c9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ca0:	db19      	blt.n	8008cd6 <_ZN14HardScreenView15handleTickEventEv+0x412>
                       ballY <= image2.getY() + image2.getHeight()) {
 8008ca2:	f9b4 3396 	ldrsh.w	r3, [r4, #918]	@ 0x396
 8008ca6:	4413      	add	r3, r2
 8008ca8:	ee06 3a90 	vmov	s13, r3
 8008cac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image2.getY() &&
 8008cb0:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8008cb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008cb8:	d80d      	bhi.n	8008cd6 <_ZN14HardScreenView15handleTickEventEv+0x412>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8008cba:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008cbe:	edd3 6a00 	vldr	s13, [r3]
 8008cc2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8008cc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008cca:	bfd3      	iteet	le
 8008ccc:	2701      	movle	r7, #1
 8008cce:	2702      	movgt	r7, #2
                       imageCollision = true;
 8008cd0:	f04f 0801 	movgt.w	r8, #1
 8008cd4:	46b8      	movle	r8, r7
        return rect.x;
 8008cd6:	f9b4 23bc 	ldrsh.w	r2, [r4, #956]	@ 0x3bc
                   }
                   // Kiểm tra va chạm với image2_2
                   if (ballX + ball.getWidth() >= image2_2.getX() &&
 8008cda:	ee06 2a90 	vmov	s13, r2
 8008cde:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
                       ballY + ball.getHeight() >= image2_2.getY() &&
 8008ce2:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008cea:	db2f      	blt.n	8008d4c <_ZN14HardScreenView15handleTickEventEv+0x488>
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
 8008cec:	f9b4 33c0 	ldrsh.w	r3, [r4, #960]	@ 0x3c0
 8008cf0:	4413      	add	r3, r2
 8008cf2:	ee07 3a90 	vmov	s15, r3
 8008cf6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                   if (ballX + ball.getWidth() >= image2_2.getX() &&
 8008cfa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8008cfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d02:	d823      	bhi.n	8008d4c <_ZN14HardScreenView15handleTickEventEv+0x488>
                       ballY + ball.getHeight() >= image2_2.getY() &&
 8008d04:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008d08:	edd3 6a00 	vldr	s13, [r3]
 8008d0c:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 8008d10:	f9b4 23be 	ldrsh.w	r2, [r4, #958]	@ 0x3be
 8008d14:	ee07 3a90 	vmov	s15, r3
 8008d18:	ee06 2a10 	vmov	s12, r2
 8008d1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008d20:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8008d24:	ee77 7aa6 	vadd.f32	s15, s15, s13
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
 8008d28:	eef4 7ac6 	vcmpe.f32	s15, s12
 8008d2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d30:	db0c      	blt.n	8008d4c <_ZN14HardScreenView15handleTickEventEv+0x488>
                       ballY <= image2_2.getY() + image2_2.getHeight()) {
 8008d32:	f9b4 33c2 	ldrsh.w	r3, [r4, #962]	@ 0x3c2
 8008d36:	4413      	add	r3, r2
 8008d38:	ee07 3a90 	vmov	s15, r3
 8008d3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                       ballY + ball.getHeight() >= image2_2.getY() &&
 8008d40:	eef4 6ae7 	vcmpe.f32	s13, s15
 8008d44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d48:	f240 80dc 	bls.w	8008f04 <_ZN14HardScreenView15handleTickEventEv+0x640>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
                   }

                   if (imageCollision) {
 8008d4c:	f1b8 0f00 	cmp.w	r8, #0
 8008d50:	f000 8180 	beq.w	8009054 <_ZN14HardScreenView15handleTickEventEv+0x790>
                       // Cộng điểm cho người chơi còn lại
                       if (newServingPlayer == 2) {
 8008d54:	2f02      	cmp	r7, #2
 8008d56:	f040 80e0 	bne.w	8008f1a <_ZN14HardScreenView15handleTickEventEv+0x656>
                           score2++;
 8008d5a:	f8d5 37f4 	ldr.w	r3, [r5, #2036]	@ 0x7f4
                           Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8008d5e:	4ab5      	ldr	r2, [pc, #724]	@ (8009034 <_ZN14HardScreenView15handleTickEventEv+0x770>)
                           score2++;
 8008d60:	3301      	adds	r3, #1
 8008d62:	f8c5 37f4 	str.w	r3, [r5, #2036]	@ 0x7f4
                           Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8008d66:	210a      	movs	r1, #10
 8008d68:	f204 40ec 	addw	r0, r4, #1260	@ 0x4ec
 8008d6c:	f010 fe62 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                           HardScreenViewBase::score2.invalidate();
 8008d70:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 8008d74:	f00e fae4 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
                           buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
						   buzzerBeepState = true;
 8008d78:	2701      	movs	r7, #1
                           buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8008d7a:	2312      	movs	r3, #18
 8008d7c:	f8c5 37fc 	str.w	r3, [r5, #2044]	@ 0x7fc
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8008d80:	48ad      	ldr	r0, [pc, #692]	@ (8009038 <_ZN14HardScreenView15handleTickEventEv+0x774>)
						   buzzerBeepState = true;
 8008d82:	f885 7800 	strb.w	r7, [r5, #2048]	@ 0x800
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8008d86:	463a      	mov	r2, r7
 8008d88:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008d8c:	f001 feda 	bl	800ab44 <HAL_GPIO_WritePin>
                           if (score2 >= 11) {
 8008d90:	f8d5 37f4 	ldr.w	r3, [r5, #2036]	@ 0x7f4
 8008d94:	2b0a      	cmp	r3, #10
 8008d96:	dd05      	ble.n	8008da4 <_ZN14HardScreenView15handleTickEventEv+0x4e0>
                               gameOver = true;
                               presenter->goToEndScreen(2);
 8008d98:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                               gameOver = true;
 8008d9a:	f885 77f8 	strb.w	r7, [r5, #2040]	@ 0x7f8
                               presenter->goToEndScreen(2);
 8008d9e:	2102      	movs	r1, #2
 8008da0:	f7ff fcd8 	bl	8008754 <_ZN19HardScreenPresenter13goToEndScreenEi>
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8008da4:	2702      	movs	r7, #2
 8008da6:	e0de      	b.n	8008f66 <_ZN14HardScreenView15handleTickEventEv+0x6a2>
 8008da8:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY = paddle1.getY() - 2;
 8008dac:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8008dae:	b236      	sxth	r6, r6
 8008db0:	2e02      	cmp	r6, #2
 8008db2:	bfb8      	it	lt
 8008db4:	2602      	movlt	r6, #2
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008db6:	42b3      	cmp	r3, r6
 8008db8:	e5cc      	b.n	8008954 <_ZN14HardScreenView15handleTickEventEv+0x90>
 8008dba:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY=paddle2.getY()+2;
 8008dbe:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 8008dc0:	b236      	sxth	r6, r6
 8008dc2:	2ec6      	cmp	r6, #198	@ 0xc6
 8008dc4:	bfa8      	it	ge
 8008dc6:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008dc8:	429e      	cmp	r6, r3
 8008dca:	f43f add2 	beq.w	8008972 <_ZN14HardScreenView15handleTickEventEv+0xae>
						paddle2.invalidate();
 8008dce:	f504 788e 	add.w	r8, r4, #284	@ 0x11c
 8008dd2:	4640      	mov	r0, r8
 8008dd4:	f00e fab4 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle2.moveTo(paddle2.getX(), newY);
 8008dd8:	f9b4 1120 	ldrsh.w	r1, [r4, #288]	@ 0x120
 8008ddc:	4632      	mov	r2, r6
 8008dde:	e5c2      	b.n	8008966 <_ZN14HardScreenView15handleTickEventEv+0xa2>
 8008de0:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY = paddle2.getY() - 2;
 8008de4:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8008de6:	b236      	sxth	r6, r6
 8008de8:	2e02      	cmp	r6, #2
 8008dea:	bfb8      	it	lt
 8008dec:	2602      	movlt	r6, #2
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008dee:	e7eb      	b.n	8008dc8 <_ZN14HardScreenView15handleTickEventEv+0x504>
				if (waitingForServe && servingPlayer == 1) {
 8008df0:	f895 37e4 	ldrb.w	r3, [r5, #2020]	@ 0x7e4
 8008df4:	2b00      	cmp	r3, #0
 8008df6:	f43f adbc 	beq.w	8008972 <_ZN14HardScreenView15handleTickEventEv+0xae>
 8008dfa:	f8d5 17ec 	ldr.w	r1, [r5, #2028]	@ 0x7ec
 8008dfe:	2901      	cmp	r1, #1
 8008e00:	f47f adb7 	bne.w	8008972 <_ZN14HardScreenView15handleTickEventEv+0xae>
					ballVelX = 1.4f; // Phát bóng sang phải
 8008e04:	ed9f 7a8d 	vldr	s14, [pc, #564]	@ 800903c <_ZN14HardScreenView15handleTickEventEv+0x778>
					waitingForServe = false;
 8008e08:	2300      	movs	r3, #0
 8008e0a:	f885 37e4 	strb.w	r3, [r5, #2020]	@ 0x7e4
					ballVelX = 1.4f; // Phát bóng sang phải
 8008e0e:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008e12:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle1.getY() + paddle1.getHeight()/2 > ballY) ? -1.4f : 1.4f;
 8008e16:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8008e1a:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8008e1e:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8008e22:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8008e26:	ee07 3a90 	vmov	s15, r3
 8008e2a:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008e2e:	edd3 6a00 	vldr	s13, [r3]
 8008e32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008e36:	f504 53bf 	add.w	r3, r4, #6112	@ 0x17e0
 8008e3a:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008e3e:	eddf 7a80 	vldr	s15, [pc, #512]	@ 8009040 <_ZN14HardScreenView15handleTickEventEv+0x77c>
 8008e42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008e46:	bfd8      	it	le
 8008e48:	eef0 7a47 	vmovle.f32	s15, s14
 8008e4c:	edc3 7a00 	vstr	s15, [r3]
        visible = vis;
 8008e50:	f884 12fd 	strb.w	r1, [r4, #765]	@ 0x2fd
					ball.invalidate();
 8008e54:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
 8008e58:	f009 fb7e 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8008e5c:	e589      	b.n	8008972 <_ZN14HardScreenView15handleTickEventEv+0xae>
				if (waitingForServe && servingPlayer == 2) {
 8008e5e:	f895 37e4 	ldrb.w	r3, [r5, #2020]	@ 0x7e4
 8008e62:	2b00      	cmp	r3, #0
 8008e64:	f43f ad85 	beq.w	8008972 <_ZN14HardScreenView15handleTickEventEv+0xae>
 8008e68:	f8d5 37ec 	ldr.w	r3, [r5, #2028]	@ 0x7ec
 8008e6c:	2b02      	cmp	r3, #2
 8008e6e:	f47f ad80 	bne.w	8008972 <_ZN14HardScreenView15handleTickEventEv+0xae>
					ballVelX = -1.4f; // Phát bóng sang trái
 8008e72:	ed9f 7a73 	vldr	s14, [pc, #460]	@ 8009040 <_ZN14HardScreenView15handleTickEventEv+0x77c>
					waitingForServe = false;
 8008e76:	2300      	movs	r3, #0
 8008e78:	f885 37e4 	strb.w	r3, [r5, #2020]	@ 0x7e4
					ballVelX = -1.4f; // Phát bóng sang trái
 8008e7c:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008e80:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle2.getY() + paddle2.getHeight()/2 > ballY) ? -1.4f : 1.4f;
 8008e84:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8008e88:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8008e8c:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8008e90:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8008e94:	ee07 3a90 	vmov	s15, r3
 8008e98:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008e9c:	edd3 6a00 	vldr	s13, [r3]
 8008ea0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008ea4:	f504 53bf 	add.w	r3, r4, #6112	@ 0x17e0
 8008ea8:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008eac:	eddf 7a63 	vldr	s15, [pc, #396]	@ 800903c <_ZN14HardScreenView15handleTickEventEv+0x778>
 8008eb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008eb4:	bfd8      	it	le
 8008eb6:	eeb0 7a67 	vmovle.f32	s14, s15
 8008eba:	ed83 7a00 	vstr	s14, [r3]
 8008ebe:	2301      	movs	r3, #1
 8008ec0:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
 8008ec4:	e7c6      	b.n	8008e54 <_ZN14HardScreenView15handleTickEventEv+0x590>
        return rect.height;
 8008ec6:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
            } else if (ballY + ball.getHeight() > 240) {
 8008eca:	ee05 3a90 	vmov	s11, r3
 8008ece:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008ed2:	ee35 7a87 	vadd.f32	s14, s11, s14
 8008ed6:	eddf 5a5b 	vldr	s11, [pc, #364]	@ 8009044 <_ZN14HardScreenView15handleTickEventEv+0x780>
 8008eda:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8008ede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ee2:	f77f ad7e 	ble.w	80089e2 <_ZN14HardScreenView15handleTickEventEv+0x11e>
                ballY = 240 - ball.getHeight();
 8008ee6:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 8008eea:	ee07 3a10 	vmov	s14, r3
 8008eee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008ef2:	ed82 7a00 	vstr	s14, [r2]
 8008ef6:	e570      	b.n	80089da <_ZN14HardScreenView15handleTickEventEv+0x116>
                   int newServingPlayer = 0;
 8008ef8:	2700      	movs	r7, #0
 8008efa:	e65c      	b.n	8008bb6 <_ZN14HardScreenView15handleTickEventEv+0x2f2>
                       newServingPlayer = ballVelX > 0 ? 2 : 1; // Nếu bóng đi sang phải, người chơi 1 phát; ngược lại, người chơi 2
 8008efc:	f04f 0801 	mov.w	r8, #1
                       imageCollision = true;
 8008f00:	4647      	mov	r7, r8
 8008f02:	e658      	b.n	8008bb6 <_ZN14HardScreenView15handleTickEventEv+0x2f2>
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8008f04:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008f08:	edd3 7a00 	vldr	s15, [r3]
 8008f0c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008f10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f14:	f73f af21 	bgt.w	8008d5a <_ZN14HardScreenView15handleTickEventEv+0x496>
 8008f18:	2701      	movs	r7, #1
                           }
                       } else {
                           score1++;
 8008f1a:	f8d5 37f0 	ldr.w	r3, [r5, #2032]	@ 0x7f0
                           Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008f1e:	4a45      	ldr	r2, [pc, #276]	@ (8009034 <_ZN14HardScreenView15handleTickEventEv+0x770>)
                           score1++;
 8008f20:	3301      	adds	r3, #1
 8008f22:	f8c5 37f0 	str.w	r3, [r5, #2032]	@ 0x7f0
                           Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008f26:	210a      	movs	r1, #10
 8008f28:	f504 60a0 	add.w	r0, r4, #1280	@ 0x500
 8008f2c:	f010 fd82 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                           HardScreenViewBase::score1.invalidate();
 8008f30:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 8008f34:	f00e fa04 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
                           buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
						   buzzerBeepState = true;
 8008f38:	f04f 0801 	mov.w	r8, #1
                           buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8008f3c:	2312      	movs	r3, #18
 8008f3e:	f8c5 37fc 	str.w	r3, [r5, #2044]	@ 0x7fc
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8008f42:	483d      	ldr	r0, [pc, #244]	@ (8009038 <_ZN14HardScreenView15handleTickEventEv+0x774>)
						   buzzerBeepState = true;
 8008f44:	f885 8800 	strb.w	r8, [r5, #2048]	@ 0x800
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8008f48:	4642      	mov	r2, r8
 8008f4a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008f4e:	f001 fdf9 	bl	800ab44 <HAL_GPIO_WritePin>
                           if (score1 >= 11) {
 8008f52:	f8d5 37f0 	ldr.w	r3, [r5, #2032]	@ 0x7f0
 8008f56:	2b0a      	cmp	r3, #10
 8008f58:	dd05      	ble.n	8008f66 <_ZN14HardScreenView15handleTickEventEv+0x6a2>
                               gameOver = true;
                               presenter->goToEndScreen(1);
 8008f5a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                               gameOver = true;
 8008f5c:	f885 87f8 	strb.w	r8, [r5, #2040]	@ 0x7f8
                               presenter->goToEndScreen(1);
 8008f60:	4641      	mov	r1, r8
 8008f62:	f7ff fbf7 	bl	8008754 <_ZN19HardScreenPresenter13goToEndScreenEi>
        visible = vis;
 8008f66:	2300      	movs	r3, #0
 8008f68:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                           }
                       }
                       // Thiết lập lại trạng thái phát bóng
                       ball.setVisible(false);
                       ball.invalidate();
 8008f6c:	4630      	mov	r0, r6
 8008f6e:	f009 faf3 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                       waitingForServe = true;
 8008f72:	2301      	movs	r3, #1
 8008f74:	f885 37e4 	strb.w	r3, [r5, #2020]	@ 0x7e4
                       serveDelayTicks = 60; // 1 giây với 60 FPS
                       servingPlayer = newServingPlayer;
                       if (newServingPlayer == 1) {
 8008f78:	2f01      	cmp	r7, #1
                       serveDelayTicks = 60; // 1 giây với 60 FPS
 8008f7a:	f04f 033c 	mov.w	r3, #60	@ 0x3c
 8008f7e:	f9b4 12e2 	ldrsh.w	r1, [r4, #738]	@ 0x2e2
 8008f82:	f8c5 37e8 	str.w	r3, [r5, #2024]	@ 0x7e8
                       servingPlayer = newServingPlayer;
 8008f86:	f8c5 77ec 	str.w	r7, [r5, #2028]	@ 0x7ec
                       if (newServingPlayer == 1) {
 8008f8a:	f205 72d4 	addw	r2, r5, #2004	@ 0x7d4
 8008f8e:	d136      	bne.n	8008ffe <_ZN14HardScreenView15handleTickEventEv+0x73a>
                           ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8008f90:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 8008f94:	f9b4 00f8 	ldrsh.w	r0, [r4, #248]	@ 0xf8
 8008f98:	4403      	add	r3, r0
 8008f9a:	330a      	adds	r3, #10
 8008f9c:	ee07 3a90 	vmov	s15, r3
 8008fa0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8008fa4:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
                           ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8008fa8:	edc2 7a00 	vstr	s15, [r2]
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8008fac:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 8008fb0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8008fb4:	eb02 0263 	add.w	r2, r2, r3, asr #1
 8008fb8:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8008fbc:	eba2 0261 	sub.w	r2, r2, r1, asr #1
 8008fc0:	ee07 2a90 	vmov	s15, r2
                       } else {
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8008fc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8008fc8:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008fcc:	edc3 7a00 	vstr	s15, [r3]
                       }
                       ball.moveTo(ballX, ballY);
 8008fd0:	f205 75d4 	addw	r5, r5, #2004	@ 0x7d4
 8008fd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008fd8:	ed95 7a00 	vldr	s14, [r5]
 8008fdc:	ee17 3a90 	vmov	r3, s15
 8008fe0:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008fe4:	b21a      	sxth	r2, r3
 8008fe6:	ee17 3a10 	vmov	r3, s14
            if (servingPlayer == 1) {
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
            } else if (servingPlayer == 2) {
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
            }
            ball.moveTo(ballX, ballY);
 8008fea:	4630      	mov	r0, r6
 8008fec:	b219      	sxth	r1, r3
 8008fee:	f7f8 fe52 	bl	8001c96 <_ZN8touchgfx8Drawable6moveToEss>
            ball.invalidate();
 8008ff2:	4630      	mov	r0, r6
 8008ff4:	f009 fab0 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        }
}
 8008ff8:	b002      	add	sp, #8
 8008ffa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8008ffe:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 8009002:	f9b4 02e0 	ldrsh.w	r0, [r4, #736]	@ 0x2e0
 8009006:	1a1b      	subs	r3, r3, r0
 8009008:	3b0a      	subs	r3, #10
 800900a:	ee07 3a90 	vmov	s15, r3
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800900e:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8009012:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009016:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 800901a:	edc2 7a00 	vstr	s15, [r2]
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800901e:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009022:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8009026:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800902a:	eba3 0361 	sub.w	r3, r3, r1, asr #1
 800902e:	ee07 3a90 	vmov	s15, r3
 8009032:	e7c7      	b.n	8008fc4 <_ZN14HardScreenView15handleTickEventEv+0x700>
 8009034:	0802c389 	.word	0x0802c389
 8009038:	40020c00 	.word	0x40020c00
 800903c:	3fb33333 	.word	0x3fb33333
 8009040:	bfb33333 	.word	0xbfb33333
 8009044:	43700000 	.word	0x43700000
 8009048:	439f8000 	.word	0x439f8000
 800904c:	42700000 	.word	0x42700000
 8009050:	43350000 	.word	0x43350000
                if (ballX >319) {
 8009054:	ed5f 6a04 	vldr	s13, [pc, #-16]	@ 8009048 <_ZN14HardScreenView15handleTickEventEv+0x784>
 8009058:	eeb4 7ae6 	vcmpe.f32	s14, s13
                ballY + ball.getHeight() >= paddle1.getY() &&
 800905c:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
                if (ballX >319) {
 8009060:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                ballY + ball.getHeight() >= paddle1.getY() &&
 8009064:	edd3 7a00 	vldr	s15, [r3]
                if (ballX >319) {
 8009068:	dd70      	ble.n	800914c <_ZN14HardScreenView15handleTickEventEv+0x888>
                    if (ballY > 60 && ballY < 181) {
 800906a:	ed1f 7a08 	vldr	s14, [pc, #-32]	@ 800904c <_ZN14HardScreenView15handleTickEventEv+0x788>
 800906e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8009072:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009076:	f340 80c8 	ble.w	800920a <_ZN14HardScreenView15handleTickEventEv+0x946>
 800907a:	ed1f 7a0b 	vldr	s14, [pc, #-44]	@ 8009050 <_ZN14HardScreenView15handleTickEventEv+0x78c>
 800907e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8009082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009086:	f140 80c0 	bpl.w	800920a <_ZN14HardScreenView15handleTickEventEv+0x946>
                        score1++;
 800908a:	f8d5 37f0 	ldr.w	r3, [r5, #2032]	@ 0x7f0
                        Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 800908e:	4a84      	ldr	r2, [pc, #528]	@ (80092a0 <_ZN14HardScreenView15handleTickEventEv+0x9dc>)
                        score1++;
 8009090:	3301      	adds	r3, #1
 8009092:	f8c5 37f0 	str.w	r3, [r5, #2032]	@ 0x7f0
                        Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8009096:	210a      	movs	r1, #10
 8009098:	f504 60a0 	add.w	r0, r4, #1280	@ 0x500
 800909c:	f010 fcca 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        HardScreenViewBase::score1.invalidate();
 80090a0:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 80090a4:	f00e f94c 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
						buzzerBeepState = true;
 80090a8:	2701      	movs	r7, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 80090aa:	2312      	movs	r3, #18
 80090ac:	f8c5 37fc 	str.w	r3, [r5, #2044]	@ 0x7fc
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80090b0:	487c      	ldr	r0, [pc, #496]	@ (80092a4 <_ZN14HardScreenView15handleTickEventEv+0x9e0>)
						buzzerBeepState = true;
 80090b2:	f885 7800 	strb.w	r7, [r5, #2048]	@ 0x800
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80090b6:	463a      	mov	r2, r7
 80090b8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80090bc:	f001 fd42 	bl	800ab44 <HAL_GPIO_WritePin>
                        if (score1 >= 11) {
 80090c0:	f8d5 37f0 	ldr.w	r3, [r5, #2032]	@ 0x7f0
 80090c4:	2b0a      	cmp	r3, #10
 80090c6:	dd05      	ble.n	80090d4 <_ZN14HardScreenView15handleTickEventEv+0x810>
                            presenter->goToEndScreen(1);
 80090c8:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                            gameOver = true;
 80090ca:	f885 77f8 	strb.w	r7, [r5, #2040]	@ 0x7f8
                            presenter->goToEndScreen(1);
 80090ce:	4639      	mov	r1, r7
 80090d0:	f7ff fb40 	bl	8008754 <_ZN19HardScreenPresenter13goToEndScreenEi>
 80090d4:	2300      	movs	r3, #0
 80090d6:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                        ball.invalidate();
 80090da:	4630      	mov	r0, r6
 80090dc:	f009 fa3c 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 80090e0:	2301      	movs	r3, #1
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 80090e2:	223c      	movs	r2, #60	@ 0x3c
                        waitingForServe = true;
 80090e4:	f885 37e4 	strb.w	r3, [r5, #2020]	@ 0x7e4
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 80090e8:	f8c5 27e8 	str.w	r2, [r5, #2024]	@ 0x7e8
                        servingPlayer = 1; // Người chơi 1 phát bóng
 80090ec:	f8c5 37ec 	str.w	r3, [r5, #2028]	@ 0x7ec
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 80090f0:	f9b4 20f8 	ldrsh.w	r2, [r4, #248]	@ 0xf8
 80090f4:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 80090f8:	4413      	add	r3, r2
 80090fa:	330a      	adds	r3, #10
 80090fc:	ee07 3a90 	vmov	s15, r3
 8009100:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009104:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 8009108:	edc3 7a00 	vstr	s15, [r3]
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800910c:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8009110:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009114:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009118:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800911c:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
 8009120:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8009124:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8009128:	ee07 3a10 	vmov	s14, r3
 800912c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009130:	f505 65fb 	add.w	r5, r5, #2008	@ 0x7d8
 8009134:	ed85 7a00 	vstr	s14, [r5]
                        ball.moveTo(ballX, ballY);
 8009138:	eebd 7ac7 	vcvt.s32.f32	s14, s14
            ball.moveTo(ballX, ballY);
 800913c:	ee17 3a10 	vmov	r3, s14
 8009140:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009144:	b21a      	sxth	r2, r3
 8009146:	ee17 3a90 	vmov	r3, s15
 800914a:	e74e      	b.n	8008fea <_ZN14HardScreenView15handleTickEventEv+0x726>
                if (ballX <1) {
 800914c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8009150:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8009154:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009158:	f57f af3a 	bpl.w	8008fd0 <_ZN14HardScreenView15handleTickEventEv+0x70c>
                    if (ballY > 60 && ballY < 181) {
 800915c:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 80092a8 <_ZN14HardScreenView15handleTickEventEv+0x9e4>
 8009160:	eef4 7ac7 	vcmpe.f32	s15, s14
 8009164:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009168:	dd4f      	ble.n	800920a <_ZN14HardScreenView15handleTickEventEv+0x946>
 800916a:	ed9f 7a50 	vldr	s14, [pc, #320]	@ 80092ac <_ZN14HardScreenView15handleTickEventEv+0x9e8>
 800916e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8009172:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009176:	d548      	bpl.n	800920a <_ZN14HardScreenView15handleTickEventEv+0x946>
                        score2++;
 8009178:	f8d5 37f4 	ldr.w	r3, [r5, #2036]	@ 0x7f4
                        Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 800917c:	4a48      	ldr	r2, [pc, #288]	@ (80092a0 <_ZN14HardScreenView15handleTickEventEv+0x9dc>)
                        score2++;
 800917e:	3301      	adds	r3, #1
 8009180:	f8c5 37f4 	str.w	r3, [r5, #2036]	@ 0x7f4
                        Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8009184:	210a      	movs	r1, #10
 8009186:	f204 40ec 	addw	r0, r4, #1260	@ 0x4ec
 800918a:	f010 fc53 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        HardScreenViewBase::score2.invalidate();
 800918e:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 8009192:	f00e f8d5 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
						buzzerBeepState = true;
 8009196:	2701      	movs	r7, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8009198:	2312      	movs	r3, #18
 800919a:	f8c5 37fc 	str.w	r3, [r5, #2044]	@ 0x7fc
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 800919e:	4841      	ldr	r0, [pc, #260]	@ (80092a4 <_ZN14HardScreenView15handleTickEventEv+0x9e0>)
						buzzerBeepState = true;
 80091a0:	f885 7800 	strb.w	r7, [r5, #2048]	@ 0x800
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80091a4:	463a      	mov	r2, r7
 80091a6:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80091aa:	f001 fccb 	bl	800ab44 <HAL_GPIO_WritePin>
                        if (score2 >= 11) {
 80091ae:	f8d5 37f4 	ldr.w	r3, [r5, #2036]	@ 0x7f4
 80091b2:	2b0a      	cmp	r3, #10
 80091b4:	dd05      	ble.n	80091c2 <_ZN14HardScreenView15handleTickEventEv+0x8fe>
                            presenter->goToEndScreen(2);
 80091b6:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                            gameOver = true;
 80091b8:	f885 77f8 	strb.w	r7, [r5, #2040]	@ 0x7f8
                            presenter->goToEndScreen(2);
 80091bc:	2102      	movs	r1, #2
 80091be:	f7ff fac9 	bl	8008754 <_ZN19HardScreenPresenter13goToEndScreenEi>
 80091c2:	2300      	movs	r3, #0
 80091c4:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                        ball.invalidate();
 80091c8:	4630      	mov	r0, r6
 80091ca:	f009 f9c5 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 80091ce:	2301      	movs	r3, #1
 80091d0:	f885 37e4 	strb.w	r3, [r5, #2020]	@ 0x7e4
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 80091d4:	233c      	movs	r3, #60	@ 0x3c
 80091d6:	f8c5 37e8 	str.w	r3, [r5, #2024]	@ 0x7e8
                        servingPlayer = 2; // Người chơi 2 phát bóng
 80091da:	2302      	movs	r3, #2
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 80091dc:	f9b4 22e0 	ldrsh.w	r2, [r4, #736]	@ 0x2e0
                        servingPlayer = 2; // Người chơi 2 phát bóng
 80091e0:	f8c5 37ec 	str.w	r3, [r5, #2028]	@ 0x7ec
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 80091e4:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 80091e8:	1a9b      	subs	r3, r3, r2
 80091ea:	3b0a      	subs	r3, #10
 80091ec:	ee07 3a90 	vmov	s15, r3
 80091f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80091f4:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 80091f8:	edc3 7a00 	vstr	s15, [r3]
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 80091fc:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8009200:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009204:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8009208:	e786      	b.n	8009118 <_ZN14HardScreenView15handleTickEventEv+0x854>
                        ballX = 1;
 800920a:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 800920e:	edc3 6a00 	vstr	s13, [r3]
                        ballVelX = -ballVelX;
 8009212:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8009216:	ed93 7a00 	vldr	s14, [r3]
 800921a:	eeb1 7a47 	vneg.f32	s14, s14
 800921e:	ed83 7a00 	vstr	s14, [r3]
            ball.moveTo(ballX, ballY);
 8009222:	e6d5      	b.n	8008fd0 <_ZN14HardScreenView15handleTickEventEv+0x70c>
            if (serveDelayTicks > 0) {
 8009224:	f8d5 37e8 	ldr.w	r3, [r5, #2024]	@ 0x7e8
 8009228:	2b00      	cmp	r3, #0
 800922a:	dd09      	ble.n	8009240 <_ZN14HardScreenView15handleTickEventEv+0x97c>
                serveDelayTicks--;
 800922c:	3b01      	subs	r3, #1
 800922e:	f8c5 37e8 	str.w	r3, [r5, #2024]	@ 0x7e8
                if (serveDelayTicks == 0) {
 8009232:	b92b      	cbnz	r3, 8009240 <_ZN14HardScreenView15handleTickEventEv+0x97c>
 8009234:	2301      	movs	r3, #1
 8009236:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                    ball.invalidate();
 800923a:	4630      	mov	r0, r6
 800923c:	f009 f98c 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            if (servingPlayer == 1) {
 8009240:	f8d5 37ec 	ldr.w	r3, [r5, #2028]	@ 0x7ec
 8009244:	2b01      	cmp	r3, #1
 8009246:	d120      	bne.n	800928a <_ZN14HardScreenView15handleTickEventEv+0x9c6>
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8009248:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 800924c:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009250:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8009254:	f505 61fb 	add.w	r1, r5, #2008	@ 0x7d8
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8009258:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800925c:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
 8009260:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8009264:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8009268:	ee07 3a90 	vmov	s15, r3
 800926c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009270:	edc1 7a00 	vstr	s15, [r1]
            ball.moveTo(ballX, ballY);
 8009274:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8009278:	ed93 7a00 	vldr	s14, [r3]
 800927c:	f205 75d4 	addw	r5, r5, #2004	@ 0x7d4
 8009280:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8009284:	edd5 7a00 	vldr	s15, [r5]
 8009288:	e758      	b.n	800913c <_ZN14HardScreenView15handleTickEventEv+0x878>
            } else if (servingPlayer == 2) {
 800928a:	2b02      	cmp	r3, #2
 800928c:	d1f2      	bne.n	8009274 <_ZN14HardScreenView15handleTickEventEv+0x9b0>
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 800928e:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8009292:	f505 61fb 	add.w	r1, r5, #2008	@ 0x7d8
 8009296:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 800929a:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 800929e:	e7db      	b.n	8009258 <_ZN14HardScreenView15handleTickEventEv+0x994>
 80092a0:	0802c389 	.word	0x0802c389
 80092a4:	40020c00 	.word	0x40020c00
 80092a8:	42700000 	.word	0x42700000
 80092ac:	43350000 	.word	0x43350000

080092b0 <_ZN26MediumReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MediumReadyScreenPresenter() {}
 80092b0:	4770      	bx	lr

080092b2 <_ZThn4_N26MediumReadyScreenPresenterD1Ev>:
 80092b2:	3804      	subs	r0, #4
 80092b4:	4770      	bx	lr

080092b6 <_ZN26MediumReadyScreenPresenter10deactivateEv>:
}

void MediumReadyScreenPresenter::activate()
{

}
 80092b6:	4770      	bx	lr

080092b8 <_ZN26MediumReadyScreenPresenterD0Ev>:
 80092b8:	b510      	push	{r4, lr}
 80092ba:	2110      	movs	r1, #16
 80092bc:	4604      	mov	r4, r0
 80092be:	f01f fcbb 	bl	8028c38 <_ZdlPvj>
 80092c2:	4620      	mov	r0, r4
 80092c4:	bd10      	pop	{r4, pc}

080092c6 <_ZThn4_N26MediumReadyScreenPresenterD0Ev>:
 80092c6:	f1a0 0004 	sub.w	r0, r0, #4
 80092ca:	e7f5      	b.n	80092b8 <_ZN26MediumReadyScreenPresenterD0Ev>

080092cc <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView>:
 80092cc:	2200      	movs	r2, #0
 80092ce:	6082      	str	r2, [r0, #8]
    : view(v)
 80092d0:	4a02      	ldr	r2, [pc, #8]	@ (80092dc <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView+0x10>)
 80092d2:	6002      	str	r2, [r0, #0]
 80092d4:	3218      	adds	r2, #24
 80092d6:	6042      	str	r2, [r0, #4]
 80092d8:	60c1      	str	r1, [r0, #12]
}
 80092da:	4770      	bx	lr
 80092dc:	0802cf7c 	.word	0x0802cf7c

080092e0 <_ZN21MediumReadyScreenView14tearDownScreenEv>:
}

void MediumReadyScreenView::tearDownScreen()
{
    MediumReadyScreenViewBase::tearDownScreen();
}
 80092e0:	4770      	bx	lr
	...

080092e4 <_ZN21MediumReadyScreenViewD1Ev>:

class MediumReadyScreenView : public MediumReadyScreenViewBase
{
public:
    MediumReadyScreenView();
    virtual ~MediumReadyScreenView() {}
 80092e4:	b510      	push	{r4, lr}
 80092e6:	4b03      	ldr	r3, [pc, #12]	@ (80092f4 <_ZN21MediumReadyScreenViewD1Ev+0x10>)
 80092e8:	6003      	str	r3, [r0, #0]
 80092ea:	4604      	mov	r4, r0
 80092ec:	f7fc fcd4 	bl	8005c98 <_ZN25MediumReadyScreenViewBaseD1Ev>
 80092f0:	4620      	mov	r0, r4
 80092f2:	bd10      	pop	{r4, pc}
 80092f4:	0802cfbc 	.word	0x0802cfbc

080092f8 <_ZN21MediumReadyScreenViewD0Ev>:
 80092f8:	b510      	push	{r4, lr}
 80092fa:	4604      	mov	r4, r0
 80092fc:	f7ff fff2 	bl	80092e4 <_ZN21MediumReadyScreenViewD1Ev>
 8009300:	4620      	mov	r0, r4
 8009302:	f241 6124 	movw	r1, #5668	@ 0x1624
 8009306:	f01f fc97 	bl	8028c38 <_ZdlPvj>
 800930a:	4620      	mov	r0, r4
 800930c:	bd10      	pop	{r4, pc}

0800930e <_ZN21MediumReadyScreenView15handleTickEventEv>:
void MediumReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 800930e:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 8009312:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 8009314:	f8d2 1620 	ldr.w	r1, [r2, #1568]	@ 0x620
 8009318:	2900      	cmp	r1, #0
 800931a:	dd07      	ble.n	800932c <_ZN21MediumReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 800931c:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 800931e:	3901      	subs	r1, #1

	    }else{
	    	application().gotoMediumScreenScreenNoTransition();
	    }

}
 8009320:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 8009324:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 8009326:	f8c2 1620 	str.w	r1, [r2, #1568]	@ 0x620
	        updateCounter(tickCounter);
 800932a:	4718      	bx	r3
 800932c:	f00c ff6a 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
}
 8009330:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoMediumScreenScreenNoTransition();
 8009334:	f7fa bf5a 	b.w	80041ec <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>

08009338 <_ZN21MediumReadyScreenViewC1Ev>:
MediumReadyScreenView::MediumReadyScreenView()
 8009338:	b510      	push	{r4, lr}
 800933a:	4604      	mov	r4, r0
 800933c:	f7fc fcd8 	bl	8005cf0 <_ZN25MediumReadyScreenViewBaseC1Ev>
 8009340:	4b04      	ldr	r3, [pc, #16]	@ (8009354 <_ZN21MediumReadyScreenViewC1Ev+0x1c>)
 8009342:	6023      	str	r3, [r4, #0]
 8009344:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8009348:	22b4      	movs	r2, #180	@ 0xb4
 800934a:	f8c3 2620 	str.w	r2, [r3, #1568]	@ 0x620
}
 800934e:	4620      	mov	r0, r4
 8009350:	bd10      	pop	{r4, pc}
 8009352:	bf00      	nop
 8009354:	0802cfbc 	.word	0x0802cfbc

08009358 <_ZN21MediumReadyScreenView11setupScreenEv>:
{
 8009358:	b510      	push	{r4, lr}
 800935a:	4604      	mov	r4, r0
    MediumReadyScreenViewBase::setupScreen();
 800935c:	f7fc fc9a 	bl	8005c94 <_ZN25MediumReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 8009360:	6823      	ldr	r3, [r4, #0]
 8009362:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 8009366:	4620      	mov	r0, r4
 8009368:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800936a:	f8d2 1620 	ldr.w	r1, [r2, #1568]	@ 0x620
}
 800936e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 8009372:	4718      	bx	r3

08009374 <_ZN21MediumReadyScreenView13updateCounterEi>:
void MediumReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 8009374:	2978      	cmp	r1, #120	@ 0x78
{
 8009376:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009378:	4605      	mov	r5, r0
	    if (value > 120)
 800937a:	dc23      	bgt.n	80093c4 <_ZN21MediumReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 800937c:	293c      	cmp	r1, #60	@ 0x3c
 800937e:	dc23      	bgt.n	80093c8 <_ZN21MediumReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 8009380:	2900      	cmp	r1, #0
 8009382:	bfd4      	ite	le
 8009384:	2400      	movle	r4, #0
 8009386:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8009388:	f505 774d 	add.w	r7, r5, #820	@ 0x334
 800938c:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 800938e:	f505 7652 	add.w	r6, r5, #840	@ 0x348
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8009392:	4a0e      	ldr	r2, [pc, #56]	@ (80093cc <_ZN21MediumReadyScreenView13updateCounterEi+0x58>)
 8009394:	210a      	movs	r1, #10
 8009396:	4638      	mov	r0, r7
 8009398:	f010 fb4c 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 800939c:	4623      	mov	r3, r4
 800939e:	4a0b      	ldr	r2, [pc, #44]	@ (80093cc <_ZN21MediumReadyScreenView13updateCounterEi+0x58>)
 80093a0:	210a      	movs	r1, #10
 80093a2:	4630      	mov	r0, r6
 80093a4:	f010 fb46 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 80093a8:	f505 700d 	add.w	r0, r5, #564	@ 0x234
 80093ac:	f8c5 727c 	str.w	r7, [r5, #636]	@ 0x27c
 80093b0:	f8c5 6330 	str.w	r6, [r5, #816]	@ 0x330
 80093b4:	f00d ffc4 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 80093b8:	f505 703a 	add.w	r0, r5, #744	@ 0x2e8
}
 80093bc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 80093c0:	f00d bfbe 	b.w	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 80093c4:	2403      	movs	r4, #3
 80093c6:	e7df      	b.n	8009388 <_ZN21MediumReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 80093c8:	2402      	movs	r4, #2
 80093ca:	e7dd      	b.n	8009388 <_ZN21MediumReadyScreenView13updateCounterEi+0x14>
 80093cc:	0802c389 	.word	0x0802c389

080093d0 <_ZN21MediumScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~MediumScreenPresenter() {}
 80093d0:	4770      	bx	lr

080093d2 <_ZThn4_N21MediumScreenPresenterD1Ev>:
 80093d2:	3804      	subs	r0, #4
 80093d4:	4770      	bx	lr

080093d6 <_ZN21MediumScreenPresenter10deactivateEv>:
}

void MediumScreenPresenter::deactivate()
{

}
 80093d6:	4770      	bx	lr

080093d8 <_ZN21MediumScreenPresenterD0Ev>:
 80093d8:	b510      	push	{r4, lr}
 80093da:	2110      	movs	r1, #16
 80093dc:	4604      	mov	r4, r0
 80093de:	f01f fc2b 	bl	8028c38 <_ZdlPvj>
 80093e2:	4620      	mov	r0, r4
 80093e4:	bd10      	pop	{r4, pc}

080093e6 <_ZThn4_N21MediumScreenPresenterD0Ev>:
 80093e6:	f1a0 0004 	sub.w	r0, r0, #4
 80093ea:	e7f5      	b.n	80093d8 <_ZN21MediumScreenPresenterD0Ev>

080093ec <_ZN21MediumScreenPresenter8activateEv>:
	model->resetGame();
 80093ec:	6880      	ldr	r0, [r0, #8]
 80093ee:	f000 bbff 	b.w	8009bf0 <_ZN5Model9resetGameEv>
	...

080093f4 <_ZN21MediumScreenPresenterC1ER16MediumScreenView>:
 80093f4:	2200      	movs	r2, #0
 80093f6:	6082      	str	r2, [r0, #8]
    : view(v)
 80093f8:	4a02      	ldr	r2, [pc, #8]	@ (8009404 <_ZN21MediumScreenPresenterC1ER16MediumScreenView+0x10>)
 80093fa:	6002      	str	r2, [r0, #0]
 80093fc:	3218      	adds	r2, #24
 80093fe:	6042      	str	r2, [r0, #4]
 8009400:	60c1      	str	r1, [r0, #12]
}
 8009402:	4770      	bx	lr
 8009404:	0802cff4 	.word	0x0802cff4

08009408 <_ZN21MediumScreenPresenter13goToEndScreenEi>:
void MediumScreenPresenter::handleTickEvent()
{

}
void MediumScreenPresenter::goToEndScreen(int winner){
 8009408:	b508      	push	{r3, lr}
	model->setWinner(winner);
 800940a:	6880      	ldr	r0, [r0, #8]
 800940c:	f000 fbdc 	bl	8009bc8 <_ZN5Model9setWinnerEi>
	static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8009410:	f00c fef8 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
}
 8009414:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8009418:	f7fa bf28 	b.w	800426c <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

0800941c <_ZN16MediumScreenView14tearDownScreenEv>:
}

void MediumScreenView::tearDownScreen()
{
    MediumScreenViewBase::tearDownScreen();
}
 800941c:	4770      	bx	lr
	...

08009420 <_ZN16MediumScreenViewD1Ev>:

class MediumScreenView : public MediumScreenViewBase
{
public:
    MediumScreenView();
    virtual ~MediumScreenView() {}
 8009420:	b510      	push	{r4, lr}
 8009422:	4b03      	ldr	r3, [pc, #12]	@ (8009430 <_ZN16MediumScreenViewD1Ev+0x10>)
 8009424:	6003      	str	r3, [r0, #0]
 8009426:	4604      	mov	r4, r0
 8009428:	f7fc fef2 	bl	8006210 <_ZN20MediumScreenViewBaseD1Ev>
 800942c:	4620      	mov	r0, r4
 800942e:	bd10      	pop	{r4, pc}
 8009430:	0802d034 	.word	0x0802d034

08009434 <_ZN16MediumScreenViewD0Ev>:
 8009434:	b510      	push	{r4, lr}
 8009436:	4604      	mov	r4, r0
 8009438:	f7ff fff2 	bl	8009420 <_ZN16MediumScreenViewD1Ev>
 800943c:	4620      	mov	r0, r4
 800943e:	f241 7154 	movw	r1, #5972	@ 0x1754
 8009442:	f01f fbf9 	bl	8028c38 <_ZdlPvj>
 8009446:	4620      	mov	r0, r4
 8009448:	bd10      	pop	{r4, pc}
	...

0800944c <_ZN16MediumScreenViewC1Ev>:
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.2f), ballVelY(1.2f),
 800944c:	b510      	push	{r4, lr}
 800944e:	4604      	mov	r4, r0
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false)
 8009450:	f7fc fef8 	bl	8006244 <_ZN20MediumScreenViewBaseC1Ev>
 8009454:	4b12      	ldr	r3, [pc, #72]	@ (80094a0 <_ZN16MediumScreenViewC1Ev+0x54>)
 8009456:	6023      	str	r3, [r4, #0]
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.2f), ballVelY(1.2f),
 8009458:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800945c:	f203 7224 	addw	r2, r3, #1828	@ 0x724
 8009460:	4910      	ldr	r1, [pc, #64]	@ (80094a4 <_ZN16MediumScreenViewC1Ev+0x58>)
 8009462:	6011      	str	r1, [r2, #0]
 8009464:	f503 62e5 	add.w	r2, r3, #1832	@ 0x728
 8009468:	490f      	ldr	r1, [pc, #60]	@ (80094a8 <_ZN16MediumScreenViewC1Ev+0x5c>)
 800946a:	6011      	str	r1, [r2, #0]
 800946c:	f203 712c 	addw	r1, r3, #1836	@ 0x72c
 8009470:	4a0e      	ldr	r2, [pc, #56]	@ (80094ac <_ZN16MediumScreenViewC1Ev+0x60>)
 8009472:	600a      	str	r2, [r1, #0]
 8009474:	f503 61e6 	add.w	r1, r3, #1840	@ 0x730
}
 8009478:	4620      	mov	r0, r4
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.2f), ballVelY(1.2f),
 800947a:	600a      	str	r2, [r1, #0]
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 800947c:	2200      	movs	r2, #0
 800947e:	f883 2734 	strb.w	r2, [r3, #1844]	@ 0x734
 8009482:	f8c3 2738 	str.w	r2, [r3, #1848]	@ 0x738
 8009486:	f8c3 273c 	str.w	r2, [r3, #1852]	@ 0x73c
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false)
 800948a:	f8c3 2740 	str.w	r2, [r3, #1856]	@ 0x740
 800948e:	f8c3 2744 	str.w	r2, [r3, #1860]	@ 0x744
 8009492:	f883 2748 	strb.w	r2, [r3, #1864]	@ 0x748
 8009496:	f8c3 274c 	str.w	r2, [r3, #1868]	@ 0x74c
 800949a:	f883 2750 	strb.w	r2, [r3, #1872]	@ 0x750
}
 800949e:	bd10      	pop	{r4, pc}
 80094a0:	0802d034 	.word	0x0802d034
 80094a4:	43200000 	.word	0x43200000
 80094a8:	42f00000 	.word	0x42f00000
 80094ac:	3f99999a 	.word	0x3f99999a

080094b0 <_ZN16MediumScreenView11setupScreenEv>:
{
 80094b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80094b4:	4605      	mov	r5, r0
    score1 = 0;
 80094b6:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
	ballX = 160;
 80094ba:	f204 7724 	addw	r7, r4, #1828	@ 0x724
    MediumScreenViewBase::setupScreen();
 80094be:	f7fc fea5 	bl	800620c <_ZN20MediumScreenViewBase11setupScreenEv>
	ballY = 120;
 80094c2:	f504 68e5 	add.w	r8, r4, #1832	@ 0x728
    score1 = 0;
 80094c6:	2300      	movs	r3, #0
	ballX = 160;
 80094c8:	4a27      	ldr	r2, [pc, #156]	@ (8009568 <_ZN16MediumScreenView11setupScreenEv+0xb8>)
    score1 = 0;
 80094ca:	f8c4 3740 	str.w	r3, [r4, #1856]	@ 0x740
	score2 = 0;
 80094ce:	f8c4 3744 	str.w	r3, [r4, #1860]	@ 0x744
	gameOver = false;
 80094d2:	f884 3748 	strb.w	r3, [r4, #1864]	@ 0x748
	ballVelX = 1.2f;
 80094d6:	f204 712c 	addw	r1, r4, #1836	@ 0x72c
	ballX = 160;
 80094da:	603a      	str	r2, [r7, #0]
	ballY = 120;
 80094dc:	4a23      	ldr	r2, [pc, #140]	@ (800956c <_ZN16MediumScreenView11setupScreenEv+0xbc>)
 80094de:	f8c8 2000 	str.w	r2, [r8]
	ballVelX = 1.2f;
 80094e2:	4a23      	ldr	r2, [pc, #140]	@ (8009570 <_ZN16MediumScreenView11setupScreenEv+0xc0>)
 80094e4:	600a      	str	r2, [r1, #0]
	ballVelY = 1.2f;
 80094e6:	f504 61e6 	add.w	r1, r4, #1840	@ 0x730
	ball.invalidate();
 80094ea:	f505 7636 	add.w	r6, r5, #728	@ 0x2d8
	ballVelY = 1.2f;
 80094ee:	600a      	str	r2, [r1, #0]
	ball.invalidate();
 80094f0:	4630      	mov	r0, r6
	waitingForServe = false;
 80094f2:	f884 3734 	strb.w	r3, [r4, #1844]	@ 0x734
	serveDelayTicks = 0;
 80094f6:	f8c4 3738 	str.w	r3, [r4, #1848]	@ 0x738
	servingPlayer = 0;
 80094fa:	f8c4 373c 	str.w	r3, [r4, #1852]	@ 0x73c
    buzzerBeepCounter = 0;
 80094fe:	f8c4 374c 	str.w	r3, [r4, #1868]	@ 0x74c
    buzzerBeepState = false;
 8009502:	f884 3750 	strb.w	r3, [r4, #1872]	@ 0x750
	ball.invalidate();
 8009506:	f009 f827 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.moveTo(ballX, ballY);
 800950a:	ed98 7a00 	vldr	s14, [r8]
 800950e:	edd7 7a00 	vldr	s15, [r7]
 8009512:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8009516:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800951a:	ee17 3a10 	vmov	r3, s14
 800951e:	b21a      	sxth	r2, r3
 8009520:	ee17 3a90 	vmov	r3, s15
 8009524:	4630      	mov	r0, r6
 8009526:	b219      	sxth	r1, r3
 8009528:	f7f8 fbb5 	bl	8001c96 <_ZN8touchgfx8Drawable6moveToEss>
	ball.invalidate();
 800952c:	4630      	mov	r0, r6
	Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 800952e:	4e11      	ldr	r6, [pc, #68]	@ (8009574 <_ZN16MediumScreenView11setupScreenEv+0xc4>)
	ball.invalidate();
 8009530:	f009 f812 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 8009534:	f8d4 3740 	ldr.w	r3, [r4, #1856]	@ 0x740
 8009538:	4632      	mov	r2, r6
 800953a:	210a      	movs	r1, #10
 800953c:	f505 608a 	add.w	r0, r5, #1104	@ 0x450
 8009540:	f010 fa78 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	MediumScreenViewBase::score1.invalidate();
 8009544:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8009548:	f00d fefa 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 800954c:	f8d4 3744 	ldr.w	r3, [r4, #1860]	@ 0x744
 8009550:	4632      	mov	r2, r6
 8009552:	f205 403c 	addw	r0, r5, #1084	@ 0x43c
 8009556:	210a      	movs	r1, #10
 8009558:	f010 fa6c 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	MediumScreenViewBase::score2.invalidate();
 800955c:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 8009560:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	MediumScreenViewBase::score2.invalidate();
 8009564:	f00d beec 	b.w	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009568:	43200000 	.word	0x43200000
 800956c:	42f00000 	.word	0x42f00000
 8009570:	3f99999a 	.word	0x3f99999a
 8009574:	0802c389 	.word	0x0802c389

08009578 <_ZN16MediumScreenView15handleTickEventEv>:

void MediumScreenView::handleTickEvent()
{
 8009578:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}

    if (gameOver) {
 800957c:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 8009580:	4605      	mov	r5, r0
    if (gameOver) {
 8009582:	f894 3748 	ldrb.w	r3, [r4, #1864]	@ 0x748
 8009586:	2b00      	cmp	r3, #0
 8009588:	f040 82ca 	bne.w	8009b20 <_ZN16MediumScreenView15handleTickEventEv+0x5a8>
        return; // Không xử lý nếu trò chơi kết thúc
    }
    // Xử lý bíp buzzer
	if (buzzerBeepCounter > 0) {
 800958c:	f8d4 374c 	ldr.w	r3, [r4, #1868]	@ 0x74c
 8009590:	2b00      	cmp	r3, #0
 8009592:	dd1b      	ble.n	80095cc <_ZN16MediumScreenView15handleTickEventEv+0x54>
		if (buzzerBeepCounter % 6 == 0) { // Bíp mỗi 100ms (6 ticks tại 60 FPS)
 8009594:	2206      	movs	r2, #6
 8009596:	fb93 f1f2 	sdiv	r1, r3, r2
 800959a:	fb02 3311 	mls	r3, r2, r1, r3
 800959e:	b953      	cbnz	r3, 80095b6 <_ZN16MediumScreenView15handleTickEventEv+0x3e>
			buzzerBeepState = !buzzerBeepState;
 80095a0:	f894 2750 	ldrb.w	r2, [r4, #1872]	@ 0x750
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 80095a4:	48d4      	ldr	r0, [pc, #848]	@ (80098f8 <_ZN16MediumScreenView15handleTickEventEv+0x380>)
			buzzerBeepState = !buzzerBeepState;
 80095a6:	f082 0201 	eor.w	r2, r2, #1
 80095aa:	f884 2750 	strb.w	r2, [r4, #1872]	@ 0x750
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 80095ae:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80095b2:	f001 fac7 	bl	800ab44 <HAL_GPIO_WritePin>
		}
		buzzerBeepCounter--;
 80095b6:	f8d4 274c 	ldr.w	r2, [r4, #1868]	@ 0x74c
 80095ba:	3a01      	subs	r2, #1
 80095bc:	f8c4 274c 	str.w	r2, [r4, #1868]	@ 0x74c
		if (buzzerBeepCounter == 0) {
 80095c0:	b922      	cbnz	r2, 80095cc <_ZN16MediumScreenView15handleTickEventEv+0x54>
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET); // Tắt buzzer sau khi bíp xong
 80095c2:	48cd      	ldr	r0, [pc, #820]	@ (80098f8 <_ZN16MediumScreenView15handleTickEventEv+0x380>)
 80095c4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80095c8:	f001 fabc 	bl	800ab44 <HAL_GPIO_WritePin>
		}
	}

    JoystickCommand_t command;
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 80095cc:	4fcb      	ldr	r7, [pc, #812]	@ (80098fc <_ZN16MediumScreenView15handleTickEventEv+0x384>)
 80095ce:	e026      	b.n	800961e <_ZN16MediumScreenView15handleTickEventEv+0xa6>
        switch (command) {
 80095d0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80095d4:	2b09      	cmp	r3, #9
 80095d6:	d822      	bhi.n	800961e <_ZN16MediumScreenView15handleTickEventEv+0xa6>
 80095d8:	e8df f013 	tbh	[pc, r3, lsl #1]
 80095dc:	016a000a 	.word	0x016a000a
 80095e0:	00210021 	.word	0x00210021
 80095e4:	01860173 	.word	0x01860173
 80095e8:	00210021 	.word	0x00210021
 80095ec:	01d701a0 	.word	0x01d701a0
        return rect.y;
 80095f0:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
            case JOY1_LEFT:
				{
					int16_t newY=paddle1.getY()+2;
 80095f4:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 80095f6:	b236      	sxth	r6, r6
 80095f8:	2ec6      	cmp	r6, #198	@ 0xc6
 80095fa:	bfa8      	it	ge
 80095fc:	26c6      	movge	r6, #198	@ 0xc6
						newY = 198; // Dừng tại cạnh dưới
					}
                    if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 80095fe:	42b3      	cmp	r3, r6
				{
					int16_t newY = paddle1.getY() - 2;
					if (newY < 2) {
						newY = 2; // Dừng tại cạnh trên
					}
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8009600:	d00d      	beq.n	800961e <_ZN16MediumScreenView15handleTickEventEv+0xa6>
						paddle1.invalidate();
 8009602:	f105 08f0 	add.w	r8, r5, #240	@ 0xf0
 8009606:	4640      	mov	r0, r8
 8009608:	f00d fe9a 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle1.moveTo(paddle1.getX(), newY);
 800960c:	f9b5 10f4 	ldrsh.w	r1, [r5, #244]	@ 0xf4
 8009610:	4632      	mov	r2, r6
					if (newY >198) {
						newY = 198; // Dừng tại cạnh dưới
					}
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
						paddle2.invalidate();
						paddle2.moveTo(paddle2.getX(), newY);
 8009612:	4640      	mov	r0, r8
 8009614:	f7f8 fb3f 	bl	8001c96 <_ZN8touchgfx8Drawable6moveToEss>
						paddle2.invalidate();
 8009618:	4640      	mov	r0, r8
 800961a:	f00d fe91 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 800961e:	2300      	movs	r3, #0
 8009620:	6838      	ldr	r0, [r7, #0]
 8009622:	461a      	mov	r2, r3
 8009624:	f10d 0107 	add.w	r1, sp, #7
 8009628:	f003 fdf9 	bl	800d21e <osMessageQueueGet>
 800962c:	2800      	cmp	r0, #0
 800962e:	d0cf      	beq.n	80095d0 <_ZN16MediumScreenView15handleTickEventEv+0x58>
				break;
        }
    }

    // Cập nhật bóng nếu không chờ phát
        if (!waitingForServe) {
 8009630:	f894 3734 	ldrb.w	r3, [r4, #1844]	@ 0x734
 8009634:	f505 7636 	add.w	r6, r5, #728	@ 0x2d8
 8009638:	2b00      	cmp	r3, #0
 800963a:	f040 8274 	bne.w	8009b26 <_ZN16MediumScreenView15handleTickEventEv+0x5ae>
            ball.invalidate();
 800963e:	4630      	mov	r0, r6
 8009640:	f008 ff8a 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ballX += ballVelX;
 8009644:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
 8009648:	ed93 6a00 	vldr	s12, [r3]
 800964c:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 8009650:	edd3 6a00 	vldr	s13, [r3]
 8009654:	ee76 6a26 	vadd.f32	s13, s12, s13
            ballY += ballVelY;
 8009658:	f504 62e5 	add.w	r2, r4, #1832	@ 0x728
            ballX += ballVelX;
 800965c:	edc3 6a00 	vstr	s13, [r3]
            ballY += ballVelY;
 8009660:	f504 61e6 	add.w	r1, r4, #1840	@ 0x730
 8009664:	edd1 7a00 	vldr	s15, [r1]
 8009668:	ed92 7a00 	vldr	s14, [r2]
 800966c:	ee37 7a87 	vadd.f32	s14, s15, s14

            // Xử lý va chạm với cạnh trên/dưới
            if (ballY < 0) {
 8009670:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8009674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            ballY += ballVelY;
 8009678:	ed82 7a00 	vstr	s14, [r2]
            if (ballY < 0) {
 800967c:	f140 81b9 	bpl.w	80099f2 <_ZN16MediumScreenView15handleTickEventEv+0x47a>
                ballY = 0;
 8009680:	2300      	movs	r3, #0
 8009682:	6013      	str	r3, [r2, #0]
                ballVelY = -ballVelY;
            } else if (ballY + ball.getHeight() > 240) {
                ballY = 240 - ball.getHeight();
                ballVelY = -ballVelY;
 8009684:	eef1 7a67 	vneg.f32	s15, s15
 8009688:	edc1 7a00 	vstr	s15, [r1]
        return rect.x;
 800968c:	f9b5 20f4 	ldrsh.w	r2, [r5, #244]	@ 0xf4
            }

            // Xử lý va chạm với paddle1 (bên trái)
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8009690:	f9b5 30f8 	ldrsh.w	r3, [r5, #248]	@ 0xf8
 8009694:	4413      	add	r3, r2
 8009696:	ee07 3a90 	vmov	s15, r3
 800969a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
                ballX >= paddle1.getX() &&
                ballY + ball.getHeight() >= paddle1.getY() &&
 800969e:	f504 63e5 	add.w	r3, r4, #1832	@ 0x728
 80096a2:	eef4 6ac7 	vcmpe.f32	s13, s14
 80096a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096aa:	edd3 7a00 	vldr	s15, [r3]
 80096ae:	d831      	bhi.n	8009714 <_ZN16MediumScreenView15handleTickEventEv+0x19c>
                ballX >= paddle1.getX() &&
 80096b0:	ee05 2a90 	vmov	s11, r2
 80096b4:	eef8 5ae5 	vcvt.f32.s32	s11, s11
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 80096b8:	eef4 6ae5 	vcmpe.f32	s13, s11
 80096bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096c0:	db28      	blt.n	8009714 <_ZN16MediumScreenView15handleTickEventEv+0x19c>
                ballY + ball.getHeight() >= paddle1.getY() &&
 80096c2:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
        return rect.y;
 80096c6:	f9b5 20f6 	ldrsh.w	r2, [r5, #246]	@ 0xf6
 80096ca:	ee06 3a90 	vmov	s13, r3
 80096ce:	ee05 2a90 	vmov	s11, r2
 80096d2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80096d6:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80096da:	ee76 6aa7 	vadd.f32	s13, s13, s15
                ballX >= paddle1.getX() &&
 80096de:	eef4 6ae5 	vcmpe.f32	s13, s11
 80096e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096e6:	db15      	blt.n	8009714 <_ZN16MediumScreenView15handleTickEventEv+0x19c>
                ballY <= paddle1.getY() + paddle1.getHeight()) {
 80096e8:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 80096ec:	4413      	add	r3, r2
 80096ee:	ee06 3a90 	vmov	s13, r3
 80096f2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                ballY + ball.getHeight() >= paddle1.getY() &&
 80096f6:	eef4 6ae7 	vcmpe.f32	s13, s15
 80096fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096fe:	db09      	blt.n	8009714 <_ZN16MediumScreenView15handleTickEventEv+0x19c>
                ballX = paddle1.getX() + paddle1.getWidth();
 8009700:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 8009704:	ed83 7a00 	vstr	s14, [r3]
                ballVelX = -ballVelX;
 8009708:	eeb1 6a46 	vneg.f32	s12, s12
 800970c:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
 8009710:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 8009714:	f9b5 02e0 	ldrsh.w	r0, [r5, #736]	@ 0x2e0
        return rect.x;
 8009718:	f9b5 3120 	ldrsh.w	r3, [r5, #288]	@ 0x120
            }

            // Xử lý va chạm với paddle2 (bên phải)
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 800971c:	ee07 0a10 	vmov	s14, r0
 8009720:	f204 7124 	addw	r1, r4, #1828	@ 0x724
 8009724:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009728:	ed91 7a00 	vldr	s14, [r1]
 800972c:	ee76 6a87 	vadd.f32	s13, s13, s14
 8009730:	ee07 3a10 	vmov	s14, r3
 8009734:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
                ballY + ball.getHeight() >= paddle2.getY() &&
 8009738:	eef4 6ac7 	vcmpe.f32	s13, s14
 800973c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009740:	db39      	blt.n	80097b6 <_ZN16MediumScreenView15handleTickEventEv+0x23e>
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8009742:	f9b5 2124 	ldrsh.w	r2, [r5, #292]	@ 0x124
 8009746:	441a      	add	r2, r3
 8009748:	ee07 2a10 	vmov	s14, r2
 800974c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8009750:	eef4 6ac7 	vcmpe.f32	s13, s14
 8009754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009758:	d82d      	bhi.n	80097b6 <_ZN16MediumScreenView15handleTickEventEv+0x23e>
                ballY + ball.getHeight() >= paddle2.getY() &&
 800975a:	f9b5 22e2 	ldrsh.w	r2, [r5, #738]	@ 0x2e2
        return rect.y;
 800975e:	f9b5 7122 	ldrsh.w	r7, [r5, #290]	@ 0x122
 8009762:	ee07 2a10 	vmov	s14, r2
 8009766:	ee06 7a90 	vmov	s13, r7
 800976a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800976e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8009772:	ee37 7a27 	vadd.f32	s14, s14, s15
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8009776:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800977a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800977e:	db1a      	blt.n	80097b6 <_ZN16MediumScreenView15handleTickEventEv+0x23e>
                ballY <= paddle2.getY() + paddle2.getHeight()) {
 8009780:	f9b5 2126 	ldrsh.w	r2, [r5, #294]	@ 0x126
 8009784:	443a      	add	r2, r7
 8009786:	ee07 2a10 	vmov	s14, r2
 800978a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle2.getY() &&
 800978e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8009792:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009796:	db0e      	blt.n	80097b6 <_ZN16MediumScreenView15handleTickEventEv+0x23e>
                ballX = paddle2.getX() - ball.getWidth();
 8009798:	1a1b      	subs	r3, r3, r0
 800979a:	ee07 3a10 	vmov	s14, r3
 800979e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballVelX = -ballVelX;
 80097a2:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
                ballX = paddle2.getX() - ball.getWidth();
 80097a6:	ed81 7a00 	vstr	s14, [r1]
                ballVelX = -ballVelX;
 80097aa:	ed93 7a00 	vldr	s14, [r3]
 80097ae:	eeb1 7a47 	vneg.f32	s14, s14
 80097b2:	ed83 7a00 	vstr	s14, [r3]
            }

            // Xử lý va chạm với bên trái (ballX < 1)
                if (ballX >319) {
 80097b6:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 80097ba:	edd3 6a00 	vldr	s13, [r3]
 80097be:	ed9f 7a50 	vldr	s14, [pc, #320]	@ 8009900 <_ZN16MediumScreenView15handleTickEventEv+0x388>
 80097c2:	eef4 6ac7 	vcmpe.f32	s13, s14
 80097c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80097ca:	f340 812b 	ble.w	8009a24 <_ZN16MediumScreenView15handleTickEventEv+0x4ac>
                    if (ballY > 60 && ballY < 181) {
 80097ce:	eddf 6a51 	vldr	s13, [pc, #324]	@ 8009914 <_ZN16MediumScreenView15handleTickEventEv+0x39c>
 80097d2:	eef4 7ae6 	vcmpe.f32	s15, s13
 80097d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80097da:	f340 8181 	ble.w	8009ae0 <_ZN16MediumScreenView15handleTickEventEv+0x568>
 80097de:	eddf 6a4e 	vldr	s13, [pc, #312]	@ 8009918 <_ZN16MediumScreenView15handleTickEventEv+0x3a0>
 80097e2:	eef4 7ae6 	vcmpe.f32	s15, s13
 80097e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80097ea:	f140 8179 	bpl.w	8009ae0 <_ZN16MediumScreenView15handleTickEventEv+0x568>
                        // Bóng trong vùng goal2, cộng điểm cho người chơi 1
                        score1++;
 80097ee:	f8d4 3740 	ldr.w	r3, [r4, #1856]	@ 0x740
                        Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 80097f2:	4a44      	ldr	r2, [pc, #272]	@ (8009904 <_ZN16MediumScreenView15handleTickEventEv+0x38c>)
                        score1++;
 80097f4:	3301      	adds	r3, #1
 80097f6:	f8c4 3740 	str.w	r3, [r4, #1856]	@ 0x740
                        Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 80097fa:	210a      	movs	r1, #10
 80097fc:	f505 608a 	add.w	r0, r5, #1104	@ 0x450
 8009800:	f010 f918 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        MediumScreenViewBase::score1.invalidate();
 8009804:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8009808:	f00d fd9a 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
						buzzerBeepState = true;
 800980c:	2701      	movs	r7, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 800980e:	2312      	movs	r3, #18
 8009810:	f8c4 374c 	str.w	r3, [r4, #1868]	@ 0x74c
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8009814:	4838      	ldr	r0, [pc, #224]	@ (80098f8 <_ZN16MediumScreenView15handleTickEventEv+0x380>)
						buzzerBeepState = true;
 8009816:	f884 7750 	strb.w	r7, [r4, #1872]	@ 0x750
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 800981a:	463a      	mov	r2, r7
 800981c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8009820:	f001 f990 	bl	800ab44 <HAL_GPIO_WritePin>
                        if (score1 >= 11) {
 8009824:	f8d4 3740 	ldr.w	r3, [r4, #1856]	@ 0x740
 8009828:	2b0a      	cmp	r3, #10
 800982a:	dd05      	ble.n	8009838 <_ZN16MediumScreenView15handleTickEventEv+0x2c0>
                            gameOver = true;
                            presenter->goToEndScreen(1);
 800982c:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
                            gameOver = true;
 800982e:	f884 7748 	strb.w	r7, [r4, #1864]	@ 0x748
                            presenter->goToEndScreen(1);
 8009832:	4639      	mov	r1, r7
 8009834:	f7ff fde8 	bl	8009408 <_ZN21MediumScreenPresenter13goToEndScreenEi>
        visible = vis;
 8009838:	2300      	movs	r3, #0
 800983a:	f885 32fd 	strb.w	r3, [r5, #765]	@ 0x2fd
                        }
                        ball.setVisible(false);
                        ball.invalidate();
 800983e:	4630      	mov	r0, r6
 8009840:	f008 fe8a 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 8009844:	2301      	movs	r3, #1
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8009846:	223c      	movs	r2, #60	@ 0x3c
                        waitingForServe = true;
 8009848:	f884 3734 	strb.w	r3, [r4, #1844]	@ 0x734
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 800984c:	f8c4 2738 	str.w	r2, [r4, #1848]	@ 0x738
                        servingPlayer = 1; // Người chơi 1 phát bóng
 8009850:	f8c4 373c 	str.w	r3, [r4, #1852]	@ 0x73c
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8009854:	f9b5 20f8 	ldrsh.w	r2, [r5, #248]	@ 0xf8
 8009858:	f9b5 30f4 	ldrsh.w	r3, [r5, #244]	@ 0xf4
 800985c:	4413      	add	r3, r2
 800985e:	330a      	adds	r3, #10
 8009860:	ee07 3a90 	vmov	s15, r3
 8009864:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009868:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 800986c:	edc3 7a00 	vstr	s15, [r3]
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009870:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 8009874:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009878:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
                        ball.invalidate();
                        waitingForServe = true;
                        serveDelayTicks = 60; // 1 giây với 60 FPS
                        servingPlayer = 2; // Người chơi 2 phát bóng
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800987c:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8009880:	f9b5 22e2 	ldrsh.w	r2, [r5, #738]	@ 0x2e2
 8009884:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8009888:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 800988c:	ee07 3a10 	vmov	s14, r3
 8009890:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009894:	f504 64e5 	add.w	r4, r4, #1832	@ 0x728
 8009898:	ed84 7a00 	vstr	s14, [r4]
                        ball.moveTo(ballX, ballY);
 800989c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
            if (servingPlayer == 1) {
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
            } else if (servingPlayer == 2) {
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
            }
            ball.moveTo(ballX, ballY);
 80098a0:	ee17 3a10 	vmov	r3, s14
 80098a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098a8:	b21a      	sxth	r2, r3
 80098aa:	ee17 3a90 	vmov	r3, s15
 80098ae:	e130      	b.n	8009b12 <_ZN16MediumScreenView15handleTickEventEv+0x59a>
        return rect.y;
 80098b0:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
					int16_t newY = paddle1.getY() - 2;
 80098b4:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 80098b6:	b236      	sxth	r6, r6
 80098b8:	2e02      	cmp	r6, #2
 80098ba:	bfb8      	it	lt
 80098bc:	2602      	movlt	r6, #2
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 80098be:	429e      	cmp	r6, r3
 80098c0:	e69e      	b.n	8009600 <_ZN16MediumScreenView15handleTickEventEv+0x88>
 80098c2:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
					int16_t newY=paddle2.getY()+2;
 80098c6:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 80098c8:	b236      	sxth	r6, r6
 80098ca:	2ec6      	cmp	r6, #198	@ 0xc6
 80098cc:	bfa8      	it	ge
 80098ce:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 80098d0:	429e      	cmp	r6, r3
 80098d2:	f43f aea4 	beq.w	800961e <_ZN16MediumScreenView15handleTickEventEv+0xa6>
						paddle2.invalidate();
 80098d6:	f505 788e 	add.w	r8, r5, #284	@ 0x11c
 80098da:	4640      	mov	r0, r8
 80098dc:	f00d fd30 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle2.moveTo(paddle2.getX(), newY);
 80098e0:	f9b5 1120 	ldrsh.w	r1, [r5, #288]	@ 0x120
 80098e4:	4632      	mov	r2, r6
 80098e6:	e694      	b.n	8009612 <_ZN16MediumScreenView15handleTickEventEv+0x9a>
 80098e8:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
					int16_t newY = paddle2.getY() - 2;
 80098ec:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 80098ee:	b236      	sxth	r6, r6
 80098f0:	2e02      	cmp	r6, #2
 80098f2:	bfb8      	it	lt
 80098f4:	2602      	movlt	r6, #2
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 80098f6:	e7eb      	b.n	80098d0 <_ZN16MediumScreenView15handleTickEventEv+0x358>
 80098f8:	40020c00 	.word	0x40020c00
 80098fc:	20002dc0 	.word	0x20002dc0
 8009900:	439f8000 	.word	0x439f8000
 8009904:	0802c389 	.word	0x0802c389
 8009908:	bf99999a 	.word	0xbf99999a
 800990c:	3f99999a 	.word	0x3f99999a
 8009910:	43700000 	.word	0x43700000
 8009914:	42700000 	.word	0x42700000
 8009918:	43350000 	.word	0x43350000
				if (waitingForServe && servingPlayer == 1) {
 800991c:	f894 3734 	ldrb.w	r3, [r4, #1844]	@ 0x734
 8009920:	2b00      	cmp	r3, #0
 8009922:	f43f ae7c 	beq.w	800961e <_ZN16MediumScreenView15handleTickEventEv+0xa6>
 8009926:	f8d4 173c 	ldr.w	r1, [r4, #1852]	@ 0x73c
 800992a:	2901      	cmp	r1, #1
 800992c:	f47f ae77 	bne.w	800961e <_ZN16MediumScreenView15handleTickEventEv+0xa6>
					ballVelX = 1.2f; // Phát bóng sang phải
 8009930:	ed1f 7a0a 	vldr	s14, [pc, #-40]	@ 800990c <_ZN16MediumScreenView15handleTickEventEv+0x394>
					waitingForServe = false;
 8009934:	2300      	movs	r3, #0
 8009936:	f884 3734 	strb.w	r3, [r4, #1844]	@ 0x734
					ballVelX = 1.2f; // Phát bóng sang phải
 800993a:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
 800993e:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle1.getY() + paddle1.getHeight()/2 > ballY) ? -1.2f : 1.2f;
 8009942:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 8009946:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 800994a:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
 800994e:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8009952:	ee07 3a90 	vmov	s15, r3
 8009956:	f504 63e5 	add.w	r3, r4, #1832	@ 0x728
 800995a:	edd3 6a00 	vldr	s13, [r3]
 800995e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009962:	f504 63e6 	add.w	r3, r4, #1840	@ 0x730
 8009966:	eef4 7ae6 	vcmpe.f32	s15, s13
 800996a:	ed5f 7a19 	vldr	s15, [pc, #-100]	@ 8009908 <_ZN16MediumScreenView15handleTickEventEv+0x390>
 800996e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009972:	bfd8      	it	le
 8009974:	eef0 7a47 	vmovle.f32	s15, s14
 8009978:	edc3 7a00 	vstr	s15, [r3]
        visible = vis;
 800997c:	f885 12fd 	strb.w	r1, [r5, #765]	@ 0x2fd
					ball.invalidate();
 8009980:	f505 7036 	add.w	r0, r5, #728	@ 0x2d8
 8009984:	f008 fde8 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8009988:	e649      	b.n	800961e <_ZN16MediumScreenView15handleTickEventEv+0xa6>
				if (waitingForServe && servingPlayer == 2) {
 800998a:	f894 3734 	ldrb.w	r3, [r4, #1844]	@ 0x734
 800998e:	2b00      	cmp	r3, #0
 8009990:	f43f ae45 	beq.w	800961e <_ZN16MediumScreenView15handleTickEventEv+0xa6>
 8009994:	f8d4 373c 	ldr.w	r3, [r4, #1852]	@ 0x73c
 8009998:	2b02      	cmp	r3, #2
 800999a:	f47f ae40 	bne.w	800961e <_ZN16MediumScreenView15handleTickEventEv+0xa6>
					ballVelX = -1.2f; // Phát bóng sang trái
 800999e:	ed1f 7a26 	vldr	s14, [pc, #-152]	@ 8009908 <_ZN16MediumScreenView15handleTickEventEv+0x390>
					waitingForServe = false;
 80099a2:	2300      	movs	r3, #0
 80099a4:	f884 3734 	strb.w	r3, [r4, #1844]	@ 0x734
					ballVelX = -1.2f; // Phát bóng sang trái
 80099a8:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
 80099ac:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle2.getY() + paddle2.getHeight()/2 > ballY) ? -1.2f : 1.2f;
 80099b0:	f9b5 3126 	ldrsh.w	r3, [r5, #294]	@ 0x126
 80099b4:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80099b8:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
 80099bc:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80099c0:	ee07 3a90 	vmov	s15, r3
 80099c4:	f504 63e5 	add.w	r3, r4, #1832	@ 0x728
 80099c8:	edd3 6a00 	vldr	s13, [r3]
 80099cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80099d0:	f504 63e6 	add.w	r3, r4, #1840	@ 0x730
 80099d4:	eef4 7ae6 	vcmpe.f32	s15, s13
 80099d8:	ed5f 7a34 	vldr	s15, [pc, #-208]	@ 800990c <_ZN16MediumScreenView15handleTickEventEv+0x394>
 80099dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80099e0:	bfd8      	it	le
 80099e2:	eeb0 7a67 	vmovle.f32	s14, s15
 80099e6:	ed83 7a00 	vstr	s14, [r3]
 80099ea:	2301      	movs	r3, #1
 80099ec:	f885 32fd 	strb.w	r3, [r5, #765]	@ 0x2fd
 80099f0:	e7c6      	b.n	8009980 <_ZN16MediumScreenView15handleTickEventEv+0x408>
        return rect.height;
 80099f2:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
            } else if (ballY + ball.getHeight() > 240) {
 80099f6:	ee05 3a90 	vmov	s11, r3
 80099fa:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80099fe:	ee35 7a87 	vadd.f32	s14, s11, s14
 8009a02:	ed5f 5a3d 	vldr	s11, [pc, #-244]	@ 8009910 <_ZN16MediumScreenView15handleTickEventEv+0x398>
 8009a06:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8009a0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a0e:	f77f ae3d 	ble.w	800968c <_ZN16MediumScreenView15handleTickEventEv+0x114>
                ballY = 240 - ball.getHeight();
 8009a12:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 8009a16:	ee07 3a10 	vmov	s14, r3
 8009a1a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009a1e:	ed82 7a00 	vstr	s14, [r2]
 8009a22:	e62f      	b.n	8009684 <_ZN16MediumScreenView15handleTickEventEv+0x10c>
                if (ballX <1) {
 8009a24:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8009a28:	eef4 6ac7 	vcmpe.f32	s13, s14
 8009a2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a30:	d562      	bpl.n	8009af8 <_ZN16MediumScreenView15handleTickEventEv+0x580>
                    if (ballY > 60 && ballY < 181) {
 8009a32:	ed5f 6a48 	vldr	s13, [pc, #-288]	@ 8009914 <_ZN16MediumScreenView15handleTickEventEv+0x39c>
 8009a36:	eef4 7ae6 	vcmpe.f32	s15, s13
 8009a3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a3e:	dd4f      	ble.n	8009ae0 <_ZN16MediumScreenView15handleTickEventEv+0x568>
 8009a40:	ed5f 6a4b 	vldr	s13, [pc, #-300]	@ 8009918 <_ZN16MediumScreenView15handleTickEventEv+0x3a0>
 8009a44:	eef4 7ae6 	vcmpe.f32	s15, s13
 8009a48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a4c:	d548      	bpl.n	8009ae0 <_ZN16MediumScreenView15handleTickEventEv+0x568>
                        score2++;
 8009a4e:	f8d4 3744 	ldr.w	r3, [r4, #1860]	@ 0x744
                        Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 8009a52:	4a54      	ldr	r2, [pc, #336]	@ (8009ba4 <_ZN16MediumScreenView15handleTickEventEv+0x62c>)
                        score2++;
 8009a54:	3301      	adds	r3, #1
 8009a56:	f8c4 3744 	str.w	r3, [r4, #1860]	@ 0x744
                        Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 8009a5a:	210a      	movs	r1, #10
 8009a5c:	f205 403c 	addw	r0, r5, #1084	@ 0x43c
 8009a60:	f00f ffe8 	bl	8019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        MediumScreenViewBase::score2.invalidate();
 8009a64:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
 8009a68:	f00d fc6a 	bl	8017340 <_ZNK8touchgfx8Drawable10invalidateEv>
						buzzerBeepState = true;
 8009a6c:	2701      	movs	r7, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8009a6e:	2312      	movs	r3, #18
 8009a70:	f8c4 374c 	str.w	r3, [r4, #1868]	@ 0x74c
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8009a74:	484c      	ldr	r0, [pc, #304]	@ (8009ba8 <_ZN16MediumScreenView15handleTickEventEv+0x630>)
						buzzerBeepState = true;
 8009a76:	f884 7750 	strb.w	r7, [r4, #1872]	@ 0x750
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8009a7a:	463a      	mov	r2, r7
 8009a7c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8009a80:	f001 f860 	bl	800ab44 <HAL_GPIO_WritePin>
                        if (score2 >= 11) {
 8009a84:	f8d4 3744 	ldr.w	r3, [r4, #1860]	@ 0x744
 8009a88:	2b0a      	cmp	r3, #10
 8009a8a:	dd05      	ble.n	8009a98 <_ZN16MediumScreenView15handleTickEventEv+0x520>
                            presenter->goToEndScreen(2);
 8009a8c:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
                            gameOver = true;
 8009a8e:	f884 7748 	strb.w	r7, [r4, #1864]	@ 0x748
                            presenter->goToEndScreen(2);
 8009a92:	2102      	movs	r1, #2
 8009a94:	f7ff fcb8 	bl	8009408 <_ZN21MediumScreenPresenter13goToEndScreenEi>
        visible = vis;
 8009a98:	2300      	movs	r3, #0
 8009a9a:	f885 32fd 	strb.w	r3, [r5, #765]	@ 0x2fd
                        ball.invalidate();
 8009a9e:	4630      	mov	r0, r6
 8009aa0:	f008 fd5a 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 8009aa4:	2301      	movs	r3, #1
 8009aa6:	f884 3734 	strb.w	r3, [r4, #1844]	@ 0x734
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8009aaa:	233c      	movs	r3, #60	@ 0x3c
 8009aac:	f8c4 3738 	str.w	r3, [r4, #1848]	@ 0x738
                        servingPlayer = 2; // Người chơi 2 phát bóng
 8009ab0:	2302      	movs	r3, #2
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8009ab2:	f9b5 22e0 	ldrsh.w	r2, [r5, #736]	@ 0x2e0
                        servingPlayer = 2; // Người chơi 2 phát bóng
 8009ab6:	f8c4 373c 	str.w	r3, [r4, #1852]	@ 0x73c
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8009aba:	f9b5 3120 	ldrsh.w	r3, [r5, #288]	@ 0x120
 8009abe:	1a9b      	subs	r3, r3, r2
 8009ac0:	3b0a      	subs	r3, #10
 8009ac2:	ee07 3a90 	vmov	s15, r3
 8009ac6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009aca:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 8009ace:	edc3 7a00 	vstr	s15, [r3]
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009ad2:	f9b5 3126 	ldrsh.w	r3, [r5, #294]	@ 0x126
 8009ad6:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009ada:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
 8009ade:	e6cd      	b.n	800987c <_ZN16MediumScreenView15handleTickEventEv+0x304>
                        ballX = 1;
 8009ae0:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 8009ae4:	ed83 7a00 	vstr	s14, [r3]
                        ballVelX = -ballVelX;
 8009ae8:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
 8009aec:	ed93 7a00 	vldr	s14, [r3]
 8009af0:	eeb1 7a47 	vneg.f32	s14, s14
 8009af4:	ed83 7a00 	vstr	s14, [r3]
            ball.moveTo(ballX, ballY);
 8009af8:	f204 7424 	addw	r4, r4, #1828	@ 0x724
 8009afc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b00:	ed94 7a00 	vldr	s14, [r4]
 8009b04:	ee17 3a90 	vmov	r3, s15
 8009b08:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8009b0c:	b21a      	sxth	r2, r3
 8009b0e:	ee17 3a10 	vmov	r3, s14
            ball.moveTo(ballX, ballY);
 8009b12:	4630      	mov	r0, r6
 8009b14:	b219      	sxth	r1, r3
 8009b16:	f7f8 f8be 	bl	8001c96 <_ZN8touchgfx8Drawable6moveToEss>
            ball.invalidate();
 8009b1a:	4630      	mov	r0, r6
 8009b1c:	f008 fd1c 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        }
}
 8009b20:	b002      	add	sp, #8
 8009b22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            if (serveDelayTicks > 0) {
 8009b26:	f8d4 3738 	ldr.w	r3, [r4, #1848]	@ 0x738
 8009b2a:	2b00      	cmp	r3, #0
 8009b2c:	dd09      	ble.n	8009b42 <_ZN16MediumScreenView15handleTickEventEv+0x5ca>
                serveDelayTicks--;
 8009b2e:	3b01      	subs	r3, #1
 8009b30:	f8c4 3738 	str.w	r3, [r4, #1848]	@ 0x738
                if (serveDelayTicks == 0) {
 8009b34:	b92b      	cbnz	r3, 8009b42 <_ZN16MediumScreenView15handleTickEventEv+0x5ca>
 8009b36:	2301      	movs	r3, #1
 8009b38:	f885 32fd 	strb.w	r3, [r5, #765]	@ 0x2fd
                    ball.invalidate();
 8009b3c:	4630      	mov	r0, r6
 8009b3e:	f008 fd0b 	bl	8012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            if (servingPlayer == 1) {
 8009b42:	f8d4 373c 	ldr.w	r3, [r4, #1852]	@ 0x73c
 8009b46:	2b01      	cmp	r3, #1
 8009b48:	d120      	bne.n	8009b8c <_ZN16MediumScreenView15handleTickEventEv+0x614>
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8009b4a:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 8009b4e:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009b52:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
 8009b56:	f504 61e5 	add.w	r1, r4, #1832	@ 0x728
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8009b5a:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8009b5e:	f9b5 22e2 	ldrsh.w	r2, [r5, #738]	@ 0x2e2
 8009b62:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8009b66:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8009b6a:	ee07 3a90 	vmov	s15, r3
 8009b6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009b72:	edc1 7a00 	vstr	s15, [r1]
            ball.moveTo(ballX, ballY);
 8009b76:	f504 63e5 	add.w	r3, r4, #1832	@ 0x728
 8009b7a:	ed93 7a00 	vldr	s14, [r3]
 8009b7e:	f204 7424 	addw	r4, r4, #1828	@ 0x724
 8009b82:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8009b86:	edd4 7a00 	vldr	s15, [r4]
 8009b8a:	e689      	b.n	80098a0 <_ZN16MediumScreenView15handleTickEventEv+0x328>
            } else if (servingPlayer == 2) {
 8009b8c:	2b02      	cmp	r3, #2
 8009b8e:	d1f2      	bne.n	8009b76 <_ZN16MediumScreenView15handleTickEventEv+0x5fe>
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8009b90:	f9b5 3126 	ldrsh.w	r3, [r5, #294]	@ 0x126
 8009b94:	f504 61e5 	add.w	r1, r4, #1832	@ 0x728
 8009b98:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009b9c:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
 8009ba0:	e7db      	b.n	8009b5a <_ZN16MediumScreenView15handleTickEventEv+0x5e2>
 8009ba2:	bf00      	nop
 8009ba4:	0802c389 	.word	0x0802c389
 8009ba8:	40020c00 	.word	0x40020c00

08009bac <_ZN5ModelC1Ev>:

#include <cstring>
#include <cstdio>

ModelListener* Model::staticListener = nullptr;
Model::Model() : modelListener(0), winner(0), player1Score(0), player2Score(0), gameOver(false)
 8009bac:	2200      	movs	r2, #0
 8009bae:	e9c0 2200 	strd	r2, r2, [r0]
 8009bb2:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8009bb6:	7402      	strb	r2, [r0, #16]
{
}
 8009bb8:	4770      	bx	lr
	...

08009bbc <_ZN5Model4tickEv>:

void Model::tick()
{
    // Tick xử lý định kỳ nếu cần
    staticListener = modelListener; // gán mỗi lần để sync
 8009bbc:	4b01      	ldr	r3, [pc, #4]	@ (8009bc4 <_ZN5Model4tickEv+0x8>)
 8009bbe:	6802      	ldr	r2, [r0, #0]
 8009bc0:	601a      	str	r2, [r3, #0]
}
 8009bc2:	4770      	bx	lr
 8009bc4:	200031f4 	.word	0x200031f4

08009bc8 <_ZN5Model9setWinnerEi>:
void Model::paddle2Action() {
    if (staticListener) staticListener->paddle2Action();
}
void Model::setWinner(int winnerId)
{
    winner = winnerId;
 8009bc8:	6041      	str	r1, [r0, #4]
    printf("Model::setWinner: %d\n", winner);
 8009bca:	4801      	ldr	r0, [pc, #4]	@ (8009bd0 <_ZN5Model9setWinnerEi+0x8>)
 8009bcc:	f020 ba36 	b.w	802a03c <iprintf>
 8009bd0:	0802c38c 	.word	0x0802c38c

08009bd4 <_ZN5Model9getWinnerEi>:
}

int Model::getWinner(int playerId)
{
 8009bd4:	b510      	push	{r4, lr}
    int result = (winner == playerId) ? 1 : 0;
 8009bd6:	6844      	ldr	r4, [r0, #4]
    printf("Model::getWinner: playerId=%d, result=%d\n", playerId, result);
 8009bd8:	4804      	ldr	r0, [pc, #16]	@ (8009bec <_ZN5Model9getWinnerEi+0x18>)
    int result = (winner == playerId) ? 1 : 0;
 8009bda:	1a63      	subs	r3, r4, r1
 8009bdc:	425c      	negs	r4, r3
 8009bde:	415c      	adcs	r4, r3
    printf("Model::getWinner: playerId=%d, result=%d\n", playerId, result);
 8009be0:	4622      	mov	r2, r4
 8009be2:	f020 fa2b 	bl	802a03c <iprintf>
    return result;
}
 8009be6:	4620      	mov	r0, r4
 8009be8:	bd10      	pop	{r4, pc}
 8009bea:	bf00      	nop
 8009bec:	0802c3a2 	.word	0x0802c3a2

08009bf0 <_ZN5Model9resetGameEv>:

void Model::resetGame()
{

    player1Score = 0;
 8009bf0:	2300      	movs	r3, #0
    player2Score = 0;
 8009bf2:	e9c0 3302 	strd	r3, r3, [r0, #8]
    gameOver = false;
 8009bf6:	7403      	strb	r3, [r0, #16]
    winner = 0; // Đặt lại winner về 0
 8009bf8:	6043      	str	r3, [r0, #4]
}
 8009bfa:	4770      	bx	lr

08009bfc <_ZN20StartScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartScreenPresenter() {}
 8009bfc:	4770      	bx	lr

08009bfe <_ZThn4_N20StartScreenPresenterD1Ev>:
 8009bfe:	3804      	subs	r0, #4
 8009c00:	4770      	bx	lr

08009c02 <_ZN20StartScreenPresenter10deactivateEv>:
}

void StartScreenPresenter::activate()
{

}
 8009c02:	4770      	bx	lr

08009c04 <_ZN20StartScreenPresenterD0Ev>:
 8009c04:	b510      	push	{r4, lr}
 8009c06:	2110      	movs	r1, #16
 8009c08:	4604      	mov	r4, r0
 8009c0a:	f01f f815 	bl	8028c38 <_ZdlPvj>
 8009c0e:	4620      	mov	r0, r4
 8009c10:	bd10      	pop	{r4, pc}

08009c12 <_ZThn4_N20StartScreenPresenterD0Ev>:
 8009c12:	f1a0 0004 	sub.w	r0, r0, #4
 8009c16:	e7f5      	b.n	8009c04 <_ZN20StartScreenPresenterD0Ev>

08009c18 <_ZN20StartScreenPresenterC1ER15StartScreenView>:
 8009c18:	2200      	movs	r2, #0
 8009c1a:	6082      	str	r2, [r0, #8]
    : view(v)
 8009c1c:	4a02      	ldr	r2, [pc, #8]	@ (8009c28 <_ZN20StartScreenPresenterC1ER15StartScreenView+0x10>)
 8009c1e:	6002      	str	r2, [r0, #0]
 8009c20:	3218      	adds	r2, #24
 8009c22:	6042      	str	r2, [r0, #4]
 8009c24:	60c1      	str	r1, [r0, #12]
}
 8009c26:	4770      	bx	lr
 8009c28:	0802d068 	.word	0x0802d068

08009c2c <_ZN15StartScreenView14tearDownScreenEv>:
}

void StartScreenView::tearDownScreen()
{
    StartScreenViewBase::tearDownScreen();
}
 8009c2c:	4770      	bx	lr
	...

08009c30 <_ZN15StartScreenViewD1Ev>:

class StartScreenView : public StartScreenViewBase
{
public:
    StartScreenView();
    virtual ~StartScreenView() {}
 8009c30:	b510      	push	{r4, lr}
 8009c32:	4b03      	ldr	r3, [pc, #12]	@ (8009c40 <_ZN15StartScreenViewD1Ev+0x10>)
 8009c34:	6003      	str	r3, [r0, #0]
 8009c36:	4604      	mov	r4, r0
 8009c38:	f7fc fe22 	bl	8006880 <_ZN19StartScreenViewBaseD1Ev>
 8009c3c:	4620      	mov	r0, r4
 8009c3e:	bd10      	pop	{r4, pc}
 8009c40:	0802d0a8 	.word	0x0802d0a8

08009c44 <_ZN15StartScreenViewD0Ev>:
 8009c44:	b510      	push	{r4, lr}
 8009c46:	4604      	mov	r4, r0
 8009c48:	f7ff fff2 	bl	8009c30 <_ZN15StartScreenViewD1Ev>
 8009c4c:	4620      	mov	r0, r4
 8009c4e:	f641 017c 	movw	r1, #6268	@ 0x187c
 8009c52:	f01e fff1 	bl	8028c38 <_ZdlPvj>
 8009c56:	4620      	mov	r0, r4
 8009c58:	bd10      	pop	{r4, pc}
	...

08009c5c <_ZN15StartScreenViewC1Ev>:
StartScreenView::StartScreenView()
 8009c5c:	b510      	push	{r4, lr}
 8009c5e:	4604      	mov	r4, r0
 8009c60:	f7fc fe54 	bl	800690c <_ZN19StartScreenViewBaseC1Ev>
 8009c64:	4b01      	ldr	r3, [pc, #4]	@ (8009c6c <_ZN15StartScreenViewC1Ev+0x10>)
 8009c66:	6023      	str	r3, [r4, #0]
}
 8009c68:	4620      	mov	r0, r4
 8009c6a:	bd10      	pop	{r4, pc}
 8009c6c:	0802d0a8 	.word	0x0802d0a8

08009c70 <_ZN15StartScreenView11setupScreenEv>:
    StartScreenViewBase::setupScreen();
 8009c70:	f7fc bde4 	b.w	800683c <_ZN19StartScreenViewBase11setupScreenEv>

08009c74 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8009c74:	20f0      	movs	r0, #240	@ 0xf0
 8009c76:	4770      	bx	lr

08009c78 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009c78:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8009c7c:	4770      	bx	lr

08009c7e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009c7e:	2029      	movs	r0, #41	@ 0x29
 8009c80:	f7f8 bdd2 	b.w	8002828 <LCD_IO_WriteReg>

08009c84 <ili9341_DisplayOff>:
 8009c84:	2028      	movs	r0, #40	@ 0x28
 8009c86:	f7f8 bdcf 	b.w	8002828 <LCD_IO_WriteReg>

08009c8a <ili9341_Init>:
{
 8009c8a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009c8c:	f7f8 fda0 	bl	80027d0 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8009c90:	20ca      	movs	r0, #202	@ 0xca
 8009c92:	f7f8 fdc9 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c96:	20c3      	movs	r0, #195	@ 0xc3
 8009c98:	f7f8 fdaa 	bl	80027f0 <LCD_IO_WriteData>
 8009c9c:	2008      	movs	r0, #8
 8009c9e:	f7f8 fda7 	bl	80027f0 <LCD_IO_WriteData>
 8009ca2:	2050      	movs	r0, #80	@ 0x50
 8009ca4:	f7f8 fda4 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009ca8:	20cf      	movs	r0, #207	@ 0xcf
 8009caa:	f7f8 fdbd 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cae:	2000      	movs	r0, #0
 8009cb0:	f7f8 fd9e 	bl	80027f0 <LCD_IO_WriteData>
 8009cb4:	20c1      	movs	r0, #193	@ 0xc1
 8009cb6:	f7f8 fd9b 	bl	80027f0 <LCD_IO_WriteData>
 8009cba:	2030      	movs	r0, #48	@ 0x30
 8009cbc:	f7f8 fd98 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cc0:	20ed      	movs	r0, #237	@ 0xed
 8009cc2:	f7f8 fdb1 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cc6:	2064      	movs	r0, #100	@ 0x64
 8009cc8:	f7f8 fd92 	bl	80027f0 <LCD_IO_WriteData>
 8009ccc:	2003      	movs	r0, #3
 8009cce:	f7f8 fd8f 	bl	80027f0 <LCD_IO_WriteData>
 8009cd2:	2012      	movs	r0, #18
 8009cd4:	f7f8 fd8c 	bl	80027f0 <LCD_IO_WriteData>
 8009cd8:	2081      	movs	r0, #129	@ 0x81
 8009cda:	f7f8 fd89 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cde:	20e8      	movs	r0, #232	@ 0xe8
 8009ce0:	f7f8 fda2 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ce4:	2085      	movs	r0, #133	@ 0x85
 8009ce6:	f7f8 fd83 	bl	80027f0 <LCD_IO_WriteData>
 8009cea:	2000      	movs	r0, #0
 8009cec:	f7f8 fd80 	bl	80027f0 <LCD_IO_WriteData>
 8009cf0:	2078      	movs	r0, #120	@ 0x78
 8009cf2:	f7f8 fd7d 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cf6:	20cb      	movs	r0, #203	@ 0xcb
 8009cf8:	f7f8 fd96 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cfc:	2039      	movs	r0, #57	@ 0x39
 8009cfe:	f7f8 fd77 	bl	80027f0 <LCD_IO_WriteData>
 8009d02:	202c      	movs	r0, #44	@ 0x2c
 8009d04:	f7f8 fd74 	bl	80027f0 <LCD_IO_WriteData>
 8009d08:	2000      	movs	r0, #0
 8009d0a:	f7f8 fd71 	bl	80027f0 <LCD_IO_WriteData>
 8009d0e:	2034      	movs	r0, #52	@ 0x34
 8009d10:	f7f8 fd6e 	bl	80027f0 <LCD_IO_WriteData>
 8009d14:	2002      	movs	r0, #2
 8009d16:	f7f8 fd6b 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d1a:	20f7      	movs	r0, #247	@ 0xf7
 8009d1c:	f7f8 fd84 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d20:	2020      	movs	r0, #32
 8009d22:	f7f8 fd65 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d26:	20ea      	movs	r0, #234	@ 0xea
 8009d28:	f7f8 fd7e 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d2c:	2000      	movs	r0, #0
 8009d2e:	f7f8 fd5f 	bl	80027f0 <LCD_IO_WriteData>
 8009d32:	2000      	movs	r0, #0
 8009d34:	f7f8 fd5c 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d38:	20b1      	movs	r0, #177	@ 0xb1
 8009d3a:	f7f8 fd75 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d3e:	2000      	movs	r0, #0
 8009d40:	f7f8 fd56 	bl	80027f0 <LCD_IO_WriteData>
 8009d44:	201b      	movs	r0, #27
 8009d46:	f7f8 fd53 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d4a:	20b6      	movs	r0, #182	@ 0xb6
 8009d4c:	f7f8 fd6c 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d50:	200a      	movs	r0, #10
 8009d52:	f7f8 fd4d 	bl	80027f0 <LCD_IO_WriteData>
 8009d56:	20a2      	movs	r0, #162	@ 0xa2
 8009d58:	f7f8 fd4a 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d5c:	20c0      	movs	r0, #192	@ 0xc0
 8009d5e:	f7f8 fd63 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d62:	2010      	movs	r0, #16
 8009d64:	f7f8 fd44 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d68:	20c1      	movs	r0, #193	@ 0xc1
 8009d6a:	f7f8 fd5d 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d6e:	2010      	movs	r0, #16
 8009d70:	f7f8 fd3e 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d74:	20c5      	movs	r0, #197	@ 0xc5
 8009d76:	f7f8 fd57 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d7a:	2045      	movs	r0, #69	@ 0x45
 8009d7c:	f7f8 fd38 	bl	80027f0 <LCD_IO_WriteData>
 8009d80:	2015      	movs	r0, #21
 8009d82:	f7f8 fd35 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d86:	20c7      	movs	r0, #199	@ 0xc7
 8009d88:	f7f8 fd4e 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d8c:	2090      	movs	r0, #144	@ 0x90
 8009d8e:	f7f8 fd2f 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d92:	2036      	movs	r0, #54	@ 0x36
 8009d94:	f7f8 fd48 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d98:	20c8      	movs	r0, #200	@ 0xc8
 8009d9a:	f7f8 fd29 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d9e:	20f2      	movs	r0, #242	@ 0xf2
 8009da0:	f7f8 fd42 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009da4:	2000      	movs	r0, #0
 8009da6:	f7f8 fd23 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009daa:	20b0      	movs	r0, #176	@ 0xb0
 8009dac:	f7f8 fd3c 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009db0:	20c2      	movs	r0, #194	@ 0xc2
 8009db2:	f7f8 fd1d 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009db6:	20b6      	movs	r0, #182	@ 0xb6
 8009db8:	f7f8 fd36 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009dbc:	200a      	movs	r0, #10
 8009dbe:	f7f8 fd17 	bl	80027f0 <LCD_IO_WriteData>
 8009dc2:	20a7      	movs	r0, #167	@ 0xa7
 8009dc4:	f7f8 fd14 	bl	80027f0 <LCD_IO_WriteData>
 8009dc8:	2027      	movs	r0, #39	@ 0x27
 8009dca:	f7f8 fd11 	bl	80027f0 <LCD_IO_WriteData>
 8009dce:	2004      	movs	r0, #4
 8009dd0:	f7f8 fd0e 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009dd4:	202a      	movs	r0, #42	@ 0x2a
 8009dd6:	f7f8 fd27 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009dda:	2000      	movs	r0, #0
 8009ddc:	f7f8 fd08 	bl	80027f0 <LCD_IO_WriteData>
 8009de0:	2000      	movs	r0, #0
 8009de2:	f7f8 fd05 	bl	80027f0 <LCD_IO_WriteData>
 8009de6:	2000      	movs	r0, #0
 8009de8:	f7f8 fd02 	bl	80027f0 <LCD_IO_WriteData>
 8009dec:	20ef      	movs	r0, #239	@ 0xef
 8009dee:	f7f8 fcff 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009df2:	202b      	movs	r0, #43	@ 0x2b
 8009df4:	f7f8 fd18 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009df8:	2000      	movs	r0, #0
 8009dfa:	f7f8 fcf9 	bl	80027f0 <LCD_IO_WriteData>
 8009dfe:	2000      	movs	r0, #0
 8009e00:	f7f8 fcf6 	bl	80027f0 <LCD_IO_WriteData>
 8009e04:	2001      	movs	r0, #1
 8009e06:	f7f8 fcf3 	bl	80027f0 <LCD_IO_WriteData>
 8009e0a:	203f      	movs	r0, #63	@ 0x3f
 8009e0c:	f7f8 fcf0 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009e10:	20f6      	movs	r0, #246	@ 0xf6
 8009e12:	f7f8 fd09 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009e16:	2001      	movs	r0, #1
 8009e18:	f7f8 fcea 	bl	80027f0 <LCD_IO_WriteData>
 8009e1c:	2000      	movs	r0, #0
 8009e1e:	f7f8 fce7 	bl	80027f0 <LCD_IO_WriteData>
 8009e22:	2006      	movs	r0, #6
 8009e24:	f7f8 fce4 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009e28:	202c      	movs	r0, #44	@ 0x2c
 8009e2a:	f7f8 fcfd 	bl	8002828 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009e2e:	20c8      	movs	r0, #200	@ 0xc8
 8009e30:	f7f8 fd48 	bl	80028c4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009e34:	2026      	movs	r0, #38	@ 0x26
 8009e36:	f7f8 fcf7 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009e3a:	2001      	movs	r0, #1
 8009e3c:	f7f8 fcd8 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009e40:	20e0      	movs	r0, #224	@ 0xe0
 8009e42:	f7f8 fcf1 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009e46:	200f      	movs	r0, #15
 8009e48:	f7f8 fcd2 	bl	80027f0 <LCD_IO_WriteData>
 8009e4c:	2029      	movs	r0, #41	@ 0x29
 8009e4e:	f7f8 fccf 	bl	80027f0 <LCD_IO_WriteData>
 8009e52:	2024      	movs	r0, #36	@ 0x24
 8009e54:	f7f8 fccc 	bl	80027f0 <LCD_IO_WriteData>
 8009e58:	200c      	movs	r0, #12
 8009e5a:	f7f8 fcc9 	bl	80027f0 <LCD_IO_WriteData>
 8009e5e:	200e      	movs	r0, #14
 8009e60:	f7f8 fcc6 	bl	80027f0 <LCD_IO_WriteData>
 8009e64:	2009      	movs	r0, #9
 8009e66:	f7f8 fcc3 	bl	80027f0 <LCD_IO_WriteData>
 8009e6a:	204e      	movs	r0, #78	@ 0x4e
 8009e6c:	f7f8 fcc0 	bl	80027f0 <LCD_IO_WriteData>
 8009e70:	2078      	movs	r0, #120	@ 0x78
 8009e72:	f7f8 fcbd 	bl	80027f0 <LCD_IO_WriteData>
 8009e76:	203c      	movs	r0, #60	@ 0x3c
 8009e78:	f7f8 fcba 	bl	80027f0 <LCD_IO_WriteData>
 8009e7c:	2009      	movs	r0, #9
 8009e7e:	f7f8 fcb7 	bl	80027f0 <LCD_IO_WriteData>
 8009e82:	2013      	movs	r0, #19
 8009e84:	f7f8 fcb4 	bl	80027f0 <LCD_IO_WriteData>
 8009e88:	2005      	movs	r0, #5
 8009e8a:	f7f8 fcb1 	bl	80027f0 <LCD_IO_WriteData>
 8009e8e:	2017      	movs	r0, #23
 8009e90:	f7f8 fcae 	bl	80027f0 <LCD_IO_WriteData>
 8009e94:	2011      	movs	r0, #17
 8009e96:	f7f8 fcab 	bl	80027f0 <LCD_IO_WriteData>
 8009e9a:	2000      	movs	r0, #0
 8009e9c:	f7f8 fca8 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009ea0:	20e1      	movs	r0, #225	@ 0xe1
 8009ea2:	f7f8 fcc1 	bl	8002828 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ea6:	2000      	movs	r0, #0
 8009ea8:	f7f8 fca2 	bl	80027f0 <LCD_IO_WriteData>
 8009eac:	2016      	movs	r0, #22
 8009eae:	f7f8 fc9f 	bl	80027f0 <LCD_IO_WriteData>
 8009eb2:	201b      	movs	r0, #27
 8009eb4:	f7f8 fc9c 	bl	80027f0 <LCD_IO_WriteData>
 8009eb8:	2004      	movs	r0, #4
 8009eba:	f7f8 fc99 	bl	80027f0 <LCD_IO_WriteData>
 8009ebe:	2011      	movs	r0, #17
 8009ec0:	f7f8 fc96 	bl	80027f0 <LCD_IO_WriteData>
 8009ec4:	2007      	movs	r0, #7
 8009ec6:	f7f8 fc93 	bl	80027f0 <LCD_IO_WriteData>
 8009eca:	2031      	movs	r0, #49	@ 0x31
 8009ecc:	f7f8 fc90 	bl	80027f0 <LCD_IO_WriteData>
 8009ed0:	2033      	movs	r0, #51	@ 0x33
 8009ed2:	f7f8 fc8d 	bl	80027f0 <LCD_IO_WriteData>
 8009ed6:	2042      	movs	r0, #66	@ 0x42
 8009ed8:	f7f8 fc8a 	bl	80027f0 <LCD_IO_WriteData>
 8009edc:	2005      	movs	r0, #5
 8009ede:	f7f8 fc87 	bl	80027f0 <LCD_IO_WriteData>
 8009ee2:	200c      	movs	r0, #12
 8009ee4:	f7f8 fc84 	bl	80027f0 <LCD_IO_WriteData>
 8009ee8:	200a      	movs	r0, #10
 8009eea:	f7f8 fc81 	bl	80027f0 <LCD_IO_WriteData>
 8009eee:	2028      	movs	r0, #40	@ 0x28
 8009ef0:	f7f8 fc7e 	bl	80027f0 <LCD_IO_WriteData>
 8009ef4:	202f      	movs	r0, #47	@ 0x2f
 8009ef6:	f7f8 fc7b 	bl	80027f0 <LCD_IO_WriteData>
 8009efa:	200f      	movs	r0, #15
 8009efc:	f7f8 fc78 	bl	80027f0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009f00:	2011      	movs	r0, #17
 8009f02:	f7f8 fc91 	bl	8002828 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009f06:	20c8      	movs	r0, #200	@ 0xc8
 8009f08:	f7f8 fcdc 	bl	80028c4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009f0c:	2029      	movs	r0, #41	@ 0x29
 8009f0e:	f7f8 fc8b 	bl	8002828 <LCD_IO_WriteReg>
}
 8009f12:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8009f16:	202c      	movs	r0, #44	@ 0x2c
 8009f18:	f7f8 bc86 	b.w	8002828 <LCD_IO_WriteReg>

08009f1c <ili9341_ReadID>:
{
 8009f1c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009f1e:	f7f8 fc57 	bl	80027d0 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8009f22:	2103      	movs	r1, #3
 8009f24:	20d3      	movs	r0, #211	@ 0xd3
 8009f26:	f7f8 fc9b 	bl	8002860 <LCD_IO_ReadData>
}
 8009f2a:	b280      	uxth	r0, r0
 8009f2c:	bd08      	pop	{r3, pc}

08009f2e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8009f2e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009f30:	b2c4      	uxtb	r4, r0
 8009f32:	2202      	movs	r2, #2
 8009f34:	2103      	movs	r1, #3
 8009f36:	4620      	mov	r0, r4
 8009f38:	f7f8 fc00 	bl	800273c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8009f3c:	200a      	movs	r0, #10
 8009f3e:	f7f8 fc45 	bl	80027cc <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009f42:	4620      	mov	r0, r4
 8009f44:	2200      	movs	r2, #0
 8009f46:	2103      	movs	r1, #3
 8009f48:	f7f8 fbf8 	bl	800273c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8009f4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009f50:	2002      	movs	r0, #2
 8009f52:	f7f8 bc3b 	b.w	80027cc <IOE_Delay>

08009f56 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8009f56:	b538      	push	{r3, r4, r5, lr}
 8009f58:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009f5a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8009f5c:	f7f8 fbec 	bl	8002738 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009f60:	2100      	movs	r1, #0
 8009f62:	4620      	mov	r0, r4
 8009f64:	f7f8 fc02 	bl	800276c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009f68:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009f6a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009f6c:	4620      	mov	r0, r4
 8009f6e:	f7f8 fbfd 	bl	800276c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009f72:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8009f76:	b280      	uxth	r0, r0
 8009f78:	bd38      	pop	{r3, r4, r5, pc}

08009f7a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009f7a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009f7c:	b2c4      	uxtb	r4, r0
 8009f7e:	2140      	movs	r1, #64	@ 0x40
 8009f80:	4620      	mov	r0, r4
 8009f82:	f7f8 fbf3 	bl	800276c <IOE_Read>
  
  if(state > 0)
 8009f86:	0603      	lsls	r3, r0, #24
 8009f88:	d507      	bpl.n	8009f9a <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009f8a:	214c      	movs	r1, #76	@ 0x4c
 8009f8c:	4620      	mov	r0, r4
 8009f8e:	f7f8 fbed 	bl	800276c <IOE_Read>
 8009f92:	3800      	subs	r0, #0
 8009f94:	bf18      	it	ne
 8009f96:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8009f98:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009f9a:	2201      	movs	r2, #1
 8009f9c:	214b      	movs	r1, #75	@ 0x4b
 8009f9e:	4620      	mov	r0, r4
 8009fa0:	f7f8 fbcc 	bl	800273c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009fa4:	4620      	mov	r0, r4
 8009fa6:	2200      	movs	r2, #0
 8009fa8:	214b      	movs	r1, #75	@ 0x4b
 8009faa:	f7f8 fbc7 	bl	800273c <IOE_Write>
  uint8_t ret = 0;
 8009fae:	2000      	movs	r0, #0
 8009fb0:	e7f2      	b.n	8009f98 <stmpe811_TS_DetectTouch+0x1e>

08009fb2 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8009fb2:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009fb4:	2304      	movs	r3, #4
 8009fb6:	b2c4      	uxtb	r4, r0
{
 8009fb8:	460e      	mov	r6, r1
 8009fba:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009fbc:	21d7      	movs	r1, #215	@ 0xd7
 8009fbe:	eb0d 0203 	add.w	r2, sp, r3
 8009fc2:	4620      	mov	r0, r4
 8009fc4:	f7f8 fbec 	bl	80027a0 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009fc8:	9b01      	ldr	r3, [sp, #4]
 8009fca:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009fcc:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009fce:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009fd2:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009fd4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009fd6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009fd8:	2201      	movs	r2, #1
 8009fda:	214b      	movs	r1, #75	@ 0x4b
 8009fdc:	f7f8 fbae 	bl	800273c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009fe0:	2200      	movs	r2, #0
 8009fe2:	214b      	movs	r1, #75	@ 0x4b
 8009fe4:	4620      	mov	r0, r4
 8009fe6:	f7f8 fba9 	bl	800273c <IOE_Write>
}
 8009fea:	b002      	add	sp, #8
 8009fec:	bd70      	pop	{r4, r5, r6, pc}
	...

08009ff0 <stmpe811_Init>:
{
 8009ff0:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8009ff2:	4a0a      	ldr	r2, [pc, #40]	@ (800a01c <stmpe811_Init+0x2c>)
 8009ff4:	7813      	ldrb	r3, [r2, #0]
 8009ff6:	4298      	cmp	r0, r3
{
 8009ff8:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8009ffa:	d00d      	beq.n	800a018 <stmpe811_Init+0x28>
 8009ffc:	7851      	ldrb	r1, [r2, #1]
 8009ffe:	4288      	cmp	r0, r1
 800a000:	d00a      	beq.n	800a018 <stmpe811_Init+0x28>
 800a002:	b10b      	cbz	r3, 800a008 <stmpe811_Init+0x18>
 800a004:	b941      	cbnz	r1, 800a018 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800a006:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 800a008:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800a00a:	f7f8 fb95 	bl	8002738 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800a00e:	4620      	mov	r0, r4
}
 800a010:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 800a014:	f7ff bf8b 	b.w	8009f2e <stmpe811_Reset>
}
 800a018:	bd10      	pop	{r4, pc}
 800a01a:	bf00      	nop
 800a01c:	200031f8 	.word	0x200031f8

0800a020 <stmpe811_EnableGlobalIT>:
{
 800a020:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800a022:	b2c4      	uxtb	r4, r0
 800a024:	2109      	movs	r1, #9
 800a026:	4620      	mov	r0, r4
 800a028:	f7f8 fba0 	bl	800276c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800a02c:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800a030:	b2d2      	uxtb	r2, r2
 800a032:	4620      	mov	r0, r4
 800a034:	2109      	movs	r1, #9
}
 800a036:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800a03a:	f7f8 bb7f 	b.w	800273c <IOE_Write>

0800a03e <stmpe811_DisableGlobalIT>:
{
 800a03e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800a040:	b2c4      	uxtb	r4, r0
 800a042:	2109      	movs	r1, #9
 800a044:	4620      	mov	r0, r4
 800a046:	f7f8 fb91 	bl	800276c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800a04a:	2109      	movs	r1, #9
 800a04c:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 800a050:	4620      	mov	r0, r4
}
 800a052:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800a056:	f7f8 bb71 	b.w	800273c <IOE_Write>

0800a05a <stmpe811_EnableITSource>:
{
 800a05a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a05c:	b2c4      	uxtb	r4, r0
{
 800a05e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a060:	4620      	mov	r0, r4
 800a062:	210a      	movs	r1, #10
 800a064:	f7f8 fb82 	bl	800276c <IOE_Read>
  tmp |= Source; 
 800a068:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a06c:	b2d2      	uxtb	r2, r2
 800a06e:	4620      	mov	r0, r4
 800a070:	210a      	movs	r1, #10
}
 800a072:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a076:	f7f8 bb61 	b.w	800273c <IOE_Write>

0800a07a <stmpe811_TS_EnableIT>:
{
 800a07a:	b510      	push	{r4, lr}
 800a07c:	4604      	mov	r4, r0
  IOE_ITConfig();
 800a07e:	f7f8 fb5c 	bl	800273a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 800a082:	4620      	mov	r0, r4
 800a084:	211f      	movs	r1, #31
 800a086:	f7ff ffe8 	bl	800a05a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800a08a:	4620      	mov	r0, r4
}
 800a08c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 800a090:	f7ff bfc6 	b.w	800a020 <stmpe811_EnableGlobalIT>

0800a094 <stmpe811_DisableITSource>:
{
 800a094:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a096:	b2c4      	uxtb	r4, r0
{
 800a098:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a09a:	4620      	mov	r0, r4
 800a09c:	210a      	movs	r1, #10
 800a09e:	f7f8 fb65 	bl	800276c <IOE_Read>
  tmp &= ~Source; 
 800a0a2:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a0a6:	b2d2      	uxtb	r2, r2
 800a0a8:	4620      	mov	r0, r4
 800a0aa:	210a      	movs	r1, #10
}
 800a0ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a0b0:	f7f8 bb44 	b.w	800273c <IOE_Write>

0800a0b4 <stmpe811_TS_DisableIT>:
{
 800a0b4:	b510      	push	{r4, lr}
 800a0b6:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800a0b8:	f7ff ffc1 	bl	800a03e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800a0bc:	4620      	mov	r0, r4
 800a0be:	211f      	movs	r1, #31
}
 800a0c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800a0c4:	f7ff bfe6 	b.w	800a094 <stmpe811_DisableITSource>

0800a0c8 <stmpe811_ReadGITStatus>:
{
 800a0c8:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800a0ca:	b2c0      	uxtb	r0, r0
{
 800a0cc:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800a0ce:	210b      	movs	r1, #11
 800a0d0:	f7f8 fb4c 	bl	800276c <IOE_Read>
}
 800a0d4:	4020      	ands	r0, r4
 800a0d6:	bd10      	pop	{r4, pc}

0800a0d8 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800a0d8:	211f      	movs	r1, #31
 800a0da:	f7ff bff5 	b.w	800a0c8 <stmpe811_ReadGITStatus>

0800a0de <stmpe811_ClearGlobalIT>:
{
 800a0de:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800a0e0:	b2c0      	uxtb	r0, r0
 800a0e2:	210b      	movs	r1, #11
 800a0e4:	f7f8 bb2a 	b.w	800273c <IOE_Write>

0800a0e8 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800a0e8:	211f      	movs	r1, #31
 800a0ea:	f7ff bff8 	b.w	800a0de <stmpe811_ClearGlobalIT>

0800a0ee <stmpe811_IO_EnableAF>:
{
 800a0ee:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800a0f0:	b2c4      	uxtb	r4, r0
{
 800a0f2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800a0f4:	4620      	mov	r0, r4
 800a0f6:	2117      	movs	r1, #23
 800a0f8:	f7f8 fb38 	bl	800276c <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 800a0fc:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800a100:	b2d2      	uxtb	r2, r2
 800a102:	4620      	mov	r0, r4
 800a104:	2117      	movs	r1, #23
}
 800a106:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800a10a:	f7f8 bb17 	b.w	800273c <IOE_Write>

0800a10e <stmpe811_TS_Start>:
{
 800a10e:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800a110:	b2c4      	uxtb	r4, r0
{
 800a112:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800a114:	2104      	movs	r1, #4
 800a116:	4620      	mov	r0, r4
 800a118:	f7f8 fb28 	bl	800276c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800a11c:	2104      	movs	r1, #4
 800a11e:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800a122:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800a124:	4620      	mov	r0, r4
 800a126:	f7f8 fb09 	bl	800273c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800a12a:	4630      	mov	r0, r6
 800a12c:	21f0      	movs	r1, #240	@ 0xf0
 800a12e:	f7ff ffde 	bl	800a0ee <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800a132:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 800a136:	4620      	mov	r0, r4
 800a138:	2104      	movs	r1, #4
 800a13a:	f7f8 faff 	bl	800273c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800a13e:	2249      	movs	r2, #73	@ 0x49
 800a140:	2120      	movs	r1, #32
 800a142:	4620      	mov	r0, r4
 800a144:	f7f8 fafa 	bl	800273c <IOE_Write>
  IOE_Delay(2); 
 800a148:	2002      	movs	r0, #2
 800a14a:	f7f8 fb3f 	bl	80027cc <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800a14e:	4620      	mov	r0, r4
 800a150:	2201      	movs	r2, #1
 800a152:	2121      	movs	r1, #33	@ 0x21
 800a154:	f7f8 faf2 	bl	800273c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800a158:	4620      	mov	r0, r4
 800a15a:	229a      	movs	r2, #154	@ 0x9a
 800a15c:	2141      	movs	r1, #65	@ 0x41
 800a15e:	f7f8 faed 	bl	800273c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800a162:	4620      	mov	r0, r4
 800a164:	2201      	movs	r2, #1
 800a166:	214a      	movs	r1, #74	@ 0x4a
 800a168:	f7f8 fae8 	bl	800273c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800a16c:	4620      	mov	r0, r4
 800a16e:	2201      	movs	r2, #1
 800a170:	214b      	movs	r1, #75	@ 0x4b
 800a172:	f7f8 fae3 	bl	800273c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800a176:	4620      	mov	r0, r4
 800a178:	2200      	movs	r2, #0
 800a17a:	214b      	movs	r1, #75	@ 0x4b
 800a17c:	f7f8 fade 	bl	800273c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800a180:	4620      	mov	r0, r4
 800a182:	2201      	movs	r2, #1
 800a184:	2156      	movs	r1, #86	@ 0x56
 800a186:	f7f8 fad9 	bl	800273c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800a18a:	4620      	mov	r0, r4
 800a18c:	2201      	movs	r2, #1
 800a18e:	2158      	movs	r1, #88	@ 0x58
 800a190:	f7f8 fad4 	bl	800273c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800a194:	4620      	mov	r0, r4
 800a196:	2201      	movs	r2, #1
 800a198:	2140      	movs	r1, #64	@ 0x40
 800a19a:	f7f8 facf 	bl	800273c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800a19e:	4620      	mov	r0, r4
 800a1a0:	22ff      	movs	r2, #255	@ 0xff
 800a1a2:	210b      	movs	r1, #11
 800a1a4:	f7f8 faca 	bl	800273c <IOE_Write>
}
 800a1a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 800a1ac:	2002      	movs	r0, #2
 800a1ae:	f7f8 bb0d 	b.w	80027cc <IOE_Delay>
	...

0800a1b4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a1b4:	4b05      	ldr	r3, [pc, #20]	@ (800a1cc <SystemInit+0x18>)
 800a1b6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800a1ba:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 800a1be:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a1c2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800a1c6:	609a      	str	r2, [r3, #8]
#endif
}
 800a1c8:	4770      	bx	lr
 800a1ca:	bf00      	nop
 800a1cc:	e000ed00 	.word	0xe000ed00

0800a1d0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800a1d0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800a1d2:	4b0b      	ldr	r3, [pc, #44]	@ (800a200 <HAL_Init+0x30>)
 800a1d4:	681a      	ldr	r2, [r3, #0]
 800a1d6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800a1da:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800a1dc:	681a      	ldr	r2, [r3, #0]
 800a1de:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800a1e2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800a1e4:	681a      	ldr	r2, [r3, #0]
 800a1e6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800a1ea:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800a1ec:	2003      	movs	r0, #3
 800a1ee:	f000 fa63 	bl	800a6b8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800a1f2:	2000      	movs	r0, #0
 800a1f4:	f7f8 fda8 	bl	8002d48 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800a1f8:	f7f8 fb72 	bl	80028e0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800a1fc:	2000      	movs	r0, #0
 800a1fe:	bd08      	pop	{r3, pc}
 800a200:	40023c00 	.word	0x40023c00

0800a204 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800a204:	4a03      	ldr	r2, [pc, #12]	@ (800a214 <HAL_IncTick+0x10>)
 800a206:	4b04      	ldr	r3, [pc, #16]	@ (800a218 <HAL_IncTick+0x14>)
 800a208:	6811      	ldr	r1, [r2, #0]
 800a20a:	781b      	ldrb	r3, [r3, #0]
 800a20c:	440b      	add	r3, r1
 800a20e:	6013      	str	r3, [r2, #0]
}
 800a210:	4770      	bx	lr
 800a212:	bf00      	nop
 800a214:	200031fc 	.word	0x200031fc
 800a218:	20000078 	.word	0x20000078

0800a21c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800a21c:	4b01      	ldr	r3, [pc, #4]	@ (800a224 <HAL_GetTick+0x8>)
 800a21e:	6818      	ldr	r0, [r3, #0]
}
 800a220:	4770      	bx	lr
 800a222:	bf00      	nop
 800a224:	200031fc 	.word	0x200031fc

0800a228 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800a228:	b538      	push	{r3, r4, r5, lr}
 800a22a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800a22c:	f7ff fff6 	bl	800a21c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800a230:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800a232:	bf1c      	itt	ne
 800a234:	4b05      	ldrne	r3, [pc, #20]	@ (800a24c <HAL_Delay+0x24>)
 800a236:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800a238:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800a23a:	bf18      	it	ne
 800a23c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800a23e:	f7ff ffed 	bl	800a21c <HAL_GetTick>
 800a242:	1b43      	subs	r3, r0, r5
 800a244:	42a3      	cmp	r3, r4
 800a246:	d3fa      	bcc.n	800a23e <HAL_Delay+0x16>
  {
  }
}
 800a248:	bd38      	pop	{r3, r4, r5, pc}
 800a24a:	bf00      	nop
 800a24c:	20000078 	.word	0x20000078

0800a250 <HAL_ADC_MspInit>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_MspInit could be implemented in the user file
   */
}
 800a250:	4770      	bx	lr
	...

0800a254 <HAL_ADC_Init>:
{
 800a254:	b538      	push	{r3, r4, r5, lr}
  if (hadc == NULL)
 800a256:	4604      	mov	r4, r0
 800a258:	2800      	cmp	r0, #0
 800a25a:	f000 809b 	beq.w	800a394 <HAL_ADC_Init+0x140>
  if (hadc->State == HAL_ADC_STATE_RESET)
 800a25e:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800a260:	b925      	cbnz	r5, 800a26c <HAL_ADC_Init+0x18>
    HAL_ADC_MspInit(hadc);
 800a262:	f7ff fff5 	bl	800a250 <HAL_ADC_MspInit>
    ADC_CLEAR_ERRORCODE(hadc);
 800a266:	6465      	str	r5, [r4, #68]	@ 0x44
    hadc->Lock = HAL_UNLOCKED;
 800a268:	f884 503c 	strb.w	r5, [r4, #60]	@ 0x3c
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800a26c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a26e:	06db      	lsls	r3, r3, #27
 800a270:	f100 808e 	bmi.w	800a390 <HAL_ADC_Init+0x13c>
    ADC_STATE_CLR_SET(hadc->State,
 800a274:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a276:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800a27a:	f023 0302 	bic.w	r3, r3, #2
 800a27e:	f043 0302 	orr.w	r3, r3, #2
 800a282:	6423      	str	r3, [r4, #64]	@ 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 800a284:	4b44      	ldr	r3, [pc, #272]	@ (800a398 <HAL_ADC_Init+0x144>)
 800a286:	685a      	ldr	r2, [r3, #4]
 800a288:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800a28c:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800a28e:	685a      	ldr	r2, [r3, #4]
 800a290:	6861      	ldr	r1, [r4, #4]
 800a292:	430a      	orrs	r2, r1
 800a294:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800a296:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800a298:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800a29a:	685a      	ldr	r2, [r3, #4]
 800a29c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800a2a0:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800a2a2:	685a      	ldr	r2, [r3, #4]
 800a2a4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800a2a8:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800a2aa:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800a2ac:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800a2ae:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800a2b2:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800a2b4:	685a      	ldr	r2, [r3, #4]
 800a2b6:	430a      	orrs	r2, r1
 800a2b8:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800a2ba:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800a2bc:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800a2be:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800a2c2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800a2c4:	689a      	ldr	r2, [r3, #8]
 800a2c6:	430a      	orrs	r2, r1
 800a2c8:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800a2ca:	4934      	ldr	r1, [pc, #208]	@ (800a39c <HAL_ADC_Init+0x148>)
 800a2cc:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800a2ce:	428a      	cmp	r2, r1
 800a2d0:	d052      	beq.n	800a378 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800a2d2:	6899      	ldr	r1, [r3, #8]
 800a2d4:	f021 6170 	bic.w	r1, r1, #251658240	@ 0xf000000
 800a2d8:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800a2da:	6899      	ldr	r1, [r3, #8]
 800a2dc:	430a      	orrs	r2, r1
 800a2de:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800a2e0:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800a2e2:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800a2e4:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800a2e8:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800a2ea:	689a      	ldr	r2, [r3, #8]
 800a2ec:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800a2ee:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800a2f0:	689a      	ldr	r2, [r3, #8]
 800a2f2:	f022 0202 	bic.w	r2, r2, #2
 800a2f6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800a2f8:	689a      	ldr	r2, [r3, #8]
 800a2fa:	7e21      	ldrb	r1, [r4, #24]
 800a2fc:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 800a300:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 800a302:	f894 2020 	ldrb.w	r2, [r4, #32]
 800a306:	2a00      	cmp	r2, #0
 800a308:	d03e      	beq.n	800a388 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800a30a:	685a      	ldr	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800a30c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800a30e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800a312:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 800a314:	685a      	ldr	r2, [r3, #4]
 800a316:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800a31a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800a31c:	685a      	ldr	r2, [r3, #4]
 800a31e:	3901      	subs	r1, #1
 800a320:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800a324:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800a326:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800a328:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800a32a:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800a32e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800a330:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800a332:	3901      	subs	r1, #1
 800a334:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 800a338:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800a33a:	689a      	ldr	r2, [r3, #8]
 800a33c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800a340:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800a342:	689a      	ldr	r2, [r3, #8]
 800a344:	f894 1030 	ldrb.w	r1, [r4, #48]	@ 0x30
 800a348:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 800a34c:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800a34e:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800a350:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800a352:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800a356:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800a358:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800a35a:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800a35c:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 800a360:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800a362:	6460      	str	r0, [r4, #68]	@ 0x44
    ADC_STATE_CLR_SET(hadc->State,
 800a364:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a366:	f023 0303 	bic.w	r3, r3, #3
 800a36a:	f043 0301 	orr.w	r3, r3, #1
 800a36e:	6423      	str	r3, [r4, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 800a370:	2300      	movs	r3, #0
 800a372:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 800a376:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800a378:	689a      	ldr	r2, [r3, #8]
 800a37a:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800a37e:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800a380:	689a      	ldr	r2, [r3, #8]
 800a382:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800a386:	e7b2      	b.n	800a2ee <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800a388:	685a      	ldr	r2, [r3, #4]
 800a38a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800a38e:	e7c9      	b.n	800a324 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 800a390:	2001      	movs	r0, #1
 800a392:	e7ed      	b.n	800a370 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 800a394:	2001      	movs	r0, #1
 800a396:	e7ee      	b.n	800a376 <HAL_ADC_Init+0x122>
 800a398:	40012300 	.word	0x40012300
 800a39c:	0f000001 	.word	0x0f000001

0800a3a0 <HAL_ADC_Start>:
{
 800a3a0:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 800a3a2:	2300      	movs	r3, #0
 800a3a4:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800a3a6:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 800a3aa:	2b01      	cmp	r3, #1
 800a3ac:	d069      	beq.n	800a482 <HAL_ADC_Start+0xe2>
 800a3ae:	2301      	movs	r3, #1
 800a3b0:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800a3b4:	6803      	ldr	r3, [r0, #0]
 800a3b6:	689a      	ldr	r2, [r3, #8]
 800a3b8:	07d2      	lsls	r2, r2, #31
 800a3ba:	d50b      	bpl.n	800a3d4 <HAL_ADC_Start+0x34>
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800a3bc:	689a      	ldr	r2, [r3, #8]
 800a3be:	07d1      	lsls	r1, r2, #31
 800a3c0:	d41a      	bmi.n	800a3f8 <HAL_ADC_Start+0x58>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800a3c2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800a3c4:	f043 0310 	orr.w	r3, r3, #16
 800a3c8:	6403      	str	r3, [r0, #64]	@ 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 800a3ca:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 800a3cc:	f043 0301 	orr.w	r3, r3, #1
 800a3d0:	6443      	str	r3, [r0, #68]	@ 0x44
 800a3d2:	e04c      	b.n	800a46e <HAL_ADC_Start+0xce>
    __HAL_ADC_ENABLE(hadc);
 800a3d4:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800a3d6:	492c      	ldr	r1, [pc, #176]	@ (800a488 <HAL_ADC_Start+0xe8>)
    __HAL_ADC_ENABLE(hadc);
 800a3d8:	f042 0201 	orr.w	r2, r2, #1
 800a3dc:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800a3de:	4a2b      	ldr	r2, [pc, #172]	@ (800a48c <HAL_ADC_Start+0xec>)
 800a3e0:	6812      	ldr	r2, [r2, #0]
 800a3e2:	fbb2 f2f1 	udiv	r2, r2, r1
 800a3e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 800a3ea:	9201      	str	r2, [sp, #4]
    while (counter != 0U)
 800a3ec:	9a01      	ldr	r2, [sp, #4]
 800a3ee:	2a00      	cmp	r2, #0
 800a3f0:	d0e4      	beq.n	800a3bc <HAL_ADC_Start+0x1c>
      counter--;
 800a3f2:	9a01      	ldr	r2, [sp, #4]
 800a3f4:	3a01      	subs	r2, #1
 800a3f6:	e7f8      	b.n	800a3ea <HAL_ADC_Start+0x4a>
    ADC_STATE_CLR_SET(hadc->State,
 800a3f8:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800a3fa:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800a3fe:	f022 0201 	bic.w	r2, r2, #1
 800a402:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800a406:	6402      	str	r2, [r0, #64]	@ 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 800a408:	685a      	ldr	r2, [r3, #4]
 800a40a:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 800a40c:	bf41      	itttt	mi
 800a40e:	6c02      	ldrmi	r2, [r0, #64]	@ 0x40
 800a410:	f422 5240 	bicmi.w	r2, r2, #12288	@ 0x3000
 800a414:	f442 5280 	orrmi.w	r2, r2, #4096	@ 0x1000
 800a418:	6402      	strmi	r2, [r0, #64]	@ 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800a41a:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800a41c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 800a420:	bf1c      	itt	ne
 800a422:	6c42      	ldrne	r2, [r0, #68]	@ 0x44
 800a424:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 800a428:	6442      	str	r2, [r0, #68]	@ 0x44
    __HAL_UNLOCK(hadc);
 800a42a:	2200      	movs	r2, #0
 800a42c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800a430:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 800a434:	601a      	str	r2, [r3, #0]
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 800a436:	4a16      	ldr	r2, [pc, #88]	@ (800a490 <HAL_ADC_Start+0xf0>)
 800a438:	6851      	ldr	r1, [r2, #4]
 800a43a:	f011 0f1f 	tst.w	r1, #31
 800a43e:	4915      	ldr	r1, [pc, #84]	@ (800a494 <HAL_ADC_Start+0xf4>)
 800a440:	d11c      	bne.n	800a47c <HAL_ADC_Start+0xdc>
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800a442:	428b      	cmp	r3, r1
 800a444:	d007      	beq.n	800a456 <HAL_ADC_Start+0xb6>
 800a446:	f501 7180 	add.w	r1, r1, #256	@ 0x100
 800a44a:	428b      	cmp	r3, r1
 800a44c:	d10c      	bne.n	800a468 <HAL_ADC_Start+0xc8>
 800a44e:	6852      	ldr	r2, [r2, #4]
 800a450:	f012 0f1f 	tst.w	r2, #31
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800a454:	d10b      	bne.n	800a46e <HAL_ADC_Start+0xce>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800a456:	689a      	ldr	r2, [r3, #8]
 800a458:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 800a45c:	d107      	bne.n	800a46e <HAL_ADC_Start+0xce>
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800a45e:	689a      	ldr	r2, [r3, #8]
 800a460:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800a464:	609a      	str	r2, [r3, #8]
 800a466:	e002      	b.n	800a46e <HAL_ADC_Start+0xce>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800a468:	490b      	ldr	r1, [pc, #44]	@ (800a498 <HAL_ADC_Start+0xf8>)
 800a46a:	428b      	cmp	r3, r1
 800a46c:	d002      	beq.n	800a474 <HAL_ADC_Start+0xd4>
  return HAL_OK;
 800a46e:	2000      	movs	r0, #0
}
 800a470:	b002      	add	sp, #8
 800a472:	4770      	bx	lr
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800a474:	6852      	ldr	r2, [r2, #4]
 800a476:	f012 0f10 	tst.w	r2, #16
 800a47a:	e7eb      	b.n	800a454 <HAL_ADC_Start+0xb4>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800a47c:	428b      	cmp	r3, r1
 800a47e:	d1f6      	bne.n	800a46e <HAL_ADC_Start+0xce>
 800a480:	e7e9      	b.n	800a456 <HAL_ADC_Start+0xb6>
  __HAL_LOCK(hadc);
 800a482:	2002      	movs	r0, #2
 800a484:	e7f4      	b.n	800a470 <HAL_ADC_Start+0xd0>
 800a486:	bf00      	nop
 800a488:	000f4240 	.word	0x000f4240
 800a48c:	20000074 	.word	0x20000074
 800a490:	40012300 	.word	0x40012300
 800a494:	40012000 	.word	0x40012000
 800a498:	40012200 	.word	0x40012200

0800a49c <HAL_ADC_Stop>:
  __HAL_LOCK(hadc);
 800a49c:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 800a4a0:	2b01      	cmp	r3, #1
 800a4a2:	d014      	beq.n	800a4ce <HAL_ADC_Stop+0x32>
  __HAL_ADC_DISABLE(hadc);
 800a4a4:	6803      	ldr	r3, [r0, #0]
 800a4a6:	689a      	ldr	r2, [r3, #8]
 800a4a8:	f022 0201 	bic.w	r2, r2, #1
 800a4ac:	609a      	str	r2, [r3, #8]
  if (HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 800a4ae:	689b      	ldr	r3, [r3, #8]
 800a4b0:	07db      	lsls	r3, r3, #31
 800a4b2:	d407      	bmi.n	800a4c4 <HAL_ADC_Stop+0x28>
    ADC_STATE_CLR_SET(hadc->State,
 800a4b4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800a4b6:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800a4ba:	f023 0301 	bic.w	r3, r3, #1
 800a4be:	f043 0301 	orr.w	r3, r3, #1
 800a4c2:	6403      	str	r3, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 800a4c4:	2300      	movs	r3, #0
 800a4c6:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  return HAL_OK;
 800a4ca:	4618      	mov	r0, r3
 800a4cc:	4770      	bx	lr
  __HAL_LOCK(hadc);
 800a4ce:	2002      	movs	r0, #2
}
 800a4d0:	4770      	bx	lr

0800a4d2 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800a4d2:	6803      	ldr	r3, [r0, #0]
 800a4d4:	689a      	ldr	r2, [r3, #8]
 800a4d6:	0552      	lsls	r2, r2, #21
{
 800a4d8:	b570      	push	{r4, r5, r6, lr}
 800a4da:	4604      	mov	r4, r0
 800a4dc:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800a4de:	d50b      	bpl.n	800a4f8 <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 800a4e0:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800a4e2:	05de      	lsls	r6, r3, #23
 800a4e4:	d508      	bpl.n	800a4f8 <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800a4e6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800a4e8:	f043 0320 	orr.w	r3, r3, #32
 800a4ec:	6403      	str	r3, [r0, #64]	@ 0x40
    __HAL_UNLOCK(hadc);
 800a4ee:	2300      	movs	r3, #0
 800a4f0:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
    return HAL_ERROR;
 800a4f4:	2001      	movs	r0, #1
}
 800a4f6:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 800a4f8:	f7ff fe90 	bl	800a21c <HAL_GetTick>
 800a4fc:	4606      	mov	r6, r0
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800a4fe:	6823      	ldr	r3, [r4, #0]
 800a500:	681a      	ldr	r2, [r3, #0]
 800a502:	0791      	lsls	r1, r2, #30
 800a504:	d50c      	bpl.n	800a520 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 800a506:	f06f 0212 	mvn.w	r2, #18
 800a50a:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800a50c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a50e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800a512:	6422      	str	r2, [r4, #64]	@ 0x40
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800a514:	689a      	ldr	r2, [r3, #8]
 800a516:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 800a51a:	d017      	beq.n	800a54c <HAL_ADC_PollForConversion+0x7a>
  return HAL_OK;
 800a51c:	2000      	movs	r0, #0
 800a51e:	e7ea      	b.n	800a4f6 <HAL_ADC_PollForConversion+0x24>
    if (Timeout != HAL_MAX_DELAY)
 800a520:	1c68      	adds	r0, r5, #1
 800a522:	d0ed      	beq.n	800a500 <HAL_ADC_PollForConversion+0x2e>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800a524:	b965      	cbnz	r5, 800a540 <HAL_ADC_PollForConversion+0x6e>
        if (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800a526:	6823      	ldr	r3, [r4, #0]
 800a528:	681b      	ldr	r3, [r3, #0]
 800a52a:	f013 0302 	ands.w	r3, r3, #2
 800a52e:	d1e6      	bne.n	800a4fe <HAL_ADC_PollForConversion+0x2c>
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800a530:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hadc);
 800a532:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800a536:	f042 0204 	orr.w	r2, r2, #4
 800a53a:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_TIMEOUT;
 800a53c:	2003      	movs	r0, #3
 800a53e:	e7da      	b.n	800a4f6 <HAL_ADC_PollForConversion+0x24>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800a540:	f7ff fe6c 	bl	800a21c <HAL_GetTick>
 800a544:	1b80      	subs	r0, r0, r6
 800a546:	42a8      	cmp	r0, r5
 800a548:	d8ed      	bhi.n	800a526 <HAL_ADC_PollForConversion+0x54>
 800a54a:	e7d8      	b.n	800a4fe <HAL_ADC_PollForConversion+0x2c>
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800a54c:	7e22      	ldrb	r2, [r4, #24]
 800a54e:	2a00      	cmp	r2, #0
 800a550:	d1e4      	bne.n	800a51c <HAL_ADC_PollForConversion+0x4a>
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800a552:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800a554:	f412 0f70 	tst.w	r2, #15728640	@ 0xf00000
 800a558:	d002      	beq.n	800a560 <HAL_ADC_PollForConversion+0x8e>
       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 800a55a:	689b      	ldr	r3, [r3, #8]
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800a55c:	055a      	lsls	r2, r3, #21
 800a55e:	d4dd      	bmi.n	800a51c <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 800a560:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a562:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800a566:	6423      	str	r3, [r4, #64]	@ 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800a568:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a56a:	04db      	lsls	r3, r3, #19
 800a56c:	d4d6      	bmi.n	800a51c <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800a56e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a570:	f043 0301 	orr.w	r3, r3, #1
 800a574:	6423      	str	r3, [r4, #64]	@ 0x40
 800a576:	e7d1      	b.n	800a51c <HAL_ADC_PollForConversion+0x4a>

0800a578 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 800a578:	6803      	ldr	r3, [r0, #0]
 800a57a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
}
 800a57c:	4770      	bx	lr
	...

0800a580 <HAL_ADC_ConfigChannel>:
{
 800a580:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800a582:	2300      	movs	r3, #0
 800a584:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800a586:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 800a58a:	2b01      	cmp	r3, #1
{
 800a58c:	4605      	mov	r5, r0
  __HAL_LOCK(hadc);
 800a58e:	f000 8086 	beq.w	800a69e <HAL_ADC_ConfigChannel+0x11e>
 800a592:	2301      	movs	r3, #1
 800a594:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 800a598:	6808      	ldr	r0, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800a59a:	682b      	ldr	r3, [r5, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800a59c:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 800a59e:	2809      	cmp	r0, #9
 800a5a0:	b284      	uxth	r4, r0
 800a5a2:	d933      	bls.n	800a60c <HAL_ADC_ConfigChannel+0x8c>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800a5a4:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 800a5a8:	68df      	ldr	r7, [r3, #12]
 800a5aa:	3a1e      	subs	r2, #30
 800a5ac:	f04f 0c07 	mov.w	ip, #7
 800a5b0:	fa0c fc02 	lsl.w	ip, ip, r2
 800a5b4:	ea27 070c 	bic.w	r7, r7, ip
 800a5b8:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800a5ba:	68df      	ldr	r7, [r3, #12]
 800a5bc:	fa06 f202 	lsl.w	r2, r6, r2
 800a5c0:	433a      	orrs	r2, r7
 800a5c2:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 800a5c4:	6849      	ldr	r1, [r1, #4]
 800a5c6:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800a5c8:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 800a5cc:	d82d      	bhi.n	800a62a <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800a5ce:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800a5d0:	3a05      	subs	r2, #5
 800a5d2:	261f      	movs	r6, #31
 800a5d4:	4096      	lsls	r6, r2
 800a5d6:	ea21 0106 	bic.w	r1, r1, r6
 800a5da:	6359      	str	r1, [r3, #52]	@ 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 800a5dc:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800a5de:	fa04 f202 	lsl.w	r2, r4, r2
 800a5e2:	430a      	orrs	r2, r1
 800a5e4:	635a      	str	r2, [r3, #52]	@ 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800a5e6:	4a2f      	ldr	r2, [pc, #188]	@ (800a6a4 <HAL_ADC_ConfigChannel+0x124>)
 800a5e8:	4293      	cmp	r3, r2
 800a5ea:	d10a      	bne.n	800a602 <HAL_ADC_ConfigChannel+0x82>
 800a5ec:	2812      	cmp	r0, #18
 800a5ee:	d137      	bne.n	800a660 <HAL_ADC_ConfigChannel+0xe0>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 800a5f0:	4b2d      	ldr	r3, [pc, #180]	@ (800a6a8 <HAL_ADC_ConfigChannel+0x128>)
 800a5f2:	685a      	ldr	r2, [r3, #4]
 800a5f4:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 800a5f8:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800a5fa:	685a      	ldr	r2, [r3, #4]
 800a5fc:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 800a600:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 800a602:	2000      	movs	r0, #0
 800a604:	f885 003c 	strb.w	r0, [r5, #60]	@ 0x3c
}
 800a608:	b003      	add	sp, #12
 800a60a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 800a60c:	691a      	ldr	r2, [r3, #16]
 800a60e:	eb00 0c40 	add.w	ip, r0, r0, lsl #1
 800a612:	2707      	movs	r7, #7
 800a614:	fa07 f70c 	lsl.w	r7, r7, ip
 800a618:	ea22 0207 	bic.w	r2, r2, r7
 800a61c:	611a      	str	r2, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800a61e:	691a      	ldr	r2, [r3, #16]
 800a620:	fa06 f60c 	lsl.w	r6, r6, ip
 800a624:	4316      	orrs	r6, r2
 800a626:	611e      	str	r6, [r3, #16]
 800a628:	e7cc      	b.n	800a5c4 <HAL_ADC_ConfigChannel+0x44>
  else if (sConfig->Rank < 13U)
 800a62a:	290c      	cmp	r1, #12
 800a62c:	f04f 011f 	mov.w	r1, #31
 800a630:	d80b      	bhi.n	800a64a <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800a632:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 800a634:	3a23      	subs	r2, #35	@ 0x23
 800a636:	4091      	lsls	r1, r2
 800a638:	ea26 0101 	bic.w	r1, r6, r1
 800a63c:	6319      	str	r1, [r3, #48]	@ 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800a63e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800a640:	fa04 f202 	lsl.w	r2, r4, r2
 800a644:	430a      	orrs	r2, r1
 800a646:	631a      	str	r2, [r3, #48]	@ 0x30
 800a648:	e7cd      	b.n	800a5e6 <HAL_ADC_ConfigChannel+0x66>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800a64a:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 800a64c:	3a41      	subs	r2, #65	@ 0x41
 800a64e:	4091      	lsls	r1, r2
 800a650:	ea26 0101 	bic.w	r1, r6, r1
 800a654:	62d9      	str	r1, [r3, #44]	@ 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800a656:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800a658:	4094      	lsls	r4, r2
 800a65a:	430c      	orrs	r4, r1
 800a65c:	62dc      	str	r4, [r3, #44]	@ 0x2c
 800a65e:	e7c2      	b.n	800a5e6 <HAL_ADC_ConfigChannel+0x66>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800a660:	4b12      	ldr	r3, [pc, #72]	@ (800a6ac <HAL_ADC_ConfigChannel+0x12c>)
 800a662:	4298      	cmp	r0, r3
 800a664:	d001      	beq.n	800a66a <HAL_ADC_ConfigChannel+0xea>
 800a666:	2811      	cmp	r0, #17
 800a668:	d1cb      	bne.n	800a602 <HAL_ADC_ConfigChannel+0x82>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800a66a:	4b0f      	ldr	r3, [pc, #60]	@ (800a6a8 <HAL_ADC_ConfigChannel+0x128>)
 800a66c:	685a      	ldr	r2, [r3, #4]
 800a66e:	f422 0280 	bic.w	r2, r2, #4194304	@ 0x400000
 800a672:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800a674:	685a      	ldr	r2, [r3, #4]
 800a676:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800a67a:	605a      	str	r2, [r3, #4]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800a67c:	4b0b      	ldr	r3, [pc, #44]	@ (800a6ac <HAL_ADC_ConfigChannel+0x12c>)
 800a67e:	4298      	cmp	r0, r3
 800a680:	d1bf      	bne.n	800a602 <HAL_ADC_ConfigChannel+0x82>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800a682:	4b0b      	ldr	r3, [pc, #44]	@ (800a6b0 <HAL_ADC_ConfigChannel+0x130>)
 800a684:	4a0b      	ldr	r2, [pc, #44]	@ (800a6b4 <HAL_ADC_ConfigChannel+0x134>)
 800a686:	681b      	ldr	r3, [r3, #0]
 800a688:	fbb3 f3f2 	udiv	r3, r3, r2
 800a68c:	220a      	movs	r2, #10
 800a68e:	4353      	muls	r3, r2
        counter--;
 800a690:	9301      	str	r3, [sp, #4]
      while (counter != 0U)
 800a692:	9b01      	ldr	r3, [sp, #4]
 800a694:	2b00      	cmp	r3, #0
 800a696:	d0b4      	beq.n	800a602 <HAL_ADC_ConfigChannel+0x82>
        counter--;
 800a698:	9b01      	ldr	r3, [sp, #4]
 800a69a:	3b01      	subs	r3, #1
 800a69c:	e7f8      	b.n	800a690 <HAL_ADC_ConfigChannel+0x110>
  __HAL_LOCK(hadc);
 800a69e:	2002      	movs	r0, #2
 800a6a0:	e7b2      	b.n	800a608 <HAL_ADC_ConfigChannel+0x88>
 800a6a2:	bf00      	nop
 800a6a4:	40012000 	.word	0x40012000
 800a6a8:	40012300 	.word	0x40012300
 800a6ac:	10000012 	.word	0x10000012
 800a6b0:	20000074 	.word	0x20000074
 800a6b4:	000f4240 	.word	0x000f4240

0800a6b8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800a6b8:	4907      	ldr	r1, [pc, #28]	@ (800a6d8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800a6ba:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a6bc:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a6c0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a6c2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a6c4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a6c8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800a6ca:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800a6cc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800a6d0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 800a6d4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800a6d6:	4770      	bx	lr
 800a6d8:	e000ed00 	.word	0xe000ed00

0800a6dc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800a6dc:	4b16      	ldr	r3, [pc, #88]	@ (800a738 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800a6de:	b530      	push	{r4, r5, lr}
 800a6e0:	68dc      	ldr	r4, [r3, #12]
 800a6e2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a6e6:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a6ea:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a6ec:	2b04      	cmp	r3, #4
 800a6ee:	bf28      	it	cs
 800a6f0:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a6f2:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a6f4:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a6f8:	bf8c      	ite	hi
 800a6fa:	3c03      	subhi	r4, #3
 800a6fc:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a6fe:	fa05 f303 	lsl.w	r3, r5, r3
 800a702:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800a706:	40a5      	lsls	r5, r4
 800a708:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a70c:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 800a70e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a710:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a714:	bfac      	ite	ge
 800a716:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a71a:	4a08      	ldrlt	r2, [pc, #32]	@ (800a73c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a71c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a720:	bfb8      	it	lt
 800a722:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a726:	b2db      	uxtb	r3, r3
 800a728:	bfaa      	itet	ge
 800a72a:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a72e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a730:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800a734:	bd30      	pop	{r4, r5, pc}
 800a736:	bf00      	nop
 800a738:	e000ed00 	.word	0xe000ed00
 800a73c:	e000ed14 	.word	0xe000ed14

0800a740 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800a740:	2800      	cmp	r0, #0
 800a742:	db07      	blt.n	800a754 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a744:	4a04      	ldr	r2, [pc, #16]	@ (800a758 <HAL_NVIC_EnableIRQ+0x18>)
 800a746:	0941      	lsrs	r1, r0, #5
 800a748:	2301      	movs	r3, #1
 800a74a:	f000 001f 	and.w	r0, r0, #31
 800a74e:	4083      	lsls	r3, r0
 800a750:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800a754:	4770      	bx	lr
 800a756:	bf00      	nop
 800a758:	e000e100 	.word	0xe000e100

0800a75c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800a75c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800a75e:	4604      	mov	r4, r0
 800a760:	b150      	cbz	r0, 800a778 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800a762:	7943      	ldrb	r3, [r0, #5]
 800a764:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800a768:	b913      	cbnz	r3, 800a770 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800a76a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800a76c:	f7f8 f8d8 	bl	8002920 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800a770:	2301      	movs	r3, #1
 800a772:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800a774:	2000      	movs	r0, #0
}
 800a776:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a778:	2001      	movs	r0, #1
 800a77a:	e7fc      	b.n	800a776 <HAL_CRC_Init+0x1a>

0800a77c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800a77c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800a77e:	4604      	mov	r4, r0
 800a780:	b320      	cbz	r0, 800a7cc <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800a782:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800a786:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800a78a:	b91b      	cbnz	r3, 800a794 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800a78c:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800a790:	f7f8 f8de 	bl	8002950 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800a794:	2302      	movs	r3, #2
 800a796:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800a79a:	6823      	ldr	r3, [r4, #0]
 800a79c:	6861      	ldr	r1, [r4, #4]
 800a79e:	681a      	ldr	r2, [r3, #0]
 800a7a0:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800a7a4:	430a      	orrs	r2, r1
 800a7a6:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800a7a8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a7aa:	68a1      	ldr	r1, [r4, #8]
 800a7ac:	f022 0207 	bic.w	r2, r2, #7
 800a7b0:	430a      	orrs	r2, r1
 800a7b2:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800a7b4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a7b6:	68e1      	ldr	r1, [r4, #12]
 800a7b8:	f36f 020d 	bfc	r2, #0, #14
 800a7bc:	430a      	orrs	r2, r1
 800a7be:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800a7c0:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800a7c2:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800a7c4:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800a7c6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 800a7ca:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a7cc:	2001      	movs	r0, #1
 800a7ce:	e7fc      	b.n	800a7ca <HAL_DMA2D_Init+0x4e>

0800a7d0 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 800a7d0:	4770      	bx	lr

0800a7d2 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 800a7d2:	4770      	bx	lr

0800a7d4 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800a7d4:	6803      	ldr	r3, [r0, #0]
{
 800a7d6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800a7d8:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800a7da:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800a7dc:	07f2      	lsls	r2, r6, #31
{
 800a7de:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800a7e0:	d514      	bpl.n	800a80c <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800a7e2:	05e9      	lsls	r1, r5, #23
 800a7e4:	d512      	bpl.n	800a80c <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800a7e6:	681a      	ldr	r2, [r3, #0]
 800a7e8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800a7ec:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800a7ee:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800a7f0:	f042 0201 	orr.w	r2, r2, #1
 800a7f4:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800a7f6:	2201      	movs	r2, #1
 800a7f8:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a7fa:	2304      	movs	r3, #4
 800a7fc:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800a800:	2300      	movs	r3, #0
 800a802:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800a806:	6943      	ldr	r3, [r0, #20]
 800a808:	b103      	cbz	r3, 800a80c <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 800a80a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800a80c:	06b2      	lsls	r2, r6, #26
 800a80e:	d516      	bpl.n	800a83e <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 800a810:	04ab      	lsls	r3, r5, #18
 800a812:	d514      	bpl.n	800a83e <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800a814:	6823      	ldr	r3, [r4, #0]
 800a816:	681a      	ldr	r2, [r3, #0]
 800a818:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800a81c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800a81e:	2220      	movs	r2, #32
 800a820:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800a822:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a824:	f043 0302 	orr.w	r3, r3, #2
 800a828:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a82a:	2304      	movs	r3, #4
 800a82c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800a830:	2300      	movs	r3, #0
 800a832:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800a836:	6963      	ldr	r3, [r4, #20]
 800a838:	b10b      	cbz	r3, 800a83e <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800a83a:	4620      	mov	r0, r4
 800a83c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800a83e:	0730      	lsls	r0, r6, #28
 800a840:	d516      	bpl.n	800a870 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800a842:	0529      	lsls	r1, r5, #20
 800a844:	d514      	bpl.n	800a870 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800a846:	6823      	ldr	r3, [r4, #0]
 800a848:	681a      	ldr	r2, [r3, #0]
 800a84a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800a84e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800a850:	2208      	movs	r2, #8
 800a852:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800a854:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a856:	f043 0304 	orr.w	r3, r3, #4
 800a85a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a85c:	2304      	movs	r3, #4
 800a85e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800a862:	2300      	movs	r3, #0
 800a864:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800a868:	6963      	ldr	r3, [r4, #20]
 800a86a:	b10b      	cbz	r3, 800a870 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 800a86c:	4620      	mov	r0, r4
 800a86e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800a870:	0772      	lsls	r2, r6, #29
 800a872:	d50b      	bpl.n	800a88c <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800a874:	056b      	lsls	r3, r5, #21
 800a876:	d509      	bpl.n	800a88c <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800a878:	6823      	ldr	r3, [r4, #0]
 800a87a:	681a      	ldr	r2, [r3, #0]
 800a87c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800a880:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800a882:	2204      	movs	r2, #4
 800a884:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800a886:	4620      	mov	r0, r4
 800a888:	f7ff ffa2 	bl	800a7d0 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800a88c:	07b0      	lsls	r0, r6, #30
 800a88e:	d514      	bpl.n	800a8ba <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 800a890:	05a9      	lsls	r1, r5, #22
 800a892:	d512      	bpl.n	800a8ba <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800a894:	6823      	ldr	r3, [r4, #0]
 800a896:	681a      	ldr	r2, [r3, #0]
 800a898:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800a89c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800a89e:	2202      	movs	r2, #2
 800a8a0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a8a2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a8a4:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a8a6:	2301      	movs	r3, #1
 800a8a8:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800a8ac:	2300      	movs	r3, #0
 800a8ae:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 800a8b2:	6923      	ldr	r3, [r4, #16]
 800a8b4:	b10b      	cbz	r3, 800a8ba <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800a8b6:	4620      	mov	r0, r4
 800a8b8:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800a8ba:	06f2      	lsls	r2, r6, #27
 800a8bc:	d513      	bpl.n	800a8e6 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800a8be:	04eb      	lsls	r3, r5, #19
 800a8c0:	d511      	bpl.n	800a8e6 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800a8c2:	6823      	ldr	r3, [r4, #0]
 800a8c4:	681a      	ldr	r2, [r3, #0]
 800a8c6:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800a8ca:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800a8cc:	2210      	movs	r2, #16
 800a8ce:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a8d0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a8d2:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a8d4:	2301      	movs	r3, #1
 800a8d6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800a8da:	2300      	movs	r3, #0
 800a8dc:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800a8e0:	4620      	mov	r0, r4
 800a8e2:	f7ff ff76 	bl	800a7d2 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800a8e6:	bd70      	pop	{r4, r5, r6, pc}

0800a8e8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800a8e8:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800a8ea:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 800a8ee:	2a01      	cmp	r2, #1
{
 800a8f0:	4603      	mov	r3, r0
 800a8f2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 800a8f6:	d02b      	beq.n	800a950 <HAL_DMA2D_ConfigLayer+0x68>
 800a8f8:	2201      	movs	r2, #1
 800a8fa:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800a8fe:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a902:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 800a906:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 800a90a:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 800a90c:	4f17      	ldr	r7, [pc, #92]	@ (800a96c <HAL_DMA2D_ConfigLayer+0x84>)
 800a90e:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a912:	3c09      	subs	r4, #9
 800a914:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800a916:	bf9c      	itt	ls
 800a918:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 800a91c:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a91e:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800a922:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800a924:	bf88      	it	hi
 800a926:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800a92a:	b991      	cbnz	r1, 800a952 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800a92c:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800a92e:	4039      	ands	r1, r7
 800a930:	4301      	orrs	r1, r0
 800a932:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a934:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800a936:	6999      	ldr	r1, [r3, #24]
 800a938:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a93a:	d803      	bhi.n	800a944 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800a93c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800a93e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 800a942:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800a944:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800a946:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800a948:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 800a94c:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 800a950:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800a952:	69d1      	ldr	r1, [r2, #28]
 800a954:	4039      	ands	r1, r7
 800a956:	4301      	orrs	r1, r0
 800a958:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a95a:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a95c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a95e:	6989      	ldr	r1, [r1, #24]
 800a960:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800a962:	bf9c      	itt	ls
 800a964:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 800a968:	6215      	strls	r5, [r2, #32]
 800a96a:	e7eb      	b.n	800a944 <HAL_DMA2D_ConfigLayer+0x5c>
 800a96c:	00fcfff0 	.word	0x00fcfff0

0800a970 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800a970:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a974:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 800ab34 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800a978:	4a6c      	ldr	r2, [pc, #432]	@ (800ab2c <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a97a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a97c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800a97e:	2401      	movs	r4, #1
 800a980:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a982:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800a986:	43ac      	bics	r4, r5
 800a988:	f040 80b7 	bne.w	800aafa <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a98c:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a98e:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a990:	f005 0403 	and.w	r4, r5, #3
 800a994:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a998:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a99c:	1e67      	subs	r7, r4, #1
 800a99e:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a9a0:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a9a4:	d834      	bhi.n	800aa10 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800a9a6:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a9a8:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a9ac:	68cf      	ldr	r7, [r1, #12]
 800a9ae:	fa07 f708 	lsl.w	r7, r7, r8
 800a9b2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a9b6:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a9b8:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a9ba:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a9be:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800a9c2:	409f      	lsls	r7, r3
 800a9c4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800a9c8:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a9ca:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a9cc:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a9d0:	688f      	ldr	r7, [r1, #8]
 800a9d2:	fa07 f708 	lsl.w	r7, r7, r8
 800a9d6:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a9da:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800a9dc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a9de:	d119      	bne.n	800aa14 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800a9e0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800a9e4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a9e8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a9ec:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a9f0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800a9f4:	f04f 0e0f 	mov.w	lr, #15
 800a9f8:	fa0e fe0b 	lsl.w	lr, lr, fp
 800a9fc:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800aa00:	690f      	ldr	r7, [r1, #16]
 800aa02:	fa07 f70b 	lsl.w	r7, r7, fp
 800aa06:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800aa0a:	f8ca 7020 	str.w	r7, [sl, #32]
 800aa0e:	e001      	b.n	800aa14 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800aa10:	2c03      	cmp	r4, #3
 800aa12:	d1da      	bne.n	800a9ca <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800aa14:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800aa16:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800aa1a:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800aa1e:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800aa20:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 800aa24:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800aa26:	d068      	beq.n	800aafa <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800aa28:	2400      	movs	r4, #0
 800aa2a:	9401      	str	r4, [sp, #4]
 800aa2c:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 800aa30:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 800aa34:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 800aa38:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 800aa3c:	f023 0703 	bic.w	r7, r3, #3
 800aa40:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 800aa44:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 800aa48:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 800aa4c:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800aa4e:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800aa52:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800aa54:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800aa58:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800aa5c:	240f      	movs	r4, #15
 800aa5e:	fa04 f40c 	lsl.w	r4, r4, ip
 800aa62:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800aa66:	4c32      	ldr	r4, [pc, #200]	@ (800ab30 <HAL_GPIO_Init+0x1c0>)
 800aa68:	42a0      	cmp	r0, r4
 800aa6a:	d04d      	beq.n	800ab08 <HAL_GPIO_Init+0x198>
 800aa6c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800aa70:	42a0      	cmp	r0, r4
 800aa72:	d04b      	beq.n	800ab0c <HAL_GPIO_Init+0x19c>
 800aa74:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800aa78:	42a0      	cmp	r0, r4
 800aa7a:	d049      	beq.n	800ab10 <HAL_GPIO_Init+0x1a0>
 800aa7c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800aa80:	42a0      	cmp	r0, r4
 800aa82:	d047      	beq.n	800ab14 <HAL_GPIO_Init+0x1a4>
 800aa84:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800aa88:	42a0      	cmp	r0, r4
 800aa8a:	d045      	beq.n	800ab18 <HAL_GPIO_Init+0x1a8>
 800aa8c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800aa90:	42a0      	cmp	r0, r4
 800aa92:	d043      	beq.n	800ab1c <HAL_GPIO_Init+0x1ac>
 800aa94:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800aa98:	42a0      	cmp	r0, r4
 800aa9a:	d041      	beq.n	800ab20 <HAL_GPIO_Init+0x1b0>
 800aa9c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800aaa0:	42a0      	cmp	r0, r4
 800aaa2:	d03f      	beq.n	800ab24 <HAL_GPIO_Init+0x1b4>
 800aaa4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800aaa8:	42a0      	cmp	r0, r4
 800aaaa:	d03d      	beq.n	800ab28 <HAL_GPIO_Init+0x1b8>
 800aaac:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800aab0:	42a0      	cmp	r0, r4
 800aab2:	bf14      	ite	ne
 800aab4:	240a      	movne	r4, #10
 800aab6:	2409      	moveq	r4, #9
 800aab8:	fa04 f40c 	lsl.w	r4, r4, ip
 800aabc:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 800aac0:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 800aac2:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800aac4:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800aac6:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 800aaca:	bf0c      	ite	eq
 800aacc:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800aace:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 800aad0:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800aad2:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800aad4:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 800aad8:	bf0c      	ite	eq
 800aada:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800aadc:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 800aade:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 800aae0:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800aae2:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800aae6:	bf0c      	ite	eq
 800aae8:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800aaea:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 800aaec:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800aaee:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800aaf0:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800aaf2:	bf54      	ite	pl
 800aaf4:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800aaf6:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 800aaf8:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800aafa:	3301      	adds	r3, #1
 800aafc:	2b10      	cmp	r3, #16
 800aafe:	f47f af3d 	bne.w	800a97c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800ab02:	b003      	add	sp, #12
 800ab04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ab08:	2400      	movs	r4, #0
 800ab0a:	e7d5      	b.n	800aab8 <HAL_GPIO_Init+0x148>
 800ab0c:	2401      	movs	r4, #1
 800ab0e:	e7d3      	b.n	800aab8 <HAL_GPIO_Init+0x148>
 800ab10:	2402      	movs	r4, #2
 800ab12:	e7d1      	b.n	800aab8 <HAL_GPIO_Init+0x148>
 800ab14:	2403      	movs	r4, #3
 800ab16:	e7cf      	b.n	800aab8 <HAL_GPIO_Init+0x148>
 800ab18:	2404      	movs	r4, #4
 800ab1a:	e7cd      	b.n	800aab8 <HAL_GPIO_Init+0x148>
 800ab1c:	2405      	movs	r4, #5
 800ab1e:	e7cb      	b.n	800aab8 <HAL_GPIO_Init+0x148>
 800ab20:	2406      	movs	r4, #6
 800ab22:	e7c9      	b.n	800aab8 <HAL_GPIO_Init+0x148>
 800ab24:	2407      	movs	r4, #7
 800ab26:	e7c7      	b.n	800aab8 <HAL_GPIO_Init+0x148>
 800ab28:	2408      	movs	r4, #8
 800ab2a:	e7c5      	b.n	800aab8 <HAL_GPIO_Init+0x148>
 800ab2c:	40013c00 	.word	0x40013c00
 800ab30:	40020000 	.word	0x40020000
 800ab34:	40023800 	.word	0x40023800

0800ab38 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800ab38:	6903      	ldr	r3, [r0, #16]
 800ab3a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800ab3c:	bf14      	ite	ne
 800ab3e:	2001      	movne	r0, #1
 800ab40:	2000      	moveq	r0, #0
 800ab42:	4770      	bx	lr

0800ab44 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800ab44:	b10a      	cbz	r2, 800ab4a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ab46:	6181      	str	r1, [r0, #24]
  }
}
 800ab48:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ab4a:	0409      	lsls	r1, r1, #16
 800ab4c:	e7fb      	b.n	800ab46 <HAL_GPIO_WritePin+0x2>

0800ab4e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800ab4e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800ab50:	ea01 0203 	and.w	r2, r1, r3
 800ab54:	ea21 0103 	bic.w	r1, r1, r3
 800ab58:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800ab5c:	6181      	str	r1, [r0, #24]
}
 800ab5e:	4770      	bx	lr

0800ab60 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ab60:	6801      	ldr	r1, [r0, #0]
 800ab62:	694b      	ldr	r3, [r1, #20]
 800ab64:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 800ab68:	f04f 0200 	mov.w	r2, #0
 800ab6c:	d010      	beq.n	800ab90 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800ab6e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800ab72:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800ab74:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800ab76:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800ab78:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ab7c:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800ab80:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800ab82:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800ab86:	f043 0304 	orr.w	r3, r3, #4
 800ab8a:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 800ab8c:	2001      	movs	r0, #1
 800ab8e:	4770      	bx	lr
  }
  return HAL_OK;
 800ab90:	4618      	mov	r0, r3
}
 800ab92:	4770      	bx	lr

0800ab94 <I2C_WaitOnFlagUntilTimeout>:
{
 800ab94:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800ab98:	4606      	mov	r6, r0
 800ab9a:	460f      	mov	r7, r1
 800ab9c:	4691      	mov	r9, r2
 800ab9e:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aba0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800aba4:	6833      	ldr	r3, [r6, #0]
 800aba6:	f1ba 0f01 	cmp.w	sl, #1
 800abaa:	bf0c      	ite	eq
 800abac:	695c      	ldreq	r4, [r3, #20]
 800abae:	699c      	ldrne	r4, [r3, #24]
 800abb0:	ea27 0404 	bic.w	r4, r7, r4
 800abb4:	b2a4      	uxth	r4, r4
 800abb6:	fab4 f484 	clz	r4, r4
 800abba:	0964      	lsrs	r4, r4, #5
 800abbc:	45a1      	cmp	r9, r4
 800abbe:	d001      	beq.n	800abc4 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800abc0:	2000      	movs	r0, #0
 800abc2:	e025      	b.n	800ac10 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 800abc4:	1c6a      	adds	r2, r5, #1
 800abc6:	d0ee      	beq.n	800aba6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800abc8:	f7ff fb28 	bl	800a21c <HAL_GetTick>
 800abcc:	9b08      	ldr	r3, [sp, #32]
 800abce:	1ac0      	subs	r0, r0, r3
 800abd0:	42a8      	cmp	r0, r5
 800abd2:	d801      	bhi.n	800abd8 <I2C_WaitOnFlagUntilTimeout+0x44>
 800abd4:	2d00      	cmp	r5, #0
 800abd6:	d1e5      	bne.n	800aba4 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800abd8:	6833      	ldr	r3, [r6, #0]
 800abda:	f1ba 0f01 	cmp.w	sl, #1
 800abde:	bf0c      	ite	eq
 800abe0:	695b      	ldreq	r3, [r3, #20]
 800abe2:	699b      	ldrne	r3, [r3, #24]
 800abe4:	ea27 0303 	bic.w	r3, r7, r3
 800abe8:	b29b      	uxth	r3, r3
 800abea:	fab3 f383 	clz	r3, r3
 800abee:	095b      	lsrs	r3, r3, #5
 800abf0:	4599      	cmp	r9, r3
 800abf2:	d1d7      	bne.n	800aba4 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 800abf4:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800abf6:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800abf8:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800abfa:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800abfe:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac02:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800ac04:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac08:	f042 0220 	orr.w	r2, r2, #32
 800ac0c:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 800ac0e:	2001      	movs	r0, #1
}
 800ac10:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800ac14 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800ac14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac18:	4604      	mov	r4, r0
 800ac1a:	460f      	mov	r7, r1
 800ac1c:	4616      	mov	r6, r2
 800ac1e:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800ac20:	6825      	ldr	r5, [r4, #0]
 800ac22:	6968      	ldr	r0, [r5, #20]
 800ac24:	ea27 0000 	bic.w	r0, r7, r0
 800ac28:	b280      	uxth	r0, r0
 800ac2a:	b1c0      	cbz	r0, 800ac5e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ac2c:	696b      	ldr	r3, [r5, #20]
 800ac2e:	055a      	lsls	r2, r3, #21
 800ac30:	d517      	bpl.n	800ac62 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac32:	682b      	ldr	r3, [r5, #0]
 800ac34:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800ac38:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800ac3a:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800ac3e:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac40:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac42:	2300      	movs	r3, #0
 800ac44:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac46:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ac4a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800ac4e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800ac50:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ac54:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800ac56:	2300      	movs	r3, #0
 800ac58:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 800ac5c:	2001      	movs	r0, #1
}
 800ac5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800ac62:	1c73      	adds	r3, r6, #1
 800ac64:	d0dd      	beq.n	800ac22 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac66:	f7ff fad9 	bl	800a21c <HAL_GetTick>
 800ac6a:	eba0 0008 	sub.w	r0, r0, r8
 800ac6e:	42b0      	cmp	r0, r6
 800ac70:	d801      	bhi.n	800ac76 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 800ac72:	2e00      	cmp	r6, #0
 800ac74:	d1d4      	bne.n	800ac20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 800ac76:	6823      	ldr	r3, [r4, #0]
 800ac78:	695a      	ldr	r2, [r3, #20]
 800ac7a:	ea27 0202 	bic.w	r2, r7, r2
 800ac7e:	b292      	uxth	r2, r2
 800ac80:	2a00      	cmp	r2, #0
 800ac82:	d0cd      	beq.n	800ac20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 800ac84:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 800ac86:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800ac88:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800ac8a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ac8e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ac92:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800ac94:	4313      	orrs	r3, r2
 800ac96:	e7dd      	b.n	800ac54 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800ac98 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800ac98:	b570      	push	{r4, r5, r6, lr}
 800ac9a:	4604      	mov	r4, r0
 800ac9c:	460d      	mov	r5, r1
 800ac9e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aca0:	6823      	ldr	r3, [r4, #0]
 800aca2:	695b      	ldr	r3, [r3, #20]
 800aca4:	061b      	lsls	r3, r3, #24
 800aca6:	d501      	bpl.n	800acac <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800aca8:	2000      	movs	r0, #0
 800acaa:	e01e      	b.n	800acea <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800acac:	4620      	mov	r0, r4
 800acae:	f7ff ff57 	bl	800ab60 <I2C_IsAcknowledgeFailed>
 800acb2:	b9c8      	cbnz	r0, 800ace8 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 800acb4:	1c6a      	adds	r2, r5, #1
 800acb6:	d0f3      	beq.n	800aca0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800acb8:	f7ff fab0 	bl	800a21c <HAL_GetTick>
 800acbc:	1b80      	subs	r0, r0, r6
 800acbe:	42a8      	cmp	r0, r5
 800acc0:	d801      	bhi.n	800acc6 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800acc2:	2d00      	cmp	r5, #0
 800acc4:	d1ec      	bne.n	800aca0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800acc6:	6823      	ldr	r3, [r4, #0]
 800acc8:	695b      	ldr	r3, [r3, #20]
 800acca:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 800acce:	d1e7      	bne.n	800aca0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800acd0:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800acd2:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800acd4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800acd8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800acdc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800acde:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ace2:	f042 0220 	orr.w	r2, r2, #32
 800ace6:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800ace8:	2001      	movs	r0, #1
}
 800acea:	bd70      	pop	{r4, r5, r6, pc}

0800acec <I2C_RequestMemoryWrite>:
{
 800acec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800acf0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800acf2:	6802      	ldr	r2, [r0, #0]
{
 800acf4:	b085      	sub	sp, #20
 800acf6:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 800acfa:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800acfc:	6813      	ldr	r3, [r2, #0]
 800acfe:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800ad02:	6013      	str	r3, [r2, #0]
{
 800ad04:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ad06:	463b      	mov	r3, r7
 800ad08:	f8cd 8000 	str.w	r8, [sp]
 800ad0c:	2200      	movs	r2, #0
 800ad0e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 800ad12:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ad14:	f7ff ff3e 	bl	800ab94 <I2C_WaitOnFlagUntilTimeout>
 800ad18:	6823      	ldr	r3, [r4, #0]
 800ad1a:	b138      	cbz	r0, 800ad2c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800ad1c:	681b      	ldr	r3, [r3, #0]
 800ad1e:	05db      	lsls	r3, r3, #23
 800ad20:	d502      	bpl.n	800ad28 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800ad22:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800ad26:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800ad28:	2603      	movs	r6, #3
 800ad2a:	e020      	b.n	800ad6e <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800ad2c:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800ad30:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800ad32:	491a      	ldr	r1, [pc, #104]	@ (800ad9c <I2C_RequestMemoryWrite+0xb0>)
 800ad34:	4643      	mov	r3, r8
 800ad36:	463a      	mov	r2, r7
 800ad38:	4620      	mov	r0, r4
 800ad3a:	f7ff ff6b 	bl	800ac14 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800ad3e:	b9a8      	cbnz	r0, 800ad6c <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad40:	6823      	ldr	r3, [r4, #0]
 800ad42:	9003      	str	r0, [sp, #12]
 800ad44:	695a      	ldr	r2, [r3, #20]
 800ad46:	9203      	str	r2, [sp, #12]
 800ad48:	699b      	ldr	r3, [r3, #24]
 800ad4a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ad4c:	4642      	mov	r2, r8
 800ad4e:	4639      	mov	r1, r7
 800ad50:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad52:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ad54:	f7ff ffa0 	bl	800ac98 <I2C_WaitOnTXEFlagUntilTimeout>
 800ad58:	4606      	mov	r6, r0
 800ad5a:	b160      	cbz	r0, 800ad76 <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ad5c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800ad5e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad60:	bf01      	itttt	eq
 800ad62:	6822      	ldreq	r2, [r4, #0]
 800ad64:	6813      	ldreq	r3, [r2, #0]
 800ad66:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800ad6a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800ad6c:	2601      	movs	r6, #1
}
 800ad6e:	4630      	mov	r0, r6
 800ad70:	b005      	add	sp, #20
 800ad72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800ad76:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad7a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800ad7c:	d102      	bne.n	800ad84 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800ad7e:	b2ed      	uxtb	r5, r5
 800ad80:	611d      	str	r5, [r3, #16]
 800ad82:	e7f4      	b.n	800ad6e <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800ad84:	0a2a      	lsrs	r2, r5, #8
 800ad86:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ad88:	4639      	mov	r1, r7
 800ad8a:	4642      	mov	r2, r8
 800ad8c:	4620      	mov	r0, r4
 800ad8e:	f7ff ff83 	bl	800ac98 <I2C_WaitOnTXEFlagUntilTimeout>
 800ad92:	2800      	cmp	r0, #0
 800ad94:	d1e2      	bne.n	800ad5c <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800ad96:	6823      	ldr	r3, [r4, #0]
 800ad98:	e7f1      	b.n	800ad7e <I2C_RequestMemoryWrite+0x92>
 800ad9a:	bf00      	nop
 800ad9c:	00010002 	.word	0x00010002

0800ada0 <I2C_RequestMemoryRead>:
{
 800ada0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ada4:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ada6:	6803      	ldr	r3, [r0, #0]
{
 800ada8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adaa:	681a      	ldr	r2, [r3, #0]
 800adac:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800adb0:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800adb2:	681a      	ldr	r2, [r3, #0]
{
 800adb4:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800adb8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800adbc:	601a      	str	r2, [r3, #0]
{
 800adbe:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800adc0:	463b      	mov	r3, r7
 800adc2:	f8cd 8000 	str.w	r8, [sp]
 800adc6:	2200      	movs	r2, #0
 800adc8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 800adcc:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800adce:	f7ff fee1 	bl	800ab94 <I2C_WaitOnFlagUntilTimeout>
 800add2:	6823      	ldr	r3, [r4, #0]
 800add4:	b138      	cbz	r0, 800ade6 <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800add6:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800add8:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800adda:	bf44      	itt	mi
 800addc:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 800ade0:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800ade2:	2003      	movs	r0, #3
 800ade4:	e021      	b.n	800ae2a <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800ade6:	fa5f f986 	uxtb.w	r9, r6
 800adea:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800adee:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800adf0:	492b      	ldr	r1, [pc, #172]	@ (800aea0 <I2C_RequestMemoryRead+0x100>)
 800adf2:	4643      	mov	r3, r8
 800adf4:	463a      	mov	r2, r7
 800adf6:	4620      	mov	r0, r4
 800adf8:	f7ff ff0c 	bl	800ac14 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800adfc:	b9a0      	cbnz	r0, 800ae28 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800adfe:	6823      	ldr	r3, [r4, #0]
 800ae00:	9003      	str	r0, [sp, #12]
 800ae02:	695a      	ldr	r2, [r3, #20]
 800ae04:	9203      	str	r2, [sp, #12]
 800ae06:	699b      	ldr	r3, [r3, #24]
 800ae08:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ae0a:	4642      	mov	r2, r8
 800ae0c:	4639      	mov	r1, r7
 800ae0e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae10:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ae12:	f7ff ff41 	bl	800ac98 <I2C_WaitOnTXEFlagUntilTimeout>
 800ae16:	b158      	cbz	r0, 800ae30 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ae18:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800ae1a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae1c:	bf01      	itttt	eq
 800ae1e:	6822      	ldreq	r2, [r4, #0]
 800ae20:	6813      	ldreq	r3, [r2, #0]
 800ae22:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800ae26:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800ae28:	2001      	movs	r0, #1
}
 800ae2a:	b004      	add	sp, #16
 800ae2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800ae30:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae34:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800ae36:	d11a      	bne.n	800ae6e <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800ae38:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ae3a:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800ae3c:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ae3e:	4639      	mov	r1, r7
 800ae40:	4620      	mov	r0, r4
 800ae42:	f7ff ff29 	bl	800ac98 <I2C_WaitOnTXEFlagUntilTimeout>
 800ae46:	4602      	mov	r2, r0
 800ae48:	2800      	cmp	r0, #0
 800ae4a:	d1e5      	bne.n	800ae18 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ae4c:	6821      	ldr	r1, [r4, #0]
 800ae4e:	680b      	ldr	r3, [r1, #0]
 800ae50:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800ae54:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ae56:	4620      	mov	r0, r4
 800ae58:	f8cd 8000 	str.w	r8, [sp]
 800ae5c:	463b      	mov	r3, r7
 800ae5e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800ae62:	f7ff fe97 	bl	800ab94 <I2C_WaitOnFlagUntilTimeout>
 800ae66:	6822      	ldr	r2, [r4, #0]
 800ae68:	b160      	cbz	r0, 800ae84 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800ae6a:	6813      	ldr	r3, [r2, #0]
 800ae6c:	e7b4      	b.n	800add8 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800ae6e:	0a2a      	lsrs	r2, r5, #8
 800ae70:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ae72:	4639      	mov	r1, r7
 800ae74:	4642      	mov	r2, r8
 800ae76:	4620      	mov	r0, r4
 800ae78:	f7ff ff0e 	bl	800ac98 <I2C_WaitOnTXEFlagUntilTimeout>
 800ae7c:	2800      	cmp	r0, #0
 800ae7e:	d1cb      	bne.n	800ae18 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800ae80:	6823      	ldr	r3, [r4, #0]
 800ae82:	e7d9      	b.n	800ae38 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800ae84:	f049 0301 	orr.w	r3, r9, #1
 800ae88:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800ae8a:	4905      	ldr	r1, [pc, #20]	@ (800aea0 <I2C_RequestMemoryRead+0x100>)
 800ae8c:	4643      	mov	r3, r8
 800ae8e:	463a      	mov	r2, r7
 800ae90:	4620      	mov	r0, r4
 800ae92:	f7ff febf 	bl	800ac14 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800ae96:	3800      	subs	r0, #0
 800ae98:	bf18      	it	ne
 800ae9a:	2001      	movne	r0, #1
 800ae9c:	e7c5      	b.n	800ae2a <I2C_RequestMemoryRead+0x8a>
 800ae9e:	bf00      	nop
 800aea0:	00010002 	.word	0x00010002

0800aea4 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800aea4:	b570      	push	{r4, r5, r6, lr}
 800aea6:	4604      	mov	r4, r0
 800aea8:	460d      	mov	r5, r1
 800aeaa:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800aeac:	6823      	ldr	r3, [r4, #0]
 800aeae:	695b      	ldr	r3, [r3, #20]
 800aeb0:	075b      	lsls	r3, r3, #29
 800aeb2:	d501      	bpl.n	800aeb8 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800aeb4:	2000      	movs	r0, #0
 800aeb6:	e01e      	b.n	800aef6 <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800aeb8:	4620      	mov	r0, r4
 800aeba:	f7ff fe51 	bl	800ab60 <I2C_IsAcknowledgeFailed>
 800aebe:	b9c8      	cbnz	r0, 800aef4 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 800aec0:	1c6a      	adds	r2, r5, #1
 800aec2:	d0f3      	beq.n	800aeac <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aec4:	f7ff f9aa 	bl	800a21c <HAL_GetTick>
 800aec8:	1b80      	subs	r0, r0, r6
 800aeca:	42a8      	cmp	r0, r5
 800aecc:	d801      	bhi.n	800aed2 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800aece:	2d00      	cmp	r5, #0
 800aed0:	d1ec      	bne.n	800aeac <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 800aed2:	6823      	ldr	r3, [r4, #0]
 800aed4:	695b      	ldr	r3, [r3, #20]
 800aed6:	f013 0304 	ands.w	r3, r3, #4
 800aeda:	d1e7      	bne.n	800aeac <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800aedc:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800aede:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800aee0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aee4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800aee8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800aeea:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800aeee:	f042 0220 	orr.w	r2, r2, #32
 800aef2:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800aef4:	2001      	movs	r0, #1
}
 800aef6:	bd70      	pop	{r4, r5, r6, pc}

0800aef8 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800aef8:	b570      	push	{r4, r5, r6, lr}
 800aefa:	4604      	mov	r4, r0
 800aefc:	460d      	mov	r5, r1
 800aefe:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800af00:	6821      	ldr	r1, [r4, #0]
 800af02:	694b      	ldr	r3, [r1, #20]
 800af04:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800af08:	d001      	beq.n	800af0e <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800af0a:	2000      	movs	r0, #0
 800af0c:	e011      	b.n	800af32 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800af0e:	694a      	ldr	r2, [r1, #20]
 800af10:	06d2      	lsls	r2, r2, #27
 800af12:	d50f      	bpl.n	800af34 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800af14:	f06f 0210 	mvn.w	r2, #16
 800af18:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800af1a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800af1c:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800af1e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800af22:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800af26:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800af28:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800af2a:	2300      	movs	r3, #0
 800af2c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 800af30:	2001      	movs	r0, #1
}
 800af32:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af34:	f7ff f972 	bl	800a21c <HAL_GetTick>
 800af38:	1b80      	subs	r0, r0, r6
 800af3a:	42a8      	cmp	r0, r5
 800af3c:	d801      	bhi.n	800af42 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 800af3e:	2d00      	cmp	r5, #0
 800af40:	d1de      	bne.n	800af00 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800af42:	6823      	ldr	r3, [r4, #0]
 800af44:	695b      	ldr	r3, [r3, #20]
 800af46:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800af4a:	d1d9      	bne.n	800af00 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 800af4c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800af4e:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800af50:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800af54:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800af58:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800af5a:	4313      	orrs	r3, r2
 800af5c:	e7e4      	b.n	800af28 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

0800af60 <HAL_I2C_Init>:
{
 800af60:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800af62:	4604      	mov	r4, r0
 800af64:	b908      	cbnz	r0, 800af6a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800af66:	2001      	movs	r0, #1
}
 800af68:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800af6a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800af6e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800af72:	b91b      	cbnz	r3, 800af7c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800af74:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 800af78:	f7f7 fd0c 	bl	8002994 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800af7c:	2324      	movs	r3, #36	@ 0x24
 800af7e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800af82:	6823      	ldr	r3, [r4, #0]
 800af84:	681a      	ldr	r2, [r3, #0]
 800af86:	f022 0201 	bic.w	r2, r2, #1
 800af8a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800af8c:	681a      	ldr	r2, [r3, #0]
 800af8e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800af92:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800af94:	681a      	ldr	r2, [r3, #0]
 800af96:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800af9a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800af9c:	f000 fea8 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800afa0:	4b3f      	ldr	r3, [pc, #252]	@ (800b0a0 <HAL_I2C_Init+0x140>)
 800afa2:	6865      	ldr	r5, [r4, #4]
 800afa4:	429d      	cmp	r5, r3
 800afa6:	bf94      	ite	ls
 800afa8:	4b3e      	ldrls	r3, [pc, #248]	@ (800b0a4 <HAL_I2C_Init+0x144>)
 800afaa:	4b3f      	ldrhi	r3, [pc, #252]	@ (800b0a8 <HAL_I2C_Init+0x148>)
 800afac:	4298      	cmp	r0, r3
 800afae:	bf8c      	ite	hi
 800afb0:	2300      	movhi	r3, #0
 800afb2:	2301      	movls	r3, #1
 800afb4:	2b00      	cmp	r3, #0
 800afb6:	d1d6      	bne.n	800af66 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800afb8:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800afba:	4e39      	ldr	r6, [pc, #228]	@ (800b0a0 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800afbc:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800afbe:	4b3b      	ldr	r3, [pc, #236]	@ (800b0ac <HAL_I2C_Init+0x14c>)
 800afc0:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800afc4:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800afc8:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800afca:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800afcc:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800afce:	bf88      	it	hi
 800afd0:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 800afd4:	6a11      	ldr	r1, [r2, #32]
 800afd6:	bf88      	it	hi
 800afd8:	4373      	mulhi	r3, r6
 800afda:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800afde:	bf84      	itt	hi
 800afe0:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 800afe4:	fbb3 f3f6 	udivhi	r3, r3, r6
 800afe8:	3301      	adds	r3, #1
 800afea:	430b      	orrs	r3, r1
 800afec:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800afee:	69d1      	ldr	r1, [r2, #28]
 800aff0:	1e43      	subs	r3, r0, #1
 800aff2:	482b      	ldr	r0, [pc, #172]	@ (800b0a0 <HAL_I2C_Init+0x140>)
 800aff4:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 800aff8:	4285      	cmp	r5, r0
 800affa:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800affe:	d832      	bhi.n	800b066 <HAL_I2C_Init+0x106>
 800b000:	006d      	lsls	r5, r5, #1
 800b002:	f640 70fc 	movw	r0, #4092	@ 0xffc
 800b006:	fbb3 f3f5 	udiv	r3, r3, r5
 800b00a:	3301      	adds	r3, #1
 800b00c:	4203      	tst	r3, r0
 800b00e:	d042      	beq.n	800b096 <HAL_I2C_Init+0x136>
 800b010:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b014:	4319      	orrs	r1, r3
 800b016:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800b018:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800b01c:	6811      	ldr	r1, [r2, #0]
 800b01e:	4303      	orrs	r3, r0
 800b020:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 800b024:	430b      	orrs	r3, r1
 800b026:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800b028:	6891      	ldr	r1, [r2, #8]
 800b02a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800b02e:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 800b032:	4303      	orrs	r3, r0
 800b034:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800b038:	430b      	orrs	r3, r1
 800b03a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800b03c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800b040:	68d1      	ldr	r1, [r2, #12]
 800b042:	4303      	orrs	r3, r0
 800b044:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800b048:	430b      	orrs	r3, r1
 800b04a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800b04c:	6813      	ldr	r3, [r2, #0]
 800b04e:	f043 0301 	orr.w	r3, r3, #1
 800b052:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b054:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800b056:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b058:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800b05a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b05e:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800b060:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 800b064:	e780      	b.n	800af68 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b066:	68a0      	ldr	r0, [r4, #8]
 800b068:	b950      	cbnz	r0, 800b080 <HAL_I2C_Init+0x120>
 800b06a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800b06e:	fbb3 f3f5 	udiv	r3, r3, r5
 800b072:	3301      	adds	r3, #1
 800b074:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b078:	b17b      	cbz	r3, 800b09a <HAL_I2C_Init+0x13a>
 800b07a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800b07e:	e7c9      	b.n	800b014 <HAL_I2C_Init+0xb4>
 800b080:	2019      	movs	r0, #25
 800b082:	4368      	muls	r0, r5
 800b084:	fbb3 f3f0 	udiv	r3, r3, r0
 800b088:	3301      	adds	r3, #1
 800b08a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b08e:	b123      	cbz	r3, 800b09a <HAL_I2C_Init+0x13a>
 800b090:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800b094:	e7be      	b.n	800b014 <HAL_I2C_Init+0xb4>
 800b096:	2304      	movs	r3, #4
 800b098:	e7bc      	b.n	800b014 <HAL_I2C_Init+0xb4>
 800b09a:	2301      	movs	r3, #1
 800b09c:	e7ba      	b.n	800b014 <HAL_I2C_Init+0xb4>
 800b09e:	bf00      	nop
 800b0a0:	000186a0 	.word	0x000186a0
 800b0a4:	001e847f 	.word	0x001e847f
 800b0a8:	003d08ff 	.word	0x003d08ff
 800b0ac:	000f4240 	.word	0x000f4240

0800b0b0 <HAL_I2C_Mem_Write>:
{
 800b0b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b0b4:	4604      	mov	r4, r0
 800b0b6:	4699      	mov	r9, r3
 800b0b8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800b0ba:	460f      	mov	r7, r1
 800b0bc:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b0be:	f7ff f8ad 	bl	800a21c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b0c2:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800b0c6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b0c8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b0ca:	d003      	beq.n	800b0d4 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 800b0cc:	2002      	movs	r0, #2
}
 800b0ce:	b003      	add	sp, #12
 800b0d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b0d4:	9000      	str	r0, [sp, #0]
 800b0d6:	493c      	ldr	r1, [pc, #240]	@ (800b1c8 <HAL_I2C_Mem_Write+0x118>)
 800b0d8:	2319      	movs	r3, #25
 800b0da:	2201      	movs	r2, #1
 800b0dc:	4620      	mov	r0, r4
 800b0de:	f7ff fd59 	bl	800ab94 <I2C_WaitOnFlagUntilTimeout>
 800b0e2:	2800      	cmp	r0, #0
 800b0e4:	d1f2      	bne.n	800b0cc <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800b0e6:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800b0ea:	2b01      	cmp	r3, #1
 800b0ec:	d0ee      	beq.n	800b0cc <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b0ee:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b0f0:	2301      	movs	r3, #1
 800b0f2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b0f6:	6803      	ldr	r3, [r0, #0]
 800b0f8:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b0fa:	bf5e      	ittt	pl
 800b0fc:	6803      	ldrpl	r3, [r0, #0]
 800b0fe:	f043 0301 	orrpl.w	r3, r3, #1
 800b102:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b104:	6803      	ldr	r3, [r0, #0]
 800b106:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800b10a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800b10c:	2321      	movs	r3, #33	@ 0x21
 800b10e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b112:	2340      	movs	r3, #64	@ 0x40
 800b114:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b118:	2300      	movs	r3, #0
 800b11a:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 800b11c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b11e:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 800b120:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800b124:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b126:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800b128:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b12a:	4b28      	ldr	r3, [pc, #160]	@ (800b1cc <HAL_I2C_Mem_Write+0x11c>)
 800b12c:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b12e:	4642      	mov	r2, r8
 800b130:	e9cd 6500 	strd	r6, r5, [sp]
 800b134:	464b      	mov	r3, r9
 800b136:	4639      	mov	r1, r7
 800b138:	4620      	mov	r0, r4
 800b13a:	f7ff fdd7 	bl	800acec <I2C_RequestMemoryWrite>
 800b13e:	2800      	cmp	r0, #0
 800b140:	d02a      	beq.n	800b198 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800b142:	2001      	movs	r0, #1
 800b144:	e7c3      	b.n	800b0ce <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b146:	f7ff fda7 	bl	800ac98 <I2C_WaitOnTXEFlagUntilTimeout>
 800b14a:	b140      	cbz	r0, 800b15e <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b14c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b14e:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b150:	bf01      	itttt	eq
 800b152:	6822      	ldreq	r2, [r4, #0]
 800b154:	6813      	ldreq	r3, [r2, #0]
 800b156:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800b15a:	6013      	streq	r3, [r2, #0]
 800b15c:	e7f1      	b.n	800b142 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b15e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800b160:	6827      	ldr	r7, [r4, #0]
 800b162:	461a      	mov	r2, r3
 800b164:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b168:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800b16a:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800b16c:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800b16e:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 800b170:	3a01      	subs	r2, #1
 800b172:	b292      	uxth	r2, r2
 800b174:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b176:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800b178:	1e48      	subs	r0, r1, #1
 800b17a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b17c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800b17e:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b180:	d50a      	bpl.n	800b198 <HAL_I2C_Mem_Write+0xe8>
 800b182:	b148      	cbz	r0, 800b198 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b184:	785a      	ldrb	r2, [r3, #1]
 800b186:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800b188:	3302      	adds	r3, #2
 800b18a:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800b18c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800b18e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800b190:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800b192:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800b194:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800b196:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 800b198:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b19a:	462a      	mov	r2, r5
 800b19c:	4631      	mov	r1, r6
 800b19e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800b1a0:	2b00      	cmp	r3, #0
 800b1a2:	d1d0      	bne.n	800b146 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b1a4:	f7ff fe7e 	bl	800aea4 <I2C_WaitOnBTFFlagUntilTimeout>
 800b1a8:	2800      	cmp	r0, #0
 800b1aa:	d1cf      	bne.n	800b14c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1ac:	6822      	ldr	r2, [r4, #0]
 800b1ae:	6813      	ldr	r3, [r2, #0]
 800b1b0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800b1b4:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b1b6:	2320      	movs	r3, #32
 800b1b8:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800b1bc:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b1c0:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 800b1c4:	e783      	b.n	800b0ce <HAL_I2C_Mem_Write+0x1e>
 800b1c6:	bf00      	nop
 800b1c8:	00100002 	.word	0x00100002
 800b1cc:	ffff0000 	.word	0xffff0000

0800b1d0 <HAL_I2C_Mem_Read>:
{
 800b1d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b1d4:	4604      	mov	r4, r0
 800b1d6:	b087      	sub	sp, #28
 800b1d8:	4699      	mov	r9, r3
 800b1da:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 800b1dc:	460d      	mov	r5, r1
 800b1de:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b1e0:	f7ff f81c 	bl	800a21c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b1e4:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800b1e8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b1ea:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b1ec:	d004      	beq.n	800b1f8 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 800b1ee:	2502      	movs	r5, #2
}
 800b1f0:	4628      	mov	r0, r5
 800b1f2:	b007      	add	sp, #28
 800b1f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b1f8:	9000      	str	r0, [sp, #0]
 800b1fa:	497a      	ldr	r1, [pc, #488]	@ (800b3e4 <HAL_I2C_Mem_Read+0x214>)
 800b1fc:	2319      	movs	r3, #25
 800b1fe:	2201      	movs	r2, #1
 800b200:	4620      	mov	r0, r4
 800b202:	f7ff fcc7 	bl	800ab94 <I2C_WaitOnFlagUntilTimeout>
 800b206:	2800      	cmp	r0, #0
 800b208:	d1f1      	bne.n	800b1ee <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800b20a:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800b20e:	2b01      	cmp	r3, #1
 800b210:	d0ed      	beq.n	800b1ee <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b212:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b214:	2301      	movs	r3, #1
 800b216:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b21a:	6803      	ldr	r3, [r0, #0]
 800b21c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b21e:	bf5e      	ittt	pl
 800b220:	6803      	ldrpl	r3, [r0, #0]
 800b222:	f043 0301 	orrpl.w	r3, r3, #1
 800b226:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b228:	6803      	ldr	r3, [r0, #0]
 800b22a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800b22e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800b230:	2322      	movs	r3, #34	@ 0x22
 800b232:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b236:	2340      	movs	r3, #64	@ 0x40
 800b238:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b23c:	2300      	movs	r3, #0
 800b23e:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 800b240:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b242:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 800b244:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800b248:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b24a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800b24c:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b24e:	4b66      	ldr	r3, [pc, #408]	@ (800b3e8 <HAL_I2C_Mem_Read+0x218>)
 800b250:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b252:	4629      	mov	r1, r5
 800b254:	e9cd 7600 	strd	r7, r6, [sp]
 800b258:	464b      	mov	r3, r9
 800b25a:	4642      	mov	r2, r8
 800b25c:	4620      	mov	r0, r4
 800b25e:	f7ff fd9f 	bl	800ada0 <I2C_RequestMemoryRead>
 800b262:	4605      	mov	r5, r0
 800b264:	b108      	cbz	r0, 800b26a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800b266:	2501      	movs	r5, #1
 800b268:	e7c2      	b.n	800b1f0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800b26a:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b26c:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800b26e:	b9b2      	cbnz	r2, 800b29e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b270:	9002      	str	r0, [sp, #8]
 800b272:	695a      	ldr	r2, [r3, #20]
 800b274:	9202      	str	r2, [sp, #8]
 800b276:	699a      	ldr	r2, [r3, #24]
 800b278:	9202      	str	r2, [sp, #8]
 800b27a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b27c:	681a      	ldr	r2, [r3, #0]
 800b27e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800b282:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b284:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 800b3ec <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 800b288:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800b28a:	2b00      	cmp	r3, #0
 800b28c:	d12c      	bne.n	800b2e8 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800b28e:	2220      	movs	r2, #32
 800b290:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800b294:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b298:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 800b29c:	e7a8      	b.n	800b1f0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800b29e:	2a01      	cmp	r2, #1
 800b2a0:	d10a      	bne.n	800b2b8 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2a2:	681a      	ldr	r2, [r3, #0]
 800b2a4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800b2a8:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b2aa:	9003      	str	r0, [sp, #12]
 800b2ac:	695a      	ldr	r2, [r3, #20]
 800b2ae:	9203      	str	r2, [sp, #12]
 800b2b0:	699a      	ldr	r2, [r3, #24]
 800b2b2:	9203      	str	r2, [sp, #12]
 800b2b4:	9a03      	ldr	r2, [sp, #12]
 800b2b6:	e7e1      	b.n	800b27c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800b2b8:	2a02      	cmp	r2, #2
 800b2ba:	d10e      	bne.n	800b2da <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2bc:	681a      	ldr	r2, [r3, #0]
 800b2be:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800b2c2:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b2c4:	681a      	ldr	r2, [r3, #0]
 800b2c6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800b2ca:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b2cc:	9004      	str	r0, [sp, #16]
 800b2ce:	695a      	ldr	r2, [r3, #20]
 800b2d0:	9204      	str	r2, [sp, #16]
 800b2d2:	699b      	ldr	r3, [r3, #24]
 800b2d4:	9304      	str	r3, [sp, #16]
 800b2d6:	9b04      	ldr	r3, [sp, #16]
 800b2d8:	e7d4      	b.n	800b284 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b2da:	9005      	str	r0, [sp, #20]
 800b2dc:	695a      	ldr	r2, [r3, #20]
 800b2de:	9205      	str	r2, [sp, #20]
 800b2e0:	699b      	ldr	r3, [r3, #24]
 800b2e2:	9305      	str	r3, [sp, #20]
 800b2e4:	9b05      	ldr	r3, [sp, #20]
 800b2e6:	e7cd      	b.n	800b284 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800b2e8:	2b03      	cmp	r3, #3
 800b2ea:	d856      	bhi.n	800b39a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800b2ec:	2b01      	cmp	r3, #1
 800b2ee:	d115      	bne.n	800b31c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b2f0:	4632      	mov	r2, r6
 800b2f2:	4639      	mov	r1, r7
 800b2f4:	4620      	mov	r0, r4
 800b2f6:	f7ff fdff 	bl	800aef8 <I2C_WaitOnRXNEFlagUntilTimeout>
 800b2fa:	2800      	cmp	r0, #0
 800b2fc:	d1b3      	bne.n	800b266 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b2fe:	6823      	ldr	r3, [r4, #0]
 800b300:	691a      	ldr	r2, [r3, #16]
 800b302:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800b304:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b306:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800b308:	3301      	adds	r3, #1
 800b30a:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800b30c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800b30e:	3b01      	subs	r3, #1
 800b310:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800b312:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800b314:	3b01      	subs	r3, #1
 800b316:	b29b      	uxth	r3, r3
 800b318:	8563      	strh	r3, [r4, #42]	@ 0x2a
 800b31a:	e7b5      	b.n	800b288 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800b31c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b31e:	9600      	str	r6, [sp, #0]
 800b320:	463b      	mov	r3, r7
 800b322:	f04f 0200 	mov.w	r2, #0
 800b326:	4641      	mov	r1, r8
 800b328:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800b32a:	d119      	bne.n	800b360 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b32c:	f7ff fc32 	bl	800ab94 <I2C_WaitOnFlagUntilTimeout>
 800b330:	2800      	cmp	r0, #0
 800b332:	d198      	bne.n	800b266 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b334:	6823      	ldr	r3, [r4, #0]
 800b336:	681a      	ldr	r2, [r3, #0]
 800b338:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800b33c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b33e:	691a      	ldr	r2, [r3, #16]
 800b340:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800b342:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b344:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800b346:	1c53      	adds	r3, r2, #1
 800b348:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800b34a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800b34c:	3b01      	subs	r3, #1
 800b34e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800b350:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800b352:	3b01      	subs	r3, #1
 800b354:	b29b      	uxth	r3, r3
 800b356:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b358:	6823      	ldr	r3, [r4, #0]
 800b35a:	691b      	ldr	r3, [r3, #16]
 800b35c:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800b35e:	e7d2      	b.n	800b306 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b360:	f7ff fc18 	bl	800ab94 <I2C_WaitOnFlagUntilTimeout>
 800b364:	4602      	mov	r2, r0
 800b366:	2800      	cmp	r0, #0
 800b368:	f47f af7d 	bne.w	800b266 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b36c:	6823      	ldr	r3, [r4, #0]
 800b36e:	6819      	ldr	r1, [r3, #0]
 800b370:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800b374:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b376:	6919      	ldr	r1, [r3, #16]
 800b378:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800b37a:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 800b37c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800b37e:	3301      	adds	r3, #1
 800b380:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800b382:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800b384:	3b01      	subs	r3, #1
 800b386:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800b388:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800b38a:	3b01      	subs	r3, #1
 800b38c:	b29b      	uxth	r3, r3
 800b38e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b390:	4641      	mov	r1, r8
 800b392:	9600      	str	r6, [sp, #0]
 800b394:	463b      	mov	r3, r7
 800b396:	4620      	mov	r0, r4
 800b398:	e7c8      	b.n	800b32c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b39a:	4632      	mov	r2, r6
 800b39c:	4639      	mov	r1, r7
 800b39e:	4620      	mov	r0, r4
 800b3a0:	f7ff fdaa 	bl	800aef8 <I2C_WaitOnRXNEFlagUntilTimeout>
 800b3a4:	2800      	cmp	r0, #0
 800b3a6:	f47f af5e 	bne.w	800b266 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3aa:	6823      	ldr	r3, [r4, #0]
 800b3ac:	691a      	ldr	r2, [r3, #16]
 800b3ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800b3b0:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 800b3b2:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 800b3b4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800b3b6:	3a01      	subs	r2, #1
 800b3b8:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800b3ba:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 800b3bc:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b3be:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 800b3c0:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 800b3c2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b3c4:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 800b3c6:	3b01      	subs	r3, #1
 800b3c8:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b3ca:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 800b3cc:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b3ce:	f57f af5b 	bpl.w	800b288 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 800b3d2:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b3d4:	bf02      	ittt	eq
 800b3d6:	6813      	ldreq	r3, [r2, #0]
 800b3d8:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 800b3dc:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3de:	6913      	ldr	r3, [r2, #16]
 800b3e0:	704b      	strb	r3, [r1, #1]
 800b3e2:	e790      	b.n	800b306 <HAL_I2C_Mem_Read+0x136>
 800b3e4:	00100002 	.word	0x00100002
 800b3e8:	ffff0000 	.word	0xffff0000
 800b3ec:	00010004 	.word	0x00010004

0800b3f0 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800b3f0:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b3f2:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800b3f6:	2b20      	cmp	r3, #32
 800b3f8:	b2dc      	uxtb	r4, r3
 800b3fa:	d116      	bne.n	800b42a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b3fc:	2324      	movs	r3, #36	@ 0x24
 800b3fe:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800b402:	6803      	ldr	r3, [r0, #0]
 800b404:	681a      	ldr	r2, [r3, #0]
 800b406:	f022 0201 	bic.w	r2, r2, #1
 800b40a:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b40c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800b40e:	f022 0210 	bic.w	r2, r2, #16
 800b412:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 800b414:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800b416:	4311      	orrs	r1, r2
 800b418:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800b41a:	681a      	ldr	r2, [r3, #0]
 800b41c:	f042 0201 	orr.w	r2, r2, #1
 800b420:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800b422:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800b426:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800b428:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800b42a:	2002      	movs	r0, #2
 800b42c:	e7fc      	b.n	800b428 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800b42e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800b42e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b430:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800b434:	2b20      	cmp	r3, #32
 800b436:	b2dc      	uxtb	r4, r3
 800b438:	d116      	bne.n	800b468 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800b43a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b43c:	2324      	movs	r3, #36	@ 0x24
 800b43e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b442:	6813      	ldr	r3, [r2, #0]
 800b444:	f023 0301 	bic.w	r3, r3, #1
 800b448:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800b44a:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 800b44c:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 800b450:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800b452:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 800b454:	b29b      	uxth	r3, r3
 800b456:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800b458:	6813      	ldr	r3, [r2, #0]
 800b45a:	f043 0301 	orr.w	r3, r3, #1
 800b45e:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800b460:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800b464:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800b466:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 800b468:	2002      	movs	r0, #2
 800b46a:	e7fc      	b.n	800b466 <HAL_I2CEx_ConfigDigitalFilter+0x38>

0800b46c <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b46c:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b46e:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b472:	01d2      	lsls	r2, r2, #7
 800b474:	3284      	adds	r2, #132	@ 0x84
 800b476:	1883      	adds	r3, r0, r2
{
 800b478:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b47c:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b47e:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b480:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b482:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b486:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800b48a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b48c:	68c5      	ldr	r5, [r0, #12]
 800b48e:	f10c 0701 	add.w	r7, ip, #1
 800b492:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b496:	f3c6 460b 	ubfx	r6, r6, #16, #12
 800b49a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b49c:	443d      	add	r5, r7
 800b49e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b4a2:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b4a4:	68c6      	ldr	r6, [r0, #12]
 800b4a6:	68cd      	ldr	r5, [r1, #12]
 800b4a8:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800b4ac:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b4ae:	689d      	ldr	r5, [r3, #8]
 800b4b0:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800b4b4:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b4b6:	68c7      	ldr	r7, [r0, #12]
 800b4b8:	688d      	ldr	r5, [r1, #8]
 800b4ba:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800b4be:	3501      	adds	r5, #1
 800b4c0:	443d      	add	r5, r7
 800b4c2:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800b4c6:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b4c8:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b4ca:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b4cc:	f025 0507 	bic.w	r5, r5, #7
 800b4d0:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b4d2:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b4d6:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b4d8:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b4dc:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b4de:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b4e2:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b4e6:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 800b4ea:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800b4ee:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800b4f2:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800b4f6:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b4f8:	695d      	ldr	r5, [r3, #20]
 800b4fa:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 800b4fe:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b500:	694d      	ldr	r5, [r1, #20]
 800b502:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b504:	69dd      	ldr	r5, [r3, #28]
 800b506:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 800b50a:	f025 0507 	bic.w	r5, r5, #7
 800b50e:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b510:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800b514:	433d      	orrs	r5, r7
 800b516:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b518:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b51a:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b51c:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b520:	2e07      	cmp	r6, #7
 800b522:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b524:	bf9c      	itt	ls
 800b526:	4d0e      	ldrls	r5, [pc, #56]	@ (800b560 <LTDC_SetConfig+0xf4>)
 800b528:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b52a:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800b52c:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 800b530:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b532:	bf88      	it	hi
 800b534:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b536:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b538:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b53a:	eba4 040c 	sub.w	r4, r4, ip
 800b53e:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b540:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b542:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b544:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800b548:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b54a:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 800b54c:	f36f 040a 	bfc	r4, #0, #11
 800b550:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b552:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b554:	5883      	ldr	r3, [r0, r2]
 800b556:	f043 0301 	orr.w	r3, r3, #1
 800b55a:	5083      	str	r3, [r0, r2]
}
 800b55c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b560:	0802d0f0 	.word	0x0802d0f0

0800b564 <HAL_LTDC_Init>:
{
 800b564:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800b566:	4604      	mov	r4, r0
 800b568:	2800      	cmp	r0, #0
 800b56a:	d063      	beq.n	800b634 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b56c:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 800b570:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800b574:	b91b      	cbnz	r3, 800b57e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800b576:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b57a:	f7f7 fa67 	bl	8002a4c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b57e:	2302      	movs	r3, #2
 800b580:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b584:	6823      	ldr	r3, [r4, #0]
 800b586:	699a      	ldr	r2, [r3, #24]
 800b588:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 800b58c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b58e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800b592:	4302      	orrs	r2, r0
 800b594:	68e0      	ldr	r0, [r4, #12]
 800b596:	6999      	ldr	r1, [r3, #24]
 800b598:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b59a:	6920      	ldr	r0, [r4, #16]
 800b59c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b59e:	430a      	orrs	r2, r1
 800b5a0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b5a2:	689a      	ldr	r2, [r3, #8]
 800b5a4:	4924      	ldr	r1, [pc, #144]	@ (800b638 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b5a6:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b5a8:	400a      	ands	r2, r1
 800b5aa:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b5ac:	689a      	ldr	r2, [r3, #8]
 800b5ae:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b5b2:	69a0      	ldr	r0, [r4, #24]
 800b5b4:	4302      	orrs	r2, r0
 800b5b6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b5b8:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b5ba:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b5bc:	400a      	ands	r2, r1
 800b5be:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b5c0:	68da      	ldr	r2, [r3, #12]
 800b5c2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b5c6:	6a20      	ldr	r0, [r4, #32]
 800b5c8:	4302      	orrs	r2, r0
 800b5ca:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b5cc:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b5ce:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b5d0:	400a      	ands	r2, r1
 800b5d2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b5d4:	691a      	ldr	r2, [r3, #16]
 800b5d6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b5da:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800b5dc:	4302      	orrs	r2, r0
 800b5de:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b5e0:	695a      	ldr	r2, [r3, #20]
 800b5e2:	400a      	ands	r2, r1
 800b5e4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b5e6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b5e8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b5ea:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b5ee:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800b5f0:	430a      	orrs	r2, r1
 800b5f2:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b5f4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b5f6:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b5fa:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b5fe:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 800b602:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b604:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800b606:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 800b60a:	432a      	orrs	r2, r5
 800b60c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800b610:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b614:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b616:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b618:	f042 0206 	orr.w	r2, r2, #6
 800b61c:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800b61e:	699a      	ldr	r2, [r3, #24]
 800b620:	f042 0201 	orr.w	r2, r2, #1
 800b624:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b626:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800b628:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b62a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b62e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 800b632:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800b634:	2001      	movs	r0, #1
 800b636:	e7fc      	b.n	800b632 <HAL_LTDC_Init+0xce>
 800b638:	f000f800 	.word	0xf000f800

0800b63c <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 800b63c:	4770      	bx	lr

0800b63e <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 800b63e:	4770      	bx	lr

0800b640 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b640:	6803      	ldr	r3, [r0, #0]
{
 800b642:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b644:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b646:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b648:	0772      	lsls	r2, r6, #29
{
 800b64a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b64c:	d514      	bpl.n	800b678 <HAL_LTDC_IRQHandler+0x38>
 800b64e:	0769      	lsls	r1, r5, #29
 800b650:	d512      	bpl.n	800b678 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b652:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b654:	f022 0204 	bic.w	r2, r2, #4
 800b658:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b65a:	2204      	movs	r2, #4
 800b65c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b65e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800b662:	f043 0301 	orr.w	r3, r3, #1
 800b666:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 800b66a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b66c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800b670:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b674:	f7ff ffe2 	bl	800b63c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b678:	07b2      	lsls	r2, r6, #30
 800b67a:	d516      	bpl.n	800b6aa <HAL_LTDC_IRQHandler+0x6a>
 800b67c:	07ab      	lsls	r3, r5, #30
 800b67e:	d514      	bpl.n	800b6aa <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b680:	6823      	ldr	r3, [r4, #0]
 800b682:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b684:	f022 0202 	bic.w	r2, r2, #2
 800b688:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b68a:	2202      	movs	r2, #2
 800b68c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b68e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800b692:	4313      	orrs	r3, r2
 800b694:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b698:	2304      	movs	r3, #4
 800b69a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800b69e:	2300      	movs	r3, #0
 800b6a0:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b6a4:	4620      	mov	r0, r4
 800b6a6:	f7ff ffc9 	bl	800b63c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b6aa:	07f0      	lsls	r0, r6, #31
 800b6ac:	d510      	bpl.n	800b6d0 <HAL_LTDC_IRQHandler+0x90>
 800b6ae:	07e9      	lsls	r1, r5, #31
 800b6b0:	d50e      	bpl.n	800b6d0 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b6b2:	6823      	ldr	r3, [r4, #0]
 800b6b4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b6b6:	f022 0201 	bic.w	r2, r2, #1
 800b6ba:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b6bc:	2201      	movs	r2, #1
 800b6be:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800b6c0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b6c2:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800b6c6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b6ca:	4620      	mov	r0, r4
 800b6cc:	f7f6 fc4a 	bl	8001f64 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b6d0:	0732      	lsls	r2, r6, #28
 800b6d2:	d511      	bpl.n	800b6f8 <HAL_LTDC_IRQHandler+0xb8>
 800b6d4:	072b      	lsls	r3, r5, #28
 800b6d6:	d50f      	bpl.n	800b6f8 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b6d8:	6823      	ldr	r3, [r4, #0]
 800b6da:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b6dc:	f022 0208 	bic.w	r2, r2, #8
 800b6e0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b6e2:	2208      	movs	r2, #8
 800b6e4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800b6e6:	2301      	movs	r3, #1
 800b6e8:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800b6ec:	2300      	movs	r3, #0
 800b6ee:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b6f2:	4620      	mov	r0, r4
 800b6f4:	f7ff ffa3 	bl	800b63e <HAL_LTDC_ReloadEventCallback>
}
 800b6f8:	bd70      	pop	{r4, r5, r6, pc}

0800b6fa <HAL_LTDC_ConfigLayer>:
{
 800b6fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800b6fe:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 800b702:	2b01      	cmp	r3, #1
{
 800b704:	4606      	mov	r6, r0
 800b706:	460f      	mov	r7, r1
 800b708:	4694      	mov	ip, r2
 800b70a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800b70e:	d01f      	beq.n	800b750 <HAL_LTDC_ConfigLayer+0x56>
 800b710:	f04f 0801 	mov.w	r8, #1
 800b714:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b718:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b71c:	2434      	movs	r4, #52	@ 0x34
 800b71e:	460d      	mov	r5, r1
 800b720:	fb04 6402 	mla	r4, r4, r2, r6
 800b724:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b726:	3438      	adds	r4, #56	@ 0x38
 800b728:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b72a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b72c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b72e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b730:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b732:	682b      	ldr	r3, [r5, #0]
 800b734:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800b736:	4630      	mov	r0, r6
 800b738:	4662      	mov	r2, ip
 800b73a:	4639      	mov	r1, r7
 800b73c:	f7ff fe96 	bl	800b46c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b740:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800b742:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b744:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b748:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800b74c:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 800b750:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b754 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b754:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 800b758:	2a01      	cmp	r2, #1
{
 800b75a:	4603      	mov	r3, r0
 800b75c:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800b760:	d012      	beq.n	800b788 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b762:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b764:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b768:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 800b76a:	f020 0001 	bic.w	r0, r0, #1
 800b76e:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b770:	4806      	ldr	r0, [pc, #24]	@ (800b78c <HAL_LTDC_ProgramLineEvent+0x38>)
 800b772:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b774:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800b776:	f041 0101 	orr.w	r1, r1, #1
 800b77a:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 800b77c:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800b77e:	2201      	movs	r2, #1
 800b780:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800b784:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 800b788:	4770      	bx	lr
 800b78a:	bf00      	nop
 800b78c:	40016800 	.word	0x40016800

0800b790 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800b790:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800b792:	2300      	movs	r3, #0
 800b794:	9301      	str	r3, [sp, #4]
 800b796:	4b18      	ldr	r3, [pc, #96]	@ (800b7f8 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800b798:	4d18      	ldr	r5, [pc, #96]	@ (800b7fc <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800b79a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800b79c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800b7a0:	641a      	str	r2, [r3, #64]	@ 0x40
 800b7a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b7a4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800b7a8:	9301      	str	r3, [sp, #4]
 800b7aa:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800b7ac:	4b14      	ldr	r3, [pc, #80]	@ (800b800 <HAL_PWREx_EnableOverDrive+0x70>)
 800b7ae:	2201      	movs	r2, #1
 800b7b0:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 800b7b2:	f7fe fd33 	bl	800a21c <HAL_GetTick>
 800b7b6:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800b7b8:	686b      	ldr	r3, [r5, #4]
 800b7ba:	03da      	lsls	r2, r3, #15
 800b7bc:	d50b      	bpl.n	800b7d6 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800b7be:	4b10      	ldr	r3, [pc, #64]	@ (800b800 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800b7c0:	4d0e      	ldr	r5, [pc, #56]	@ (800b7fc <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800b7c2:	2201      	movs	r2, #1
 800b7c4:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 800b7c6:	f7fe fd29 	bl	800a21c <HAL_GetTick>
 800b7ca:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800b7cc:	686b      	ldr	r3, [r5, #4]
 800b7ce:	039b      	lsls	r3, r3, #14
 800b7d0:	d50a      	bpl.n	800b7e8 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800b7d2:	2000      	movs	r0, #0
 800b7d4:	e006      	b.n	800b7e4 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800b7d6:	f7fe fd21 	bl	800a21c <HAL_GetTick>
 800b7da:	1b00      	subs	r0, r0, r4
 800b7dc:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800b7e0:	d9ea      	bls.n	800b7b8 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800b7e2:	2003      	movs	r0, #3
}
 800b7e4:	b003      	add	sp, #12
 800b7e6:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800b7e8:	f7fe fd18 	bl	800a21c <HAL_GetTick>
 800b7ec:	1b00      	subs	r0, r0, r4
 800b7ee:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800b7f2:	d9eb      	bls.n	800b7cc <HAL_PWREx_EnableOverDrive+0x3c>
 800b7f4:	e7f5      	b.n	800b7e2 <HAL_PWREx_EnableOverDrive+0x52>
 800b7f6:	bf00      	nop
 800b7f8:	40023800 	.word	0x40023800
 800b7fc:	40007000 	.word	0x40007000
 800b800:	420e0000 	.word	0x420e0000

0800b804 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800b804:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800b808:	4604      	mov	r4, r0
 800b80a:	b340      	cbz	r0, 800b85e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b80c:	6803      	ldr	r3, [r0, #0]
 800b80e:	07de      	lsls	r6, r3, #31
 800b810:	d410      	bmi.n	800b834 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b812:	6823      	ldr	r3, [r4, #0]
 800b814:	079d      	lsls	r5, r3, #30
 800b816:	d45b      	bmi.n	800b8d0 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b818:	6823      	ldr	r3, [r4, #0]
 800b81a:	0719      	lsls	r1, r3, #28
 800b81c:	f100 809d 	bmi.w	800b95a <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b820:	6823      	ldr	r3, [r4, #0]
 800b822:	075a      	lsls	r2, r3, #29
 800b824:	f100 80bd 	bmi.w	800b9a2 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b828:	69a3      	ldr	r3, [r4, #24]
 800b82a:	2b00      	cmp	r3, #0
 800b82c:	f040 8124 	bne.w	800ba78 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b830:	2000      	movs	r0, #0
 800b832:	e02c      	b.n	800b88e <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800b834:	4b8d      	ldr	r3, [pc, #564]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
 800b836:	689a      	ldr	r2, [r3, #8]
 800b838:	f002 020c 	and.w	r2, r2, #12
 800b83c:	2a04      	cmp	r2, #4
 800b83e:	d007      	beq.n	800b850 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b840:	689a      	ldr	r2, [r3, #8]
 800b842:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800b846:	2a08      	cmp	r2, #8
 800b848:	d10b      	bne.n	800b862 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b84a:	685b      	ldr	r3, [r3, #4]
 800b84c:	0259      	lsls	r1, r3, #9
 800b84e:	d508      	bpl.n	800b862 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b850:	4b86      	ldr	r3, [pc, #536]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
 800b852:	681b      	ldr	r3, [r3, #0]
 800b854:	039a      	lsls	r2, r3, #14
 800b856:	d5dc      	bpl.n	800b812 <HAL_RCC_OscConfig+0xe>
 800b858:	6863      	ldr	r3, [r4, #4]
 800b85a:	2b00      	cmp	r3, #0
 800b85c:	d1d9      	bne.n	800b812 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 800b85e:	2001      	movs	r0, #1
 800b860:	e015      	b.n	800b88e <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b862:	6863      	ldr	r3, [r4, #4]
 800b864:	4d81      	ldr	r5, [pc, #516]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
 800b866:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800b86a:	d113      	bne.n	800b894 <HAL_RCC_OscConfig+0x90>
 800b86c:	682b      	ldr	r3, [r5, #0]
 800b86e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800b872:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800b874:	f7fe fcd2 	bl	800a21c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b878:	4e7c      	ldr	r6, [pc, #496]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800b87a:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b87c:	6833      	ldr	r3, [r6, #0]
 800b87e:	039b      	lsls	r3, r3, #14
 800b880:	d4c7      	bmi.n	800b812 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800b882:	f7fe fccb 	bl	800a21c <HAL_GetTick>
 800b886:	1b40      	subs	r0, r0, r5
 800b888:	2864      	cmp	r0, #100	@ 0x64
 800b88a:	d9f7      	bls.n	800b87c <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 800b88c:	2003      	movs	r0, #3
}
 800b88e:	b002      	add	sp, #8
 800b890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b894:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800b898:	d104      	bne.n	800b8a4 <HAL_RCC_OscConfig+0xa0>
 800b89a:	682b      	ldr	r3, [r5, #0]
 800b89c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800b8a0:	602b      	str	r3, [r5, #0]
 800b8a2:	e7e3      	b.n	800b86c <HAL_RCC_OscConfig+0x68>
 800b8a4:	682a      	ldr	r2, [r5, #0]
 800b8a6:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800b8aa:	602a      	str	r2, [r5, #0]
 800b8ac:	682a      	ldr	r2, [r5, #0]
 800b8ae:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800b8b2:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b8b4:	2b00      	cmp	r3, #0
 800b8b6:	d1dd      	bne.n	800b874 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 800b8b8:	f7fe fcb0 	bl	800a21c <HAL_GetTick>
 800b8bc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b8be:	682b      	ldr	r3, [r5, #0]
 800b8c0:	039f      	lsls	r7, r3, #14
 800b8c2:	d5a6      	bpl.n	800b812 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800b8c4:	f7fe fcaa 	bl	800a21c <HAL_GetTick>
 800b8c8:	1b80      	subs	r0, r0, r6
 800b8ca:	2864      	cmp	r0, #100	@ 0x64
 800b8cc:	d9f7      	bls.n	800b8be <HAL_RCC_OscConfig+0xba>
 800b8ce:	e7dd      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800b8d0:	4b66      	ldr	r3, [pc, #408]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
 800b8d2:	689a      	ldr	r2, [r3, #8]
 800b8d4:	f012 0f0c 	tst.w	r2, #12
 800b8d8:	d007      	beq.n	800b8ea <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b8da:	689a      	ldr	r2, [r3, #8]
 800b8dc:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800b8e0:	2a08      	cmp	r2, #8
 800b8e2:	d111      	bne.n	800b908 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b8e4:	685b      	ldr	r3, [r3, #4]
 800b8e6:	025d      	lsls	r5, r3, #9
 800b8e8:	d40e      	bmi.n	800b908 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b8ea:	4a60      	ldr	r2, [pc, #384]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
 800b8ec:	6813      	ldr	r3, [r2, #0]
 800b8ee:	0799      	lsls	r1, r3, #30
 800b8f0:	d502      	bpl.n	800b8f8 <HAL_RCC_OscConfig+0xf4>
 800b8f2:	68e3      	ldr	r3, [r4, #12]
 800b8f4:	2b01      	cmp	r3, #1
 800b8f6:	d1b2      	bne.n	800b85e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b8f8:	6813      	ldr	r3, [r2, #0]
 800b8fa:	6921      	ldr	r1, [r4, #16]
 800b8fc:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800b900:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b904:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b906:	e787      	b.n	800b818 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800b908:	68e2      	ldr	r2, [r4, #12]
 800b90a:	4b59      	ldr	r3, [pc, #356]	@ (800ba70 <HAL_RCC_OscConfig+0x26c>)
 800b90c:	b1b2      	cbz	r2, 800b93c <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 800b90e:	2201      	movs	r2, #1
 800b910:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b912:	f7fe fc83 	bl	800a21c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b916:	4d55      	ldr	r5, [pc, #340]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800b918:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b91a:	682b      	ldr	r3, [r5, #0]
 800b91c:	079b      	lsls	r3, r3, #30
 800b91e:	d507      	bpl.n	800b930 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b920:	682b      	ldr	r3, [r5, #0]
 800b922:	6922      	ldr	r2, [r4, #16]
 800b924:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800b928:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b92c:	602b      	str	r3, [r5, #0]
 800b92e:	e773      	b.n	800b818 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800b930:	f7fe fc74 	bl	800a21c <HAL_GetTick>
 800b934:	1b80      	subs	r0, r0, r6
 800b936:	2802      	cmp	r0, #2
 800b938:	d9ef      	bls.n	800b91a <HAL_RCC_OscConfig+0x116>
 800b93a:	e7a7      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800b93c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b93e:	f7fe fc6d 	bl	800a21c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b942:	4e4a      	ldr	r6, [pc, #296]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800b944:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b946:	6833      	ldr	r3, [r6, #0]
 800b948:	079f      	lsls	r7, r3, #30
 800b94a:	f57f af65 	bpl.w	800b818 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800b94e:	f7fe fc65 	bl	800a21c <HAL_GetTick>
 800b952:	1b40      	subs	r0, r0, r5
 800b954:	2802      	cmp	r0, #2
 800b956:	d9f6      	bls.n	800b946 <HAL_RCC_OscConfig+0x142>
 800b958:	e798      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800b95a:	6962      	ldr	r2, [r4, #20]
 800b95c:	4b44      	ldr	r3, [pc, #272]	@ (800ba70 <HAL_RCC_OscConfig+0x26c>)
 800b95e:	b182      	cbz	r2, 800b982 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 800b960:	2201      	movs	r2, #1
 800b962:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800b966:	f7fe fc59 	bl	800a21c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b96a:	4e40      	ldr	r6, [pc, #256]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800b96c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b96e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800b970:	079b      	lsls	r3, r3, #30
 800b972:	f53f af55 	bmi.w	800b820 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800b976:	f7fe fc51 	bl	800a21c <HAL_GetTick>
 800b97a:	1b40      	subs	r0, r0, r5
 800b97c:	2802      	cmp	r0, #2
 800b97e:	d9f6      	bls.n	800b96e <HAL_RCC_OscConfig+0x16a>
 800b980:	e784      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 800b982:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800b986:	f7fe fc49 	bl	800a21c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b98a:	4e38      	ldr	r6, [pc, #224]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800b98c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b98e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800b990:	079f      	lsls	r7, r3, #30
 800b992:	f57f af45 	bpl.w	800b820 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800b996:	f7fe fc41 	bl	800a21c <HAL_GetTick>
 800b99a:	1b40      	subs	r0, r0, r5
 800b99c:	2802      	cmp	r0, #2
 800b99e:	d9f6      	bls.n	800b98e <HAL_RCC_OscConfig+0x18a>
 800b9a0:	e774      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b9a2:	4b32      	ldr	r3, [pc, #200]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
 800b9a4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800b9a6:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 800b9aa:	d128      	bne.n	800b9fe <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b9ac:	9201      	str	r2, [sp, #4]
 800b9ae:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800b9b0:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800b9b4:	641a      	str	r2, [r3, #64]	@ 0x40
 800b9b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b9b8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800b9bc:	9301      	str	r3, [sp, #4]
 800b9be:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b9c0:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b9c2:	4d2c      	ldr	r5, [pc, #176]	@ (800ba74 <HAL_RCC_OscConfig+0x270>)
 800b9c4:	682b      	ldr	r3, [r5, #0]
 800b9c6:	05d8      	lsls	r0, r3, #23
 800b9c8:	d51b      	bpl.n	800ba02 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b9ca:	68a3      	ldr	r3, [r4, #8]
 800b9cc:	4d27      	ldr	r5, [pc, #156]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
 800b9ce:	2b01      	cmp	r3, #1
 800b9d0:	d127      	bne.n	800ba22 <HAL_RCC_OscConfig+0x21e>
 800b9d2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800b9d4:	f043 0301 	orr.w	r3, r3, #1
 800b9d8:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 800b9da:	f7fe fc1f 	bl	800a21c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b9de:	4e23      	ldr	r6, [pc, #140]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800b9e0:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800b9e2:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b9e6:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 800b9e8:	079a      	lsls	r2, r3, #30
 800b9ea:	d539      	bpl.n	800ba60 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 800b9ec:	2f00      	cmp	r7, #0
 800b9ee:	f43f af1b 	beq.w	800b828 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b9f2:	4a1e      	ldr	r2, [pc, #120]	@ (800ba6c <HAL_RCC_OscConfig+0x268>)
 800b9f4:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800b9f6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800b9fa:	6413      	str	r3, [r2, #64]	@ 0x40
 800b9fc:	e714      	b.n	800b828 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800b9fe:	2700      	movs	r7, #0
 800ba00:	e7df      	b.n	800b9c2 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800ba02:	682b      	ldr	r3, [r5, #0]
 800ba04:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800ba08:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800ba0a:	f7fe fc07 	bl	800a21c <HAL_GetTick>
 800ba0e:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800ba10:	682b      	ldr	r3, [r5, #0]
 800ba12:	05d9      	lsls	r1, r3, #23
 800ba14:	d4d9      	bmi.n	800b9ca <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800ba16:	f7fe fc01 	bl	800a21c <HAL_GetTick>
 800ba1a:	1b80      	subs	r0, r0, r6
 800ba1c:	2802      	cmp	r0, #2
 800ba1e:	d9f7      	bls.n	800ba10 <HAL_RCC_OscConfig+0x20c>
 800ba20:	e734      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800ba22:	2b05      	cmp	r3, #5
 800ba24:	d104      	bne.n	800ba30 <HAL_RCC_OscConfig+0x22c>
 800ba26:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800ba28:	f043 0304 	orr.w	r3, r3, #4
 800ba2c:	672b      	str	r3, [r5, #112]	@ 0x70
 800ba2e:	e7d0      	b.n	800b9d2 <HAL_RCC_OscConfig+0x1ce>
 800ba30:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800ba32:	f022 0201 	bic.w	r2, r2, #1
 800ba36:	672a      	str	r2, [r5, #112]	@ 0x70
 800ba38:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800ba3a:	f022 0204 	bic.w	r2, r2, #4
 800ba3e:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800ba40:	2b00      	cmp	r3, #0
 800ba42:	d1ca      	bne.n	800b9da <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 800ba44:	f7fe fbea 	bl	800a21c <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800ba48:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 800ba4c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800ba4e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800ba50:	079b      	lsls	r3, r3, #30
 800ba52:	d5cb      	bpl.n	800b9ec <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800ba54:	f7fe fbe2 	bl	800a21c <HAL_GetTick>
 800ba58:	1b80      	subs	r0, r0, r6
 800ba5a:	4540      	cmp	r0, r8
 800ba5c:	d9f7      	bls.n	800ba4e <HAL_RCC_OscConfig+0x24a>
 800ba5e:	e715      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800ba60:	f7fe fbdc 	bl	800a21c <HAL_GetTick>
 800ba64:	1b40      	subs	r0, r0, r5
 800ba66:	4540      	cmp	r0, r8
 800ba68:	d9bd      	bls.n	800b9e6 <HAL_RCC_OscConfig+0x1e2>
 800ba6a:	e70f      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
 800ba6c:	40023800 	.word	0x40023800
 800ba70:	42470000 	.word	0x42470000
 800ba74:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800ba78:	4d37      	ldr	r5, [pc, #220]	@ (800bb58 <HAL_RCC_OscConfig+0x354>)
 800ba7a:	68aa      	ldr	r2, [r5, #8]
 800ba7c:	f002 020c 	and.w	r2, r2, #12
 800ba80:	2a08      	cmp	r2, #8
 800ba82:	d03e      	beq.n	800bb02 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800ba84:	2b02      	cmp	r3, #2
 800ba86:	4b35      	ldr	r3, [pc, #212]	@ (800bb5c <HAL_RCC_OscConfig+0x358>)
 800ba88:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 800ba8c:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800ba8e:	d12b      	bne.n	800bae8 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 800ba90:	f7fe fbc4 	bl	800a21c <HAL_GetTick>
 800ba94:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800ba96:	682b      	ldr	r3, [r5, #0]
 800ba98:	0199      	lsls	r1, r3, #6
 800ba9a:	d41f      	bmi.n	800badc <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800ba9c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800baa0:	4313      	orrs	r3, r2
 800baa2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800baa4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800baa8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800baaa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800baae:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800bab0:	0852      	lsrs	r2, r2, #1
 800bab2:	3a01      	subs	r2, #1
 800bab4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800bab8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800baba:	4b28      	ldr	r3, [pc, #160]	@ (800bb5c <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800babc:	4d26      	ldr	r5, [pc, #152]	@ (800bb58 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 800babe:	2201      	movs	r2, #1
 800bac0:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800bac2:	f7fe fbab 	bl	800a21c <HAL_GetTick>
 800bac6:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bac8:	682b      	ldr	r3, [r5, #0]
 800baca:	019a      	lsls	r2, r3, #6
 800bacc:	f53f aeb0 	bmi.w	800b830 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800bad0:	f7fe fba4 	bl	800a21c <HAL_GetTick>
 800bad4:	1b00      	subs	r0, r0, r4
 800bad6:	2802      	cmp	r0, #2
 800bad8:	d9f6      	bls.n	800bac8 <HAL_RCC_OscConfig+0x2c4>
 800bada:	e6d7      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800badc:	f7fe fb9e 	bl	800a21c <HAL_GetTick>
 800bae0:	1b80      	subs	r0, r0, r6
 800bae2:	2802      	cmp	r0, #2
 800bae4:	d9d7      	bls.n	800ba96 <HAL_RCC_OscConfig+0x292>
 800bae6:	e6d1      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 800bae8:	f7fe fb98 	bl	800a21c <HAL_GetTick>
 800baec:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800baee:	682b      	ldr	r3, [r5, #0]
 800baf0:	019b      	lsls	r3, r3, #6
 800baf2:	f57f ae9d 	bpl.w	800b830 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800baf6:	f7fe fb91 	bl	800a21c <HAL_GetTick>
 800bafa:	1b00      	subs	r0, r0, r4
 800bafc:	2802      	cmp	r0, #2
 800bafe:	d9f6      	bls.n	800baee <HAL_RCC_OscConfig+0x2ea>
 800bb00:	e6c4      	b.n	800b88c <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800bb02:	2b01      	cmp	r3, #1
 800bb04:	f43f aeab 	beq.w	800b85e <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 800bb08:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800bb0a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bb0c:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800bb10:	4291      	cmp	r1, r2
 800bb12:	f47f aea4 	bne.w	800b85e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bb16:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800bb18:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bb1c:	428a      	cmp	r2, r1
 800bb1e:	f47f ae9e 	bne.w	800b85e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800bb22:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800bb24:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 800bb28:	401a      	ands	r2, r3
 800bb2a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800bb2e:	f47f ae96 	bne.w	800b85e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800bb32:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800bb34:	0852      	lsrs	r2, r2, #1
 800bb36:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 800bb3a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800bb3c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800bb40:	f47f ae8d 	bne.w	800b85e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800bb44:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800bb46:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800bb4a:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 800bb4e:	bf14      	ite	ne
 800bb50:	2001      	movne	r0, #1
 800bb52:	2000      	moveq	r0, #0
 800bb54:	e69b      	b.n	800b88e <HAL_RCC_OscConfig+0x8a>
 800bb56:	bf00      	nop
 800bb58:	40023800 	.word	0x40023800
 800bb5c:	42470000 	.word	0x42470000

0800bb60 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800bb60:	4913      	ldr	r1, [pc, #76]	@ (800bbb0 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800bb62:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800bb64:	688b      	ldr	r3, [r1, #8]
 800bb66:	f003 030c 	and.w	r3, r3, #12
 800bb6a:	2b04      	cmp	r3, #4
 800bb6c:	d01c      	beq.n	800bba8 <HAL_RCC_GetSysClockFreq+0x48>
 800bb6e:	2b08      	cmp	r3, #8
 800bb70:	d11c      	bne.n	800bbac <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800bb72:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800bb74:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800bb76:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800bb78:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800bb7c:	bf14      	ite	ne
 800bb7e:	480d      	ldrne	r0, [pc, #52]	@ (800bbb4 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800bb80:	480d      	ldreq	r0, [pc, #52]	@ (800bbb8 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800bb82:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800bb86:	bf18      	it	ne
 800bb88:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800bb8a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800bb8e:	fba1 0100 	umull	r0, r1, r1, r0
 800bb92:	f7f5 f891 	bl	8000cb8 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 800bb96:	4b06      	ldr	r3, [pc, #24]	@ (800bbb0 <HAL_RCC_GetSysClockFreq+0x50>)
 800bb98:	685b      	ldr	r3, [r3, #4]
 800bb9a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800bb9e:	3301      	adds	r3, #1
 800bba0:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800bba2:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800bba6:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800bba8:	4802      	ldr	r0, [pc, #8]	@ (800bbb4 <HAL_RCC_GetSysClockFreq+0x54>)
 800bbaa:	e7fc      	b.n	800bba6 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800bbac:	4802      	ldr	r0, [pc, #8]	@ (800bbb8 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800bbae:	e7fa      	b.n	800bba6 <HAL_RCC_GetSysClockFreq+0x46>
 800bbb0:	40023800 	.word	0x40023800
 800bbb4:	007a1200 	.word	0x007a1200
 800bbb8:	00f42400 	.word	0x00f42400

0800bbbc <HAL_RCC_ClockConfig>:
{
 800bbbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbc0:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800bbc2:	4604      	mov	r4, r0
 800bbc4:	b910      	cbnz	r0, 800bbcc <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800bbc6:	2001      	movs	r0, #1
}
 800bbc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800bbcc:	4b43      	ldr	r3, [pc, #268]	@ (800bcdc <HAL_RCC_ClockConfig+0x120>)
 800bbce:	681a      	ldr	r2, [r3, #0]
 800bbd0:	f002 020f 	and.w	r2, r2, #15
 800bbd4:	428a      	cmp	r2, r1
 800bbd6:	d328      	bcc.n	800bc2a <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800bbd8:	6821      	ldr	r1, [r4, #0]
 800bbda:	078f      	lsls	r7, r1, #30
 800bbdc:	d42d      	bmi.n	800bc3a <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800bbde:	07c8      	lsls	r0, r1, #31
 800bbe0:	d440      	bmi.n	800bc64 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800bbe2:	4b3e      	ldr	r3, [pc, #248]	@ (800bcdc <HAL_RCC_ClockConfig+0x120>)
 800bbe4:	681a      	ldr	r2, [r3, #0]
 800bbe6:	f002 020f 	and.w	r2, r2, #15
 800bbea:	42aa      	cmp	r2, r5
 800bbec:	d865      	bhi.n	800bcba <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800bbee:	6822      	ldr	r2, [r4, #0]
 800bbf0:	0751      	lsls	r1, r2, #29
 800bbf2:	d46b      	bmi.n	800bccc <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800bbf4:	0713      	lsls	r3, r2, #28
 800bbf6:	d507      	bpl.n	800bc08 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800bbf8:	4a39      	ldr	r2, [pc, #228]	@ (800bce0 <HAL_RCC_ClockConfig+0x124>)
 800bbfa:	6921      	ldr	r1, [r4, #16]
 800bbfc:	6893      	ldr	r3, [r2, #8]
 800bbfe:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800bc02:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800bc06:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800bc08:	f7ff ffaa 	bl	800bb60 <HAL_RCC_GetSysClockFreq>
 800bc0c:	4b34      	ldr	r3, [pc, #208]	@ (800bce0 <HAL_RCC_ClockConfig+0x124>)
 800bc0e:	4a35      	ldr	r2, [pc, #212]	@ (800bce4 <HAL_RCC_ClockConfig+0x128>)
 800bc10:	689b      	ldr	r3, [r3, #8]
 800bc12:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800bc16:	5cd3      	ldrb	r3, [r2, r3]
 800bc18:	40d8      	lsrs	r0, r3
 800bc1a:	4b33      	ldr	r3, [pc, #204]	@ (800bce8 <HAL_RCC_ClockConfig+0x12c>)
 800bc1c:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 800bc1e:	4b33      	ldr	r3, [pc, #204]	@ (800bcec <HAL_RCC_ClockConfig+0x130>)
 800bc20:	6818      	ldr	r0, [r3, #0]
 800bc22:	f7f7 f891 	bl	8002d48 <HAL_InitTick>
  return HAL_OK;
 800bc26:	2000      	movs	r0, #0
 800bc28:	e7ce      	b.n	800bbc8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800bc2a:	b2ca      	uxtb	r2, r1
 800bc2c:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800bc2e:	681b      	ldr	r3, [r3, #0]
 800bc30:	f003 030f 	and.w	r3, r3, #15
 800bc34:	428b      	cmp	r3, r1
 800bc36:	d1c6      	bne.n	800bbc6 <HAL_RCC_ClockConfig+0xa>
 800bc38:	e7ce      	b.n	800bbd8 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800bc3a:	4b29      	ldr	r3, [pc, #164]	@ (800bce0 <HAL_RCC_ClockConfig+0x124>)
 800bc3c:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800bc40:	bf1e      	ittt	ne
 800bc42:	689a      	ldrne	r2, [r3, #8]
 800bc44:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 800bc48:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800bc4a:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800bc4c:	bf42      	ittt	mi
 800bc4e:	689a      	ldrmi	r2, [r3, #8]
 800bc50:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 800bc54:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800bc56:	689a      	ldr	r2, [r3, #8]
 800bc58:	68a0      	ldr	r0, [r4, #8]
 800bc5a:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 800bc5e:	4302      	orrs	r2, r0
 800bc60:	609a      	str	r2, [r3, #8]
 800bc62:	e7bc      	b.n	800bbde <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800bc64:	6862      	ldr	r2, [r4, #4]
 800bc66:	4b1e      	ldr	r3, [pc, #120]	@ (800bce0 <HAL_RCC_ClockConfig+0x124>)
 800bc68:	2a01      	cmp	r2, #1
 800bc6a:	d11c      	bne.n	800bca6 <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bc6c:	681b      	ldr	r3, [r3, #0]
 800bc6e:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bc72:	d0a8      	beq.n	800bbc6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800bc74:	4e1a      	ldr	r6, [pc, #104]	@ (800bce0 <HAL_RCC_ClockConfig+0x124>)
 800bc76:	68b3      	ldr	r3, [r6, #8]
 800bc78:	f023 0303 	bic.w	r3, r3, #3
 800bc7c:	4313      	orrs	r3, r2
 800bc7e:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800bc80:	f7fe facc 	bl	800a21c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bc84:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 800bc88:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800bc8a:	68b3      	ldr	r3, [r6, #8]
 800bc8c:	6862      	ldr	r2, [r4, #4]
 800bc8e:	f003 030c 	and.w	r3, r3, #12
 800bc92:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800bc96:	d0a4      	beq.n	800bbe2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bc98:	f7fe fac0 	bl	800a21c <HAL_GetTick>
 800bc9c:	1bc0      	subs	r0, r0, r7
 800bc9e:	4540      	cmp	r0, r8
 800bca0:	d9f3      	bls.n	800bc8a <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800bca2:	2003      	movs	r0, #3
 800bca4:	e790      	b.n	800bbc8 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800bca6:	1e91      	subs	r1, r2, #2
 800bca8:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bcaa:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800bcac:	d802      	bhi.n	800bcb4 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bcae:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 800bcb2:	e7de      	b.n	800bc72 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bcb4:	f013 0f02 	tst.w	r3, #2
 800bcb8:	e7db      	b.n	800bc72 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800bcba:	b2ea      	uxtb	r2, r5
 800bcbc:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800bcbe:	681b      	ldr	r3, [r3, #0]
 800bcc0:	f003 030f 	and.w	r3, r3, #15
 800bcc4:	42ab      	cmp	r3, r5
 800bcc6:	f47f af7e 	bne.w	800bbc6 <HAL_RCC_ClockConfig+0xa>
 800bcca:	e790      	b.n	800bbee <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800bccc:	4904      	ldr	r1, [pc, #16]	@ (800bce0 <HAL_RCC_ClockConfig+0x124>)
 800bcce:	68e0      	ldr	r0, [r4, #12]
 800bcd0:	688b      	ldr	r3, [r1, #8]
 800bcd2:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 800bcd6:	4303      	orrs	r3, r0
 800bcd8:	608b      	str	r3, [r1, #8]
 800bcda:	e78b      	b.n	800bbf4 <HAL_RCC_ClockConfig+0x38>
 800bcdc:	40023c00 	.word	0x40023c00
 800bce0:	40023800 	.word	0x40023800
 800bce4:	0802d0e0 	.word	0x0802d0e0
 800bce8:	20000074 	.word	0x20000074
 800bcec:	2000007c 	.word	0x2000007c

0800bcf0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 800bcf0:	4b04      	ldr	r3, [pc, #16]	@ (800bd04 <HAL_RCC_GetPCLK1Freq+0x14>)
 800bcf2:	4a05      	ldr	r2, [pc, #20]	@ (800bd08 <HAL_RCC_GetPCLK1Freq+0x18>)
 800bcf4:	689b      	ldr	r3, [r3, #8]
 800bcf6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800bcfa:	5cd3      	ldrb	r3, [r2, r3]
 800bcfc:	4a03      	ldr	r2, [pc, #12]	@ (800bd0c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800bcfe:	6810      	ldr	r0, [r2, #0]
}
 800bd00:	40d8      	lsrs	r0, r3
 800bd02:	4770      	bx	lr
 800bd04:	40023800 	.word	0x40023800
 800bd08:	0802d0d8 	.word	0x0802d0d8
 800bd0c:	20000074 	.word	0x20000074

0800bd10 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 800bd10:	4b04      	ldr	r3, [pc, #16]	@ (800bd24 <HAL_RCC_GetPCLK2Freq+0x14>)
 800bd12:	4a05      	ldr	r2, [pc, #20]	@ (800bd28 <HAL_RCC_GetPCLK2Freq+0x18>)
 800bd14:	689b      	ldr	r3, [r3, #8]
 800bd16:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800bd1a:	5cd3      	ldrb	r3, [r2, r3]
 800bd1c:	4a03      	ldr	r2, [pc, #12]	@ (800bd2c <HAL_RCC_GetPCLK2Freq+0x1c>)
 800bd1e:	6810      	ldr	r0, [r2, #0]
}
 800bd20:	40d8      	lsrs	r0, r3
 800bd22:	4770      	bx	lr
 800bd24:	40023800 	.word	0x40023800
 800bd28:	0802d0d8 	.word	0x0802d0d8
 800bd2c:	20000074 	.word	0x20000074

0800bd30 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800bd30:	230f      	movs	r3, #15
 800bd32:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800bd34:	4b0b      	ldr	r3, [pc, #44]	@ (800bd64 <HAL_RCC_GetClockConfig+0x34>)
 800bd36:	689a      	ldr	r2, [r3, #8]
 800bd38:	f002 0203 	and.w	r2, r2, #3
 800bd3c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800bd3e:	689a      	ldr	r2, [r3, #8]
 800bd40:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 800bd44:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800bd46:	689a      	ldr	r2, [r3, #8]
 800bd48:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 800bd4c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bd4e:	689b      	ldr	r3, [r3, #8]
 800bd50:	08db      	lsrs	r3, r3, #3
 800bd52:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 800bd56:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bd58:	4b03      	ldr	r3, [pc, #12]	@ (800bd68 <HAL_RCC_GetClockConfig+0x38>)
 800bd5a:	681b      	ldr	r3, [r3, #0]
 800bd5c:	f003 030f 	and.w	r3, r3, #15
 800bd60:	600b      	str	r3, [r1, #0]
}
 800bd62:	4770      	bx	lr
 800bd64:	40023800 	.word	0x40023800
 800bd68:	40023c00 	.word	0x40023c00

0800bd6c <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800bd6c:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800bd6e:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 800bd72:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bd74:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800bd76:	f040 8088 	bne.w	800be8a <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800bd7a:	6823      	ldr	r3, [r4, #0]
 800bd7c:	f013 0f0c 	tst.w	r3, #12
 800bd80:	d045      	beq.n	800be0e <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800bd82:	4b8c      	ldr	r3, [pc, #560]	@ (800bfb4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bd84:	4d8c      	ldr	r5, [pc, #560]	@ (800bfb8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 800bd86:	2200      	movs	r2, #0
 800bd88:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800bd8a:	f7fe fa47 	bl	800a21c <HAL_GetTick>
 800bd8e:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bd90:	682b      	ldr	r3, [r5, #0]
 800bd92:	0099      	lsls	r1, r3, #2
 800bd94:	f100 80cb 	bmi.w	800bf2e <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800bd98:	6821      	ldr	r1, [r4, #0]
 800bd9a:	074a      	lsls	r2, r1, #29
 800bd9c:	d515      	bpl.n	800bdca <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800bd9e:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800bda2:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800bda6:	061b      	lsls	r3, r3, #24
 800bda8:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 800bdac:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bdb0:	4313      	orrs	r3, r2
 800bdb2:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800bdb6:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 800bdba:	6a22      	ldr	r2, [r4, #32]
 800bdbc:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 800bdc0:	3a01      	subs	r2, #1
 800bdc2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800bdc6:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800bdca:	070b      	lsls	r3, r1, #28
 800bdcc:	d514      	bpl.n	800bdf8 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bdce:	4a7a      	ldr	r2, [pc, #488]	@ (800bfb8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bdd0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bdd2:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bdd6:	6920      	ldr	r0, [r4, #16]
 800bdd8:	071b      	lsls	r3, r3, #28
 800bdda:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 800bdde:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bde2:	430b      	orrs	r3, r1
 800bde4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800bde8:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800bdec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800bdee:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800bdf2:	430b      	orrs	r3, r1
 800bdf4:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800bdf8:	4b6e      	ldr	r3, [pc, #440]	@ (800bfb4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bdfa:	4e6f      	ldr	r6, [pc, #444]	@ (800bfb8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 800bdfc:	2201      	movs	r2, #1
 800bdfe:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800be00:	f7fe fa0c 	bl	800a21c <HAL_GetTick>
 800be04:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800be06:	6833      	ldr	r3, [r6, #0]
 800be08:	009f      	lsls	r7, r3, #2
 800be0a:	f140 8097 	bpl.w	800bf3c <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800be0e:	6823      	ldr	r3, [r4, #0]
 800be10:	0698      	lsls	r0, r3, #26
 800be12:	d534      	bpl.n	800be7e <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800be14:	2300      	movs	r3, #0
 800be16:	9301      	str	r3, [sp, #4]
 800be18:	4b67      	ldr	r3, [pc, #412]	@ (800bfb8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800be1a:	4d68      	ldr	r5, [pc, #416]	@ (800bfbc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800be1c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800be1e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800be22:	641a      	str	r2, [r3, #64]	@ 0x40
 800be24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800be26:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800be2a:	9301      	str	r3, [sp, #4]
 800be2c:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800be2e:	682b      	ldr	r3, [r5, #0]
 800be30:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800be34:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800be36:	f7fe f9f1 	bl	800a21c <HAL_GetTick>
 800be3a:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 800be3c:	682b      	ldr	r3, [r5, #0]
 800be3e:	05d8      	lsls	r0, r3, #23
 800be40:	f140 8083 	bpl.w	800bf4a <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800be44:	4d5c      	ldr	r5, [pc, #368]	@ (800bfb8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800be46:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800be48:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800be4a:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 800be4e:	f040 8083 	bne.w	800bf58 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800be52:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800be54:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 800be58:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 800be5c:	4a56      	ldr	r2, [pc, #344]	@ (800bfb8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800be5e:	f040 809e 	bne.w	800bf9e <HAL_RCCEx_PeriphCLKConfig+0x232>
 800be62:	6891      	ldr	r1, [r2, #8]
 800be64:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 800be68:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800be6c:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 800be70:	4301      	orrs	r1, r0
 800be72:	6091      	str	r1, [r2, #8]
 800be74:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 800be76:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800be7a:	430b      	orrs	r3, r1
 800be7c:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800be7e:	6823      	ldr	r3, [r4, #0]
 800be80:	06db      	lsls	r3, r3, #27
 800be82:	f100 8090 	bmi.w	800bfa6 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 800be86:	2000      	movs	r0, #0
 800be88:	e04f      	b.n	800bf2a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800be8a:	4b4a      	ldr	r3, [pc, #296]	@ (800bfb4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800be8c:	4e4a      	ldr	r6, [pc, #296]	@ (800bfb8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 800be8e:	2200      	movs	r2, #0
 800be90:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800be92:	f7fe f9c3 	bl	800a21c <HAL_GetTick>
 800be96:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800be98:	6833      	ldr	r3, [r6, #0]
 800be9a:	011f      	lsls	r7, r3, #4
 800be9c:	d43f      	bmi.n	800bf1e <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800be9e:	6821      	ldr	r1, [r4, #0]
 800bea0:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 800bea2:	bf41      	itttt	mi
 800bea4:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800bea8:	071b      	lslmi	r3, r3, #28
 800beaa:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800beae:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800beb2:	078a      	lsls	r2, r1, #30
 800beb4:	d515      	bpl.n	800bee2 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800beb6:	4a40      	ldr	r2, [pc, #256]	@ (800bfb8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800beb8:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800beba:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800bebe:	6865      	ldr	r5, [r4, #4]
 800bec0:	061b      	lsls	r3, r3, #24
 800bec2:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800bec6:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800beca:	4303      	orrs	r3, r0
 800becc:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800bed0:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 800bed4:	69e3      	ldr	r3, [r4, #28]
 800bed6:	f020 001f 	bic.w	r0, r0, #31
 800beda:	3b01      	subs	r3, #1
 800bedc:	4303      	orrs	r3, r0
 800bede:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800bee2:	064b      	lsls	r3, r1, #25
 800bee4:	d50a      	bpl.n	800befc <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 800bee6:	68e3      	ldr	r3, [r4, #12]
 800bee8:	6862      	ldr	r2, [r4, #4]
 800beea:	061b      	lsls	r3, r3, #24
 800beec:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800bef0:	68a2      	ldr	r2, [r4, #8]
 800bef2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800bef6:	4a30      	ldr	r2, [pc, #192]	@ (800bfb8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800bef8:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800befc:	4b2d      	ldr	r3, [pc, #180]	@ (800bfb4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800befe:	4e2e      	ldr	r6, [pc, #184]	@ (800bfb8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 800bf00:	2201      	movs	r2, #1
 800bf02:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800bf04:	f7fe f98a 	bl	800a21c <HAL_GetTick>
 800bf08:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bf0a:	6833      	ldr	r3, [r6, #0]
 800bf0c:	011f      	lsls	r7, r3, #4
 800bf0e:	f53f af34 	bmi.w	800bd7a <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800bf12:	f7fe f983 	bl	800a21c <HAL_GetTick>
 800bf16:	1b40      	subs	r0, r0, r5
 800bf18:	2802      	cmp	r0, #2
 800bf1a:	d9f6      	bls.n	800bf0a <HAL_RCCEx_PeriphCLKConfig+0x19e>
 800bf1c:	e004      	b.n	800bf28 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800bf1e:	f7fe f97d 	bl	800a21c <HAL_GetTick>
 800bf22:	1b40      	subs	r0, r0, r5
 800bf24:	2802      	cmp	r0, #2
 800bf26:	d9b7      	bls.n	800be98 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800bf28:	2003      	movs	r0, #3
}
 800bf2a:	b003      	add	sp, #12
 800bf2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800bf2e:	f7fe f975 	bl	800a21c <HAL_GetTick>
 800bf32:	1b80      	subs	r0, r0, r6
 800bf34:	2802      	cmp	r0, #2
 800bf36:	f67f af2b 	bls.w	800bd90 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800bf3a:	e7f5      	b.n	800bf28 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800bf3c:	f7fe f96e 	bl	800a21c <HAL_GetTick>
 800bf40:	1b40      	subs	r0, r0, r5
 800bf42:	2802      	cmp	r0, #2
 800bf44:	f67f af5f 	bls.w	800be06 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800bf48:	e7ee      	b.n	800bf28 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800bf4a:	f7fe f967 	bl	800a21c <HAL_GetTick>
 800bf4e:	1b80      	subs	r0, r0, r6
 800bf50:	2802      	cmp	r0, #2
 800bf52:	f67f af73 	bls.w	800be3c <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800bf56:	e7e7      	b.n	800bf28 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bf58:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 800bf5c:	4293      	cmp	r3, r2
 800bf5e:	f43f af78 	beq.w	800be52 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bf62:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800bf64:	4a13      	ldr	r2, [pc, #76]	@ (800bfb4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800bf66:	2101      	movs	r1, #1
 800bf68:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bf6c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800bf70:	2100      	movs	r1, #0
 800bf72:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 800bf76:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800bf78:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800bf7a:	07d9      	lsls	r1, r3, #31
 800bf7c:	f57f af69 	bpl.w	800be52 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 800bf80:	f7fe f94c 	bl	800a21c <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800bf84:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 800bf88:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bf8a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800bf8c:	079a      	lsls	r2, r3, #30
 800bf8e:	f53f af60 	bmi.w	800be52 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800bf92:	f7fe f943 	bl	800a21c <HAL_GetTick>
 800bf96:	1b80      	subs	r0, r0, r6
 800bf98:	42b8      	cmp	r0, r7
 800bf9a:	d9f6      	bls.n	800bf8a <HAL_RCCEx_PeriphCLKConfig+0x21e>
 800bf9c:	e7c4      	b.n	800bf28 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bf9e:	6891      	ldr	r1, [r2, #8]
 800bfa0:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800bfa4:	e765      	b.n	800be72 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800bfa6:	4b06      	ldr	r3, [pc, #24]	@ (800bfc0 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800bfa8:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800bfac:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 800bfb0:	e769      	b.n	800be86 <HAL_RCCEx_PeriphCLKConfig+0x11a>
 800bfb2:	bf00      	nop
 800bfb4:	42470000 	.word	0x42470000
 800bfb8:	40023800 	.word	0x40023800
 800bfbc:	40007000 	.word	0x40007000
 800bfc0:	42471000 	.word	0x42471000

0800bfc4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800bfc4:	b538      	push	{r3, r4, r5, lr}
 800bfc6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800bfc8:	4604      	mov	r4, r0
 800bfca:	b1c8      	cbz	r0, 800c000 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800bfcc:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800bfd0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800bfd4:	b91b      	cbnz	r3, 800bfde <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800bfd6:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800bfda:	f7f6 fe49 	bl	8002c70 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bfde:	2302      	movs	r3, #2
 800bfe0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800bfe4:	1d21      	adds	r1, r4, #4
 800bfe6:	6820      	ldr	r0, [r4, #0]
 800bfe8:	f000 feed 	bl	800cdc6 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800bfec:	6862      	ldr	r2, [r4, #4]
 800bfee:	6820      	ldr	r0, [r4, #0]
 800bff0:	4629      	mov	r1, r5
 800bff2:	f000 ff1e 	bl	800ce32 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800bff6:	2301      	movs	r3, #1
 800bff8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 800bffc:	2000      	movs	r0, #0
}
 800bffe:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800c000:	2001      	movs	r0, #1
 800c002:	e7fc      	b.n	800bffe <HAL_SDRAM_Init+0x3a>

0800c004 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c004:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c006:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c00a:	2b02      	cmp	r3, #2
{
 800c00c:	4605      	mov	r5, r0
 800c00e:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c010:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c012:	d012      	beq.n	800c03a <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c014:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 800c018:	2c01      	cmp	r4, #1
 800c01a:	d10f      	bne.n	800c03c <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c01c:	2302      	movs	r3, #2
 800c01e:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c022:	6828      	ldr	r0, [r5, #0]
 800c024:	f000 ff3b 	bl	800ce9e <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c028:	6833      	ldr	r3, [r6, #0]
 800c02a:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c02c:	bf06      	itte	eq
 800c02e:	2305      	moveq	r3, #5
 800c030:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c034:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800c038:	2000      	movs	r0, #0
}
 800c03a:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800c03c:	2001      	movs	r0, #1
 800c03e:	e7fc      	b.n	800c03a <HAL_SDRAM_SendCommand+0x36>

0800c040 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c040:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c042:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800c046:	2b02      	cmp	r3, #2
{
 800c048:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c04a:	b2d8      	uxtb	r0, r3
 800c04c:	d00d      	beq.n	800c06a <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c04e:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800c052:	2b01      	cmp	r3, #1
 800c054:	b2dd      	uxtb	r5, r3
 800c056:	d109      	bne.n	800c06c <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c058:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c05a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c05c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c060:	f000 ff41 	bl	800cee6 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c064:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800c068:	2000      	movs	r0, #0
}
 800c06a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800c06c:	2001      	movs	r0, #1
 800c06e:	e7fc      	b.n	800c06a <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800c070 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 800c070:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c074:	461f      	mov	r7, r3
 800c076:	4689      	mov	r9, r1
 800c078:	4690      	mov	r8, r2
 800c07a:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c07c:	f7fe f8ce 	bl	800a21c <HAL_GetTick>
 800c080:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800c082:	443d      	add	r5, r7
 800c084:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c086:	f7fe f8c9 	bl	800a21c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c08a:	4b26      	ldr	r3, [pc, #152]	@ (800c124 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 800c08c:	681e      	ldr	r6, [r3, #0]
 800c08e:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 800c092:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 800c094:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c096:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c098:	6822      	ldr	r2, [r4, #0]
 800c09a:	6893      	ldr	r3, [r2, #8]
 800c09c:	ea39 0303 	bics.w	r3, r9, r3
 800c0a0:	bf0c      	ite	eq
 800c0a2:	2301      	moveq	r3, #1
 800c0a4:	2300      	movne	r3, #0
 800c0a6:	4543      	cmp	r3, r8
 800c0a8:	d101      	bne.n	800c0ae <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 800c0aa:	2000      	movs	r0, #0
 800c0ac:	e02e      	b.n	800c10c <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 800c0ae:	1c7b      	adds	r3, r7, #1
 800c0b0:	d0f3      	beq.n	800c09a <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c0b2:	f7fe f8b3 	bl	800a21c <HAL_GetTick>
 800c0b6:	eba0 000a 	sub.w	r0, r0, sl
 800c0ba:	42a8      	cmp	r0, r5
 800c0bc:	d329      	bcc.n	800c112 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c0be:	6823      	ldr	r3, [r4, #0]
 800c0c0:	685a      	ldr	r2, [r3, #4]
 800c0c2:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800c0c6:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c0c8:	6862      	ldr	r2, [r4, #4]
 800c0ca:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800c0ce:	d10a      	bne.n	800c0e6 <SPI_WaitFlagStateUntilTimeout+0x76>
 800c0d0:	68a2      	ldr	r2, [r4, #8]
 800c0d2:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800c0d6:	d002      	beq.n	800c0de <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c0d8:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800c0dc:	d103      	bne.n	800c0e6 <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 800c0de:	681a      	ldr	r2, [r3, #0]
 800c0e0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800c0e4:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c0e6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800c0e8:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 800c0ec:	d107      	bne.n	800c0fe <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 800c0ee:	681a      	ldr	r2, [r3, #0]
 800c0f0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800c0f4:	601a      	str	r2, [r3, #0]
 800c0f6:	681a      	ldr	r2, [r3, #0]
 800c0f8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800c0fc:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c0fe:	2301      	movs	r3, #1
 800c100:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800c104:	2300      	movs	r3, #0
 800c106:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800c10a:	2003      	movs	r0, #3
}
 800c10c:	b002      	add	sp, #8
 800c10e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 800c112:	9a01      	ldr	r2, [sp, #4]
      count--;
 800c114:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 800c116:	2a00      	cmp	r2, #0
      count--;
 800c118:	f103 33ff 	add.w	r3, r3, #4294967295
 800c11c:	9301      	str	r3, [sp, #4]
 800c11e:	bf08      	it	eq
 800c120:	4615      	moveq	r5, r2
 800c122:	e7b9      	b.n	800c098 <SPI_WaitFlagStateUntilTimeout+0x28>
 800c124:	20000074 	.word	0x20000074

0800c128 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800c128:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c12a:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800c12c:	460b      	mov	r3, r1
 800c12e:	9200      	str	r2, [sp, #0]
{
 800c130:	460e      	mov	r6, r1
 800c132:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800c134:	2102      	movs	r1, #2
 800c136:	2201      	movs	r2, #1
{
 800c138:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800c13a:	f7ff ff99 	bl	800c070 <SPI_WaitFlagStateUntilTimeout>
 800c13e:	4605      	mov	r5, r0
 800c140:	b128      	cbz	r0, 800c14e <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c142:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800c144:	f043 0320 	orr.w	r3, r3, #32
 800c148:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 800c14a:	2503      	movs	r5, #3
 800c14c:	e015      	b.n	800c17a <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c14e:	4b12      	ldr	r3, [pc, #72]	@ (800c198 <SPI_EndRxTxTransaction+0x70>)
 800c150:	6818      	ldr	r0, [r3, #0]
 800c152:	4b12      	ldr	r3, [pc, #72]	@ (800c19c <SPI_EndRxTxTransaction+0x74>)
 800c154:	fbb0 f0f3 	udiv	r0, r0, r3
 800c158:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800c15c:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c15e:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c160:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c162:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800c166:	d10b      	bne.n	800c180 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c168:	9700      	str	r7, [sp, #0]
 800c16a:	4633      	mov	r3, r6
 800c16c:	462a      	mov	r2, r5
 800c16e:	2180      	movs	r1, #128	@ 0x80
 800c170:	4620      	mov	r0, r4
 800c172:	f7ff ff7d 	bl	800c070 <SPI_WaitFlagStateUntilTimeout>
 800c176:	2800      	cmp	r0, #0
 800c178:	d1e3      	bne.n	800c142 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800c17a:	4628      	mov	r0, r5
 800c17c:	b005      	add	sp, #20
 800c17e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 800c180:	9b03      	ldr	r3, [sp, #12]
 800c182:	2b00      	cmp	r3, #0
 800c184:	d0f9      	beq.n	800c17a <SPI_EndRxTxTransaction+0x52>
      count--;
 800c186:	9b03      	ldr	r3, [sp, #12]
 800c188:	3b01      	subs	r3, #1
 800c18a:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c18c:	6823      	ldr	r3, [r4, #0]
 800c18e:	689b      	ldr	r3, [r3, #8]
 800c190:	061b      	lsls	r3, r3, #24
 800c192:	d4f5      	bmi.n	800c180 <SPI_EndRxTxTransaction+0x58>
 800c194:	e7f1      	b.n	800c17a <SPI_EndRxTxTransaction+0x52>
 800c196:	bf00      	nop
 800c198:	20000074 	.word	0x20000074
 800c19c:	016e3600 	.word	0x016e3600

0800c1a0 <SPI_EndRxTransaction>:
{
 800c1a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1a2:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c1a4:	6841      	ldr	r1, [r0, #4]
 800c1a6:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 800c1aa:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c1ac:	d008      	beq.n	800c1c0 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c1ae:	9200      	str	r2, [sp, #0]
 800c1b0:	2101      	movs	r1, #1
 800c1b2:	2200      	movs	r2, #0
 800c1b4:	f7ff ff5c 	bl	800c070 <SPI_WaitFlagStateUntilTimeout>
 800c1b8:	b9d0      	cbnz	r0, 800c1f0 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 800c1ba:	2000      	movs	r0, #0
}
 800c1bc:	b003      	add	sp, #12
 800c1be:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c1c0:	6881      	ldr	r1, [r0, #8]
 800c1c2:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 800c1c6:	d002      	beq.n	800c1ce <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c1c8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800c1cc:	d107      	bne.n	800c1de <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 800c1ce:	6825      	ldr	r5, [r4, #0]
 800c1d0:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800c1d2:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 800c1d6:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800c1da:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800c1dc:	d004      	beq.n	800c1e8 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c1de:	9200      	str	r2, [sp, #0]
 800c1e0:	2180      	movs	r1, #128	@ 0x80
 800c1e2:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c1e4:	4620      	mov	r0, r4
 800c1e6:	e7e5      	b.n	800c1b4 <SPI_EndRxTransaction+0x14>
 800c1e8:	9200      	str	r2, [sp, #0]
 800c1ea:	2101      	movs	r1, #1
 800c1ec:	2200      	movs	r2, #0
 800c1ee:	e7f9      	b.n	800c1e4 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c1f0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800c1f2:	f043 0320 	orr.w	r3, r3, #32
 800c1f6:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 800c1f8:	2003      	movs	r0, #3
 800c1fa:	e7df      	b.n	800c1bc <SPI_EndRxTransaction+0x1c>

0800c1fc <HAL_SPI_Init>:
{
 800c1fc:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800c1fe:	4604      	mov	r4, r0
 800c200:	2800      	cmp	r0, #0
 800c202:	d055      	beq.n	800c2b0 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c204:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800c206:	2b00      	cmp	r3, #0
 800c208:	d14e      	bne.n	800c2a8 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c20a:	6842      	ldr	r2, [r0, #4]
 800c20c:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800c210:	d000      	beq.n	800c214 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c212:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c214:	2300      	movs	r3, #0
 800c216:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c218:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800c21c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800c220:	b923      	cbnz	r3, 800c22c <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 800c222:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 800c226:	4620      	mov	r0, r4
 800c228:	f7f6 fcec 	bl	8002c04 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800c22c:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c22e:	68a0      	ldr	r0, [r4, #8]
 800c230:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c232:	2302      	movs	r3, #2
 800c234:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 800c238:	680b      	ldr	r3, [r1, #0]
 800c23a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c23e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c240:	6863      	ldr	r3, [r4, #4]
 800c242:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 800c246:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800c24a:	4303      	orrs	r3, r0
 800c24c:	68e0      	ldr	r0, [r4, #12]
 800c24e:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 800c252:	4303      	orrs	r3, r0
 800c254:	6920      	ldr	r0, [r4, #16]
 800c256:	f000 0002 	and.w	r0, r0, #2
 800c25a:	4303      	orrs	r3, r0
 800c25c:	6960      	ldr	r0, [r4, #20]
 800c25e:	f000 0001 	and.w	r0, r0, #1
 800c262:	4303      	orrs	r3, r0
 800c264:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 800c268:	4303      	orrs	r3, r0
 800c26a:	69e0      	ldr	r0, [r4, #28]
 800c26c:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 800c270:	4303      	orrs	r3, r0
 800c272:	6a20      	ldr	r0, [r4, #32]
 800c274:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 800c278:	4303      	orrs	r3, r0
 800c27a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800c27c:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 800c280:	4303      	orrs	r3, r0
 800c282:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c284:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c286:	0c12      	lsrs	r2, r2, #16
 800c288:	f003 0310 	and.w	r3, r3, #16
 800c28c:	f002 0204 	and.w	r2, r2, #4
 800c290:	431a      	orrs	r2, r3
 800c292:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c294:	69cb      	ldr	r3, [r1, #28]
 800c296:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800c29a:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c29c:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800c29e:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c2a0:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c2a2:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 800c2a6:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c2a8:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c2aa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c2ae:	e7b1      	b.n	800c214 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800c2b0:	2001      	movs	r0, #1
 800c2b2:	e7f8      	b.n	800c2a6 <HAL_SPI_Init+0xaa>

0800c2b4 <HAL_SPI_Transmit>:
{
 800c2b4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c2b8:	4604      	mov	r4, r0
 800c2ba:	461f      	mov	r7, r3
 800c2bc:	460d      	mov	r5, r1
 800c2be:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 800c2c0:	f7fd ffac 	bl	800a21c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c2c4:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800c2c8:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c2ca:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c2cc:	b2d8      	uxtb	r0, r3
 800c2ce:	f040 809f 	bne.w	800c410 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 800c2d2:	2d00      	cmp	r5, #0
 800c2d4:	d074      	beq.n	800c3c0 <HAL_SPI_Transmit+0x10c>
 800c2d6:	f1b8 0f00 	cmp.w	r8, #0
 800c2da:	d071      	beq.n	800c3c0 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 800c2dc:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800c2e0:	2b01      	cmp	r3, #1
 800c2e2:	f000 8095 	beq.w	800c410 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c2e6:	2303      	movs	r3, #3
 800c2e8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c2ec:	2300      	movs	r3, #0
 800c2ee:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 800c2f0:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 800c2f4:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c2f8:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 800c2fa:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800c2fc:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c2fe:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c300:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 800c302:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c306:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800c30a:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 800c30c:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c310:	d107      	bne.n	800c322 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 800c312:	6833      	ldr	r3, [r6, #0]
 800c314:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c318:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 800c31a:	6833      	ldr	r3, [r6, #0]
 800c31c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800c320:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c322:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c324:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c326:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 800c328:	bf5e      	ittt	pl
 800c32a:	6833      	ldrpl	r3, [r6, #0]
 800c32c:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 800c330:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c332:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c336:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c338:	d145      	bne.n	800c3c6 <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c33a:	b113      	cbz	r3, 800c342 <HAL_SPI_Transmit+0x8e>
 800c33c:	f1b8 0f01 	cmp.w	r8, #1
 800c340:	d107      	bne.n	800c352 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800c342:	f835 3b02 	ldrh.w	r3, [r5], #2
 800c346:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c348:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800c34a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c34c:	3b01      	subs	r3, #1
 800c34e:	b29b      	uxth	r3, r3
 800c350:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800c352:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c354:	b29b      	uxth	r3, r3
 800c356:	b9d3      	cbnz	r3, 800c38e <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c358:	464a      	mov	r2, r9
 800c35a:	4639      	mov	r1, r7
 800c35c:	4620      	mov	r0, r4
 800c35e:	f7ff fee3 	bl	800c128 <SPI_EndRxTxTransaction>
 800c362:	2800      	cmp	r0, #0
 800c364:	d151      	bne.n	800c40a <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c366:	68a3      	ldr	r3, [r4, #8]
 800c368:	b933      	cbnz	r3, 800c378 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c36a:	9301      	str	r3, [sp, #4]
 800c36c:	6823      	ldr	r3, [r4, #0]
 800c36e:	68da      	ldr	r2, [r3, #12]
 800c370:	9201      	str	r2, [sp, #4]
 800c372:	689b      	ldr	r3, [r3, #8]
 800c374:	9301      	str	r3, [sp, #4]
 800c376:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800c378:	2301      	movs	r3, #1
 800c37a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c37e:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800c380:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c382:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800c384:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c388:	bf18      	it	ne
 800c38a:	2001      	movne	r0, #1
 800c38c:	e018      	b.n	800c3c0 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c38e:	6822      	ldr	r2, [r4, #0]
 800c390:	6893      	ldr	r3, [r2, #8]
 800c392:	0798      	lsls	r0, r3, #30
 800c394:	d505      	bpl.n	800c3a2 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800c396:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800c398:	f833 1b02 	ldrh.w	r1, [r3], #2
 800c39c:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c39e:	6323      	str	r3, [r4, #48]	@ 0x30
 800c3a0:	e7d3      	b.n	800c34a <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c3a2:	f7fd ff3b 	bl	800a21c <HAL_GetTick>
 800c3a6:	eba0 0009 	sub.w	r0, r0, r9
 800c3aa:	42b8      	cmp	r0, r7
 800c3ac:	d3d1      	bcc.n	800c352 <HAL_SPI_Transmit+0x9e>
 800c3ae:	1c79      	adds	r1, r7, #1
 800c3b0:	d0cf      	beq.n	800c352 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 800c3b2:	2301      	movs	r3, #1
 800c3b4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800c3b8:	2300      	movs	r3, #0
 800c3ba:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800c3be:	2003      	movs	r0, #3
}
 800c3c0:	b003      	add	sp, #12
 800c3c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c3c6:	b113      	cbz	r3, 800c3ce <HAL_SPI_Transmit+0x11a>
 800c3c8:	f1b8 0f01 	cmp.w	r8, #1
 800c3cc:	d108      	bne.n	800c3e0 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800c3ce:	782b      	ldrb	r3, [r5, #0]
 800c3d0:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c3d2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800c3d4:	3301      	adds	r3, #1
 800c3d6:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800c3d8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c3da:	3b01      	subs	r3, #1
 800c3dc:	b29b      	uxth	r3, r3
 800c3de:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800c3e0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c3e2:	b29b      	uxth	r3, r3
 800c3e4:	2b00      	cmp	r3, #0
 800c3e6:	d0b7      	beq.n	800c358 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c3e8:	6823      	ldr	r3, [r4, #0]
 800c3ea:	689a      	ldr	r2, [r3, #8]
 800c3ec:	0792      	lsls	r2, r2, #30
 800c3ee:	d503      	bpl.n	800c3f8 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800c3f0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800c3f2:	7812      	ldrb	r2, [r2, #0]
 800c3f4:	731a      	strb	r2, [r3, #12]
 800c3f6:	e7ec      	b.n	800c3d2 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c3f8:	f7fd ff10 	bl	800a21c <HAL_GetTick>
 800c3fc:	eba0 0009 	sub.w	r0, r0, r9
 800c400:	42b8      	cmp	r0, r7
 800c402:	d3ed      	bcc.n	800c3e0 <HAL_SPI_Transmit+0x12c>
 800c404:	1c7b      	adds	r3, r7, #1
 800c406:	d0eb      	beq.n	800c3e0 <HAL_SPI_Transmit+0x12c>
 800c408:	e7d3      	b.n	800c3b2 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c40a:	2320      	movs	r3, #32
 800c40c:	6563      	str	r3, [r4, #84]	@ 0x54
 800c40e:	e7aa      	b.n	800c366 <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 800c410:	2002      	movs	r0, #2
 800c412:	e7d5      	b.n	800c3c0 <HAL_SPI_Transmit+0x10c>

0800c414 <HAL_SPI_TransmitReceive>:
{
 800c414:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c418:	4604      	mov	r4, r0
 800c41a:	460d      	mov	r5, r1
 800c41c:	4691      	mov	r9, r2
 800c41e:	461e      	mov	r6, r3
 800c420:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 800c424:	f7fd fefa 	bl	800a21c <HAL_GetTick>
  tmp_state           = hspi->State;
 800c428:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 800c42c:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c42e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c430:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 800c432:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c434:	d00a      	beq.n	800c44c <HAL_SPI_TransmitReceive+0x38>
 800c436:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800c43a:	f040 80e5 	bne.w	800c608 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800c43e:	68a3      	ldr	r3, [r4, #8]
 800c440:	2b00      	cmp	r3, #0
 800c442:	f040 80e1 	bne.w	800c608 <HAL_SPI_TransmitReceive+0x1f4>
 800c446:	2904      	cmp	r1, #4
 800c448:	f040 80de 	bne.w	800c608 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800c44c:	2d00      	cmp	r5, #0
 800c44e:	d04b      	beq.n	800c4e8 <HAL_SPI_TransmitReceive+0xd4>
 800c450:	f1b9 0f00 	cmp.w	r9, #0
 800c454:	d048      	beq.n	800c4e8 <HAL_SPI_TransmitReceive+0xd4>
 800c456:	2e00      	cmp	r6, #0
 800c458:	d046      	beq.n	800c4e8 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 800c45a:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800c45e:	2b01      	cmp	r3, #1
 800c460:	f000 80d2 	beq.w	800c608 <HAL_SPI_TransmitReceive+0x1f4>
 800c464:	2301      	movs	r3, #1
 800c466:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c46a:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800c46e:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c472:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800c474:	bf1c      	itt	ne
 800c476:	2305      	movne	r3, #5
 800c478:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c47c:	2300      	movs	r3, #0
 800c47e:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 800c480:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c484:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800c486:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 800c488:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c48a:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800c48c:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c48e:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800c490:	bf58      	it	pl
 800c492:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800c494:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 800c496:	bf58      	it	pl
 800c498:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 800c49c:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 800c49e:	bf58      	it	pl
 800c4a0:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c4a2:	68e1      	ldr	r1, [r4, #12]
 800c4a4:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 800c4a8:	d155      	bne.n	800c556 <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c4aa:	b10a      	cbz	r2, 800c4b0 <HAL_SPI_TransmitReceive+0x9c>
 800c4ac:	2e01      	cmp	r6, #1
 800c4ae:	d107      	bne.n	800c4c0 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800c4b0:	f835 2b02 	ldrh.w	r2, [r5], #2
 800c4b4:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800c4b6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c4b8:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800c4ba:	3b01      	subs	r3, #1
 800c4bc:	b29b      	uxth	r3, r3
 800c4be:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800c4c0:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c4c2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c4c4:	b29b      	uxth	r3, r3
 800c4c6:	b98b      	cbnz	r3, 800c4ec <HAL_SPI_TransmitReceive+0xd8>
 800c4c8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800c4ca:	b29b      	uxth	r3, r3
 800c4cc:	b973      	cbnz	r3, 800c4ec <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c4ce:	463a      	mov	r2, r7
 800c4d0:	4641      	mov	r1, r8
 800c4d2:	4620      	mov	r0, r4
 800c4d4:	f7ff fe28 	bl	800c128 <SPI_EndRxTxTransaction>
 800c4d8:	2800      	cmp	r0, #0
 800c4da:	f000 8081 	beq.w	800c5e0 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c4de:	2320      	movs	r3, #32
 800c4e0:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800c4e2:	2300      	movs	r3, #0
 800c4e4:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 800c4e8:	2001      	movs	r0, #1
 800c4ea:	e031      	b.n	800c550 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c4ec:	6821      	ldr	r1, [r4, #0]
 800c4ee:	688b      	ldr	r3, [r1, #8]
 800c4f0:	079a      	lsls	r2, r3, #30
 800c4f2:	d50d      	bpl.n	800c510 <HAL_SPI_TransmitReceive+0xfc>
 800c4f4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c4f6:	b29b      	uxth	r3, r3
 800c4f8:	b153      	cbz	r3, 800c510 <HAL_SPI_TransmitReceive+0xfc>
 800c4fa:	b145      	cbz	r5, 800c50e <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800c4fc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800c4fe:	f833 2b02 	ldrh.w	r2, [r3], #2
 800c502:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c504:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800c506:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c508:	3b01      	subs	r3, #1
 800c50a:	b29b      	uxth	r3, r3
 800c50c:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 800c50e:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c510:	688a      	ldr	r2, [r1, #8]
 800c512:	f012 0201 	ands.w	r2, r2, #1
 800c516:	d00c      	beq.n	800c532 <HAL_SPI_TransmitReceive+0x11e>
 800c518:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800c51a:	b29b      	uxth	r3, r3
 800c51c:	b14b      	cbz	r3, 800c532 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c51e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800c520:	68c9      	ldr	r1, [r1, #12]
 800c522:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c526:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800c528:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800c52a:	3b01      	subs	r3, #1
 800c52c:	b29b      	uxth	r3, r3
 800c52e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800c530:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c532:	f7fd fe73 	bl	800a21c <HAL_GetTick>
 800c536:	1bc0      	subs	r0, r0, r7
 800c538:	4540      	cmp	r0, r8
 800c53a:	d3c2      	bcc.n	800c4c2 <HAL_SPI_TransmitReceive+0xae>
 800c53c:	f1b8 3fff 	cmp.w	r8, #4294967295
 800c540:	d0bf      	beq.n	800c4c2 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 800c542:	2301      	movs	r3, #1
 800c544:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800c548:	2300      	movs	r3, #0
 800c54a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800c54e:	2003      	movs	r0, #3
}
 800c550:	b003      	add	sp, #12
 800c552:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c556:	b10a      	cbz	r2, 800c55c <HAL_SPI_TransmitReceive+0x148>
 800c558:	2e01      	cmp	r6, #1
 800c55a:	d108      	bne.n	800c56e <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800c55c:	782a      	ldrb	r2, [r5, #0]
 800c55e:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c560:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800c562:	3301      	adds	r3, #1
 800c564:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800c566:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c568:	3b01      	subs	r3, #1
 800c56a:	b29b      	uxth	r3, r3
 800c56c:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800c56e:	2501      	movs	r5, #1
 800c570:	e02d      	b.n	800c5ce <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c572:	6822      	ldr	r2, [r4, #0]
 800c574:	6893      	ldr	r3, [r2, #8]
 800c576:	079b      	lsls	r3, r3, #30
 800c578:	d50e      	bpl.n	800c598 <HAL_SPI_TransmitReceive+0x184>
 800c57a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c57c:	b29b      	uxth	r3, r3
 800c57e:	b15b      	cbz	r3, 800c598 <HAL_SPI_TransmitReceive+0x184>
 800c580:	b14d      	cbz	r5, 800c596 <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 800c582:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800c584:	781b      	ldrb	r3, [r3, #0]
 800c586:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800c588:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800c58a:	3301      	adds	r3, #1
 800c58c:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800c58e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c590:	3b01      	subs	r3, #1
 800c592:	b29b      	uxth	r3, r3
 800c594:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800c596:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c598:	6822      	ldr	r2, [r4, #0]
 800c59a:	6891      	ldr	r1, [r2, #8]
 800c59c:	f011 0101 	ands.w	r1, r1, #1
 800c5a0:	d00d      	beq.n	800c5be <HAL_SPI_TransmitReceive+0x1aa>
 800c5a2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800c5a4:	b29b      	uxth	r3, r3
 800c5a6:	b153      	cbz	r3, 800c5be <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c5a8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800c5aa:	68d2      	ldr	r2, [r2, #12]
 800c5ac:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800c5ae:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800c5b0:	3301      	adds	r3, #1
 800c5b2:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800c5b4:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800c5b6:	3b01      	subs	r3, #1
 800c5b8:	b29b      	uxth	r3, r3
 800c5ba:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800c5bc:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c5be:	f7fd fe2d 	bl	800a21c <HAL_GetTick>
 800c5c2:	1bc0      	subs	r0, r0, r7
 800c5c4:	4540      	cmp	r0, r8
 800c5c6:	d302      	bcc.n	800c5ce <HAL_SPI_TransmitReceive+0x1ba>
 800c5c8:	f1b8 3fff 	cmp.w	r8, #4294967295
 800c5cc:	d1b9      	bne.n	800c542 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c5ce:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c5d0:	b29b      	uxth	r3, r3
 800c5d2:	2b00      	cmp	r3, #0
 800c5d4:	d1cd      	bne.n	800c572 <HAL_SPI_TransmitReceive+0x15e>
 800c5d6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800c5d8:	b29b      	uxth	r3, r3
 800c5da:	2b00      	cmp	r3, #0
 800c5dc:	d1c9      	bne.n	800c572 <HAL_SPI_TransmitReceive+0x15e>
 800c5de:	e776      	b.n	800c4ce <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c5e0:	68a3      	ldr	r3, [r4, #8]
 800c5e2:	b933      	cbnz	r3, 800c5f2 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c5e4:	9301      	str	r3, [sp, #4]
 800c5e6:	6823      	ldr	r3, [r4, #0]
 800c5e8:	68da      	ldr	r2, [r3, #12]
 800c5ea:	9201      	str	r2, [sp, #4]
 800c5ec:	689b      	ldr	r3, [r3, #8]
 800c5ee:	9301      	str	r3, [sp, #4]
 800c5f0:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800c5f2:	2301      	movs	r3, #1
 800c5f4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c5f8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800c5fa:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c5fc:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800c5fe:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c602:	bf18      	it	ne
 800c604:	2001      	movne	r0, #1
 800c606:	e7a3      	b.n	800c550 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 800c608:	2002      	movs	r0, #2
 800c60a:	e7a1      	b.n	800c550 <HAL_SPI_TransmitReceive+0x13c>

0800c60c <HAL_SPI_Receive>:
{
 800c60c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c610:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 800c612:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 800c616:	2b01      	cmp	r3, #1
{
 800c618:	4604      	mov	r4, r0
 800c61a:	4689      	mov	r9, r1
 800c61c:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 800c61e:	b2dd      	uxtb	r5, r3
 800c620:	d004      	beq.n	800c62c <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 800c622:	2502      	movs	r5, #2
}
 800c624:	4628      	mov	r0, r5
 800c626:	b003      	add	sp, #12
 800c628:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c62c:	6843      	ldr	r3, [r0, #4]
 800c62e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800c632:	d10b      	bne.n	800c64c <HAL_SPI_Receive+0x40>
 800c634:	6883      	ldr	r3, [r0, #8]
 800c636:	b94b      	cbnz	r3, 800c64c <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c638:	2304      	movs	r3, #4
 800c63a:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c63e:	4613      	mov	r3, r2
 800c640:	9600      	str	r6, [sp, #0]
 800c642:	460a      	mov	r2, r1
 800c644:	f7ff fee6 	bl	800c414 <HAL_SPI_TransmitReceive>
 800c648:	4605      	mov	r5, r0
 800c64a:	e7eb      	b.n	800c624 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 800c64c:	f7fd fde6 	bl	800a21c <HAL_GetTick>
 800c650:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 800c652:	f1b9 0f00 	cmp.w	r9, #0
 800c656:	d0e5      	beq.n	800c624 <HAL_SPI_Receive+0x18>
 800c658:	2f00      	cmp	r7, #0
 800c65a:	d0e3      	beq.n	800c624 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 800c65c:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800c660:	2b01      	cmp	r3, #1
 800c662:	d0de      	beq.n	800c622 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c664:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c666:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 800c66a:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c66c:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 800c66e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c672:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c676:	f04f 0304 	mov.w	r3, #4
 800c67a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 800c67e:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c682:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 800c684:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800c686:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 800c688:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c68a:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 800c68c:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 800c68e:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c690:	d107      	bne.n	800c6a2 <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 800c692:	681a      	ldr	r2, [r3, #0]
 800c694:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800c698:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800c69a:	681a      	ldr	r2, [r3, #0]
 800c69c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800c6a0:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c6a2:	681a      	ldr	r2, [r3, #0]
 800c6a4:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800c6a6:	bf5e      	ittt	pl
 800c6a8:	681a      	ldrpl	r2, [r3, #0]
 800c6aa:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 800c6ae:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c6b0:	68e3      	ldr	r3, [r4, #12]
 800c6b2:	b1f3      	cbz	r3, 800c6f2 <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 800c6b4:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800c6b6:	b29b      	uxth	r3, r3
 800c6b8:	b1fb      	cbz	r3, 800c6fa <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c6ba:	6823      	ldr	r3, [r4, #0]
 800c6bc:	689a      	ldr	r2, [r3, #8]
 800c6be:	07d2      	lsls	r2, r2, #31
 800c6c0:	d53c      	bpl.n	800c73c <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c6c2:	68da      	ldr	r2, [r3, #12]
 800c6c4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800c6c6:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c6ca:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800c6cc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800c6ce:	3b01      	subs	r3, #1
 800c6d0:	b29b      	uxth	r3, r3
 800c6d2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800c6d4:	e7ee      	b.n	800c6b4 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c6d6:	6823      	ldr	r3, [r4, #0]
 800c6d8:	689a      	ldr	r2, [r3, #8]
 800c6da:	07d0      	lsls	r0, r2, #31
 800c6dc:	d51e      	bpl.n	800c71c <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c6de:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800c6e0:	7b1b      	ldrb	r3, [r3, #12]
 800c6e2:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c6e4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800c6e6:	3301      	adds	r3, #1
 800c6e8:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800c6ea:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800c6ec:	3b01      	subs	r3, #1
 800c6ee:	b29b      	uxth	r3, r3
 800c6f0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 800c6f2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800c6f4:	b29b      	uxth	r3, r3
 800c6f6:	2b00      	cmp	r3, #0
 800c6f8:	d1ed      	bne.n	800c6d6 <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c6fa:	4642      	mov	r2, r8
 800c6fc:	4631      	mov	r1, r6
 800c6fe:	4620      	mov	r0, r4
 800c700:	f7ff fd4e 	bl	800c1a0 <SPI_EndRxTransaction>
 800c704:	bb18      	cbnz	r0, 800c74e <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 800c706:	2301      	movs	r3, #1
 800c708:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c70c:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800c70e:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c710:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 800c712:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c716:	bf18      	it	ne
 800c718:	2501      	movne	r5, #1
 800c71a:	e783      	b.n	800c624 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c71c:	f7fd fd7e 	bl	800a21c <HAL_GetTick>
 800c720:	eba0 0008 	sub.w	r0, r0, r8
 800c724:	42b0      	cmp	r0, r6
 800c726:	d3e4      	bcc.n	800c6f2 <HAL_SPI_Receive+0xe6>
 800c728:	1c71      	adds	r1, r6, #1
 800c72a:	d0e2      	beq.n	800c6f2 <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 800c72c:	2301      	movs	r3, #1
 800c72e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800c732:	2300      	movs	r3, #0
 800c734:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800c738:	2503      	movs	r5, #3
 800c73a:	e773      	b.n	800c624 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c73c:	f7fd fd6e 	bl	800a21c <HAL_GetTick>
 800c740:	eba0 0008 	sub.w	r0, r0, r8
 800c744:	42b0      	cmp	r0, r6
 800c746:	d3b5      	bcc.n	800c6b4 <HAL_SPI_Receive+0xa8>
 800c748:	1c73      	adds	r3, r6, #1
 800c74a:	d0b3      	beq.n	800c6b4 <HAL_SPI_Receive+0xa8>
 800c74c:	e7ee      	b.n	800c72c <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c74e:	2320      	movs	r3, #32
 800c750:	6563      	str	r3, [r4, #84]	@ 0x54
 800c752:	e7d8      	b.n	800c706 <HAL_SPI_Receive+0xfa>

0800c754 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800c754:	4770      	bx	lr
	...

0800c758 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800c758:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800c75c:	2b01      	cmp	r3, #1
 800c75e:	d130      	bne.n	800c7c2 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800c760:	2302      	movs	r3, #2
 800c762:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c766:	6803      	ldr	r3, [r0, #0]
 800c768:	68da      	ldr	r2, [r3, #12]
 800c76a:	f042 0201 	orr.w	r2, r2, #1
 800c76e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c770:	4a15      	ldr	r2, [pc, #84]	@ (800c7c8 <HAL_TIM_Base_Start_IT+0x70>)
 800c772:	4293      	cmp	r3, r2
 800c774:	d01a      	beq.n	800c7ac <HAL_TIM_Base_Start_IT+0x54>
 800c776:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800c77a:	d017      	beq.n	800c7ac <HAL_TIM_Base_Start_IT+0x54>
 800c77c:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800c780:	4293      	cmp	r3, r2
 800c782:	d013      	beq.n	800c7ac <HAL_TIM_Base_Start_IT+0x54>
 800c784:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c788:	4293      	cmp	r3, r2
 800c78a:	d00f      	beq.n	800c7ac <HAL_TIM_Base_Start_IT+0x54>
 800c78c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c790:	4293      	cmp	r3, r2
 800c792:	d00b      	beq.n	800c7ac <HAL_TIM_Base_Start_IT+0x54>
 800c794:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800c798:	4293      	cmp	r3, r2
 800c79a:	d007      	beq.n	800c7ac <HAL_TIM_Base_Start_IT+0x54>
 800c79c:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 800c7a0:	4293      	cmp	r3, r2
 800c7a2:	d003      	beq.n	800c7ac <HAL_TIM_Base_Start_IT+0x54>
 800c7a4:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800c7a8:	4293      	cmp	r3, r2
 800c7aa:	d104      	bne.n	800c7b6 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c7ac:	689a      	ldr	r2, [r3, #8]
 800c7ae:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c7b2:	2a06      	cmp	r2, #6
 800c7b4:	d003      	beq.n	800c7be <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 800c7b6:	681a      	ldr	r2, [r3, #0]
 800c7b8:	f042 0201 	orr.w	r2, r2, #1
 800c7bc:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 800c7be:	2000      	movs	r0, #0
 800c7c0:	4770      	bx	lr
    return HAL_ERROR;
 800c7c2:	2001      	movs	r0, #1
}
 800c7c4:	4770      	bx	lr
 800c7c6:	bf00      	nop
 800c7c8:	40010000 	.word	0x40010000

0800c7cc <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 800c7cc:	4770      	bx	lr

0800c7ce <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 800c7ce:	4770      	bx	lr

0800c7d0 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 800c7d0:	4770      	bx	lr

0800c7d2 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800c7d2:	4770      	bx	lr

0800c7d4 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 800c7d4:	6803      	ldr	r3, [r0, #0]
{
 800c7d6:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 800c7d8:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 800c7da:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800c7dc:	07b1      	lsls	r1, r6, #30
{
 800c7de:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800c7e0:	d50d      	bpl.n	800c7fe <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800c7e2:	07aa      	lsls	r2, r5, #30
 800c7e4:	d50b      	bpl.n	800c7fe <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800c7e6:	f06f 0202 	mvn.w	r2, #2
 800c7ea:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c7ec:	2201      	movs	r2, #1
 800c7ee:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c7f0:	699b      	ldr	r3, [r3, #24]
 800c7f2:	079b      	lsls	r3, r3, #30
 800c7f4:	d069      	beq.n	800c8ca <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 800c7f6:	f7ff ffea 	bl	800c7ce <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c7fa:	2300      	movs	r3, #0
 800c7fc:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800c7fe:	0771      	lsls	r1, r6, #29
 800c800:	d510      	bpl.n	800c824 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800c802:	076a      	lsls	r2, r5, #29
 800c804:	d50e      	bpl.n	800c824 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800c806:	6823      	ldr	r3, [r4, #0]
 800c808:	f06f 0204 	mvn.w	r2, #4
 800c80c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c80e:	2202      	movs	r2, #2
 800c810:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c812:	699b      	ldr	r3, [r3, #24]
 800c814:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c818:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c81a:	d05c      	beq.n	800c8d6 <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 800c81c:	f7ff ffd7 	bl	800c7ce <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c820:	2300      	movs	r3, #0
 800c822:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800c824:	0733      	lsls	r3, r6, #28
 800c826:	d50f      	bpl.n	800c848 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800c828:	0728      	lsls	r0, r5, #28
 800c82a:	d50d      	bpl.n	800c848 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 800c82c:	6823      	ldr	r3, [r4, #0]
 800c82e:	f06f 0208 	mvn.w	r2, #8
 800c832:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c834:	2204      	movs	r2, #4
 800c836:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c838:	69db      	ldr	r3, [r3, #28]
 800c83a:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c83c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c83e:	d050      	beq.n	800c8e2 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 800c840:	f7ff ffc5 	bl	800c7ce <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c844:	2300      	movs	r3, #0
 800c846:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800c848:	06f2      	lsls	r2, r6, #27
 800c84a:	d510      	bpl.n	800c86e <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 800c84c:	06eb      	lsls	r3, r5, #27
 800c84e:	d50e      	bpl.n	800c86e <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 800c850:	6823      	ldr	r3, [r4, #0]
 800c852:	f06f 0210 	mvn.w	r2, #16
 800c856:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c858:	2208      	movs	r2, #8
 800c85a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c85c:	69db      	ldr	r3, [r3, #28]
 800c85e:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c862:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c864:	d043      	beq.n	800c8ee <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 800c866:	f7ff ffb2 	bl	800c7ce <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c86a:	2300      	movs	r3, #0
 800c86c:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 800c86e:	07f0      	lsls	r0, r6, #31
 800c870:	d508      	bpl.n	800c884 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800c872:	07e9      	lsls	r1, r5, #31
 800c874:	d506      	bpl.n	800c884 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800c876:	6823      	ldr	r3, [r4, #0]
 800c878:	f06f 0201 	mvn.w	r2, #1
 800c87c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c87e:	4620      	mov	r0, r4
 800c880:	f7f6 f822 	bl	80028c8 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 800c884:	0632      	lsls	r2, r6, #24
 800c886:	d508      	bpl.n	800c89a <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800c888:	062b      	lsls	r3, r5, #24
 800c88a:	d506      	bpl.n	800c89a <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 800c88c:	6823      	ldr	r3, [r4, #0]
 800c88e:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800c892:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c894:	4620      	mov	r0, r4
 800c896:	f000 f8b6 	bl	800ca06 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800c89a:	0670      	lsls	r0, r6, #25
 800c89c:	d508      	bpl.n	800c8b0 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800c89e:	0669      	lsls	r1, r5, #25
 800c8a0:	d506      	bpl.n	800c8b0 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800c8a2:	6823      	ldr	r3, [r4, #0]
 800c8a4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800c8a8:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c8aa:	4620      	mov	r0, r4
 800c8ac:	f7ff ff91 	bl	800c7d2 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800c8b0:	06b2      	lsls	r2, r6, #26
 800c8b2:	d522      	bpl.n	800c8fa <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800c8b4:	06ab      	lsls	r3, r5, #26
 800c8b6:	d520      	bpl.n	800c8fa <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800c8b8:	6823      	ldr	r3, [r4, #0]
 800c8ba:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c8be:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800c8c0:	611a      	str	r2, [r3, #16]
}
 800c8c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c8c6:	f000 b89d 	b.w	800ca04 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c8ca:	f7ff ff7f 	bl	800c7cc <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c8ce:	4620      	mov	r0, r4
 800c8d0:	f7ff ff7e 	bl	800c7d0 <HAL_TIM_PWM_PulseFinishedCallback>
 800c8d4:	e791      	b.n	800c7fa <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c8d6:	f7ff ff79 	bl	800c7cc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c8da:	4620      	mov	r0, r4
 800c8dc:	f7ff ff78 	bl	800c7d0 <HAL_TIM_PWM_PulseFinishedCallback>
 800c8e0:	e79e      	b.n	800c820 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c8e2:	f7ff ff73 	bl	800c7cc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c8e6:	4620      	mov	r0, r4
 800c8e8:	f7ff ff72 	bl	800c7d0 <HAL_TIM_PWM_PulseFinishedCallback>
 800c8ec:	e7aa      	b.n	800c844 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c8ee:	f7ff ff6d 	bl	800c7cc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c8f2:	4620      	mov	r0, r4
 800c8f4:	f7ff ff6c 	bl	800c7d0 <HAL_TIM_PWM_PulseFinishedCallback>
 800c8f8:	e7b7      	b.n	800c86a <HAL_TIM_IRQHandler+0x96>
}
 800c8fa:	bd70      	pop	{r4, r5, r6, pc}

0800c8fc <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c8fc:	4a29      	ldr	r2, [pc, #164]	@ (800c9a4 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 800c8fe:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c900:	4290      	cmp	r0, r2
 800c902:	d012      	beq.n	800c92a <TIM_Base_SetConfig+0x2e>
 800c904:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800c908:	d00f      	beq.n	800c92a <TIM_Base_SetConfig+0x2e>
 800c90a:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800c90e:	4290      	cmp	r0, r2
 800c910:	d00b      	beq.n	800c92a <TIM_Base_SetConfig+0x2e>
 800c912:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c916:	4290      	cmp	r0, r2
 800c918:	d007      	beq.n	800c92a <TIM_Base_SetConfig+0x2e>
 800c91a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c91e:	4290      	cmp	r0, r2
 800c920:	d003      	beq.n	800c92a <TIM_Base_SetConfig+0x2e>
 800c922:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800c926:	4290      	cmp	r0, r2
 800c928:	d108      	bne.n	800c93c <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800c92a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c92c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 800c930:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c932:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c934:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c938:	4313      	orrs	r3, r2
 800c93a:	e016      	b.n	800c96a <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c93c:	4a1a      	ldr	r2, [pc, #104]	@ (800c9a8 <TIM_Base_SetConfig+0xac>)
 800c93e:	4290      	cmp	r0, r2
 800c940:	d0f7      	beq.n	800c932 <TIM_Base_SetConfig+0x36>
 800c942:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c946:	4290      	cmp	r0, r2
 800c948:	d0f3      	beq.n	800c932 <TIM_Base_SetConfig+0x36>
 800c94a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c94e:	4290      	cmp	r0, r2
 800c950:	d0ef      	beq.n	800c932 <TIM_Base_SetConfig+0x36>
 800c952:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 800c956:	4290      	cmp	r0, r2
 800c958:	d0eb      	beq.n	800c932 <TIM_Base_SetConfig+0x36>
 800c95a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c95e:	4290      	cmp	r0, r2
 800c960:	d0e7      	beq.n	800c932 <TIM_Base_SetConfig+0x36>
 800c962:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c966:	4290      	cmp	r0, r2
 800c968:	d0e3      	beq.n	800c932 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c96a:	694a      	ldr	r2, [r1, #20]
 800c96c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800c970:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800c972:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c974:	688b      	ldr	r3, [r1, #8]
 800c976:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c978:	680b      	ldr	r3, [r1, #0]
 800c97a:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c97c:	4b09      	ldr	r3, [pc, #36]	@ (800c9a4 <TIM_Base_SetConfig+0xa8>)
 800c97e:	4298      	cmp	r0, r3
 800c980:	d003      	beq.n	800c98a <TIM_Base_SetConfig+0x8e>
 800c982:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800c986:	4298      	cmp	r0, r3
 800c988:	d101      	bne.n	800c98e <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800c98a:	690b      	ldr	r3, [r1, #16]
 800c98c:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c98e:	2301      	movs	r3, #1
 800c990:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800c992:	6903      	ldr	r3, [r0, #16]
 800c994:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800c996:	bf42      	ittt	mi
 800c998:	6903      	ldrmi	r3, [r0, #16]
 800c99a:	f023 0301 	bicmi.w	r3, r3, #1
 800c99e:	6103      	strmi	r3, [r0, #16]
  }
}
 800c9a0:	4770      	bx	lr
 800c9a2:	bf00      	nop
 800c9a4:	40010000 	.word	0x40010000
 800c9a8:	40014000 	.word	0x40014000

0800c9ac <HAL_TIM_Base_Init>:
{
 800c9ac:	b510      	push	{r4, lr}
  if (htim == NULL)
 800c9ae:	4604      	mov	r4, r0
 800c9b0:	b330      	cbz	r0, 800ca00 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800c9b2:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800c9b6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800c9ba:	b91b      	cbnz	r3, 800c9c4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800c9bc:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c9c0:	f7ff fec8 	bl	800c754 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800c9c4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c9c6:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c9c8:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c9cc:	1d21      	adds	r1, r4, #4
 800c9ce:	f7ff ff95 	bl	800c8fc <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c9d2:	2301      	movs	r3, #1
 800c9d4:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 800c9d8:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c9da:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800c9de:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800c9e2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800c9e6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c9ea:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800c9ee:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800c9f2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800c9f6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c9fa:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800c9fe:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800ca00:	2001      	movs	r0, #1
 800ca02:	e7fc      	b.n	800c9fe <HAL_TIM_Base_Init+0x52>

0800ca04 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 800ca04:	4770      	bx	lr

0800ca06 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 800ca06:	4770      	bx	lr

0800ca08 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800ca08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ca0c:	6803      	ldr	r3, [r0, #0]
 800ca0e:	68c1      	ldr	r1, [r0, #12]
 800ca10:	691a      	ldr	r2, [r3, #16]
{
 800ca12:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ca14:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 800ca18:	430a      	orrs	r2, r1
 800ca1a:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800ca1c:	6925      	ldr	r5, [r4, #16]
 800ca1e:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1,
 800ca20:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800ca22:	69c0      	ldr	r0, [r0, #28]
 800ca24:	432a      	orrs	r2, r5
 800ca26:	6965      	ldr	r5, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 800ca28:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800ca2c:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1,
 800ca2e:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800ca32:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 800ca34:	430a      	orrs	r2, r1
 800ca36:	60da      	str	r2, [r3, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800ca38:	695a      	ldr	r2, [r3, #20]
 800ca3a:	69a1      	ldr	r1, [r4, #24]
 800ca3c:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800ca40:	430a      	orrs	r2, r1

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800ca42:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800ca46:	615a      	str	r2, [r3, #20]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800ca48:	4a83      	ldr	r2, [pc, #524]	@ (800cc58 <UART_SetConfig+0x250>)
 800ca4a:	f040 8085 	bne.w	800cb58 <UART_SetConfig+0x150>
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
#if defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800ca4e:	4293      	cmp	r3, r2
 800ca50:	d003      	beq.n	800ca5a <UART_SetConfig+0x52>
 800ca52:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800ca56:	4293      	cmp	r3, r2
 800ca58:	d149      	bne.n	800caee <UART_SetConfig+0xe6>
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 800ca5a:	f7ff f959 	bl	800bd10 <HAL_RCC_GetPCLK2Freq>
 800ca5e:	6863      	ldr	r3, [r4, #4]
 800ca60:	f04f 0919 	mov.w	r9, #25
 800ca64:	005b      	lsls	r3, r3, #1
 800ca66:	fb09 f700 	mul.w	r7, r9, r0
 800ca6a:	fbb7 f7f3 	udiv	r7, r7, r3
 800ca6e:	f7ff f94f 	bl	800bd10 <HAL_RCC_GetPCLK2Freq>
 800ca72:	6863      	ldr	r3, [r4, #4]
 800ca74:	fb09 f500 	mul.w	r5, r9, r0
 800ca78:	005b      	lsls	r3, r3, #1
 800ca7a:	fbb5 f5f3 	udiv	r5, r5, r3
 800ca7e:	f7ff f947 	bl	800bd10 <HAL_RCC_GetPCLK2Freq>
 800ca82:	6863      	ldr	r3, [r4, #4]
 800ca84:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800ca88:	005b      	lsls	r3, r3, #1
 800ca8a:	fb09 f000 	mul.w	r0, r9, r0
 800ca8e:	fbb0 f0f3 	udiv	r0, r0, r3
 800ca92:	fbb0 f0f8 	udiv	r0, r0, r8
 800ca96:	fb08 5610 	mls	r6, r8, r0, r5
 800ca9a:	f7ff f939 	bl	800bd10 <HAL_RCC_GetPCLK2Freq>
 800ca9e:	fbb7 f7f8 	udiv	r7, r7, r8
 800caa2:	6863      	ldr	r3, [r4, #4]
 800caa4:	00f6      	lsls	r6, r6, #3
 800caa6:	3632      	adds	r6, #50	@ 0x32
 800caa8:	fbb6 f6f8 	udiv	r6, r6, r8
 800caac:	0076      	lsls	r6, r6, #1
 800caae:	fb09 f500 	mul.w	r5, r9, r0
 800cab2:	005b      	lsls	r3, r3, #1
 800cab4:	013f      	lsls	r7, r7, #4
 800cab6:	f406 76f8 	and.w	r6, r6, #496	@ 0x1f0
 800caba:	fbb5 f5f3 	udiv	r5, r5, r3
 800cabe:	f7ff f927 	bl	800bd10 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800cac2:	6863      	ldr	r3, [r4, #4]
 800cac4:	6822      	ldr	r2, [r4, #0]
 800cac6:	005b      	lsls	r3, r3, #1
 800cac8:	fb09 f000 	mul.w	r0, r9, r0
 800cacc:	fbb0 f0f3 	udiv	r0, r0, r3
 800cad0:	fbb0 f0f8 	udiv	r0, r0, r8
 800cad4:	fb08 5310 	mls	r3, r8, r0, r5
 800cad8:	00db      	lsls	r3, r3, #3
 800cada:	3332      	adds	r3, #50	@ 0x32
 800cadc:	fbb3 f3f8 	udiv	r3, r3, r8
 800cae0:	f003 0307 	and.w	r3, r3, #7
 800cae4:	443b      	add	r3, r7
 800cae6:	4433      	add	r3, r6
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800cae8:	6093      	str	r3, [r2, #8]
    }
  }
}
 800caea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800caee:	f7ff f8ff 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 800caf2:	6863      	ldr	r3, [r4, #4]
 800caf4:	f04f 0919 	mov.w	r9, #25
 800caf8:	fb09 f700 	mul.w	r7, r9, r0
 800cafc:	005b      	lsls	r3, r3, #1
 800cafe:	fbb7 f7f3 	udiv	r7, r7, r3
 800cb02:	f7ff f8f5 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 800cb06:	6863      	ldr	r3, [r4, #4]
 800cb08:	fb09 f500 	mul.w	r5, r9, r0
 800cb0c:	005b      	lsls	r3, r3, #1
 800cb0e:	fbb5 f5f3 	udiv	r5, r5, r3
 800cb12:	f7ff f8ed 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 800cb16:	6863      	ldr	r3, [r4, #4]
 800cb18:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800cb1c:	005b      	lsls	r3, r3, #1
 800cb1e:	fb09 f000 	mul.w	r0, r9, r0
 800cb22:	fbb0 f0f3 	udiv	r0, r0, r3
 800cb26:	fbb0 f0f8 	udiv	r0, r0, r8
 800cb2a:	fb08 5610 	mls	r6, r8, r0, r5
 800cb2e:	f7ff f8df 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 800cb32:	fbb7 f7f8 	udiv	r7, r7, r8
 800cb36:	6863      	ldr	r3, [r4, #4]
 800cb38:	00f6      	lsls	r6, r6, #3
 800cb3a:	3632      	adds	r6, #50	@ 0x32
 800cb3c:	fbb6 f6f8 	udiv	r6, r6, r8
 800cb40:	0076      	lsls	r6, r6, #1
 800cb42:	fb09 f500 	mul.w	r5, r9, r0
 800cb46:	005b      	lsls	r3, r3, #1
 800cb48:	013f      	lsls	r7, r7, #4
 800cb4a:	f406 76f8 	and.w	r6, r6, #496	@ 0x1f0
 800cb4e:	fbb5 f5f3 	udiv	r5, r5, r3
 800cb52:	f7ff f8cd 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 800cb56:	e7b4      	b.n	800cac2 <UART_SetConfig+0xba>
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800cb58:	4293      	cmp	r3, r2
 800cb5a:	d002      	beq.n	800cb62 <UART_SetConfig+0x15a>
 800cb5c:	4a3f      	ldr	r2, [pc, #252]	@ (800cc5c <UART_SetConfig+0x254>)
 800cb5e:	4293      	cmp	r3, r2
 800cb60:	d146      	bne.n	800cbf0 <UART_SetConfig+0x1e8>
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 800cb62:	f7ff f8d5 	bl	800bd10 <HAL_RCC_GetPCLK2Freq>
 800cb66:	6863      	ldr	r3, [r4, #4]
 800cb68:	f04f 0919 	mov.w	r9, #25
 800cb6c:	009b      	lsls	r3, r3, #2
 800cb6e:	fb09 f700 	mul.w	r7, r9, r0
 800cb72:	fbb7 f7f3 	udiv	r7, r7, r3
 800cb76:	f7ff f8cb 	bl	800bd10 <HAL_RCC_GetPCLK2Freq>
 800cb7a:	6863      	ldr	r3, [r4, #4]
 800cb7c:	fb09 f500 	mul.w	r5, r9, r0
 800cb80:	009b      	lsls	r3, r3, #2
 800cb82:	fbb5 f5f3 	udiv	r5, r5, r3
 800cb86:	f7ff f8c3 	bl	800bd10 <HAL_RCC_GetPCLK2Freq>
 800cb8a:	6863      	ldr	r3, [r4, #4]
 800cb8c:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800cb90:	009b      	lsls	r3, r3, #2
 800cb92:	fb09 f000 	mul.w	r0, r9, r0
 800cb96:	fbb0 f0f3 	udiv	r0, r0, r3
 800cb9a:	fbb0 f0f8 	udiv	r0, r0, r8
 800cb9e:	fb08 5610 	mls	r6, r8, r0, r5
 800cba2:	f7ff f8b5 	bl	800bd10 <HAL_RCC_GetPCLK2Freq>
 800cba6:	fbb7 f7f8 	udiv	r7, r7, r8
 800cbaa:	6863      	ldr	r3, [r4, #4]
 800cbac:	0136      	lsls	r6, r6, #4
 800cbae:	3632      	adds	r6, #50	@ 0x32
 800cbb0:	fb09 f500 	mul.w	r5, r9, r0
 800cbb4:	009b      	lsls	r3, r3, #2
 800cbb6:	fbb6 f6f8 	udiv	r6, r6, r8
 800cbba:	013f      	lsls	r7, r7, #4
 800cbbc:	f006 06f0 	and.w	r6, r6, #240	@ 0xf0
 800cbc0:	fbb5 f5f3 	udiv	r5, r5, r3
 800cbc4:	f7ff f8a4 	bl	800bd10 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800cbc8:	6863      	ldr	r3, [r4, #4]
 800cbca:	6822      	ldr	r2, [r4, #0]
 800cbcc:	009b      	lsls	r3, r3, #2
 800cbce:	fb09 f000 	mul.w	r0, r9, r0
 800cbd2:	fbb0 f0f3 	udiv	r0, r0, r3
 800cbd6:	fbb0 f0f8 	udiv	r0, r0, r8
 800cbda:	fb08 5310 	mls	r3, r8, r0, r5
 800cbde:	011b      	lsls	r3, r3, #4
 800cbe0:	3332      	adds	r3, #50	@ 0x32
 800cbe2:	fbb3 f3f8 	udiv	r3, r3, r8
 800cbe6:	f003 030f 	and.w	r3, r3, #15
 800cbea:	4333      	orrs	r3, r6
 800cbec:	443b      	add	r3, r7
 800cbee:	e77b      	b.n	800cae8 <UART_SetConfig+0xe0>
 800cbf0:	f7ff f87e 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 800cbf4:	6863      	ldr	r3, [r4, #4]
 800cbf6:	f04f 0919 	mov.w	r9, #25
 800cbfa:	fb09 f700 	mul.w	r7, r9, r0
 800cbfe:	009b      	lsls	r3, r3, #2
 800cc00:	fbb7 f7f3 	udiv	r7, r7, r3
 800cc04:	f7ff f874 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 800cc08:	6863      	ldr	r3, [r4, #4]
 800cc0a:	fb09 f500 	mul.w	r5, r9, r0
 800cc0e:	009b      	lsls	r3, r3, #2
 800cc10:	fbb5 f5f3 	udiv	r5, r5, r3
 800cc14:	f7ff f86c 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 800cc18:	6863      	ldr	r3, [r4, #4]
 800cc1a:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800cc1e:	009b      	lsls	r3, r3, #2
 800cc20:	fb09 f000 	mul.w	r0, r9, r0
 800cc24:	fbb0 f0f3 	udiv	r0, r0, r3
 800cc28:	fbb0 f0f8 	udiv	r0, r0, r8
 800cc2c:	fb08 5610 	mls	r6, r8, r0, r5
 800cc30:	f7ff f85e 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 800cc34:	fbb7 f7f8 	udiv	r7, r7, r8
 800cc38:	6863      	ldr	r3, [r4, #4]
 800cc3a:	0136      	lsls	r6, r6, #4
 800cc3c:	fb09 f500 	mul.w	r5, r9, r0
 800cc40:	009b      	lsls	r3, r3, #2
 800cc42:	013f      	lsls	r7, r7, #4
 800cc44:	3632      	adds	r6, #50	@ 0x32
 800cc46:	fbb5 f5f3 	udiv	r5, r5, r3
 800cc4a:	fbb6 f6f8 	udiv	r6, r6, r8
 800cc4e:	f006 06f0 	and.w	r6, r6, #240	@ 0xf0
 800cc52:	f7ff f84d 	bl	800bcf0 <HAL_RCC_GetPCLK1Freq>
 800cc56:	e7b7      	b.n	800cbc8 <UART_SetConfig+0x1c0>
 800cc58:	40011000 	.word	0x40011000
 800cc5c:	40011400 	.word	0x40011400

0800cc60 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
 800cc60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc62:	4604      	mov	r4, r0
 800cc64:	460e      	mov	r6, r1
 800cc66:	4617      	mov	r7, r2
 800cc68:	461d      	mov	r5, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800cc6a:	6822      	ldr	r2, [r4, #0]
 800cc6c:	6813      	ldr	r3, [r2, #0]
 800cc6e:	ea36 0303 	bics.w	r3, r6, r3
 800cc72:	d101      	bne.n	800cc78 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 800cc74:	2000      	movs	r0, #0
 800cc76:	e014      	b.n	800cca2 <UART_WaitOnFlagUntilTimeout.constprop.0+0x42>
    if (Timeout != HAL_MAX_DELAY)
 800cc78:	1c6b      	adds	r3, r5, #1
 800cc7a:	d0f7      	beq.n	800cc6c <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800cc7c:	b995      	cbnz	r5, 800cca4 <UART_WaitOnFlagUntilTimeout.constprop.0+0x44>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800cc7e:	6823      	ldr	r3, [r4, #0]
 800cc80:	68da      	ldr	r2, [r3, #12]
 800cc82:	f422 72d0 	bic.w	r2, r2, #416	@ 0x1a0
 800cc86:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800cc88:	695a      	ldr	r2, [r3, #20]
 800cc8a:	f022 0201 	bic.w	r2, r2, #1
 800cc8e:	615a      	str	r2, [r3, #20]
        huart->gState  = HAL_UART_STATE_READY;
 800cc90:	2320      	movs	r3, #32
 800cc92:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
        huart->RxState = HAL_UART_STATE_READY;
 800cc96:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
        __HAL_UNLOCK(huart);
 800cc9a:	2300      	movs	r3, #0
 800cc9c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800cca0:	2003      	movs	r0, #3
}
 800cca2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800cca4:	f7fd faba 	bl	800a21c <HAL_GetTick>
 800cca8:	1bc0      	subs	r0, r0, r7
 800ccaa:	4285      	cmp	r5, r0
 800ccac:	d2dd      	bcs.n	800cc6a <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 800ccae:	e7e6      	b.n	800cc7e <UART_WaitOnFlagUntilTimeout.constprop.0+0x1e>

0800ccb0 <HAL_UART_MspInit>:
}
 800ccb0:	4770      	bx	lr

0800ccb2 <HAL_UART_Init>:
{
 800ccb2:	b510      	push	{r4, lr}
  if (huart == NULL)
 800ccb4:	4604      	mov	r4, r0
 800ccb6:	b340      	cbz	r0, 800cd0a <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 800ccb8:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800ccbc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800ccc0:	b91b      	cbnz	r3, 800ccca <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 800ccc2:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    HAL_UART_MspInit(huart);
 800ccc6:	f7ff fff3 	bl	800ccb0 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800ccca:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800cccc:	2324      	movs	r3, #36	@ 0x24
 800ccce:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  __HAL_UART_DISABLE(huart);
 800ccd2:	68d3      	ldr	r3, [r2, #12]
 800ccd4:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800ccd8:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800ccda:	4620      	mov	r0, r4
 800ccdc:	f7ff fe94 	bl	800ca08 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800cce0:	6823      	ldr	r3, [r4, #0]
 800cce2:	691a      	ldr	r2, [r3, #16]
 800cce4:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800cce8:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800ccea:	695a      	ldr	r2, [r3, #20]
 800ccec:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800ccf0:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 800ccf2:	68da      	ldr	r2, [r3, #12]
 800ccf4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800ccf8:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ccfa:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800ccfc:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ccfe:	63e0      	str	r0, [r4, #60]	@ 0x3c
  huart->gState = HAL_UART_STATE_READY;
 800cd00:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  huart->RxState = HAL_UART_STATE_READY;
 800cd04:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
}
 800cd08:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800cd0a:	2001      	movs	r0, #1
 800cd0c:	e7fc      	b.n	800cd08 <HAL_UART_Init+0x56>

0800cd0e <HAL_UART_Transmit>:
{
 800cd0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd12:	461f      	mov	r7, r3
  if (huart->gState == HAL_UART_STATE_READY)
 800cd14:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800cd18:	2b20      	cmp	r3, #32
{
 800cd1a:	4604      	mov	r4, r0
 800cd1c:	460d      	mov	r5, r1
 800cd1e:	4690      	mov	r8, r2
  if (huart->gState == HAL_UART_STATE_READY)
 800cd20:	d14f      	bne.n	800cdc2 <HAL_UART_Transmit+0xb4>
    if ((pData == NULL) || (Size == 0U))
 800cd22:	2900      	cmp	r1, #0
 800cd24:	d04b      	beq.n	800cdbe <HAL_UART_Transmit+0xb0>
 800cd26:	2a00      	cmp	r2, #0
 800cd28:	d049      	beq.n	800cdbe <HAL_UART_Transmit+0xb0>
    __HAL_LOCK(huart);
 800cd2a:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800cd2e:	2b01      	cmp	r3, #1
 800cd30:	d047      	beq.n	800cdc2 <HAL_UART_Transmit+0xb4>
 800cd32:	2301      	movs	r3, #1
 800cd34:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800cd38:	2300      	movs	r3, #0
 800cd3a:	63c3      	str	r3, [r0, #60]	@ 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800cd3c:	2321      	movs	r3, #33	@ 0x21
 800cd3e:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
    tickstart = HAL_GetTick();
 800cd42:	f7fd fa6b 	bl	800a21c <HAL_GetTick>
    huart->TxXferSize = Size;
 800cd46:	f8a4 8024 	strh.w	r8, [r4, #36]	@ 0x24
    tickstart = HAL_GetTick();
 800cd4a:	4606      	mov	r6, r0
    huart->TxXferCount = Size;
 800cd4c:	f8a4 8026 	strh.w	r8, [r4, #38]	@ 0x26
    while (huart->TxXferCount > 0U)
 800cd50:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800cd52:	b29b      	uxth	r3, r3
 800cd54:	b963      	cbnz	r3, 800cd70 <HAL_UART_Transmit+0x62>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 800cd56:	463b      	mov	r3, r7
 800cd58:	4632      	mov	r2, r6
 800cd5a:	2140      	movs	r1, #64	@ 0x40
 800cd5c:	4620      	mov	r0, r4
 800cd5e:	f7ff ff7f 	bl	800cc60 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800cd62:	b9a8      	cbnz	r0, 800cd90 <HAL_UART_Transmit+0x82>
    huart->gState = HAL_UART_STATE_READY;
 800cd64:	2320      	movs	r3, #32
 800cd66:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
    __HAL_UNLOCK(huart);
 800cd6a:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
    return HAL_OK;
 800cd6e:	e010      	b.n	800cd92 <HAL_UART_Transmit+0x84>
      huart->TxXferCount--;
 800cd70:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800cd72:	3b01      	subs	r3, #1
 800cd74:	b29b      	uxth	r3, r3
 800cd76:	84e3      	strh	r3, [r4, #38]	@ 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800cd78:	68a3      	ldr	r3, [r4, #8]
 800cd7a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800cd7e:	4632      	mov	r2, r6
 800cd80:	463b      	mov	r3, r7
 800cd82:	f04f 0180 	mov.w	r1, #128	@ 0x80
 800cd86:	4620      	mov	r0, r4
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800cd88:	d110      	bne.n	800cdac <HAL_UART_Transmit+0x9e>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800cd8a:	f7ff ff69 	bl	800cc60 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800cd8e:	b110      	cbz	r0, 800cd96 <HAL_UART_Transmit+0x88>
          return HAL_TIMEOUT;
 800cd90:	2003      	movs	r0, #3
}
 800cd92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 800cd96:	882b      	ldrh	r3, [r5, #0]
 800cd98:	6822      	ldr	r2, [r4, #0]
 800cd9a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800cd9e:	6053      	str	r3, [r2, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 800cda0:	6923      	ldr	r3, [r4, #16]
 800cda2:	b90b      	cbnz	r3, 800cda8 <HAL_UART_Transmit+0x9a>
          pData += 2U;
 800cda4:	3502      	adds	r5, #2
 800cda6:	e7d3      	b.n	800cd50 <HAL_UART_Transmit+0x42>
          pData += 1U;
 800cda8:	3501      	adds	r5, #1
 800cdaa:	e7d1      	b.n	800cd50 <HAL_UART_Transmit+0x42>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800cdac:	f7ff ff58 	bl	800cc60 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800cdb0:	2800      	cmp	r0, #0
 800cdb2:	d1ed      	bne.n	800cd90 <HAL_UART_Transmit+0x82>
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 800cdb4:	6823      	ldr	r3, [r4, #0]
 800cdb6:	f815 2b01 	ldrb.w	r2, [r5], #1
 800cdba:	605a      	str	r2, [r3, #4]
 800cdbc:	e7c8      	b.n	800cd50 <HAL_UART_Transmit+0x42>
      return  HAL_ERROR;
 800cdbe:	2001      	movs	r0, #1
 800cdc0:	e7e7      	b.n	800cd92 <HAL_UART_Transmit+0x84>
    __HAL_LOCK(huart);
 800cdc2:	2002      	movs	r0, #2
 800cdc4:	e7e5      	b.n	800cd92 <HAL_UART_Transmit+0x84>

0800cdc6 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800cdc6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cdca:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 800cdce:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 800cdd2:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 800cdd6:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 800cdda:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cdde:	6809      	ldr	r1, [r1, #0]
 800cde0:	ea43 0308 	orr.w	r3, r3, r8
 800cde4:	b981      	cbnz	r1, 800ce08 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cde6:	ea43 030e 	orr.w	r3, r3, lr
 800cdea:	4313      	orrs	r3, r2
 800cdec:	ea43 030c 	orr.w	r3, r3, ip
 800cdf0:	433b      	orrs	r3, r7
 800cdf2:	6801      	ldr	r1, [r0, #0]
 800cdf4:	4333      	orrs	r3, r6
 800cdf6:	432b      	orrs	r3, r5
 800cdf8:	4323      	orrs	r3, r4
 800cdfa:	f36f 010e 	bfc	r1, #0, #15
 800cdfe:	430b      	orrs	r3, r1
 800ce00:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800ce02:	2000      	movs	r0, #0
 800ce04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800ce08:	6801      	ldr	r1, [r0, #0]
 800ce0a:	ea43 030e 	orr.w	r3, r3, lr
 800ce0e:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 800ce12:	430b      	orrs	r3, r1
 800ce14:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800ce16:	ea42 030c 	orr.w	r3, r2, ip
 800ce1a:	6841      	ldr	r1, [r0, #4]
 800ce1c:	433b      	orrs	r3, r7
 800ce1e:	4333      	orrs	r3, r6
 800ce20:	432b      	orrs	r3, r5
 800ce22:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 800ce26:	4323      	orrs	r3, r4
 800ce28:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800ce2c:	4313      	orrs	r3, r2
 800ce2e:	6043      	str	r3, [r0, #4]
 800ce30:	e7e7      	b.n	800ce02 <FMC_SDRAM_Init+0x3c>

0800ce32 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce32:	68cb      	ldr	r3, [r1, #12]
 800ce34:	f103 3cff 	add.w	ip, r3, #4294967295
 800ce38:	694b      	ldr	r3, [r1, #20]
{
 800ce3a:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce3c:	684c      	ldr	r4, [r1, #4]
 800ce3e:	688f      	ldr	r7, [r1, #8]
 800ce40:	690e      	ldr	r6, [r1, #16]
 800ce42:	698d      	ldr	r5, [r1, #24]
 800ce44:	6809      	ldr	r1, [r1, #0]
 800ce46:	3b01      	subs	r3, #1
 800ce48:	051b      	lsls	r3, r3, #20
 800ce4a:	3c01      	subs	r4, #1
 800ce4c:	3f01      	subs	r7, #1
 800ce4e:	3e01      	subs	r6, #1
 800ce50:	3d01      	subs	r5, #1
 800ce52:	0124      	lsls	r4, r4, #4
 800ce54:	023f      	lsls	r7, r7, #8
 800ce56:	0436      	lsls	r6, r6, #16
 800ce58:	062d      	lsls	r5, r5, #24
 800ce5a:	3901      	subs	r1, #1
 800ce5c:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800ce60:	b95a      	cbnz	r2, 800ce7a <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce62:	430b      	orrs	r3, r1
 800ce64:	4323      	orrs	r3, r4
 800ce66:	6882      	ldr	r2, [r0, #8]
 800ce68:	433b      	orrs	r3, r7
 800ce6a:	4333      	orrs	r3, r6
 800ce6c:	432b      	orrs	r3, r5
 800ce6e:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800ce72:	4313      	orrs	r3, r2
 800ce74:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800ce76:	2000      	movs	r0, #0
 800ce78:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce7a:	6882      	ldr	r2, [r0, #8]
 800ce7c:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800ce80:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 800ce84:	4313      	orrs	r3, r2
 800ce86:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ce88:	ea44 0307 	orr.w	r3, r4, r7
 800ce8c:	68c2      	ldr	r2, [r0, #12]
 800ce8e:	430b      	orrs	r3, r1
 800ce90:	4333      	orrs	r3, r6
 800ce92:	432b      	orrs	r3, r5
 800ce94:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800ce98:	4313      	orrs	r3, r2
 800ce9a:	60c3      	str	r3, [r0, #12]
 800ce9c:	e7eb      	b.n	800ce76 <FMC_SDRAM_Timing_Init+0x44>

0800ce9e <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800ce9e:	b570      	push	{r4, r5, r6, lr}
 800cea0:	4604      	mov	r4, r0
 800cea2:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cea4:	6902      	ldr	r2, [r0, #16]
 800cea6:	e9d1 3000 	ldrd	r3, r0, [r1]
 800ceaa:	4303      	orrs	r3, r0
 800ceac:	68c8      	ldr	r0, [r1, #12]
 800ceae:	f36f 0215 	bfc	r2, #0, #22
 800ceb2:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800ceb6:	4313      	orrs	r3, r2
 800ceb8:	688a      	ldr	r2, [r1, #8]
 800ceba:	3a01      	subs	r2, #1
 800cebc:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800cec0:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cec2:	f7fd f9ab 	bl	800a21c <HAL_GetTick>
 800cec6:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cec8:	69a0      	ldr	r0, [r4, #24]
 800ceca:	f010 0020 	ands.w	r0, r0, #32
 800cece:	d003      	beq.n	800ced8 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800ced0:	1c6b      	adds	r3, r5, #1
 800ced2:	d0f9      	beq.n	800cec8 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800ced4:	b90d      	cbnz	r5, 800ceda <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 800ced6:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 800ced8:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800ceda:	f7fd f99f 	bl	800a21c <HAL_GetTick>
 800cede:	1b80      	subs	r0, r0, r6
 800cee0:	42a8      	cmp	r0, r5
 800cee2:	d9f1      	bls.n	800cec8 <FMC_SDRAM_SendCommand+0x2a>
 800cee4:	e7f7      	b.n	800ced6 <FMC_SDRAM_SendCommand+0x38>

0800cee6 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cee6:	6943      	ldr	r3, [r0, #20]
 800cee8:	f36f 034d 	bfc	r3, #1, #13
 800ceec:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 800cef0:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 800cef2:	2000      	movs	r0, #0
 800cef4:	4770      	bx	lr

0800cef6 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cef6:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cef8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800cefc:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cefe:	f001 fded 	bl	800eadc <xTaskGetSchedulerState>
 800cf02:	2801      	cmp	r0, #1
 800cf04:	d003      	beq.n	800cf0e <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cf06:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cf0a:	f000 bbdb 	b.w	800d6c4 <xPortSysTickHandler>
}
 800cf0e:	bd08      	pop	{r3, pc}

0800cf10 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cf10:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cf14:	b92b      	cbnz	r3, 800cf22 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cf16:	4b06      	ldr	r3, [pc, #24]	@ (800cf30 <osKernelInitialize+0x20>)
 800cf18:	6818      	ldr	r0, [r3, #0]
 800cf1a:	b928      	cbnz	r0, 800cf28 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cf1c:	2201      	movs	r2, #1
 800cf1e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cf20:	4770      	bx	lr
    stat = osErrorISR;
 800cf22:	f06f 0005 	mvn.w	r0, #5
 800cf26:	4770      	bx	lr
    } else {
      stat = osError;
 800cf28:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cf2c:	4770      	bx	lr
 800cf2e:	bf00      	nop
 800cf30:	200038c0 	.word	0x200038c0

0800cf34 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cf34:	b510      	push	{r4, lr}
 800cf36:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cf3a:	b95c      	cbnz	r4, 800cf54 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cf3c:	4b08      	ldr	r3, [pc, #32]	@ (800cf60 <osKernelStart+0x2c>)
 800cf3e:	681a      	ldr	r2, [r3, #0]
 800cf40:	2a01      	cmp	r2, #1
 800cf42:	d10a      	bne.n	800cf5a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cf44:	4a07      	ldr	r2, [pc, #28]	@ (800cf64 <osKernelStart+0x30>)
 800cf46:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cf48:	2202      	movs	r2, #2
 800cf4a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cf4c:	f001 fb44 	bl	800e5d8 <vTaskStartScheduler>
      stat = osOK;
 800cf50:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cf52:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cf54:	f06f 0005 	mvn.w	r0, #5
 800cf58:	e7fb      	b.n	800cf52 <osKernelStart+0x1e>
      stat = osError;
 800cf5a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800cf5e:	e7f8      	b.n	800cf52 <osKernelStart+0x1e>
 800cf60:	200038c0 	.word	0x200038c0
 800cf64:	e000ed00 	.word	0xe000ed00

0800cf68 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cf68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf6a:	b087      	sub	sp, #28
 800cf6c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cf6e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cf70:	460b      	mov	r3, r1
  hTask = NULL;
 800cf72:	9205      	str	r2, [sp, #20]
 800cf74:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cf78:	b9fa      	cbnz	r2, 800cfba <osThreadNew+0x52>
 800cf7a:	b1f0      	cbz	r0, 800cfba <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cf7c:	b354      	cbz	r4, 800cfd4 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cf7e:	69a5      	ldr	r5, [r4, #24]
 800cf80:	b125      	cbz	r5, 800cf8c <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cf82:	1e69      	subs	r1, r5, #1
 800cf84:	2937      	cmp	r1, #55	@ 0x37
 800cf86:	d902      	bls.n	800cf8e <osThreadNew+0x26>
        return (NULL);
 800cf88:	2000      	movs	r0, #0
 800cf8a:	e017      	b.n	800cfbc <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 800cf8c:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cf8e:	6862      	ldr	r2, [r4, #4]
 800cf90:	07d2      	lsls	r2, r2, #31
 800cf92:	d4f9      	bmi.n	800cf88 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 800cf94:	6966      	ldr	r6, [r4, #20]
 800cf96:	b19e      	cbz	r6, 800cfc0 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cf98:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cf9a:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 800cf9e:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cfa0:	b187      	cbz	r7, 800cfc4 <osThreadNew+0x5c>
 800cfa2:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 800cfa6:	d908      	bls.n	800cfba <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cfa8:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cfaa:	b134      	cbz	r4, 800cfba <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cfac:	b12e      	cbz	r6, 800cfba <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cfae:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800cfb2:	9500      	str	r5, [sp, #0]
 800cfb4:	f001 faa9 	bl	800e50a <xTaskCreateStatic>
 800cfb8:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800cfba:	9805      	ldr	r0, [sp, #20]
}
 800cfbc:	b007      	add	sp, #28
 800cfbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800cfc0:	2280      	movs	r2, #128	@ 0x80
 800cfc2:	e7ea      	b.n	800cf9a <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cfc4:	f1bc 0f00 	cmp.w	ip, #0
 800cfc8:	d1f7      	bne.n	800cfba <osThreadNew+0x52>
 800cfca:	6924      	ldr	r4, [r4, #16]
 800cfcc:	2c00      	cmp	r4, #0
 800cfce:	d1f4      	bne.n	800cfba <osThreadNew+0x52>
 800cfd0:	460c      	mov	r4, r1
 800cfd2:	e001      	b.n	800cfd8 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 800cfd4:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 800cfd6:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cfd8:	a905      	add	r1, sp, #20
 800cfda:	e9cd 5100 	strd	r5, r1, [sp]
 800cfde:	b292      	uxth	r2, r2
 800cfe0:	4621      	mov	r1, r4
 800cfe2:	f001 faca 	bl	800e57a <xTaskCreate>
 800cfe6:	2801      	cmp	r0, #1
            hTask = NULL;
 800cfe8:	bf1c      	itt	ne
 800cfea:	2300      	movne	r3, #0
 800cfec:	9305      	strne	r3, [sp, #20]
 800cfee:	e7e4      	b.n	800cfba <osThreadNew+0x52>

0800cff0 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cff0:	b508      	push	{r3, lr}
 800cff2:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cff6:	b922      	cbnz	r2, 800d002 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cff8:	b108      	cbz	r0, 800cffe <osDelay+0xe>
      vTaskDelay(ticks);
 800cffa:	f001 fc4b 	bl	800e894 <vTaskDelay>
    stat = osOK;
 800cffe:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800d000:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 800d002:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 800d006:	e7fb      	b.n	800d000 <osDelay+0x10>

0800d008 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d008:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d00a:	4604      	mov	r4, r0
 800d00c:	460e      	mov	r6, r1
 800d00e:	4615      	mov	r5, r2
 800d010:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d014:	b942      	cbnz	r2, 800d028 <osSemaphoreNew+0x20>
 800d016:	b138      	cbz	r0, 800d028 <osSemaphoreNew+0x20>
 800d018:	4288      	cmp	r0, r1
 800d01a:	d305      	bcc.n	800d028 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800d01c:	b155      	cbz	r5, 800d034 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d01e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800d022:	b12b      	cbz	r3, 800d030 <osSemaphoreNew+0x28>
 800d024:	2f4f      	cmp	r7, #79	@ 0x4f
 800d026:	d822      	bhi.n	800d06e <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 800d028:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d02a:	4620      	mov	r0, r4
 800d02c:	b003      	add	sp, #12
 800d02e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d030:	2f00      	cmp	r7, #0
 800d032:	d1f9      	bne.n	800d028 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 800d034:	2c01      	cmp	r4, #1
 800d036:	d00c      	beq.n	800d052 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d038:	4620      	mov	r0, r4
 800d03a:	4631      	mov	r1, r6
 800d03c:	f000 fd7a 	bl	800db34 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d040:	4604      	mov	r4, r0
 800d042:	2800      	cmp	r0, #0
 800d044:	d0f0      	beq.n	800d028 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 800d046:	b985      	cbnz	r5, 800d06a <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 800d048:	4629      	mov	r1, r5
 800d04a:	4620      	mov	r0, r4
 800d04c:	f001 f898 	bl	800e180 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800d050:	e7eb      	b.n	800d02a <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 800d052:	2203      	movs	r2, #3
 800d054:	2100      	movs	r1, #0
 800d056:	2001      	movs	r0, #1
 800d058:	f000 fd23 	bl	800daa2 <xQueueGenericCreate>
 800d05c:	e00e      	b.n	800d07c <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d05e:	461a      	mov	r2, r3
 800d060:	f000 fd46 	bl	800daf0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800d064:	4604      	mov	r4, r0
 800d066:	2800      	cmp	r0, #0
 800d068:	d0de      	beq.n	800d028 <osSemaphoreNew+0x20>
          name = attr->name;
 800d06a:	682d      	ldr	r5, [r5, #0]
 800d06c:	e7ec      	b.n	800d048 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 800d06e:	2801      	cmp	r0, #1
 800d070:	d1f5      	bne.n	800d05e <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d072:	2103      	movs	r1, #3
 800d074:	9100      	str	r1, [sp, #0]
 800d076:	4611      	mov	r1, r2
 800d078:	f000 fcc5 	bl	800da06 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800d07c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d07e:	2800      	cmp	r0, #0
 800d080:	d0d2      	beq.n	800d028 <osSemaphoreNew+0x20>
 800d082:	2e00      	cmp	r6, #0
 800d084:	d0df      	beq.n	800d046 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d086:	2300      	movs	r3, #0
 800d088:	461a      	mov	r2, r3
 800d08a:	4619      	mov	r1, r3
 800d08c:	f000 fd70 	bl	800db70 <xQueueGenericSend>
 800d090:	2801      	cmp	r0, #1
 800d092:	d0d8      	beq.n	800d046 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 800d094:	4620      	mov	r0, r4
 800d096:	f001 f89d 	bl	800e1d4 <vQueueDelete>
      if (hSemaphore != NULL) {
 800d09a:	e7c5      	b.n	800d028 <osSemaphoreNew+0x20>

0800d09c <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d09c:	b513      	push	{r0, r1, r4, lr}
 800d09e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d0a0:	b328      	cbz	r0, 800d0ee <osSemaphoreAcquire+0x52>
 800d0a2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d0a6:	b1cb      	cbz	r3, 800d0dc <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d0a8:	bb09      	cbnz	r1, 800d0ee <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d0aa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d0ac:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d0ae:	f001 f81a 	bl	800e0e6 <xQueueReceiveFromISR>
 800d0b2:	2801      	cmp	r0, #1
 800d0b4:	d003      	beq.n	800d0be <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 800d0b6:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800d0ba:	b002      	add	sp, #8
 800d0bc:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d0be:	9b01      	ldr	r3, [sp, #4]
 800d0c0:	b90b      	cbnz	r3, 800d0c6 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 800d0c2:	2000      	movs	r0, #0
 800d0c4:	e7f9      	b.n	800d0ba <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 800d0c6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d0ca:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d0ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d0d2:	f3bf 8f4f 	dsb	sy
 800d0d6:	f3bf 8f6f 	isb	sy
 800d0da:	e7f2      	b.n	800d0c2 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d0dc:	f000 ff46 	bl	800df6c <xQueueSemaphoreTake>
 800d0e0:	2801      	cmp	r0, #1
 800d0e2:	d0ee      	beq.n	800d0c2 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 800d0e4:	2c00      	cmp	r4, #0
 800d0e6:	d0e6      	beq.n	800d0b6 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 800d0e8:	f06f 0001 	mvn.w	r0, #1
 800d0ec:	e7e5      	b.n	800d0ba <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800d0ee:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800d0f2:	e7e2      	b.n	800d0ba <osSemaphoreAcquire+0x1e>

0800d0f4 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d0f4:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d0f6:	b318      	cbz	r0, 800d140 <osSemaphoreRelease+0x4c>
 800d0f8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d0fc:	b1cb      	cbz	r3, 800d132 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800d0fe:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d100:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d102:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d104:	f000 fe43 	bl	800dd8e <xQueueGiveFromISR>
 800d108:	2801      	cmp	r0, #1
 800d10a:	d004      	beq.n	800d116 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800d10c:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 800d110:	b003      	add	sp, #12
 800d112:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 800d116:	9b01      	ldr	r3, [sp, #4]
 800d118:	b14b      	cbz	r3, 800d12e <osSemaphoreRelease+0x3a>
 800d11a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d11e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d122:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d126:	f3bf 8f4f 	dsb	sy
 800d12a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d12e:	2000      	movs	r0, #0
 800d130:	e7ee      	b.n	800d110 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d132:	461a      	mov	r2, r3
 800d134:	4619      	mov	r1, r3
 800d136:	f000 fd1b 	bl	800db70 <xQueueGenericSend>
 800d13a:	2801      	cmp	r0, #1
 800d13c:	d0f7      	beq.n	800d12e <osSemaphoreRelease+0x3a>
 800d13e:	e7e5      	b.n	800d10c <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 800d140:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800d144:	e7e4      	b.n	800d110 <osSemaphoreRelease+0x1c>

0800d146 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d146:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d148:	4605      	mov	r5, r0
 800d14a:	460e      	mov	r6, r1
 800d14c:	4614      	mov	r4, r2
 800d14e:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d152:	b11f      	cbz	r7, 800d15c <osMessageQueueNew+0x16>
  hQueue = NULL;
 800d154:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d156:	4628      	mov	r0, r5
 800d158:	b003      	add	sp, #12
 800d15a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d15c:	2800      	cmp	r0, #0
 800d15e:	d0f9      	beq.n	800d154 <osMessageQueueNew+0xe>
 800d160:	2900      	cmp	r1, #0
 800d162:	d0f7      	beq.n	800d154 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800d164:	b1da      	cbz	r2, 800d19e <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d166:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800d16a:	b183      	cbz	r3, 800d18e <osMessageQueueNew+0x48>
 800d16c:	2a4f      	cmp	r2, #79	@ 0x4f
 800d16e:	d9f1      	bls.n	800d154 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d170:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d172:	2a00      	cmp	r2, #0
 800d174:	d0ee      	beq.n	800d154 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d176:	6966      	ldr	r6, [r4, #20]
 800d178:	434d      	muls	r5, r1
 800d17a:	42ae      	cmp	r6, r5
 800d17c:	d3ea      	bcc.n	800d154 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d17e:	9700      	str	r7, [sp, #0]
 800d180:	f000 fc41 	bl	800da06 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d184:	4605      	mov	r5, r0
 800d186:	2800      	cmp	r0, #0
 800d188:	d0e4      	beq.n	800d154 <osMessageQueueNew+0xe>
        name = attr->name;
 800d18a:	6824      	ldr	r4, [r4, #0]
 800d18c:	e011      	b.n	800d1b2 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d18e:	2a00      	cmp	r2, #0
 800d190:	d1e0      	bne.n	800d154 <osMessageQueueNew+0xe>
 800d192:	6923      	ldr	r3, [r4, #16]
 800d194:	2b00      	cmp	r3, #0
 800d196:	d1dd      	bne.n	800d154 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d198:	6963      	ldr	r3, [r4, #20]
 800d19a:	2b00      	cmp	r3, #0
 800d19c:	d1da      	bne.n	800d154 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d19e:	4628      	mov	r0, r5
 800d1a0:	2200      	movs	r2, #0
 800d1a2:	4631      	mov	r1, r6
 800d1a4:	f000 fc7d 	bl	800daa2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d1a8:	4605      	mov	r5, r0
 800d1aa:	2800      	cmp	r0, #0
 800d1ac:	d0d2      	beq.n	800d154 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800d1ae:	2c00      	cmp	r4, #0
 800d1b0:	d1eb      	bne.n	800d18a <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800d1b2:	4621      	mov	r1, r4
 800d1b4:	4628      	mov	r0, r5
 800d1b6:	f000 ffe3 	bl	800e180 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d1ba:	e7cc      	b.n	800d156 <osMessageQueueNew+0x10>

0800d1bc <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d1bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d1be:	461c      	mov	r4, r3
 800d1c0:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d1c4:	b1de      	cbz	r6, 800d1fe <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d1c6:	b338      	cbz	r0, 800d218 <osMessageQueuePut+0x5c>
 800d1c8:	b331      	cbz	r1, 800d218 <osMessageQueuePut+0x5c>
 800d1ca:	bb2b      	cbnz	r3, 800d218 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d1cc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d1ce:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d1d0:	f000 fd80 	bl	800dcd4 <xQueueGenericSendFromISR>
 800d1d4:	2801      	cmp	r0, #1
 800d1d6:	d003      	beq.n	800d1e0 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 800d1d8:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800d1dc:	b002      	add	sp, #8
 800d1de:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800d1e0:	9b01      	ldr	r3, [sp, #4]
 800d1e2:	b90b      	cbnz	r3, 800d1e8 <osMessageQueuePut+0x2c>
  stat = osOK;
 800d1e4:	2000      	movs	r0, #0
 800d1e6:	e7f9      	b.n	800d1dc <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 800d1e8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d1ec:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d1f0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d1f4:	f3bf 8f4f 	dsb	sy
 800d1f8:	f3bf 8f6f 	isb	sy
 800d1fc:	e7f2      	b.n	800d1e4 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d1fe:	b158      	cbz	r0, 800d218 <osMessageQueuePut+0x5c>
 800d200:	b151      	cbz	r1, 800d218 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d202:	4633      	mov	r3, r6
 800d204:	4622      	mov	r2, r4
 800d206:	f000 fcb3 	bl	800db70 <xQueueGenericSend>
 800d20a:	2801      	cmp	r0, #1
 800d20c:	d0ea      	beq.n	800d1e4 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800d20e:	2c00      	cmp	r4, #0
 800d210:	d0e2      	beq.n	800d1d8 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 800d212:	f06f 0001 	mvn.w	r0, #1
 800d216:	e7e1      	b.n	800d1dc <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 800d218:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800d21c:	e7de      	b.n	800d1dc <osMessageQueuePut+0x20>

0800d21e <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d21e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d220:	461c      	mov	r4, r3
 800d222:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d226:	b1db      	cbz	r3, 800d260 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d228:	b330      	cbz	r0, 800d278 <osMessageQueueGet+0x5a>
 800d22a:	b329      	cbz	r1, 800d278 <osMessageQueueGet+0x5a>
 800d22c:	bb24      	cbnz	r4, 800d278 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d22e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d230:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d232:	f000 ff58 	bl	800e0e6 <xQueueReceiveFromISR>
 800d236:	2801      	cmp	r0, #1
 800d238:	d003      	beq.n	800d242 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 800d23a:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800d23e:	b003      	add	sp, #12
 800d240:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800d242:	9b01      	ldr	r3, [sp, #4]
 800d244:	b90b      	cbnz	r3, 800d24a <osMessageQueueGet+0x2c>
  stat = osOK;
 800d246:	2000      	movs	r0, #0
 800d248:	e7f9      	b.n	800d23e <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 800d24a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d24e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d252:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d256:	f3bf 8f4f 	dsb	sy
 800d25a:	f3bf 8f6f 	isb	sy
 800d25e:	e7f2      	b.n	800d246 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d260:	b150      	cbz	r0, 800d278 <osMessageQueueGet+0x5a>
 800d262:	b149      	cbz	r1, 800d278 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d264:	4622      	mov	r2, r4
 800d266:	f000 fde3 	bl	800de30 <xQueueReceive>
 800d26a:	2801      	cmp	r0, #1
 800d26c:	d0eb      	beq.n	800d246 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 800d26e:	2c00      	cmp	r4, #0
 800d270:	d0e3      	beq.n	800d23a <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 800d272:	f06f 0001 	mvn.w	r0, #1
 800d276:	e7e2      	b.n	800d23e <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 800d278:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800d27c:	e7df      	b.n	800d23e <osMessageQueueGet+0x20>
	...

0800d280 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d280:	4b03      	ldr	r3, [pc, #12]	@ (800d290 <vApplicationGetIdleTaskMemory+0x10>)
 800d282:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d284:	4b03      	ldr	r3, [pc, #12]	@ (800d294 <vApplicationGetIdleTaskMemory+0x14>)
 800d286:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d288:	2380      	movs	r3, #128	@ 0x80
 800d28a:	6013      	str	r3, [r2, #0]
}
 800d28c:	4770      	bx	lr
 800d28e:	bf00      	nop
 800d290:	20003860 	.word	0x20003860
 800d294:	20003660 	.word	0x20003660

0800d298 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d298:	4b03      	ldr	r3, [pc, #12]	@ (800d2a8 <vApplicationGetTimerTaskMemory+0x10>)
 800d29a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d29c:	4b03      	ldr	r3, [pc, #12]	@ (800d2ac <vApplicationGetTimerTaskMemory+0x14>)
 800d29e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d2a0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800d2a4:	6013      	str	r3, [r2, #0]
}
 800d2a6:	4770      	bx	lr
 800d2a8:	20003600 	.word	0x20003600
 800d2ac:	20003200 	.word	0x20003200

0800d2b0 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800d2b0:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d2b2:	4b10      	ldr	r3, [pc, #64]	@ (800d2f4 <prvInsertBlockIntoFreeList+0x44>)
 800d2b4:	461a      	mov	r2, r3
 800d2b6:	681b      	ldr	r3, [r3, #0]
 800d2b8:	4283      	cmp	r3, r0
 800d2ba:	d3fb      	bcc.n	800d2b4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d2bc:	6854      	ldr	r4, [r2, #4]
 800d2be:	1911      	adds	r1, r2, r4
 800d2c0:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d2c2:	bf01      	itttt	eq
 800d2c4:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 800d2c6:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d2c8:	1909      	addeq	r1, r1, r4
 800d2ca:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d2cc:	6844      	ldr	r4, [r0, #4]
 800d2ce:	1901      	adds	r1, r0, r4
 800d2d0:	428b      	cmp	r3, r1
 800d2d2:	d10c      	bne.n	800d2ee <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d2d4:	4908      	ldr	r1, [pc, #32]	@ (800d2f8 <prvInsertBlockIntoFreeList+0x48>)
 800d2d6:	6809      	ldr	r1, [r1, #0]
 800d2d8:	428b      	cmp	r3, r1
 800d2da:	d003      	beq.n	800d2e4 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d2dc:	6859      	ldr	r1, [r3, #4]
 800d2de:	4421      	add	r1, r4
 800d2e0:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2e2:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800d2e4:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d2e6:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d2e8:	bf18      	it	ne
 800d2ea:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800d2ec:	bd10      	pop	{r4, pc}
 800d2ee:	4619      	mov	r1, r3
 800d2f0:	e7f8      	b.n	800d2e4 <prvInsertBlockIntoFreeList+0x34>
 800d2f2:	bf00      	nop
 800d2f4:	200038dc 	.word	0x200038dc
 800d2f8:	200038d8 	.word	0x200038d8

0800d2fc <pvPortMalloc>:
{
 800d2fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d300:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800d302:	f001 f9af 	bl	800e664 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800d306:	4942      	ldr	r1, [pc, #264]	@ (800d410 <pvPortMalloc+0x114>)
 800d308:	4d42      	ldr	r5, [pc, #264]	@ (800d414 <pvPortMalloc+0x118>)
 800d30a:	680b      	ldr	r3, [r1, #0]
 800d30c:	bb0b      	cbnz	r3, 800d352 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800d30e:	4a42      	ldr	r2, [pc, #264]	@ (800d418 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d310:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d312:	bf1f      	itttt	ne
 800d314:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d316:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800d31a:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800d31e:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800d320:	bf0c      	ite	eq
 800d322:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d326:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800d328:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d32a:	4e3c      	ldr	r6, [pc, #240]	@ (800d41c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800d32c:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d32e:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 800d332:	2000      	movs	r0, #0
 800d334:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d336:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d338:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d33c:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d33e:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 800d342:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d344:	4b36      	ldr	r3, [pc, #216]	@ (800d420 <pvPortMalloc+0x124>)
 800d346:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d348:	4b36      	ldr	r3, [pc, #216]	@ (800d424 <pvPortMalloc+0x128>)
 800d34a:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d34c:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800d350:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d352:	682e      	ldr	r6, [r5, #0]
 800d354:	4226      	tst	r6, r4
 800d356:	d155      	bne.n	800d404 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800d358:	2c00      	cmp	r4, #0
 800d35a:	d046      	beq.n	800d3ea <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800d35c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d360:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d362:	bf1c      	itt	ne
 800d364:	f023 0307 	bicne.w	r3, r3, #7
 800d368:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d36a:	2b00      	cmp	r3, #0
 800d36c:	d04a      	beq.n	800d404 <pvPortMalloc+0x108>
 800d36e:	4f2d      	ldr	r7, [pc, #180]	@ (800d424 <pvPortMalloc+0x128>)
 800d370:	683c      	ldr	r4, [r7, #0]
 800d372:	429c      	cmp	r4, r3
 800d374:	d346      	bcc.n	800d404 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800d376:	4a29      	ldr	r2, [pc, #164]	@ (800d41c <pvPortMalloc+0x120>)
 800d378:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d37a:	6868      	ldr	r0, [r5, #4]
 800d37c:	4298      	cmp	r0, r3
 800d37e:	d204      	bcs.n	800d38a <pvPortMalloc+0x8e>
 800d380:	f8d5 c000 	ldr.w	ip, [r5]
 800d384:	f1bc 0f00 	cmp.w	ip, #0
 800d388:	d115      	bne.n	800d3b6 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800d38a:	6809      	ldr	r1, [r1, #0]
 800d38c:	42a9      	cmp	r1, r5
 800d38e:	d039      	beq.n	800d404 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d390:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d392:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d396:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d398:	1ac2      	subs	r2, r0, r3
 800d39a:	2a10      	cmp	r2, #16
 800d39c:	d912      	bls.n	800d3c4 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d39e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d3a0:	0741      	lsls	r1, r0, #29
 800d3a2:	d00b      	beq.n	800d3bc <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d3a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d3a8:	f383 8811 	msr	BASEPRI, r3
 800d3ac:	f3bf 8f6f 	isb	sy
 800d3b0:	f3bf 8f4f 	dsb	sy
 800d3b4:	e7fe      	b.n	800d3b4 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 800d3b6:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 800d3b8:	4665      	mov	r5, ip
 800d3ba:	e7de      	b.n	800d37a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d3bc:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800d3be:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800d3c0:	f7ff ff76 	bl	800d2b0 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d3c4:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d3c6:	4916      	ldr	r1, [pc, #88]	@ (800d420 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d3c8:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d3ca:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 800d3cc:	4a16      	ldr	r2, [pc, #88]	@ (800d428 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d3ce:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d3d0:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 800d3d2:	2300      	movs	r3, #0
 800d3d4:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800d3d6:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d3d8:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d3da:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 800d3dc:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d3e0:	bf38      	it	cc
 800d3e2:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 800d3e4:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d3e6:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800d3ea:	f001 f9df 	bl	800e7ac <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d3ee:	0763      	lsls	r3, r4, #29
 800d3f0:	d00a      	beq.n	800d408 <pvPortMalloc+0x10c>
 800d3f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d3f6:	f383 8811 	msr	BASEPRI, r3
 800d3fa:	f3bf 8f6f 	isb	sy
 800d3fe:	f3bf 8f4f 	dsb	sy
 800d402:	e7fe      	b.n	800d402 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800d404:	2400      	movs	r4, #0
 800d406:	e7f0      	b.n	800d3ea <pvPortMalloc+0xee>
}
 800d408:	4620      	mov	r0, r4
 800d40a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d40e:	bf00      	nop
 800d410:	200038d8 	.word	0x200038d8
 800d414:	200038c4 	.word	0x200038c4
 800d418:	200038e4 	.word	0x200038e4
 800d41c:	200038dc 	.word	0x200038dc
 800d420:	200038d0 	.word	0x200038d0
 800d424:	200038d4 	.word	0x200038d4
 800d428:	200038cc 	.word	0x200038cc

0800d42c <vPortFree>:
{
 800d42c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800d42e:	4604      	mov	r4, r0
 800d430:	b390      	cbz	r0, 800d498 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d432:	4a1a      	ldr	r2, [pc, #104]	@ (800d49c <vPortFree+0x70>)
 800d434:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d438:	6812      	ldr	r2, [r2, #0]
 800d43a:	4213      	tst	r3, r2
 800d43c:	d108      	bne.n	800d450 <vPortFree+0x24>
 800d43e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d442:	f383 8811 	msr	BASEPRI, r3
 800d446:	f3bf 8f6f 	isb	sy
 800d44a:	f3bf 8f4f 	dsb	sy
 800d44e:	e7fe      	b.n	800d44e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d450:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d454:	b141      	cbz	r1, 800d468 <vPortFree+0x3c>
 800d456:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d45a:	f383 8811 	msr	BASEPRI, r3
 800d45e:	f3bf 8f6f 	isb	sy
 800d462:	f3bf 8f4f 	dsb	sy
 800d466:	e7fe      	b.n	800d466 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d468:	ea23 0302 	bic.w	r3, r3, r2
 800d46c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800d470:	f001 f8f8 	bl	800e664 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d474:	4a0a      	ldr	r2, [pc, #40]	@ (800d4a0 <vPortFree+0x74>)
 800d476:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d47a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d47c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d480:	440b      	add	r3, r1
 800d482:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d484:	f7ff ff14 	bl	800d2b0 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800d488:	4a06      	ldr	r2, [pc, #24]	@ (800d4a4 <vPortFree+0x78>)
 800d48a:	6813      	ldr	r3, [r2, #0]
}
 800d48c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800d490:	3301      	adds	r3, #1
 800d492:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800d494:	f001 b98a 	b.w	800e7ac <xTaskResumeAll>
}
 800d498:	bd10      	pop	{r4, pc}
 800d49a:	bf00      	nop
 800d49c:	200038c4 	.word	0x200038c4
 800d4a0:	200038d4 	.word	0x200038d4
 800d4a4:	200038c8 	.word	0x200038c8

0800d4a8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4a8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d4ac:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4b0:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4b4:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4b6:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d4b8:	2300      	movs	r3, #0
 800d4ba:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d4bc:	4770      	bx	lr

0800d4be <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d4be:	2300      	movs	r3, #0
 800d4c0:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d4c2:	4770      	bx	lr

0800d4c4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d4c4:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800d4c6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d4c8:	689a      	ldr	r2, [r3, #8]
 800d4ca:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d4cc:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d4ce:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d4d0:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d4d2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d4d4:	3301      	adds	r3, #1
 800d4d6:	6003      	str	r3, [r0, #0]
}
 800d4d8:	4770      	bx	lr

0800d4da <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d4da:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d4dc:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d4de:	1c63      	adds	r3, r4, #1
 800d4e0:	d10a      	bne.n	800d4f8 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800d4e2:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800d4e4:	685a      	ldr	r2, [r3, #4]
 800d4e6:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d4e8:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d4ea:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d4ec:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d4ee:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d4f0:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d4f2:	3301      	adds	r3, #1
 800d4f4:	6003      	str	r3, [r0, #0]
}
 800d4f6:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d4f8:	f100 0208 	add.w	r2, r0, #8
 800d4fc:	4613      	mov	r3, r2
 800d4fe:	6852      	ldr	r2, [r2, #4]
 800d500:	6815      	ldr	r5, [r2, #0]
 800d502:	42a5      	cmp	r5, r4
 800d504:	d9fa      	bls.n	800d4fc <vListInsert+0x22>
 800d506:	e7ed      	b.n	800d4e4 <vListInsert+0xa>

0800d508 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d508:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800d50c:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d50e:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d510:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d512:	6859      	ldr	r1, [r3, #4]
 800d514:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d516:	bf08      	it	eq
 800d518:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800d51a:	2200      	movs	r2, #0
 800d51c:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d51e:	681a      	ldr	r2, [r3, #0]
 800d520:	3a01      	subs	r2, #1
 800d522:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800d524:	6818      	ldr	r0, [r3, #0]
}
 800d526:	4770      	bx	lr

0800d528 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d528:	4808      	ldr	r0, [pc, #32]	@ (800d54c <prvPortStartFirstTask+0x24>)
 800d52a:	6800      	ldr	r0, [r0, #0]
 800d52c:	6800      	ldr	r0, [r0, #0]
 800d52e:	f380 8808 	msr	MSP, r0
 800d532:	f04f 0000 	mov.w	r0, #0
 800d536:	f380 8814 	msr	CONTROL, r0
 800d53a:	b662      	cpsie	i
 800d53c:	b661      	cpsie	f
 800d53e:	f3bf 8f4f 	dsb	sy
 800d542:	f3bf 8f6f 	isb	sy
 800d546:	df00      	svc	0
 800d548:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d54a:	0000      	.short	0x0000
 800d54c:	e000ed08 	.word	0xe000ed08

0800d550 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d550:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800d560 <vPortEnableVFP+0x10>
 800d554:	6801      	ldr	r1, [r0, #0]
 800d556:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800d55a:	6001      	str	r1, [r0, #0]
 800d55c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d55e:	0000      	.short	0x0000
 800d560:	e000ed88 	.word	0xe000ed88

0800d564 <prvTaskExitError>:
{
 800d564:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d566:	2300      	movs	r3, #0
 800d568:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d56a:	4b0d      	ldr	r3, [pc, #52]	@ (800d5a0 <prvTaskExitError+0x3c>)
 800d56c:	681b      	ldr	r3, [r3, #0]
 800d56e:	3301      	adds	r3, #1
 800d570:	d008      	beq.n	800d584 <prvTaskExitError+0x20>
 800d572:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d576:	f383 8811 	msr	BASEPRI, r3
 800d57a:	f3bf 8f6f 	isb	sy
 800d57e:	f3bf 8f4f 	dsb	sy
 800d582:	e7fe      	b.n	800d582 <prvTaskExitError+0x1e>
 800d584:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d588:	f383 8811 	msr	BASEPRI, r3
 800d58c:	f3bf 8f6f 	isb	sy
 800d590:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d594:	9b01      	ldr	r3, [sp, #4]
 800d596:	2b00      	cmp	r3, #0
 800d598:	d0fc      	beq.n	800d594 <prvTaskExitError+0x30>
}
 800d59a:	b002      	add	sp, #8
 800d59c:	4770      	bx	lr
 800d59e:	bf00      	nop
 800d5a0:	20000080 	.word	0x20000080

0800d5a4 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d5a4:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800d5a8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d5ac:	4b07      	ldr	r3, [pc, #28]	@ (800d5cc <pxPortInitialiseStack+0x28>)
 800d5ae:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d5b2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d5b6:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d5ba:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800d5be:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d5c2:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800d5c6:	3844      	subs	r0, #68	@ 0x44
 800d5c8:	4770      	bx	lr
 800d5ca:	bf00      	nop
 800d5cc:	0800d565 	.word	0x0800d565

0800d5d0 <SVC_Handler>:
	__asm volatile (
 800d5d0:	4b07      	ldr	r3, [pc, #28]	@ (800d5f0 <pxCurrentTCBConst2>)
 800d5d2:	6819      	ldr	r1, [r3, #0]
 800d5d4:	6808      	ldr	r0, [r1, #0]
 800d5d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5da:	f380 8809 	msr	PSP, r0
 800d5de:	f3bf 8f6f 	isb	sy
 800d5e2:	f04f 0000 	mov.w	r0, #0
 800d5e6:	f380 8811 	msr	BASEPRI, r0
 800d5ea:	4770      	bx	lr
 800d5ec:	f3af 8000 	nop.w

0800d5f0 <pxCurrentTCBConst2>:
 800d5f0:	20013e24 	.word	0x20013e24

0800d5f4 <vPortEnterCritical>:
 800d5f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d5f8:	f383 8811 	msr	BASEPRI, r3
 800d5fc:	f3bf 8f6f 	isb	sy
 800d600:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d604:	4a0a      	ldr	r2, [pc, #40]	@ (800d630 <vPortEnterCritical+0x3c>)
 800d606:	6813      	ldr	r3, [r2, #0]
 800d608:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d60a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d60c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d60e:	d10e      	bne.n	800d62e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d610:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d614:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800d618:	b2db      	uxtb	r3, r3
 800d61a:	b143      	cbz	r3, 800d62e <vPortEnterCritical+0x3a>
 800d61c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d620:	f383 8811 	msr	BASEPRI, r3
 800d624:	f3bf 8f6f 	isb	sy
 800d628:	f3bf 8f4f 	dsb	sy
 800d62c:	e7fe      	b.n	800d62c <vPortEnterCritical+0x38>
}
 800d62e:	4770      	bx	lr
 800d630:	20000080 	.word	0x20000080

0800d634 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d634:	4a08      	ldr	r2, [pc, #32]	@ (800d658 <vPortExitCritical+0x24>)
 800d636:	6813      	ldr	r3, [r2, #0]
 800d638:	b943      	cbnz	r3, 800d64c <vPortExitCritical+0x18>
 800d63a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d63e:	f383 8811 	msr	BASEPRI, r3
 800d642:	f3bf 8f6f 	isb	sy
 800d646:	f3bf 8f4f 	dsb	sy
 800d64a:	e7fe      	b.n	800d64a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d64c:	3b01      	subs	r3, #1
 800d64e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d650:	b90b      	cbnz	r3, 800d656 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d652:	f383 8811 	msr	BASEPRI, r3
}
 800d656:	4770      	bx	lr
 800d658:	20000080 	.word	0x20000080
 800d65c:	00000000 	.word	0x00000000

0800d660 <PendSV_Handler>:
	__asm volatile
 800d660:	f3ef 8009 	mrs	r0, PSP
 800d664:	f3bf 8f6f 	isb	sy
 800d668:	4b15      	ldr	r3, [pc, #84]	@ (800d6c0 <pxCurrentTCBConst>)
 800d66a:	681a      	ldr	r2, [r3, #0]
 800d66c:	f01e 0f10 	tst.w	lr, #16
 800d670:	bf08      	it	eq
 800d672:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d676:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d67a:	6010      	str	r0, [r2, #0]
 800d67c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d680:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800d684:	f380 8811 	msr	BASEPRI, r0
 800d688:	f3bf 8f4f 	dsb	sy
 800d68c:	f3bf 8f6f 	isb	sy
 800d690:	f001 f924 	bl	800e8dc <vTaskSwitchContext>
 800d694:	f04f 0000 	mov.w	r0, #0
 800d698:	f380 8811 	msr	BASEPRI, r0
 800d69c:	bc09      	pop	{r0, r3}
 800d69e:	6819      	ldr	r1, [r3, #0]
 800d6a0:	6808      	ldr	r0, [r1, #0]
 800d6a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6a6:	f01e 0f10 	tst.w	lr, #16
 800d6aa:	bf08      	it	eq
 800d6ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d6b0:	f380 8809 	msr	PSP, r0
 800d6b4:	f3bf 8f6f 	isb	sy
 800d6b8:	4770      	bx	lr
 800d6ba:	bf00      	nop
 800d6bc:	f3af 8000 	nop.w

0800d6c0 <pxCurrentTCBConst>:
 800d6c0:	20013e24 	.word	0x20013e24

0800d6c4 <xPortSysTickHandler>:
{
 800d6c4:	b508      	push	{r3, lr}
	__asm volatile
 800d6c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d6ca:	f383 8811 	msr	BASEPRI, r3
 800d6ce:	f3bf 8f6f 	isb	sy
 800d6d2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d6d6:	f000 ffd3 	bl	800e680 <xTaskIncrementTick>
 800d6da:	b128      	cbz	r0, 800d6e8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d6dc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d6e0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d6e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 800d6e8:	2300      	movs	r3, #0
 800d6ea:	f383 8811 	msr	BASEPRI, r3
}
 800d6ee:	bd08      	pop	{r3, pc}

0800d6f0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d6f0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800d6f4:	2300      	movs	r3, #0
 800d6f6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d6f8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d6fa:	4b05      	ldr	r3, [pc, #20]	@ (800d710 <vPortSetupTimerInterrupt+0x20>)
 800d6fc:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800d700:	681b      	ldr	r3, [r3, #0]
 800d702:	fbb3 f3f1 	udiv	r3, r3, r1
 800d706:	3b01      	subs	r3, #1
 800d708:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d70a:	2307      	movs	r3, #7
 800d70c:	6113      	str	r3, [r2, #16]
}
 800d70e:	4770      	bx	lr
 800d710:	20000074 	.word	0x20000074

0800d714 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d714:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 800d718:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d71a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800d71e:	4a38      	ldr	r2, [pc, #224]	@ (800d800 <xPortStartScheduler+0xec>)
 800d720:	4291      	cmp	r1, r2
 800d722:	d108      	bne.n	800d736 <xPortStartScheduler+0x22>
	__asm volatile
 800d724:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d728:	f383 8811 	msr	BASEPRI, r3
 800d72c:	f3bf 8f6f 	isb	sy
 800d730:	f3bf 8f4f 	dsb	sy
 800d734:	e7fe      	b.n	800d734 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d736:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800d73a:	4b32      	ldr	r3, [pc, #200]	@ (800d804 <xPortStartScheduler+0xf0>)
 800d73c:	429a      	cmp	r2, r3
 800d73e:	d108      	bne.n	800d752 <xPortStartScheduler+0x3e>
 800d740:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d744:	f383 8811 	msr	BASEPRI, r3
 800d748:	f3bf 8f6f 	isb	sy
 800d74c:	f3bf 8f4f 	dsb	sy
 800d750:	e7fe      	b.n	800d750 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d752:	4b2d      	ldr	r3, [pc, #180]	@ (800d808 <xPortStartScheduler+0xf4>)
 800d754:	781a      	ldrb	r2, [r3, #0]
 800d756:	b2d2      	uxtb	r2, r2
 800d758:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d75a:	22ff      	movs	r2, #255	@ 0xff
 800d75c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d75e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d760:	4a2a      	ldr	r2, [pc, #168]	@ (800d80c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d762:	b2db      	uxtb	r3, r3
 800d764:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d768:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d76c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800d770:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d772:	4a27      	ldr	r2, [pc, #156]	@ (800d810 <xPortStartScheduler+0xfc>)
 800d774:	2307      	movs	r3, #7
 800d776:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d778:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800d77c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d77e:	0609      	lsls	r1, r1, #24
 800d780:	d40a      	bmi.n	800d798 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d782:	2b03      	cmp	r3, #3
 800d784:	d011      	beq.n	800d7aa <xPortStartScheduler+0x96>
 800d786:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d78a:	f383 8811 	msr	BASEPRI, r3
 800d78e:	f3bf 8f6f 	isb	sy
 800d792:	f3bf 8f4f 	dsb	sy
 800d796:	e7fe      	b.n	800d796 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 800d798:	3b01      	subs	r3, #1
 800d79a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d79c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d7a0:	005b      	lsls	r3, r3, #1
 800d7a2:	b2db      	uxtb	r3, r3
 800d7a4:	f88d 3003 	strb.w	r3, [sp, #3]
 800d7a8:	e7e6      	b.n	800d778 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d7aa:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800d7ae:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d7b0:	9b01      	ldr	r3, [sp, #4]
 800d7b2:	4a15      	ldr	r2, [pc, #84]	@ (800d808 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d7b4:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d7b8:	b2db      	uxtb	r3, r3
 800d7ba:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d7bc:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800d7c0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800d7c4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d7c8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800d7cc:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800d7d0:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 800d7d4:	f7ff ff8c 	bl	800d6f0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d7d8:	4b0e      	ldr	r3, [pc, #56]	@ (800d814 <xPortStartScheduler+0x100>)
 800d7da:	2500      	movs	r5, #0
 800d7dc:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800d7de:	f7ff feb7 	bl	800d550 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d7e2:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 800d7e6:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800d7ea:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800d7ee:	f7ff fe9b 	bl	800d528 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d7f2:	f001 f873 	bl	800e8dc <vTaskSwitchContext>
	prvTaskExitError();
 800d7f6:	f7ff feb5 	bl	800d564 <prvTaskExitError>
}
 800d7fa:	4628      	mov	r0, r5
 800d7fc:	b003      	add	sp, #12
 800d7fe:	bd30      	pop	{r4, r5, pc}
 800d800:	410fc271 	.word	0x410fc271
 800d804:	410fc270 	.word	0x410fc270
 800d808:	e000e400 	.word	0xe000e400
 800d80c:	200138e8 	.word	0x200138e8
 800d810:	200138e4 	.word	0x200138e4
 800d814:	20000080 	.word	0x20000080

0800d818 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d818:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d81c:	2b0f      	cmp	r3, #15
 800d81e:	d90e      	bls.n	800d83e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d820:	4a11      	ldr	r2, [pc, #68]	@ (800d868 <vPortValidateInterruptPriority+0x50>)
 800d822:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d824:	4a11      	ldr	r2, [pc, #68]	@ (800d86c <vPortValidateInterruptPriority+0x54>)
 800d826:	7812      	ldrb	r2, [r2, #0]
 800d828:	429a      	cmp	r2, r3
 800d82a:	d908      	bls.n	800d83e <vPortValidateInterruptPriority+0x26>
 800d82c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d830:	f383 8811 	msr	BASEPRI, r3
 800d834:	f3bf 8f6f 	isb	sy
 800d838:	f3bf 8f4f 	dsb	sy
 800d83c:	e7fe      	b.n	800d83c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d83e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d842:	4a0b      	ldr	r2, [pc, #44]	@ (800d870 <vPortValidateInterruptPriority+0x58>)
 800d844:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 800d848:	6812      	ldr	r2, [r2, #0]
 800d84a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800d84e:	4293      	cmp	r3, r2
 800d850:	d908      	bls.n	800d864 <vPortValidateInterruptPriority+0x4c>
 800d852:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d856:	f383 8811 	msr	BASEPRI, r3
 800d85a:	f3bf 8f6f 	isb	sy
 800d85e:	f3bf 8f4f 	dsb	sy
 800d862:	e7fe      	b.n	800d862 <vPortValidateInterruptPriority+0x4a>
	}
 800d864:	4770      	bx	lr
 800d866:	bf00      	nop
 800d868:	e000e3f0 	.word	0xe000e3f0
 800d86c:	200138e8 	.word	0x200138e8
 800d870:	200138e4 	.word	0x200138e4

0800d874 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800d874:	b510      	push	{r4, lr}
 800d876:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d878:	f7ff febc 	bl	800d5f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d87c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d87e:	f7ff fed9 	bl	800d634 <vPortExitCritical>

	return xReturn;
}
 800d882:	fab4 f084 	clz	r0, r4
 800d886:	0940      	lsrs	r0, r0, #5
 800d888:	bd10      	pop	{r4, pc}

0800d88a <prvCopyDataToQueue>:
{
 800d88a:	b570      	push	{r4, r5, r6, lr}
 800d88c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d88e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d890:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 800d892:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d894:	b942      	cbnz	r2, 800d8a8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d896:	6806      	ldr	r6, [r0, #0]
 800d898:	b99e      	cbnz	r6, 800d8c2 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d89a:	6880      	ldr	r0, [r0, #8]
 800d89c:	f001 f96c 	bl	800eb78 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d8a0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d8a2:	3501      	adds	r5, #1
 800d8a4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 800d8a6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d8a8:	b96e      	cbnz	r6, 800d8c6 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d8aa:	6840      	ldr	r0, [r0, #4]
 800d8ac:	f01c fd0d 	bl	802a2ca <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8b0:	6863      	ldr	r3, [r4, #4]
 800d8b2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800d8b4:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8b6:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8b8:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8ba:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d8bc:	bf24      	itt	cs
 800d8be:	6823      	ldrcs	r3, [r4, #0]
 800d8c0:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800d8c2:	2000      	movs	r0, #0
 800d8c4:	e7ed      	b.n	800d8a2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d8c6:	68c0      	ldr	r0, [r0, #12]
 800d8c8:	f01c fcff 	bl	802a2ca <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d8cc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800d8ce:	68e3      	ldr	r3, [r4, #12]
 800d8d0:	4251      	negs	r1, r2
 800d8d2:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8d4:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d8d6:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8d8:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d8da:	bf3e      	ittt	cc
 800d8dc:	68a3      	ldrcc	r3, [r4, #8]
 800d8de:	185b      	addcc	r3, r3, r1
 800d8e0:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d8e2:	2e02      	cmp	r6, #2
 800d8e4:	d1ed      	bne.n	800d8c2 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d8e6:	b10d      	cbz	r5, 800d8ec <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 800d8e8:	3d01      	subs	r5, #1
 800d8ea:	e7ea      	b.n	800d8c2 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800d8ec:	4628      	mov	r0, r5
 800d8ee:	e7d8      	b.n	800d8a2 <prvCopyDataToQueue+0x18>

0800d8f0 <prvCopyDataFromQueue>:
{
 800d8f0:	4603      	mov	r3, r0
 800d8f2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d8f4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 800d8f6:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d8f8:	b16a      	cbz	r2, 800d916 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8fa:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d8fc:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8fe:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d900:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d902:	bf28      	it	cs
 800d904:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d906:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d908:	bf28      	it	cs
 800d90a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d90c:	68d9      	ldr	r1, [r3, #12]
}
 800d90e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d912:	f01c bcda 	b.w	802a2ca <memcpy>
}
 800d916:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d91a:	4770      	bx	lr

0800d91c <prvUnlockQueue>:
{
 800d91c:	b570      	push	{r4, r5, r6, lr}
 800d91e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800d920:	f7ff fe68 	bl	800d5f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d924:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d928:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800d92c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d92e:	2d00      	cmp	r5, #0
 800d930:	dd01      	ble.n	800d936 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d932:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d934:	b9b3      	cbnz	r3, 800d964 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 800d936:	23ff      	movs	r3, #255	@ 0xff
 800d938:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800d93c:	f7ff fe7a 	bl	800d634 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d940:	f7ff fe58 	bl	800d5f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d944:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d948:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800d94c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d94e:	2d00      	cmp	r5, #0
 800d950:	dd01      	ble.n	800d956 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d952:	6923      	ldr	r3, [r4, #16]
 800d954:	b97b      	cbnz	r3, 800d976 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 800d956:	23ff      	movs	r3, #255	@ 0xff
 800d958:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800d95c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800d960:	f7ff be68 	b.w	800d634 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d964:	4630      	mov	r0, r6
 800d966:	f001 f82b 	bl	800e9c0 <xTaskRemoveFromEventList>
 800d96a:	b108      	cbz	r0, 800d970 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 800d96c:	f001 f8b0 	bl	800ead0 <vTaskMissedYield>
			--cTxLock;
 800d970:	3d01      	subs	r5, #1
 800d972:	b26d      	sxtb	r5, r5
 800d974:	e7db      	b.n	800d92e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d976:	4630      	mov	r0, r6
 800d978:	f001 f822 	bl	800e9c0 <xTaskRemoveFromEventList>
 800d97c:	b108      	cbz	r0, 800d982 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 800d97e:	f001 f8a7 	bl	800ead0 <vTaskMissedYield>
				--cRxLock;
 800d982:	3d01      	subs	r5, #1
 800d984:	b26d      	sxtb	r5, r5
 800d986:	e7e2      	b.n	800d94e <prvUnlockQueue+0x32>

0800d988 <xQueueGenericReset>:
{
 800d988:	b538      	push	{r3, r4, r5, lr}
 800d98a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800d98c:	4604      	mov	r4, r0
 800d98e:	b940      	cbnz	r0, 800d9a2 <xQueueGenericReset+0x1a>
 800d990:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d994:	f383 8811 	msr	BASEPRI, r3
 800d998:	f3bf 8f6f 	isb	sy
 800d99c:	f3bf 8f4f 	dsb	sy
 800d9a0:	e7fe      	b.n	800d9a0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800d9a2:	f7ff fe27 	bl	800d5f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9a6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800d9aa:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d9ac:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9ae:	434b      	muls	r3, r1
 800d9b0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9b2:	1a5b      	subs	r3, r3, r1
 800d9b4:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9b6:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d9b8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d9ba:	2000      	movs	r0, #0
 800d9bc:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9be:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 800d9c0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800d9c4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 800d9c8:	b9a5      	cbnz	r5, 800d9f4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9ca:	6923      	ldr	r3, [r4, #16]
 800d9cc:	b173      	cbz	r3, 800d9ec <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9ce:	f104 0010 	add.w	r0, r4, #16
 800d9d2:	f000 fff5 	bl	800e9c0 <xTaskRemoveFromEventList>
 800d9d6:	b148      	cbz	r0, 800d9ec <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800d9d8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d9dc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d9e0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d9e4:	f3bf 8f4f 	dsb	sy
 800d9e8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800d9ec:	f7ff fe22 	bl	800d634 <vPortExitCritical>
}
 800d9f0:	2001      	movs	r0, #1
 800d9f2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d9f4:	f104 0010 	add.w	r0, r4, #16
 800d9f8:	f7ff fd56 	bl	800d4a8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d9fc:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800da00:	f7ff fd52 	bl	800d4a8 <vListInitialise>
 800da04:	e7f2      	b.n	800d9ec <xQueueGenericReset+0x64>

0800da06 <xQueueGenericCreateStatic>:
	{
 800da06:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800da08:	460d      	mov	r5, r1
 800da0a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800da0c:	b940      	cbnz	r0, 800da20 <xQueueGenericCreateStatic+0x1a>
 800da0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800da12:	f383 8811 	msr	BASEPRI, r3
 800da16:	f3bf 8f6f 	isb	sy
 800da1a:	f3bf 8f4f 	dsb	sy
 800da1e:	e7fe      	b.n	800da1e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 800da20:	b943      	cbnz	r3, 800da34 <xQueueGenericCreateStatic+0x2e>
 800da22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800da26:	f383 8811 	msr	BASEPRI, r3
 800da2a:	f3bf 8f6f 	isb	sy
 800da2e:	f3bf 8f4f 	dsb	sy
 800da32:	e7fe      	b.n	800da32 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800da34:	b14a      	cbz	r2, 800da4a <xQueueGenericCreateStatic+0x44>
 800da36:	b991      	cbnz	r1, 800da5e <xQueueGenericCreateStatic+0x58>
 800da38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800da3c:	f383 8811 	msr	BASEPRI, r3
 800da40:	f3bf 8f6f 	isb	sy
 800da44:	f3bf 8f4f 	dsb	sy
 800da48:	e7fe      	b.n	800da48 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800da4a:	b141      	cbz	r1, 800da5e <xQueueGenericCreateStatic+0x58>
 800da4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800da50:	f383 8811 	msr	BASEPRI, r3
 800da54:	f3bf 8f6f 	isb	sy
 800da58:	f3bf 8f4f 	dsb	sy
 800da5c:	e7fe      	b.n	800da5c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800da5e:	2350      	movs	r3, #80	@ 0x50
 800da60:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800da62:	9b01      	ldr	r3, [sp, #4]
 800da64:	2b50      	cmp	r3, #80	@ 0x50
 800da66:	d008      	beq.n	800da7a <xQueueGenericCreateStatic+0x74>
 800da68:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800da6c:	f383 8811 	msr	BASEPRI, r3
 800da70:	f3bf 8f6f 	isb	sy
 800da74:	f3bf 8f4f 	dsb	sy
 800da78:	e7fe      	b.n	800da78 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800da7a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800da7c:	2d00      	cmp	r5, #0
 800da7e:	bf08      	it	eq
 800da80:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 800da82:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800da86:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 800da8a:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800da8c:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800da8e:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800da90:	f7ff ff7a 	bl	800d988 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800da94:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800da98:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 800da9c:	4620      	mov	r0, r4
 800da9e:	b003      	add	sp, #12
 800daa0:	bd30      	pop	{r4, r5, pc}

0800daa2 <xQueueGenericCreate>:
	{
 800daa2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800daa4:	460d      	mov	r5, r1
 800daa6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800daa8:	4606      	mov	r6, r0
 800daaa:	b940      	cbnz	r0, 800dabe <xQueueGenericCreate+0x1c>
 800daac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dab0:	f383 8811 	msr	BASEPRI, r3
 800dab4:	f3bf 8f6f 	isb	sy
 800dab8:	f3bf 8f4f 	dsb	sy
 800dabc:	e7fe      	b.n	800dabc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dabe:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800dac0:	3050      	adds	r0, #80	@ 0x50
 800dac2:	f7ff fc1b 	bl	800d2fc <pvPortMalloc>
		if( pxNewQueue != NULL )
 800dac6:	4604      	mov	r4, r0
 800dac8:	b170      	cbz	r0, 800dae8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800daca:	2300      	movs	r3, #0
 800dacc:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800dad0:	b165      	cbz	r5, 800daec <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dad2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800dad6:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800dada:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800dadc:	2101      	movs	r1, #1
 800dade:	4620      	mov	r0, r4
 800dae0:	f7ff ff52 	bl	800d988 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800dae4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 800dae8:	4620      	mov	r0, r4
 800daea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800daec:	4603      	mov	r3, r0
 800daee:	e7f2      	b.n	800dad6 <xQueueGenericCreate+0x34>

0800daf0 <xQueueCreateCountingSemaphoreStatic>:
	{
 800daf0:	b513      	push	{r0, r1, r4, lr}
 800daf2:	4613      	mov	r3, r2
 800daf4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800daf6:	b940      	cbnz	r0, 800db0a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800daf8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dafc:	f383 8811 	msr	BASEPRI, r3
 800db00:	f3bf 8f6f 	isb	sy
 800db04:	f3bf 8f4f 	dsb	sy
 800db08:	e7fe      	b.n	800db08 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800db0a:	4288      	cmp	r0, r1
 800db0c:	d208      	bcs.n	800db20 <xQueueCreateCountingSemaphoreStatic+0x30>
 800db0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800db12:	f383 8811 	msr	BASEPRI, r3
 800db16:	f3bf 8f6f 	isb	sy
 800db1a:	f3bf 8f4f 	dsb	sy
 800db1e:	e7fe      	b.n	800db1e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800db20:	2202      	movs	r2, #2
 800db22:	9200      	str	r2, [sp, #0]
 800db24:	2200      	movs	r2, #0
 800db26:	4611      	mov	r1, r2
 800db28:	f7ff ff6d 	bl	800da06 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800db2c:	b100      	cbz	r0, 800db30 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800db2e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800db30:	b002      	add	sp, #8
 800db32:	bd10      	pop	{r4, pc}

0800db34 <xQueueCreateCountingSemaphore>:
	{
 800db34:	b510      	push	{r4, lr}
 800db36:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800db38:	b940      	cbnz	r0, 800db4c <xQueueCreateCountingSemaphore+0x18>
 800db3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800db3e:	f383 8811 	msr	BASEPRI, r3
 800db42:	f3bf 8f6f 	isb	sy
 800db46:	f3bf 8f4f 	dsb	sy
 800db4a:	e7fe      	b.n	800db4a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800db4c:	4288      	cmp	r0, r1
 800db4e:	d208      	bcs.n	800db62 <xQueueCreateCountingSemaphore+0x2e>
 800db50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800db54:	f383 8811 	msr	BASEPRI, r3
 800db58:	f3bf 8f6f 	isb	sy
 800db5c:	f3bf 8f4f 	dsb	sy
 800db60:	e7fe      	b.n	800db60 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800db62:	2202      	movs	r2, #2
 800db64:	2100      	movs	r1, #0
 800db66:	f7ff ff9c 	bl	800daa2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800db6a:	b100      	cbz	r0, 800db6e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800db6c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800db6e:	bd10      	pop	{r4, pc}

0800db70 <xQueueGenericSend>:
{
 800db70:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800db74:	460f      	mov	r7, r1
 800db76:	9201      	str	r2, [sp, #4]
 800db78:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800db7a:	4604      	mov	r4, r0
 800db7c:	b940      	cbnz	r0, 800db90 <xQueueGenericSend+0x20>
 800db7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800db82:	f383 8811 	msr	BASEPRI, r3
 800db86:	f3bf 8f6f 	isb	sy
 800db8a:	f3bf 8f4f 	dsb	sy
 800db8e:	e7fe      	b.n	800db8e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800db90:	b951      	cbnz	r1, 800dba8 <xQueueGenericSend+0x38>
 800db92:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800db94:	b143      	cbz	r3, 800dba8 <xQueueGenericSend+0x38>
 800db96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800db9a:	f383 8811 	msr	BASEPRI, r3
 800db9e:	f3bf 8f6f 	isb	sy
 800dba2:	f3bf 8f4f 	dsb	sy
 800dba6:	e7fe      	b.n	800dba6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dba8:	2e02      	cmp	r6, #2
 800dbaa:	d10b      	bne.n	800dbc4 <xQueueGenericSend+0x54>
 800dbac:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800dbae:	2b01      	cmp	r3, #1
 800dbb0:	d008      	beq.n	800dbc4 <xQueueGenericSend+0x54>
 800dbb2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dbb6:	f383 8811 	msr	BASEPRI, r3
 800dbba:	f3bf 8f6f 	isb	sy
 800dbbe:	f3bf 8f4f 	dsb	sy
 800dbc2:	e7fe      	b.n	800dbc2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dbc4:	f000 ff8a 	bl	800eadc <xTaskGetSchedulerState>
 800dbc8:	4605      	mov	r5, r0
 800dbca:	b320      	cbz	r0, 800dc16 <xQueueGenericSend+0xa6>
 800dbcc:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800dbce:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800dbd2:	f7ff fd0f 	bl	800d5f4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dbd6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800dbd8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800dbda:	429a      	cmp	r2, r3
 800dbdc:	d227      	bcs.n	800dc2e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dbde:	4632      	mov	r2, r6
 800dbe0:	4639      	mov	r1, r7
 800dbe2:	4620      	mov	r0, r4
 800dbe4:	f7ff fe51 	bl	800d88a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbe8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800dbea:	b11b      	cbz	r3, 800dbf4 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbec:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800dbf0:	f000 fee6 	bl	800e9c0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800dbf4:	b148      	cbz	r0, 800dc0a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 800dbf6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dbfa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800dbfe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dc02:	f3bf 8f4f 	dsb	sy
 800dc06:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dc0a:	f7ff fd13 	bl	800d634 <vPortExitCritical>
				return pdPASS;
 800dc0e:	2001      	movs	r0, #1
}
 800dc10:	b004      	add	sp, #16
 800dc12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc16:	9b01      	ldr	r3, [sp, #4]
 800dc18:	2b00      	cmp	r3, #0
 800dc1a:	d0d8      	beq.n	800dbce <xQueueGenericSend+0x5e>
 800dc1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dc20:	f383 8811 	msr	BASEPRI, r3
 800dc24:	f3bf 8f6f 	isb	sy
 800dc28:	f3bf 8f4f 	dsb	sy
 800dc2c:	e7fe      	b.n	800dc2c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dc2e:	2e02      	cmp	r6, #2
 800dc30:	d0d5      	beq.n	800dbde <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dc32:	9b01      	ldr	r3, [sp, #4]
 800dc34:	b91b      	cbnz	r3, 800dc3e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 800dc36:	f7ff fcfd 	bl	800d634 <vPortExitCritical>
					return errQUEUE_FULL;
 800dc3a:	2000      	movs	r0, #0
 800dc3c:	e7e8      	b.n	800dc10 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800dc3e:	b915      	cbnz	r5, 800dc46 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc40:	a802      	add	r0, sp, #8
 800dc42:	f000 fefd 	bl	800ea40 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800dc46:	f7ff fcf5 	bl	800d634 <vPortExitCritical>
		vTaskSuspendAll();
 800dc4a:	f000 fd0b 	bl	800e664 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dc4e:	f7ff fcd1 	bl	800d5f4 <vPortEnterCritical>
 800dc52:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800dc56:	2bff      	cmp	r3, #255	@ 0xff
 800dc58:	bf08      	it	eq
 800dc5a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800dc5e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800dc62:	2bff      	cmp	r3, #255	@ 0xff
 800dc64:	bf08      	it	eq
 800dc66:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800dc6a:	f7ff fce3 	bl	800d634 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dc6e:	a901      	add	r1, sp, #4
 800dc70:	a802      	add	r0, sp, #8
 800dc72:	f000 fef1 	bl	800ea58 <xTaskCheckForTimeOut>
 800dc76:	bb38      	cbnz	r0, 800dcc8 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800dc78:	f7ff fcbc 	bl	800d5f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800dc7c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800dc7e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800dc80:	429a      	cmp	r2, r3
 800dc82:	d10e      	bne.n	800dca2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800dc84:	f7ff fcd6 	bl	800d634 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dc88:	9901      	ldr	r1, [sp, #4]
 800dc8a:	f104 0010 	add.w	r0, r4, #16
 800dc8e:	f000 fe5f 	bl	800e950 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800dc92:	4620      	mov	r0, r4
 800dc94:	f7ff fe42 	bl	800d91c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800dc98:	f000 fd88 	bl	800e7ac <xTaskResumeAll>
 800dc9c:	b148      	cbz	r0, 800dcb2 <xQueueGenericSend+0x142>
 800dc9e:	2501      	movs	r5, #1
 800dca0:	e797      	b.n	800dbd2 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 800dca2:	f7ff fcc7 	bl	800d634 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800dca6:	4620      	mov	r0, r4
 800dca8:	f7ff fe38 	bl	800d91c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800dcac:	f000 fd7e 	bl	800e7ac <xTaskResumeAll>
 800dcb0:	e7f5      	b.n	800dc9e <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 800dcb2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dcb6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800dcba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dcbe:	f3bf 8f4f 	dsb	sy
 800dcc2:	f3bf 8f6f 	isb	sy
 800dcc6:	e7ea      	b.n	800dc9e <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 800dcc8:	4620      	mov	r0, r4
 800dcca:	f7ff fe27 	bl	800d91c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800dcce:	f000 fd6d 	bl	800e7ac <xTaskResumeAll>
			return errQUEUE_FULL;
 800dcd2:	e7b2      	b.n	800dc3a <xQueueGenericSend+0xca>

0800dcd4 <xQueueGenericSendFromISR>:
{
 800dcd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dcd8:	4689      	mov	r9, r1
 800dcda:	4617      	mov	r7, r2
 800dcdc:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800dcde:	4604      	mov	r4, r0
 800dce0:	b940      	cbnz	r0, 800dcf4 <xQueueGenericSendFromISR+0x20>
 800dce2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dce6:	f383 8811 	msr	BASEPRI, r3
 800dcea:	f3bf 8f6f 	isb	sy
 800dcee:	f3bf 8f4f 	dsb	sy
 800dcf2:	e7fe      	b.n	800dcf2 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dcf4:	b951      	cbnz	r1, 800dd0c <xQueueGenericSendFromISR+0x38>
 800dcf6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800dcf8:	b143      	cbz	r3, 800dd0c <xQueueGenericSendFromISR+0x38>
 800dcfa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dcfe:	f383 8811 	msr	BASEPRI, r3
 800dd02:	f3bf 8f6f 	isb	sy
 800dd06:	f3bf 8f4f 	dsb	sy
 800dd0a:	e7fe      	b.n	800dd0a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dd0c:	2e02      	cmp	r6, #2
 800dd0e:	d10b      	bne.n	800dd28 <xQueueGenericSendFromISR+0x54>
 800dd10:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800dd12:	2b01      	cmp	r3, #1
 800dd14:	d008      	beq.n	800dd28 <xQueueGenericSendFromISR+0x54>
 800dd16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dd1a:	f383 8811 	msr	BASEPRI, r3
 800dd1e:	f3bf 8f6f 	isb	sy
 800dd22:	f3bf 8f4f 	dsb	sy
 800dd26:	e7fe      	b.n	800dd26 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dd28:	f7ff fd76 	bl	800d818 <vPortValidateInterruptPriority>
	__asm volatile
 800dd2c:	f3ef 8811 	mrs	r8, BASEPRI
 800dd30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dd34:	f383 8811 	msr	BASEPRI, r3
 800dd38:	f3bf 8f6f 	isb	sy
 800dd3c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dd40:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800dd42:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800dd44:	429a      	cmp	r2, r3
 800dd46:	d301      	bcc.n	800dd4c <xQueueGenericSendFromISR+0x78>
 800dd48:	2e02      	cmp	r6, #2
 800dd4a:	d11e      	bne.n	800dd8a <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dd4c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dd50:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dd52:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dd54:	4632      	mov	r2, r6
 800dd56:	4649      	mov	r1, r9
 800dd58:	4620      	mov	r0, r4
 800dd5a:	f7ff fd96 	bl	800d88a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800dd5e:	1c6b      	adds	r3, r5, #1
 800dd60:	d10e      	bne.n	800dd80 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd62:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800dd64:	b13b      	cbz	r3, 800dd76 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd66:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800dd6a:	f000 fe29 	bl	800e9c0 <xTaskRemoveFromEventList>
 800dd6e:	b110      	cbz	r0, 800dd76 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 800dd70:	b10f      	cbz	r7, 800dd76 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dd72:	2301      	movs	r3, #1
 800dd74:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 800dd76:	2001      	movs	r0, #1
	__asm volatile
 800dd78:	f388 8811 	msr	BASEPRI, r8
}
 800dd7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dd80:	3501      	adds	r5, #1
 800dd82:	b26d      	sxtb	r5, r5
 800dd84:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800dd88:	e7f5      	b.n	800dd76 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 800dd8a:	2000      	movs	r0, #0
 800dd8c:	e7f4      	b.n	800dd78 <xQueueGenericSendFromISR+0xa4>

0800dd8e <xQueueGiveFromISR>:
{
 800dd8e:	b570      	push	{r4, r5, r6, lr}
 800dd90:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800dd92:	4604      	mov	r4, r0
 800dd94:	b940      	cbnz	r0, 800dda8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800dd96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dd9a:	f383 8811 	msr	BASEPRI, r3
 800dd9e:	f3bf 8f6f 	isb	sy
 800dda2:	f3bf 8f4f 	dsb	sy
 800dda6:	e7fe      	b.n	800dda6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dda8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800ddaa:	b143      	cbz	r3, 800ddbe <xQueueGiveFromISR+0x30>
 800ddac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ddb0:	f383 8811 	msr	BASEPRI, r3
 800ddb4:	f3bf 8f6f 	isb	sy
 800ddb8:	f3bf 8f4f 	dsb	sy
 800ddbc:	e7fe      	b.n	800ddbc <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ddbe:	6803      	ldr	r3, [r0, #0]
 800ddc0:	b953      	cbnz	r3, 800ddd8 <xQueueGiveFromISR+0x4a>
 800ddc2:	6883      	ldr	r3, [r0, #8]
 800ddc4:	b143      	cbz	r3, 800ddd8 <xQueueGiveFromISR+0x4a>
 800ddc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ddca:	f383 8811 	msr	BASEPRI, r3
 800ddce:	f3bf 8f6f 	isb	sy
 800ddd2:	f3bf 8f4f 	dsb	sy
 800ddd6:	e7fe      	b.n	800ddd6 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ddd8:	f7ff fd1e 	bl	800d818 <vPortValidateInterruptPriority>
	__asm volatile
 800dddc:	f3ef 8611 	mrs	r6, BASEPRI
 800dde0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dde4:	f383 8811 	msr	BASEPRI, r3
 800dde8:	f3bf 8f6f 	isb	sy
 800ddec:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ddf0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800ddf2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ddf4:	4293      	cmp	r3, r2
 800ddf6:	d919      	bls.n	800de2c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ddf8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ddfc:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800ddfe:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800de00:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800de02:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 800de04:	d10d      	bne.n	800de22 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de06:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800de08:	b13b      	cbz	r3, 800de1a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de0a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800de0e:	f000 fdd7 	bl	800e9c0 <xTaskRemoveFromEventList>
 800de12:	b110      	cbz	r0, 800de1a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 800de14:	b10d      	cbz	r5, 800de1a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800de16:	2301      	movs	r3, #1
 800de18:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800de1a:	2001      	movs	r0, #1
	__asm volatile
 800de1c:	f386 8811 	msr	BASEPRI, r6
}
 800de20:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800de22:	3301      	adds	r3, #1
 800de24:	b25b      	sxtb	r3, r3
 800de26:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800de2a:	e7f6      	b.n	800de1a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800de2c:	2000      	movs	r0, #0
 800de2e:	e7f5      	b.n	800de1c <xQueueGiveFromISR+0x8e>

0800de30 <xQueueReceive>:
{
 800de30:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800de34:	460e      	mov	r6, r1
 800de36:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800de38:	4604      	mov	r4, r0
 800de3a:	b940      	cbnz	r0, 800de4e <xQueueReceive+0x1e>
	__asm volatile
 800de3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800de40:	f383 8811 	msr	BASEPRI, r3
 800de44:	f3bf 8f6f 	isb	sy
 800de48:	f3bf 8f4f 	dsb	sy
 800de4c:	e7fe      	b.n	800de4c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800de4e:	b951      	cbnz	r1, 800de66 <xQueueReceive+0x36>
 800de50:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800de52:	b143      	cbz	r3, 800de66 <xQueueReceive+0x36>
 800de54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800de58:	f383 8811 	msr	BASEPRI, r3
 800de5c:	f3bf 8f6f 	isb	sy
 800de60:	f3bf 8f4f 	dsb	sy
 800de64:	e7fe      	b.n	800de64 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800de66:	f000 fe39 	bl	800eadc <xTaskGetSchedulerState>
 800de6a:	4605      	mov	r5, r0
 800de6c:	b318      	cbz	r0, 800deb6 <xQueueReceive+0x86>
 800de6e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800de70:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800de74:	f7ff fbbe 	bl	800d5f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800de78:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800de7a:	b347      	cbz	r7, 800dece <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800de7c:	4631      	mov	r1, r6
 800de7e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800de80:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800de82:	f7ff fd35 	bl	800d8f0 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800de86:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de88:	6923      	ldr	r3, [r4, #16]
 800de8a:	b173      	cbz	r3, 800deaa <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de8c:	f104 0010 	add.w	r0, r4, #16
 800de90:	f000 fd96 	bl	800e9c0 <xTaskRemoveFromEventList>
 800de94:	b148      	cbz	r0, 800deaa <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 800de96:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800de9a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800de9e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dea2:	f3bf 8f4f 	dsb	sy
 800dea6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800deaa:	f7ff fbc3 	bl	800d634 <vPortExitCritical>
				return pdPASS;
 800deae:	2001      	movs	r0, #1
}
 800deb0:	b004      	add	sp, #16
 800deb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800deb6:	9b01      	ldr	r3, [sp, #4]
 800deb8:	2b00      	cmp	r3, #0
 800deba:	d0d9      	beq.n	800de70 <xQueueReceive+0x40>
 800debc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dec0:	f383 8811 	msr	BASEPRI, r3
 800dec4:	f3bf 8f6f 	isb	sy
 800dec8:	f3bf 8f4f 	dsb	sy
 800decc:	e7fe      	b.n	800decc <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dece:	9b01      	ldr	r3, [sp, #4]
 800ded0:	b91b      	cbnz	r3, 800deda <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 800ded2:	f7ff fbaf 	bl	800d634 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ded6:	2000      	movs	r0, #0
 800ded8:	e7ea      	b.n	800deb0 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800deda:	b915      	cbnz	r5, 800dee2 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dedc:	a802      	add	r0, sp, #8
 800dede:	f000 fdaf 	bl	800ea40 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800dee2:	f7ff fba7 	bl	800d634 <vPortExitCritical>
		vTaskSuspendAll();
 800dee6:	f000 fbbd 	bl	800e664 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800deea:	f7ff fb83 	bl	800d5f4 <vPortEnterCritical>
 800deee:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800def2:	2bff      	cmp	r3, #255	@ 0xff
 800def4:	bf08      	it	eq
 800def6:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800defa:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800defe:	2bff      	cmp	r3, #255	@ 0xff
 800df00:	bf08      	it	eq
 800df02:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800df06:	f7ff fb95 	bl	800d634 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800df0a:	a901      	add	r1, sp, #4
 800df0c:	a802      	add	r0, sp, #8
 800df0e:	f000 fda3 	bl	800ea58 <xTaskCheckForTimeOut>
 800df12:	bb00      	cbnz	r0, 800df56 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800df14:	4620      	mov	r0, r4
 800df16:	f7ff fcad 	bl	800d874 <prvIsQueueEmpty>
 800df1a:	b1b0      	cbz	r0, 800df4a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800df1c:	9901      	ldr	r1, [sp, #4]
 800df1e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800df22:	f000 fd15 	bl	800e950 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800df26:	4620      	mov	r0, r4
 800df28:	f7ff fcf8 	bl	800d91c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800df2c:	f000 fc3e 	bl	800e7ac <xTaskResumeAll>
 800df30:	b948      	cbnz	r0, 800df46 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 800df32:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800df36:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800df3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800df3e:	f3bf 8f4f 	dsb	sy
 800df42:	f3bf 8f6f 	isb	sy
 800df46:	2501      	movs	r5, #1
 800df48:	e794      	b.n	800de74 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800df4a:	4620      	mov	r0, r4
 800df4c:	f7ff fce6 	bl	800d91c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800df50:	f000 fc2c 	bl	800e7ac <xTaskResumeAll>
 800df54:	e7f7      	b.n	800df46 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 800df56:	4620      	mov	r0, r4
 800df58:	f7ff fce0 	bl	800d91c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800df5c:	f000 fc26 	bl	800e7ac <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800df60:	4620      	mov	r0, r4
 800df62:	f7ff fc87 	bl	800d874 <prvIsQueueEmpty>
 800df66:	2800      	cmp	r0, #0
 800df68:	d0ed      	beq.n	800df46 <xQueueReceive+0x116>
 800df6a:	e7b4      	b.n	800ded6 <xQueueReceive+0xa6>

0800df6c <xQueueSemaphoreTake>:
{
 800df6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df6e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800df70:	4604      	mov	r4, r0
{
 800df72:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800df74:	b940      	cbnz	r0, 800df88 <xQueueSemaphoreTake+0x1c>
 800df76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800df7a:	f383 8811 	msr	BASEPRI, r3
 800df7e:	f3bf 8f6f 	isb	sy
 800df82:	f3bf 8f4f 	dsb	sy
 800df86:	e7fe      	b.n	800df86 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800df88:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800df8a:	b145      	cbz	r5, 800df9e <xQueueSemaphoreTake+0x32>
 800df8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800df90:	f383 8811 	msr	BASEPRI, r3
 800df94:	f3bf 8f6f 	isb	sy
 800df98:	f3bf 8f4f 	dsb	sy
 800df9c:	e7fe      	b.n	800df9c <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800df9e:	f000 fd9d 	bl	800eadc <xTaskGetSchedulerState>
 800dfa2:	4606      	mov	r6, r0
 800dfa4:	b320      	cbz	r0, 800dff0 <xQueueSemaphoreTake+0x84>
 800dfa6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800dfa8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800dfaa:	f7ff fb23 	bl	800d5f4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800dfae:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800dfb0:	b353      	cbz	r3, 800e008 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800dfb2:	3b01      	subs	r3, #1
 800dfb4:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dfb6:	6823      	ldr	r3, [r4, #0]
 800dfb8:	b913      	cbnz	r3, 800dfc0 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800dfba:	f000 fe6d 	bl	800ec98 <pvTaskIncrementMutexHeldCount>
 800dfbe:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dfc0:	6923      	ldr	r3, [r4, #16]
 800dfc2:	b173      	cbz	r3, 800dfe2 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dfc4:	f104 0010 	add.w	r0, r4, #16
 800dfc8:	f000 fcfa 	bl	800e9c0 <xTaskRemoveFromEventList>
 800dfcc:	b148      	cbz	r0, 800dfe2 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800dfce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dfd2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800dfd6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dfda:	f3bf 8f4f 	dsb	sy
 800dfde:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dfe2:	f7ff fb27 	bl	800d634 <vPortExitCritical>
				return pdPASS;
 800dfe6:	2001      	movs	r0, #1
}
 800dfe8:	b005      	add	sp, #20
 800dfea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dfec:	4635      	mov	r5, r6
 800dfee:	e7db      	b.n	800dfa8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dff0:	9b01      	ldr	r3, [sp, #4]
 800dff2:	2b00      	cmp	r3, #0
 800dff4:	d0fa      	beq.n	800dfec <xQueueSemaphoreTake+0x80>
 800dff6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dffa:	f383 8811 	msr	BASEPRI, r3
 800dffe:	f3bf 8f6f 	isb	sy
 800e002:	f3bf 8f4f 	dsb	sy
 800e006:	e7fe      	b.n	800e006 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e008:	9b01      	ldr	r3, [sp, #4]
 800e00a:	b953      	cbnz	r3, 800e022 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e00c:	2d00      	cmp	r5, #0
 800e00e:	d066      	beq.n	800e0de <xQueueSemaphoreTake+0x172>
 800e010:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e014:	f383 8811 	msr	BASEPRI, r3
 800e018:	f3bf 8f6f 	isb	sy
 800e01c:	f3bf 8f4f 	dsb	sy
 800e020:	e7fe      	b.n	800e020 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 800e022:	b916      	cbnz	r6, 800e02a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e024:	a802      	add	r0, sp, #8
 800e026:	f000 fd0b 	bl	800ea40 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800e02a:	f7ff fb03 	bl	800d634 <vPortExitCritical>
		vTaskSuspendAll();
 800e02e:	f000 fb19 	bl	800e664 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e032:	f7ff fadf 	bl	800d5f4 <vPortEnterCritical>
 800e036:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800e03a:	2bff      	cmp	r3, #255	@ 0xff
 800e03c:	bf08      	it	eq
 800e03e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 800e042:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800e046:	2bff      	cmp	r3, #255	@ 0xff
 800e048:	bf08      	it	eq
 800e04a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800e04e:	f7ff faf1 	bl	800d634 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e052:	a901      	add	r1, sp, #4
 800e054:	a802      	add	r0, sp, #8
 800e056:	f000 fcff 	bl	800ea58 <xTaskCheckForTimeOut>
 800e05a:	bb50      	cbnz	r0, 800e0b2 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800e05c:	4620      	mov	r0, r4
 800e05e:	f7ff fc09 	bl	800d874 <prvIsQueueEmpty>
 800e062:	b300      	cbz	r0, 800e0a6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e064:	6823      	ldr	r3, [r4, #0]
 800e066:	b93b      	cbnz	r3, 800e078 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 800e068:	f7ff fac4 	bl	800d5f4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e06c:	68a0      	ldr	r0, [r4, #8]
 800e06e:	f000 fd45 	bl	800eafc <xTaskPriorityInherit>
 800e072:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800e074:	f7ff fade 	bl	800d634 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e078:	9901      	ldr	r1, [sp, #4]
 800e07a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800e07e:	f000 fc67 	bl	800e950 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800e082:	4620      	mov	r0, r4
 800e084:	f7ff fc4a 	bl	800d91c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800e088:	f000 fb90 	bl	800e7ac <xTaskResumeAll>
 800e08c:	b948      	cbnz	r0, 800e0a2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 800e08e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e092:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e096:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e09a:	f3bf 8f4f 	dsb	sy
 800e09e:	f3bf 8f6f 	isb	sy
 800e0a2:	2601      	movs	r6, #1
 800e0a4:	e781      	b.n	800dfaa <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 800e0a6:	4620      	mov	r0, r4
 800e0a8:	f7ff fc38 	bl	800d91c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800e0ac:	f000 fb7e 	bl	800e7ac <xTaskResumeAll>
 800e0b0:	e7f7      	b.n	800e0a2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 800e0b2:	4620      	mov	r0, r4
 800e0b4:	f7ff fc32 	bl	800d91c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800e0b8:	f000 fb78 	bl	800e7ac <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800e0bc:	4620      	mov	r0, r4
 800e0be:	f7ff fbd9 	bl	800d874 <prvIsQueueEmpty>
 800e0c2:	2800      	cmp	r0, #0
 800e0c4:	d0ed      	beq.n	800e0a2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 800e0c6:	b165      	cbz	r5, 800e0e2 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 800e0c8:	f7ff fa94 	bl	800d5f4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e0cc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800e0ce:	b119      	cbz	r1, 800e0d8 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e0d0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800e0d2:	6819      	ldr	r1, [r3, #0]
 800e0d4:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e0d8:	68a0      	ldr	r0, [r4, #8]
 800e0da:	f000 fd8f 	bl	800ebfc <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800e0de:	f7ff faa9 	bl	800d634 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e0e2:	2000      	movs	r0, #0
 800e0e4:	e780      	b.n	800dfe8 <xQueueSemaphoreTake+0x7c>

0800e0e6 <xQueueReceiveFromISR>:
{
 800e0e6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e0ea:	4689      	mov	r9, r1
 800e0ec:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800e0ee:	4604      	mov	r4, r0
 800e0f0:	b940      	cbnz	r0, 800e104 <xQueueReceiveFromISR+0x1e>
 800e0f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e0f6:	f383 8811 	msr	BASEPRI, r3
 800e0fa:	f3bf 8f6f 	isb	sy
 800e0fe:	f3bf 8f4f 	dsb	sy
 800e102:	e7fe      	b.n	800e102 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e104:	b951      	cbnz	r1, 800e11c <xQueueReceiveFromISR+0x36>
 800e106:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800e108:	b143      	cbz	r3, 800e11c <xQueueReceiveFromISR+0x36>
 800e10a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e10e:	f383 8811 	msr	BASEPRI, r3
 800e112:	f3bf 8f6f 	isb	sy
 800e116:	f3bf 8f4f 	dsb	sy
 800e11a:	e7fe      	b.n	800e11a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e11c:	f7ff fb7c 	bl	800d818 <vPortValidateInterruptPriority>
	__asm volatile
 800e120:	f3ef 8711 	mrs	r7, BASEPRI
 800e124:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e128:	f383 8811 	msr	BASEPRI, r3
 800e12c:	f3bf 8f6f 	isb	sy
 800e130:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e134:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e136:	b30d      	cbz	r5, 800e17c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e138:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800e13c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800e13e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800e140:	4620      	mov	r0, r4
 800e142:	f7ff fbd5 	bl	800d8f0 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e146:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e148:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e14a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800e14c:	d111      	bne.n	800e172 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e14e:	6923      	ldr	r3, [r4, #16]
 800e150:	b153      	cbz	r3, 800e168 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e152:	f104 0010 	add.w	r0, r4, #16
 800e156:	f000 fc33 	bl	800e9c0 <xTaskRemoveFromEventList>
 800e15a:	b128      	cbz	r0, 800e168 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 800e15c:	f1b8 0f00 	cmp.w	r8, #0
 800e160:	d002      	beq.n	800e168 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e162:	2301      	movs	r3, #1
 800e164:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 800e168:	2001      	movs	r0, #1
	__asm volatile
 800e16a:	f387 8811 	msr	BASEPRI, r7
}
 800e16e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e172:	3601      	adds	r6, #1
 800e174:	b276      	sxtb	r6, r6
 800e176:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800e17a:	e7f5      	b.n	800e168 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 800e17c:	4628      	mov	r0, r5
 800e17e:	e7f4      	b.n	800e16a <xQueueReceiveFromISR+0x84>

0800e180 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800e180:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e182:	4a07      	ldr	r2, [pc, #28]	@ (800e1a0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e184:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e186:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800e18a:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800e18e:	b91d      	cbnz	r5, 800e198 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e190:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e194:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800e196:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e198:	3301      	adds	r3, #1
 800e19a:	2b08      	cmp	r3, #8
 800e19c:	d1f3      	bne.n	800e186 <vQueueAddToRegistry+0x6>
 800e19e:	e7fa      	b.n	800e196 <vQueueAddToRegistry+0x16>
 800e1a0:	200138ec 	.word	0x200138ec

0800e1a4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800e1a4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e1a6:	4a09      	ldr	r2, [pc, #36]	@ (800e1cc <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e1a8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e1aa:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800e1ae:	4281      	cmp	r1, r0
 800e1b0:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800e1b4:	d106      	bne.n	800e1c4 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e1b6:	4a06      	ldr	r2, [pc, #24]	@ (800e1d0 <vQueueUnregisterQueue+0x2c>)
 800e1b8:	2100      	movs	r1, #0
 800e1ba:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800e1be:	4422      	add	r2, r4
 800e1c0:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800e1c2:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e1c4:	3301      	adds	r3, #1
 800e1c6:	2b08      	cmp	r3, #8
 800e1c8:	d1ef      	bne.n	800e1aa <vQueueUnregisterQueue+0x6>
 800e1ca:	e7fa      	b.n	800e1c2 <vQueueUnregisterQueue+0x1e>
 800e1cc:	200138f0 	.word	0x200138f0
 800e1d0:	200138ec 	.word	0x200138ec

0800e1d4 <vQueueDelete>:
{
 800e1d4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800e1d6:	b940      	cbnz	r0, 800e1ea <vQueueDelete+0x16>
	__asm volatile
 800e1d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e1dc:	f383 8811 	msr	BASEPRI, r3
 800e1e0:	f3bf 8f6f 	isb	sy
 800e1e4:	f3bf 8f4f 	dsb	sy
 800e1e8:	e7fe      	b.n	800e1e8 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800e1ea:	f7ff ffdb 	bl	800e1a4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e1ee:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 800e1f2:	b91b      	cbnz	r3, 800e1fc <vQueueDelete+0x28>
}
 800e1f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800e1f8:	f7ff b918 	b.w	800d42c <vPortFree>
}
 800e1fc:	bd10      	pop	{r4, pc}

0800e1fe <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e1fe:	b570      	push	{r4, r5, r6, lr}
 800e200:	4604      	mov	r4, r0
 800e202:	460d      	mov	r5, r1
 800e204:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e206:	f7ff f9f5 	bl	800d5f4 <vPortEnterCritical>
 800e20a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800e20e:	2bff      	cmp	r3, #255	@ 0xff
 800e210:	bf04      	itt	eq
 800e212:	2300      	moveq	r3, #0
 800e214:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 800e218:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800e21c:	2bff      	cmp	r3, #255	@ 0xff
 800e21e:	bf04      	itt	eq
 800e220:	2300      	moveq	r3, #0
 800e222:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800e226:	f7ff fa05 	bl	800d634 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e22a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800e22c:	b92b      	cbnz	r3, 800e23a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e22e:	4632      	mov	r2, r6
 800e230:	4629      	mov	r1, r5
 800e232:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800e236:	f000 fba5 	bl	800e984 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800e23a:	4620      	mov	r0, r4
	}
 800e23c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800e240:	f7ff bb6c 	b.w	800d91c <prvUnlockQueue>

0800e244 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e248:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e24a:	f7ff f9d3 	bl	800d5f4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e24e:	4b30      	ldr	r3, [pc, #192]	@ (800e310 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800e250:	4e30      	ldr	r6, [pc, #192]	@ (800e314 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800e252:	681a      	ldr	r2, [r3, #0]
 800e254:	4f30      	ldr	r7, [pc, #192]	@ (800e318 <prvAddNewTaskToReadyList+0xd4>)
 800e256:	3201      	adds	r2, #1
 800e258:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800e25a:	6835      	ldr	r5, [r6, #0]
 800e25c:	2d00      	cmp	r5, #0
 800e25e:	d14b      	bne.n	800e2f8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800e260:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e262:	681b      	ldr	r3, [r3, #0]
 800e264:	2b01      	cmp	r3, #1
 800e266:	d11f      	bne.n	800e2a8 <prvAddNewTaskToReadyList+0x64>
 800e268:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e26a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e26c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e26e:	f7ff f91b 	bl	800d4a8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e272:	2d38      	cmp	r5, #56	@ 0x38
 800e274:	f108 0814 	add.w	r8, r8, #20
 800e278:	d1f7      	bne.n	800e26a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e27a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 800e340 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800e27e:	4d27      	ldr	r5, [pc, #156]	@ (800e31c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800e280:	4640      	mov	r0, r8
 800e282:	f7ff f911 	bl	800d4a8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e286:	4628      	mov	r0, r5
 800e288:	f7ff f90e 	bl	800d4a8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e28c:	4824      	ldr	r0, [pc, #144]	@ (800e320 <prvAddNewTaskToReadyList+0xdc>)
 800e28e:	f7ff f90b 	bl	800d4a8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e292:	4824      	ldr	r0, [pc, #144]	@ (800e324 <prvAddNewTaskToReadyList+0xe0>)
 800e294:	f7ff f908 	bl	800d4a8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e298:	4823      	ldr	r0, [pc, #140]	@ (800e328 <prvAddNewTaskToReadyList+0xe4>)
 800e29a:	f7ff f905 	bl	800d4a8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e29e:	4b23      	ldr	r3, [pc, #140]	@ (800e32c <prvAddNewTaskToReadyList+0xe8>)
 800e2a0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e2a4:	4b22      	ldr	r3, [pc, #136]	@ (800e330 <prvAddNewTaskToReadyList+0xec>)
 800e2a6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800e2a8:	4a22      	ldr	r2, [pc, #136]	@ (800e334 <prvAddNewTaskToReadyList+0xf0>)
 800e2aa:	6813      	ldr	r3, [r2, #0]
 800e2ac:	3301      	adds	r3, #1
 800e2ae:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800e2b0:	4a21      	ldr	r2, [pc, #132]	@ (800e338 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e2b2:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e2b4:	6811      	ldr	r1, [r2, #0]
 800e2b6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800e2b8:	2014      	movs	r0, #20
 800e2ba:	428b      	cmp	r3, r1
 800e2bc:	fb00 7003 	mla	r0, r0, r3, r7
 800e2c0:	f104 0104 	add.w	r1, r4, #4
 800e2c4:	bf88      	it	hi
 800e2c6:	6013      	strhi	r3, [r2, #0]
 800e2c8:	f7ff f8fc 	bl	800d4c4 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800e2cc:	f7ff f9b2 	bl	800d634 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800e2d0:	4b1a      	ldr	r3, [pc, #104]	@ (800e33c <prvAddNewTaskToReadyList+0xf8>)
 800e2d2:	681b      	ldr	r3, [r3, #0]
 800e2d4:	b173      	cbz	r3, 800e2f4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e2d6:	6833      	ldr	r3, [r6, #0]
 800e2d8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e2da:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800e2dc:	429a      	cmp	r2, r3
 800e2de:	d209      	bcs.n	800e2f4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800e2e0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e2e4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e2e8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e2ec:	f3bf 8f4f 	dsb	sy
 800e2f0:	f3bf 8f6f 	isb	sy
}
 800e2f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800e2f8:	4b10      	ldr	r3, [pc, #64]	@ (800e33c <prvAddNewTaskToReadyList+0xf8>)
 800e2fa:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e2fc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800e2fe:	2a00      	cmp	r2, #0
 800e300:	d1d2      	bne.n	800e2a8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e302:	6832      	ldr	r2, [r6, #0]
 800e304:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800e306:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800e308:	bf98      	it	ls
 800e30a:	6034      	strls	r4, [r6, #0]
 800e30c:	e7cc      	b.n	800e2a8 <prvAddNewTaskToReadyList+0x64>
 800e30e:	bf00      	nop
 800e310:	20013950 	.word	0x20013950
 800e314:	20013e24 	.word	0x20013e24
 800e318:	200139c4 	.word	0x200139c4
 800e31c:	2001399c 	.word	0x2001399c
 800e320:	20013980 	.word	0x20013980
 800e324:	2001396c 	.word	0x2001396c
 800e328:	20013954 	.word	0x20013954
 800e32c:	20013998 	.word	0x20013998
 800e330:	20013994 	.word	0x20013994
 800e334:	20013934 	.word	0x20013934
 800e338:	20013948 	.word	0x20013948
 800e33c:	20013944 	.word	0x20013944
 800e340:	200139b0 	.word	0x200139b0

0800e344 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800e344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e346:	4b15      	ldr	r3, [pc, #84]	@ (800e39c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e348:	4d15      	ldr	r5, [pc, #84]	@ (800e3a0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800e34a:	681c      	ldr	r4, [r3, #0]
{
 800e34c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e34e:	6828      	ldr	r0, [r5, #0]
 800e350:	3004      	adds	r0, #4
{
 800e352:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e354:	f7ff f8d8 	bl	800d508 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800e358:	1c73      	adds	r3, r6, #1
 800e35a:	d107      	bne.n	800e36c <prvAddCurrentTaskToDelayedList+0x28>
 800e35c:	b137      	cbz	r7, 800e36c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e35e:	6829      	ldr	r1, [r5, #0]
 800e360:	4810      	ldr	r0, [pc, #64]	@ (800e3a4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800e362:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e366:	3104      	adds	r1, #4
 800e368:	f7ff b8ac 	b.w	800d4c4 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e36c:	682b      	ldr	r3, [r5, #0]
 800e36e:	19a4      	adds	r4, r4, r6
 800e370:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800e372:	d307      	bcc.n	800e384 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e374:	4b0c      	ldr	r3, [pc, #48]	@ (800e3a8 <prvAddCurrentTaskToDelayedList+0x64>)
 800e376:	6818      	ldr	r0, [r3, #0]
 800e378:	6829      	ldr	r1, [r5, #0]
}
 800e37a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e37e:	3104      	adds	r1, #4
 800e380:	f7ff b8ab 	b.w	800d4da <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e384:	4b09      	ldr	r3, [pc, #36]	@ (800e3ac <prvAddCurrentTaskToDelayedList+0x68>)
 800e386:	6818      	ldr	r0, [r3, #0]
 800e388:	6829      	ldr	r1, [r5, #0]
 800e38a:	3104      	adds	r1, #4
 800e38c:	f7ff f8a5 	bl	800d4da <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800e390:	4b07      	ldr	r3, [pc, #28]	@ (800e3b0 <prvAddCurrentTaskToDelayedList+0x6c>)
 800e392:	681a      	ldr	r2, [r3, #0]
 800e394:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800e396:	bf88      	it	hi
 800e398:	601c      	strhi	r4, [r3, #0]
}
 800e39a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e39c:	2001394c 	.word	0x2001394c
 800e3a0:	20013e24 	.word	0x20013e24
 800e3a4:	20013954 	.word	0x20013954
 800e3a8:	20013994 	.word	0x20013994
 800e3ac:	20013998 	.word	0x20013998
 800e3b0:	20013930 	.word	0x20013930

0800e3b4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e3b4:	4a06      	ldr	r2, [pc, #24]	@ (800e3d0 <prvResetNextTaskUnblockTime+0x1c>)
 800e3b6:	6813      	ldr	r3, [r2, #0]
 800e3b8:	6819      	ldr	r1, [r3, #0]
 800e3ba:	4b06      	ldr	r3, [pc, #24]	@ (800e3d4 <prvResetNextTaskUnblockTime+0x20>)
 800e3bc:	b919      	cbnz	r1, 800e3c6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800e3be:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e3c2:	601a      	str	r2, [r3, #0]
}
 800e3c4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e3c6:	6812      	ldr	r2, [r2, #0]
 800e3c8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e3ca:	68d2      	ldr	r2, [r2, #12]
 800e3cc:	6852      	ldr	r2, [r2, #4]
 800e3ce:	e7f8      	b.n	800e3c2 <prvResetNextTaskUnblockTime+0xe>
 800e3d0:	20013998 	.word	0x20013998
 800e3d4:	20013930 	.word	0x20013930

0800e3d8 <prvDeleteTCB>:
	{
 800e3d8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e3da:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800e3de:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e3e0:	b93b      	cbnz	r3, 800e3f2 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800e3e2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800e3e4:	f7ff f822 	bl	800d42c <vPortFree>
				vPortFree( pxTCB );
 800e3e8:	4620      	mov	r0, r4
	}
 800e3ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800e3ee:	f7ff b81d 	b.w	800d42c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e3f2:	2b01      	cmp	r3, #1
 800e3f4:	d0f9      	beq.n	800e3ea <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e3f6:	2b02      	cmp	r3, #2
 800e3f8:	d008      	beq.n	800e40c <prvDeleteTCB+0x34>
 800e3fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e3fe:	f383 8811 	msr	BASEPRI, r3
 800e402:	f3bf 8f6f 	isb	sy
 800e406:	f3bf 8f4f 	dsb	sy
 800e40a:	e7fe      	b.n	800e40a <prvDeleteTCB+0x32>
	}
 800e40c:	bd10      	pop	{r4, pc}
	...

0800e410 <prvIdleTask>:
{
 800e410:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e412:	4c13      	ldr	r4, [pc, #76]	@ (800e460 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e414:	4f13      	ldr	r7, [pc, #76]	@ (800e464 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800e416:	4d14      	ldr	r5, [pc, #80]	@ (800e468 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e418:	6823      	ldr	r3, [r4, #0]
 800e41a:	b973      	cbnz	r3, 800e43a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e41c:	4b13      	ldr	r3, [pc, #76]	@ (800e46c <prvIdleTask+0x5c>)
 800e41e:	681b      	ldr	r3, [r3, #0]
 800e420:	2b01      	cmp	r3, #1
 800e422:	d9f8      	bls.n	800e416 <prvIdleTask+0x6>
				taskYIELD();
 800e424:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e428:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e42c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e430:	f3bf 8f4f 	dsb	sy
 800e434:	f3bf 8f6f 	isb	sy
 800e438:	e7ed      	b.n	800e416 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800e43a:	f7ff f8db 	bl	800d5f4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e43e:	68fb      	ldr	r3, [r7, #12]
 800e440:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e442:	1d30      	adds	r0, r6, #4
 800e444:	f7ff f860 	bl	800d508 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e448:	682b      	ldr	r3, [r5, #0]
 800e44a:	3b01      	subs	r3, #1
 800e44c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e44e:	6823      	ldr	r3, [r4, #0]
 800e450:	3b01      	subs	r3, #1
 800e452:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800e454:	f7ff f8ee 	bl	800d634 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800e458:	4630      	mov	r0, r6
 800e45a:	f7ff ffbd 	bl	800e3d8 <prvDeleteTCB>
 800e45e:	e7db      	b.n	800e418 <prvIdleTask+0x8>
 800e460:	20013968 	.word	0x20013968
 800e464:	2001396c 	.word	0x2001396c
 800e468:	20013950 	.word	0x20013950
 800e46c:	200139c4 	.word	0x200139c4

0800e470 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e474:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e478:	0096      	lsls	r6, r2, #2
 800e47a:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e47c:	4607      	mov	r7, r0
 800e47e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e480:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800e482:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e484:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e486:	f01b fe50 	bl	802a12a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e48a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800e48c:	3e04      	subs	r6, #4
 800e48e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e490:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 800e494:	b3b5      	cbz	r5, 800e504 <prvInitialiseNewTask.constprop.0+0x94>
 800e496:	1e6b      	subs	r3, r5, #1
 800e498:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 800e49c:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e49e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e4a2:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800e4a6:	b109      	cbz	r1, 800e4ac <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800e4a8:	42ab      	cmp	r3, r5
 800e4aa:	d1f8      	bne.n	800e49e <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e4ac:	2300      	movs	r3, #0
 800e4ae:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e4b2:	9d08      	ldr	r5, [sp, #32]
 800e4b4:	2d37      	cmp	r5, #55	@ 0x37
 800e4b6:	bf28      	it	cs
 800e4b8:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e4ba:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e4be:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e4c0:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e4c2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e4c4:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e4c8:	f7fe fff9 	bl	800d4be <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e4cc:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e4d0:	f104 0018 	add.w	r0, r4, #24
 800e4d4:	f7fe fff3 	bl	800d4be <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800e4d8:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e4dc:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e4de:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e4e0:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e4e2:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e4e6:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e4ea:	4642      	mov	r2, r8
 800e4ec:	4639      	mov	r1, r7
 800e4ee:	4630      	mov	r0, r6
 800e4f0:	f7ff f858 	bl	800d5a4 <pxPortInitialiseStack>
 800e4f4:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e4f6:	f1b9 0f00 	cmp.w	r9, #0
 800e4fa:	d001      	beq.n	800e500 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e4fc:	f8c9 4000 	str.w	r4, [r9]
}
 800e500:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e504:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800e508:	e7d3      	b.n	800e4b2 <prvInitialiseNewTask.constprop.0+0x42>

0800e50a <xTaskCreateStatic>:
	{
 800e50a:	b570      	push	{r4, r5, r6, lr}
 800e50c:	b086      	sub	sp, #24
 800e50e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e512:	b945      	cbnz	r5, 800e526 <xTaskCreateStatic+0x1c>
 800e514:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e518:	f383 8811 	msr	BASEPRI, r3
 800e51c:	f3bf 8f6f 	isb	sy
 800e520:	f3bf 8f4f 	dsb	sy
 800e524:	e7fe      	b.n	800e524 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800e526:	b944      	cbnz	r4, 800e53a <xTaskCreateStatic+0x30>
 800e528:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e52c:	f383 8811 	msr	BASEPRI, r3
 800e530:	f3bf 8f6f 	isb	sy
 800e534:	f3bf 8f4f 	dsb	sy
 800e538:	e7fe      	b.n	800e538 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e53a:	2660      	movs	r6, #96	@ 0x60
 800e53c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e53e:	9e05      	ldr	r6, [sp, #20]
 800e540:	2e60      	cmp	r6, #96	@ 0x60
 800e542:	d008      	beq.n	800e556 <xTaskCreateStatic+0x4c>
 800e544:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e548:	f383 8811 	msr	BASEPRI, r3
 800e54c:	f3bf 8f6f 	isb	sy
 800e550:	f3bf 8f4f 	dsb	sy
 800e554:	e7fe      	b.n	800e554 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e556:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e558:	2502      	movs	r5, #2
 800e55a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e55e:	ad04      	add	r5, sp, #16
 800e560:	9501      	str	r5, [sp, #4]
 800e562:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800e564:	9402      	str	r4, [sp, #8]
 800e566:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e568:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e56a:	f7ff ff81 	bl	800e470 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e56e:	4620      	mov	r0, r4
 800e570:	f7ff fe68 	bl	800e244 <prvAddNewTaskToReadyList>
	}
 800e574:	9804      	ldr	r0, [sp, #16]
 800e576:	b006      	add	sp, #24
 800e578:	bd70      	pop	{r4, r5, r6, pc}

0800e57a <xTaskCreate>:
	{
 800e57a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e57e:	4607      	mov	r7, r0
 800e580:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e582:	0090      	lsls	r0, r2, #2
	{
 800e584:	4688      	mov	r8, r1
 800e586:	4616      	mov	r6, r2
 800e588:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e58a:	f7fe feb7 	bl	800d2fc <pvPortMalloc>
			if( pxStack != NULL )
 800e58e:	4605      	mov	r5, r0
 800e590:	b920      	cbnz	r0, 800e59c <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e592:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800e596:	b005      	add	sp, #20
 800e598:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e59c:	2060      	movs	r0, #96	@ 0x60
 800e59e:	f7fe fead 	bl	800d2fc <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e5a2:	4604      	mov	r4, r0
 800e5a4:	b198      	cbz	r0, 800e5ce <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e5a6:	2300      	movs	r3, #0
 800e5a8:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e5ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 800e5ae:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e5b0:	9301      	str	r3, [sp, #4]
 800e5b2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e5b4:	9002      	str	r0, [sp, #8]
 800e5b6:	9300      	str	r3, [sp, #0]
 800e5b8:	4632      	mov	r2, r6
 800e5ba:	464b      	mov	r3, r9
 800e5bc:	4641      	mov	r1, r8
 800e5be:	4638      	mov	r0, r7
 800e5c0:	f7ff ff56 	bl	800e470 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e5c4:	4620      	mov	r0, r4
 800e5c6:	f7ff fe3d 	bl	800e244 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e5ca:	2001      	movs	r0, #1
 800e5cc:	e7e3      	b.n	800e596 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800e5ce:	4628      	mov	r0, r5
 800e5d0:	f7fe ff2c 	bl	800d42c <vPortFree>
		if( pxNewTCB != NULL )
 800e5d4:	e7dd      	b.n	800e592 <xTaskCreate+0x18>
	...

0800e5d8 <vTaskStartScheduler>:
{
 800e5d8:	b510      	push	{r4, lr}
 800e5da:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e5dc:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e5de:	aa07      	add	r2, sp, #28
 800e5e0:	a906      	add	r1, sp, #24
 800e5e2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e5e4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e5e8:	f7fe fe4a 	bl	800d280 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e5ec:	9b05      	ldr	r3, [sp, #20]
 800e5ee:	9302      	str	r3, [sp, #8]
 800e5f0:	9b06      	ldr	r3, [sp, #24]
 800e5f2:	9a07      	ldr	r2, [sp, #28]
 800e5f4:	4916      	ldr	r1, [pc, #88]	@ (800e650 <vTaskStartScheduler+0x78>)
 800e5f6:	4817      	ldr	r0, [pc, #92]	@ (800e654 <vTaskStartScheduler+0x7c>)
 800e5f8:	e9cd 4300 	strd	r4, r3, [sp]
 800e5fc:	4623      	mov	r3, r4
 800e5fe:	f7ff ff84 	bl	800e50a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800e602:	b318      	cbz	r0, 800e64c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800e604:	f000 fba6 	bl	800ed54 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e608:	2801      	cmp	r0, #1
 800e60a:	d114      	bne.n	800e636 <vTaskStartScheduler+0x5e>
 800e60c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e610:	f383 8811 	msr	BASEPRI, r3
 800e614:	f3bf 8f6f 	isb	sy
 800e618:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800e61c:	4b0e      	ldr	r3, [pc, #56]	@ (800e658 <vTaskStartScheduler+0x80>)
 800e61e:	f04f 32ff 	mov.w	r2, #4294967295
 800e622:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800e624:	4b0d      	ldr	r3, [pc, #52]	@ (800e65c <vTaskStartScheduler+0x84>)
 800e626:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e628:	4b0d      	ldr	r3, [pc, #52]	@ (800e660 <vTaskStartScheduler+0x88>)
 800e62a:	601c      	str	r4, [r3, #0]
}
 800e62c:	b008      	add	sp, #32
 800e62e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800e632:	f7ff b86f 	b.w	800d714 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e636:	3001      	adds	r0, #1
 800e638:	d108      	bne.n	800e64c <vTaskStartScheduler+0x74>
 800e63a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e63e:	f383 8811 	msr	BASEPRI, r3
 800e642:	f3bf 8f6f 	isb	sy
 800e646:	f3bf 8f4f 	dsb	sy
 800e64a:	e7fe      	b.n	800e64a <vTaskStartScheduler+0x72>
}
 800e64c:	b008      	add	sp, #32
 800e64e:	bd10      	pop	{r4, pc}
 800e650:	0802c3cc 	.word	0x0802c3cc
 800e654:	0800e411 	.word	0x0800e411
 800e658:	20013930 	.word	0x20013930
 800e65c:	20013944 	.word	0x20013944
 800e660:	2001394c 	.word	0x2001394c

0800e664 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e664:	4a02      	ldr	r2, [pc, #8]	@ (800e670 <vTaskSuspendAll+0xc>)
 800e666:	6813      	ldr	r3, [r2, #0]
 800e668:	3301      	adds	r3, #1
 800e66a:	6013      	str	r3, [r2, #0]
}
 800e66c:	4770      	bx	lr
 800e66e:	bf00      	nop
 800e670:	2001392c 	.word	0x2001392c

0800e674 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e674:	4b01      	ldr	r3, [pc, #4]	@ (800e67c <xTaskGetTickCount+0x8>)
 800e676:	6818      	ldr	r0, [r3, #0]
}
 800e678:	4770      	bx	lr
 800e67a:	bf00      	nop
 800e67c:	2001394c 	.word	0x2001394c

0800e680 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e680:	4b3f      	ldr	r3, [pc, #252]	@ (800e780 <xTaskIncrementTick+0x100>)
 800e682:	681b      	ldr	r3, [r3, #0]
{
 800e684:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e688:	2b00      	cmp	r3, #0
 800e68a:	d172      	bne.n	800e772 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e68c:	4b3d      	ldr	r3, [pc, #244]	@ (800e784 <xTaskIncrementTick+0x104>)
 800e68e:	681c      	ldr	r4, [r3, #0]
 800e690:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800e692:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e694:	b9bc      	cbnz	r4, 800e6c6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800e696:	4b3c      	ldr	r3, [pc, #240]	@ (800e788 <xTaskIncrementTick+0x108>)
 800e698:	681a      	ldr	r2, [r3, #0]
 800e69a:	6812      	ldr	r2, [r2, #0]
 800e69c:	b142      	cbz	r2, 800e6b0 <xTaskIncrementTick+0x30>
 800e69e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e6a2:	f383 8811 	msr	BASEPRI, r3
 800e6a6:	f3bf 8f6f 	isb	sy
 800e6aa:	f3bf 8f4f 	dsb	sy
 800e6ae:	e7fe      	b.n	800e6ae <xTaskIncrementTick+0x2e>
 800e6b0:	4a36      	ldr	r2, [pc, #216]	@ (800e78c <xTaskIncrementTick+0x10c>)
 800e6b2:	6819      	ldr	r1, [r3, #0]
 800e6b4:	6810      	ldr	r0, [r2, #0]
 800e6b6:	6018      	str	r0, [r3, #0]
 800e6b8:	6011      	str	r1, [r2, #0]
 800e6ba:	4a35      	ldr	r2, [pc, #212]	@ (800e790 <xTaskIncrementTick+0x110>)
 800e6bc:	6813      	ldr	r3, [r2, #0]
 800e6be:	3301      	adds	r3, #1
 800e6c0:	6013      	str	r3, [r2, #0]
 800e6c2:	f7ff fe77 	bl	800e3b4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e6c6:	4d33      	ldr	r5, [pc, #204]	@ (800e794 <xTaskIncrementTick+0x114>)
 800e6c8:	4e33      	ldr	r6, [pc, #204]	@ (800e798 <xTaskIncrementTick+0x118>)
 800e6ca:	682b      	ldr	r3, [r5, #0]
 800e6cc:	4f33      	ldr	r7, [pc, #204]	@ (800e79c <xTaskIncrementTick+0x11c>)
 800e6ce:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 800e6d0:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e6d4:	d212      	bcs.n	800e6fc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e6d6:	683a      	ldr	r2, [r7, #0]
 800e6d8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800e6da:	2114      	movs	r1, #20
 800e6dc:	434a      	muls	r2, r1
 800e6de:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 800e6e0:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 800e6e2:	4a2f      	ldr	r2, [pc, #188]	@ (800e7a0 <xTaskIncrementTick+0x120>)
 800e6e4:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 800e6e6:	bf28      	it	cs
 800e6e8:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 800e6ec:	2a00      	cmp	r2, #0
 800e6ee:	bf18      	it	ne
 800e6f0:	f04f 0b01 	movne.w	fp, #1
}
 800e6f4:	4658      	mov	r0, fp
 800e6f6:	b003      	add	sp, #12
 800e6f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e6fc:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 800e788 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800e700:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 800e7a8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e704:	f8d9 2000 	ldr.w	r2, [r9]
 800e708:	6812      	ldr	r2, [r2, #0]
 800e70a:	b91a      	cbnz	r2, 800e714 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e70c:	f04f 32ff 	mov.w	r2, #4294967295
 800e710:	602a      	str	r2, [r5, #0]
					break;
 800e712:	e7e0      	b.n	800e6d6 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e714:	f8d9 2000 	ldr.w	r2, [r9]
 800e718:	68d2      	ldr	r2, [r2, #12]
 800e71a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e71e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 800e722:	428c      	cmp	r4, r1
 800e724:	d201      	bcs.n	800e72a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800e726:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e728:	e7d5      	b.n	800e6d6 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e72a:	f108 0304 	add.w	r3, r8, #4
 800e72e:	4618      	mov	r0, r3
 800e730:	9301      	str	r3, [sp, #4]
 800e732:	f7fe fee9 	bl	800d508 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e736:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 800e73a:	b119      	cbz	r1, 800e744 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e73c:	f108 0018 	add.w	r0, r8, #24
 800e740:	f7fe fee2 	bl	800d508 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e744:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 800e748:	f8da 1000 	ldr.w	r1, [sl]
 800e74c:	2314      	movs	r3, #20
 800e74e:	4288      	cmp	r0, r1
 800e750:	bf88      	it	hi
 800e752:	f8ca 0000 	strhi.w	r0, [sl]
 800e756:	9901      	ldr	r1, [sp, #4]
 800e758:	fb03 6000 	mla	r0, r3, r0, r6
 800e75c:	f7fe feb2 	bl	800d4c4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e760:	6838      	ldr	r0, [r7, #0]
 800e762:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800e766:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 800e768:	4291      	cmp	r1, r2
 800e76a:	bf28      	it	cs
 800e76c:	f04f 0b01 	movcs.w	fp, #1
 800e770:	e7c8      	b.n	800e704 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800e772:	4a0c      	ldr	r2, [pc, #48]	@ (800e7a4 <xTaskIncrementTick+0x124>)
 800e774:	6813      	ldr	r3, [r2, #0]
 800e776:	3301      	adds	r3, #1
 800e778:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800e77a:	f04f 0b00 	mov.w	fp, #0
 800e77e:	e7b9      	b.n	800e6f4 <xTaskIncrementTick+0x74>
 800e780:	2001392c 	.word	0x2001392c
 800e784:	2001394c 	.word	0x2001394c
 800e788:	20013998 	.word	0x20013998
 800e78c:	20013994 	.word	0x20013994
 800e790:	20013938 	.word	0x20013938
 800e794:	20013930 	.word	0x20013930
 800e798:	200139c4 	.word	0x200139c4
 800e79c:	20013e24 	.word	0x20013e24
 800e7a0:	2001393c 	.word	0x2001393c
 800e7a4:	20013940 	.word	0x20013940
 800e7a8:	20013948 	.word	0x20013948

0800e7ac <xTaskResumeAll>:
{
 800e7ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800e7b0:	4c30      	ldr	r4, [pc, #192]	@ (800e874 <xTaskResumeAll+0xc8>)
 800e7b2:	6823      	ldr	r3, [r4, #0]
 800e7b4:	b943      	cbnz	r3, 800e7c8 <xTaskResumeAll+0x1c>
 800e7b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e7ba:	f383 8811 	msr	BASEPRI, r3
 800e7be:	f3bf 8f6f 	isb	sy
 800e7c2:	f3bf 8f4f 	dsb	sy
 800e7c6:	e7fe      	b.n	800e7c6 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 800e7c8:	f7fe ff14 	bl	800d5f4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e7cc:	6823      	ldr	r3, [r4, #0]
 800e7ce:	3b01      	subs	r3, #1
 800e7d0:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e7d2:	6824      	ldr	r4, [r4, #0]
 800e7d4:	b12c      	cbz	r4, 800e7e2 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800e7d6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800e7d8:	f7fe ff2c 	bl	800d634 <vPortExitCritical>
}
 800e7dc:	4620      	mov	r0, r4
 800e7de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e7e2:	4b25      	ldr	r3, [pc, #148]	@ (800e878 <xTaskResumeAll+0xcc>)
 800e7e4:	681b      	ldr	r3, [r3, #0]
 800e7e6:	2b00      	cmp	r3, #0
 800e7e8:	d0f5      	beq.n	800e7d6 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e7ea:	4d24      	ldr	r5, [pc, #144]	@ (800e87c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800e7ec:	4e24      	ldr	r6, [pc, #144]	@ (800e880 <xTaskResumeAll+0xd4>)
 800e7ee:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800e890 <xTaskResumeAll+0xe4>
 800e7f2:	e01d      	b.n	800e830 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e7f4:	68eb      	ldr	r3, [r5, #12]
 800e7f6:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e7f8:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e7fa:	f104 0018 	add.w	r0, r4, #24
 800e7fe:	f7fe fe83 	bl	800d508 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e802:	4638      	mov	r0, r7
 800e804:	f7fe fe80 	bl	800d508 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e808:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800e80a:	6832      	ldr	r2, [r6, #0]
 800e80c:	2014      	movs	r0, #20
 800e80e:	4293      	cmp	r3, r2
 800e810:	fb00 8003 	mla	r0, r0, r3, r8
 800e814:	4639      	mov	r1, r7
 800e816:	bf88      	it	hi
 800e818:	6033      	strhi	r3, [r6, #0]
 800e81a:	f7fe fe53 	bl	800d4c4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e81e:	4b19      	ldr	r3, [pc, #100]	@ (800e884 <xTaskResumeAll+0xd8>)
 800e820:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800e822:	681b      	ldr	r3, [r3, #0]
 800e824:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e826:	429a      	cmp	r2, r3
 800e828:	d302      	bcc.n	800e830 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 800e82a:	4b17      	ldr	r3, [pc, #92]	@ (800e888 <xTaskResumeAll+0xdc>)
 800e82c:	2201      	movs	r2, #1
 800e82e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e830:	682b      	ldr	r3, [r5, #0]
 800e832:	2b00      	cmp	r3, #0
 800e834:	d1de      	bne.n	800e7f4 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 800e836:	b10c      	cbz	r4, 800e83c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 800e838:	f7ff fdbc 	bl	800e3b4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e83c:	4d13      	ldr	r5, [pc, #76]	@ (800e88c <xTaskResumeAll+0xe0>)
 800e83e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e840:	b144      	cbz	r4, 800e854 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800e842:	4e11      	ldr	r6, [pc, #68]	@ (800e888 <xTaskResumeAll+0xdc>)
 800e844:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800e846:	f7ff ff1b 	bl	800e680 <xTaskIncrementTick>
 800e84a:	b100      	cbz	r0, 800e84e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 800e84c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e84e:	3c01      	subs	r4, #1
 800e850:	d1f9      	bne.n	800e846 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 800e852:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800e854:	4b0c      	ldr	r3, [pc, #48]	@ (800e888 <xTaskResumeAll+0xdc>)
 800e856:	681b      	ldr	r3, [r3, #0]
 800e858:	2b00      	cmp	r3, #0
 800e85a:	d0bc      	beq.n	800e7d6 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 800e85c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e860:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e864:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e868:	f3bf 8f4f 	dsb	sy
 800e86c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e870:	2401      	movs	r4, #1
 800e872:	e7b1      	b.n	800e7d8 <xTaskResumeAll+0x2c>
 800e874:	2001392c 	.word	0x2001392c
 800e878:	20013950 	.word	0x20013950
 800e87c:	20013980 	.word	0x20013980
 800e880:	20013948 	.word	0x20013948
 800e884:	20013e24 	.word	0x20013e24
 800e888:	2001393c 	.word	0x2001393c
 800e88c:	20013940 	.word	0x20013940
 800e890:	200139c4 	.word	0x200139c4

0800e894 <vTaskDelay>:
	{
 800e894:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e896:	b950      	cbnz	r0, 800e8ae <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800e898:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e89c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e8a0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e8a4:	f3bf 8f4f 	dsb	sy
 800e8a8:	f3bf 8f6f 	isb	sy
	}
 800e8ac:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e8ae:	4b0a      	ldr	r3, [pc, #40]	@ (800e8d8 <vTaskDelay+0x44>)
 800e8b0:	6819      	ldr	r1, [r3, #0]
 800e8b2:	b141      	cbz	r1, 800e8c6 <vTaskDelay+0x32>
 800e8b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e8b8:	f383 8811 	msr	BASEPRI, r3
 800e8bc:	f3bf 8f6f 	isb	sy
 800e8c0:	f3bf 8f4f 	dsb	sy
 800e8c4:	e7fe      	b.n	800e8c4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800e8c6:	f7ff fecd 	bl	800e664 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800e8ca:	f7ff fd3b 	bl	800e344 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800e8ce:	f7ff ff6d 	bl	800e7ac <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800e8d2:	2800      	cmp	r0, #0
 800e8d4:	d0e0      	beq.n	800e898 <vTaskDelay+0x4>
 800e8d6:	e7e9      	b.n	800e8ac <vTaskDelay+0x18>
 800e8d8:	2001392c 	.word	0x2001392c

0800e8dc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e8dc:	4b17      	ldr	r3, [pc, #92]	@ (800e93c <vTaskSwitchContext+0x60>)
 800e8de:	681a      	ldr	r2, [r3, #0]
 800e8e0:	4b17      	ldr	r3, [pc, #92]	@ (800e940 <vTaskSwitchContext+0x64>)
{
 800e8e2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e8e4:	b112      	cbz	r2, 800e8ec <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800e8e6:	2201      	movs	r2, #1
 800e8e8:	601a      	str	r2, [r3, #0]
}
 800e8ea:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8ec:	4d15      	ldr	r5, [pc, #84]	@ (800e944 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800e8ee:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8f0:	682a      	ldr	r2, [r5, #0]
 800e8f2:	4915      	ldr	r1, [pc, #84]	@ (800e948 <vTaskSwitchContext+0x6c>)
 800e8f4:	2614      	movs	r6, #20
 800e8f6:	fb06 f302 	mul.w	r3, r6, r2
 800e8fa:	18c8      	adds	r0, r1, r3
 800e8fc:	58cc      	ldr	r4, [r1, r3]
 800e8fe:	b18c      	cbz	r4, 800e924 <vTaskSwitchContext+0x48>
 800e900:	6844      	ldr	r4, [r0, #4]
 800e902:	3308      	adds	r3, #8
 800e904:	6864      	ldr	r4, [r4, #4]
 800e906:	6044      	str	r4, [r0, #4]
 800e908:	440b      	add	r3, r1
 800e90a:	429c      	cmp	r4, r3
 800e90c:	bf04      	itt	eq
 800e90e:	6863      	ldreq	r3, [r4, #4]
 800e910:	6043      	streq	r3, [r0, #4]
 800e912:	2314      	movs	r3, #20
 800e914:	fb03 1102 	mla	r1, r3, r2, r1
 800e918:	684b      	ldr	r3, [r1, #4]
 800e91a:	68d9      	ldr	r1, [r3, #12]
 800e91c:	4b0b      	ldr	r3, [pc, #44]	@ (800e94c <vTaskSwitchContext+0x70>)
 800e91e:	6019      	str	r1, [r3, #0]
 800e920:	602a      	str	r2, [r5, #0]
}
 800e922:	e7e2      	b.n	800e8ea <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e924:	b942      	cbnz	r2, 800e938 <vTaskSwitchContext+0x5c>
 800e926:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e92a:	f383 8811 	msr	BASEPRI, r3
 800e92e:	f3bf 8f6f 	isb	sy
 800e932:	f3bf 8f4f 	dsb	sy
 800e936:	e7fe      	b.n	800e936 <vTaskSwitchContext+0x5a>
 800e938:	3a01      	subs	r2, #1
 800e93a:	e7dc      	b.n	800e8f6 <vTaskSwitchContext+0x1a>
 800e93c:	2001392c 	.word	0x2001392c
 800e940:	2001393c 	.word	0x2001393c
 800e944:	20013948 	.word	0x20013948
 800e948:	200139c4 	.word	0x200139c4
 800e94c:	20013e24 	.word	0x20013e24

0800e950 <vTaskPlaceOnEventList>:
{
 800e950:	b510      	push	{r4, lr}
 800e952:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800e954:	b940      	cbnz	r0, 800e968 <vTaskPlaceOnEventList+0x18>
 800e956:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e95a:	f383 8811 	msr	BASEPRI, r3
 800e95e:	f3bf 8f6f 	isb	sy
 800e962:	f3bf 8f4f 	dsb	sy
 800e966:	e7fe      	b.n	800e966 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e968:	4b05      	ldr	r3, [pc, #20]	@ (800e980 <vTaskPlaceOnEventList+0x30>)
 800e96a:	6819      	ldr	r1, [r3, #0]
 800e96c:	3118      	adds	r1, #24
 800e96e:	f7fe fdb4 	bl	800d4da <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800e972:	4620      	mov	r0, r4
 800e974:	2101      	movs	r1, #1
}
 800e976:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800e97a:	f7ff bce3 	b.w	800e344 <prvAddCurrentTaskToDelayedList>
 800e97e:	bf00      	nop
 800e980:	20013e24 	.word	0x20013e24

0800e984 <vTaskPlaceOnEventListRestricted>:
	{
 800e984:	b538      	push	{r3, r4, r5, lr}
 800e986:	460d      	mov	r5, r1
 800e988:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800e98a:	b940      	cbnz	r0, 800e99e <vTaskPlaceOnEventListRestricted+0x1a>
 800e98c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e990:	f383 8811 	msr	BASEPRI, r3
 800e994:	f3bf 8f6f 	isb	sy
 800e998:	f3bf 8f4f 	dsb	sy
 800e99c:	e7fe      	b.n	800e99c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e99e:	4b07      	ldr	r3, [pc, #28]	@ (800e9bc <vTaskPlaceOnEventListRestricted+0x38>)
 800e9a0:	6819      	ldr	r1, [r3, #0]
 800e9a2:	3118      	adds	r1, #24
 800e9a4:	f7fe fd8e 	bl	800d4c4 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800e9a8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800e9aa:	4621      	mov	r1, r4
 800e9ac:	bf0c      	ite	eq
 800e9ae:	4628      	moveq	r0, r5
 800e9b0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800e9b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800e9b8:	f7ff bcc4 	b.w	800e344 <prvAddCurrentTaskToDelayedList>
 800e9bc:	20013e24 	.word	0x20013e24

0800e9c0 <xTaskRemoveFromEventList>:
{
 800e9c0:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9c2:	68c3      	ldr	r3, [r0, #12]
 800e9c4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800e9c6:	b944      	cbnz	r4, 800e9da <xTaskRemoveFromEventList+0x1a>
 800e9c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e9cc:	f383 8811 	msr	BASEPRI, r3
 800e9d0:	f3bf 8f6f 	isb	sy
 800e9d4:	f3bf 8f4f 	dsb	sy
 800e9d8:	e7fe      	b.n	800e9d8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800e9da:	f104 0518 	add.w	r5, r4, #24
 800e9de:	4628      	mov	r0, r5
 800e9e0:	f7fe fd92 	bl	800d508 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e9e4:	4b10      	ldr	r3, [pc, #64]	@ (800ea28 <xTaskRemoveFromEventList+0x68>)
 800e9e6:	681b      	ldr	r3, [r3, #0]
 800e9e8:	b9db      	cbnz	r3, 800ea22 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800e9ea:	1d25      	adds	r5, r4, #4
 800e9ec:	4628      	mov	r0, r5
 800e9ee:	f7fe fd8b 	bl	800d508 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800e9f2:	4a0e      	ldr	r2, [pc, #56]	@ (800ea2c <xTaskRemoveFromEventList+0x6c>)
 800e9f4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800e9f6:	6811      	ldr	r1, [r2, #0]
 800e9f8:	428b      	cmp	r3, r1
 800e9fa:	bf88      	it	hi
 800e9fc:	6013      	strhi	r3, [r2, #0]
 800e9fe:	4a0c      	ldr	r2, [pc, #48]	@ (800ea30 <xTaskRemoveFromEventList+0x70>)
 800ea00:	2014      	movs	r0, #20
 800ea02:	4629      	mov	r1, r5
 800ea04:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ea08:	f7fe fd5c 	bl	800d4c4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ea0c:	4b09      	ldr	r3, [pc, #36]	@ (800ea34 <xTaskRemoveFromEventList+0x74>)
 800ea0e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800ea10:	681b      	ldr	r3, [r3, #0]
 800ea12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ea14:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800ea16:	bf83      	ittte	hi
 800ea18:	4b07      	ldrhi	r3, [pc, #28]	@ (800ea38 <xTaskRemoveFromEventList+0x78>)
 800ea1a:	2001      	movhi	r0, #1
 800ea1c:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800ea1e:	2000      	movls	r0, #0
}
 800ea20:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ea22:	4806      	ldr	r0, [pc, #24]	@ (800ea3c <xTaskRemoveFromEventList+0x7c>)
 800ea24:	4629      	mov	r1, r5
 800ea26:	e7ef      	b.n	800ea08 <xTaskRemoveFromEventList+0x48>
 800ea28:	2001392c 	.word	0x2001392c
 800ea2c:	20013948 	.word	0x20013948
 800ea30:	200139c4 	.word	0x200139c4
 800ea34:	20013e24 	.word	0x20013e24
 800ea38:	2001393c 	.word	0x2001393c
 800ea3c:	20013980 	.word	0x20013980

0800ea40 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ea40:	4b03      	ldr	r3, [pc, #12]	@ (800ea50 <vTaskInternalSetTimeOutState+0x10>)
 800ea42:	681b      	ldr	r3, [r3, #0]
 800ea44:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ea46:	4b03      	ldr	r3, [pc, #12]	@ (800ea54 <vTaskInternalSetTimeOutState+0x14>)
 800ea48:	681b      	ldr	r3, [r3, #0]
 800ea4a:	6043      	str	r3, [r0, #4]
}
 800ea4c:	4770      	bx	lr
 800ea4e:	bf00      	nop
 800ea50:	20013938 	.word	0x20013938
 800ea54:	2001394c 	.word	0x2001394c

0800ea58 <xTaskCheckForTimeOut>:
{
 800ea58:	b570      	push	{r4, r5, r6, lr}
 800ea5a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800ea5c:	4605      	mov	r5, r0
 800ea5e:	b940      	cbnz	r0, 800ea72 <xTaskCheckForTimeOut+0x1a>
 800ea60:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ea64:	f383 8811 	msr	BASEPRI, r3
 800ea68:	f3bf 8f6f 	isb	sy
 800ea6c:	f3bf 8f4f 	dsb	sy
 800ea70:	e7fe      	b.n	800ea70 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800ea72:	b941      	cbnz	r1, 800ea86 <xTaskCheckForTimeOut+0x2e>
 800ea74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ea78:	f383 8811 	msr	BASEPRI, r3
 800ea7c:	f3bf 8f6f 	isb	sy
 800ea80:	f3bf 8f4f 	dsb	sy
 800ea84:	e7fe      	b.n	800ea84 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800ea86:	f7fe fdb5 	bl	800d5f4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800ea8a:	4b0f      	ldr	r3, [pc, #60]	@ (800eac8 <xTaskCheckForTimeOut+0x70>)
 800ea8c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800ea8e:	6823      	ldr	r3, [r4, #0]
 800ea90:	1c5a      	adds	r2, r3, #1
 800ea92:	d010      	beq.n	800eab6 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800ea94:	480d      	ldr	r0, [pc, #52]	@ (800eacc <xTaskCheckForTimeOut+0x74>)
 800ea96:	682e      	ldr	r6, [r5, #0]
 800ea98:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800ea9a:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800ea9c:	4286      	cmp	r6, r0
 800ea9e:	d001      	beq.n	800eaa4 <xTaskCheckForTimeOut+0x4c>
 800eaa0:	428a      	cmp	r2, r1
 800eaa2:	d90f      	bls.n	800eac4 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800eaa4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800eaa6:	4283      	cmp	r3, r0
 800eaa8:	d90a      	bls.n	800eac0 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800eaaa:	1a5b      	subs	r3, r3, r1
 800eaac:	4413      	add	r3, r2
 800eaae:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800eab0:	4628      	mov	r0, r5
 800eab2:	f7ff ffc5 	bl	800ea40 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800eab6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800eab8:	f7fe fdbc 	bl	800d634 <vPortExitCritical>
}
 800eabc:	4620      	mov	r0, r4
 800eabe:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800eac0:	2300      	movs	r3, #0
 800eac2:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800eac4:	2401      	movs	r4, #1
 800eac6:	e7f7      	b.n	800eab8 <xTaskCheckForTimeOut+0x60>
 800eac8:	2001394c 	.word	0x2001394c
 800eacc:	20013938 	.word	0x20013938

0800ead0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800ead0:	4b01      	ldr	r3, [pc, #4]	@ (800ead8 <vTaskMissedYield+0x8>)
 800ead2:	2201      	movs	r2, #1
 800ead4:	601a      	str	r2, [r3, #0]
}
 800ead6:	4770      	bx	lr
 800ead8:	2001393c 	.word	0x2001393c

0800eadc <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800eadc:	4b05      	ldr	r3, [pc, #20]	@ (800eaf4 <xTaskGetSchedulerState+0x18>)
 800eade:	681b      	ldr	r3, [r3, #0]
 800eae0:	b133      	cbz	r3, 800eaf0 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eae2:	4b05      	ldr	r3, [pc, #20]	@ (800eaf8 <xTaskGetSchedulerState+0x1c>)
 800eae4:	6818      	ldr	r0, [r3, #0]
 800eae6:	fab0 f080 	clz	r0, r0
 800eaea:	0940      	lsrs	r0, r0, #5
 800eaec:	0040      	lsls	r0, r0, #1
 800eaee:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800eaf0:	2001      	movs	r0, #1
	}
 800eaf2:	4770      	bx	lr
 800eaf4:	20013944 	.word	0x20013944
 800eaf8:	2001392c 	.word	0x2001392c

0800eafc <xTaskPriorityInherit>:
	{
 800eafc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800eafe:	4604      	mov	r4, r0
 800eb00:	b338      	cbz	r0, 800eb52 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800eb02:	4d1a      	ldr	r5, [pc, #104]	@ (800eb6c <xTaskPriorityInherit+0x70>)
 800eb04:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800eb06:	682a      	ldr	r2, [r5, #0]
 800eb08:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800eb0a:	4293      	cmp	r3, r2
 800eb0c:	d226      	bcs.n	800eb5c <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800eb0e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800eb10:	4e17      	ldr	r6, [pc, #92]	@ (800eb70 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800eb12:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eb14:	bfa1      	itttt	ge
 800eb16:	682a      	ldrge	r2, [r5, #0]
 800eb18:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800eb1a:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800eb1e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800eb20:	2214      	movs	r2, #20
 800eb22:	fb02 6303 	mla	r3, r2, r3, r6
 800eb26:	6942      	ldr	r2, [r0, #20]
 800eb28:	429a      	cmp	r2, r3
 800eb2a:	d113      	bne.n	800eb54 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eb2c:	1d07      	adds	r7, r0, #4
 800eb2e:	4638      	mov	r0, r7
 800eb30:	f7fe fcea 	bl	800d508 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800eb34:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800eb36:	4a0f      	ldr	r2, [pc, #60]	@ (800eb74 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800eb38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800eb3a:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800eb3c:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800eb3e:	2014      	movs	r0, #20
 800eb40:	428b      	cmp	r3, r1
 800eb42:	fb00 6003 	mla	r0, r0, r3, r6
 800eb46:	4639      	mov	r1, r7
 800eb48:	bf88      	it	hi
 800eb4a:	6013      	strhi	r3, [r2, #0]
 800eb4c:	f7fe fcba 	bl	800d4c4 <vListInsertEnd>
				xReturn = pdTRUE;
 800eb50:	2001      	movs	r0, #1
	}
 800eb52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800eb54:	682b      	ldr	r3, [r5, #0]
 800eb56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eb58:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800eb5a:	e7f9      	b.n	800eb50 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800eb5c:	682b      	ldr	r3, [r5, #0]
 800eb5e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800eb60:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eb62:	4298      	cmp	r0, r3
 800eb64:	bf2c      	ite	cs
 800eb66:	2000      	movcs	r0, #0
 800eb68:	2001      	movcc	r0, #1
 800eb6a:	e7f2      	b.n	800eb52 <xTaskPriorityInherit+0x56>
 800eb6c:	20013e24 	.word	0x20013e24
 800eb70:	200139c4 	.word	0x200139c4
 800eb74:	20013948 	.word	0x20013948

0800eb78 <xTaskPriorityDisinherit>:
	{
 800eb78:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800eb7a:	b908      	cbnz	r0, 800eb80 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800eb7c:	2000      	movs	r0, #0
	}
 800eb7e:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800eb80:	4b1b      	ldr	r3, [pc, #108]	@ (800ebf0 <xTaskPriorityDisinherit+0x78>)
 800eb82:	681c      	ldr	r4, [r3, #0]
 800eb84:	4284      	cmp	r4, r0
 800eb86:	d008      	beq.n	800eb9a <xTaskPriorityDisinherit+0x22>
 800eb88:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eb8c:	f383 8811 	msr	BASEPRI, r3
 800eb90:	f3bf 8f6f 	isb	sy
 800eb94:	f3bf 8f4f 	dsb	sy
 800eb98:	e7fe      	b.n	800eb98 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800eb9a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800eb9c:	b943      	cbnz	r3, 800ebb0 <xTaskPriorityDisinherit+0x38>
 800eb9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eba2:	f383 8811 	msr	BASEPRI, r3
 800eba6:	f3bf 8f6f 	isb	sy
 800ebaa:	f3bf 8f4f 	dsb	sy
 800ebae:	e7fe      	b.n	800ebae <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ebb0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800ebb2:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800ebb4:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ebb6:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800ebb8:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ebba:	d0df      	beq.n	800eb7c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800ebbc:	2b00      	cmp	r3, #0
 800ebbe:	d1dd      	bne.n	800eb7c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ebc0:	1d25      	adds	r5, r4, #4
 800ebc2:	4628      	mov	r0, r5
 800ebc4:	f7fe fca0 	bl	800d508 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ebc8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800ebca:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ebcc:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800ebd0:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800ebd2:	4a08      	ldr	r2, [pc, #32]	@ (800ebf4 <xTaskPriorityDisinherit+0x7c>)
 800ebd4:	6811      	ldr	r1, [r2, #0]
 800ebd6:	428b      	cmp	r3, r1
 800ebd8:	bf88      	it	hi
 800ebda:	6013      	strhi	r3, [r2, #0]
 800ebdc:	4a06      	ldr	r2, [pc, #24]	@ (800ebf8 <xTaskPriorityDisinherit+0x80>)
 800ebde:	2014      	movs	r0, #20
 800ebe0:	fb00 2003 	mla	r0, r0, r3, r2
 800ebe4:	4629      	mov	r1, r5
 800ebe6:	f7fe fc6d 	bl	800d4c4 <vListInsertEnd>
					xReturn = pdTRUE;
 800ebea:	2001      	movs	r0, #1
		return xReturn;
 800ebec:	e7c7      	b.n	800eb7e <xTaskPriorityDisinherit+0x6>
 800ebee:	bf00      	nop
 800ebf0:	20013e24 	.word	0x20013e24
 800ebf4:	20013948 	.word	0x20013948
 800ebf8:	200139c4 	.word	0x200139c4

0800ebfc <vTaskPriorityDisinheritAfterTimeout>:
	{
 800ebfc:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800ebfe:	4604      	mov	r4, r0
 800ec00:	2800      	cmp	r0, #0
 800ec02:	d041      	beq.n	800ec88 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800ec04:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800ec06:	b942      	cbnz	r2, 800ec1a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800ec08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ec0c:	f383 8811 	msr	BASEPRI, r3
 800ec10:	f3bf 8f6f 	isb	sy
 800ec14:	f3bf 8f4f 	dsb	sy
 800ec18:	e7fe      	b.n	800ec18 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800ec1a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800ec1c:	4299      	cmp	r1, r3
 800ec1e:	bf38      	it	cc
 800ec20:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800ec22:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800ec24:	428b      	cmp	r3, r1
 800ec26:	d02f      	beq.n	800ec88 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ec28:	2a01      	cmp	r2, #1
 800ec2a:	d12d      	bne.n	800ec88 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800ec2c:	4a17      	ldr	r2, [pc, #92]	@ (800ec8c <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800ec2e:	6812      	ldr	r2, [r2, #0]
 800ec30:	4282      	cmp	r2, r0
 800ec32:	d108      	bne.n	800ec46 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800ec34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ec38:	f383 8811 	msr	BASEPRI, r3
 800ec3c:	f3bf 8f6f 	isb	sy
 800ec40:	f3bf 8f4f 	dsb	sy
 800ec44:	e7fe      	b.n	800ec44 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ec46:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ec48:	4d11      	ldr	r5, [pc, #68]	@ (800ec90 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 800ec4a:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ec4c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ec4e:	f04f 0214 	mov.w	r2, #20
 800ec52:	fb02 5303 	mla	r3, r2, r3, r5
 800ec56:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ec58:	bfa4      	itt	ge
 800ec5a:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800ec5e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ec60:	429a      	cmp	r2, r3
 800ec62:	d111      	bne.n	800ec88 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ec64:	1d06      	adds	r6, r0, #4
 800ec66:	4630      	mov	r0, r6
 800ec68:	f7fe fc4e 	bl	800d508 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800ec6c:	4a09      	ldr	r2, [pc, #36]	@ (800ec94 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800ec6e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ec70:	6811      	ldr	r1, [r2, #0]
 800ec72:	2014      	movs	r0, #20
 800ec74:	428b      	cmp	r3, r1
 800ec76:	fb00 5003 	mla	r0, r0, r3, r5
 800ec7a:	4631      	mov	r1, r6
	}
 800ec7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800ec80:	bf88      	it	hi
 800ec82:	6013      	strhi	r3, [r2, #0]
 800ec84:	f7fe bc1e 	b.w	800d4c4 <vListInsertEnd>
	}
 800ec88:	bd70      	pop	{r4, r5, r6, pc}
 800ec8a:	bf00      	nop
 800ec8c:	20013e24 	.word	0x20013e24
 800ec90:	200139c4 	.word	0x200139c4
 800ec94:	20013948 	.word	0x20013948

0800ec98 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ec98:	4b04      	ldr	r3, [pc, #16]	@ (800ecac <pvTaskIncrementMutexHeldCount+0x14>)
 800ec9a:	681a      	ldr	r2, [r3, #0]
 800ec9c:	b11a      	cbz	r2, 800eca6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ec9e:	6819      	ldr	r1, [r3, #0]
 800eca0:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800eca2:	3201      	adds	r2, #1
 800eca4:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800eca6:	6818      	ldr	r0, [r3, #0]
	}
 800eca8:	4770      	bx	lr
 800ecaa:	bf00      	nop
 800ecac:	20013e24 	.word	0x20013e24

0800ecb0 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 800ecb0:	4291      	cmp	r1, r2
{
 800ecb2:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ecb4:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ecb6:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800ecb8:	d80a      	bhi.n	800ecd0 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ecba:	1ad2      	subs	r2, r2, r3
 800ecbc:	6983      	ldr	r3, [r0, #24]
 800ecbe:	429a      	cmp	r2, r3
 800ecc0:	d20d      	bcs.n	800ecde <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ecc2:	4b08      	ldr	r3, [pc, #32]	@ (800ece4 <prvInsertTimerInActiveList+0x34>)
 800ecc4:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ecc6:	6818      	ldr	r0, [r3, #0]
 800ecc8:	f7fe fc07 	bl	800d4da <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800eccc:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800ecce:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800ecd0:	429a      	cmp	r2, r3
 800ecd2:	d201      	bcs.n	800ecd8 <prvInsertTimerInActiveList+0x28>
 800ecd4:	4299      	cmp	r1, r3
 800ecd6:	d202      	bcs.n	800ecde <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ecd8:	4b03      	ldr	r3, [pc, #12]	@ (800ece8 <prvInsertTimerInActiveList+0x38>)
 800ecda:	1d01      	adds	r1, r0, #4
 800ecdc:	e7f3      	b.n	800ecc6 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800ecde:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800ece0:	e7f5      	b.n	800ecce <prvInsertTimerInActiveList+0x1e>
 800ece2:	bf00      	nop
 800ece4:	20013f24 	.word	0x20013f24
 800ece8:	20013f28 	.word	0x20013f28

0800ecec <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800ecec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800ecee:	4c11      	ldr	r4, [pc, #68]	@ (800ed34 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800ecf0:	f7fe fc80 	bl	800d5f4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800ecf4:	6825      	ldr	r5, [r4, #0]
 800ecf6:	b9bd      	cbnz	r5, 800ed28 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800ecf8:	4f0f      	ldr	r7, [pc, #60]	@ (800ed38 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800ecfa:	4e10      	ldr	r6, [pc, #64]	@ (800ed3c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800ecfc:	4638      	mov	r0, r7
 800ecfe:	f7fe fbd3 	bl	800d4a8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800ed02:	4630      	mov	r0, r6
 800ed04:	f7fe fbd0 	bl	800d4a8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800ed08:	4b0d      	ldr	r3, [pc, #52]	@ (800ed40 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ed0a:	4a0e      	ldr	r2, [pc, #56]	@ (800ed44 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800ed0c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800ed0e:	4b0e      	ldr	r3, [pc, #56]	@ (800ed48 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ed10:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800ed12:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ed14:	200a      	movs	r0, #10
 800ed16:	4b0d      	ldr	r3, [pc, #52]	@ (800ed4c <prvCheckForValidListAndQueue+0x60>)
 800ed18:	9500      	str	r5, [sp, #0]
 800ed1a:	f7fe fe74 	bl	800da06 <xQueueGenericCreateStatic>
 800ed1e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800ed20:	b110      	cbz	r0, 800ed28 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800ed22:	490b      	ldr	r1, [pc, #44]	@ (800ed50 <prvCheckForValidListAndQueue+0x64>)
 800ed24:	f7ff fa2c 	bl	800e180 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800ed28:	b003      	add	sp, #12
 800ed2a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800ed2e:	f7fe bc81 	b.w	800d634 <vPortExitCritical>
 800ed32:	bf00      	nop
 800ed34:	20013f20 	.word	0x20013f20
 800ed38:	20013f40 	.word	0x20013f40
 800ed3c:	20013f2c 	.word	0x20013f2c
 800ed40:	20013f28 	.word	0x20013f28
 800ed44:	20013e78 	.word	0x20013e78
 800ed48:	20013f24 	.word	0x20013f24
 800ed4c:	20013e28 	.word	0x20013e28
 800ed50:	0802c3d1 	.word	0x0802c3d1

0800ed54 <xTimerCreateTimerTask>:
{
 800ed54:	b510      	push	{r4, lr}
 800ed56:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800ed58:	f7ff ffc8 	bl	800ecec <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800ed5c:	4b12      	ldr	r3, [pc, #72]	@ (800eda8 <xTimerCreateTimerTask+0x54>)
 800ed5e:	681b      	ldr	r3, [r3, #0]
 800ed60:	b1b3      	cbz	r3, 800ed90 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800ed62:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ed64:	aa07      	add	r2, sp, #28
 800ed66:	a906      	add	r1, sp, #24
 800ed68:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800ed6a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ed6e:	f7fe fa93 	bl	800d298 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800ed72:	9b05      	ldr	r3, [sp, #20]
 800ed74:	9302      	str	r3, [sp, #8]
 800ed76:	9b06      	ldr	r3, [sp, #24]
 800ed78:	9301      	str	r3, [sp, #4]
 800ed7a:	2302      	movs	r3, #2
 800ed7c:	9300      	str	r3, [sp, #0]
 800ed7e:	9a07      	ldr	r2, [sp, #28]
 800ed80:	490a      	ldr	r1, [pc, #40]	@ (800edac <xTimerCreateTimerTask+0x58>)
 800ed82:	480b      	ldr	r0, [pc, #44]	@ (800edb0 <xTimerCreateTimerTask+0x5c>)
 800ed84:	4623      	mov	r3, r4
 800ed86:	f7ff fbc0 	bl	800e50a <xTaskCreateStatic>
 800ed8a:	4b0a      	ldr	r3, [pc, #40]	@ (800edb4 <xTimerCreateTimerTask+0x60>)
 800ed8c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800ed8e:	b940      	cbnz	r0, 800eda2 <xTimerCreateTimerTask+0x4e>
 800ed90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ed94:	f383 8811 	msr	BASEPRI, r3
 800ed98:	f3bf 8f6f 	isb	sy
 800ed9c:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800eda0:	e7fe      	b.n	800eda0 <xTimerCreateTimerTask+0x4c>
}
 800eda2:	2001      	movs	r0, #1
 800eda4:	b008      	add	sp, #32
 800eda6:	bd10      	pop	{r4, pc}
 800eda8:	20013f20 	.word	0x20013f20
 800edac:	0802c3d6 	.word	0x0802c3d6
 800edb0:	0800eeb5 	.word	0x0800eeb5
 800edb4:	20013f1c 	.word	0x20013f1c

0800edb8 <xTimerGenericCommand>:
{
 800edb8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800edba:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800edbc:	4604      	mov	r4, r0
{
 800edbe:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800edc0:	b940      	cbnz	r0, 800edd4 <xTimerGenericCommand+0x1c>
 800edc2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800edc6:	f383 8811 	msr	BASEPRI, r3
 800edca:	f3bf 8f6f 	isb	sy
 800edce:	f3bf 8f4f 	dsb	sy
 800edd2:	e7fe      	b.n	800edd2 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800edd4:	4d0d      	ldr	r5, [pc, #52]	@ (800ee0c <xTimerGenericCommand+0x54>)
 800edd6:	6828      	ldr	r0, [r5, #0]
 800edd8:	b180      	cbz	r0, 800edfc <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800edda:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800eddc:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ede0:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800ede2:	dc0d      	bgt.n	800ee00 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ede4:	f7ff fe7a 	bl	800eadc <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ede8:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800edea:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800edec:	bf08      	it	eq
 800edee:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800edf0:	6828      	ldr	r0, [r5, #0]
 800edf2:	bf18      	it	ne
 800edf4:	461a      	movne	r2, r3
 800edf6:	4669      	mov	r1, sp
 800edf8:	f7fe feba 	bl	800db70 <xQueueGenericSend>
}
 800edfc:	b004      	add	sp, #16
 800edfe:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800ee00:	2300      	movs	r3, #0
 800ee02:	4669      	mov	r1, sp
 800ee04:	f7fe ff66 	bl	800dcd4 <xQueueGenericSendFromISR>
 800ee08:	e7f8      	b.n	800edfc <xTimerGenericCommand+0x44>
 800ee0a:	bf00      	nop
 800ee0c:	20013f20 	.word	0x20013f20

0800ee10 <prvSampleTimeNow>:
{
 800ee10:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800ee14:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 800eeb0 <prvSampleTimeNow+0xa0>
{
 800ee18:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800ee1a:	f7ff fc2b 	bl	800e674 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ee1e:	f8d8 3000 	ldr.w	r3, [r8]
 800ee22:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800ee24:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800ee26:	d909      	bls.n	800ee3c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ee28:	4f1f      	ldr	r7, [pc, #124]	@ (800eea8 <prvSampleTimeNow+0x98>)
 800ee2a:	683b      	ldr	r3, [r7, #0]
 800ee2c:	681a      	ldr	r2, [r3, #0]
 800ee2e:	b96a      	cbnz	r2, 800ee4c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800ee30:	4a1e      	ldr	r2, [pc, #120]	@ (800eeac <prvSampleTimeNow+0x9c>)
 800ee32:	6811      	ldr	r1, [r2, #0]
 800ee34:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800ee36:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800ee38:	2301      	movs	r3, #1
 800ee3a:	e000      	b.n	800ee3e <prvSampleTimeNow+0x2e>
 800ee3c:	2300      	movs	r3, #0
}
 800ee3e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800ee40:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800ee42:	f8c8 5000 	str.w	r5, [r8]
}
 800ee46:	b002      	add	sp, #8
 800ee48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ee4c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee4e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ee50:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ee54:	f104 0a04 	add.w	sl, r4, #4
 800ee58:	4650      	mov	r0, sl
 800ee5a:	f7fe fb55 	bl	800d508 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ee5e:	6a23      	ldr	r3, [r4, #32]
 800ee60:	4620      	mov	r0, r4
 800ee62:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ee64:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800ee68:	075b      	lsls	r3, r3, #29
 800ee6a:	d5de      	bpl.n	800ee2a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ee6c:	69a3      	ldr	r3, [r4, #24]
 800ee6e:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800ee70:	4599      	cmp	r9, r3
 800ee72:	d206      	bcs.n	800ee82 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ee74:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ee76:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ee78:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ee7a:	4651      	mov	r1, sl
 800ee7c:	f7fe fb2d 	bl	800d4da <vListInsert>
 800ee80:	e7d3      	b.n	800ee2a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ee82:	2300      	movs	r3, #0
 800ee84:	9300      	str	r3, [sp, #0]
 800ee86:	464a      	mov	r2, r9
 800ee88:	4619      	mov	r1, r3
 800ee8a:	4620      	mov	r0, r4
 800ee8c:	f7ff ff94 	bl	800edb8 <xTimerGenericCommand>
				configASSERT( xResult );
 800ee90:	2800      	cmp	r0, #0
 800ee92:	d1ca      	bne.n	800ee2a <prvSampleTimeNow+0x1a>
 800ee94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ee98:	f383 8811 	msr	BASEPRI, r3
 800ee9c:	f3bf 8f6f 	isb	sy
 800eea0:	f3bf 8f4f 	dsb	sy
 800eea4:	e7fe      	b.n	800eea4 <prvSampleTimeNow+0x94>
 800eea6:	bf00      	nop
 800eea8:	20013f28 	.word	0x20013f28
 800eeac:	20013f24 	.word	0x20013f24
 800eeb0:	20013f18 	.word	0x20013f18

0800eeb4 <prvTimerTask>:
{
 800eeb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800eeb8:	4d6e      	ldr	r5, [pc, #440]	@ (800f074 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800eeba:	4e6f      	ldr	r6, [pc, #444]	@ (800f078 <prvTimerTask+0x1c4>)
{
 800eebc:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800eebe:	682b      	ldr	r3, [r5, #0]
 800eec0:	f8d3 8000 	ldr.w	r8, [r3]
 800eec4:	f1b8 0f00 	cmp.w	r8, #0
 800eec8:	d035      	beq.n	800ef36 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800eeca:	68db      	ldr	r3, [r3, #12]
 800eecc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800eed0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800eed2:	f7ff fbc7 	bl	800e664 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800eed6:	a804      	add	r0, sp, #16
 800eed8:	f7ff ff9a 	bl	800ee10 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800eedc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800eede:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800eee0:	2b00      	cmp	r3, #0
 800eee2:	d169      	bne.n	800efb8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800eee4:	2c00      	cmp	r4, #0
 800eee6:	d14c      	bne.n	800ef82 <prvTimerTask+0xce>
 800eee8:	4540      	cmp	r0, r8
 800eeea:	d350      	bcc.n	800ef8e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800eeec:	f7ff fc5e 	bl	800e7ac <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eef0:	682b      	ldr	r3, [r5, #0]
 800eef2:	68db      	ldr	r3, [r3, #12]
 800eef4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800eef6:	1d38      	adds	r0, r7, #4
 800eef8:	f7fe fb06 	bl	800d508 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800eefc:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800ef00:	0758      	lsls	r0, r3, #29
 800ef02:	d51a      	bpl.n	800ef3a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800ef04:	69b9      	ldr	r1, [r7, #24]
 800ef06:	4643      	mov	r3, r8
 800ef08:	464a      	mov	r2, r9
 800ef0a:	4441      	add	r1, r8
 800ef0c:	4638      	mov	r0, r7
 800ef0e:	f7ff fecf 	bl	800ecb0 <prvInsertTimerInActiveList>
 800ef12:	b1b0      	cbz	r0, 800ef42 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ef14:	9400      	str	r4, [sp, #0]
 800ef16:	4623      	mov	r3, r4
 800ef18:	4642      	mov	r2, r8
 800ef1a:	4621      	mov	r1, r4
 800ef1c:	4638      	mov	r0, r7
 800ef1e:	f7ff ff4b 	bl	800edb8 <xTimerGenericCommand>
			configASSERT( xResult );
 800ef22:	b970      	cbnz	r0, 800ef42 <prvTimerTask+0x8e>
 800ef24:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ef28:	f383 8811 	msr	BASEPRI, r3
 800ef2c:	f3bf 8f6f 	isb	sy
 800ef30:	f3bf 8f4f 	dsb	sy
 800ef34:	e7fe      	b.n	800ef34 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ef36:	2401      	movs	r4, #1
 800ef38:	e7cb      	b.n	800eed2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ef3a:	f023 0301 	bic.w	r3, r3, #1
 800ef3e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ef42:	6a3b      	ldr	r3, [r7, #32]
 800ef44:	4638      	mov	r0, r7
 800ef46:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ef48:	6830      	ldr	r0, [r6, #0]
 800ef4a:	2200      	movs	r2, #0
 800ef4c:	a904      	add	r1, sp, #16
 800ef4e:	f7fe ff6f 	bl	800de30 <xQueueReceive>
 800ef52:	2800      	cmp	r0, #0
 800ef54:	d0b3      	beq.n	800eebe <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ef56:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ef58:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ef5a:	2b00      	cmp	r3, #0
 800ef5c:	db2f      	blt.n	800efbe <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ef5e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ef60:	6963      	ldr	r3, [r4, #20]
 800ef62:	2b00      	cmp	r3, #0
 800ef64:	d132      	bne.n	800efcc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ef66:	a803      	add	r0, sp, #12
 800ef68:	f7ff ff52 	bl	800ee10 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800ef6c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ef6e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800ef70:	2b09      	cmp	r3, #9
 800ef72:	d8e9      	bhi.n	800ef48 <prvTimerTask+0x94>
 800ef74:	e8df f003 	tbb	[pc, r3]
 800ef78:	572e2e2e 	.word	0x572e2e2e
 800ef7c:	2e2e765e 	.word	0x2e2e765e
 800ef80:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800ef82:	4b3e      	ldr	r3, [pc, #248]	@ (800f07c <prvTimerTask+0x1c8>)
 800ef84:	681b      	ldr	r3, [r3, #0]
 800ef86:	681c      	ldr	r4, [r3, #0]
 800ef88:	fab4 f484 	clz	r4, r4
 800ef8c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ef8e:	6830      	ldr	r0, [r6, #0]
 800ef90:	4622      	mov	r2, r4
 800ef92:	eba8 0109 	sub.w	r1, r8, r9
 800ef96:	f7ff f932 	bl	800e1fe <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800ef9a:	f7ff fc07 	bl	800e7ac <xTaskResumeAll>
 800ef9e:	2800      	cmp	r0, #0
 800efa0:	d1d2      	bne.n	800ef48 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800efa2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800efa6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800efaa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800efae:	f3bf 8f4f 	dsb	sy
 800efb2:	f3bf 8f6f 	isb	sy
 800efb6:	e7c7      	b.n	800ef48 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800efb8:	f7ff fbf8 	bl	800e7ac <xTaskResumeAll>
}
 800efbc:	e7c4      	b.n	800ef48 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800efbe:	9b05      	ldr	r3, [sp, #20]
 800efc0:	9907      	ldr	r1, [sp, #28]
 800efc2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800efc4:	9b04      	ldr	r3, [sp, #16]
 800efc6:	2b00      	cmp	r3, #0
 800efc8:	dbbe      	blt.n	800ef48 <prvTimerTask+0x94>
 800efca:	e7c8      	b.n	800ef5e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800efcc:	1d20      	adds	r0, r4, #4
 800efce:	f7fe fa9b 	bl	800d508 <uxListRemove>
 800efd2:	e7c8      	b.n	800ef66 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800efd4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800efd8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800efda:	f043 0301 	orr.w	r3, r3, #1
 800efde:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800efe2:	9b05      	ldr	r3, [sp, #20]
 800efe4:	4620      	mov	r0, r4
 800efe6:	4419      	add	r1, r3
 800efe8:	f7ff fe62 	bl	800ecb0 <prvInsertTimerInActiveList>
 800efec:	2800      	cmp	r0, #0
 800efee:	d0ab      	beq.n	800ef48 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800eff0:	6a23      	ldr	r3, [r4, #32]
 800eff2:	4620      	mov	r0, r4
 800eff4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800eff6:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800effa:	0759      	lsls	r1, r3, #29
 800effc:	d5a4      	bpl.n	800ef48 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800effe:	69a2      	ldr	r2, [r4, #24]
 800f000:	9905      	ldr	r1, [sp, #20]
 800f002:	2300      	movs	r3, #0
 800f004:	440a      	add	r2, r1
 800f006:	9300      	str	r3, [sp, #0]
 800f008:	4619      	mov	r1, r3
 800f00a:	4620      	mov	r0, r4
 800f00c:	f7ff fed4 	bl	800edb8 <xTimerGenericCommand>
							configASSERT( xResult );
 800f010:	2800      	cmp	r0, #0
 800f012:	d199      	bne.n	800ef48 <prvTimerTask+0x94>
 800f014:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f018:	f383 8811 	msr	BASEPRI, r3
 800f01c:	f3bf 8f6f 	isb	sy
 800f020:	f3bf 8f4f 	dsb	sy
 800f024:	e7fe      	b.n	800f024 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f026:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f02a:	f023 0301 	bic.w	r3, r3, #1
 800f02e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800f032:	e789      	b.n	800ef48 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f034:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800f038:	f043 0301 	orr.w	r3, r3, #1
 800f03c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f040:	9905      	ldr	r1, [sp, #20]
 800f042:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f044:	b941      	cbnz	r1, 800f058 <prvTimerTask+0x1a4>
 800f046:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f04a:	f383 8811 	msr	BASEPRI, r3
 800f04e:	f3bf 8f6f 	isb	sy
 800f052:	f3bf 8f4f 	dsb	sy
 800f056:	e7fe      	b.n	800f056 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f058:	4603      	mov	r3, r0
 800f05a:	4401      	add	r1, r0
 800f05c:	4620      	mov	r0, r4
 800f05e:	f7ff fe27 	bl	800ecb0 <prvInsertTimerInActiveList>
					break;
 800f062:	e771      	b.n	800ef48 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f064:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800f068:	079a      	lsls	r2, r3, #30
 800f06a:	d4de      	bmi.n	800f02a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800f06c:	4620      	mov	r0, r4
 800f06e:	f7fe f9dd 	bl	800d42c <vPortFree>
 800f072:	e769      	b.n	800ef48 <prvTimerTask+0x94>
 800f074:	20013f28 	.word	0x20013f28
 800f078:	20013f20 	.word	0x20013f20
 800f07c:	20013f24 	.word	0x20013f24

0800f080 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f080:	8880      	ldrh	r0, [r0, #4]
 800f082:	4770      	bx	lr

0800f084 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f084:	b570      	push	{r4, r5, r6, lr}
 800f086:	6803      	ldr	r3, [r0, #0]
 800f088:	4605      	mov	r5, r0
 800f08a:	460c      	mov	r4, r1
 800f08c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f08e:	2100      	movs	r1, #0
 800f090:	4798      	blx	r3
 800f092:	682b      	ldr	r3, [r5, #0]
 800f094:	4606      	mov	r6, r0
 800f096:	6a1b      	ldr	r3, [r3, #32]
 800f098:	4628      	mov	r0, r5
 800f09a:	4798      	blx	r3
 800f09c:	1ba4      	subs	r4, r4, r6
 800f09e:	b2a4      	uxth	r4, r4
 800f0a0:	fbb4 f0f0 	udiv	r0, r4, r0
 800f0a4:	bd70      	pop	{r4, r5, r6, pc}

0800f0a6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f0a6:	2300      	movs	r3, #0
 800f0a8:	8083      	strh	r3, [r0, #4]
 800f0aa:	4770      	bx	lr

0800f0ac <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f0ac:	b510      	push	{r4, lr}
 800f0ae:	6803      	ldr	r3, [r0, #0]
 800f0b0:	8881      	ldrh	r1, [r0, #4]
 800f0b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f0b4:	4604      	mov	r4, r0
 800f0b6:	4798      	blx	r3
 800f0b8:	88a3      	ldrh	r3, [r4, #4]
 800f0ba:	3301      	adds	r3, #1
 800f0bc:	80a3      	strh	r3, [r4, #4]
 800f0be:	bd10      	pop	{r4, pc}

0800f0c0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f0c0:	6803      	ldr	r3, [r0, #0]
 800f0c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f0c4:	4718      	bx	r3

0800f0c6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f0c6:	4770      	bx	lr

0800f0c8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f0c8:	4a02      	ldr	r2, [pc, #8]	@ (800f0d4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f0ca:	6002      	str	r2, [r0, #0]
 800f0cc:	2200      	movs	r2, #0
 800f0ce:	8082      	strh	r2, [r0, #4]
 800f0d0:	4770      	bx	lr
 800f0d2:	bf00      	nop
 800f0d4:	0802d100 	.word	0x0802d100

0800f0d8 <_ZN8touchgfx9Container13getFirstChildEv>:
 800f0d8:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800f0da:	4770      	bx	lr

0800f0dc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f0dc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800f0de:	2000      	movs	r0, #0
 800f0e0:	b12b      	cbz	r3, 800f0ee <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f0e2:	b920      	cbnz	r0, 800f0ee <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f0e4:	1a5a      	subs	r2, r3, r1
 800f0e6:	4250      	negs	r0, r2
 800f0e8:	4150      	adcs	r0, r2
 800f0ea:	699b      	ldr	r3, [r3, #24]
 800f0ec:	e7f8      	b.n	800f0e0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f0ee:	4770      	bx	lr

0800f0f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f0f0:	2300      	movs	r3, #0
 800f0f2:	6148      	str	r0, [r1, #20]
 800f0f4:	618b      	str	r3, [r1, #24]
 800f0f6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800f0f8:	b913      	cbnz	r3, 800f100 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f0fa:	6281      	str	r1, [r0, #40]	@ 0x28
 800f0fc:	4770      	bx	lr
 800f0fe:	4613      	mov	r3, r2
 800f100:	699a      	ldr	r2, [r3, #24]
 800f102:	2a00      	cmp	r2, #0
 800f104:	d1fb      	bne.n	800f0fe <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f106:	6199      	str	r1, [r3, #24]
 800f108:	4770      	bx	lr

0800f10a <_ZN8touchgfx9Container9removeAllEv>:
 800f10a:	2200      	movs	r2, #0
 800f10c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800f10e:	b123      	cbz	r3, 800f11a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f110:	6999      	ldr	r1, [r3, #24]
 800f112:	6281      	str	r1, [r0, #40]	@ 0x28
 800f114:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f118:	e7f8      	b.n	800f10c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f11a:	4770      	bx	lr

0800f11c <_ZN8touchgfx9Container6unlinkEv>:
 800f11c:	2300      	movs	r3, #0
 800f11e:	6283      	str	r3, [r0, #40]	@ 0x28
 800f120:	4770      	bx	lr

0800f122 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f122:	2200      	movs	r2, #0
 800f124:	8002      	strh	r2, [r0, #0]
 800f126:	8042      	strh	r2, [r0, #2]
 800f128:	8082      	strh	r2, [r0, #4]
 800f12a:	80c2      	strh	r2, [r0, #6]
 800f12c:	4770      	bx	lr

0800f12e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f12e:	b570      	push	{r4, r5, r6, lr}
 800f130:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800f132:	460d      	mov	r5, r1
 800f134:	4616      	mov	r6, r2
 800f136:	b13c      	cbz	r4, 800f148 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f138:	6823      	ldr	r3, [r4, #0]
 800f13a:	4620      	mov	r0, r4
 800f13c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f13e:	4632      	mov	r2, r6
 800f140:	4629      	mov	r1, r5
 800f142:	4798      	blx	r3
 800f144:	69a4      	ldr	r4, [r4, #24]
 800f146:	e7f6      	b.n	800f136 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f148:	bd70      	pop	{r4, r5, r6, pc}

0800f14a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f14a:	b538      	push	{r3, r4, r5, lr}
 800f14c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800f14e:	460d      	mov	r5, r1
 800f150:	b134      	cbz	r4, 800f160 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f152:	682b      	ldr	r3, [r5, #0]
 800f154:	4621      	mov	r1, r4
 800f156:	689b      	ldr	r3, [r3, #8]
 800f158:	4628      	mov	r0, r5
 800f15a:	4798      	blx	r3
 800f15c:	69a4      	ldr	r4, [r4, #24]
 800f15e:	e7f7      	b.n	800f150 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f160:	bd38      	pop	{r3, r4, r5, pc}

0800f162 <_ZN8touchgfx9ContainerD1Ev>:
 800f162:	4770      	bx	lr

0800f164 <_ZN8touchgfx9ContainerD0Ev>:
 800f164:	b510      	push	{r4, lr}
 800f166:	212c      	movs	r1, #44	@ 0x2c
 800f168:	4604      	mov	r4, r0
 800f16a:	f019 fd65 	bl	8028c38 <_ZdlPvj>
 800f16e:	4620      	mov	r0, r4
 800f170:	bd10      	pop	{r4, pc}

0800f172 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f172:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800f174:	b19b      	cbz	r3, 800f19e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f176:	428b      	cmp	r3, r1
 800f178:	d109      	bne.n	800f18e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f17a:	699a      	ldr	r2, [r3, #24]
 800f17c:	2100      	movs	r1, #0
 800f17e:	6159      	str	r1, [r3, #20]
 800f180:	6282      	str	r2, [r0, #40]	@ 0x28
 800f182:	b902      	cbnz	r2, 800f186 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f184:	4770      	bx	lr
 800f186:	6199      	str	r1, [r3, #24]
 800f188:	4770      	bx	lr
 800f18a:	4613      	mov	r3, r2
 800f18c:	b13a      	cbz	r2, 800f19e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f18e:	699a      	ldr	r2, [r3, #24]
 800f190:	428a      	cmp	r2, r1
 800f192:	d1fa      	bne.n	800f18a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f194:	698a      	ldr	r2, [r1, #24]
 800f196:	619a      	str	r2, [r3, #24]
 800f198:	2300      	movs	r3, #0
 800f19a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f19e:	4770      	bx	lr

0800f1a0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f1a0:	b410      	push	{r4}
 800f1a2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800f1a4:	4604      	mov	r4, r0
 800f1a6:	b92b      	cbnz	r3, 800f1b4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f1a8:	6803      	ldr	r3, [r0, #0]
 800f1aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f1ae:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800f1b0:	4611      	mov	r1, r2
 800f1b2:	4718      	bx	r3
 800f1b4:	b941      	cbnz	r1, 800f1c8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f1b6:	6193      	str	r3, [r2, #24]
 800f1b8:	6282      	str	r2, [r0, #40]	@ 0x28
 800f1ba:	6154      	str	r4, [r2, #20]
 800f1bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f1c0:	4770      	bx	lr
 800f1c2:	4603      	mov	r3, r0
 800f1c4:	2800      	cmp	r0, #0
 800f1c6:	d0f9      	beq.n	800f1bc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f1c8:	4299      	cmp	r1, r3
 800f1ca:	6998      	ldr	r0, [r3, #24]
 800f1cc:	d1f9      	bne.n	800f1c2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f1ce:	6190      	str	r0, [r2, #24]
 800f1d0:	618a      	str	r2, [r1, #24]
 800f1d2:	e7f2      	b.n	800f1ba <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f1d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f1d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f1d8:	461f      	mov	r7, r3
 800f1da:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800f1de:	460d      	mov	r5, r1
 800f1e0:	4616      	mov	r6, r2
 800f1e2:	b103      	cbz	r3, 800f1e6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f1e4:	6038      	str	r0, [r7, #0]
 800f1e6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800f1e8:	b314      	cbz	r4, 800f230 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f1ea:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800f1ee:	b1eb      	cbz	r3, 800f22c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f1f0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f1f4:	428d      	cmp	r5, r1
 800f1f6:	db19      	blt.n	800f22c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f1f8:	8923      	ldrh	r3, [r4, #8]
 800f1fa:	b289      	uxth	r1, r1
 800f1fc:	440b      	add	r3, r1
 800f1fe:	b21b      	sxth	r3, r3
 800f200:	429d      	cmp	r5, r3
 800f202:	da13      	bge.n	800f22c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f204:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f208:	4296      	cmp	r6, r2
 800f20a:	db0f      	blt.n	800f22c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f20c:	8963      	ldrh	r3, [r4, #10]
 800f20e:	b292      	uxth	r2, r2
 800f210:	4413      	add	r3, r2
 800f212:	b21b      	sxth	r3, r3
 800f214:	429e      	cmp	r6, r3
 800f216:	da09      	bge.n	800f22c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f218:	6823      	ldr	r3, [r4, #0]
 800f21a:	1ab2      	subs	r2, r6, r2
 800f21c:	1a69      	subs	r1, r5, r1
 800f21e:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800f222:	b212      	sxth	r2, r2
 800f224:	463b      	mov	r3, r7
 800f226:	b209      	sxth	r1, r1
 800f228:	4620      	mov	r0, r4
 800f22a:	47c0      	blx	r8
 800f22c:	69a4      	ldr	r4, [r4, #24]
 800f22e:	e7db      	b.n	800f1e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f230:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f234 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f238:	4c6e      	ldr	r4, [pc, #440]	@ (800f3f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f23a:	b0a1      	sub	sp, #132	@ 0x84
 800f23c:	6824      	ldr	r4, [r4, #0]
 800f23e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800f240:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800f244:	9303      	str	r3, [sp, #12]
 800f246:	2400      	movs	r4, #0
 800f248:	802c      	strh	r4, [r5, #0]
 800f24a:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800f24c:	802c      	strh	r4, [r5, #0]
 800f24e:	601c      	str	r4, [r3, #0]
 800f250:	4606      	mov	r6, r0
 800f252:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f256:	f7ff ffbd 	bl	800f1d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f25a:	f1b9 0f03 	cmp.w	r9, #3
 800f25e:	f340 80c2 	ble.w	800f3e6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f262:	4631      	mov	r1, r6
 800f264:	a80c      	add	r0, sp, #48	@ 0x30
 800f266:	f008 f907 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f26a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800f26e:	9306      	str	r3, [sp, #24]
 800f270:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800f274:	9307      	str	r3, [sp, #28]
 800f276:	9b03      	ldr	r3, [sp, #12]
 800f278:	f8d3 a000 	ldr.w	sl, [r3]
 800f27c:	f1ba 0f00 	cmp.w	sl, #0
 800f280:	f000 80b4 	beq.w	800f3ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f284:	4651      	mov	r1, sl
 800f286:	a810      	add	r0, sp, #64	@ 0x40
 800f288:	f008 f8f6 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f28c:	9b01      	ldr	r3, [sp, #4]
 800f28e:	9a06      	ldr	r2, [sp, #24]
 800f290:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800f294:	189d      	adds	r5, r3, r2
 800f296:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800f29a:	9a07      	ldr	r2, [sp, #28]
 800f29c:	2002      	movs	r0, #2
 800f29e:	fb91 f1f0 	sdiv	r1, r1, r0
 800f2a2:	4419      	add	r1, r3
 800f2a4:	1a6d      	subs	r5, r5, r1
 800f2a6:	9b02      	ldr	r3, [sp, #8]
 800f2a8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800f2ac:	4413      	add	r3, r2
 800f2ae:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800f2b2:	fb92 f2f0 	sdiv	r2, r2, r0
 800f2b6:	440a      	add	r2, r1
 800f2b8:	1a9b      	subs	r3, r3, r2
 800f2ba:	435b      	muls	r3, r3
 800f2bc:	fb05 3505 	mla	r5, r5, r5, r3
 800f2c0:	4f4d      	ldr	r7, [pc, #308]	@ (800f3f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f2c2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f2c4:	ac10      	add	r4, sp, #64	@ 0x40
 800f2c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f2c8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f2ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f2cc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f2ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f2d0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f2d4:	f1b9 0f0c 	cmp.w	r9, #12
 800f2d8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f2dc:	f04f 0303 	mov.w	r3, #3
 800f2e0:	bfc8      	it	gt
 800f2e2:	4698      	movgt	r8, r3
 800f2e4:	f8cd 9000 	str.w	r9, [sp]
 800f2e8:	f04f 0400 	mov.w	r4, #0
 800f2ec:	bfdc      	itt	le
 800f2ee:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f2f2:	fb92 f8f3 	sdivle	r8, r2, r3
 800f2f6:	1c63      	adds	r3, r4, #1
 800f2f8:	aa10      	add	r2, sp, #64	@ 0x40
 800f2fa:	f004 0401 	and.w	r4, r4, #1
 800f2fe:	9308      	str	r3, [sp, #32]
 800f300:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f304:	9b00      	ldr	r3, [sp, #0]
 800f306:	fb93 f3f8 	sdiv	r3, r3, r8
 800f30a:	b29b      	uxth	r3, r3
 800f30c:	3404      	adds	r4, #4
 800f30e:	f04f 0b00 	mov.w	fp, #0
 800f312:	9304      	str	r3, [sp, #16]
 800f314:	9a04      	ldr	r2, [sp, #16]
 800f316:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f31a:	fb13 f302 	smulbb	r3, r3, r2
 800f31e:	9a01      	ldr	r2, [sp, #4]
 800f320:	b29b      	uxth	r3, r3
 800f322:	1899      	adds	r1, r3, r2
 800f324:	9305      	str	r3, [sp, #20]
 800f326:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f32a:	b209      	sxth	r1, r1
 800f32c:	4299      	cmp	r1, r3
 800f32e:	db4d      	blt.n	800f3cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f330:	8932      	ldrh	r2, [r6, #8]
 800f332:	4413      	add	r3, r2
 800f334:	b21b      	sxth	r3, r3
 800f336:	4299      	cmp	r1, r3
 800f338:	da48      	bge.n	800f3cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f33a:	9b04      	ldr	r3, [sp, #16]
 800f33c:	6827      	ldr	r7, [r4, #0]
 800f33e:	fb17 f703 	smulbb	r7, r7, r3
 800f342:	9b02      	ldr	r3, [sp, #8]
 800f344:	b2bf      	uxth	r7, r7
 800f346:	18fa      	adds	r2, r7, r3
 800f348:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f34c:	b212      	sxth	r2, r2
 800f34e:	429a      	cmp	r2, r3
 800f350:	db3c      	blt.n	800f3cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f352:	8970      	ldrh	r0, [r6, #10]
 800f354:	4403      	add	r3, r0
 800f356:	b21b      	sxth	r3, r3
 800f358:	429a      	cmp	r2, r3
 800f35a:	da37      	bge.n	800f3cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f35c:	2300      	movs	r3, #0
 800f35e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800f360:	4630      	mov	r0, r6
 800f362:	ab0b      	add	r3, sp, #44	@ 0x2c
 800f364:	f7ff ff36 	bl	800f1d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f368:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f36a:	b37a      	cbz	r2, 800f3cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f36c:	4552      	cmp	r2, sl
 800f36e:	d02d      	beq.n	800f3cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f370:	4611      	mov	r1, r2
 800f372:	a80e      	add	r0, sp, #56	@ 0x38
 800f374:	9209      	str	r2, [sp, #36]	@ 0x24
 800f376:	f008 f87f 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f37a:	9a06      	ldr	r2, [sp, #24]
 800f37c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800f380:	9b01      	ldr	r3, [sp, #4]
 800f382:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800f386:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800f38a:	4413      	add	r3, r2
 800f38c:	f04f 0e02 	mov.w	lr, #2
 800f390:	fb91 f1fe 	sdiv	r1, r1, lr
 800f394:	4401      	add	r1, r0
 800f396:	1a58      	subs	r0, r3, r1
 800f398:	9a07      	ldr	r2, [sp, #28]
 800f39a:	9b02      	ldr	r3, [sp, #8]
 800f39c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800f3a0:	fb9c fcfe 	sdiv	ip, ip, lr
 800f3a4:	4413      	add	r3, r2
 800f3a6:	448c      	add	ip, r1
 800f3a8:	eba3 030c 	sub.w	r3, r3, ip
 800f3ac:	435b      	muls	r3, r3
 800f3ae:	fb00 3300 	mla	r3, r0, r0, r3
 800f3b2:	42ab      	cmp	r3, r5
 800f3b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800f3b6:	d208      	bcs.n	800f3ca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f3b8:	9803      	ldr	r0, [sp, #12]
 800f3ba:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800f3bc:	6001      	str	r1, [r0, #0]
 800f3be:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800f3c0:	9805      	ldr	r0, [sp, #20]
 800f3c2:	8008      	strh	r0, [r1, #0]
 800f3c4:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800f3c6:	461d      	mov	r5, r3
 800f3c8:	800f      	strh	r7, [r1, #0]
 800f3ca:	4692      	mov	sl, r2
 800f3cc:	f10b 0b01 	add.w	fp, fp, #1
 800f3d0:	f1bb 0f04 	cmp.w	fp, #4
 800f3d4:	f104 0408 	add.w	r4, r4, #8
 800f3d8:	d19c      	bne.n	800f314 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f3da:	9b00      	ldr	r3, [sp, #0]
 800f3dc:	9c08      	ldr	r4, [sp, #32]
 800f3de:	444b      	add	r3, r9
 800f3e0:	4544      	cmp	r4, r8
 800f3e2:	9300      	str	r3, [sp, #0]
 800f3e4:	d187      	bne.n	800f2f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800f3e6:	b021      	add	sp, #132	@ 0x84
 800f3e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3ec:	f04f 35ff 	mov.w	r5, #4294967295
 800f3f0:	e766      	b.n	800f2c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800f3f2:	bf00      	nop
 800f3f4:	20013f60 	.word	0x20013f60
 800f3f8:	0802b0e0 	.word	0x0802b0e0

0800f3fc <_ZN8touchgfx4RectaNERKS0_>:
 800f3fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f400:	f9b1 7000 	ldrsh.w	r7, [r1]
 800f404:	888c      	ldrh	r4, [r1, #4]
 800f406:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f40a:	443c      	add	r4, r7
 800f40c:	b2a4      	uxth	r4, r4
 800f40e:	fa0f f884 	sxth.w	r8, r4
 800f412:	45c1      	cmp	r9, r8
 800f414:	da2f      	bge.n	800f476 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f416:	8882      	ldrh	r2, [r0, #4]
 800f418:	444a      	add	r2, r9
 800f41a:	b292      	uxth	r2, r2
 800f41c:	fa0f fe82 	sxth.w	lr, r2
 800f420:	4577      	cmp	r7, lr
 800f422:	da28      	bge.n	800f476 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f424:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800f428:	88cb      	ldrh	r3, [r1, #6]
 800f42a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f42e:	442b      	add	r3, r5
 800f430:	b21b      	sxth	r3, r3
 800f432:	429e      	cmp	r6, r3
 800f434:	da1f      	bge.n	800f476 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f436:	88c3      	ldrh	r3, [r0, #6]
 800f438:	4433      	add	r3, r6
 800f43a:	b29b      	uxth	r3, r3
 800f43c:	fa0f fc83 	sxth.w	ip, r3
 800f440:	4565      	cmp	r5, ip
 800f442:	da18      	bge.n	800f476 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f444:	454f      	cmp	r7, r9
 800f446:	bfb8      	it	lt
 800f448:	464f      	movlt	r7, r9
 800f44a:	42b5      	cmp	r5, r6
 800f44c:	bfb8      	it	lt
 800f44e:	4635      	movlt	r5, r6
 800f450:	45f0      	cmp	r8, lr
 800f452:	bfd8      	it	le
 800f454:	4622      	movle	r2, r4
 800f456:	1bd2      	subs	r2, r2, r7
 800f458:	8082      	strh	r2, [r0, #4]
 800f45a:	884a      	ldrh	r2, [r1, #2]
 800f45c:	88c9      	ldrh	r1, [r1, #6]
 800f45e:	8007      	strh	r7, [r0, #0]
 800f460:	440a      	add	r2, r1
 800f462:	b292      	uxth	r2, r2
 800f464:	b211      	sxth	r1, r2
 800f466:	458c      	cmp	ip, r1
 800f468:	bfa8      	it	ge
 800f46a:	4613      	movge	r3, r2
 800f46c:	1b5b      	subs	r3, r3, r5
 800f46e:	80c3      	strh	r3, [r0, #6]
 800f470:	8045      	strh	r5, [r0, #2]
 800f472:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f476:	2300      	movs	r3, #0
 800f478:	8003      	strh	r3, [r0, #0]
 800f47a:	8043      	strh	r3, [r0, #2]
 800f47c:	8083      	strh	r3, [r0, #4]
 800f47e:	80c3      	strh	r3, [r0, #6]
 800f480:	e7f7      	b.n	800f472 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800f482 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800f482:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f486:	2b00      	cmp	r3, #0
 800f488:	dd06      	ble.n	800f498 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800f48a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800f48e:	2800      	cmp	r0, #0
 800f490:	bfcc      	ite	gt
 800f492:	2000      	movgt	r0, #0
 800f494:	2001      	movle	r0, #1
 800f496:	4770      	bx	lr
 800f498:	2001      	movs	r0, #1
 800f49a:	4770      	bx	lr

0800f49c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800f49c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f4a0:	2300      	movs	r3, #0
 800f4a2:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800f4a4:	8003      	strh	r3, [r0, #0]
 800f4a6:	4604      	mov	r4, r0
 800f4a8:	8043      	strh	r3, [r0, #2]
 800f4aa:	8083      	strh	r3, [r0, #4]
 800f4ac:	80c3      	strh	r3, [r0, #6]
 800f4ae:	2d00      	cmp	r5, #0
 800f4b0:	d040      	beq.n	800f534 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800f4b2:	1d28      	adds	r0, r5, #4
 800f4b4:	f7ff ffe5 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f4b8:	b988      	cbnz	r0, 800f4de <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f4ba:	4620      	mov	r0, r4
 800f4bc:	f7ff ffe1 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f4c0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800f4c4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f4c8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800f4cc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800f4d0:	b138      	cbz	r0, 800f4e2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800f4d2:	8022      	strh	r2, [r4, #0]
 800f4d4:	8063      	strh	r3, [r4, #2]
 800f4d6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800f4da:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f4de:	69ad      	ldr	r5, [r5, #24]
 800f4e0:	e7e5      	b.n	800f4ae <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800f4e2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f4e6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f4ea:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800f4ee:	4290      	cmp	r0, r2
 800f4f0:	4607      	mov	r7, r0
 800f4f2:	bfa8      	it	ge
 800f4f4:	4617      	movge	r7, r2
 800f4f6:	4472      	add	r2, lr
 800f4f8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800f4fc:	8027      	strh	r7, [r4, #0]
 800f4fe:	4299      	cmp	r1, r3
 800f500:	460e      	mov	r6, r1
 800f502:	4440      	add	r0, r8
 800f504:	bfa8      	it	ge
 800f506:	461e      	movge	r6, r3
 800f508:	4471      	add	r1, lr
 800f50a:	4463      	add	r3, ip
 800f50c:	b200      	sxth	r0, r0
 800f50e:	b212      	sxth	r2, r2
 800f510:	b209      	sxth	r1, r1
 800f512:	b21b      	sxth	r3, r3
 800f514:	4290      	cmp	r0, r2
 800f516:	bfac      	ite	ge
 800f518:	ebc7 0200 	rsbge	r2, r7, r0
 800f51c:	ebc7 0202 	rsblt	r2, r7, r2
 800f520:	4299      	cmp	r1, r3
 800f522:	bfac      	ite	ge
 800f524:	ebc6 0301 	rsbge	r3, r6, r1
 800f528:	ebc6 0303 	rsblt	r3, r6, r3
 800f52c:	8066      	strh	r6, [r4, #2]
 800f52e:	80a2      	strh	r2, [r4, #4]
 800f530:	80e3      	strh	r3, [r4, #6]
 800f532:	e7d4      	b.n	800f4de <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f534:	4620      	mov	r0, r4
 800f536:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f53a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800f53a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f53e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800f542:	b383      	cbz	r3, 800f5a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f544:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800f546:	b374      	cbz	r4, 800f5a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f548:	f9b1 5000 	ldrsh.w	r5, [r1]
 800f54c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800f550:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800f554:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800f558:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800f55c:	b303      	cbz	r3, 800f5a0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f55e:	4668      	mov	r0, sp
 800f560:	1d21      	adds	r1, r4, #4
 800f562:	f8ad 5000 	strh.w	r5, [sp]
 800f566:	f8ad 6002 	strh.w	r6, [sp, #2]
 800f56a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f56e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800f572:	f7ff ff43 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 800f576:	4668      	mov	r0, sp
 800f578:	f7ff ff83 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f57c:	b980      	cbnz	r0, 800f5a0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f57e:	f8bd 3000 	ldrh.w	r3, [sp]
 800f582:	88a2      	ldrh	r2, [r4, #4]
 800f584:	1a9b      	subs	r3, r3, r2
 800f586:	f8ad 3000 	strh.w	r3, [sp]
 800f58a:	88e2      	ldrh	r2, [r4, #6]
 800f58c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f590:	1a9b      	subs	r3, r3, r2
 800f592:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f596:	6823      	ldr	r3, [r4, #0]
 800f598:	4669      	mov	r1, sp
 800f59a:	689b      	ldr	r3, [r3, #8]
 800f59c:	4620      	mov	r0, r4
 800f59e:	4798      	blx	r3
 800f5a0:	69a4      	ldr	r4, [r4, #24]
 800f5a2:	2c00      	cmp	r4, #0
 800f5a4:	d1d8      	bne.n	800f558 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800f5a6:	b002      	add	sp, #8
 800f5a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f5ac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800f5ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f5ae:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800f5b2:	460d      	mov	r5, r1
 800f5b4:	4616      	mov	r6, r2
 800f5b6:	b323      	cbz	r3, 800f602 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f5b8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800f5ba:	b314      	cbz	r4, 800f602 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f5bc:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800f5c0:	b1eb      	cbz	r3, 800f5fe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f5c2:	6828      	ldr	r0, [r5, #0]
 800f5c4:	6869      	ldr	r1, [r5, #4]
 800f5c6:	466b      	mov	r3, sp
 800f5c8:	c303      	stmia	r3!, {r0, r1}
 800f5ca:	4668      	mov	r0, sp
 800f5cc:	1d21      	adds	r1, r4, #4
 800f5ce:	f7ff ff15 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 800f5d2:	4668      	mov	r0, sp
 800f5d4:	f7ff ff55 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f5d8:	b988      	cbnz	r0, 800f5fe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f5da:	f8bd 3000 	ldrh.w	r3, [sp]
 800f5de:	88a2      	ldrh	r2, [r4, #4]
 800f5e0:	1a9b      	subs	r3, r3, r2
 800f5e2:	f8ad 3000 	strh.w	r3, [sp]
 800f5e6:	88e2      	ldrh	r2, [r4, #6]
 800f5e8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f5ec:	1a9b      	subs	r3, r3, r2
 800f5ee:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f5f2:	6823      	ldr	r3, [r4, #0]
 800f5f4:	4632      	mov	r2, r6
 800f5f6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f5f8:	4669      	mov	r1, sp
 800f5fa:	4620      	mov	r0, r4
 800f5fc:	4798      	blx	r3
 800f5fe:	69a4      	ldr	r4, [r4, #24]
 800f600:	e7db      	b.n	800f5ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800f602:	b002      	add	sp, #8
 800f604:	bd70      	pop	{r4, r5, r6, pc}

0800f606 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800f606:	b513      	push	{r0, r1, r4, lr}
 800f608:	6803      	ldr	r3, [r0, #0]
 800f60a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800f60e:	2300      	movs	r3, #0
 800f610:	e9cd 3300 	strd	r3, r3, [sp]
 800f614:	466b      	mov	r3, sp
 800f616:	47a0      	blx	r4
 800f618:	b002      	add	sp, #8
 800f61a:	bd10      	pop	{r4, pc}

0800f61c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800f61c:	2301      	movs	r3, #1
 800f61e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800f622:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800f626:	4770      	bx	lr

0800f628 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800f628:	2301      	movs	r3, #1
 800f62a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800f62e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800f632:	4770      	bx	lr

0800f634 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800f634:	6843      	ldr	r3, [r0, #4]
 800f636:	2201      	movs	r2, #1
 800f638:	725a      	strb	r2, [r3, #9]
 800f63a:	6840      	ldr	r0, [r0, #4]
 800f63c:	6803      	ldr	r3, [r0, #0]
 800f63e:	691b      	ldr	r3, [r3, #16]
 800f640:	4718      	bx	r3

0800f642 <_ZN8touchgfx3HAL8flushDMAEv>:
 800f642:	6840      	ldr	r0, [r0, #4]
 800f644:	6803      	ldr	r3, [r0, #0]
 800f646:	689b      	ldr	r3, [r3, #8]
 800f648:	4718      	bx	r3

0800f64a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800f64a:	b530      	push	{r4, r5, lr}
 800f64c:	b08b      	sub	sp, #44	@ 0x2c
 800f64e:	6804      	ldr	r4, [r0, #0]
 800f650:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800f654:	9509      	str	r5, [sp, #36]	@ 0x24
 800f656:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800f65a:	9508      	str	r5, [sp, #32]
 800f65c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800f660:	9507      	str	r5, [sp, #28]
 800f662:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800f666:	9506      	str	r5, [sp, #24]
 800f668:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800f66c:	9505      	str	r5, [sp, #20]
 800f66e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800f672:	9504      	str	r5, [sp, #16]
 800f674:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800f678:	9503      	str	r5, [sp, #12]
 800f67a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800f67e:	9502      	str	r5, [sp, #8]
 800f680:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800f684:	e9cd 3500 	strd	r3, r5, [sp]
 800f688:	4613      	mov	r3, r2
 800f68a:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800f68c:	2200      	movs	r2, #0
 800f68e:	47a0      	blx	r4
 800f690:	b00b      	add	sp, #44	@ 0x2c
 800f692:	bd30      	pop	{r4, r5, pc}

0800f694 <_ZN8touchgfx3HAL10beginFrameEv>:
 800f694:	4b04      	ldr	r3, [pc, #16]	@ (800f6a8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800f696:	781b      	ldrb	r3, [r3, #0]
 800f698:	b123      	cbz	r3, 800f6a4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800f69a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800f69e:	f080 0001 	eor.w	r0, r0, #1
 800f6a2:	4770      	bx	lr
 800f6a4:	2001      	movs	r0, #1
 800f6a6:	4770      	bx	lr
 800f6a8:	20013f5e 	.word	0x20013f5e

0800f6ac <_ZN8touchgfx3HAL8endFrameEv>:
 800f6ac:	b510      	push	{r4, lr}
 800f6ae:	4604      	mov	r4, r0
 800f6b0:	6840      	ldr	r0, [r0, #4]
 800f6b2:	6803      	ldr	r3, [r0, #0]
 800f6b4:	689b      	ldr	r3, [r3, #8]
 800f6b6:	4798      	blx	r3
 800f6b8:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800f6bc:	b113      	cbz	r3, 800f6c4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800f6be:	2301      	movs	r3, #1
 800f6c0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800f6c4:	bd10      	pop	{r4, pc}

0800f6c6 <_ZN8touchgfx3HAL10initializeEv>:
 800f6c6:	b510      	push	{r4, lr}
 800f6c8:	4604      	mov	r4, r0
 800f6ca:	f7f1 fee1 	bl	8001490 <_ZN8touchgfx10OSWrappers10initializeEv>
 800f6ce:	f7f1 fded 	bl	80012ac <_ZN8touchgfx4GPIO4initEv>
 800f6d2:	6860      	ldr	r0, [r4, #4]
 800f6d4:	6803      	ldr	r3, [r0, #0]
 800f6d6:	68db      	ldr	r3, [r3, #12]
 800f6d8:	4798      	blx	r3
 800f6da:	68e0      	ldr	r0, [r4, #12]
 800f6dc:	6803      	ldr	r3, [r0, #0]
 800f6de:	689b      	ldr	r3, [r3, #8]
 800f6e0:	4798      	blx	r3
 800f6e2:	6823      	ldr	r3, [r4, #0]
 800f6e4:	4620      	mov	r0, r4
 800f6e6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800f6e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f6ec:	4718      	bx	r3
	...

0800f6f0 <_ZN8touchgfx3HAL4tickEv>:
 800f6f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f6f2:	6803      	ldr	r3, [r0, #0]
 800f6f4:	4d5b      	ldr	r5, [pc, #364]	@ (800f864 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800f6f6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800f6fa:	4604      	mov	r4, r0
 800f6fc:	4798      	blx	r3
 800f6fe:	2800      	cmp	r0, #0
 800f700:	f000 8095 	beq.w	800f82e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800f704:	2001      	movs	r0, #1
 800f706:	f7f1 fd4f 	bl	80011a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800f70a:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800f70e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800f712:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800f716:	2600      	movs	r6, #0
 800f718:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800f71c:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800f720:	b133      	cbz	r3, 800f730 <_ZN8touchgfx3HAL4tickEv+0x40>
 800f722:	6823      	ldr	r3, [r4, #0]
 800f724:	4620      	mov	r0, r4
 800f726:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800f72a:	4798      	blx	r3
 800f72c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800f730:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800f734:	6862      	ldr	r2, [r4, #4]
 800f736:	f083 0301 	eor.w	r3, r3, #1
 800f73a:	7253      	strb	r3, [r2, #9]
 800f73c:	2601      	movs	r6, #1
 800f73e:	702e      	strb	r6, [r5, #0]
 800f740:	f006 fd60 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
 800f744:	6803      	ldr	r3, [r0, #0]
 800f746:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800f748:	4798      	blx	r3
 800f74a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800f74e:	b90b      	cbnz	r3, 800f754 <_ZN8touchgfx3HAL4tickEv+0x64>
 800f750:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800f754:	f006 fd56 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
 800f758:	6803      	ldr	r3, [r0, #0]
 800f75a:	695b      	ldr	r3, [r3, #20]
 800f75c:	4798      	blx	r3
 800f75e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800f760:	6803      	ldr	r3, [r0, #0]
 800f762:	691b      	ldr	r3, [r3, #16]
 800f764:	4798      	blx	r3
 800f766:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800f76a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800f76e:	3b01      	subs	r3, #1
 800f770:	b2db      	uxtb	r3, r3
 800f772:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800f776:	b10a      	cbz	r2, 800f77c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800f778:	2b00      	cmp	r3, #0
 800f77a:	d1eb      	bne.n	800f754 <_ZN8touchgfx3HAL4tickEv+0x64>
 800f77c:	4a3a      	ldr	r2, [pc, #232]	@ (800f868 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800f77e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800f782:	7813      	ldrb	r3, [r2, #0]
 800f784:	3301      	adds	r3, #1
 800f786:	b25b      	sxtb	r3, r3
 800f788:	4299      	cmp	r1, r3
 800f78a:	7013      	strb	r3, [r2, #0]
 800f78c:	dc10      	bgt.n	800f7b0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800f78e:	68e0      	ldr	r0, [r4, #12]
 800f790:	2300      	movs	r3, #0
 800f792:	7013      	strb	r3, [r2, #0]
 800f794:	6803      	ldr	r3, [r0, #0]
 800f796:	aa03      	add	r2, sp, #12
 800f798:	68db      	ldr	r3, [r3, #12]
 800f79a:	a902      	add	r1, sp, #8
 800f79c:	4798      	blx	r3
 800f79e:	6823      	ldr	r3, [r4, #0]
 800f7a0:	2800      	cmp	r0, #0
 800f7a2:	d050      	beq.n	800f846 <_ZN8touchgfx3HAL4tickEv+0x156>
 800f7a4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800f7a8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800f7ac:	4620      	mov	r0, r4
 800f7ae:	4798      	blx	r3
 800f7b0:	6960      	ldr	r0, [r4, #20]
 800f7b2:	2300      	movs	r3, #0
 800f7b4:	f88d 3007 	strb.w	r3, [sp, #7]
 800f7b8:	b158      	cbz	r0, 800f7d2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800f7ba:	6803      	ldr	r3, [r0, #0]
 800f7bc:	f10d 0107 	add.w	r1, sp, #7
 800f7c0:	68db      	ldr	r3, [r3, #12]
 800f7c2:	4798      	blx	r3
 800f7c4:	b128      	cbz	r0, 800f7d2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800f7c6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800f7c8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800f7cc:	6803      	ldr	r3, [r0, #0]
 800f7ce:	68db      	ldr	r3, [r3, #12]
 800f7d0:	4798      	blx	r3
 800f7d2:	f104 001c 	add.w	r0, r4, #28
 800f7d6:	f018 fc0f 	bl	8027ff8 <_ZN8touchgfx8Gestures4tickEv>
 800f7da:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800f7de:	b30b      	cbz	r3, 800f824 <_ZN8touchgfx3HAL4tickEv+0x134>
 800f7e0:	6920      	ldr	r0, [r4, #16]
 800f7e2:	6803      	ldr	r3, [r0, #0]
 800f7e4:	691b      	ldr	r3, [r3, #16]
 800f7e6:	4798      	blx	r3
 800f7e8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800f7ea:	4606      	mov	r6, r0
 800f7ec:	b903      	cbnz	r3, 800f7f0 <_ZN8touchgfx3HAL4tickEv+0x100>
 800f7ee:	6760      	str	r0, [r4, #116]	@ 0x74
 800f7f0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800f7f2:	4a1e      	ldr	r2, [pc, #120]	@ (800f86c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800f7f4:	1af3      	subs	r3, r6, r3
 800f7f6:	4293      	cmp	r3, r2
 800f7f8:	d914      	bls.n	800f824 <_ZN8touchgfx3HAL4tickEv+0x134>
 800f7fa:	6920      	ldr	r0, [r4, #16]
 800f7fc:	6803      	ldr	r3, [r0, #0]
 800f7fe:	699b      	ldr	r3, [r3, #24]
 800f800:	4798      	blx	r3
 800f802:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800f804:	2264      	movs	r2, #100	@ 0x64
 800f806:	1af3      	subs	r3, r6, r3
 800f808:	fbb3 f3f2 	udiv	r3, r3, r2
 800f80c:	fbb0 f0f3 	udiv	r0, r0, r3
 800f810:	2800      	cmp	r0, #0
 800f812:	dc1d      	bgt.n	800f850 <_ZN8touchgfx3HAL4tickEv+0x160>
 800f814:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800f818:	6920      	ldr	r0, [r4, #16]
 800f81a:	6803      	ldr	r3, [r0, #0]
 800f81c:	2100      	movs	r1, #0
 800f81e:	69db      	ldr	r3, [r3, #28]
 800f820:	4798      	blx	r3
 800f822:	6766      	str	r6, [r4, #116]	@ 0x74
 800f824:	f006 fcee 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
 800f828:	6803      	ldr	r3, [r0, #0]
 800f82a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f82c:	4798      	blx	r3
 800f82e:	6823      	ldr	r3, [r4, #0]
 800f830:	4620      	mov	r0, r4
 800f832:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800f836:	4798      	blx	r3
 800f838:	2001      	movs	r0, #1
 800f83a:	f7f1 fcdf 	bl	80011fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800f83e:	2300      	movs	r3, #0
 800f840:	702b      	strb	r3, [r5, #0]
 800f842:	b004      	add	sp, #16
 800f844:	bd70      	pop	{r4, r5, r6, pc}
 800f846:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800f84a:	4620      	mov	r0, r4
 800f84c:	4798      	blx	r3
 800f84e:	e7af      	b.n	800f7b0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800f850:	2863      	cmp	r0, #99	@ 0x63
 800f852:	bfcb      	itete	gt
 800f854:	2300      	movgt	r3, #0
 800f856:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800f85a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800f85e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800f862:	e7d9      	b.n	800f818 <_ZN8touchgfx3HAL4tickEv+0x128>
 800f864:	20013f64 	.word	0x20013f64
 800f868:	20013f65 	.word	0x20013f65
 800f86c:	05f5e100 	.word	0x05f5e100

0800f870 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800f870:	b510      	push	{r4, lr}
 800f872:	4604      	mov	r4, r0
 800f874:	f7f1 fe3c 	bl	80014f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800f878:	6863      	ldr	r3, [r4, #4]
 800f87a:	2200      	movs	r2, #0
 800f87c:	729a      	strb	r2, [r3, #10]
 800f87e:	bd10      	pop	{r4, pc}

0800f880 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800f880:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800f882:	301c      	adds	r0, #28
 800f884:	f018 bbb6 	b.w	8027ff4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800f888 <_ZN8touchgfx3HAL5touchEll>:
 800f888:	b530      	push	{r4, r5, lr}
 800f88a:	b087      	sub	sp, #28
 800f88c:	4604      	mov	r4, r0
 800f88e:	a804      	add	r0, sp, #16
 800f890:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800f894:	f006 fa9e 	bl	8015dd4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800f898:	9b04      	ldr	r3, [sp, #16]
 800f89a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800f89e:	a906      	add	r1, sp, #24
 800f8a0:	9b05      	ldr	r3, [sp, #20]
 800f8a2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800f8a6:	a803      	add	r0, sp, #12
 800f8a8:	f006 fae6 	bl	8015e78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800f8ac:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800f8b0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800f8b4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800f8b8:	f104 001c 	add.w	r0, r4, #28
 800f8bc:	b189      	cbz	r1, 800f8e2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800f8be:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800f8c2:	9300      	str	r3, [sp, #0]
 800f8c4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800f8c8:	4613      	mov	r3, r2
 800f8ca:	462a      	mov	r2, r5
 800f8cc:	f018 fba2 	bl	8028014 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800f8d0:	b128      	cbz	r0, 800f8de <_ZN8touchgfx3HAL5touchEll+0x56>
 800f8d2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800f8d6:	6623      	str	r3, [r4, #96]	@ 0x60
 800f8d8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f8dc:	6663      	str	r3, [r4, #100]	@ 0x64
 800f8de:	b007      	add	sp, #28
 800f8e0:	bd30      	pop	{r4, r5, pc}
 800f8e2:	f018 fbd7 	bl	8028094 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f8e6:	2301      	movs	r3, #1
 800f8e8:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800f8ec:	e7f1      	b.n	800f8d2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800f8ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800f8ee:	b510      	push	{r4, lr}
 800f8f0:	2b00      	cmp	r3, #0
 800f8f2:	d046      	beq.n	800f982 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f8f4:	ea81 0002 	eor.w	r0, r1, r2
 800f8f8:	07c4      	lsls	r4, r0, #31
 800f8fa:	d508      	bpl.n	800f90e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800f8fc:	440b      	add	r3, r1
 800f8fe:	3a01      	subs	r2, #1
 800f900:	428b      	cmp	r3, r1
 800f902:	d93e      	bls.n	800f982 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f904:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f908:	f801 0b01 	strb.w	r0, [r1], #1
 800f90c:	e7f8      	b.n	800f900 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800f90e:	07d0      	lsls	r0, r2, #31
 800f910:	bf42      	ittt	mi
 800f912:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800f916:	f801 0b01 	strbmi.w	r0, [r1], #1
 800f91a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800f91e:	2b01      	cmp	r3, #1
 800f920:	d911      	bls.n	800f946 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f922:	ea81 0402 	eor.w	r4, r1, r2
 800f926:	07a4      	lsls	r4, r4, #30
 800f928:	4610      	mov	r0, r2
 800f92a:	d022      	beq.n	800f972 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800f92c:	f023 0401 	bic.w	r4, r3, #1
 800f930:	440c      	add	r4, r1
 800f932:	428c      	cmp	r4, r1
 800f934:	4602      	mov	r2, r0
 800f936:	d904      	bls.n	800f942 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800f938:	8812      	ldrh	r2, [r2, #0]
 800f93a:	f821 2b02 	strh.w	r2, [r1], #2
 800f93e:	3002      	adds	r0, #2
 800f940:	e7f7      	b.n	800f932 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800f942:	f003 0301 	and.w	r3, r3, #1
 800f946:	f023 0003 	bic.w	r0, r3, #3
 800f94a:	4408      	add	r0, r1
 800f94c:	4288      	cmp	r0, r1
 800f94e:	4614      	mov	r4, r2
 800f950:	d904      	bls.n	800f95c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800f952:	6824      	ldr	r4, [r4, #0]
 800f954:	f841 4b04 	str.w	r4, [r1], #4
 800f958:	3204      	adds	r2, #4
 800f95a:	e7f7      	b.n	800f94c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800f95c:	f003 0303 	and.w	r3, r3, #3
 800f960:	440b      	add	r3, r1
 800f962:	3a01      	subs	r2, #1
 800f964:	428b      	cmp	r3, r1
 800f966:	d90c      	bls.n	800f982 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f968:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f96c:	f801 0b01 	strb.w	r0, [r1], #1
 800f970:	e7f8      	b.n	800f964 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800f972:	0790      	lsls	r0, r2, #30
 800f974:	d0e7      	beq.n	800f946 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f976:	f832 0b02 	ldrh.w	r0, [r2], #2
 800f97a:	f821 0b02 	strh.w	r0, [r1], #2
 800f97e:	3b02      	subs	r3, #2
 800f980:	e7e1      	b.n	800f946 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f982:	2001      	movs	r0, #1
 800f984:	bd10      	pop	{r4, pc}

0800f986 <_ZN8touchgfx3HAL7noTouchEv>:
 800f986:	b510      	push	{r4, lr}
 800f988:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800f98c:	4604      	mov	r4, r0
 800f98e:	b153      	cbz	r3, 800f9a6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800f990:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800f994:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800f998:	2101      	movs	r1, #1
 800f99a:	301c      	adds	r0, #28
 800f99c:	f018 fb7a 	bl	8028094 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f9a0:	2300      	movs	r3, #0
 800f9a2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800f9a6:	bd10      	pop	{r4, pc}

0800f9a8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800f9a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f9ac:	b085      	sub	sp, #20
 800f9ae:	ad04      	add	r5, sp, #16
 800f9b0:	4604      	mov	r4, r0
 800f9b2:	2000      	movs	r0, #0
 800f9b4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800f9b8:	69a0      	ldr	r0, [r4, #24]
 800f9ba:	6806      	ldr	r6, [r0, #0]
 800f9bc:	9501      	str	r5, [sp, #4]
 800f9be:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800f9c2:	9500      	str	r5, [sp, #0]
 800f9c4:	6835      	ldr	r5, [r6, #0]
 800f9c6:	4699      	mov	r9, r3
 800f9c8:	460f      	mov	r7, r1
 800f9ca:	4690      	mov	r8, r2
 800f9cc:	47a8      	blx	r5
 800f9ce:	4d10      	ldr	r5, [pc, #64]	@ (800fa10 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800f9d0:	4606      	mov	r6, r0
 800f9d2:	f8a5 9000 	strh.w	r9, [r5]
 800f9d6:	f7f4 fb89 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 800f9da:	6803      	ldr	r3, [r0, #0]
 800f9dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f9de:	4798      	blx	r3
 800f9e0:	b128      	cbz	r0, 800f9ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800f9e2:	2801      	cmp	r0, #1
 800f9e4:	d00b      	beq.n	800f9fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800f9e6:	4630      	mov	r0, r6
 800f9e8:	b005      	add	sp, #20
 800f9ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f9ee:	882b      	ldrh	r3, [r5, #0]
 800f9f0:	fb08 7203 	mla	r2, r8, r3, r7
 800f9f4:	9b03      	ldr	r3, [sp, #12]
 800f9f6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800f9fa:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800f9fc:	e7f3      	b.n	800f9e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f9fe:	882a      	ldrh	r2, [r5, #0]
 800fa00:	9b03      	ldr	r3, [sp, #12]
 800fa02:	fb08 7202 	mla	r2, r8, r2, r7
 800fa06:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800fa0a:	1a9a      	subs	r2, r3, r2
 800fa0c:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800fa0e:	e7ea      	b.n	800f9e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800fa10:	20013f5a 	.word	0x20013f5a

0800fa14 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800fa14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa16:	b08b      	sub	sp, #44	@ 0x2c
 800fa18:	4617      	mov	r7, r2
 800fa1a:	4604      	mov	r4, r0
 800fa1c:	460e      	mov	r6, r1
 800fa1e:	461d      	mov	r5, r3
 800fa20:	f7f4 fb64 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 800fa24:	6803      	ldr	r3, [r0, #0]
 800fa26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fa28:	4798      	blx	r3
 800fa2a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800fa2e:	9007      	str	r0, [sp, #28]
 800fa30:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800fa34:	4b0d      	ldr	r3, [pc, #52]	@ (800fa6c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800fa36:	6822      	ldr	r2, [r4, #0]
 800fa38:	881b      	ldrh	r3, [r3, #0]
 800fa3a:	9306      	str	r3, [sp, #24]
 800fa3c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800fa40:	9305      	str	r3, [sp, #20]
 800fa42:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800fa46:	9304      	str	r3, [sp, #16]
 800fa48:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800fa4c:	9303      	str	r3, [sp, #12]
 800fa4e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800fa52:	9302      	str	r3, [sp, #8]
 800fa54:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800fa58:	e9cd 5300 	strd	r5, r3, [sp]
 800fa5c:	4631      	mov	r1, r6
 800fa5e:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800fa60:	463b      	mov	r3, r7
 800fa62:	2200      	movs	r2, #0
 800fa64:	4620      	mov	r0, r4
 800fa66:	47a8      	blx	r5
 800fa68:	b00b      	add	sp, #44	@ 0x2c
 800fa6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fa6c:	20013f5a 	.word	0x20013f5a

0800fa70 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800fa70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa74:	4698      	mov	r8, r3
 800fa76:	6803      	ldr	r3, [r0, #0]
 800fa78:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800fa7a:	4b15      	ldr	r3, [pc, #84]	@ (800fad0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800fa7c:	b08b      	sub	sp, #44	@ 0x2c
 800fa7e:	4617      	mov	r7, r2
 800fa80:	f8b3 9000 	ldrh.w	r9, [r3]
 800fa84:	460e      	mov	r6, r1
 800fa86:	4604      	mov	r4, r0
 800fa88:	f7f4 fb30 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 800fa8c:	6803      	ldr	r3, [r0, #0]
 800fa8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fa90:	4798      	blx	r3
 800fa92:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800fa96:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800fa9a:	2302      	movs	r3, #2
 800fa9c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800faa0:	2301      	movs	r3, #1
 800faa2:	9305      	str	r3, [sp, #20]
 800faa4:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800faa8:	9304      	str	r3, [sp, #16]
 800faaa:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800faae:	9303      	str	r3, [sp, #12]
 800fab0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800fab4:	9302      	str	r3, [sp, #8]
 800fab6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800faba:	2200      	movs	r2, #0
 800fabc:	e9cd 8300 	strd	r8, r3, [sp]
 800fac0:	4631      	mov	r1, r6
 800fac2:	463b      	mov	r3, r7
 800fac4:	4620      	mov	r0, r4
 800fac6:	47a8      	blx	r5
 800fac8:	b00b      	add	sp, #44	@ 0x2c
 800faca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800face:	bf00      	nop
 800fad0:	20013f5a 	.word	0x20013f5a

0800fad4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800fad4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fad8:	4698      	mov	r8, r3
 800fada:	6803      	ldr	r3, [r0, #0]
 800fadc:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800fade:	4b11      	ldr	r3, [pc, #68]	@ (800fb24 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800fae0:	b087      	sub	sp, #28
 800fae2:	f8b3 9000 	ldrh.w	r9, [r3]
 800fae6:	460e      	mov	r6, r1
 800fae8:	4617      	mov	r7, r2
 800faea:	4604      	mov	r4, r0
 800faec:	f7f4 fafe 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 800faf0:	6803      	ldr	r3, [r0, #0]
 800faf2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800faf4:	4798      	blx	r3
 800faf6:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800fafa:	f8cd 900c 	str.w	r9, [sp, #12]
 800fafe:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800fb02:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800fb06:	9302      	str	r3, [sp, #8]
 800fb08:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800fb0c:	9301      	str	r3, [sp, #4]
 800fb0e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800fb12:	9300      	str	r3, [sp, #0]
 800fb14:	463a      	mov	r2, r7
 800fb16:	4643      	mov	r3, r8
 800fb18:	4631      	mov	r1, r6
 800fb1a:	4620      	mov	r0, r4
 800fb1c:	47a8      	blx	r5
 800fb1e:	b007      	add	sp, #28
 800fb20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fb24:	20013f5a 	.word	0x20013f5a

0800fb28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800fb28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb2c:	4604      	mov	r4, r0
 800fb2e:	b08f      	sub	sp, #60	@ 0x3c
 800fb30:	4610      	mov	r0, r2
 800fb32:	460d      	mov	r5, r1
 800fb34:	4691      	mov	r9, r2
 800fb36:	461e      	mov	r6, r3
 800fb38:	f009 ffa2 	bl	8019a80 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800fb3c:	2800      	cmp	r0, #0
 800fb3e:	f000 809d 	beq.w	800fc7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800fb42:	6823      	ldr	r3, [r4, #0]
 800fb44:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800fce0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800fb48:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fb4a:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800fce4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800fb4e:	4f61      	ldr	r7, [pc, #388]	@ (800fcd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800fb50:	4620      	mov	r0, r4
 800fb52:	4798      	blx	r3
 800fb54:	6823      	ldr	r3, [r4, #0]
 800fb56:	4620      	mov	r0, r4
 800fb58:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fb5a:	4798      	blx	r3
 800fb5c:	f8bb 3000 	ldrh.w	r3, [fp]
 800fb60:	9301      	str	r3, [sp, #4]
 800fb62:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800fb66:	f8ba 3000 	ldrh.w	r3, [sl]
 800fb6a:	9302      	str	r3, [sp, #8]
 800fb6c:	883b      	ldrh	r3, [r7, #0]
 800fb6e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800fb72:	9303      	str	r3, [sp, #12]
 800fb74:	4b58      	ldr	r3, [pc, #352]	@ (800fcd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800fb76:	9305      	str	r3, [sp, #20]
 800fb78:	881a      	ldrh	r2, [r3, #0]
 800fb7a:	9204      	str	r2, [sp, #16]
 800fb7c:	4640      	mov	r0, r8
 800fb7e:	f00a f813 	bl	8019ba8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fb82:	8038      	strh	r0, [r7, #0]
 800fb84:	4640      	mov	r0, r8
 800fb86:	f00a f843 	bl	8019c10 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fb8a:	9b05      	ldr	r3, [sp, #20]
 800fb8c:	b280      	uxth	r0, r0
 800fb8e:	8018      	strh	r0, [r3, #0]
 800fb90:	4b52      	ldr	r3, [pc, #328]	@ (800fcdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800fb92:	781b      	ldrb	r3, [r3, #0]
 800fb94:	2b00      	cmp	r3, #0
 800fb96:	d174      	bne.n	800fc82 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800fb98:	883b      	ldrh	r3, [r7, #0]
 800fb9a:	f8ab 3000 	strh.w	r3, [fp]
 800fb9e:	f8aa 0000 	strh.w	r0, [sl]
 800fba2:	4648      	mov	r0, r9
 800fba4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800fba8:	f009 ff6a 	bl	8019a80 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800fbac:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800fbb0:	2200      	movs	r2, #0
 800fbb2:	4611      	mov	r1, r2
 800fbb4:	4628      	mov	r0, r5
 800fbb6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800fbba:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800fbbe:	f7f3 fab6 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
 800fbc2:	2301      	movs	r3, #1
 800fbc4:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800fbc8:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800fbcc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800fbd0:	2b00      	cmp	r3, #0
 800fbd2:	dd5c      	ble.n	800fc8e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800fbd4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800fbd8:	2b00      	cmp	r3, #0
 800fbda:	dd58      	ble.n	800fc8e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800fbdc:	462a      	mov	r2, r5
 800fbde:	ab0a      	add	r3, sp, #40	@ 0x28
 800fbe0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800fbe4:	6851      	ldr	r1, [r2, #4]
 800fbe6:	c303      	stmia	r3!, {r0, r1}
 800fbe8:	4631      	mov	r1, r6
 800fbea:	a80a      	add	r0, sp, #40	@ 0x28
 800fbec:	f7ff fc06 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 800fbf0:	4b38      	ldr	r3, [pc, #224]	@ (800fcd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800fbf2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fbf6:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800fbfa:	2100      	movs	r1, #0
 800fbfc:	aa0a      	add	r2, sp, #40	@ 0x28
 800fbfe:	4b36      	ldr	r3, [pc, #216]	@ (800fcd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800fc00:	910c      	str	r1, [sp, #48]	@ 0x30
 800fc02:	e892 0003 	ldmia.w	r2, {r0, r1}
 800fc06:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fc0a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800fc0e:	ab08      	add	r3, sp, #32
 800fc10:	e883 0003 	stmia.w	r3, {r0, r1}
 800fc14:	4618      	mov	r0, r3
 800fc16:	a90c      	add	r1, sp, #48	@ 0x30
 800fc18:	f7ff fbf0 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 800fc1c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800fc1e:	2b00      	cmp	r3, #0
 800fc20:	d13c      	bne.n	800fc9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800fc22:	2000      	movs	r0, #0
 800fc24:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800fc28:	2600      	movs	r6, #0
 800fc2a:	682a      	ldr	r2, [r5, #0]
 800fc2c:	696b      	ldr	r3, [r5, #20]
 800fc2e:	616e      	str	r6, [r5, #20]
 800fc30:	9305      	str	r3, [sp, #20]
 800fc32:	6892      	ldr	r2, [r2, #8]
 800fc34:	a908      	add	r1, sp, #32
 800fc36:	4628      	mov	r0, r5
 800fc38:	4790      	blx	r2
 800fc3a:	9b05      	ldr	r3, [sp, #20]
 800fc3c:	616b      	str	r3, [r5, #20]
 800fc3e:	4652      	mov	r2, sl
 800fc40:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800fc44:	4649      	mov	r1, r9
 800fc46:	4628      	mov	r0, r5
 800fc48:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800fc4c:	f7f3 fa6f 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
 800fc50:	4b23      	ldr	r3, [pc, #140]	@ (800fce0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800fc52:	9a01      	ldr	r2, [sp, #4]
 800fc54:	801a      	strh	r2, [r3, #0]
 800fc56:	4b23      	ldr	r3, [pc, #140]	@ (800fce4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800fc58:	9a02      	ldr	r2, [sp, #8]
 800fc5a:	801a      	strh	r2, [r3, #0]
 800fc5c:	4b1d      	ldr	r3, [pc, #116]	@ (800fcd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800fc5e:	9a03      	ldr	r2, [sp, #12]
 800fc60:	801a      	strh	r2, [r3, #0]
 800fc62:	4b1d      	ldr	r3, [pc, #116]	@ (800fcd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800fc64:	9a04      	ldr	r2, [sp, #16]
 800fc66:	801a      	strh	r2, [r3, #0]
 800fc68:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800fc6c:	6823      	ldr	r3, [r4, #0]
 800fc6e:	4620      	mov	r0, r4
 800fc70:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fc72:	4798      	blx	r3
 800fc74:	6823      	ldr	r3, [r4, #0]
 800fc76:	4620      	mov	r0, r4
 800fc78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fc7a:	4798      	blx	r3
 800fc7c:	b00f      	add	sp, #60	@ 0x3c
 800fc7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc82:	883b      	ldrh	r3, [r7, #0]
 800fc84:	f8ab 0000 	strh.w	r0, [fp]
 800fc88:	f8aa 3000 	strh.w	r3, [sl]
 800fc8c:	e789      	b.n	800fba2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800fc8e:	462a      	mov	r2, r5
 800fc90:	ab0a      	add	r3, sp, #40	@ 0x28
 800fc92:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800fc96:	6851      	ldr	r1, [r2, #4]
 800fc98:	c303      	stmia	r3!, {r0, r1}
 800fc9a:	e7a9      	b.n	800fbf0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800fc9c:	a807      	add	r0, sp, #28
 800fc9e:	f00a f8f9 	bl	8019e94 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800fca2:	4606      	mov	r6, r0
 800fca4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800fca6:	6803      	ldr	r3, [r0, #0]
 800fca8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fcaa:	4798      	blx	r3
 800fcac:	4286      	cmp	r6, r0
 800fcae:	d1b8      	bne.n	800fc22 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800fcb0:	f7f4 fa1c 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 800fcb4:	6803      	ldr	r3, [r0, #0]
 800fcb6:	4606      	mov	r6, r0
 800fcb8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800fcba:	9305      	str	r3, [sp, #20]
 800fcbc:	a807      	add	r0, sp, #28
 800fcbe:	f00a f8e9 	bl	8019e94 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800fcc2:	9b05      	ldr	r3, [sp, #20]
 800fcc4:	4601      	mov	r1, r0
 800fcc6:	4630      	mov	r0, r6
 800fcc8:	4798      	blx	r3
 800fcca:	f080 0001 	eor.w	r0, r0, #1
 800fcce:	b2c0      	uxtb	r0, r0
 800fcd0:	e7a8      	b.n	800fc24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800fcd2:	bf00      	nop
 800fcd4:	20013f54 	.word	0x20013f54
 800fcd8:	20013f56 	.word	0x20013f56
 800fcdc:	20013f58 	.word	0x20013f58
 800fce0:	20013f5a 	.word	0x20013f5a
 800fce4:	20013f5c 	.word	0x20013f5c

0800fce8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800fce8:	b510      	push	{r4, lr}
 800fcea:	4b07      	ldr	r3, [pc, #28]	@ (800fd08 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800fcec:	781b      	ldrb	r3, [r3, #0]
 800fcee:	4604      	mov	r4, r0
 800fcf0:	b13b      	cbz	r3, 800fd02 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800fcf2:	6803      	ldr	r3, [r0, #0]
 800fcf4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fcf6:	4798      	blx	r3
 800fcf8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800fcfa:	4283      	cmp	r3, r0
 800fcfc:	d101      	bne.n	800fd02 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800fcfe:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800fd00:	bd10      	pop	{r4, pc}
 800fd02:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800fd04:	e7fc      	b.n	800fd00 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800fd06:	bf00      	nop
 800fd08:	20013f5e 	.word	0x20013f5e

0800fd0c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800fd0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd10:	b08a      	sub	sp, #40	@ 0x28
 800fd12:	461d      	mov	r5, r3
 800fd14:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800fd18:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fd1c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800fd20:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fd24:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800fd28:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fd2c:	2400      	movs	r4, #0
 800fd2e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800fd32:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800fd36:	f8ad 301c 	strh.w	r3, [sp, #28]
 800fd3a:	4690      	mov	r8, r2
 800fd3c:	4607      	mov	r7, r0
 800fd3e:	9404      	str	r4, [sp, #16]
 800fd40:	f88d 4020 	strb.w	r4, [sp, #32]
 800fd44:	f7ff ffd0 	bl	800fce8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800fd48:	fb06 8505 	mla	r5, r6, r5, r8
 800fd4c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800fd50:	6878      	ldr	r0, [r7, #4]
 800fd52:	9505      	str	r5, [sp, #20]
 800fd54:	f8ad 601e 	strh.w	r6, [sp, #30]
 800fd58:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800fd5c:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800fd60:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800fd64:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800fd68:	6803      	ldr	r3, [r0, #0]
 800fd6a:	a901      	add	r1, sp, #4
 800fd6c:	685b      	ldr	r3, [r3, #4]
 800fd6e:	4798      	blx	r3
 800fd70:	b00a      	add	sp, #40	@ 0x28
 800fd72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fd76 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800fd76:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd7a:	b08b      	sub	sp, #44	@ 0x2c
 800fd7c:	2400      	movs	r4, #0
 800fd7e:	461d      	mov	r5, r3
 800fd80:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800fd84:	4688      	mov	r8, r1
 800fd86:	4691      	mov	r9, r2
 800fd88:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800fd8c:	9404      	str	r4, [sp, #16]
 800fd8e:	4607      	mov	r7, r0
 800fd90:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800fd94:	f7ff ffa8 	bl	800fce8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800fd98:	fb06 9505 	mla	r5, r6, r5, r9
 800fd9c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800fda0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fda4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800fda8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800fdac:	6878      	ldr	r0, [r7, #4]
 800fdae:	9505      	str	r5, [sp, #20]
 800fdb0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fdb4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800fdb8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800fdbc:	f8cd 8010 	str.w	r8, [sp, #16]
 800fdc0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800fdc4:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800fdc8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800fdcc:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800fdd0:	6803      	ldr	r3, [r0, #0]
 800fdd2:	a901      	add	r1, sp, #4
 800fdd4:	685b      	ldr	r3, [r3, #4]
 800fdd6:	4798      	blx	r3
 800fdd8:	b00b      	add	sp, #44	@ 0x2c
 800fdda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800fde0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800fde0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fde4:	b08a      	sub	sp, #40	@ 0x28
 800fde6:	4698      	mov	r8, r3
 800fde8:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800fdec:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800fdf0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800fdf4:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800fdf8:	2300      	movs	r3, #0
 800fdfa:	2d0b      	cmp	r5, #11
 800fdfc:	4606      	mov	r6, r0
 800fdfe:	9304      	str	r3, [sp, #16]
 800fe00:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800fe04:	d138      	bne.n	800fe78 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800fe06:	2380      	movs	r3, #128	@ 0x80
 800fe08:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fe0c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800fe10:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fe14:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800fe18:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fe1c:	f88d 0020 	strb.w	r0, [sp, #32]
 800fe20:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800fe24:	f8ad 301c 	strh.w	r3, [sp, #28]
 800fe28:	4630      	mov	r0, r6
 800fe2a:	9203      	str	r2, [sp, #12]
 800fe2c:	f7ff ff5c 	bl	800fce8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800fe30:	2c0b      	cmp	r4, #11
 800fe32:	bf98      	it	ls
 800fe34:	4b1b      	ldrls	r3, [pc, #108]	@ (800fea4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800fe36:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800fe3a:	bf98      	it	ls
 800fe3c:	5d19      	ldrbls	r1, [r3, r4]
 800fe3e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800fe42:	bf88      	it	hi
 800fe44:	2100      	movhi	r1, #0
 800fe46:	fb02 8307 	mla	r3, r2, r7, r8
 800fe4a:	10c9      	asrs	r1, r1, #3
 800fe4c:	fb01 0003 	mla	r0, r1, r3, r0
 800fe50:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800fe54:	9005      	str	r0, [sp, #20]
 800fe56:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800fe5a:	6870      	ldr	r0, [r6, #4]
 800fe5c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800fe60:	2300      	movs	r3, #0
 800fe62:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800fe66:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800fe6a:	6803      	ldr	r3, [r0, #0]
 800fe6c:	a901      	add	r1, sp, #4
 800fe6e:	685b      	ldr	r3, [r3, #4]
 800fe70:	4798      	blx	r3
 800fe72:	b00a      	add	sp, #40	@ 0x28
 800fe74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fe78:	2d02      	cmp	r5, #2
 800fe7a:	d109      	bne.n	800fe90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800fe7c:	28ff      	cmp	r0, #255	@ 0xff
 800fe7e:	d105      	bne.n	800fe8c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800fe80:	f1bc 0f00 	cmp.w	ip, #0
 800fe84:	bf14      	ite	ne
 800fe86:	2340      	movne	r3, #64	@ 0x40
 800fe88:	2320      	moveq	r3, #32
 800fe8a:	e7bd      	b.n	800fe08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800fe8c:	2340      	movs	r3, #64	@ 0x40
 800fe8e:	e7bb      	b.n	800fe08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800fe90:	28ff      	cmp	r0, #255	@ 0xff
 800fe92:	d105      	bne.n	800fea0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800fe94:	f1bc 0f00 	cmp.w	ip, #0
 800fe98:	bf14      	ite	ne
 800fe9a:	2304      	movne	r3, #4
 800fe9c:	2301      	moveq	r3, #1
 800fe9e:	e7b3      	b.n	800fe08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800fea0:	2304      	movs	r3, #4
 800fea2:	e7b1      	b.n	800fe08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800fea4:	0802d1bc 	.word	0x0802d1bc

0800fea8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800fea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800feac:	b08b      	sub	sp, #44	@ 0x2c
 800feae:	461d      	mov	r5, r3
 800feb0:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800feb4:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800feb8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800febc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800fec0:	bf14      	ite	ne
 800fec2:	2308      	movne	r3, #8
 800fec4:	2302      	moveq	r3, #2
 800fec6:	2400      	movs	r4, #0
 800fec8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800fecc:	4688      	mov	r8, r1
 800fece:	4693      	mov	fp, r2
 800fed0:	9404      	str	r4, [sp, #16]
 800fed2:	4607      	mov	r7, r0
 800fed4:	f7ff ff08 	bl	800fce8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800fed8:	2e0b      	cmp	r6, #11
 800feda:	bf98      	it	ls
 800fedc:	4b15      	ldrls	r3, [pc, #84]	@ (800ff34 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800fede:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800fee2:	bf98      	it	ls
 800fee4:	5d9c      	ldrbls	r4, [r3, r6]
 800fee6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800feea:	f8ad 3018 	strh.w	r3, [sp, #24]
 800feee:	fb05 b50a 	mla	r5, r5, sl, fp
 800fef2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800fef6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fefa:	10e4      	asrs	r4, r4, #3
 800fefc:	fb04 0405 	mla	r4, r4, r5, r0
 800ff00:	2300      	movs	r3, #0
 800ff02:	6878      	ldr	r0, [r7, #4]
 800ff04:	9405      	str	r4, [sp, #20]
 800ff06:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ff0a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800ff0e:	f8cd 8010 	str.w	r8, [sp, #16]
 800ff12:	f88d 9020 	strb.w	r9, [sp, #32]
 800ff16:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800ff1a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800ff1e:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800ff22:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800ff26:	6803      	ldr	r3, [r0, #0]
 800ff28:	a901      	add	r1, sp, #4
 800ff2a:	685b      	ldr	r3, [r3, #4]
 800ff2c:	4798      	blx	r3
 800ff2e:	b00b      	add	sp, #44	@ 0x2c
 800ff30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff34:	0802d1bc 	.word	0x0802d1bc

0800ff38 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800ff38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ff3c:	461e      	mov	r6, r3
 800ff3e:	4b0a      	ldr	r3, [pc, #40]	@ (800ff68 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800ff40:	460f      	mov	r7, r1
 800ff42:	881d      	ldrh	r5, [r3, #0]
 800ff44:	4690      	mov	r8, r2
 800ff46:	f7f4 f8d1 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 800ff4a:	6803      	ldr	r3, [r0, #0]
 800ff4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ff4e:	4798      	blx	r3
 800ff50:	280b      	cmp	r0, #11
 800ff52:	bf9a      	itte	ls
 800ff54:	4b05      	ldrls	r3, [pc, #20]	@ (800ff6c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800ff56:	5c1c      	ldrbls	r4, [r3, r0]
 800ff58:	2400      	movhi	r4, #0
 800ff5a:	fb08 7005 	mla	r0, r8, r5, r7
 800ff5e:	10e4      	asrs	r4, r4, #3
 800ff60:	fb04 6000 	mla	r0, r4, r0, r6
 800ff64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ff68:	20013f5a 	.word	0x20013f5a
 800ff6c:	0802d1bc 	.word	0x0802d1bc

0800ff70 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800ff70:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ff72:	b08b      	sub	sp, #44	@ 0x2c
 800ff74:	461f      	mov	r7, r3
 800ff76:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800ff7a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ff7e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ff82:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ff86:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ff8a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ff8e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ff92:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ff96:	2500      	movs	r5, #0
 800ff98:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800ff9c:	f88d 3020 	strb.w	r3, [sp, #32]
 800ffa0:	4604      	mov	r4, r0
 800ffa2:	4616      	mov	r6, r2
 800ffa4:	9504      	str	r5, [sp, #16]
 800ffa6:	f7ff fe9f 	bl	800fce8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ffaa:	463a      	mov	r2, r7
 800ffac:	4631      	mov	r1, r6
 800ffae:	4603      	mov	r3, r0
 800ffb0:	4620      	mov	r0, r4
 800ffb2:	f7ff ffc1 	bl	800ff38 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ffb6:	4b0e      	ldr	r3, [pc, #56]	@ (800fff0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800ffb8:	9005      	str	r0, [sp, #20]
 800ffba:	881b      	ldrh	r3, [r3, #0]
 800ffbc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ffc0:	f7f4 f894 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 800ffc4:	6803      	ldr	r3, [r0, #0]
 800ffc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ffc8:	4798      	blx	r3
 800ffca:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800ffcc:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800ffd0:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800ffd4:	9304      	str	r3, [sp, #16]
 800ffd6:	6860      	ldr	r0, [r4, #4]
 800ffd8:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800ffdc:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800ffe0:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800ffe4:	6803      	ldr	r3, [r0, #0]
 800ffe6:	a901      	add	r1, sp, #4
 800ffe8:	685b      	ldr	r3, [r3, #4]
 800ffea:	4798      	blx	r3
 800ffec:	b00b      	add	sp, #44	@ 0x2c
 800ffee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fff0:	20013f5a 	.word	0x20013f5a

0800fff4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800fff4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fff6:	b08d      	sub	sp, #52	@ 0x34
 800fff8:	466b      	mov	r3, sp
 800fffa:	e883 0006 	stmia.w	r3, {r1, r2}
 800fffe:	2300      	movs	r3, #0
 8010000:	9306      	str	r3, [sp, #24]
 8010002:	6803      	ldr	r3, [r0, #0]
 8010004:	f8bd 6000 	ldrh.w	r6, [sp]
 8010008:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801000a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801000e:	2501      	movs	r5, #1
 8010010:	9503      	str	r5, [sp, #12]
 8010012:	4604      	mov	r4, r0
 8010014:	4798      	blx	r3
 8010016:	463a      	mov	r2, r7
 8010018:	4631      	mov	r1, r6
 801001a:	4603      	mov	r3, r0
 801001c:	4620      	mov	r0, r4
 801001e:	f7ff ff8b 	bl	800ff38 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010022:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8010024:	9307      	str	r3, [sp, #28]
 8010026:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801002a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801002e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010032:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8010036:	4b0f      	ldr	r3, [pc, #60]	@ (8010074 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010038:	9004      	str	r0, [sp, #16]
 801003a:	881b      	ldrh	r3, [r3, #0]
 801003c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8010040:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8010044:	f7f4 f852 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 8010048:	6803      	ldr	r3, [r0, #0]
 801004a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801004c:	4798      	blx	r3
 801004e:	23ff      	movs	r3, #255	@ 0xff
 8010050:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8010054:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8010058:	6860      	ldr	r0, [r4, #4]
 801005a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 801005e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8010062:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8010066:	6803      	ldr	r3, [r0, #0]
 8010068:	a903      	add	r1, sp, #12
 801006a:	685b      	ldr	r3, [r3, #4]
 801006c:	4798      	blx	r3
 801006e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8010070:	b00d      	add	sp, #52	@ 0x34
 8010072:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010074:	20013f5a 	.word	0x20013f5a

08010078 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010078:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801007c:	b08c      	sub	sp, #48	@ 0x30
 801007e:	461e      	mov	r6, r3
 8010080:	466d      	mov	r5, sp
 8010082:	2300      	movs	r3, #0
 8010084:	e885 0006 	stmia.w	r5, {r1, r2}
 8010088:	9306      	str	r3, [sp, #24]
 801008a:	6803      	ldr	r3, [r0, #0]
 801008c:	f8bd 7000 	ldrh.w	r7, [sp]
 8010090:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010092:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010096:	2501      	movs	r5, #1
 8010098:	9503      	str	r5, [sp, #12]
 801009a:	4604      	mov	r4, r0
 801009c:	4798      	blx	r3
 801009e:	4642      	mov	r2, r8
 80100a0:	4639      	mov	r1, r7
 80100a2:	4603      	mov	r3, r0
 80100a4:	4620      	mov	r0, r4
 80100a6:	f7ff ff47 	bl	800ff38 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80100aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80100ae:	f8ad 3020 	strh.w	r3, [sp, #32]
 80100b2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80100b6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80100ba:	4b11      	ldr	r3, [pc, #68]	@ (8010100 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80100bc:	9004      	str	r0, [sp, #16]
 80100be:	881b      	ldrh	r3, [r3, #0]
 80100c0:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80100c4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80100c6:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 80100ca:	9607      	str	r6, [sp, #28]
 80100cc:	f7f4 f80e 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 80100d0:	6803      	ldr	r3, [r0, #0]
 80100d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80100d4:	4798      	blx	r3
 80100d6:	23ff      	movs	r3, #255	@ 0xff
 80100d8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 80100dc:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80100e0:	6860      	ldr	r0, [r4, #4]
 80100e2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80100e6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80100ea:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80100ee:	6803      	ldr	r3, [r0, #0]
 80100f0:	a903      	add	r1, sp, #12
 80100f2:	685b      	ldr	r3, [r3, #4]
 80100f4:	4798      	blx	r3
 80100f6:	4630      	mov	r0, r6
 80100f8:	b00c      	add	sp, #48	@ 0x30
 80100fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80100fe:	bf00      	nop
 8010100:	20013f5a 	.word	0x20013f5a

08010104 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010104:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010106:	b085      	sub	sp, #20
 8010108:	ac02      	add	r4, sp, #8
 801010a:	e884 0006 	stmia.w	r4, {r1, r2}
 801010e:	4605      	mov	r5, r0
 8010110:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010114:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010118:	f7ff fde6 	bl	800fce8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801011c:	463a      	mov	r2, r7
 801011e:	4603      	mov	r3, r0
 8010120:	4631      	mov	r1, r6
 8010122:	4628      	mov	r0, r5
 8010124:	f7ff ff08 	bl	800ff38 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010128:	4a05      	ldr	r2, [pc, #20]	@ (8010140 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801012a:	682b      	ldr	r3, [r5, #0]
 801012c:	8812      	ldrh	r2, [r2, #0]
 801012e:	9200      	str	r2, [sp, #0]
 8010130:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8010132:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010136:	4603      	mov	r3, r0
 8010138:	4628      	mov	r0, r5
 801013a:	47b0      	blx	r6
 801013c:	b005      	add	sp, #20
 801013e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010140:	20013f5a 	.word	0x20013f5a

08010144 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010144:	b570      	push	{r4, r5, r6, lr}
 8010146:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 801014a:	4604      	mov	r4, r0
 801014c:	b19b      	cbz	r3, 8010176 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801014e:	2002      	movs	r0, #2
 8010150:	f7f1 f87e 	bl	8001250 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010154:	2300      	movs	r3, #0
 8010156:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 801015a:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 801015e:	6823      	ldr	r3, [r4, #0]
 8010160:	4620      	mov	r0, r4
 8010162:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 8010166:	f7ff fdbf 	bl	800fce8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801016a:	462b      	mov	r3, r5
 801016c:	4601      	mov	r1, r0
 801016e:	4620      	mov	r0, r4
 8010170:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010174:	4718      	bx	r3
 8010176:	bd70      	pop	{r4, r5, r6, pc}

08010178 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010178:	b538      	push	{r3, r4, r5, lr}
 801017a:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 801017e:	428b      	cmp	r3, r1
 8010180:	4604      	mov	r4, r0
 8010182:	460d      	mov	r5, r1
 8010184:	d006      	beq.n	8010194 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010186:	6803      	ldr	r3, [r0, #0]
 8010188:	b929      	cbnz	r1, 8010196 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801018a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 801018e:	4798      	blx	r3
 8010190:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 8010194:	bd38      	pop	{r3, r4, r5, pc}
 8010196:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 801019a:	e7f8      	b.n	801018e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801019c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801019c:	b510      	push	{r4, lr}
 801019e:	4b0d      	ldr	r3, [pc, #52]	@ (80101d4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80101a0:	781b      	ldrb	r3, [r3, #0]
 80101a2:	4604      	mov	r4, r0
 80101a4:	b95b      	cbnz	r3, 80101be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80101a6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 80101aa:	2b02      	cmp	r3, #2
 80101ac:	d007      	beq.n	80101be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80101ae:	6840      	ldr	r0, [r0, #4]
 80101b0:	f000 f92c 	bl	801040c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80101b4:	b118      	cbz	r0, 80101be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80101b6:	6862      	ldr	r2, [r4, #4]
 80101b8:	7a53      	ldrb	r3, [r2, #9]
 80101ba:	2b00      	cmp	r3, #0
 80101bc:	d0fc      	beq.n	80101b8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80101be:	f7f1 f98f 	bl	80014e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80101c2:	4620      	mov	r0, r4
 80101c4:	2100      	movs	r1, #0
 80101c6:	f7ff ffd7 	bl	8010178 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80101ca:	4620      	mov	r0, r4
 80101cc:	f7ff fd8c 	bl	800fce8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80101d0:	bd10      	pop	{r4, pc}
 80101d2:	bf00      	nop
 80101d4:	20013f5e 	.word	0x20013f5e

080101d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80101d8:	b570      	push	{r4, r5, r6, lr}
 80101da:	4604      	mov	r4, r0
 80101dc:	6803      	ldr	r3, [r0, #0]
 80101de:	b919      	cbnz	r1, 80101e8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80101e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80101e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80101e6:	4718      	bx	r3
 80101e8:	2200      	movs	r2, #0
 80101ea:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 80101ee:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 80101f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80101f4:	4798      	blx	r3
 80101f6:	6863      	ldr	r3, [r4, #4]
 80101f8:	2101      	movs	r1, #1
 80101fa:	4605      	mov	r5, r0
 80101fc:	7299      	strb	r1, [r3, #10]
 80101fe:	4620      	mov	r0, r4
 8010200:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 8010204:	f7ff ffb8 	bl	8010178 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010208:	4628      	mov	r0, r5
 801020a:	bd70      	pop	{r4, r5, r6, pc}

0801020c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801020c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010210:	1a13      	subs	r3, r2, r0
 8010212:	4258      	negs	r0, r3
 8010214:	4158      	adcs	r0, r3
 8010216:	4770      	bx	lr

08010218 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010218:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801021c:	1a9b      	subs	r3, r3, r2
 801021e:	2b00      	cmp	r3, #0
 8010220:	bfdc      	itt	le
 8010222:	6882      	ldrle	r2, [r0, #8]
 8010224:	189b      	addle	r3, r3, r2
 8010226:	2b01      	cmp	r3, #1
 8010228:	bfcc      	ite	gt
 801022a:	2000      	movgt	r0, #0
 801022c:	2001      	movle	r0, #1
 801022e:	4770      	bx	lr

08010230 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010230:	6902      	ldr	r2, [r0, #16]
 8010232:	6843      	ldr	r3, [r0, #4]
 8010234:	2024      	movs	r0, #36	@ 0x24
 8010236:	fb00 3002 	mla	r0, r0, r2, r3
 801023a:	4770      	bx	lr

0801023c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801023c:	6803      	ldr	r3, [r0, #0]
 801023e:	691b      	ldr	r3, [r3, #16]
 8010240:	4718      	bx	r3

08010242 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010242:	b570      	push	{r4, r5, r6, lr}
 8010244:	2301      	movs	r3, #1
 8010246:	7203      	strb	r3, [r0, #8]
 8010248:	4604      	mov	r4, r0
 801024a:	6840      	ldr	r0, [r0, #4]
 801024c:	6803      	ldr	r3, [r0, #0]
 801024e:	699b      	ldr	r3, [r3, #24]
 8010250:	4798      	blx	r3
 8010252:	6803      	ldr	r3, [r0, #0]
 8010254:	2b40      	cmp	r3, #64	@ 0x40
 8010256:	4605      	mov	r5, r0
 8010258:	d00c      	beq.n	8010274 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801025a:	d810      	bhi.n	801027e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801025c:	2b04      	cmp	r3, #4
 801025e:	d01d      	beq.n	801029c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010260:	d804      	bhi.n	801026c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010262:	2b01      	cmp	r3, #1
 8010264:	d006      	beq.n	8010274 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010266:	2b02      	cmp	r3, #2
 8010268:	d02c      	beq.n	80102c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801026a:	bd70      	pop	{r4, r5, r6, pc}
 801026c:	2b08      	cmp	r3, #8
 801026e:	d01d      	beq.n	80102ac <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010270:	2b20      	cmp	r3, #32
 8010272:	d1fa      	bne.n	801026a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010274:	6823      	ldr	r3, [r4, #0]
 8010276:	4620      	mov	r0, r4
 8010278:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801027a:	4798      	blx	r3
 801027c:	e013      	b.n	80102a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801027e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8010282:	d0f7      	beq.n	8010274 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010284:	d804      	bhi.n	8010290 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010286:	2b80      	cmp	r3, #128	@ 0x80
 8010288:	d0f4      	beq.n	8010274 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801028a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 801028e:	e7f0      	b.n	8010272 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010290:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8010294:	d0ee      	beq.n	8010274 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010296:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 801029a:	e7e5      	b.n	8010268 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801029c:	6823      	ldr	r3, [r4, #0]
 801029e:	7f01      	ldrb	r1, [r0, #28]
 80102a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80102a2:	4620      	mov	r0, r4
 80102a4:	4798      	blx	r3
 80102a6:	6823      	ldr	r3, [r4, #0]
 80102a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80102aa:	e006      	b.n	80102ba <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80102ac:	6823      	ldr	r3, [r4, #0]
 80102ae:	7f01      	ldrb	r1, [r0, #28]
 80102b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80102b2:	4620      	mov	r0, r4
 80102b4:	4798      	blx	r3
 80102b6:	6823      	ldr	r3, [r4, #0]
 80102b8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80102ba:	4629      	mov	r1, r5
 80102bc:	4620      	mov	r0, r4
 80102be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80102c2:	4718      	bx	r3
 80102c4:	6823      	ldr	r3, [r4, #0]
 80102c6:	4620      	mov	r0, r4
 80102c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80102ca:	4798      	blx	r3
 80102cc:	e7f3      	b.n	80102b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080102ce <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80102ce:	4770      	bx	lr

080102d0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80102d0:	4770      	bx	lr

080102d2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80102d2:	4770      	bx	lr

080102d4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80102d4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80102d8:	1ad2      	subs	r2, r2, r3
 80102da:	2a00      	cmp	r2, #0
 80102dc:	b510      	push	{r4, lr}
 80102de:	bfdc      	itt	le
 80102e0:	6884      	ldrle	r4, [r0, #8]
 80102e2:	1912      	addle	r2, r2, r4
 80102e4:	2a01      	cmp	r2, #1
 80102e6:	dd16      	ble.n	8010316 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80102e8:	6842      	ldr	r2, [r0, #4]
 80102ea:	2424      	movs	r4, #36	@ 0x24
 80102ec:	fb04 2303 	mla	r3, r4, r3, r2
 80102f0:	f101 0220 	add.w	r2, r1, #32
 80102f4:	f851 4b04 	ldr.w	r4, [r1], #4
 80102f8:	f843 4b04 	str.w	r4, [r3], #4
 80102fc:	4291      	cmp	r1, r2
 80102fe:	d1f9      	bne.n	80102f4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010300:	780a      	ldrb	r2, [r1, #0]
 8010302:	701a      	strb	r2, [r3, #0]
 8010304:	68c3      	ldr	r3, [r0, #12]
 8010306:	6882      	ldr	r2, [r0, #8]
 8010308:	f3bf 8f5b 	dmb	ish
 801030c:	3301      	adds	r3, #1
 801030e:	429a      	cmp	r2, r3
 8010310:	bfd8      	it	le
 8010312:	1a9b      	suble	r3, r3, r2
 8010314:	60c3      	str	r3, [r0, #12]
 8010316:	bd10      	pop	{r4, pc}

08010318 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010318:	6903      	ldr	r3, [r0, #16]
 801031a:	6882      	ldr	r2, [r0, #8]
 801031c:	f3bf 8f5b 	dmb	ish
 8010320:	3301      	adds	r3, #1
 8010322:	429a      	cmp	r2, r3
 8010324:	bfd8      	it	le
 8010326:	1a9b      	suble	r3, r3, r2
 8010328:	6103      	str	r3, [r0, #16]
 801032a:	4770      	bx	lr

0801032c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801032c:	b570      	push	{r4, r5, r6, lr}
 801032e:	4604      	mov	r4, r0
 8010330:	460e      	mov	r6, r1
 8010332:	6860      	ldr	r0, [r4, #4]
 8010334:	6803      	ldr	r3, [r0, #0]
 8010336:	685b      	ldr	r3, [r3, #4]
 8010338:	4798      	blx	r3
 801033a:	2800      	cmp	r0, #0
 801033c:	d1f9      	bne.n	8010332 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801033e:	4d0d      	ldr	r5, [pc, #52]	@ (8010374 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010340:	6828      	ldr	r0, [r5, #0]
 8010342:	6803      	ldr	r3, [r0, #0]
 8010344:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8010346:	4798      	blx	r3
 8010348:	f7f1 f8d8 	bl	80014fc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 801034c:	6828      	ldr	r0, [r5, #0]
 801034e:	2101      	movs	r1, #1
 8010350:	f7ff ff12 	bl	8010178 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010354:	6860      	ldr	r0, [r4, #4]
 8010356:	6803      	ldr	r3, [r0, #0]
 8010358:	4631      	mov	r1, r6
 801035a:	689b      	ldr	r3, [r3, #8]
 801035c:	4798      	blx	r3
 801035e:	6823      	ldr	r3, [r4, #0]
 8010360:	4620      	mov	r0, r4
 8010362:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010364:	4798      	blx	r3
 8010366:	6828      	ldr	r0, [r5, #0]
 8010368:	6803      	ldr	r3, [r0, #0]
 801036a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801036e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8010370:	4718      	bx	r3
 8010372:	bf00      	nop
 8010374:	20013f60 	.word	0x20013f60

08010378 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010378:	b508      	push	{r3, lr}
 801037a:	f7f1 f8b1 	bl	80014e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801037e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010382:	f7f1 b8b5 	b.w	80014f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010386 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010386:	b510      	push	{r4, lr}
 8010388:	2114      	movs	r1, #20
 801038a:	4604      	mov	r4, r0
 801038c:	f018 fc54 	bl	8028c38 <_ZdlPvj>
 8010390:	4620      	mov	r0, r4
 8010392:	bd10      	pop	{r4, pc}

08010394 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010394:	b510      	push	{r4, lr}
 8010396:	4604      	mov	r4, r0
 8010398:	6840      	ldr	r0, [r0, #4]
 801039a:	6803      	ldr	r3, [r0, #0]
 801039c:	681b      	ldr	r3, [r3, #0]
 801039e:	4798      	blx	r3
 80103a0:	b948      	cbnz	r0, 80103b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80103a2:	7a63      	ldrb	r3, [r4, #9]
 80103a4:	b13b      	cbz	r3, 80103b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80103a6:	7a23      	ldrb	r3, [r4, #8]
 80103a8:	b92b      	cbnz	r3, 80103b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80103aa:	6823      	ldr	r3, [r4, #0]
 80103ac:	4620      	mov	r0, r4
 80103ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80103b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80103b4:	4718      	bx	r3
 80103b6:	bd10      	pop	{r4, pc}

080103b8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80103b8:	b570      	push	{r4, r5, r6, lr}
 80103ba:	4604      	mov	r4, r0
 80103bc:	6840      	ldr	r0, [r0, #4]
 80103be:	6803      	ldr	r3, [r0, #0]
 80103c0:	681b      	ldr	r3, [r3, #0]
 80103c2:	4798      	blx	r3
 80103c4:	4605      	mov	r5, r0
 80103c6:	b930      	cbnz	r0, 80103d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80103c8:	7a23      	ldrb	r3, [r4, #8]
 80103ca:	b123      	cbz	r3, 80103d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80103cc:	6860      	ldr	r0, [r4, #4]
 80103ce:	6803      	ldr	r3, [r0, #0]
 80103d0:	695b      	ldr	r3, [r3, #20]
 80103d2:	4798      	blx	r3
 80103d4:	7225      	strb	r5, [r4, #8]
 80103d6:	6860      	ldr	r0, [r4, #4]
 80103d8:	6803      	ldr	r3, [r0, #0]
 80103da:	681b      	ldr	r3, [r3, #0]
 80103dc:	4798      	blx	r3
 80103de:	b928      	cbnz	r0, 80103ec <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80103e0:	6823      	ldr	r3, [r4, #0]
 80103e2:	4620      	mov	r0, r4
 80103e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80103e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80103ea:	4718      	bx	r3
 80103ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80103f0:	f7f1 b88c 	b.w	800150c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080103f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80103f4:	b510      	push	{r4, lr}
 80103f6:	4c04      	ldr	r4, [pc, #16]	@ (8010408 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80103f8:	6082      	str	r2, [r0, #8]
 80103fa:	2200      	movs	r2, #0
 80103fc:	e9c0 4100 	strd	r4, r1, [r0]
 8010400:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010404:	bd10      	pop	{r4, pc}
 8010406:	bf00      	nop
 8010408:	0802d1d0 	.word	0x0802d1d0

0801040c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801040c:	6840      	ldr	r0, [r0, #4]
 801040e:	6803      	ldr	r3, [r0, #0]
 8010410:	681b      	ldr	r3, [r3, #0]
 8010412:	4718      	bx	r3
 8010414:	0000      	movs	r0, r0
	...

08010418 <_ZN8touchgfxL10applyNoiseEiihhh>:
 8010418:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 801041c:	4f20      	ldr	r7, [pc, #128]	@ (80104a0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 801041e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8010422:	fb80 0101 	smull	r0, r1, r0, r1
 8010426:	fba0 bc07 	umull	fp, ip, r0, r7
 801042a:	fb07 cc01 	mla	ip, r7, r1, ip
 801042e:	fb0b f70c 	mul.w	r7, fp, ip
 8010432:	fbab 010b 	umull	r0, r1, fp, fp
 8010436:	461c      	mov	r4, r3
 8010438:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 801043c:	fb00 f30c 	mul.w	r3, r0, ip
 8010440:	fb0b 3301 	mla	r3, fp, r1, r3
 8010444:	fba0 010b 	umull	r0, r1, r0, fp
 8010448:	4616      	mov	r6, r2
 801044a:	4419      	add	r1, r3
 801044c:	a312      	add	r3, pc, #72	@ (adr r3, 8010498 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 801044e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010452:	f7f0 fbe1 	bl	8000c18 <__aeabi_ldivmod>
 8010456:	2ef7      	cmp	r6, #247	@ 0xf7
 8010458:	b290      	uxth	r0, r2
 801045a:	bf9e      	ittt	ls
 801045c:	f002 0207 	andls.w	r2, r2, #7
 8010460:	18b6      	addls	r6, r6, r2
 8010462:	b2f6      	uxtbls	r6, r6
 8010464:	2cfb      	cmp	r4, #251	@ 0xfb
 8010466:	bf9e      	ittt	ls
 8010468:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 801046c:	18e4      	addls	r4, r4, r3
 801046e:	b2e4      	uxtbls	r4, r4
 8010470:	2df7      	cmp	r5, #247	@ 0xf7
 8010472:	bf9c      	itt	ls
 8010474:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 8010478:	182d      	addls	r5, r5, r0
 801047a:	480a      	ldr	r0, [pc, #40]	@ (80104a4 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 801047c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8010480:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 8010484:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8010488:	bf98      	it	ls
 801048a:	b2ed      	uxtbls	r5, r5
 801048c:	4304      	orrs	r4, r0
 801048e:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 8010492:	b280      	uxth	r0, r0
 8010494:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 8010498:	797a8d77 	.word	0x797a8d77
 801049c:	00000000 	.word	0x00000000
 80104a0:	00ec4ba7 	.word	0x00ec4ba7
 80104a4:	fffff800 	.word	0xfffff800

080104a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 80104a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104ac:	ed2d 8b02 	vpush	{d8}
 80104b0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80104b4:	b087      	sub	sp, #28
 80104b6:	7c41      	ldrb	r1, [r0, #17]
 80104b8:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 80104bc:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 80104c0:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 80104c4:	4605      	mov	r5, r0
 80104c6:	2900      	cmp	r1, #0
 80104c8:	f000 809a 	beq.w	8010600 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 80104cc:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80104d0:	ed90 7a08 	vldr	s14, [r0, #32]
 80104d4:	68c0      	ldr	r0, [r0, #12]
 80104d6:	454a      	cmp	r2, r9
 80104d8:	db25      	blt.n	8010526 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 80104da:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80104de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80104e2:	f640 72fc 	movw	r2, #4092	@ 0xffc
 80104e6:	bfc8      	it	gt
 80104e8:	2200      	movgt	r2, #0
 80104ea:	5882      	ldr	r2, [r0, r2]
 80104ec:	2100      	movs	r1, #0
 80104ee:	7c2d      	ldrb	r5, [r5, #16]
 80104f0:	ea4f 2812 	mov.w	r8, r2, lsr #8
 80104f4:	0950      	lsrs	r0, r2, #5
 80104f6:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 80104fa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80104fe:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 8010502:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 8010506:	2d00      	cmp	r5, #0
 8010508:	d044      	beq.n	8010594 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 801050a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801050e:	d141      	bne.n	8010594 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 8010510:	bb61      	cbnz	r1, 801056c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 8010512:	ea4e 0000 	orr.w	r0, lr, r0
 8010516:	ea4c 0500 	orr.w	r5, ip, r0
 801051a:	42bc      	cmp	r4, r7
 801051c:	f080 8217 	bcs.w	801094e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8010520:	f824 5b02 	strh.w	r5, [r4], #2
 8010524:	e7f9      	b.n	801051a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 8010526:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 801052a:	454f      	cmp	r7, r9
 801052c:	dc08      	bgt.n	8010540 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 801052e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8010532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010536:	f640 72fc 	movw	r2, #4092	@ 0xffc
 801053a:	bfd8      	it	le
 801053c:	2200      	movle	r2, #0
 801053e:	e7d4      	b.n	80104ea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 8010540:	eba9 0202 	sub.w	r2, r9, r2
 8010544:	ee07 2a90 	vmov	s15, r2
 8010548:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801054c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8010550:	ee67 7a87 	vmul.f32	s15, s15, s14
 8010554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010558:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801055c:	ee17 2a90 	vmov	r2, s15
 8010560:	bfd8      	it	le
 8010562:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 8010566:	0092      	lsls	r2, r2, #2
 8010568:	5882      	ldr	r2, [r0, r2]
 801056a:	e7c0      	b.n	80104ee <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 801056c:	b2d5      	uxtb	r5, r2
 801056e:	fa5f f888 	uxtb.w	r8, r8
 8010572:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 8010576:	461e      	mov	r6, r3
 8010578:	42bc      	cmp	r4, r7
 801057a:	f080 81e8 	bcs.w	801094e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801057e:	4630      	mov	r0, r6
 8010580:	9500      	str	r5, [sp, #0]
 8010582:	4643      	mov	r3, r8
 8010584:	4652      	mov	r2, sl
 8010586:	4649      	mov	r1, r9
 8010588:	f7ff ff46 	bl	8010418 <_ZN8touchgfxL10applyNoiseEiihhh>
 801058c:	3601      	adds	r6, #1
 801058e:	f824 0b02 	strh.w	r0, [r4], #2
 8010592:	e7f1      	b.n	8010578 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 8010594:	0e12      	lsrs	r2, r2, #24
 8010596:	fb02 f20a 	mul.w	r2, r2, sl
 801059a:	1c53      	adds	r3, r2, #1
 801059c:	eb03 2222 	add.w	r2, r3, r2, asr #8
 80105a0:	1212      	asrs	r2, r2, #8
 80105a2:	fb02 f50c 	mul.w	r5, r2, ip
 80105a6:	fb02 f10e 	mul.w	r1, r2, lr
 80105aa:	4350      	muls	r0, r2
 80105ac:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 8010960 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 80105b0:	43d2      	mvns	r2, r2
 80105b2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80105b6:	26ff      	movs	r6, #255	@ 0xff
 80105b8:	42bc      	cmp	r4, r7
 80105ba:	f080 81c8 	bcs.w	801094e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 80105be:	f8b4 e000 	ldrh.w	lr, [r4]
 80105c2:	ea0e 030c 	and.w	r3, lr, ip
 80105c6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 80105ca:	fb02 1303 	mla	r3, r2, r3, r1
 80105ce:	fb02 0808 	mla	r8, r2, r8, r0
 80105d2:	fb93 f3f6 	sdiv	r3, r3, r6
 80105d6:	fb98 f8f6 	sdiv	r8, r8, r6
 80105da:	ea03 030c 	and.w	r3, r3, ip
 80105de:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80105e2:	f00e 0e1f 	and.w	lr, lr, #31
 80105e6:	ea43 0308 	orr.w	r3, r3, r8
 80105ea:	fb02 5e0e 	mla	lr, r2, lr, r5
 80105ee:	fb9e fef6 	sdiv	lr, lr, r6
 80105f2:	f00e 0e1f 	and.w	lr, lr, #31
 80105f6:	ea43 030e 	orr.w	r3, r3, lr
 80105fa:	f824 3b02 	strh.w	r3, [r4], #2
 80105fe:	e7db      	b.n	80105b8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 8010600:	7c82      	ldrb	r2, [r0, #18]
 8010602:	2a00      	cmp	r2, #0
 8010604:	d04f      	beq.n	80106a6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 8010606:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801060a:	ee07 2a90 	vmov	s15, r2
 801060e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010612:	ee07 3a10 	vmov	s14, r3
 8010616:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801061a:	461f      	mov	r7, r3
 801061c:	eef4 6ae7 	vcmpe.f32	s13, s15
 8010620:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010624:	f200 8095 	bhi.w	8010752 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 8010628:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801062c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8010630:	f640 71fc 	movw	r1, #4092	@ 0xffc
 8010634:	ee37 7a66 	vsub.f32	s14, s14, s13
 8010638:	ee06 6a90 	vmov	s13, r6
 801063c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010640:	68ea      	ldr	r2, [r5, #12]
 8010642:	f895 c010 	ldrb.w	ip, [r5, #16]
 8010646:	eeb4 7ae6 	vcmpe.f32	s14, s13
 801064a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801064e:	bf4a      	itet	mi
 8010650:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 8010654:	9602      	strpl	r6, [sp, #8]
 8010656:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 801065a:	ed95 7a08 	vldr	s14, [r5, #32]
 801065e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8010662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010666:	bfc8      	it	gt
 8010668:	2100      	movgt	r1, #0
 801066a:	5852      	ldr	r2, [r2, r1]
 801066c:	9902      	ldr	r1, [sp, #8]
 801066e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 8010672:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8010676:	0950      	lsrs	r0, r2, #5
 8010678:	9103      	str	r1, [sp, #12]
 801067a:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801067e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8010682:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 8010686:	f1bc 0f00 	cmp.w	ip, #0
 801068a:	d024      	beq.n	80106d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 801068c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8010690:	d121      	bne.n	80106d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 8010692:	ea4b 0b00 	orr.w	fp, fp, r0
 8010696:	ea41 010b 	orr.w	r1, r1, fp
 801069a:	9a03      	ldr	r2, [sp, #12]
 801069c:	4294      	cmp	r4, r2
 801069e:	d255      	bcs.n	801074c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 80106a0:	f824 1b02 	strh.w	r1, [r4], #2
 80106a4:	e7f9      	b.n	801069a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 80106a6:	ee07 9a10 	vmov	s14, r9
 80106aa:	edd0 7a06 	vldr	s15, [r0, #24]
 80106ae:	edd0 6a05 	vldr	s13, [r0, #20]
 80106b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80106b6:	ee37 7a67 	vsub.f32	s14, s14, s15
 80106ba:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80106be:	ed90 7a08 	vldr	s14, [r0, #32]
 80106c2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80106c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106ca:	bf44      	itt	mi
 80106cc:	ed90 7a07 	vldrmi	s14, [r0, #28]
 80106d0:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 80106d4:	e79d      	b.n	8010612 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 80106d6:	0e12      	lsrs	r2, r2, #24
 80106d8:	fb02 f20a 	mul.w	r2, r2, sl
 80106dc:	f102 0c01 	add.w	ip, r2, #1
 80106e0:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 80106e4:	1212      	asrs	r2, r2, #8
 80106e6:	4350      	muls	r0, r2
 80106e8:	4351      	muls	r1, r2
 80106ea:	fb02 fb0b 	mul.w	fp, r2, fp
 80106ee:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 8010960 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 80106f2:	9004      	str	r0, [sp, #16]
 80106f4:	43d2      	mvns	r2, r2
 80106f6:	9105      	str	r1, [sp, #20]
 80106f8:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80106fc:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 8010700:	9903      	ldr	r1, [sp, #12]
 8010702:	428c      	cmp	r4, r1
 8010704:	d222      	bcs.n	801074c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 8010706:	8820      	ldrh	r0, [r4, #0]
 8010708:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 801070c:	460f      	mov	r7, r1
 801070e:	9904      	ldr	r1, [sp, #16]
 8010710:	ea00 0c08 	and.w	ip, r0, r8
 8010714:	fb02 bc0c 	mla	ip, r2, ip, fp
 8010718:	fb02 1107 	mla	r1, r2, r7, r1
 801071c:	fb9c fcfe 	sdiv	ip, ip, lr
 8010720:	fb91 f1fe 	sdiv	r1, r1, lr
 8010724:	ea0c 0c08 	and.w	ip, ip, r8
 8010728:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801072c:	ea4c 0101 	orr.w	r1, ip, r1
 8010730:	f000 0c1f 	and.w	ip, r0, #31
 8010734:	9805      	ldr	r0, [sp, #20]
 8010736:	fb02 0c0c 	mla	ip, r2, ip, r0
 801073a:	fb9c fcfe 	sdiv	ip, ip, lr
 801073e:	f00c 0c1f 	and.w	ip, ip, #31
 8010742:	ea41 010c 	orr.w	r1, r1, ip
 8010746:	f824 1b02 	strh.w	r1, [r4], #2
 801074a:	e7d9      	b.n	8010700 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 801074c:	9a02      	ldr	r2, [sp, #8]
 801074e:	441a      	add	r2, r3
 8010750:	4617      	mov	r7, r2
 8010752:	441e      	add	r6, r3
 8010754:	b236      	sxth	r6, r6
 8010756:	42be      	cmp	r6, r7
 8010758:	f340 80f9 	ble.w	801094e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801075c:	ed95 7a07 	vldr	s14, [r5, #28]
 8010760:	ee06 7a90 	vmov	s13, r7
 8010764:	ee37 7a87 	vadd.f32	s14, s15, s14
 8010768:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801076c:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8010770:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010774:	f340 80b5 	ble.w	80108e2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 8010778:	ee06 6a10 	vmov	s12, r6
 801077c:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8010780:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 8010958 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 8010784:	7c2b      	ldrb	r3, [r5, #16]
 8010786:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801078a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801078e:	bfd8      	it	le
 8010790:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 8010794:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 801095c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 8010798:	bfd8      	it	le
 801079a:	ee17 8a10 	vmovle	r8, s14
 801079e:	ed95 7a08 	vldr	s14, [r5, #32]
 80107a2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80107a6:	bfc8      	it	gt
 80107a8:	46b0      	movgt	r8, r6
 80107aa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80107ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80107b2:	eba8 0707 	sub.w	r7, r8, r7
 80107b6:	bfd8      	it	le
 80107b8:	eeb0 8a46 	vmovle.f32	s16, s12
 80107bc:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 80107c0:	eea7 8a27 	vfma.f32	s16, s14, s15
 80107c4:	b1db      	cbz	r3, 80107fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 80107c6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80107ca:	d118      	bne.n	80107fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 80107cc:	42bc      	cmp	r4, r7
 80107ce:	d262      	bcs.n	8010896 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 80107d0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80107d4:	68eb      	ldr	r3, [r5, #12]
 80107d6:	ee17 0a90 	vmov	r0, s15
 80107da:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 80107de:	b2d3      	uxtb	r3, r2
 80107e0:	9300      	str	r3, [sp, #0]
 80107e2:	4649      	mov	r1, r9
 80107e4:	f3c2 2307 	ubfx	r3, r2, #8, #8
 80107e8:	f3c2 4207 	ubfx	r2, r2, #16, #8
 80107ec:	f7ff fe14 	bl	8010418 <_ZN8touchgfxL10applyNoiseEiihhh>
 80107f0:	f824 0b02 	strh.w	r0, [r4], #2
 80107f4:	edd5 7a08 	vldr	s15, [r5, #32]
 80107f8:	ee38 8a27 	vadd.f32	s16, s16, s15
 80107fc:	e7e6      	b.n	80107cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 80107fe:	f8df b160 	ldr.w	fp, [pc, #352]	@ 8010960 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8010802:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 8010806:	42bc      	cmp	r4, r7
 8010808:	d245      	bcs.n	8010896 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 801080a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801080e:	68eb      	ldr	r3, [r5, #12]
 8010810:	f8b4 e000 	ldrh.w	lr, [r4]
 8010814:	ee17 2a90 	vmov	r2, s15
 8010818:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801081c:	0e13      	lsrs	r3, r2, #24
 801081e:	fb03 f30a 	mul.w	r3, r3, sl
 8010822:	1c58      	adds	r0, r3, #1
 8010824:	eb00 2023 	add.w	r0, r0, r3, asr #8
 8010828:	1200      	asrs	r0, r0, #8
 801082a:	ea6f 0c00 	mvn.w	ip, r0
 801082e:	fa5f fc8c 	uxtb.w	ip, ip
 8010832:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 8010836:	ea0e 030b 	and.w	r3, lr, fp
 801083a:	fb0c f303 	mul.w	r3, ip, r3
 801083e:	b289      	uxth	r1, r1
 8010840:	fb00 3101 	mla	r1, r0, r1, r3
 8010844:	fb91 f1f9 	sdiv	r1, r1, r9
 8010848:	ea01 030b 	and.w	r3, r1, fp
 801084c:	9302      	str	r3, [sp, #8]
 801084e:	0953      	lsrs	r3, r2, #5
 8010850:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8010854:	4619      	mov	r1, r3
 8010856:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 801085a:	fb0c f303 	mul.w	r3, ip, r3
 801085e:	fb00 3301 	mla	r3, r0, r1, r3
 8010862:	f00e 0e1f 	and.w	lr, lr, #31
 8010866:	9902      	ldr	r1, [sp, #8]
 8010868:	fb93 f3f9 	sdiv	r3, r3, r9
 801086c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8010870:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8010874:	fb0c fc0e 	mul.w	ip, ip, lr
 8010878:	4319      	orrs	r1, r3
 801087a:	fb00 c002 	mla	r0, r0, r2, ip
 801087e:	fb90 f0f9 	sdiv	r0, r0, r9
 8010882:	f000 001f 	and.w	r0, r0, #31
 8010886:	4301      	orrs	r1, r0
 8010888:	f824 1b02 	strh.w	r1, [r4], #2
 801088c:	edd5 7a08 	vldr	s15, [r5, #32]
 8010890:	ee38 8a27 	vadd.f32	s16, s16, s15
 8010894:	e7b7      	b.n	8010806 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 8010896:	4546      	cmp	r6, r8
 8010898:	dd59      	ble.n	801094e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801089a:	edd5 7a08 	vldr	s15, [r5, #32]
 801089e:	68ea      	ldr	r2, [r5, #12]
 80108a0:	7c29      	ldrb	r1, [r5, #16]
 80108a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80108a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80108aa:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80108ae:	bfd8      	it	le
 80108b0:	2300      	movle	r3, #0
 80108b2:	eba6 0608 	sub.w	r6, r6, r8
 80108b6:	58d2      	ldr	r2, [r2, r3]
 80108b8:	0a10      	lsrs	r0, r2, #8
 80108ba:	0953      	lsrs	r3, r2, #5
 80108bc:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 80108c0:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80108c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80108c8:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 80108cc:	b159      	cbz	r1, 80108e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 80108ce:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80108d2:	d108      	bne.n	80108e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 80108d4:	4318      	orrs	r0, r3
 80108d6:	4338      	orrs	r0, r7
 80108d8:	42b4      	cmp	r4, r6
 80108da:	d238      	bcs.n	801094e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 80108dc:	f824 0b02 	strh.w	r0, [r4], #2
 80108e0:	e7fa      	b.n	80108d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 80108e2:	46b8      	mov	r8, r7
 80108e4:	e7d9      	b.n	801089a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 80108e6:	0e12      	lsrs	r2, r2, #24
 80108e8:	fb02 f10a 	mul.w	r1, r2, sl
 80108ec:	1c4a      	adds	r2, r1, #1
 80108ee:	eb02 2221 	add.w	r2, r2, r1, asr #8
 80108f2:	1212      	asrs	r2, r2, #8
 80108f4:	fb02 f507 	mul.w	r5, r2, r7
 80108f8:	4350      	muls	r0, r2
 80108fa:	4353      	muls	r3, r2
 80108fc:	f8df c060 	ldr.w	ip, [pc, #96]	@ 8010960 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8010900:	43d2      	mvns	r2, r2
 8010902:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8010906:	27ff      	movs	r7, #255	@ 0xff
 8010908:	42b4      	cmp	r4, r6
 801090a:	d220      	bcs.n	801094e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801090c:	f8b4 e000 	ldrh.w	lr, [r4]
 8010910:	ea0e 010c 	and.w	r1, lr, ip
 8010914:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 8010918:	fb02 0101 	mla	r1, r2, r1, r0
 801091c:	fb02 3808 	mla	r8, r2, r8, r3
 8010920:	fb91 f1f7 	sdiv	r1, r1, r7
 8010924:	fb98 f8f7 	sdiv	r8, r8, r7
 8010928:	ea01 010c 	and.w	r1, r1, ip
 801092c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8010930:	f00e 0e1f 	and.w	lr, lr, #31
 8010934:	ea41 0108 	orr.w	r1, r1, r8
 8010938:	fb02 5e0e 	mla	lr, r2, lr, r5
 801093c:	fb9e fef7 	sdiv	lr, lr, r7
 8010940:	f00e 0e1f 	and.w	lr, lr, #31
 8010944:	ea41 010e 	orr.w	r1, r1, lr
 8010948:	f824 1b02 	strh.w	r1, [r4], #2
 801094c:	e7dc      	b.n	8010908 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 801094e:	b007      	add	sp, #28
 8010950:	ecbd 8b02 	vpop	{d8}
 8010954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010958:	00000000 	.word	0x00000000
 801095c:	447ffffe 	.word	0x447ffffe
 8010960:	fffff800 	.word	0xfffff800

08010964 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 8010964:	4770      	bx	lr

08010966 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 8010966:	4770      	bx	lr

08010968 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 8010968:	b510      	push	{r4, lr}
 801096a:	2124      	movs	r1, #36	@ 0x24
 801096c:	4604      	mov	r4, r0
 801096e:	f018 f963 	bl	8028c38 <_ZdlPvj>
 8010972:	4620      	mov	r0, r4
 8010974:	bd10      	pop	{r4, pc}
	...

08010978 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010978:	4b06      	ldr	r3, [pc, #24]	@ (8010994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801097a:	60c1      	str	r1, [r0, #12]
 801097c:	094a      	lsrs	r2, r1, #5
 801097e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8010982:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8010986:	4313      	orrs	r3, r2
 8010988:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801098c:	4319      	orrs	r1, r3
 801098e:	8201      	strh	r1, [r0, #16]
 8010990:	4770      	bx	lr
 8010992:	bf00      	nop
 8010994:	fffff800 	.word	0xfffff800

08010998 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010998:	f1a0 0008 	sub.w	r0, r0, #8
 801099c:	e7ec      	b.n	8010978 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 801099e:	bf00      	nop

080109a0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80109a0:	b508      	push	{r3, lr}
 80109a2:	4b05      	ldr	r3, [pc, #20]	@ (80109b8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80109a4:	6818      	ldr	r0, [r3, #0]
 80109a6:	6803      	ldr	r3, [r0, #0]
 80109a8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80109ac:	4798      	blx	r3
 80109ae:	1e43      	subs	r3, r0, #1
 80109b0:	4258      	negs	r0, r3
 80109b2:	4158      	adcs	r0, r3
 80109b4:	bd08      	pop	{r3, pc}
 80109b6:	bf00      	nop
 80109b8:	20013f60 	.word	0x20013f60

080109bc <_ZN8touchgfx13PainterRGB565D1Ev>:
 80109bc:	4770      	bx	lr

080109be <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80109be:	3808      	subs	r0, #8
 80109c0:	4770      	bx	lr

080109c2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80109c2:	b430      	push	{r4, r5}
 80109c4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80109c8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80109cc:	8a02      	ldrh	r2, [r0, #16]
 80109ce:	9202      	str	r2, [sp, #8]
 80109d0:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80109d4:	68c2      	ldr	r2, [r0, #12]
 80109d6:	4629      	mov	r1, r5
 80109d8:	4620      	mov	r0, r4
 80109da:	bc30      	pop	{r4, r5}
 80109dc:	f7f0 bf5e 	b.w	800189c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080109e0 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80109e0:	f7f0 bf50 	b.w	8001884 <_ZN8touchgfx5paint8tearDownEv>

080109e4 <_ZN8touchgfx13PainterRGB565D0Ev>:
 80109e4:	b510      	push	{r4, lr}
 80109e6:	2114      	movs	r1, #20
 80109e8:	4604      	mov	r4, r0
 80109ea:	f018 f925 	bl	8028c38 <_ZdlPvj>
 80109ee:	4620      	mov	r0, r4
 80109f0:	bd10      	pop	{r4, pc}

080109f2 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80109f2:	f1a0 0008 	sub.w	r0, r0, #8
 80109f6:	e7f5      	b.n	80109e4 <_ZN8touchgfx13PainterRGB565D0Ev>

080109f8 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 80109f8:	2300      	movs	r3, #0
 80109fa:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80109fc:	8503      	strh	r3, [r0, #40]	@ 0x28
 80109fe:	8543      	strh	r3, [r0, #42]	@ 0x2a
 8010a00:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8010a02:	6980      	ldr	r0, [r0, #24]
 8010a04:	b110      	cbz	r0, 8010a0c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 8010a06:	6803      	ldr	r3, [r0, #0]
 8010a08:	691b      	ldr	r3, [r3, #16]
 8010a0a:	4718      	bx	r3
 8010a0c:	4770      	bx	lr

08010a0e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 8010a0e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 8010a12:	4770      	bx	lr

08010a14 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 8010a14:	b538      	push	{r3, r4, r5, lr}
 8010a16:	0e0b      	lsrs	r3, r1, #24
 8010a18:	7783      	strb	r3, [r0, #30]
 8010a1a:	6803      	ldr	r3, [r0, #0]
 8010a1c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010a1e:	4604      	mov	r4, r0
 8010a20:	460d      	mov	r5, r1
 8010a22:	4798      	blx	r3
 8010a24:	6803      	ldr	r3, [r0, #0]
 8010a26:	4629      	mov	r1, r5
 8010a28:	689b      	ldr	r3, [r3, #8]
 8010a2a:	4798      	blx	r3
 8010a2c:	6823      	ldr	r3, [r4, #0]
 8010a2e:	4620      	mov	r0, r4
 8010a30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010a32:	4798      	blx	r3
 8010a34:	61a0      	str	r0, [r4, #24]
 8010a36:	bd38      	pop	{r3, r4, r5, pc}

08010a38 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 8010a38:	7741      	strb	r1, [r0, #29]
 8010a3a:	4770      	bx	lr

08010a3c <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 8010a3c:	b530      	push	{r4, r5, lr}
 8010a3e:	460d      	mov	r5, r1
 8010a40:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 8010a44:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010a46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010a48:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010a4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010a4c:	682b      	ldr	r3, [r5, #0]
 8010a4e:	6023      	str	r3, [r4, #0]
 8010a50:	bd30      	pop	{r4, r5, pc}

08010a52 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 8010a52:	b538      	push	{r3, r4, r5, lr}
 8010a54:	4604      	mov	r4, r0
 8010a56:	1d03      	adds	r3, r0, #4
 8010a58:	6808      	ldr	r0, [r1, #0]
 8010a5a:	6849      	ldr	r1, [r1, #4]
 8010a5c:	c303      	stmia	r3!, {r0, r1}
 8010a5e:	6813      	ldr	r3, [r2, #0]
 8010a60:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 8010a64:	6853      	ldr	r3, [r2, #4]
 8010a66:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 8010a6a:	2500      	movs	r5, #0
 8010a6c:	61a5      	str	r5, [r4, #24]
 8010a6e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8010a72:	f006 ff6d 	bl	8017950 <_ZN8touchgfx9Matrix3x35resetEv>
 8010a76:	23ff      	movs	r3, #255	@ 0xff
 8010a78:	7763      	strb	r3, [r4, #29]
 8010a7a:	77a3      	strb	r3, [r4, #30]
 8010a7c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8010a80:	6323      	str	r3, [r4, #48]	@ 0x30
 8010a82:	2301      	movs	r3, #1
 8010a84:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 8010a88:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 8010a8c:	bd38      	pop	{r3, r4, r5, pc}
	...

08010a90 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 8010a90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a94:	ed2d 8b0a 	vpush	{d8-d12}
 8010a98:	ee70 7a41 	vsub.f32	s15, s0, s2
 8010a9c:	b086      	sub	sp, #24
 8010a9e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8010aa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010aa6:	4605      	mov	r5, r0
 8010aa8:	eeb0 ba40 	vmov.f32	s22, s0
 8010aac:	eef0 ba60 	vmov.f32	s23, s1
 8010ab0:	eef0 aa41 	vmov.f32	s21, s2
 8010ab4:	eeb0 aa61 	vmov.f32	s20, s3
 8010ab8:	eeb0 ca42 	vmov.f32	s24, s4
 8010abc:	eef0 ca62 	vmov.f32	s25, s5
 8010ac0:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
 8010ac4:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
 8010ac6:	6802      	ldr	r2, [r0, #0]
 8010ac8:	d112      	bne.n	8010af0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 8010aca:	ee70 7ae1 	vsub.f32	s15, s1, s3
 8010ace:	eef5 7a40 	vcmp.f32	s15, #0.0
 8010ad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010ad6:	d10b      	bne.n	8010af0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 8010ad8:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8010adc:	3901      	subs	r1, #1
 8010ade:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8010ae0:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8010ae4:	b006      	add	sp, #24
 8010ae6:	ecbd 8b0a 	vpop	{d8-d12}
 8010aea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010aee:	4710      	bx	r2
 8010af0:	23ff      	movs	r3, #255	@ 0xff
 8010af2:	77ab      	strb	r3, [r5, #30]
 8010af4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8010af6:	4628      	mov	r0, r5
 8010af8:	4798      	blx	r3
 8010afa:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 8010afe:	eef0 0a6b 	vmov.f32	s1, s23
 8010b02:	eeb0 0a4b 	vmov.f32	s0, s22
 8010b06:	4604      	mov	r4, r0
 8010b08:	4640      	mov	r0, r8
 8010b0a:	f006 ffd0 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8010b0e:	4640      	mov	r0, r8
 8010b10:	eef0 8a40 	vmov.f32	s17, s0
 8010b14:	eef0 9a60 	vmov.f32	s19, s1
 8010b18:	ed8d 0a00 	vstr	s0, [sp]
 8010b1c:	edcd 0a01 	vstr	s1, [sp, #4]
 8010b20:	eeb0 0a6a 	vmov.f32	s0, s21
 8010b24:	eef0 0a4a 	vmov.f32	s1, s20
 8010b28:	f006 ffc1 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8010b2c:	eef4 8a40 	vcmp.f32	s17, s0
 8010b30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010b34:	eef4 9a60 	vcmp.f32	s19, s1
 8010b38:	bf0c      	ite	eq
 8010b3a:	2301      	moveq	r3, #1
 8010b3c:	2300      	movne	r3, #0
 8010b3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010b42:	eef4 8a40 	vcmp.f32	s17, s0
 8010b46:	7463      	strb	r3, [r4, #17]
 8010b48:	bf0c      	ite	eq
 8010b4a:	2301      	moveq	r3, #1
 8010b4c:	2300      	movne	r3, #0
 8010b4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010b52:	eeb0 8a40 	vmov.f32	s16, s0
 8010b56:	eeb0 9a60 	vmov.f32	s18, s1
 8010b5a:	ed8d 0a02 	vstr	s0, [sp, #8]
 8010b5e:	edcd 0a03 	vstr	s1, [sp, #12]
 8010b62:	74a3      	strb	r3, [r4, #18]
 8010b64:	d024      	beq.n	8010bb0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 8010b66:	eef4 9a60 	vcmp.f32	s19, s1
 8010b6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010b6e:	d01f      	beq.n	8010bb0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 8010b70:	ee7a aacb 	vsub.f32	s21, s21, s22
 8010b74:	ee3a aa6b 	vsub.f32	s20, s20, s23
 8010b78:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
 8010b7c:	4640      	mov	r0, r8
 8010b7e:	eeca 7a2c 	vdiv.f32	s15, s20, s25
 8010b82:	eef0 0a6b 	vmov.f32	s1, s23
 8010b86:	eeb0 0a4b 	vmov.f32	s0, s22
 8010b8a:	eea7 0acc 	vfms.f32	s0, s15, s24
 8010b8e:	eeec 0a87 	vfma.f32	s1, s25, s14
 8010b92:	f006 ff8c 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8010b96:	ed8d 0a04 	vstr	s0, [sp, #16]
 8010b9a:	ee30 0a68 	vsub.f32	s0, s0, s17
 8010b9e:	edcd 0a05 	vstr	s1, [sp, #20]
 8010ba2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8010ba6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010baa:	d120      	bne.n	8010bee <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x15e>
 8010bac:	2301      	movs	r3, #1
 8010bae:	74a3      	strb	r3, [r4, #18]
 8010bb0:	7c63      	ldrb	r3, [r4, #17]
 8010bb2:	2b00      	cmp	r3, #0
 8010bb4:	d050      	beq.n	8010c58 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c8>
 8010bb6:	ee39 7a69 	vsub.f32	s14, s18, s19
 8010bba:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 8010cac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x21c>
 8010bbe:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8010bc2:	eef4 9ac9 	vcmpe.f32	s19, s18
 8010bc6:	edc4 7a08 	vstr	s15, [r4, #32]
 8010bca:	eefd 7ac9 	vcvt.s32.f32	s15, s18
 8010bce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010bd2:	ee17 3a90 	vmov	r3, s15
 8010bd6:	eefd 7ae9 	vcvt.s32.f32	s15, s19
 8010bda:	b21a      	sxth	r2, r3
 8010bdc:	ee17 3a90 	vmov	r3, s15
 8010be0:	b21b      	sxth	r3, r3
 8010be2:	bf47      	ittee	mi
 8010be4:	80e3      	strhmi	r3, [r4, #6]
 8010be6:	8122      	strhmi	r2, [r4, #8]
 8010be8:	80e2      	strhpl	r2, [r4, #6]
 8010bea:	8123      	strhpl	r3, [r4, #8]
 8010bec:	e02c      	b.n	8010c48 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 8010bee:	ee70 0ae9 	vsub.f32	s1, s1, s19
 8010bf2:	eec0 7a80 	vdiv.f32	s15, s1, s0
 8010bf6:	eef5 7a40 	vcmp.f32	s15, #0.0
 8010bfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010bfe:	edc4 7a05 	vstr	s15, [r4, #20]
 8010c02:	d102      	bne.n	8010c0a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17a>
 8010c04:	2301      	movs	r3, #1
 8010c06:	7463      	strb	r3, [r4, #17]
 8010c08:	e7d2      	b.n	8010bb0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 8010c0a:	eeb0 7a69 	vmov.f32	s14, s19
 8010c0e:	eea8 7ae7 	vfms.f32	s14, s17, s15
 8010c12:	ee39 9a69 	vsub.f32	s18, s18, s19
 8010c16:	ed84 7a06 	vstr	s14, [r4, #24]
 8010c1a:	ee89 7a27 	vdiv.f32	s14, s18, s15
 8010c1e:	ee38 8a68 	vsub.f32	s16, s16, s17
 8010c22:	ee38 8a47 	vsub.f32	s16, s16, s14
 8010c26:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 8010cb0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
 8010c2a:	ed84 8a07 	vstr	s16, [r4, #28]
 8010c2e:	eec7 7a08 	vdiv.f32	s15, s14, s16
 8010c32:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8010c36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010c3a:	edc4 7a08 	vstr	s15, [r4, #32]
 8010c3e:	d503      	bpl.n	8010c48 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 8010c40:	eeb1 8a48 	vneg.f32	s16, s16
 8010c44:	ed84 8a07 	vstr	s16, [r4, #28]
 8010c48:	60e7      	str	r7, [r4, #12]
 8010c4a:	7426      	strb	r6, [r4, #16]
 8010c4c:	61ac      	str	r4, [r5, #24]
 8010c4e:	b006      	add	sp, #24
 8010c50:	ecbd 8b0a 	vpop	{d8-d12}
 8010c54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c58:	7ca3      	ldrb	r3, [r4, #18]
 8010c5a:	2b00      	cmp	r3, #0
 8010c5c:	d0f4      	beq.n	8010c48 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 8010c5e:	ee38 7a68 	vsub.f32	s14, s16, s17
 8010c62:	eddf 6a12 	vldr	s13, [pc, #72]	@ 8010cac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x21c>
 8010c66:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8010c6a:	eef4 8ac8 	vcmpe.f32	s17, s16
 8010c6e:	edc4 7a08 	vstr	s15, [r4, #32]
 8010c72:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8010c76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010c7a:	ee17 3a90 	vmov	r3, s15
 8010c7e:	eefd 7ae8 	vcvt.s32.f32	s15, s17
 8010c82:	b21a      	sxth	r2, r3
 8010c84:	ee17 3a90 	vmov	r3, s15
 8010c88:	b21b      	sxth	r3, r3
 8010c8a:	bf47      	ittee	mi
 8010c8c:	80e3      	strhmi	r3, [r4, #6]
 8010c8e:	8122      	strhmi	r2, [r4, #8]
 8010c90:	80e2      	strhpl	r2, [r4, #6]
 8010c92:	8123      	strhpl	r3, [r4, #8]
 8010c94:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8010c98:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010c9c:	1a9b      	subs	r3, r3, r2
 8010c9e:	ee07 3a90 	vmov	s15, r3
 8010ca2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010ca6:	edc4 7a07 	vstr	s15, [r4, #28]
 8010caa:	e7cd      	b.n	8010c48 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 8010cac:	447ffffe 	.word	0x447ffffe
 8010cb0:	44800000 	.word	0x44800000

08010cb4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 8010cb4:	b510      	push	{r4, lr}
 8010cb6:	2100      	movs	r1, #0
 8010cb8:	ed2d 8b02 	vpush	{d8}
 8010cbc:	eef0 8a62 	vmov.f32	s17, s5
 8010cc0:	4604      	mov	r4, r0
 8010cc2:	eeb0 8a42 	vmov.f32	s16, s4
 8010cc6:	f017 fd27 	bl	8028718 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 8010cca:	eef0 7a68 	vmov.f32	s15, s17
 8010cce:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8010cd2:	6823      	ldr	r3, [r4, #0]
 8010cd4:	ee17 2a90 	vmov	r2, s15
 8010cd8:	eef0 7a48 	vmov.f32	s15, s16
 8010cdc:	ecbd 8b02 	vpop	{d8}
 8010ce0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8010ce4:	4620      	mov	r0, r4
 8010ce6:	689b      	ldr	r3, [r3, #8]
 8010ce8:	ee17 1a90 	vmov	r1, s15
 8010cec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cf0:	4718      	bx	r3

08010cf2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 8010cf2:	b510      	push	{r4, lr}
 8010cf4:	2100      	movs	r1, #0
 8010cf6:	ed2d 8b02 	vpush	{d8}
 8010cfa:	eef0 8a63 	vmov.f32	s17, s7
 8010cfe:	4604      	mov	r4, r0
 8010d00:	eeb0 8a43 	vmov.f32	s16, s6
 8010d04:	f017 fdca 	bl	802889c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8010d08:	eef0 7a68 	vmov.f32	s15, s17
 8010d0c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8010d10:	6823      	ldr	r3, [r4, #0]
 8010d12:	ee17 2a90 	vmov	r2, s15
 8010d16:	eef0 7a48 	vmov.f32	s15, s16
 8010d1a:	ecbd 8b02 	vpop	{d8}
 8010d1e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8010d22:	4620      	mov	r0, r4
 8010d24:	689b      	ldr	r3, [r3, #8]
 8010d26:	ee17 1a90 	vmov	r1, s15
 8010d2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d2e:	4718      	bx	r3

08010d30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 8010d30:	b513      	push	{r0, r1, r4, lr}
 8010d32:	4604      	mov	r4, r0
 8010d34:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8010d36:	f006 feba 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8010d3a:	eef0 7a60 	vmov.f32	s15, s1
 8010d3e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8010d42:	4620      	mov	r0, r4
 8010d44:	ee17 2a90 	vmov	r2, s15
 8010d48:	eef0 7a40 	vmov.f32	s15, s0
 8010d4c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8010d50:	ee17 1a90 	vmov	r1, s15
 8010d54:	b002      	add	sp, #8
 8010d56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d5a:	f017 bc37 	b.w	80285cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

08010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 8010d5e:	b513      	push	{r0, r1, r4, lr}
 8010d60:	4604      	mov	r4, r0
 8010d62:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8010d64:	f006 fea3 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8010d68:	eef0 7a60 	vmov.f32	s15, s1
 8010d6c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8010d70:	4620      	mov	r0, r4
 8010d72:	ee17 2a90 	vmov	r2, s15
 8010d76:	eef0 7a40 	vmov.f32	s15, s0
 8010d7a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8010d7e:	ee17 1a90 	vmov	r1, s15
 8010d82:	b002      	add	sp, #8
 8010d84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d88:	f017 bc6d 	b.w	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

08010d8c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 8010d8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d8e:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 8010d92:	2400      	movs	r4, #0
 8010d94:	9f07      	ldr	r7, [sp, #28]
 8010d96:	4463      	add	r3, ip
 8010d98:	4626      	mov	r6, r4
 8010d9a:	f04f 0e01 	mov.w	lr, #1
 8010d9e:	4563      	cmp	r3, ip
 8010da0:	d02d      	beq.n	8010dfe <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 8010da2:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 8010da6:	2d06      	cmp	r5, #6
 8010da8:	d8f9      	bhi.n	8010d9e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8010daa:	fa0e f505 	lsl.w	r5, lr, r5
 8010dae:	f015 0f66 	tst.w	r5, #102	@ 0x66
 8010db2:	d10d      	bne.n	8010dd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 8010db4:	f015 0f10 	tst.w	r5, #16
 8010db8:	d117      	bne.n	8010dea <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 8010dba:	072d      	lsls	r5, r5, #28
 8010dbc:	d5ef      	bpl.n	8010d9e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8010dbe:	3801      	subs	r0, #1
 8010dc0:	b91e      	cbnz	r6, 8010dca <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 8010dc2:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 8010dc6:	682d      	ldr	r5, [r5, #0]
 8010dc8:	600d      	str	r5, [r1, #0]
 8010dca:	b96c      	cbnz	r4, 8010de8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8010dcc:	2601      	movs	r6, #1
 8010dce:	e7e6      	b.n	8010d9e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8010dd0:	b926      	cbnz	r6, 8010ddc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 8010dd2:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 8010dd6:	f853 3c08 	ldr.w	r3, [r3, #-8]
 8010dda:	600b      	str	r3, [r1, #0]
 8010ddc:	b924      	cbnz	r4, 8010de8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8010dde:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 8010de2:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8010de6:	6013      	str	r3, [r2, #0]
 8010de8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010dea:	3801      	subs	r0, #1
 8010dec:	b91c      	cbnz	r4, 8010df6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 8010dee:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 8010df2:	6824      	ldr	r4, [r4, #0]
 8010df4:	6014      	str	r4, [r2, #0]
 8010df6:	2e00      	cmp	r6, #0
 8010df8:	d1f6      	bne.n	8010de8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8010dfa:	2401      	movs	r4, #1
 8010dfc:	e7cf      	b.n	8010d9e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8010dfe:	b90e      	cbnz	r6, 8010e04 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 8010e00:	2300      	movs	r3, #0
 8010e02:	600b      	str	r3, [r1, #0]
 8010e04:	2c00      	cmp	r4, #0
 8010e06:	d1ef      	bne.n	8010de8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8010e08:	2300      	movs	r3, #0
 8010e0a:	e7ec      	b.n	8010de6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

08010e0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 8010e0c:	b538      	push	{r3, r4, r5, lr}
 8010e0e:	4604      	mov	r4, r0
 8010e10:	ed2d 8b0a 	vpush	{d8-d12}
 8010e14:	460d      	mov	r5, r1
 8010e16:	eef0 ba40 	vmov.f32	s23, s0
 8010e1a:	eeb0 ca60 	vmov.f32	s24, s1
 8010e1e:	eef0 aa41 	vmov.f32	s21, s2
 8010e22:	eeb0 ba61 	vmov.f32	s22, s3
 8010e26:	eeb0 9a42 	vmov.f32	s18, s4
 8010e2a:	eef0 9a62 	vmov.f32	s19, s5
 8010e2e:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 8010e32:	ee7b 8a29 	vadd.f32	s17, s22, s19
 8010e36:	ee3a 8a89 	vadd.f32	s16, s21, s18
 8010e3a:	ee68 8a8a 	vmul.f32	s17, s17, s20
 8010e3e:	ee28 8a0a 	vmul.f32	s16, s16, s20
 8010e42:	ee3c 0a68 	vsub.f32	s0, s24, s17
 8010e46:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 8010e4a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8010e4e:	eea7 0aa7 	vfma.f32	s0, s15, s15
 8010e52:	f017 ff47 	bl	8028ce4 <sqrtf>
 8010e56:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8010e5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010e5e:	d12e      	bne.n	8010ebe <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 8010e60:	ee79 7a6a 	vsub.f32	s15, s18, s21
 8010e64:	ee39 7acb 	vsub.f32	s14, s19, s22
 8010e68:	eeb0 8a6a 	vmov.f32	s16, s21
 8010e6c:	eef0 8a4b 	vmov.f32	s17, s22
 8010e70:	eea7 8a8a 	vfma.f32	s16, s15, s20
 8010e74:	eee7 8a0a 	vfma.f32	s17, s14, s20
 8010e78:	eea7 8a0a 	vfma.f32	s16, s14, s20
 8010e7c:	eee7 8aca 	vfms.f32	s17, s15, s20
 8010e80:	2d02      	cmp	r5, #2
 8010e82:	dc2f      	bgt.n	8010ee4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 8010e84:	3501      	adds	r5, #1
 8010e86:	eef0 1a4b 	vmov.f32	s3, s22
 8010e8a:	eeb0 1a6a 	vmov.f32	s2, s21
 8010e8e:	4629      	mov	r1, r5
 8010e90:	eef0 2a68 	vmov.f32	s5, s17
 8010e94:	eeb0 2a48 	vmov.f32	s4, s16
 8010e98:	eef0 0a4c 	vmov.f32	s1, s24
 8010e9c:	eeb0 0a6b 	vmov.f32	s0, s23
 8010ea0:	4620      	mov	r0, r4
 8010ea2:	f7ff ffb3 	bl	8010e0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 8010ea6:	eef0 0a68 	vmov.f32	s1, s17
 8010eaa:	eeb0 0a48 	vmov.f32	s0, s16
 8010eae:	4620      	mov	r0, r4
 8010eb0:	f7ff ff55 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8010eb4:	eeb0 ba68 	vmov.f32	s22, s17
 8010eb8:	eef0 aa48 	vmov.f32	s21, s16
 8010ebc:	e7b9      	b.n	8010e32 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 8010ebe:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 8010ec2:	ee38 8a6b 	vsub.f32	s16, s16, s23
 8010ec6:	ee78 8acc 	vsub.f32	s17, s17, s24
 8010eca:	ee28 7a27 	vmul.f32	s14, s16, s15
 8010ece:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8010ed2:	ee87 8a00 	vdiv.f32	s16, s14, s0
 8010ed6:	eec7 8a80 	vdiv.f32	s17, s15, s0
 8010eda:	ee3b 8a88 	vadd.f32	s16, s23, s16
 8010ede:	ee7c 8a28 	vadd.f32	s17, s24, s17
 8010ee2:	e7cd      	b.n	8010e80 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 8010ee4:	eef0 0a68 	vmov.f32	s1, s17
 8010ee8:	eeb0 0a48 	vmov.f32	s0, s16
 8010eec:	4620      	mov	r0, r4
 8010eee:	f7ff ff36 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8010ef2:	ecbd 8b0a 	vpop	{d8-d12}
 8010ef6:	bd38      	pop	{r3, r4, r5, pc}

08010ef8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 8010ef8:	b510      	push	{r4, lr}
 8010efa:	ed2d 8b0a 	vpush	{d8-d12}
 8010efe:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 8010f02:	2b02      	cmp	r3, #2
 8010f04:	4604      	mov	r4, r0
 8010f06:	eeb0 ca40 	vmov.f32	s24, s0
 8010f0a:	eeb0 9a60 	vmov.f32	s18, s1
 8010f0e:	eef0 9a41 	vmov.f32	s19, s2
 8010f12:	eef0 8a61 	vmov.f32	s17, s3
 8010f16:	eeb0 ba42 	vmov.f32	s22, s4
 8010f1a:	eef0 ba62 	vmov.f32	s23, s5
 8010f1e:	eeb0 aa43 	vmov.f32	s20, s6
 8010f22:	eef0 aa63 	vmov.f32	s21, s7
 8010f26:	eeb0 8a44 	vmov.f32	s16, s8
 8010f2a:	eef0 ca64 	vmov.f32	s25, s9
 8010f2e:	d12c      	bne.n	8010f8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 8010f30:	eef0 0a62 	vmov.f32	s1, s5
 8010f34:	eeb0 0a42 	vmov.f32	s0, s4
 8010f38:	f7ff ff11 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8010f3c:	ee79 9acb 	vsub.f32	s19, s19, s22
 8010f40:	ee7a caec 	vsub.f32	s25, s21, s25
 8010f44:	ee78 8aeb 	vsub.f32	s17, s17, s23
 8010f48:	ee3a 8a48 	vsub.f32	s16, s20, s16
 8010f4c:	ee69 9aac 	vmul.f32	s19, s19, s25
 8010f50:	ee28 8a88 	vmul.f32	s16, s17, s16
 8010f54:	eef4 9ac8 	vcmpe.f32	s19, s16
 8010f58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010f5c:	db0f      	blt.n	8010f7e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 8010f5e:	2101      	movs	r1, #1
 8010f60:	eef0 2a6a 	vmov.f32	s5, s21
 8010f64:	eeb0 2a4a 	vmov.f32	s4, s20
 8010f68:	eef0 1a6b 	vmov.f32	s3, s23
 8010f6c:	eeb0 1a4b 	vmov.f32	s2, s22
 8010f70:	eef0 0a49 	vmov.f32	s1, s18
 8010f74:	eeb0 0a4c 	vmov.f32	s0, s24
 8010f78:	4620      	mov	r0, r4
 8010f7a:	f7ff ff47 	bl	8010e0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 8010f7e:	eef0 0a6a 	vmov.f32	s1, s21
 8010f82:	eeb0 0a4a 	vmov.f32	s0, s20
 8010f86:	4620      	mov	r0, r4
 8010f88:	e035      	b.n	8010ff6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 8010f8a:	2b01      	cmp	r3, #1
 8010f8c:	d138      	bne.n	8011000 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 8010f8e:	ee31 4ae2 	vsub.f32	s8, s3, s5
 8010f92:	ee33 6a48 	vsub.f32	s12, s6, s16
 8010f96:	ee71 7a42 	vsub.f32	s15, s2, s4
 8010f9a:	ee73 6ae4 	vsub.f32	s13, s7, s9
 8010f9e:	ee26 7a44 	vnmul.f32	s14, s12, s8
 8010fa2:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8010fa6:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8010faa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010fae:	d027      	beq.n	8011000 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 8010fb0:	ee28 8a63 	vnmul.f32	s16, s16, s7
 8010fb4:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 8010fb8:	eea4 8a83 	vfma.f32	s16, s9, s6
 8010fbc:	eee1 8a22 	vfma.f32	s17, s2, s5
 8010fc0:	ee68 7a67 	vnmul.f32	s15, s16, s15
 8010fc4:	ee28 8a44 	vnmul.f32	s16, s16, s8
 8010fc8:	eee6 7a28 	vfma.f32	s15, s12, s17
 8010fcc:	eea6 8aa8 	vfma.f32	s16, s13, s17
 8010fd0:	ee87 0a87 	vdiv.f32	s0, s15, s14
 8010fd4:	eec8 0a07 	vdiv.f32	s1, s16, s14
 8010fd8:	ee3c ca40 	vsub.f32	s24, s24, s0
 8010fdc:	ee39 9a60 	vsub.f32	s18, s18, s1
 8010fe0:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 8010fe4:	ee29 9a09 	vmul.f32	s18, s18, s18
 8010fe8:	eeac 9a0c 	vfma.f32	s18, s24, s24
 8010fec:	eef4 7ac9 	vcmpe.f32	s15, s18
 8010ff0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010ff4:	db04      	blt.n	8011000 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 8010ff6:	f7ff feb2 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8010ffa:	ecbd 8b0a 	vpop	{d8-d12}
 8010ffe:	bd10      	pop	{r4, pc}
 8011000:	eef0 0a6b 	vmov.f32	s1, s23
 8011004:	eeb0 0a4b 	vmov.f32	s0, s22
 8011008:	4620      	mov	r0, r4
 801100a:	f7ff fea8 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801100e:	e7b6      	b.n	8010f7e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

08011010 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 8011010:	b510      	push	{r4, lr}
 8011012:	ed2d 8b0c 	vpush	{d8-d13}
 8011016:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 801101a:	4604      	mov	r4, r0
 801101c:	eeb0 9a40 	vmov.f32	s18, s0
 8011020:	eef0 9a60 	vmov.f32	s19, s1
 8011024:	eef0 aa41 	vmov.f32	s21, s2
 8011028:	eeb0 ba61 	vmov.f32	s22, s3
 801102c:	b933      	cbnz	r3, 801103c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 801102e:	f7ff fe96 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8011032:	eef0 0a4b 	vmov.f32	s1, s22
 8011036:	eeb0 0a6a 	vmov.f32	s0, s21
 801103a:	e015      	b.n	8011068 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 801103c:	ee71 8a40 	vsub.f32	s17, s2, s0
 8011040:	ee31 8ae0 	vsub.f32	s16, s3, s1
 8011044:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8011048:	2b02      	cmp	r3, #2
 801104a:	ee68 8aa7 	vmul.f32	s17, s17, s15
 801104e:	ee28 8a27 	vmul.f32	s16, s16, s15
 8011052:	d10f      	bne.n	8011074 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 8011054:	ee70 0ae8 	vsub.f32	s1, s1, s17
 8011058:	ee30 0a08 	vadd.f32	s0, s0, s16
 801105c:	f7ff fe7f 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8011060:	ee7b 0a68 	vsub.f32	s1, s22, s17
 8011064:	ee3a 0a88 	vadd.f32	s0, s21, s16
 8011068:	4620      	mov	r0, r4
 801106a:	f7ff fe78 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801106e:	ecbd 8b0c 	vpop	{d8-d13}
 8011072:	bd10      	pop	{r4, pc}
 8011074:	f7ff fe73 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8011078:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 80111b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 801107c:	eddf ba4d 	vldr	s23, [pc, #308]	@ 80111b4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 8011080:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 80111b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 8011084:	eddf ca4d 	vldr	s25, [pc, #308]	@ 80111bc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 8011088:	ed9f da4d 	vldr	s26, [pc, #308]	@ 80111c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 801108c:	eef0 0a69 	vmov.f32	s1, s19
 8011090:	eeb0 0a49 	vmov.f32	s0, s18
 8011094:	eee8 0a27 	vfma.f32	s1, s16, s15
 8011098:	4620      	mov	r0, r4
 801109a:	eea8 0aa7 	vfma.f32	s0, s17, s15
 801109e:	eeb1 aa68 	vneg.f32	s20, s17
 80110a2:	eeea 0a2b 	vfma.f32	s1, s20, s23
 80110a6:	eea8 0a2b 	vfma.f32	s0, s16, s23
 80110aa:	f7ff fe58 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80110ae:	eddf 7a45 	vldr	s15, [pc, #276]	@ 80111c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 80110b2:	eef0 0a69 	vmov.f32	s1, s19
 80110b6:	eeb0 0a49 	vmov.f32	s0, s18
 80110ba:	eee8 0a27 	vfma.f32	s1, s16, s15
 80110be:	4620      	mov	r0, r4
 80110c0:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80110c4:	eeea 0a0c 	vfma.f32	s1, s20, s24
 80110c8:	eea8 0a0c 	vfma.f32	s0, s16, s24
 80110cc:	f7ff fe47 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80110d0:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 80111c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 80110d4:	eef0 0a69 	vmov.f32	s1, s19
 80110d8:	eeb0 0a49 	vmov.f32	s0, s18
 80110dc:	eee8 0a27 	vfma.f32	s1, s16, s15
 80110e0:	4620      	mov	r0, r4
 80110e2:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80110e6:	eeea 0a2c 	vfma.f32	s1, s20, s25
 80110ea:	eea8 0a2c 	vfma.f32	s0, s16, s25
 80110ee:	f7ff fe36 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80110f2:	eddf 7a36 	vldr	s15, [pc, #216]	@ 80111cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 80110f6:	eef0 0a69 	vmov.f32	s1, s19
 80110fa:	eeb0 0a49 	vmov.f32	s0, s18
 80110fe:	eee8 0a27 	vfma.f32	s1, s16, s15
 8011102:	4620      	mov	r0, r4
 8011104:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8011108:	eeea 0a0d 	vfma.f32	s1, s20, s26
 801110c:	eea8 0a0d 	vfma.f32	s0, s16, s26
 8011110:	f7ff fe25 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8011114:	ee79 0a88 	vadd.f32	s1, s19, s16
 8011118:	ee39 0a28 	vadd.f32	s0, s18, s17
 801111c:	ee70 0ae8 	vsub.f32	s1, s1, s17
 8011120:	ee30 0a08 	vadd.f32	s0, s0, s16
 8011124:	4620      	mov	r0, r4
 8011126:	f7ff fe1a 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801112a:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80111d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 801112e:	eef0 0a69 	vmov.f32	s1, s19
 8011132:	eeb0 0a49 	vmov.f32	s0, s18
 8011136:	eee8 0a27 	vfma.f32	s1, s16, s15
 801113a:	4620      	mov	r0, r4
 801113c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8011140:	eeea 0a0d 	vfma.f32	s1, s20, s26
 8011144:	eea8 0a0d 	vfma.f32	s0, s16, s26
 8011148:	f7ff fe09 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801114c:	eddf 7a21 	vldr	s15, [pc, #132]	@ 80111d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 8011150:	eef0 0a69 	vmov.f32	s1, s19
 8011154:	eeb0 0a49 	vmov.f32	s0, s18
 8011158:	eee8 0a27 	vfma.f32	s1, s16, s15
 801115c:	4620      	mov	r0, r4
 801115e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8011162:	eeea 0a2c 	vfma.f32	s1, s20, s25
 8011166:	eea8 0a2c 	vfma.f32	s0, s16, s25
 801116a:	f7ff fdf8 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801116e:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 80111d8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 8011172:	eef0 0a69 	vmov.f32	s1, s19
 8011176:	eeb0 0a49 	vmov.f32	s0, s18
 801117a:	eee8 0a27 	vfma.f32	s1, s16, s15
 801117e:	4620      	mov	r0, r4
 8011180:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8011184:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8011188:	eea8 0a0c 	vfma.f32	s0, s16, s24
 801118c:	f7ff fde7 	bl	8010d5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8011190:	eddf 7a12 	vldr	s15, [pc, #72]	@ 80111dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 8011194:	eef0 0a69 	vmov.f32	s1, s19
 8011198:	eeb0 0a49 	vmov.f32	s0, s18
 801119c:	eee8 0a27 	vfma.f32	s1, s16, s15
 80111a0:	4620      	mov	r0, r4
 80111a2:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80111a6:	eeea 0a2b 	vfma.f32	s1, s20, s23
 80111aa:	eea8 0a2b 	vfma.f32	s0, s16, s23
 80111ae:	e73e      	b.n	801102e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 80111b0:	3d23d70a 	.word	0x3d23d70a
 80111b4:	3e8f5c29 	.word	0x3e8f5c29
 80111b8:	3f19999a 	.word	0x3f19999a
 80111bc:	3f4ccccd 	.word	0x3f4ccccd
 80111c0:	3f75c28f 	.word	0x3f75c28f
 80111c4:	3e4ccccd 	.word	0x3e4ccccd
 80111c8:	3ecccccd 	.word	0x3ecccccd
 80111cc:	3f3851ec 	.word	0x3f3851ec
 80111d0:	3fa3d70a 	.word	0x3fa3d70a
 80111d4:	3fcccccd 	.word	0x3fcccccd
 80111d8:	3fe66666 	.word	0x3fe66666
 80111dc:	3ffae148 	.word	0x3ffae148

080111e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 80111e0:	b570      	push	{r4, r5, r6, lr}
 80111e2:	ed2d 8b06 	vpush	{d8-d10}
 80111e6:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 80111ea:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 80111ee:	ee30 8ac8 	vsub.f32	s16, s1, s16
 80111f2:	ee30 9a49 	vsub.f32	s18, s0, s18
 80111f6:	eef0 aa40 	vmov.f32	s21, s0
 80111fa:	ee28 0a08 	vmul.f32	s0, s16, s16
 80111fe:	4604      	mov	r4, r0
 8011200:	eea9 0a09 	vfma.f32	s0, s18, s18
 8011204:	eeb0 aa60 	vmov.f32	s20, s1
 8011208:	f017 fd6c 	bl	8028ce4 <sqrtf>
 801120c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8011210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011214:	dd36      	ble.n	8011284 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 8011216:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 801121a:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 801121e:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 8011222:	eec0 6a27 	vdiv.f32	s13, s0, s15
 8011226:	2600      	movs	r6, #0
 8011228:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 801122c:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 8011230:	eec8 8a26 	vdiv.f32	s17, s16, s13
 8011234:	ee89 8a26 	vdiv.f32	s16, s18, s13
 8011238:	ee70 9a28 	vadd.f32	s19, s0, s17
 801123c:	ee30 9ac8 	vsub.f32	s18, s1, s16
 8011240:	ee78 8aaa 	vadd.f32	s17, s17, s21
 8011244:	ee3a 8a48 	vsub.f32	s16, s20, s16
 8011248:	b1fd      	cbz	r5, 801128a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 801124a:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 801124e:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 8011252:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 8011256:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 801125a:	eef0 0a49 	vmov.f32	s1, s18
 801125e:	eeb0 0a69 	vmov.f32	s0, s19
 8011262:	4620      	mov	r0, r4
 8011264:	f7ff fd64 	bl	8010d30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 8011268:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 801126c:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 8011270:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 8011274:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 8011278:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 801127c:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 8011280:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 8011284:	ecbd 8b06 	vpop	{d8-d10}
 8011288:	bd70      	pop	{r4, r5, r6, pc}
 801128a:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 801128e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8011292:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8011296:	b16b      	cbz	r3, 80112b4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 8011298:	eef0 1a49 	vmov.f32	s3, s18
 801129c:	eeb0 1a69 	vmov.f32	s2, s19
 80112a0:	eef0 0a62 	vmov.f32	s1, s5
 80112a4:	eeb0 0a42 	vmov.f32	s0, s4
 80112a8:	4620      	mov	r0, r4
 80112aa:	f7ff feb1 	bl	8011010 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 80112ae:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 80112b2:	e7db      	b.n	801126c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 80112b4:	eef0 4a48 	vmov.f32	s9, s16
 80112b8:	eeb0 4a68 	vmov.f32	s8, s17
 80112bc:	eef0 3a49 	vmov.f32	s7, s18
 80112c0:	eeb0 3a69 	vmov.f32	s6, s19
 80112c4:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 80112c8:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 80112cc:	4620      	mov	r0, r4
 80112ce:	f7ff fe13 	bl	8010ef8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 80112d2:	e7cb      	b.n	801126c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

080112d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 80112d4:	ee07 2a90 	vmov	s15, r2
 80112d8:	ee07 1a10 	vmov	s14, r1
 80112dc:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80112e0:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 80112e4:	eddf 7a03 	vldr	s15, [pc, #12]	@ 80112f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 80112e8:	ee60 0aa7 	vmul.f32	s1, s1, s15
 80112ec:	ee20 0a27 	vmul.f32	s0, s0, s15
 80112f0:	f7ff bf76 	b.w	80111e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80112f4:	3d000000 	.word	0x3d000000

080112f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 80112f8:	b538      	push	{r3, r4, r5, lr}
 80112fa:	ed2d 8b02 	vpush	{d8}
 80112fe:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 8011302:	4604      	mov	r4, r0
 8011304:	b31d      	cbz	r5, 801134e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 8011306:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 801130a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 801130e:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 8011312:	ee78 8a67 	vsub.f32	s17, s16, s15
 8011316:	ee38 8a27 	vadd.f32	s16, s16, s15
 801131a:	eef0 0a68 	vmov.f32	s1, s17
 801131e:	f7ff fd07 	bl	8010d30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 8011322:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 8011326:	eef0 1a48 	vmov.f32	s3, s16
 801132a:	eeb0 0a41 	vmov.f32	s0, s2
 801132e:	eef0 0a68 	vmov.f32	s1, s17
 8011332:	4620      	mov	r0, r4
 8011334:	f7ff fe6c 	bl	8011010 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 8011338:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 801133c:	eef0 1a68 	vmov.f32	s3, s17
 8011340:	eef0 0a48 	vmov.f32	s1, s16
 8011344:	eeb0 0a41 	vmov.f32	s0, s2
 8011348:	4620      	mov	r0, r4
 801134a:	f7ff fe61 	bl	8011010 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 801134e:	ecbd 8b02 	vpop	{d8}
 8011352:	4628      	mov	r0, r5
 8011354:	bd38      	pop	{r3, r4, r5, pc}

08011356 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 8011356:	b510      	push	{r4, lr}
 8011358:	ed2d 8b02 	vpush	{d8}
 801135c:	4604      	mov	r4, r0
 801135e:	eeb0 8a40 	vmov.f32	s16, s0
 8011362:	eef0 8a60 	vmov.f32	s17, s1
 8011366:	f7ff ffc7 	bl	80112f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 801136a:	b9d0      	cbnz	r0, 80113a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 801136c:	4620      	mov	r0, r4
 801136e:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 8011372:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 8011376:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 801137a:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 801137e:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8011382:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8011386:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 801138a:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 801138e:	eef0 0a68 	vmov.f32	s1, s17
 8011392:	eeb0 0a48 	vmov.f32	s0, s16
 8011396:	f7ff fdaf 	bl	8010ef8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 801139a:	2001      	movs	r0, #1
 801139c:	ecbd 8b02 	vpop	{d8}
 80113a0:	bd10      	pop	{r4, pc}
 80113a2:	2000      	movs	r0, #0
 80113a4:	e7fa      	b.n	801139c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

080113a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 80113a6:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 80113aa:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 80113ae:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 80113b2:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 80113b6:	f7ff be2b 	b.w	8011010 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

080113bc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 80113bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113c0:	b089      	sub	sp, #36	@ 0x24
 80113c2:	461c      	mov	r4, r3
 80113c4:	f10d 0820 	add.w	r8, sp, #32
 80113c8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80113cc:	9304      	str	r3, [sp, #16]
 80113ce:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80113d0:	9105      	str	r1, [sp, #20]
 80113d2:	2300      	movs	r3, #0
 80113d4:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 80113d8:	9306      	str	r3, [sp, #24]
 80113da:	f848 3d04 	str.w	r3, [r8, #-4]!
 80113de:	9b04      	ldr	r3, [sp, #16]
 80113e0:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 80113e4:	4682      	mov	sl, r0
 80113e6:	4615      	mov	r5, r2
 80113e8:	9b05      	ldr	r3, [sp, #20]
 80113ea:	429d      	cmp	r5, r3
 80113ec:	d96d      	bls.n	80114ca <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 80113ee:	3d01      	subs	r5, #1
 80113f0:	f819 3005 	ldrb.w	r3, [r9, r5]
 80113f4:	2b06      	cmp	r3, #6
 80113f6:	d8f7      	bhi.n	80113e8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 80113f8:	a201      	add	r2, pc, #4	@ (adr r2, 8011400 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 80113fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80113fe:	bf00      	nop
 8011400:	0801141f 	.word	0x0801141f
 8011404:	080113e9 	.word	0x080113e9
 8011408:	0801141d 	.word	0x0801141d
 801140c:	08011441 	.word	0x08011441
 8011410:	08011441 	.word	0x08011441
 8011414:	08011445 	.word	0x08011445
 8011418:	08011485 	.word	0x08011485
 801141c:	3c02      	subs	r4, #2
 801141e:	4650      	mov	r0, sl
 8011420:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8011424:	9400      	str	r4, [sp, #0]
 8011426:	462b      	mov	r3, r5
 8011428:	4642      	mov	r2, r8
 801142a:	a906      	add	r1, sp, #24
 801142c:	f7ff fcae 	bl	8010d8c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8011430:	eddd 0a07 	vldr	s1, [sp, #28]
 8011434:	ed9d 0a06 	vldr	s0, [sp, #24]
 8011438:	4630      	mov	r0, r6
 801143a:	f7ff fed1 	bl	80111e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 801143e:	e7d3      	b.n	80113e8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8011440:	3c01      	subs	r4, #1
 8011442:	e7ec      	b.n	801141e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 8011444:	f1a4 0b04 	sub.w	fp, r4, #4
 8011448:	3c02      	subs	r4, #2
 801144a:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 801144e:	4650      	mov	r0, sl
 8011450:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8011454:	f8cd b000 	str.w	fp, [sp]
 8011458:	462b      	mov	r3, r5
 801145a:	4642      	mov	r2, r8
 801145c:	a906      	add	r1, sp, #24
 801145e:	f7ff fc95 	bl	8010d8c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8011462:	eddd 2a07 	vldr	s5, [sp, #28]
 8011466:	ed9d 2a06 	vldr	s4, [sp, #24]
 801146a:	ed54 1a01 	vldr	s3, [r4, #-4]
 801146e:	ed14 1a02 	vldr	s2, [r4, #-8]
 8011472:	edd4 0a01 	vldr	s1, [r4, #4]
 8011476:	ed94 0a00 	vldr	s0, [r4]
 801147a:	4630      	mov	r0, r6
 801147c:	f7ff fc1a 	bl	8010cb4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8011480:	465c      	mov	r4, fp
 8011482:	e7b1      	b.n	80113e8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8011484:	f1a4 0b06 	sub.w	fp, r4, #6
 8011488:	3c02      	subs	r4, #2
 801148a:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 801148e:	4650      	mov	r0, sl
 8011490:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8011494:	f8cd b000 	str.w	fp, [sp]
 8011498:	462b      	mov	r3, r5
 801149a:	4642      	mov	r2, r8
 801149c:	a906      	add	r1, sp, #24
 801149e:	f7ff fc75 	bl	8010d8c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 80114a2:	eddd 3a07 	vldr	s7, [sp, #28]
 80114a6:	ed9d 3a06 	vldr	s6, [sp, #24]
 80114aa:	ed54 2a03 	vldr	s5, [r4, #-12]
 80114ae:	ed14 2a04 	vldr	s4, [r4, #-16]
 80114b2:	ed54 1a01 	vldr	s3, [r4, #-4]
 80114b6:	ed14 1a02 	vldr	s2, [r4, #-8]
 80114ba:	edd4 0a01 	vldr	s1, [r4, #4]
 80114be:	ed94 0a00 	vldr	s0, [r4]
 80114c2:	4630      	mov	r0, r6
 80114c4:	f7ff fc15 	bl	8010cf2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 80114c8:	e7da      	b.n	8011480 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 80114ca:	9b04      	ldr	r3, [sp, #16]
 80114cc:	b113      	cbz	r3, 80114d4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 80114ce:	4630      	mov	r0, r6
 80114d0:	f7ff ff69 	bl	80113a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 80114d4:	b009      	add	sp, #36	@ 0x24
 80114d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114da:	bf00      	nop

080114dc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 80114dc:	eef0 7a60 	vmov.f32	s15, s1
 80114e0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80114e4:	6803      	ldr	r3, [r0, #0]
 80114e6:	ee17 2a90 	vmov	r2, s15
 80114ea:	eef0 7a40 	vmov.f32	s15, s0
 80114ee:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80114f2:	689b      	ldr	r3, [r3, #8]
 80114f4:	ee17 1a90 	vmov	r1, s15
 80114f8:	4718      	bx	r3
	...

080114fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 80114fc:	b510      	push	{r4, lr}
 80114fe:	4b04      	ldr	r3, [pc, #16]	@ (8011510 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 8011500:	4604      	mov	r4, r0
 8011502:	f840 3b14 	str.w	r3, [r0], #20
 8011506:	f002 faeb 	bl	8013ae0 <_ZN8touchgfx7OutlineD1Ev>
 801150a:	4620      	mov	r0, r4
 801150c:	bd10      	pop	{r4, pc}
 801150e:	bf00      	nop
 8011510:	0802dbac 	.word	0x0802dbac

08011514 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 8011514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011518:	ed2d 8b04 	vpush	{d8-d9}
 801151c:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 8011520:	b0b5      	sub	sp, #212	@ 0xd4
 8011522:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801152a:	4605      	mov	r5, r0
 801152c:	468b      	mov	fp, r1
 801152e:	9206      	str	r2, [sp, #24]
 8011530:	461e      	mov	r6, r3
 8011532:	f04f 0400 	mov.w	r4, #0
 8011536:	f240 814e 	bls.w	80117d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 801153a:	23ff      	movs	r3, #255	@ 0xff
 801153c:	9300      	str	r3, [sp, #0]
 801153e:	1d02      	adds	r2, r0, #4
 8011540:	6981      	ldr	r1, [r0, #24]
 8011542:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 8011544:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 80117dc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 8011548:	a808      	add	r0, sp, #32
 801154a:	f016 fef3 	bl	8028334 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 801154e:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 8011552:	4ba3      	ldr	r3, [pc, #652]	@ (80117e0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 8011554:	edd5 6a08 	vldr	s13, [r5, #32]
 8011558:	9308      	str	r3, [sp, #32]
 801155a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801155e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011562:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8011566:	bf48      	it	mi
 8011568:	eef1 7a67 	vnegmi.f32	s15, s15
 801156c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8011570:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 8011574:	2201      	movs	r2, #1
 8011576:	9325      	str	r3, [sp, #148]	@ 0x94
 8011578:	2300      	movs	r3, #0
 801157a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 801157e:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 8011582:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 8011586:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 801158a:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 801158e:	7f6a      	ldrb	r2, [r5, #29]
 8011590:	7fab      	ldrb	r3, [r5, #30]
 8011592:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8011596:	435a      	muls	r2, r3
 8011598:	ee27 7a26 	vmul.f32	s14, s14, s13
 801159c:	1c53      	adds	r3, r2, #1
 801159e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80115a2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80115a6:	f04f 0800 	mov.w	r8, #0
 80115aa:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 80115ae:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 80115b2:	942a      	str	r4, [sp, #168]	@ 0xa8
 80115b4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80115b8:	942b      	str	r4, [sp, #172]	@ 0xac
 80115ba:	942c      	str	r4, [sp, #176]	@ 0xb0
 80115bc:	942d      	str	r4, [sp, #180]	@ 0xb4
 80115be:	942e      	str	r4, [sp, #184]	@ 0xb8
 80115c0:	942f      	str	r4, [sp, #188]	@ 0xbc
 80115c2:	9430      	str	r4, [sp, #192]	@ 0xc0
 80115c4:	9431      	str	r4, [sp, #196]	@ 0xc4
 80115c6:	9432      	str	r4, [sp, #200]	@ 0xc8
 80115c8:	9433      	str	r4, [sp, #204]	@ 0xcc
 80115ca:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 80115ce:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 80115d2:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 80115d6:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 80115da:	eef0 9a49 	vmov.f32	s19, s18
 80115de:	eeb0 8a49 	vmov.f32	s16, s18
 80115e2:	eef0 8a49 	vmov.f32	s17, s18
 80115e6:	4644      	mov	r4, r8
 80115e8:	46c1      	mov	r9, r8
 80115ea:	af08      	add	r7, sp, #32
 80115ec:	f04f 0a01 	mov.w	sl, #1
 80115f0:	9b06      	ldr	r3, [sp, #24]
 80115f2:	454b      	cmp	r3, r9
 80115f4:	f000 80cc 	beq.w	8011790 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 80115f8:	f109 0301 	add.w	r3, r9, #1
 80115fc:	9305      	str	r3, [sp, #20]
 80115fe:	f81b 3009 	ldrb.w	r3, [fp, r9]
 8011602:	2b06      	cmp	r3, #6
 8011604:	d839      	bhi.n	801167a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8011606:	e8df f003 	tbb	[pc, r3]
 801160a:	3b04      	.short	0x3b04
 801160c:	817c6f60 	.word	0x817c6f60
 8011610:	a0          	.byte	0xa0
 8011611:	00          	.byte	0x00
 8011612:	45c1      	cmp	r9, r8
 8011614:	d92b      	bls.n	801166e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 8011616:	eef0 0a49 	vmov.f32	s1, s18
 801161a:	eeb0 0a69 	vmov.f32	s0, s19
 801161e:	4638      	mov	r0, r7
 8011620:	f7ff fdde 	bl	80111e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8011624:	4638      	mov	r0, r7
 8011626:	f7ff fe67 	bl	80112f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 801162a:	4681      	mov	r9, r0
 801162c:	b9f8      	cbnz	r0, 801166e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 801162e:	eef0 0a49 	vmov.f32	s1, s18
 8011632:	eeb0 0a69 	vmov.f32	s0, s19
 8011636:	4638      	mov	r0, r7
 8011638:	f7ff fe8d 	bl	8011356 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 801163c:	4628      	mov	r0, r5
 801163e:	e9cd 9702 	strd	r9, r7, [sp, #8]
 8011642:	e9cd b600 	strd	fp, r6, [sp]
 8011646:	4623      	mov	r3, r4
 8011648:	9a05      	ldr	r2, [sp, #20]
 801164a:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 801164e:	4641      	mov	r1, r8
 8011650:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 8011654:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 8011658:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 801165c:	f7ff feae 	bl	80113bc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8011660:	eef0 0a49 	vmov.f32	s1, s18
 8011664:	eeb0 0a69 	vmov.f32	s0, s19
 8011668:	4638      	mov	r0, r7
 801166a:	f7ff fe74 	bl	8011356 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 801166e:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8011672:	eeb0 8a49 	vmov.f32	s16, s18
 8011676:	eef0 8a69 	vmov.f32	s17, s19
 801167a:	f8dd 9014 	ldr.w	r9, [sp, #20]
 801167e:	e7b7      	b.n	80115f0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 8011680:	45c1      	cmp	r9, r8
 8011682:	d90d      	bls.n	80116a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 8011684:	4638      	mov	r0, r7
 8011686:	f7ff fe37 	bl	80112f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 801168a:	b948      	cbnz	r0, 80116a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 801168c:	e9cd a702 	strd	sl, r7, [sp, #8]
 8011690:	e9cd b600 	strd	fp, r6, [sp]
 8011694:	4623      	mov	r3, r4
 8011696:	464a      	mov	r2, r9
 8011698:	4641      	mov	r1, r8
 801169a:	4628      	mov	r0, r5
 801169c:	f7ff fe8e 	bl	80113bc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 80116a0:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80116a4:	edd3 8a00 	vldr	s17, [r3]
 80116a8:	ed93 8a01 	vldr	s16, [r3, #4]
 80116ac:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 80116b0:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 80116b4:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 80116b8:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 80116bc:	3402      	adds	r4, #2
 80116be:	46c8      	mov	r8, r9
 80116c0:	eeb0 9a48 	vmov.f32	s18, s16
 80116c4:	eef0 9a68 	vmov.f32	s19, s17
 80116c8:	e7d7      	b.n	801167a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80116ca:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80116ce:	edd3 8a00 	vldr	s17, [r3]
 80116d2:	ed93 8a01 	vldr	s16, [r3, #4]
 80116d6:	eeb0 0a68 	vmov.f32	s0, s17
 80116da:	eef0 0a48 	vmov.f32	s1, s16
 80116de:	4638      	mov	r0, r7
 80116e0:	f7ff fd7e 	bl	80111e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80116e4:	3402      	adds	r4, #2
 80116e6:	e7c8      	b.n	801167a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80116e8:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80116ec:	edd3 8a00 	vldr	s17, [r3]
 80116f0:	eef0 0a48 	vmov.f32	s1, s16
 80116f4:	eeb0 0a68 	vmov.f32	s0, s17
 80116f8:	4638      	mov	r0, r7
 80116fa:	f7ff fd71 	bl	80111e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80116fe:	3401      	adds	r4, #1
 8011700:	e7bb      	b.n	801167a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8011702:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8011706:	ed93 8a00 	vldr	s16, [r3]
 801170a:	e7f1      	b.n	80116f0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 801170c:	00a3      	lsls	r3, r4, #2
 801170e:	f103 0208 	add.w	r2, r3, #8
 8011712:	f103 090c 	add.w	r9, r3, #12
 8011716:	4432      	add	r2, r6
 8011718:	4433      	add	r3, r6
 801171a:	44b1      	add	r9, r6
 801171c:	ed92 2a00 	vldr	s4, [r2]
 8011720:	edd9 2a00 	vldr	s5, [r9]
 8011724:	edd3 1a01 	vldr	s3, [r3, #4]
 8011728:	ed93 1a00 	vldr	s2, [r3]
 801172c:	9207      	str	r2, [sp, #28]
 801172e:	eef0 0a48 	vmov.f32	s1, s16
 8011732:	eeb0 0a68 	vmov.f32	s0, s17
 8011736:	4638      	mov	r0, r7
 8011738:	f7ff fabc 	bl	8010cb4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 801173c:	9a07      	ldr	r2, [sp, #28]
 801173e:	ed99 8a00 	vldr	s16, [r9]
 8011742:	edd2 8a00 	vldr	s17, [r2]
 8011746:	3404      	adds	r4, #4
 8011748:	e797      	b.n	801167a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 801174a:	00a3      	lsls	r3, r4, #2
 801174c:	f103 0210 	add.w	r2, r3, #16
 8011750:	f103 0914 	add.w	r9, r3, #20
 8011754:	4432      	add	r2, r6
 8011756:	4433      	add	r3, r6
 8011758:	44b1      	add	r9, r6
 801175a:	ed92 3a00 	vldr	s6, [r2]
 801175e:	edd9 3a00 	vldr	s7, [r9]
 8011762:	edd3 2a03 	vldr	s5, [r3, #12]
 8011766:	ed93 2a02 	vldr	s4, [r3, #8]
 801176a:	edd3 1a01 	vldr	s3, [r3, #4]
 801176e:	ed93 1a00 	vldr	s2, [r3]
 8011772:	9207      	str	r2, [sp, #28]
 8011774:	eef0 0a48 	vmov.f32	s1, s16
 8011778:	eeb0 0a68 	vmov.f32	s0, s17
 801177c:	4638      	mov	r0, r7
 801177e:	f7ff fab8 	bl	8010cf2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8011782:	9a07      	ldr	r2, [sp, #28]
 8011784:	ed99 8a00 	vldr	s16, [r9]
 8011788:	edd2 8a00 	vldr	s17, [r2]
 801178c:	3406      	adds	r4, #6
 801178e:	e774      	b.n	801167a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8011790:	9b06      	ldr	r3, [sp, #24]
 8011792:	4543      	cmp	r3, r8
 8011794:	af08      	add	r7, sp, #32
 8011796:	d90f      	bls.n	80117b8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 8011798:	4638      	mov	r0, r7
 801179a:	f7ff fdad 	bl	80112f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 801179e:	b958      	cbnz	r0, 80117b8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 80117a0:	2301      	movs	r3, #1
 80117a2:	e9cd 6301 	strd	r6, r3, [sp, #4]
 80117a6:	9703      	str	r7, [sp, #12]
 80117a8:	f8cd b000 	str.w	fp, [sp]
 80117ac:	4623      	mov	r3, r4
 80117ae:	9a06      	ldr	r2, [sp, #24]
 80117b0:	4641      	mov	r1, r8
 80117b2:	4628      	mov	r0, r5
 80117b4:	f7ff fe02 	bl	80113bc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 80117b8:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 80117bc:	4638      	mov	r0, r7
 80117be:	f016 fe4d 	bl	802845c <_ZN8touchgfx6Canvas6renderEh>
 80117c2:	4604      	mov	r4, r0
 80117c4:	4638      	mov	r0, r7
 80117c6:	f7ff fe99 	bl	80114fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 80117ca:	4620      	mov	r0, r4
 80117cc:	b035      	add	sp, #212	@ 0xd4
 80117ce:	ecbd 8b04 	vpop	{d8-d9}
 80117d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80117d6:	2401      	movs	r4, #1
 80117d8:	e7f7      	b.n	80117ca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 80117da:	bf00      	nop
 80117dc:	00000000 	.word	0x00000000
 80117e0:	0802d24c 	.word	0x0802d24c

080117e4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 80117e4:	b510      	push	{r4, lr}
 80117e6:	4604      	mov	r4, r0
 80117e8:	f7ff fe88 	bl	80114fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 80117ec:	4620      	mov	r0, r4
 80117ee:	21b0      	movs	r1, #176	@ 0xb0
 80117f0:	f017 fa22 	bl	8028c38 <_ZdlPvj>
 80117f4:	4620      	mov	r0, r4
 80117f6:	bd10      	pop	{r4, pc}

080117f8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 80117f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80117fc:	ed2d 8b06 	vpush	{d8-d10}
 8011800:	b0aa      	sub	sp, #168	@ 0xa8
 8011802:	4698      	mov	r8, r3
 8011804:	23ff      	movs	r3, #255	@ 0xff
 8011806:	4607      	mov	r7, r0
 8011808:	9300      	str	r3, [sp, #0]
 801180a:	4689      	mov	r9, r1
 801180c:	4692      	mov	sl, r2
 801180e:	6981      	ldr	r1, [r0, #24]
 8011810:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 8011812:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 8011a1c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8011816:	1d02      	adds	r2, r0, #4
 8011818:	a80d      	add	r0, sp, #52	@ 0x34
 801181a:	f016 fd8b 	bl	8028334 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 801181e:	7f3b      	ldrb	r3, [r7, #28]
 8011820:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 8011a1c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8011824:	1e5a      	subs	r2, r3, #1
 8011826:	4253      	negs	r3, r2
 8011828:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 801182c:	4153      	adcs	r3, r2
 801182e:	eeb0 0a60 	vmov.f32	s0, s1
 8011832:	4628      	mov	r0, r5
 8011834:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 8011838:	f006 f939 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801183c:	44ca      	add	sl, r9
 801183e:	eeb0 9a40 	vmov.f32	s18, s0
 8011842:	eef0 9a60 	vmov.f32	s19, s1
 8011846:	eef0 8a48 	vmov.f32	s17, s16
 801184a:	2400      	movs	r4, #0
 801184c:	45ca      	cmp	sl, r9
 801184e:	f000 80cd 	beq.w	80119ec <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 8011852:	f819 3b01 	ldrb.w	r3, [r9], #1
 8011856:	2b06      	cmp	r3, #6
 8011858:	d8f8      	bhi.n	801184c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801185a:	e8df f003 	tbb	[pc, r3]
 801185e:	0804      	.short	0x0804
 8011860:	58533f2a 	.word	0x58533f2a
 8011864:	8a          	.byte	0x8a
 8011865:	00          	.byte	0x00
 8011866:	a80d      	add	r0, sp, #52	@ 0x34
 8011868:	f016 fdd6 	bl	8028418 <_ZN8touchgfx6Canvas5closeEv>
 801186c:	e7ee      	b.n	801184c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801186e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8011872:	edd3 8a00 	vldr	s17, [r3]
 8011876:	ed93 8a01 	vldr	s16, [r3, #4]
 801187a:	eeb0 0a68 	vmov.f32	s0, s17
 801187e:	eef0 0a48 	vmov.f32	s1, s16
 8011882:	4628      	mov	r0, r5
 8011884:	f006 f913 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8011888:	eef0 7a60 	vmov.f32	s15, s1
 801188c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8011890:	a80d      	add	r0, sp, #52	@ 0x34
 8011892:	ee17 2a90 	vmov	r2, s15
 8011896:	eef0 7a40 	vmov.f32	s15, s0
 801189a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801189e:	eeb0 9a40 	vmov.f32	s18, s0
 80118a2:	ee17 1a90 	vmov	r1, s15
 80118a6:	eef0 9a60 	vmov.f32	s19, s1
 80118aa:	f016 fe8f 	bl	80285cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80118ae:	3402      	adds	r4, #2
 80118b0:	e7cc      	b.n	801184c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80118b2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80118b6:	edd3 8a00 	vldr	s17, [r3]
 80118ba:	ed93 8a01 	vldr	s16, [r3, #4]
 80118be:	eeb0 0a68 	vmov.f32	s0, s17
 80118c2:	eef0 0a48 	vmov.f32	s1, s16
 80118c6:	4628      	mov	r0, r5
 80118c8:	f006 f8f1 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80118cc:	a80d      	add	r0, sp, #52	@ 0x34
 80118ce:	eeb0 9a40 	vmov.f32	s18, s0
 80118d2:	eef0 9a60 	vmov.f32	s19, s1
 80118d6:	f7ff fe01 	bl	80114dc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80118da:	e7e8      	b.n	80118ae <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 80118dc:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80118e0:	edd3 8a00 	vldr	s17, [r3]
 80118e4:	eef0 0a48 	vmov.f32	s1, s16
 80118e8:	eeb0 0a68 	vmov.f32	s0, s17
 80118ec:	4628      	mov	r0, r5
 80118ee:	f006 f8de 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80118f2:	a80d      	add	r0, sp, #52	@ 0x34
 80118f4:	eeb0 9a40 	vmov.f32	s18, s0
 80118f8:	eef0 9a60 	vmov.f32	s19, s1
 80118fc:	3401      	adds	r4, #1
 80118fe:	f7ff fded 	bl	80114dc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8011902:	e7a3      	b.n	801184c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8011904:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8011908:	ed93 8a00 	vldr	s16, [r3]
 801190c:	e7ea      	b.n	80118e4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 801190e:	1ca3      	adds	r3, r4, #2
 8011910:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8011914:	ed53 0a01 	vldr	s1, [r3, #-4]
 8011918:	ed13 0a02 	vldr	s0, [r3, #-8]
 801191c:	edd3 8a00 	vldr	s17, [r3]
 8011920:	ed93 8a01 	vldr	s16, [r3, #4]
 8011924:	4628      	mov	r0, r5
 8011926:	f006 f8c2 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801192a:	4628      	mov	r0, r5
 801192c:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 8011930:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 8011934:	eeb0 0a68 	vmov.f32	s0, s17
 8011938:	eef0 0a48 	vmov.f32	s1, s16
 801193c:	f006 f8b7 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8011940:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 8011944:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 8011948:	eef0 2a60 	vmov.f32	s5, s1
 801194c:	eeb0 2a40 	vmov.f32	s4, s0
 8011950:	eeb0 aa40 	vmov.f32	s20, s0
 8011954:	eef0 aa60 	vmov.f32	s21, s1
 8011958:	eeb0 0a49 	vmov.f32	s0, s18
 801195c:	eef0 0a69 	vmov.f32	s1, s19
 8011960:	a80d      	add	r0, sp, #52	@ 0x34
 8011962:	f7ff f9a7 	bl	8010cb4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8011966:	3404      	adds	r4, #4
 8011968:	eef0 9a6a 	vmov.f32	s19, s21
 801196c:	eeb0 9a4a 	vmov.f32	s18, s20
 8011970:	e76c      	b.n	801184c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8011972:	1d26      	adds	r6, r4, #4
 8011974:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8011978:	ed56 0a03 	vldr	s1, [r6, #-12]
 801197c:	ed16 0a04 	vldr	s0, [r6, #-16]
 8011980:	edd6 8a00 	vldr	s17, [r6]
 8011984:	ed96 8a01 	vldr	s16, [r6, #4]
 8011988:	4628      	mov	r0, r5
 801198a:	f006 f890 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801198e:	4628      	mov	r0, r5
 8011990:	ed8d 0a07 	vstr	s0, [sp, #28]
 8011994:	edcd 0a08 	vstr	s1, [sp, #32]
 8011998:	ed16 0a02 	vldr	s0, [r6, #-8]
 801199c:	ed56 0a01 	vldr	s1, [r6, #-4]
 80119a0:	f006 f885 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80119a4:	4628      	mov	r0, r5
 80119a6:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 80119aa:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 80119ae:	eeb0 0a68 	vmov.f32	s0, s17
 80119b2:	eef0 0a48 	vmov.f32	s1, s16
 80119b6:	f006 f87a 	bl	8017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80119ba:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 80119be:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 80119c2:	eddd 1a08 	vldr	s3, [sp, #32]
 80119c6:	ed9d 1a07 	vldr	s2, [sp, #28]
 80119ca:	eef0 3a60 	vmov.f32	s7, s1
 80119ce:	eeb0 3a40 	vmov.f32	s6, s0
 80119d2:	eeb0 aa40 	vmov.f32	s20, s0
 80119d6:	eef0 aa60 	vmov.f32	s21, s1
 80119da:	eeb0 0a49 	vmov.f32	s0, s18
 80119de:	eef0 0a69 	vmov.f32	s1, s19
 80119e2:	a80d      	add	r0, sp, #52	@ 0x34
 80119e4:	f7ff f985 	bl	8010cf2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 80119e8:	3406      	adds	r4, #6
 80119ea:	e7bd      	b.n	8011968 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 80119ec:	7f7b      	ldrb	r3, [r7, #29]
 80119ee:	7fb9      	ldrb	r1, [r7, #30]
 80119f0:	4359      	muls	r1, r3
 80119f2:	1c4b      	adds	r3, r1, #1
 80119f4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80119f8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80119fc:	a80d      	add	r0, sp, #52	@ 0x34
 80119fe:	f016 fd2d 	bl	802845c <_ZN8touchgfx6Canvas6renderEh>
 8011a02:	4b07      	ldr	r3, [pc, #28]	@ (8011a20 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 8011a04:	930d      	str	r3, [sp, #52]	@ 0x34
 8011a06:	4604      	mov	r4, r0
 8011a08:	a812      	add	r0, sp, #72	@ 0x48
 8011a0a:	f002 f869 	bl	8013ae0 <_ZN8touchgfx7OutlineD1Ev>
 8011a0e:	4620      	mov	r0, r4
 8011a10:	b02a      	add	sp, #168	@ 0xa8
 8011a12:	ecbd 8b06 	vpop	{d8-d10}
 8011a16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011a1a:	bf00      	nop
 8011a1c:	00000000 	.word	0x00000000
 8011a20:	0802dbac 	.word	0x0802dbac

08011a24 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 8011a24:	b410      	push	{r4}
 8011a26:	7f04      	ldrb	r4, [r0, #28]
 8011a28:	b11c      	cbz	r4, 8011a32 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 8011a2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011a2e:	f7ff bee3 	b.w	80117f8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 8011a32:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011a36:	f7ff bd6d 	b.w	8011514 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

08011a3a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 8011a3a:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8011a3e:	4691      	mov	r9, r2
 8011a40:	4602      	mov	r2, r0
 8011a42:	4606      	mov	r6, r0
 8011a44:	f852 0f26 	ldr.w	r0, [r2, #38]!
 8011a48:	4688      	mov	r8, r1
 8011a4a:	6851      	ldr	r1, [r2, #4]
 8011a4c:	469a      	mov	sl, r3
 8011a4e:	ab02      	add	r3, sp, #8
 8011a50:	c303      	stmia	r3!, {r0, r1}
 8011a52:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011a56:	2b00      	cmp	r3, #0
 8011a58:	af02      	add	r7, sp, #8
 8011a5a:	dd2f      	ble.n	8011abc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 8011a5c:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 8011a60:	2c00      	cmp	r4, #0
 8011a62:	dd2b      	ble.n	8011abc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 8011a64:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011a68:	441c      	add	r4, r3
 8011a6a:	b2a4      	uxth	r4, r4
 8011a6c:	b225      	sxth	r5, r4
 8011a6e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8011a72:	42ab      	cmp	r3, r5
 8011a74:	da22      	bge.n	8011abc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 8011a76:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8011a78:	9300      	str	r3, [sp, #0]
 8011a7a:	9701      	str	r7, [sp, #4]
 8011a7c:	4653      	mov	r3, sl
 8011a7e:	464a      	mov	r2, r9
 8011a80:	4641      	mov	r1, r8
 8011a82:	4630      	mov	r0, r6
 8011a84:	f7ff ffce 	bl	8011a24 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 8011a88:	b940      	cbnz	r0, 8011a9c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
 8011a8a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011a8e:	2b01      	cmp	r3, #1
 8011a90:	d004      	beq.n	8011a9c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
 8011a92:	3301      	adds	r3, #1
 8011a94:	105b      	asrs	r3, r3, #1
 8011a96:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011a9a:	e7ec      	b.n	8011a76 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
 8011a9c:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8011aa0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011aa4:	4413      	add	r3, r2
 8011aa6:	b29b      	uxth	r3, r3
 8011aa8:	441a      	add	r2, r3
 8011aaa:	b212      	sxth	r2, r2
 8011aac:	4295      	cmp	r5, r2
 8011aae:	f8ad 300a 	strh.w	r3, [sp, #10]
 8011ab2:	dadc      	bge.n	8011a6e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 8011ab4:	1ae3      	subs	r3, r4, r3
 8011ab6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011aba:	e7d8      	b.n	8011a6e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 8011abc:	b004      	add	sp, #16
 8011abe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08011ac2 <_ZN8touchgfx6CircleD1Ev>:
 8011ac2:	4770      	bx	lr

08011ac4 <_ZN8touchgfx6CircleD0Ev>:
 8011ac4:	b510      	push	{r4, lr}
 8011ac6:	2148      	movs	r1, #72	@ 0x48
 8011ac8:	4604      	mov	r4, r0
 8011aca:	f017 f8b5 	bl	8028c38 <_ZdlPvj>
 8011ace:	4620      	mov	r0, r4
 8011ad0:	bd10      	pop	{r4, pc}

08011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011ad2:	b507      	push	{r0, r1, r2, lr}
 8011ad4:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8011ad8:	ab01      	add	r3, sp, #4
 8011ada:	6809      	ldr	r1, [r1, #0]
 8011adc:	6800      	ldr	r0, [r0, #0]
 8011ade:	f006 f8ff 	bl	8017ce0 <_ZN8touchgfx6muldivElllRl>
 8011ae2:	b003      	add	sp, #12
 8011ae4:	f85d fb04 	ldr.w	pc, [sp], #4

08011ae8 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011ae8:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8011aec:	fb90 f2f3 	sdiv	r2, r0, r3
 8011af0:	fb02 0013 	mls	r0, r2, r3, r0
 8011af4:	2800      	cmp	r0, #0
 8011af6:	bfb8      	it	lt
 8011af8:	18c0      	addlt	r0, r0, r3
 8011afa:	285a      	cmp	r0, #90	@ 0x5a
 8011afc:	4b09      	ldr	r3, [pc, #36]	@ (8011b24 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8011afe:	dc02      	bgt.n	8011b06 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8011b00:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011b04:	4770      	bx	lr
 8011b06:	28b4      	cmp	r0, #180	@ 0xb4
 8011b08:	dc02      	bgt.n	8011b10 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011b0a:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 8011b0e:	e7f7      	b.n	8011b00 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8011b10:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 8011b14:	bfd4      	ite	le
 8011b16:	38b4      	suble	r0, #180	@ 0xb4
 8011b18:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 8011b1c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011b20:	4240      	negs	r0, r0
 8011b22:	4770      	bx	lr
 8011b24:	0802d2a4 	.word	0x0802d2a4

08011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011b28:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8011b2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011b2e:	fb90 f2f3 	sdiv	r2, r0, r3
 8011b32:	fb02 0013 	mls	r0, r2, r3, r0
 8011b36:	2800      	cmp	r0, #0
 8011b38:	bfb8      	it	lt
 8011b3a:	18c0      	addlt	r0, r0, r3
 8011b3c:	1144      	asrs	r4, r0, #5
 8011b3e:	f000 061f 	and.w	r6, r0, #31
 8011b42:	4620      	mov	r0, r4
 8011b44:	f7ff ffd0 	bl	8011ae8 <_ZN8touchgfx7CWRUtil4sineEi>
 8011b48:	4605      	mov	r5, r0
 8011b4a:	b90e      	cbnz	r6, 8011b50 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011b4c:	b002      	add	sp, #8
 8011b4e:	bd70      	pop	{r4, r5, r6, pc}
 8011b50:	1c60      	adds	r0, r4, #1
 8011b52:	f7ff ffc9 	bl	8011ae8 <_ZN8touchgfx7CWRUtil4sineEi>
 8011b56:	ab01      	add	r3, sp, #4
 8011b58:	2220      	movs	r2, #32
 8011b5a:	4631      	mov	r1, r6
 8011b5c:	1b40      	subs	r0, r0, r5
 8011b5e:	f006 f8bf 	bl	8017ce0 <_ZN8touchgfx6muldivElllRl>
 8011b62:	4428      	add	r0, r5
 8011b64:	e7f2      	b.n	8011b4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8011b66:	b508      	push	{r3, lr}
 8011b68:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 8011b6c:	f7ff ffdc 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011b70:	bd08      	pop	{r3, pc}
	...

08011b74 <_ZN8touchgfx6CircleC1Ev>:
 8011b74:	b510      	push	{r4, lr}
 8011b76:	4604      	mov	r4, r0
 8011b78:	f000 fd0a 	bl	8012590 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011b7c:	4b08      	ldr	r3, [pc, #32]	@ (8011ba0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8011b7e:	6023      	str	r3, [r4, #0]
 8011b80:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 8011b84:	2300      	movs	r3, #0
 8011b86:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 8011b8a:	f24b 4205 	movw	r2, #46085	@ 0xb405
 8011b8e:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 8011b92:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 8011b96:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 8011b9a:	60a3      	str	r3, [r4, #8]
 8011b9c:	4620      	mov	r0, r4
 8011b9e:	bd10      	pop	{r4, pc}
 8011ba0:	0802d364 	.word	0x0802d364

08011ba4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8011ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ba8:	428a      	cmp	r2, r1
 8011baa:	4680      	mov	r8, r0
 8011bac:	4610      	mov	r0, r2
 8011bae:	4699      	mov	r9, r3
 8011bb0:	bfa6      	itte	ge
 8011bb2:	460a      	movge	r2, r1
 8011bb4:	4603      	movge	r3, r0
 8011bb6:	460b      	movlt	r3, r1
 8011bb8:	1a99      	subs	r1, r3, r2
 8011bba:	b085      	sub	sp, #20
 8011bbc:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 8011bc0:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 8011bc4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8011bc6:	bfa4      	itt	ge
 8011bc8:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 8011bcc:	2200      	movge	r2, #0
 8011bce:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 8011bd2:	9300      	str	r3, [sp, #0]
 8011bd4:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 8011bd8:	f102 0b01 	add.w	fp, r2, #1
 8011bdc:	2c00      	cmp	r4, #0
 8011bde:	f040 80af 	bne.w	8011d40 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8011be2:	4610      	mov	r0, r2
 8011be4:	9201      	str	r2, [sp, #4]
 8011be6:	f7ff ff9f 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011bea:	a903      	add	r1, sp, #12
 8011bec:	9003      	str	r0, [sp, #12]
 8011bee:	4650      	mov	r0, sl
 8011bf0:	f7ff ff6f 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011bf4:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8011bf8:	9a01      	ldr	r2, [sp, #4]
 8011bfa:	4408      	add	r0, r1
 8011bfc:	f8d9 1000 	ldr.w	r1, [r9]
 8011c00:	4281      	cmp	r1, r0
 8011c02:	bfc8      	it	gt
 8011c04:	f8c9 0000 	strgt.w	r0, [r9]
 8011c08:	6839      	ldr	r1, [r7, #0]
 8011c0a:	4288      	cmp	r0, r1
 8011c0c:	bfc8      	it	gt
 8011c0e:	6038      	strgt	r0, [r7, #0]
 8011c10:	4610      	mov	r0, r2
 8011c12:	f7ff ffa8 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011c16:	a903      	add	r1, sp, #12
 8011c18:	9003      	str	r0, [sp, #12]
 8011c1a:	4650      	mov	r0, sl
 8011c1c:	f7ff ff59 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011c20:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8011c24:	1a10      	subs	r0, r2, r0
 8011c26:	6832      	ldr	r2, [r6, #0]
 8011c28:	4282      	cmp	r2, r0
 8011c2a:	bfc8      	it	gt
 8011c2c:	6030      	strgt	r0, [r6, #0]
 8011c2e:	682a      	ldr	r2, [r5, #0]
 8011c30:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 8011c34:	4290      	cmp	r0, r2
 8011c36:	fb9b f2f1 	sdiv	r2, fp, r1
 8011c3a:	fb01 b212 	mls	r2, r1, r2, fp
 8011c3e:	eba1 0202 	sub.w	r2, r1, r2
 8011c42:	bfc8      	it	gt
 8011c44:	6028      	strgt	r0, [r5, #0]
 8011c46:	fb92 f0f1 	sdiv	r0, r2, r1
 8011c4a:	fb01 2210 	mls	r2, r1, r0, r2
 8011c4e:	4493      	add	fp, r2
 8011c50:	9b00      	ldr	r3, [sp, #0]
 8011c52:	455b      	cmp	r3, fp
 8011c54:	db2a      	blt.n	8011cac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8011c56:	4658      	mov	r0, fp
 8011c58:	f7ff ff66 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011c5c:	a903      	add	r1, sp, #12
 8011c5e:	9003      	str	r0, [sp, #12]
 8011c60:	4650      	mov	r0, sl
 8011c62:	f7ff ff36 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011c66:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8011c6a:	4410      	add	r0, r2
 8011c6c:	f8d9 2000 	ldr.w	r2, [r9]
 8011c70:	4282      	cmp	r2, r0
 8011c72:	bfc8      	it	gt
 8011c74:	f8c9 0000 	strgt.w	r0, [r9]
 8011c78:	683a      	ldr	r2, [r7, #0]
 8011c7a:	4290      	cmp	r0, r2
 8011c7c:	bfc8      	it	gt
 8011c7e:	6038      	strgt	r0, [r7, #0]
 8011c80:	4658      	mov	r0, fp
 8011c82:	f7ff ff70 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011c86:	a903      	add	r1, sp, #12
 8011c88:	9003      	str	r0, [sp, #12]
 8011c8a:	4650      	mov	r0, sl
 8011c8c:	f7ff ff21 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011c90:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8011c94:	1a10      	subs	r0, r2, r0
 8011c96:	6832      	ldr	r2, [r6, #0]
 8011c98:	4282      	cmp	r2, r0
 8011c9a:	bfc8      	it	gt
 8011c9c:	6030      	strgt	r0, [r6, #0]
 8011c9e:	682a      	ldr	r2, [r5, #0]
 8011ca0:	4290      	cmp	r0, r2
 8011ca2:	bfc8      	it	gt
 8011ca4:	6028      	strgt	r0, [r5, #0]
 8011ca6:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 8011caa:	e7d1      	b.n	8011c50 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8011cac:	9b00      	ldr	r3, [sp, #0]
 8011cae:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 8011cb2:	455b      	cmp	r3, fp
 8011cb4:	dd27      	ble.n	8011d06 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8011cb6:	4618      	mov	r0, r3
 8011cb8:	f7ff ff36 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011cbc:	a903      	add	r1, sp, #12
 8011cbe:	9003      	str	r0, [sp, #12]
 8011cc0:	4650      	mov	r0, sl
 8011cc2:	f7ff ff06 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011cc6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8011cca:	4410      	add	r0, r2
 8011ccc:	f8d9 2000 	ldr.w	r2, [r9]
 8011cd0:	4282      	cmp	r2, r0
 8011cd2:	bfc8      	it	gt
 8011cd4:	f8c9 0000 	strgt.w	r0, [r9]
 8011cd8:	683a      	ldr	r2, [r7, #0]
 8011cda:	4290      	cmp	r0, r2
 8011cdc:	bfc8      	it	gt
 8011cde:	6038      	strgt	r0, [r7, #0]
 8011ce0:	9800      	ldr	r0, [sp, #0]
 8011ce2:	f7ff ff40 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011ce6:	a903      	add	r1, sp, #12
 8011ce8:	9003      	str	r0, [sp, #12]
 8011cea:	4650      	mov	r0, sl
 8011cec:	f7ff fef1 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011cf0:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8011cf4:	1a10      	subs	r0, r2, r0
 8011cf6:	6832      	ldr	r2, [r6, #0]
 8011cf8:	4282      	cmp	r2, r0
 8011cfa:	bfc8      	it	gt
 8011cfc:	6030      	strgt	r0, [r6, #0]
 8011cfe:	682a      	ldr	r2, [r5, #0]
 8011d00:	4290      	cmp	r0, r2
 8011d02:	bfc8      	it	gt
 8011d04:	6028      	strgt	r0, [r5, #0]
 8011d06:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8011d0a:	f8d9 1000 	ldr.w	r1, [r9]
 8011d0e:	4291      	cmp	r1, r2
 8011d10:	bfc8      	it	gt
 8011d12:	f8c9 2000 	strgt.w	r2, [r9]
 8011d16:	683a      	ldr	r2, [r7, #0]
 8011d18:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 8011d1c:	429a      	cmp	r2, r3
 8011d1e:	bfb8      	it	lt
 8011d20:	603b      	strlt	r3, [r7, #0]
 8011d22:	6832      	ldr	r2, [r6, #0]
 8011d24:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8011d28:	429a      	cmp	r2, r3
 8011d2a:	bfc8      	it	gt
 8011d2c:	6033      	strgt	r3, [r6, #0]
 8011d2e:	682a      	ldr	r2, [r5, #0]
 8011d30:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8011d34:	429a      	cmp	r2, r3
 8011d36:	da00      	bge.n	8011d3a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8011d38:	602b      	str	r3, [r5, #0]
 8011d3a:	b005      	add	sp, #20
 8011d3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d40:	2002      	movs	r0, #2
 8011d42:	3401      	adds	r4, #1
 8011d44:	fb94 f4f0 	sdiv	r4, r4, r0
 8011d48:	4610      	mov	r0, r2
 8011d4a:	9201      	str	r2, [sp, #4]
 8011d4c:	f7ff feec 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011d50:	a903      	add	r1, sp, #12
 8011d52:	9003      	str	r0, [sp, #12]
 8011d54:	4650      	mov	r0, sl
 8011d56:	f7ff febc 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011d5a:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8011d5e:	9a01      	ldr	r2, [sp, #4]
 8011d60:	4408      	add	r0, r1
 8011d62:	f8d9 1000 	ldr.w	r1, [r9]
 8011d66:	1b03      	subs	r3, r0, r4
 8011d68:	4299      	cmp	r1, r3
 8011d6a:	bfc8      	it	gt
 8011d6c:	f8c9 3000 	strgt.w	r3, [r9]
 8011d70:	6839      	ldr	r1, [r7, #0]
 8011d72:	428b      	cmp	r3, r1
 8011d74:	bfc8      	it	gt
 8011d76:	603b      	strgt	r3, [r7, #0]
 8011d78:	f8d9 1000 	ldr.w	r1, [r9]
 8011d7c:	4420      	add	r0, r4
 8011d7e:	4281      	cmp	r1, r0
 8011d80:	bfc8      	it	gt
 8011d82:	f8c9 0000 	strgt.w	r0, [r9]
 8011d86:	6839      	ldr	r1, [r7, #0]
 8011d88:	4288      	cmp	r0, r1
 8011d8a:	bfc8      	it	gt
 8011d8c:	6038      	strgt	r0, [r7, #0]
 8011d8e:	4610      	mov	r0, r2
 8011d90:	f7ff fee9 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011d94:	a903      	add	r1, sp, #12
 8011d96:	9003      	str	r0, [sp, #12]
 8011d98:	4650      	mov	r0, sl
 8011d9a:	f7ff fe9a 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011d9e:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8011da2:	1a10      	subs	r0, r2, r0
 8011da4:	6832      	ldr	r2, [r6, #0]
 8011da6:	1b01      	subs	r1, r0, r4
 8011da8:	428a      	cmp	r2, r1
 8011daa:	bfc8      	it	gt
 8011dac:	6031      	strgt	r1, [r6, #0]
 8011dae:	682a      	ldr	r2, [r5, #0]
 8011db0:	4291      	cmp	r1, r2
 8011db2:	bfc8      	it	gt
 8011db4:	6029      	strgt	r1, [r5, #0]
 8011db6:	6832      	ldr	r2, [r6, #0]
 8011db8:	4420      	add	r0, r4
 8011dba:	4282      	cmp	r2, r0
 8011dbc:	bfc8      	it	gt
 8011dbe:	6030      	strgt	r0, [r6, #0]
 8011dc0:	682a      	ldr	r2, [r5, #0]
 8011dc2:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 8011dc6:	4290      	cmp	r0, r2
 8011dc8:	fb9b f2f1 	sdiv	r2, fp, r1
 8011dcc:	fb01 b212 	mls	r2, r1, r2, fp
 8011dd0:	eba1 0202 	sub.w	r2, r1, r2
 8011dd4:	bfc8      	it	gt
 8011dd6:	6028      	strgt	r0, [r5, #0]
 8011dd8:	fb92 f0f1 	sdiv	r0, r2, r1
 8011ddc:	fb01 2210 	mls	r2, r1, r0, r2
 8011de0:	4493      	add	fp, r2
 8011de2:	9b00      	ldr	r3, [sp, #0]
 8011de4:	455b      	cmp	r3, fp
 8011de6:	db40      	blt.n	8011e6a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8011de8:	4658      	mov	r0, fp
 8011dea:	f7ff fe9d 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011dee:	a903      	add	r1, sp, #12
 8011df0:	9003      	str	r0, [sp, #12]
 8011df2:	4650      	mov	r0, sl
 8011df4:	f7ff fe6d 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011df8:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8011dfc:	4410      	add	r0, r2
 8011dfe:	f8d9 2000 	ldr.w	r2, [r9]
 8011e02:	1b01      	subs	r1, r0, r4
 8011e04:	428a      	cmp	r2, r1
 8011e06:	bfc8      	it	gt
 8011e08:	f8c9 1000 	strgt.w	r1, [r9]
 8011e0c:	683a      	ldr	r2, [r7, #0]
 8011e0e:	4291      	cmp	r1, r2
 8011e10:	bfc8      	it	gt
 8011e12:	6039      	strgt	r1, [r7, #0]
 8011e14:	f8d9 2000 	ldr.w	r2, [r9]
 8011e18:	4420      	add	r0, r4
 8011e1a:	4282      	cmp	r2, r0
 8011e1c:	bfc8      	it	gt
 8011e1e:	f8c9 0000 	strgt.w	r0, [r9]
 8011e22:	683a      	ldr	r2, [r7, #0]
 8011e24:	4290      	cmp	r0, r2
 8011e26:	bfc8      	it	gt
 8011e28:	6038      	strgt	r0, [r7, #0]
 8011e2a:	4658      	mov	r0, fp
 8011e2c:	f7ff fe9b 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011e30:	a903      	add	r1, sp, #12
 8011e32:	9003      	str	r0, [sp, #12]
 8011e34:	4650      	mov	r0, sl
 8011e36:	f7ff fe4c 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011e3a:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8011e3e:	1a10      	subs	r0, r2, r0
 8011e40:	6832      	ldr	r2, [r6, #0]
 8011e42:	1b01      	subs	r1, r0, r4
 8011e44:	428a      	cmp	r2, r1
 8011e46:	bfc8      	it	gt
 8011e48:	6031      	strgt	r1, [r6, #0]
 8011e4a:	682a      	ldr	r2, [r5, #0]
 8011e4c:	4291      	cmp	r1, r2
 8011e4e:	bfc8      	it	gt
 8011e50:	6029      	strgt	r1, [r5, #0]
 8011e52:	6832      	ldr	r2, [r6, #0]
 8011e54:	4420      	add	r0, r4
 8011e56:	4282      	cmp	r2, r0
 8011e58:	bfc8      	it	gt
 8011e5a:	6030      	strgt	r0, [r6, #0]
 8011e5c:	682a      	ldr	r2, [r5, #0]
 8011e5e:	4290      	cmp	r0, r2
 8011e60:	bfc8      	it	gt
 8011e62:	6028      	strgt	r0, [r5, #0]
 8011e64:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 8011e68:	e7bb      	b.n	8011de2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8011e6a:	9b00      	ldr	r3, [sp, #0]
 8011e6c:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 8011e70:	455b      	cmp	r3, fp
 8011e72:	f77f af62 	ble.w	8011d3a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8011e76:	4618      	mov	r0, r3
 8011e78:	f7ff fe56 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8011e7c:	a903      	add	r1, sp, #12
 8011e7e:	9003      	str	r0, [sp, #12]
 8011e80:	4650      	mov	r0, sl
 8011e82:	f7ff fe26 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011e86:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8011e8a:	4410      	add	r0, r2
 8011e8c:	f8d9 2000 	ldr.w	r2, [r9]
 8011e90:	1b01      	subs	r1, r0, r4
 8011e92:	428a      	cmp	r2, r1
 8011e94:	bfc8      	it	gt
 8011e96:	f8c9 1000 	strgt.w	r1, [r9]
 8011e9a:	683a      	ldr	r2, [r7, #0]
 8011e9c:	4291      	cmp	r1, r2
 8011e9e:	bfc8      	it	gt
 8011ea0:	6039      	strgt	r1, [r7, #0]
 8011ea2:	f8d9 2000 	ldr.w	r2, [r9]
 8011ea6:	4420      	add	r0, r4
 8011ea8:	4282      	cmp	r2, r0
 8011eaa:	bfc8      	it	gt
 8011eac:	f8c9 0000 	strgt.w	r0, [r9]
 8011eb0:	683b      	ldr	r3, [r7, #0]
 8011eb2:	4298      	cmp	r0, r3
 8011eb4:	bfc8      	it	gt
 8011eb6:	6038      	strgt	r0, [r7, #0]
 8011eb8:	9800      	ldr	r0, [sp, #0]
 8011eba:	f7ff fe54 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8011ebe:	a903      	add	r1, sp, #12
 8011ec0:	9003      	str	r0, [sp, #12]
 8011ec2:	4650      	mov	r0, sl
 8011ec4:	f7ff fe05 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011ec8:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8011ecc:	6832      	ldr	r2, [r6, #0]
 8011ece:	1a18      	subs	r0, r3, r0
 8011ed0:	1b03      	subs	r3, r0, r4
 8011ed2:	429a      	cmp	r2, r3
 8011ed4:	bfc8      	it	gt
 8011ed6:	6033      	strgt	r3, [r6, #0]
 8011ed8:	682a      	ldr	r2, [r5, #0]
 8011eda:	4293      	cmp	r3, r2
 8011edc:	bfc8      	it	gt
 8011ede:	602b      	strgt	r3, [r5, #0]
 8011ee0:	6833      	ldr	r3, [r6, #0]
 8011ee2:	4404      	add	r4, r0
 8011ee4:	42a3      	cmp	r3, r4
 8011ee6:	bfc8      	it	gt
 8011ee8:	6034      	strgt	r4, [r6, #0]
 8011eea:	682b      	ldr	r3, [r5, #0]
 8011eec:	429c      	cmp	r4, r3
 8011eee:	bfc8      	it	gt
 8011ef0:	602c      	strgt	r4, [r5, #0]
 8011ef2:	e722      	b.n	8011d3a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08011ef4 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8011ef4:	b530      	push	{r4, r5, lr}
 8011ef6:	4604      	mov	r4, r0
 8011ef8:	4608      	mov	r0, r1
 8011efa:	4611      	mov	r1, r2
 8011efc:	461a      	mov	r2, r3
 8011efe:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011f02:	b089      	sub	sp, #36	@ 0x24
 8011f04:	015b      	lsls	r3, r3, #5
 8011f06:	9304      	str	r3, [sp, #16]
 8011f08:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011f0c:	2500      	movs	r5, #0
 8011f0e:	015b      	lsls	r3, r3, #5
 8011f10:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8011f14:	ab07      	add	r3, sp, #28
 8011f16:	9302      	str	r3, [sp, #8]
 8011f18:	ab06      	add	r3, sp, #24
 8011f1a:	9301      	str	r3, [sp, #4]
 8011f1c:	ab05      	add	r3, sp, #20
 8011f1e:	9300      	str	r3, [sp, #0]
 8011f20:	ab04      	add	r3, sp, #16
 8011f22:	9505      	str	r5, [sp, #20]
 8011f24:	f7ff fe3e 	bl	8011ba4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8011f28:	2520      	movs	r5, #32
 8011f2a:	9a04      	ldr	r2, [sp, #16]
 8011f2c:	9805      	ldr	r0, [sp, #20]
 8011f2e:	fb92 f2f5 	sdiv	r2, r2, r5
 8011f32:	fb90 f0f5 	sdiv	r0, r0, r5
 8011f36:	b292      	uxth	r2, r2
 8011f38:	3002      	adds	r0, #2
 8011f3a:	1a80      	subs	r0, r0, r2
 8011f3c:	9b06      	ldr	r3, [sp, #24]
 8011f3e:	9907      	ldr	r1, [sp, #28]
 8011f40:	fb93 f3f5 	sdiv	r3, r3, r5
 8011f44:	fb91 f1f5 	sdiv	r1, r1, r5
 8011f48:	b29b      	uxth	r3, r3
 8011f4a:	3102      	adds	r1, #2
 8011f4c:	1ac9      	subs	r1, r1, r3
 8011f4e:	3a01      	subs	r2, #1
 8011f50:	3b01      	subs	r3, #1
 8011f52:	80a0      	strh	r0, [r4, #4]
 8011f54:	4620      	mov	r0, r4
 8011f56:	8022      	strh	r2, [r4, #0]
 8011f58:	8063      	strh	r3, [r4, #2]
 8011f5a:	80e1      	strh	r1, [r4, #6]
 8011f5c:	b009      	add	sp, #36	@ 0x24
 8011f5e:	bd30      	pop	{r4, r5, pc}

08011f60 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8011f60:	b510      	push	{r4, lr}
 8011f62:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 8011f66:	4604      	mov	r4, r0
 8011f68:	f7ff ffc4 	bl	8011ef4 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8011f6c:	4620      	mov	r0, r4
 8011f6e:	bd10      	pop	{r4, pc}

08011f70 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8011f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f74:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 8011f78:	42b5      	cmp	r5, r6
 8011f7a:	bfa2      	ittt	ge
 8011f7c:	462b      	movge	r3, r5
 8011f7e:	4635      	movge	r5, r6
 8011f80:	461e      	movge	r6, r3
 8011f82:	1b73      	subs	r3, r6, r5
 8011f84:	468a      	mov	sl, r1
 8011f86:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 8011f88:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 8011f8c:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 8011f90:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 8011f92:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8011f96:	b0af      	sub	sp, #188	@ 0xbc
 8011f98:	f04f 0320 	mov.w	r3, #32
 8011f9c:	4604      	mov	r4, r0
 8011f9e:	bfa4      	itt	ge
 8011fa0:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 8011fa4:	2500      	movge	r5, #0
 8011fa6:	fb99 f9f3 	sdiv	r9, r9, r3
 8011faa:	fb9b fbf3 	sdiv	fp, fp, r3
 8011fae:	2900      	cmp	r1, #0
 8011fb0:	f000 80ff 	beq.w	80121b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 8011fb4:	f9ba 0000 	ldrsh.w	r0, [sl]
 8011fb8:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 8011fbc:	eba9 0700 	sub.w	r7, r9, r0
 8011fc0:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8011fc4:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8011fc8:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 8011fcc:	ebab 0803 	sub.w	r8, fp, r3
 8011fd0:	4407      	add	r7, r0
 8011fd2:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8011fd6:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8011fda:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 8011fde:	b23f      	sxth	r7, r7
 8011fe0:	4498      	add	r8, r3
 8011fe2:	eba9 0707 	sub.w	r7, r9, r7
 8011fe6:	fa0f f888 	sxth.w	r8, r8
 8011fea:	ebab 0808 	sub.w	r8, fp, r8
 8011fee:	2f00      	cmp	r7, #0
 8011ff0:	bfb8      	it	lt
 8011ff2:	427f      	neglt	r7, r7
 8011ff4:	f1b8 0f00 	cmp.w	r8, #0
 8011ff8:	bfb8      	it	lt
 8011ffa:	f1c8 0800 	rsblt	r8, r8, #0
 8011ffe:	45bc      	cmp	ip, r7
 8012000:	bfcc      	ite	gt
 8012002:	f10c 0701 	addgt.w	r7, ip, #1
 8012006:	3701      	addle	r7, #1
 8012008:	4540      	cmp	r0, r8
 801200a:	bfc8      	it	gt
 801200c:	f100 0801 	addgt.w	r8, r0, #1
 8012010:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 8012014:	f100 0001 	add.w	r0, r0, #1
 8012018:	ea4f 0060 	mov.w	r0, r0, asr #1
 801201c:	f04f 0302 	mov.w	r3, #2
 8012020:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 8012024:	fb91 f1f3 	sdiv	r1, r1, r3
 8012028:	eba2 0201 	sub.w	r2, r2, r1
 801202c:	bfd8      	it	le
 801202e:	f108 0801 	addle.w	r8, r8, #1
 8012032:	9303      	str	r3, [sp, #12]
 8012034:	920f      	str	r2, [sp, #60]	@ 0x3c
 8012036:	f7ff fd57 	bl	8011ae8 <_ZN8touchgfx7CWRUtil4sineEi>
 801203a:	a92e      	add	r1, sp, #184	@ 0xb8
 801203c:	fb08 f808 	mul.w	r8, r8, r8
 8012040:	f841 0d74 	str.w	r0, [r1, #-116]!
 8012044:	a80f      	add	r0, sp, #60	@ 0x3c
 8012046:	f7ff fd44 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801204a:	fb07 8707 	mla	r7, r7, r7, r8
 801204e:	f04f 0c20 	mov.w	ip, #32
 8012052:	fb90 f0fc 	sdiv	r0, r0, ip
 8012056:	4340      	muls	r0, r0
 8012058:	4287      	cmp	r7, r0
 801205a:	9b03      	ldr	r3, [sp, #12]
 801205c:	da04      	bge.n	8012068 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 801205e:	2401      	movs	r4, #1
 8012060:	4620      	mov	r0, r4
 8012062:	b02f      	add	sp, #188	@ 0xbc
 8012064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012068:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 801206a:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 801206c:	fb91 f2f3 	sdiv	r2, r1, r3
 8012070:	4402      	add	r2, r0
 8012072:	fb92 f2fc 	sdiv	r2, r2, ip
 8012076:	f9ba 1000 	ldrsh.w	r1, [sl]
 801207a:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 801207e:	440b      	add	r3, r1
 8012080:	b21b      	sxth	r3, r3
 8012082:	454b      	cmp	r3, r9
 8012084:	bfa8      	it	ge
 8012086:	464b      	movge	r3, r9
 8012088:	428b      	cmp	r3, r1
 801208a:	bfac      	ite	ge
 801208c:	eba9 0903 	subge.w	r9, r9, r3
 8012090:	eba9 0901 	sublt.w	r9, r9, r1
 8012094:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 8012098:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 801209c:	440b      	add	r3, r1
 801209e:	b21b      	sxth	r3, r3
 80120a0:	455b      	cmp	r3, fp
 80120a2:	bfa8      	it	ge
 80120a4:	465b      	movge	r3, fp
 80120a6:	428b      	cmp	r3, r1
 80120a8:	bfac      	ite	ge
 80120aa:	ebab 0b03 	subge.w	fp, fp, r3
 80120ae:	ebab 0b01 	sublt.w	fp, fp, r1
 80120b2:	3201      	adds	r2, #1
 80120b4:	fb0b fb0b 	mul.w	fp, fp, fp
 80120b8:	fb09 b909 	mla	r9, r9, r9, fp
 80120bc:	4352      	muls	r2, r2
 80120be:	4591      	cmp	r9, r2
 80120c0:	dccd      	bgt.n	801205e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80120c2:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 80120c6:	4621      	mov	r1, r4
 80120c8:	4648      	mov	r0, r9
 80120ca:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 80120cc:	f005 f9d4 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80120d0:	6823      	ldr	r3, [r4, #0]
 80120d2:	4620      	mov	r0, r4
 80120d4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80120d6:	4798      	blx	r3
 80120d8:	4653      	mov	r3, sl
 80120da:	9000      	str	r0, [sp, #0]
 80120dc:	464a      	mov	r2, r9
 80120de:	4639      	mov	r1, r7
 80120e0:	a811      	add	r0, sp, #68	@ 0x44
 80120e2:	f016 f927 	bl	8028334 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 80120e6:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 80120e8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80120ea:	920b      	str	r2, [sp, #44]	@ 0x2c
 80120ec:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80120f0:	930c      	str	r3, [sp, #48]	@ 0x30
 80120f2:	dd07      	ble.n	8012104 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 80120f4:	2102      	movs	r1, #2
 80120f6:	fb93 f3f1 	sdiv	r3, r3, r1
 80120fa:	4413      	add	r3, r2
 80120fc:	930c      	str	r3, [sp, #48]	@ 0x30
 80120fe:	fb93 f3f1 	sdiv	r3, r3, r1
 8012102:	930b      	str	r3, [sp, #44]	@ 0x2c
 8012104:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8012108:	4628      	mov	r0, r5
 801210a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801210e:	930d      	str	r3, [sp, #52]	@ 0x34
 8012110:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 8012114:	f7ff fd08 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012118:	4649      	mov	r1, r9
 801211a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801211c:	a80d      	add	r0, sp, #52	@ 0x34
 801211e:	f7ff fcd8 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012122:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012124:	f04f 0a02 	mov.w	sl, #2
 8012128:	fb90 f0fa 	sdiv	r0, r0, sl
 801212c:	eb00 0b03 	add.w	fp, r0, r3
 8012130:	4628      	mov	r0, r5
 8012132:	f7ff fd18 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012136:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 801213a:	017f      	lsls	r7, r7, #5
 801213c:	f848 0d80 	str.w	r0, [r8, #-128]!
 8012140:	a80d      	add	r0, sp, #52	@ 0x34
 8012142:	4641      	mov	r1, r8
 8012144:	f7ff fcc5 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012148:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 801214a:	fb90 f0fa 	sdiv	r0, r0, sl
 801214e:	4659      	mov	r1, fp
 8012150:	1a12      	subs	r2, r2, r0
 8012152:	a811      	add	r0, sp, #68	@ 0x44
 8012154:	f016 fa3a 	bl	80285cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012158:	f105 0a20 	add.w	sl, r5, #32
 801215c:	bb67      	cbnz	r7, 80121b8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 801215e:	46ab      	mov	fp, r5
 8012160:	45b2      	cmp	sl, r6
 8012162:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8012164:	dc33      	bgt.n	80121ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 8012166:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8012168:	4650      	mov	r0, sl
 801216a:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 801216e:	920d      	str	r2, [sp, #52]	@ 0x34
 8012170:	f7ff fcda 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012174:	4641      	mov	r1, r8
 8012176:	900e      	str	r0, [sp, #56]	@ 0x38
 8012178:	a80d      	add	r0, sp, #52	@ 0x34
 801217a:	f7ff fcaa 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801217e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8012180:	2302      	movs	r3, #2
 8012182:	fb90 f0f3 	sdiv	r0, r0, r3
 8012186:	eb00 0b02 	add.w	fp, r0, r2
 801218a:	4650      	mov	r0, sl
 801218c:	f7ff fceb 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012190:	4649      	mov	r1, r9
 8012192:	900f      	str	r0, [sp, #60]	@ 0x3c
 8012194:	a80d      	add	r0, sp, #52	@ 0x34
 8012196:	f7ff fc9c 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801219a:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 801219c:	2302      	movs	r3, #2
 801219e:	4659      	mov	r1, fp
 80121a0:	fb90 f0f3 	sdiv	r0, r0, r3
 80121a4:	1a12      	subs	r2, r2, r0
 80121a6:	a811      	add	r0, sp, #68	@ 0x44
 80121a8:	46d3      	mov	fp, sl
 80121aa:	f016 fa5c 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80121ae:	44ba      	add	sl, r7
 80121b0:	e7d6      	b.n	8012160 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 80121b2:	fb92 f2f3 	sdiv	r2, r2, r3
 80121b6:	e75e      	b.n	8012076 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 80121b8:	fb9a f2f7 	sdiv	r2, sl, r7
 80121bc:	fb07 a212 	mls	r2, r7, r2, sl
 80121c0:	1aba      	subs	r2, r7, r2
 80121c2:	fb92 f1f7 	sdiv	r1, r2, r7
 80121c6:	fb07 2211 	mls	r2, r7, r1, r2
 80121ca:	4492      	add	sl, r2
 80121cc:	e7c7      	b.n	801215e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 80121ce:	455e      	cmp	r6, fp
 80121d0:	dd23      	ble.n	801221a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 80121d2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80121d4:	4630      	mov	r0, r6
 80121d6:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80121da:	920d      	str	r2, [sp, #52]	@ 0x34
 80121dc:	f7ff fca4 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80121e0:	4641      	mov	r1, r8
 80121e2:	900e      	str	r0, [sp, #56]	@ 0x38
 80121e4:	a80d      	add	r0, sp, #52	@ 0x34
 80121e6:	f7ff fc74 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80121ea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80121ec:	f04f 0a02 	mov.w	sl, #2
 80121f0:	fb90 f0fa 	sdiv	r0, r0, sl
 80121f4:	4403      	add	r3, r0
 80121f6:	4630      	mov	r0, r6
 80121f8:	9303      	str	r3, [sp, #12]
 80121fa:	f7ff fcb4 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80121fe:	4649      	mov	r1, r9
 8012200:	900f      	str	r0, [sp, #60]	@ 0x3c
 8012202:	a80d      	add	r0, sp, #52	@ 0x34
 8012204:	f7ff fc65 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012208:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 801220a:	9b03      	ldr	r3, [sp, #12]
 801220c:	fb90 f0fa 	sdiv	r0, r0, sl
 8012210:	4619      	mov	r1, r3
 8012212:	1a12      	subs	r2, r2, r0
 8012214:	a811      	add	r0, sp, #68	@ 0x44
 8012216:	f016 fa26 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801221a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801221c:	b99b      	cbnz	r3, 8012246 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 801221e:	1b75      	subs	r5, r6, r5
 8012220:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 8012224:	da04      	bge.n	8012230 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 8012226:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 801222a:	a811      	add	r0, sp, #68	@ 0x44
 801222c:	f016 fa1b 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012230:	21ff      	movs	r1, #255	@ 0xff
 8012232:	a811      	add	r0, sp, #68	@ 0x44
 8012234:	f016 f912 	bl	802845c <_ZN8touchgfx6Canvas6renderEh>
 8012238:	4604      	mov	r4, r0
 801223a:	4b8a      	ldr	r3, [pc, #552]	@ (8012464 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 801223c:	9311      	str	r3, [sp, #68]	@ 0x44
 801223e:	a816      	add	r0, sp, #88	@ 0x58
 8012240:	f001 fc4e 	bl	8013ae0 <_ZN8touchgfx7OutlineD1Ev>
 8012244:	e70c      	b.n	8012060 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8012246:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 801224a:	429a      	cmp	r2, r3
 801224c:	f0c0 8107 	bcc.w	801245e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 8012250:	1b73      	subs	r3, r6, r5
 8012252:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 8012256:	9303      	str	r3, [sp, #12]
 8012258:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 801225c:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8012260:	da43      	bge.n	80122ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 8012262:	4630      	mov	r0, r6
 8012264:	f7ff fc60 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012268:	4649      	mov	r1, r9
 801226a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801226c:	a80b      	add	r0, sp, #44	@ 0x2c
 801226e:	f7ff fc30 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012272:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012274:	18c3      	adds	r3, r0, r3
 8012276:	4630      	mov	r0, r6
 8012278:	9305      	str	r3, [sp, #20]
 801227a:	f7ff fc74 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801227e:	4649      	mov	r1, r9
 8012280:	900f      	str	r0, [sp, #60]	@ 0x3c
 8012282:	a80b      	add	r0, sp, #44	@ 0x2c
 8012284:	f7ff fc25 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012288:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801228a:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 801228e:	1a1b      	subs	r3, r3, r0
 8012290:	9304      	str	r3, [sp, #16]
 8012292:	9206      	str	r2, [sp, #24]
 8012294:	eb06 030a 	add.w	r3, r6, sl
 8012298:	9a06      	ldr	r2, [sp, #24]
 801229a:	4293      	cmp	r3, r2
 801229c:	da25      	bge.n	80122ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 801229e:	4618      	mov	r0, r3
 80122a0:	9308      	str	r3, [sp, #32]
 80122a2:	f7ff fc41 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80122a6:	4649      	mov	r1, r9
 80122a8:	900f      	str	r0, [sp, #60]	@ 0x3c
 80122aa:	a80c      	add	r0, sp, #48	@ 0x30
 80122ac:	f7ff fc11 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80122b0:	9b05      	ldr	r3, [sp, #20]
 80122b2:	2202      	movs	r2, #2
 80122b4:	fb90 f0f2 	sdiv	r0, r0, r2
 80122b8:	18c3      	adds	r3, r0, r3
 80122ba:	9307      	str	r3, [sp, #28]
 80122bc:	9b08      	ldr	r3, [sp, #32]
 80122be:	9209      	str	r2, [sp, #36]	@ 0x24
 80122c0:	4618      	mov	r0, r3
 80122c2:	f7ff fc50 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80122c6:	a92e      	add	r1, sp, #184	@ 0xb8
 80122c8:	f841 0d80 	str.w	r0, [r1, #-128]!
 80122cc:	a80c      	add	r0, sp, #48	@ 0x30
 80122ce:	f7ff fc00 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80122d2:	9b04      	ldr	r3, [sp, #16]
 80122d4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80122d6:	9907      	ldr	r1, [sp, #28]
 80122d8:	fb90 f2f2 	sdiv	r2, r0, r2
 80122dc:	a811      	add	r0, sp, #68	@ 0x44
 80122de:	1a9a      	subs	r2, r3, r2
 80122e0:	f016 f9c1 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80122e4:	9b08      	ldr	r3, [sp, #32]
 80122e6:	4453      	add	r3, sl
 80122e8:	e7d6      	b.n	8012298 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 80122ea:	455e      	cmp	r6, fp
 80122ec:	dd25      	ble.n	801233a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 80122ee:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 80122f2:	4630      	mov	r0, r6
 80122f4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80122f8:	930d      	str	r3, [sp, #52]	@ 0x34
 80122fa:	f7ff fc15 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80122fe:	4641      	mov	r1, r8
 8012300:	900e      	str	r0, [sp, #56]	@ 0x38
 8012302:	a80d      	add	r0, sp, #52	@ 0x34
 8012304:	f7ff fbe5 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012308:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801230a:	2202      	movs	r2, #2
 801230c:	fb90 f0f2 	sdiv	r0, r0, r2
 8012310:	eb00 0903 	add.w	r9, r0, r3
 8012314:	4630      	mov	r0, r6
 8012316:	9204      	str	r2, [sp, #16]
 8012318:	f7ff fc25 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801231c:	a92e      	add	r1, sp, #184	@ 0xb8
 801231e:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8012322:	a80d      	add	r0, sp, #52	@ 0x34
 8012324:	f7ff fbd5 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012328:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801232a:	9a04      	ldr	r2, [sp, #16]
 801232c:	fb90 f2f2 	sdiv	r2, r0, r2
 8012330:	4649      	mov	r1, r9
 8012332:	1a9a      	subs	r2, r3, r2
 8012334:	a811      	add	r0, sp, #68	@ 0x44
 8012336:	f016 f996 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801233a:	46d9      	mov	r9, fp
 801233c:	2602      	movs	r6, #2
 801233e:	45a9      	cmp	r9, r5
 8012340:	db25      	blt.n	801238e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 8012342:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8012346:	4648      	mov	r0, r9
 8012348:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 801234c:	930d      	str	r3, [sp, #52]	@ 0x34
 801234e:	f7ff fbeb 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012352:	4641      	mov	r1, r8
 8012354:	900e      	str	r0, [sp, #56]	@ 0x38
 8012356:	a80d      	add	r0, sp, #52	@ 0x34
 8012358:	f7ff fbbb 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801235c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801235e:	fb90 f0f6 	sdiv	r0, r0, r6
 8012362:	eb00 0b03 	add.w	fp, r0, r3
 8012366:	4648      	mov	r0, r9
 8012368:	f7ff fbfd 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801236c:	a90f      	add	r1, sp, #60	@ 0x3c
 801236e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8012370:	a80d      	add	r0, sp, #52	@ 0x34
 8012372:	f7ff fbae 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012376:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8012378:	fb90 f0f6 	sdiv	r0, r0, r6
 801237c:	4659      	mov	r1, fp
 801237e:	1a12      	subs	r2, r2, r0
 8012380:	a811      	add	r0, sp, #68	@ 0x44
 8012382:	46cb      	mov	fp, r9
 8012384:	f016 f96f 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012388:	eba9 0907 	sub.w	r9, r9, r7
 801238c:	e7d7      	b.n	801233e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 801238e:	455d      	cmp	r5, fp
 8012390:	da22      	bge.n	80123d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 8012392:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8012396:	4628      	mov	r0, r5
 8012398:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 801239c:	930d      	str	r3, [sp, #52]	@ 0x34
 801239e:	f7ff fbc3 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80123a2:	4641      	mov	r1, r8
 80123a4:	900e      	str	r0, [sp, #56]	@ 0x38
 80123a6:	a80d      	add	r0, sp, #52	@ 0x34
 80123a8:	f7ff fb93 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80123ac:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80123ae:	2602      	movs	r6, #2
 80123b0:	fb90 f0f6 	sdiv	r0, r0, r6
 80123b4:	4407      	add	r7, r0
 80123b6:	4628      	mov	r0, r5
 80123b8:	f7ff fbd5 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80123bc:	a92e      	add	r1, sp, #184	@ 0xb8
 80123be:	f841 0d7c 	str.w	r0, [r1, #-124]!
 80123c2:	a80d      	add	r0, sp, #52	@ 0x34
 80123c4:	f7ff fb85 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80123c8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80123ca:	fb90 f0f6 	sdiv	r0, r0, r6
 80123ce:	4639      	mov	r1, r7
 80123d0:	1a12      	subs	r2, r2, r0
 80123d2:	a811      	add	r0, sp, #68	@ 0x44
 80123d4:	f016 f947 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80123d8:	9b03      	ldr	r3, [sp, #12]
 80123da:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 80123de:	f6bf af27 	bge.w	8012230 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 80123e2:	4628      	mov	r0, r5
 80123e4:	f7ff fba0 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80123e8:	ae2e      	add	r6, sp, #184	@ 0xb8
 80123ea:	f04f 0b02 	mov.w	fp, #2
 80123ee:	f846 0d7c 	str.w	r0, [r6, #-124]!
 80123f2:	a80b      	add	r0, sp, #44	@ 0x2c
 80123f4:	4631      	mov	r1, r6
 80123f6:	f7ff fb6c 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80123fa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80123fc:	eb00 0903 	add.w	r9, r0, r3
 8012400:	4628      	mov	r0, r5
 8012402:	f7ff fbb0 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012406:	4631      	mov	r1, r6
 8012408:	900f      	str	r0, [sp, #60]	@ 0x3c
 801240a:	a80b      	add	r0, sp, #44	@ 0x2c
 801240c:	f7ff fb61 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012410:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012412:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 8012416:	eba3 0800 	sub.w	r8, r3, r0
 801241a:	4454      	add	r4, sl
 801241c:	42a5      	cmp	r5, r4
 801241e:	f77f af07 	ble.w	8012230 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 8012422:	4620      	mov	r0, r4
 8012424:	f7ff fb80 	bl	8011b28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012428:	4631      	mov	r1, r6
 801242a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801242c:	a80c      	add	r0, sp, #48	@ 0x30
 801242e:	f7ff fb50 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012432:	fb90 f0fb 	sdiv	r0, r0, fp
 8012436:	eb00 0709 	add.w	r7, r0, r9
 801243a:	4620      	mov	r0, r4
 801243c:	f7ff fb93 	bl	8011b66 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012440:	a90e      	add	r1, sp, #56	@ 0x38
 8012442:	900e      	str	r0, [sp, #56]	@ 0x38
 8012444:	a80c      	add	r0, sp, #48	@ 0x30
 8012446:	f7ff fb44 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801244a:	4639      	mov	r1, r7
 801244c:	fb90 f2fb 	sdiv	r2, r0, fp
 8012450:	a811      	add	r0, sp, #68	@ 0x44
 8012452:	eba8 0202 	sub.w	r2, r8, r2
 8012456:	f016 f906 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801245a:	4454      	add	r4, sl
 801245c:	e7de      	b.n	801241c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 801245e:	2400      	movs	r4, #0
 8012460:	e6eb      	b.n	801223a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 8012462:	bf00      	nop
 8012464:	0802dbac 	.word	0x0802dbac

08012468 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8012468:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801246a:	6803      	ldr	r3, [r0, #0]
 801246c:	460d      	mov	r5, r1
 801246e:	4604      	mov	r4, r0
 8012470:	4601      	mov	r1, r0
 8012472:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8012474:	a802      	add	r0, sp, #8
 8012476:	4798      	blx	r3
 8012478:	6828      	ldr	r0, [r5, #0]
 801247a:	6869      	ldr	r1, [r5, #4]
 801247c:	466b      	mov	r3, sp
 801247e:	c303      	stmia	r3!, {r0, r1}
 8012480:	4668      	mov	r0, sp
 8012482:	4619      	mov	r1, r3
 8012484:	f7fc ffba 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 8012488:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 801248a:	b188      	cbz	r0, 80124b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801248c:	6803      	ldr	r3, [r0, #0]
 801248e:	1d21      	adds	r1, r4, #4
 8012490:	68db      	ldr	r3, [r3, #12]
 8012492:	4798      	blx	r3
 8012494:	b160      	cbz	r0, 80124b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8012496:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801249a:	2b00      	cmp	r3, #0
 801249c:	dd08      	ble.n	80124b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801249e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80124a2:	2d00      	cmp	r5, #0
 80124a4:	dd04      	ble.n	80124b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80124a6:	4a2b      	ldr	r2, [pc, #172]	@ (8012554 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80124a8:	7812      	ldrb	r2, [r2, #0]
 80124aa:	b11a      	cbz	r2, 80124b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80124ac:	2a01      	cmp	r2, #1
 80124ae:	d029      	beq.n	8012504 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80124b0:	b004      	add	sp, #16
 80124b2:	bd70      	pop	{r4, r5, r6, pc}
 80124b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80124b8:	441d      	add	r5, r3
 80124ba:	b2ad      	uxth	r5, r5
 80124bc:	b22e      	sxth	r6, r5
 80124be:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80124c2:	42b3      	cmp	r3, r6
 80124c4:	daf4      	bge.n	80124b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80124c6:	6823      	ldr	r3, [r4, #0]
 80124c8:	4669      	mov	r1, sp
 80124ca:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80124cc:	4620      	mov	r0, r4
 80124ce:	4798      	blx	r3
 80124d0:	b940      	cbnz	r0, 80124e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80124d2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80124d6:	2b01      	cmp	r3, #1
 80124d8:	d004      	beq.n	80124e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80124da:	3301      	adds	r3, #1
 80124dc:	105b      	asrs	r3, r3, #1
 80124de:	f8ad 3006 	strh.w	r3, [sp, #6]
 80124e2:	e7f0      	b.n	80124c6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80124e4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80124e8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80124ec:	4413      	add	r3, r2
 80124ee:	b29b      	uxth	r3, r3
 80124f0:	441a      	add	r2, r3
 80124f2:	b212      	sxth	r2, r2
 80124f4:	4296      	cmp	r6, r2
 80124f6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80124fa:	dae0      	bge.n	80124be <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80124fc:	1aeb      	subs	r3, r5, r3
 80124fe:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012502:	e7dc      	b.n	80124be <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012504:	f8bd 5000 	ldrh.w	r5, [sp]
 8012508:	441d      	add	r5, r3
 801250a:	b2ad      	uxth	r5, r5
 801250c:	b22e      	sxth	r6, r5
 801250e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8012512:	42b3      	cmp	r3, r6
 8012514:	dacc      	bge.n	80124b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8012516:	6823      	ldr	r3, [r4, #0]
 8012518:	4669      	mov	r1, sp
 801251a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 801251c:	4620      	mov	r0, r4
 801251e:	4798      	blx	r3
 8012520:	b940      	cbnz	r0, 8012534 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8012522:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8012526:	2b01      	cmp	r3, #1
 8012528:	d004      	beq.n	8012534 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801252a:	3301      	adds	r3, #1
 801252c:	105b      	asrs	r3, r3, #1
 801252e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012532:	e7f0      	b.n	8012516 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8012534:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8012538:	f8bd 3000 	ldrh.w	r3, [sp]
 801253c:	4413      	add	r3, r2
 801253e:	b29b      	uxth	r3, r3
 8012540:	441a      	add	r2, r3
 8012542:	b212      	sxth	r2, r2
 8012544:	4296      	cmp	r6, r2
 8012546:	f8ad 3000 	strh.w	r3, [sp]
 801254a:	dae0      	bge.n	801250e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 801254c:	1aeb      	subs	r3, r5, r3
 801254e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012552:	e7dc      	b.n	801250e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012554:	20013f58 	.word	0x20013f58

08012558 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8012558:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801255a:	6803      	ldr	r3, [r0, #0]
 801255c:	4604      	mov	r4, r0
 801255e:	4601      	mov	r1, r0
 8012560:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8012562:	4668      	mov	r0, sp
 8012564:	4798      	blx	r3
 8012566:	2100      	movs	r1, #0
 8012568:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801256c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012570:	9102      	str	r1, [sp, #8]
 8012572:	4668      	mov	r0, sp
 8012574:	a902      	add	r1, sp, #8
 8012576:	f8ad 200c 	strh.w	r2, [sp, #12]
 801257a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801257e:	f7fc ff3d 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 8012582:	6823      	ldr	r3, [r4, #0]
 8012584:	4669      	mov	r1, sp
 8012586:	691b      	ldr	r3, [r3, #16]
 8012588:	4620      	mov	r0, r4
 801258a:	4798      	blx	r3
 801258c:	b004      	add	sp, #16
 801258e:	bd10      	pop	{r4, pc}

08012590 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8012590:	2101      	movs	r1, #1
 8012592:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8012596:	490b      	ldr	r1, [pc, #44]	@ (80125c4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8012598:	6001      	str	r1, [r0, #0]
 801259a:	2200      	movs	r2, #0
 801259c:	21ff      	movs	r1, #255	@ 0xff
 801259e:	8082      	strh	r2, [r0, #4]
 80125a0:	80c2      	strh	r2, [r0, #6]
 80125a2:	8102      	strh	r2, [r0, #8]
 80125a4:	8142      	strh	r2, [r0, #10]
 80125a6:	8182      	strh	r2, [r0, #12]
 80125a8:	81c2      	strh	r2, [r0, #14]
 80125aa:	8202      	strh	r2, [r0, #16]
 80125ac:	8242      	strh	r2, [r0, #18]
 80125ae:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80125b2:	61c2      	str	r2, [r0, #28]
 80125b4:	8402      	strh	r2, [r0, #32]
 80125b6:	8442      	strh	r2, [r0, #34]	@ 0x22
 80125b8:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 80125bc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 80125c0:	6282      	str	r2, [r0, #40]	@ 0x28
 80125c2:	4770      	bx	lr
 80125c4:	0802d3dc 	.word	0x0802d3dc

080125c8 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80125c8:	f101 0364 	add.w	r3, r1, #100	@ 0x64
 80125cc:	4602      	mov	r2, r0
 80125ce:	cb03      	ldmia	r3!, {r0, r1}
 80125d0:	6010      	str	r0, [r2, #0]
 80125d2:	6051      	str	r1, [r2, #4]
 80125d4:	4610      	mov	r0, r2
 80125d6:	4770      	bx	lr

080125d8 <_ZN8touchgfx4LineD1Ev>:
 80125d8:	4770      	bx	lr

080125da <_ZN8touchgfx4LineD0Ev>:
 80125da:	b510      	push	{r4, lr}
 80125dc:	2170      	movs	r1, #112	@ 0x70
 80125de:	4604      	mov	r4, r0
 80125e0:	f016 fb2a 	bl	8028c38 <_ZdlPvj>
 80125e4:	4620      	mov	r0, r4
 80125e6:	bd10      	pop	{r4, pc}

080125e8 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 80125e8:	6800      	ldr	r0, [r0, #0]
 80125ea:	2800      	cmp	r0, #0
 80125ec:	bfb9      	ittee	lt
 80125ee:	2320      	movlt	r3, #32
 80125f0:	fb90 f0f3 	sdivlt	r0, r0, r3
 80125f4:	301f      	addge	r0, #31
 80125f6:	1140      	asrge	r0, r0, #5
 80125f8:	4770      	bx	lr

080125fa <_ZNK8touchgfx4Line17invalidateContentEv>:
 80125fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125fe:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
 8012602:	b089      	sub	sp, #36	@ 0x24
 8012604:	4604      	mov	r4, r0
 8012606:	b353      	cbz	r3, 801265e <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8012608:	6803      	ldr	r3, [r0, #0]
 801260a:	4601      	mov	r1, r0
 801260c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 801260e:	a802      	add	r0, sp, #8
 8012610:	4798      	blx	r3
 8012612:	2220      	movs	r2, #32
 8012614:	f8d4 a02c 	ldr.w	sl, [r4, #44]	@ 0x2c
 8012618:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801261a:	fb9a f0f2 	sdiv	r0, sl, r2
 801261e:	fb91 f5f2 	sdiv	r5, r1, r2
 8012622:	1b40      	subs	r0, r0, r5
 8012624:	2800      	cmp	r0, #0
 8012626:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8012628:	fb93 f6f2 	sdiv	r6, r3, r2
 801262c:	bfb8      	it	lt
 801262e:	4240      	neglt	r0, r0
 8012630:	0076      	lsls	r6, r6, #1
 8012632:	4286      	cmp	r6, r0
 8012634:	f8d4 b000 	ldr.w	fp, [r4]
 8012638:	dc0c      	bgt.n	8012654 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 801263a:	6b25      	ldr	r5, [r4, #48]	@ 0x30
 801263c:	f8d4 8038 	ldr.w	r8, [r4, #56]	@ 0x38
 8012640:	fb95 f0f2 	sdiv	r0, r5, r2
 8012644:	fb98 f7f2 	sdiv	r7, r8, r2
 8012648:	1bc0      	subs	r0, r0, r7
 801264a:	2800      	cmp	r0, #0
 801264c:	bfb8      	it	lt
 801264e:	4240      	neglt	r0, r0
 8012650:	4286      	cmp	r6, r0
 8012652:	dd07      	ble.n	8012664 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8012654:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012658:	a902      	add	r1, sp, #8
 801265a:	4620      	mov	r0, r4
 801265c:	4798      	blx	r3
 801265e:	b009      	add	sp, #36	@ 0x24
 8012660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012664:	3301      	adds	r3, #1
 8012666:	2002      	movs	r0, #2
 8012668:	f10d 0920 	add.w	r9, sp, #32
 801266c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012670:	4103      	asrs	r3, r0
 8012672:	f849 3d08 	str.w	r3, [r9, #-8]!
 8012676:	eb01 060a 	add.w	r6, r1, sl
 801267a:	eb08 0705 	add.w	r7, r8, r5
 801267e:	fb96 f6f0 	sdiv	r6, r6, r0
 8012682:	fb97 f7f0 	sdiv	r7, r7, r0
 8012686:	4648      	mov	r0, r9
 8012688:	9101      	str	r1, [sp, #4]
 801268a:	b236      	sxth	r6, r6
 801268c:	b23f      	sxth	r7, r7
 801268e:	fb96 f6f2 	sdiv	r6, r6, r2
 8012692:	fb97 f7f2 	sdiv	r7, r7, r2
 8012696:	f7ff ffa7 	bl	80125e8 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801269a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801269e:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80126a2:	9901      	ldr	r1, [sp, #4]
 80126a4:	4293      	cmp	r3, r2
 80126a6:	fa1f fe87 	uxth.w	lr, r7
 80126aa:	fa1f fc86 	uxth.w	ip, r6
 80126ae:	eba1 0a0a 	sub.w	sl, r1, sl
 80126b2:	b280      	uxth	r0, r0
 80126b4:	da54      	bge.n	8012760 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80126b6:	ebac 0100 	sub.w	r1, ip, r0
 80126ba:	b289      	uxth	r1, r1
 80126bc:	4460      	add	r0, ip
 80126be:	f1ba 0f00 	cmp.w	sl, #0
 80126c2:	b20e      	sxth	r6, r1
 80126c4:	b280      	uxth	r0, r0
 80126c6:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80126ca:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80126ce:	da29      	bge.n	8012724 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80126d0:	eba8 0505 	sub.w	r5, r8, r5
 80126d4:	2d00      	cmp	r5, #0
 80126d6:	da2a      	bge.n	801272e <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80126d8:	fa1f f88a 	uxth.w	r8, sl
 80126dc:	eba0 0008 	sub.w	r0, r0, r8
 80126e0:	fa1f f58c 	uxth.w	r5, ip
 80126e4:	4443      	add	r3, r8
 80126e6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80126ea:	1a59      	subs	r1, r3, r1
 80126ec:	ebae 0005 	sub.w	r0, lr, r5
 80126f0:	f8ad a010 	strh.w	sl, [sp, #16]
 80126f4:	f8ad c012 	strh.w	ip, [sp, #18]
 80126f8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80126fc:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012700:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012704:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012708:	442a      	add	r2, r5
 801270a:	eba2 0e0e 	sub.w	lr, r2, lr
 801270e:	f8ad e01e 	strh.w	lr, [sp, #30]
 8012712:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012716:	a904      	add	r1, sp, #16
 8012718:	4620      	mov	r0, r4
 801271a:	4798      	blx	r3
 801271c:	6823      	ldr	r3, [r4, #0]
 801271e:	4649      	mov	r1, r9
 8012720:	691b      	ldr	r3, [r3, #16]
 8012722:	e79a      	b.n	801265a <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8012724:	d003      	beq.n	801272e <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012726:	eba8 0505 	sub.w	r5, r8, r5
 801272a:	2d00      	cmp	r5, #0
 801272c:	dcd4      	bgt.n	80126d8 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 801272e:	fa1f f88a 	uxth.w	r8, sl
 8012732:	4443      	add	r3, r8
 8012734:	fa1f f58c 	uxth.w	r5, ip
 8012738:	1a59      	subs	r1, r3, r1
 801273a:	eba0 0008 	sub.w	r0, r0, r8
 801273e:	ebae 0305 	sub.w	r3, lr, r5
 8012742:	f8ad 6010 	strh.w	r6, [sp, #16]
 8012746:	f8ad c012 	strh.w	ip, [sp, #18]
 801274a:	f8ad 1014 	strh.w	r1, [sp, #20]
 801274e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012752:	f8ad a018 	strh.w	sl, [sp, #24]
 8012756:	f8ad 701a 	strh.w	r7, [sp, #26]
 801275a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801275e:	e7d3      	b.n	8012708 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8012760:	ebae 0100 	sub.w	r1, lr, r0
 8012764:	b289      	uxth	r1, r1
 8012766:	4470      	add	r0, lr
 8012768:	f1ba 0f00 	cmp.w	sl, #0
 801276c:	b20f      	sxth	r7, r1
 801276e:	b280      	uxth	r0, r0
 8012770:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8012774:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8012778:	da20      	bge.n	80127bc <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 801277a:	eba8 0505 	sub.w	r5, r8, r5
 801277e:	2d00      	cmp	r5, #0
 8012780:	da21      	bge.n	80127c6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012782:	fa1f f88e 	uxth.w	r8, lr
 8012786:	fa1f f58a 	uxth.w	r5, sl
 801278a:	4443      	add	r3, r8
 801278c:	442a      	add	r2, r5
 801278e:	f8ad e010 	strh.w	lr, [sp, #16]
 8012792:	1b40      	subs	r0, r0, r5
 8012794:	ebac 0e08 	sub.w	lr, ip, r8
 8012798:	1a51      	subs	r1, r2, r1
 801279a:	eba3 0c0c 	sub.w	ip, r3, ip
 801279e:	f8ad a012 	strh.w	sl, [sp, #18]
 80127a2:	f8ad e014 	strh.w	lr, [sp, #20]
 80127a6:	f8ad 0016 	strh.w	r0, [sp, #22]
 80127aa:	f8ad 6018 	strh.w	r6, [sp, #24]
 80127ae:	f8ad 701a 	strh.w	r7, [sp, #26]
 80127b2:	f8ad c01c 	strh.w	ip, [sp, #28]
 80127b6:	f8ad 101e 	strh.w	r1, [sp, #30]
 80127ba:	e7aa      	b.n	8012712 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80127bc:	d003      	beq.n	80127c6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80127be:	eba8 0505 	sub.w	r5, r8, r5
 80127c2:	2d00      	cmp	r5, #0
 80127c4:	dcdd      	bgt.n	8012782 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 80127c6:	fa1f f58e 	uxth.w	r5, lr
 80127ca:	fa1f f88a 	uxth.w	r8, sl
 80127ce:	4442      	add	r2, r8
 80127d0:	442b      	add	r3, r5
 80127d2:	f8ad 7012 	strh.w	r7, [sp, #18]
 80127d6:	1a51      	subs	r1, r2, r1
 80127d8:	ebac 0705 	sub.w	r7, ip, r5
 80127dc:	eba0 0008 	sub.w	r0, r0, r8
 80127e0:	eba3 0c0c 	sub.w	ip, r3, ip
 80127e4:	f8ad e010 	strh.w	lr, [sp, #16]
 80127e8:	f8ad 7014 	strh.w	r7, [sp, #20]
 80127ec:	f8ad 1016 	strh.w	r1, [sp, #22]
 80127f0:	f8ad 6018 	strh.w	r6, [sp, #24]
 80127f4:	f8ad a01a 	strh.w	sl, [sp, #26]
 80127f8:	f8ad c01c 	strh.w	ip, [sp, #28]
 80127fc:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012800:	e787      	b.n	8012712 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08012802 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8012802:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8012806:	bf2c      	ite	cs
 8012808:	f04f 4280 	movcs.w	r2, #1073741824	@ 0x40000000
 801280c:	f44f 4280 	movcc.w	r2, #16384	@ 0x4000
 8012810:	2300      	movs	r3, #0
 8012812:	1899      	adds	r1, r3, r2
 8012814:	4288      	cmp	r0, r1
 8012816:	bf24      	itt	cs
 8012818:	1853      	addcs	r3, r2, r1
 801281a:	1a40      	subcs	r0, r0, r1
 801281c:	0892      	lsrs	r2, r2, #2
 801281e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8012822:	d1f6      	bne.n	8012812 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8012824:	4618      	mov	r0, r3
 8012826:	4770      	bx	lr

08012828 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012828:	b510      	push	{r4, lr}
 801282a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801282e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8012832:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8012836:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801283a:	13a4      	asrs	r4, r4, #14
 801283c:	139b      	asrs	r3, r3, #14
 801283e:	429c      	cmp	r4, r3
 8012840:	bfb8      	it	lt
 8012842:	461c      	movlt	r4, r3
 8012844:	2c01      	cmp	r4, #1
 8012846:	dd07      	ble.n	8012858 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012848:	fb91 f1f4 	sdiv	r1, r1, r4
 801284c:	fb90 f0f4 	sdiv	r0, r0, r4
 8012850:	f7ff ffea 	bl	8012828 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012854:	4360      	muls	r0, r4
 8012856:	bd10      	pop	{r4, pc}
 8012858:	4340      	muls	r0, r0
 801285a:	fb01 0001 	mla	r0, r1, r1, r0
 801285e:	f7ff ffd0 	bl	8012802 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012862:	e7f8      	b.n	8012856 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08012864 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8012864:	2800      	cmp	r0, #0
 8012866:	b508      	push	{r3, lr}
 8012868:	da05      	bge.n	8012876 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801286a:	4240      	negs	r0, r0
 801286c:	f7ff fffa 	bl	8012864 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012870:	4240      	negs	r0, r0
 8012872:	b240      	sxtb	r0, r0
 8012874:	bd08      	pop	{r3, pc}
 8012876:	f5b0 6f80 	cmp.w	r0, #1024	@ 0x400
 801287a:	dc11      	bgt.n	80128a0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801287c:	f5b0 7f35 	cmp.w	r0, #724	@ 0x2d4
 8012880:	dd09      	ble.n	8012896 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8012882:	4340      	muls	r0, r0
 8012884:	f5c0 1080 	rsb	r0, r0, #1048576	@ 0x100000
 8012888:	f7ff ffbb 	bl	8012802 <_ZN8touchgfx7CWRUtil5isqrtEm>
 801288c:	f7ff ffea 	bl	8012864 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012890:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 8012894:	e7ed      	b.n	8012872 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8012896:	3003      	adds	r0, #3
 8012898:	10c0      	asrs	r0, r0, #3
 801289a:	4b02      	ldr	r3, [pc, #8]	@ (80128a4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 801289c:	5618      	ldrsb	r0, [r3, r0]
 801289e:	e7e9      	b.n	8012874 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80128a0:	2000      	movs	r0, #0
 80128a2:	e7e7      	b.n	8012874 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80128a4:	0802d44c 	.word	0x0802d44c

080128a8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 80128a8:	4281      	cmp	r1, r0
 80128aa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80128ac:	460c      	mov	r4, r1
 80128ae:	4615      	mov	r5, r2
 80128b0:	dd07      	ble.n	80128c2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80128b2:	4601      	mov	r1, r0
 80128b4:	4620      	mov	r0, r4
 80128b6:	f7ff fff7 	bl	80128a8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80128ba:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 80128be:	b003      	add	sp, #12
 80128c0:	bd30      	pop	{r4, r5, pc}
 80128c2:	f7ff ffb1 	bl	8012828 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80128c6:	6028      	str	r0, [r5, #0]
 80128c8:	2800      	cmp	r0, #0
 80128ca:	d0f8      	beq.n	80128be <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80128cc:	4602      	mov	r2, r0
 80128ce:	ab01      	add	r3, sp, #4
 80128d0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80128d4:	4620      	mov	r0, r4
 80128d6:	f005 fa03 	bl	8017ce0 <_ZN8touchgfx6muldivElllRl>
 80128da:	f7ff ffc3 	bl	8012864 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80128de:	e7ee      	b.n	80128be <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080128e0 <_ZN8touchgfx4LineC1Ev>:
 80128e0:	b510      	push	{r4, lr}
 80128e2:	4604      	mov	r4, r0
 80128e4:	f7ff fe54 	bl	8012590 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80128e8:	4b0c      	ldr	r3, [pc, #48]	@ (801291c <_ZN8touchgfx4LineC1Ev+0x3c>)
 80128ea:	6023      	str	r3, [r4, #0]
 80128ec:	2220      	movs	r2, #32
 80128ee:	2300      	movs	r3, #0
 80128f0:	63e2      	str	r2, [r4, #60]	@ 0x3c
 80128f2:	2212      	movs	r2, #18
 80128f4:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 80128f8:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 80128fc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8012900:	e9c4 3311 	strd	r3, r3, [r4, #68]	@ 0x44
 8012904:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
 8012908:	e9c4 3315 	strd	r3, r3, [r4, #84]	@ 0x54
 801290c:	e9c4 3317 	strd	r3, r3, [r4, #92]	@ 0x5c
 8012910:	e9c4 3319 	strd	r3, r3, [r4, #100]	@ 0x64
 8012914:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8012916:	60a3      	str	r3, [r4, #8]
 8012918:	4620      	mov	r0, r4
 801291a:	bd10      	pop	{r4, pc}
 801291c:	0802d4b0 	.word	0x0802d4b0

08012920 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8012920:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012924:	6b47      	ldr	r7, [r0, #52]	@ 0x34
 8012926:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012928:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 801292a:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 801292c:	1aff      	subs	r7, r7, r3
 801292e:	4604      	mov	r4, r0
 8012930:	eba5 0502 	sub.w	r5, r5, r2
 8012934:	d142      	bne.n	80129bc <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8012936:	b955      	cbnz	r5, 801294e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012938:	e9c0 3313 	strd	r3, r3, [r0, #76]	@ 0x4c
 801293c:	e9c0 3311 	strd	r3, r3, [r0, #68]	@ 0x44
 8012940:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8012944:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8012948:	b002      	add	sp, #8
 801294a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801294e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8012952:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8012956:	4629      	mov	r1, r5
 8012958:	4642      	mov	r2, r8
 801295a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 801295c:	f005 f9df 	bl	8017d1e <_ZN8touchgfx6muldivElll>
 8012960:	2502      	movs	r5, #2
 8012962:	4642      	mov	r2, r8
 8012964:	fb90 f6f5 	sdiv	r6, r0, r5
 8012968:	4639      	mov	r1, r7
 801296a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 801296c:	f005 f9d7 	bl	8017d1e <_ZN8touchgfx6muldivElll>
 8012970:	f894 9040 	ldrb.w	r9, [r4, #64]	@ 0x40
 8012974:	fb90 f5f5 	sdiv	r5, r0, r5
 8012978:	f1b9 0f00 	cmp.w	r9, #0
 801297c:	d067      	beq.n	8012a4e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801297e:	f1b9 0f02 	cmp.w	r9, #2
 8012982:	d878      	bhi.n	8012a76 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8012984:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8012986:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8012988:	1b93      	subs	r3, r2, r6
 801298a:	1b5b      	subs	r3, r3, r5
 801298c:	6463      	str	r3, [r4, #68]	@ 0x44
 801298e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012990:	18e9      	adds	r1, r5, r3
 8012992:	1b89      	subs	r1, r1, r6
 8012994:	6561      	str	r1, [r4, #84]	@ 0x54
 8012996:	1b81      	subs	r1, r0, r6
 8012998:	4429      	add	r1, r5
 801299a:	64a1      	str	r1, [r4, #72]	@ 0x48
 801299c:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 801299e:	4430      	add	r0, r6
 80129a0:	186f      	adds	r7, r5, r1
 80129a2:	4432      	add	r2, r6
 80129a4:	1b49      	subs	r1, r1, r5
 80129a6:	4437      	add	r7, r6
 80129a8:	4428      	add	r0, r5
 80129aa:	4431      	add	r1, r6
 80129ac:	1b52      	subs	r2, r2, r5
 80129ae:	1b5b      	subs	r3, r3, r5
 80129b0:	65a7      	str	r7, [r4, #88]	@ 0x58
 80129b2:	64e0      	str	r0, [r4, #76]	@ 0x4c
 80129b4:	65e1      	str	r1, [r4, #92]	@ 0x5c
 80129b6:	6522      	str	r2, [r4, #80]	@ 0x50
 80129b8:	1b9b      	subs	r3, r3, r6
 80129ba:	e05b      	b.n	8012a74 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80129bc:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80129c0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80129c4:	2d00      	cmp	r5, #0
 80129c6:	d0c6      	beq.n	8012956 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80129c8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80129cc:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80129d0:	fb93 f2f8 	sdiv	r2, r3, r8
 80129d4:	fb08 3312 	mls	r3, r8, r2, r3
 80129d8:	b353      	cbz	r3, 8012a30 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80129da:	fb98 f2f3 	sdiv	r2, r8, r3
 80129de:	fb03 8812 	mls	r8, r3, r2, r8
 80129e2:	f1b8 0f00 	cmp.w	r8, #0
 80129e6:	d1f3      	bne.n	80129d0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80129e8:	2b01      	cmp	r3, #1
 80129ea:	bf1c      	itt	ne
 80129ec:	fb95 f5f3 	sdivne	r5, r5, r3
 80129f0:	fb97 f7f3 	sdivne	r7, r7, r3
 80129f4:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80129f8:	f24b 5104 	movw	r1, #46340	@ 0xb504
 80129fc:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012a00:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8012a04:	428b      	cmp	r3, r1
 8012a06:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8012a0a:	4608      	mov	r0, r1
 8012a0c:	dd01      	ble.n	8012a12 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8012a0e:	428a      	cmp	r2, r1
 8012a10:	dc10      	bgt.n	8012a34 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8012a12:	fb90 f3f3 	sdiv	r3, r0, r3
 8012a16:	fb90 f2f2 	sdiv	r2, r0, r2
 8012a1a:	4293      	cmp	r3, r2
 8012a1c:	bfa8      	it	ge
 8012a1e:	4613      	movge	r3, r2
 8012a20:	435f      	muls	r7, r3
 8012a22:	435d      	muls	r5, r3
 8012a24:	4629      	mov	r1, r5
 8012a26:	4638      	mov	r0, r7
 8012a28:	f7ff fefe 	bl	8012828 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012a2c:	4680      	mov	r8, r0
 8012a2e:	e792      	b.n	8012956 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012a30:	4643      	mov	r3, r8
 8012a32:	e7d9      	b.n	80129e8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8012a34:	fb93 f3f1 	sdiv	r3, r3, r1
 8012a38:	fb92 f2f1 	sdiv	r2, r2, r1
 8012a3c:	4293      	cmp	r3, r2
 8012a3e:	bfcc      	ite	gt
 8012a40:	3301      	addgt	r3, #1
 8012a42:	1c53      	addle	r3, r2, #1
 8012a44:	fb97 f7f3 	sdiv	r7, r7, r3
 8012a48:	fb95 f5f3 	sdiv	r5, r5, r3
 8012a4c:	e7ea      	b.n	8012a24 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012a4e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8012a50:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8012a52:	1b93      	subs	r3, r2, r6
 8012a54:	6463      	str	r3, [r4, #68]	@ 0x44
 8012a56:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012a58:	18e9      	adds	r1, r5, r3
 8012a5a:	6561      	str	r1, [r4, #84]	@ 0x54
 8012a5c:	1b81      	subs	r1, r0, r6
 8012a5e:	64a1      	str	r1, [r4, #72]	@ 0x48
 8012a60:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8012a62:	4430      	add	r0, r6
 8012a64:	186f      	adds	r7, r5, r1
 8012a66:	4432      	add	r2, r6
 8012a68:	1b49      	subs	r1, r1, r5
 8012a6a:	65a7      	str	r7, [r4, #88]	@ 0x58
 8012a6c:	64e0      	str	r0, [r4, #76]	@ 0x4c
 8012a6e:	65e1      	str	r1, [r4, #92]	@ 0x5c
 8012a70:	6522      	str	r2, [r4, #80]	@ 0x50
 8012a72:	1b5b      	subs	r3, r3, r5
 8012a74:	6623      	str	r3, [r4, #96]	@ 0x60
 8012a76:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8012a78:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8012a7a:	9200      	str	r2, [sp, #0]
 8012a7c:	9301      	str	r3, [sp, #4]
 8012a7e:	f104 0148 	add.w	r1, r4, #72	@ 0x48
 8012a82:	f104 0c54 	add.w	ip, r4, #84	@ 0x54
 8012a86:	680f      	ldr	r7, [r1, #0]
 8012a88:	9800      	ldr	r0, [sp, #0]
 8012a8a:	42ba      	cmp	r2, r7
 8012a8c:	bfa8      	it	ge
 8012a8e:	463a      	movge	r2, r7
 8012a90:	4287      	cmp	r7, r0
 8012a92:	bfc8      	it	gt
 8012a94:	9700      	strgt	r7, [sp, #0]
 8012a96:	690f      	ldr	r7, [r1, #16]
 8012a98:	9801      	ldr	r0, [sp, #4]
 8012a9a:	42bb      	cmp	r3, r7
 8012a9c:	bfa8      	it	ge
 8012a9e:	463b      	movge	r3, r7
 8012aa0:	3104      	adds	r1, #4
 8012aa2:	4287      	cmp	r7, r0
 8012aa4:	bfc8      	it	gt
 8012aa6:	9701      	strgt	r7, [sp, #4]
 8012aa8:	458c      	cmp	ip, r1
 8012aaa:	d1ec      	bne.n	8012a86 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012aac:	4668      	mov	r0, sp
 8012aae:	2720      	movs	r7, #32
 8012ab0:	fb92 f8f7 	sdiv	r8, r2, r7
 8012ab4:	fb93 f7f7 	sdiv	r7, r3, r7
 8012ab8:	f7ff fd96 	bl	80125e8 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012abc:	4682      	mov	sl, r0
 8012abe:	a801      	add	r0, sp, #4
 8012ac0:	f7ff fd92 	bl	80125e8 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012ac4:	ebaa 0208 	sub.w	r2, sl, r8
 8012ac8:	1bc0      	subs	r0, r0, r7
 8012aca:	f1b9 0f01 	cmp.w	r9, #1
 8012ace:	f8a4 8064 	strh.w	r8, [r4, #100]	@ 0x64
 8012ad2:	f8a4 7066 	strh.w	r7, [r4, #102]	@ 0x66
 8012ad6:	f8a4 2068 	strh.w	r2, [r4, #104]	@ 0x68
 8012ada:	f8a4 006a 	strh.w	r0, [r4, #106]	@ 0x6a
 8012ade:	f47f af33 	bne.w	8012948 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012ae2:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8012ae4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8012ae6:	1b83      	subs	r3, r0, r6
 8012ae8:	6463      	str	r3, [r4, #68]	@ 0x44
 8012aea:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012aec:	18ea      	adds	r2, r5, r3
 8012aee:	6562      	str	r2, [r4, #84]	@ 0x54
 8012af0:	1b8a      	subs	r2, r1, r6
 8012af2:	64a2      	str	r2, [r4, #72]	@ 0x48
 8012af4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8012af6:	4431      	add	r1, r6
 8012af8:	18af      	adds	r7, r5, r2
 8012afa:	4406      	add	r6, r0
 8012afc:	1b52      	subs	r2, r2, r5
 8012afe:	1b5d      	subs	r5, r3, r5
 8012b00:	65a7      	str	r7, [r4, #88]	@ 0x58
 8012b02:	64e1      	str	r1, [r4, #76]	@ 0x4c
 8012b04:	65e2      	str	r2, [r4, #92]	@ 0x5c
 8012b06:	6526      	str	r6, [r4, #80]	@ 0x50
 8012b08:	6625      	str	r5, [r4, #96]	@ 0x60
 8012b0a:	e71d      	b.n	8012948 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08012b0c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8012b0c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012b0e:	428b      	cmp	r3, r1
 8012b10:	d102      	bne.n	8012b18 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8012b12:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8012b14:	4293      	cmp	r3, r2
 8012b16:	d003      	beq.n	8012b20 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012b18:	e9c0 120b 	strd	r1, r2, [r0, #44]	@ 0x2c
 8012b1c:	f7ff bf00 	b.w	8012920 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012b20:	4770      	bx	lr

08012b22 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8012b22:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8012b24:	428b      	cmp	r3, r1
 8012b26:	d102      	bne.n	8012b2e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012b28:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8012b2a:	4293      	cmp	r3, r2
 8012b2c:	d003      	beq.n	8012b36 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8012b2e:	e9c0 120d 	strd	r1, r2, [r0, #52]	@ 0x34
 8012b32:	f7ff bef5 	b.w	8012920 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012b36:	4770      	bx	lr

08012b38 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012b38:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
 8012b3c:	f7ff bef0 	b.w	8012920 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012b40 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012b40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b44:	4604      	mov	r4, r0
 8012b46:	b0a4      	sub	sp, #144	@ 0x90
 8012b48:	6a85      	ldr	r5, [r0, #40]	@ 0x28
 8012b4a:	460e      	mov	r6, r1
 8012b4c:	4601      	mov	r1, r0
 8012b4e:	a805      	add	r0, sp, #20
 8012b50:	f004 fc92 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012b54:	6823      	ldr	r3, [r4, #0]
 8012b56:	4620      	mov	r0, r4
 8012b58:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8012b5a:	4798      	blx	r3
 8012b5c:	4633      	mov	r3, r6
 8012b5e:	9000      	str	r0, [sp, #0]
 8012b60:	aa05      	add	r2, sp, #20
 8012b62:	4629      	mov	r1, r5
 8012b64:	a807      	add	r0, sp, #28
 8012b66:	f015 fbe5 	bl	8028334 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8012b6a:	2300      	movs	r3, #0
 8012b6c:	9303      	str	r3, [sp, #12]
 8012b6e:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8012b72:	2b01      	cmp	r3, #1
 8012b74:	d17c      	bne.n	8012c70 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x130>
 8012b76:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8012b78:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012b7a:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 8012b7c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8012b7e:	1ac0      	subs	r0, r0, r3
 8012b80:	eba1 0102 	sub.w	r1, r1, r2
 8012b84:	d437      	bmi.n	8012bf6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb6>
 8012b86:	2900      	cmp	r1, #0
 8012b88:	aa03      	add	r2, sp, #12
 8012b8a:	db2e      	blt.n	8012bea <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xaa>
 8012b8c:	f7ff fe8c 	bl	80128a8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012b90:	f100 065a 	add.w	r6, r0, #90	@ 0x5a
 8012b94:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8012b96:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8012b98:	a807      	add	r0, sp, #28
 8012b9a:	f015 fd17 	bl	80285cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012b9e:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8012ba0:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8012ba2:	a807      	add	r0, sp, #28
 8012ba4:	f015 fd5f 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012ba8:	6ee5      	ldr	r5, [r4, #108]	@ 0x6c
 8012baa:	2db3      	cmp	r5, #179	@ 0xb3
 8012bac:	dc33      	bgt.n	8012c16 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd6>
 8012bae:	eba6 0805 	sub.w	r8, r6, r5
 8012bb2:	4640      	mov	r0, r8
 8012bb4:	f7fe ff98 	bl	8011ae8 <_ZN8touchgfx7CWRUtil4sineEi>
 8012bb8:	a904      	add	r1, sp, #16
 8012bba:	9004      	str	r0, [sp, #16]
 8012bbc:	a803      	add	r0, sp, #12
 8012bbe:	f7fe ff88 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012bc2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8012bc4:	1847      	adds	r7, r0, r1
 8012bc6:	f1c8 005a 	rsb	r0, r8, #90	@ 0x5a
 8012bca:	f7fe ff8d 	bl	8011ae8 <_ZN8touchgfx7CWRUtil4sineEi>
 8012bce:	a905      	add	r1, sp, #20
 8012bd0:	9005      	str	r0, [sp, #20]
 8012bd2:	a803      	add	r0, sp, #12
 8012bd4:	f7fe ff7d 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012bd8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8012bda:	4639      	mov	r1, r7
 8012bdc:	1a12      	subs	r2, r2, r0
 8012bde:	a807      	add	r0, sp, #28
 8012be0:	f015 fd41 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012be4:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8012be6:	441d      	add	r5, r3
 8012be8:	e7df      	b.n	8012baa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x6a>
 8012bea:	4249      	negs	r1, r1
 8012bec:	f7ff fe5c 	bl	80128a8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012bf0:	f1c0 065a 	rsb	r6, r0, #90	@ 0x5a
 8012bf4:	e7ce      	b.n	8012b94 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x54>
 8012bf6:	2900      	cmp	r1, #0
 8012bf8:	f1c0 0000 	rsb	r0, r0, #0
 8012bfc:	aa03      	add	r2, sp, #12
 8012bfe:	db04      	blt.n	8012c0a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xca>
 8012c00:	f7ff fe52 	bl	80128a8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012c04:	f5c0 7687 	rsb	r6, r0, #270	@ 0x10e
 8012c08:	e7c4      	b.n	8012b94 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x54>
 8012c0a:	4249      	negs	r1, r1
 8012c0c:	f7ff fe4c 	bl	80128a8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012c10:	f500 7687 	add.w	r6, r0, #270	@ 0x10e
 8012c14:	e7be      	b.n	8012b94 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x54>
 8012c16:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8012c18:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 8012c1a:	a807      	add	r0, sp, #28
 8012c1c:	f015 fd23 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012c20:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 8012c22:	6d21      	ldr	r1, [r4, #80]	@ 0x50
 8012c24:	a807      	add	r0, sp, #28
 8012c26:	f015 fd1e 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012c2a:	6ee5      	ldr	r5, [r4, #108]	@ 0x6c
 8012c2c:	f1c5 05b4 	rsb	r5, r5, #180	@ 0xb4
 8012c30:	2d00      	cmp	r5, #0
 8012c32:	dd31      	ble.n	8012c98 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x158>
 8012c34:	eb05 0806 	add.w	r8, r5, r6
 8012c38:	4640      	mov	r0, r8
 8012c3a:	f7fe ff55 	bl	8011ae8 <_ZN8touchgfx7CWRUtil4sineEi>
 8012c3e:	a904      	add	r1, sp, #16
 8012c40:	9004      	str	r0, [sp, #16]
 8012c42:	a803      	add	r0, sp, #12
 8012c44:	f7fe ff45 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012c48:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8012c4a:	1847      	adds	r7, r0, r1
 8012c4c:	f1c8 005a 	rsb	r0, r8, #90	@ 0x5a
 8012c50:	f7fe ff4a 	bl	8011ae8 <_ZN8touchgfx7CWRUtil4sineEi>
 8012c54:	a905      	add	r1, sp, #20
 8012c56:	9005      	str	r0, [sp, #20]
 8012c58:	a803      	add	r0, sp, #12
 8012c5a:	f7fe ff3a 	bl	8011ad2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012c5e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8012c60:	4639      	mov	r1, r7
 8012c62:	1a12      	subs	r2, r2, r0
 8012c64:	a807      	add	r0, sp, #28
 8012c66:	f015 fcfe 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012c6a:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8012c6c:	1aed      	subs	r5, r5, r3
 8012c6e:	e7df      	b.n	8012c30 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xf0>
 8012c70:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8012c72:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8012c74:	a807      	add	r0, sp, #28
 8012c76:	f015 fca9 	bl	80285cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012c7a:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8012c7c:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8012c7e:	a807      	add	r0, sp, #28
 8012c80:	f015 fcf1 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012c84:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8012c86:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 8012c88:	a807      	add	r0, sp, #28
 8012c8a:	f015 fcec 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012c8e:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 8012c90:	6d21      	ldr	r1, [r4, #80]	@ 0x50
 8012c92:	a807      	add	r0, sp, #28
 8012c94:	f015 fce7 	bl	8028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012c98:	21ff      	movs	r1, #255	@ 0xff
 8012c9a:	a807      	add	r0, sp, #28
 8012c9c:	f015 fbde 	bl	802845c <_ZN8touchgfx6Canvas6renderEh>
 8012ca0:	4b04      	ldr	r3, [pc, #16]	@ (8012cb4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x174>)
 8012ca2:	9307      	str	r3, [sp, #28]
 8012ca4:	4604      	mov	r4, r0
 8012ca6:	a80c      	add	r0, sp, #48	@ 0x30
 8012ca8:	f000 ff1a 	bl	8013ae0 <_ZN8touchgfx7OutlineD1Ev>
 8012cac:	4620      	mov	r0, r4
 8012cae:	b024      	add	sp, #144	@ 0x90
 8012cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012cb4:	0802dbac 	.word	0x0802dbac

08012cb8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012cb8:	2000      	movs	r0, #0
 8012cba:	4770      	bx	lr

08012cbc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8012cbc:	4b07      	ldr	r3, [pc, #28]	@ (8012cdc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8012cbe:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8012cc0:	881b      	ldrh	r3, [r3, #0]
 8012cc2:	4293      	cmp	r3, r2
 8012cc4:	bf81      	itttt	hi
 8012cc6:	4b06      	ldrhi	r3, [pc, #24]	@ (8012ce0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012cc8:	681b      	ldrhi	r3, [r3, #0]
 8012cca:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8012cce:	7858      	ldrbhi	r0, [r3, #1]
 8012cd0:	bf8c      	ite	hi
 8012cd2:	f000 0003 	andhi.w	r0, r0, #3
 8012cd6:	2000      	movls	r0, #0
 8012cd8:	4770      	bx	lr
 8012cda:	bf00      	nop
 8012cdc:	20013fbc 	.word	0x20013fbc
 8012ce0:	20013fb8 	.word	0x20013fb8

08012ce4 <_ZN8touchgfx8TextAreaD1Ev>:
 8012ce4:	4770      	bx	lr
	...

08012ce8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012cec:	4b10      	ldr	r3, [pc, #64]	@ (8012d30 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8012cee:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8012cf0:	881b      	ldrh	r3, [r3, #0]
 8012cf2:	428b      	cmp	r3, r1
 8012cf4:	4604      	mov	r4, r0
 8012cf6:	d918      	bls.n	8012d2a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012cf8:	6803      	ldr	r3, [r0, #0]
 8012cfa:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 8012cfc:	4b0d      	ldr	r3, [pc, #52]	@ (8012d34 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8012cfe:	6818      	ldr	r0, [r3, #0]
 8012d00:	f7f4 fb96 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8012d04:	6823      	ldr	r3, [r4, #0]
 8012d06:	4606      	mov	r6, r0
 8012d08:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8012d0a:	4620      	mov	r0, r4
 8012d0c:	4798      	blx	r3
 8012d0e:	6823      	ldr	r3, [r4, #0]
 8012d10:	4607      	mov	r7, r0
 8012d12:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8012d16:	4620      	mov	r0, r4
 8012d18:	4798      	blx	r3
 8012d1a:	463a      	mov	r2, r7
 8012d1c:	4603      	mov	r3, r0
 8012d1e:	4631      	mov	r1, r6
 8012d20:	4620      	mov	r0, r4
 8012d22:	46ac      	mov	ip, r5
 8012d24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012d28:	4760      	bx	ip
 8012d2a:	2000      	movs	r0, #0
 8012d2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012d30:	20013fbc 	.word	0x20013fbc
 8012d34:	20013fc4 	.word	0x20013fc4

08012d38 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012d38:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012d3c:	4b17      	ldr	r3, [pc, #92]	@ (8012d9c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8012d3e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8012d40:	881b      	ldrh	r3, [r3, #0]
 8012d42:	428b      	cmp	r3, r1
 8012d44:	4604      	mov	r4, r0
 8012d46:	d926      	bls.n	8012d96 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012d48:	4b15      	ldr	r3, [pc, #84]	@ (8012da0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8012d4a:	681b      	ldr	r3, [r3, #0]
 8012d4c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012d50:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8012d54:	4b13      	ldr	r3, [pc, #76]	@ (8012da4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8012d56:	7855      	ldrb	r5, [r2, #1]
 8012d58:	681b      	ldr	r3, [r3, #0]
 8012d5a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8012d5e:	6833      	ldr	r3, [r6, #0]
 8012d60:	69df      	ldr	r7, [r3, #28]
 8012d62:	4b11      	ldr	r3, [pc, #68]	@ (8012da8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8012d64:	6818      	ldr	r0, [r3, #0]
 8012d66:	f7f4 fb63 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8012d6a:	6823      	ldr	r3, [r4, #0]
 8012d6c:	4680      	mov	r8, r0
 8012d6e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8012d70:	4620      	mov	r0, r4
 8012d72:	4798      	blx	r3
 8012d74:	6823      	ldr	r3, [r4, #0]
 8012d76:	4681      	mov	r9, r0
 8012d78:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8012d7c:	4620      	mov	r0, r4
 8012d7e:	4798      	blx	r3
 8012d80:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8012d84:	9000      	str	r0, [sp, #0]
 8012d86:	464b      	mov	r3, r9
 8012d88:	4642      	mov	r2, r8
 8012d8a:	4629      	mov	r1, r5
 8012d8c:	4630      	mov	r0, r6
 8012d8e:	47b8      	blx	r7
 8012d90:	b003      	add	sp, #12
 8012d92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012d96:	2000      	movs	r0, #0
 8012d98:	e7fa      	b.n	8012d90 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8012d9a:	bf00      	nop
 8012d9c:	20013fbc 	.word	0x20013fbc
 8012da0:	20013fb8 	.word	0x20013fb8
 8012da4:	20013fc0 	.word	0x20013fc0
 8012da8:	20013fc4 	.word	0x20013fc4

08012dac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8012dac:	b40e      	push	{r1, r2, r3}
 8012dae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012db2:	4b2f      	ldr	r3, [pc, #188]	@ (8012e70 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8012db4:	881a      	ldrh	r2, [r3, #0]
 8012db6:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8012db8:	429a      	cmp	r2, r3
 8012dba:	b09d      	sub	sp, #116	@ 0x74
 8012dbc:	4604      	mov	r4, r0
 8012dbe:	d954      	bls.n	8012e6a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012dc0:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8012e74 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8012dc4:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 8012e78 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012dc8:	aa26      	add	r2, sp, #152	@ 0x98
 8012dca:	9202      	str	r2, [sp, #8]
 8012dcc:	f8d9 2000 	ldr.w	r2, [r9]
 8012dd0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012dd4:	f8d8 3000 	ldr.w	r3, [r8]
 8012dd8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012ddc:	682b      	ldr	r3, [r5, #0]
 8012dde:	4628      	mov	r0, r5
 8012de0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012de2:	4798      	blx	r3
 8012de4:	b207      	sxth	r7, r0
 8012de6:	4606      	mov	r6, r0
 8012de8:	a803      	add	r0, sp, #12
 8012dea:	f005 fb28 	bl	801843e <_ZN8touchgfx12TextProviderC1Ev>
 8012dee:	682b      	ldr	r3, [r5, #0]
 8012df0:	4628      	mov	r0, r5
 8012df2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012df4:	4798      	blx	r3
 8012df6:	682b      	ldr	r3, [r5, #0]
 8012df8:	4682      	mov	sl, r0
 8012dfa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8012dfc:	4628      	mov	r0, r5
 8012dfe:	4798      	blx	r3
 8012e00:	4653      	mov	r3, sl
 8012e02:	9000      	str	r0, [sp, #0]
 8012e04:	9a02      	ldr	r2, [sp, #8]
 8012e06:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8012e08:	a803      	add	r0, sp, #12
 8012e0a:	f005 fb73 	bl	80184f4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012e0e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8012e10:	f8d9 3000 	ldr.w	r3, [r9]
 8012e14:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 8012e18:	8925      	ldrh	r5, [r4, #8]
 8012e1a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8012e1e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8012e22:	eba5 050c 	sub.w	r5, r5, ip
 8012e26:	784a      	ldrb	r2, [r1, #1]
 8012e28:	f8d8 3000 	ldr.w	r3, [r8]
 8012e2c:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 8012e30:	b22d      	sxth	r5, r5
 8012e32:	9500      	str	r5, [sp, #0]
 8012e34:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012e38:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012e3c:	a803      	add	r0, sp, #12
 8012e3e:	f002 fd4f 	bl	80158e0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8012e42:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 8012e46:	18b9      	adds	r1, r7, r2
 8012e48:	2900      	cmp	r1, #0
 8012e4a:	b203      	sxth	r3, r0
 8012e4c:	dd0b      	ble.n	8012e66 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8012e4e:	3b01      	subs	r3, #1
 8012e50:	fb13 f302 	smulbb	r3, r3, r2
 8012e54:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012e58:	b21f      	sxth	r7, r3
 8012e5a:	4638      	mov	r0, r7
 8012e5c:	b01d      	add	sp, #116	@ 0x74
 8012e5e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012e62:	b003      	add	sp, #12
 8012e64:	4770      	bx	lr
 8012e66:	2b00      	cmp	r3, #0
 8012e68:	dcf7      	bgt.n	8012e5a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012e6a:	2700      	movs	r7, #0
 8012e6c:	e7f5      	b.n	8012e5a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012e6e:	bf00      	nop
 8012e70:	20013fbc 	.word	0x20013fbc
 8012e74:	20013fb8 	.word	0x20013fb8
 8012e78:	20013fc0 	.word	0x20013fc0

08012e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8012e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e80:	4bbc      	ldr	r3, [pc, #752]	@ (8013174 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8012e82:	460c      	mov	r4, r1
 8012e84:	881b      	ldrh	r3, [r3, #0]
 8012e86:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 8012e88:	428b      	cmp	r3, r1
 8012e8a:	b0a9      	sub	sp, #164	@ 0xa4
 8012e8c:	4680      	mov	r8, r0
 8012e8e:	d809      	bhi.n	8012ea4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012e90:	2300      	movs	r3, #0
 8012e92:	f04f 32ff 	mov.w	r2, #4294967295
 8012e96:	e9c0 3200 	strd	r3, r2, [r0]
 8012e9a:	6083      	str	r3, [r0, #8]
 8012e9c:	4640      	mov	r0, r8
 8012e9e:	b029      	add	sp, #164	@ 0xa4
 8012ea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ea4:	4eb4      	ldr	r6, [pc, #720]	@ (8013178 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8012ea6:	6833      	ldr	r3, [r6, #0]
 8012ea8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8012eac:	4bb3      	ldr	r3, [pc, #716]	@ (801317c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8012eae:	681b      	ldr	r3, [r3, #0]
 8012eb0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012eb4:	4bb2      	ldr	r3, [pc, #712]	@ (8013180 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012eb6:	6818      	ldr	r0, [r3, #0]
 8012eb8:	f7f4 faba 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8012ebc:	682b      	ldr	r3, [r5, #0]
 8012ebe:	4681      	mov	r9, r0
 8012ec0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012ec2:	4628      	mov	r0, r5
 8012ec4:	4798      	blx	r3
 8012ec6:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 8012ec8:	b203      	sxth	r3, r0
 8012eca:	4407      	add	r7, r0
 8012ecc:	9304      	str	r3, [sp, #16]
 8012ece:	b2bb      	uxth	r3, r7
 8012ed0:	9303      	str	r3, [sp, #12]
 8012ed2:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8012ed6:	4682      	mov	sl, r0
 8012ed8:	a80f      	add	r0, sp, #60	@ 0x3c
 8012eda:	2b00      	cmp	r3, #0
 8012edc:	f040 80a6 	bne.w	801302c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012ee0:	f005 faad 	bl	801843e <_ZN8touchgfx12TextProviderC1Ev>
 8012ee4:	682b      	ldr	r3, [r5, #0]
 8012ee6:	4628      	mov	r0, r5
 8012ee8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012eea:	4798      	blx	r3
 8012eec:	682b      	ldr	r3, [r5, #0]
 8012eee:	4606      	mov	r6, r0
 8012ef0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8012ef2:	4628      	mov	r0, r5
 8012ef4:	4798      	blx	r3
 8012ef6:	6823      	ldr	r3, [r4, #0]
 8012ef8:	4607      	mov	r7, r0
 8012efa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8012efc:	4620      	mov	r0, r4
 8012efe:	4798      	blx	r3
 8012f00:	6823      	ldr	r3, [r4, #0]
 8012f02:	4683      	mov	fp, r0
 8012f04:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8012f08:	4620      	mov	r0, r4
 8012f0a:	4798      	blx	r3
 8012f0c:	463b      	mov	r3, r7
 8012f0e:	e9cd b000 	strd	fp, r0, [sp]
 8012f12:	4649      	mov	r1, r9
 8012f14:	4632      	mov	r2, r6
 8012f16:	a80f      	add	r0, sp, #60	@ 0x3c
 8012f18:	f005 fb01 	bl	801851e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012f1c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8012f20:	f8df b254 	ldr.w	fp, [pc, #596]	@ 8013178 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8012f24:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8012f28:	f04f 0600 	mov.w	r6, #0
 8012f2c:	bf0c      	ite	eq
 8012f2e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8012f32:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8012f36:	4637      	mov	r7, r6
 8012f38:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8012f3a:	f8db 3000 	ldr.w	r3, [fp]
 8012f3e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012f42:	4629      	mov	r1, r5
 8012f44:	785b      	ldrb	r3, [r3, #1]
 8012f46:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8012f4a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012f4e:	a80f      	add	r0, sp, #60	@ 0x3c
 8012f50:	f002 f9cd 	bl	80152ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012f54:	9b03      	ldr	r3, [sp, #12]
 8012f56:	4286      	cmp	r6, r0
 8012f58:	bfb8      	it	lt
 8012f5a:	4606      	movlt	r6, r0
 8012f5c:	3701      	adds	r7, #1
 8012f5e:	eba9 0903 	sub.w	r9, r9, r3
 8012f62:	a80f      	add	r0, sp, #60	@ 0x3c
 8012f64:	b236      	sxth	r6, r6
 8012f66:	b2bf      	uxth	r7, r7
 8012f68:	fa0f f989 	sxth.w	r9, r9
 8012f6c:	f005 fa8e 	bl	801848c <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012f70:	b918      	cbnz	r0, 8012f7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012f72:	7a2b      	ldrb	r3, [r5, #8]
 8012f74:	444b      	add	r3, r9
 8012f76:	2b00      	cmp	r3, #0
 8012f78:	dcde      	bgt.n	8012f38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8012f7a:	9b03      	ldr	r3, [sp, #12]
 8012f7c:	9a04      	ldr	r2, [sp, #16]
 8012f7e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8012f82:	fb13 f707 	smulbb	r7, r3, r7
 8012f86:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8012f88:	1aff      	subs	r7, r7, r3
 8012f8a:	b2bf      	uxth	r7, r7
 8012f8c:	b23b      	sxth	r3, r7
 8012f8e:	429a      	cmp	r2, r3
 8012f90:	bfa8      	it	ge
 8012f92:	4657      	movge	r7, sl
 8012f94:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8012f98:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8012f9c:	6823      	ldr	r3, [r4, #0]
 8012f9e:	bf08      	it	eq
 8012fa0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8012fa4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8012fa6:	bf18      	it	ne
 8012fa8:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8012fac:	4620      	mov	r0, r4
 8012fae:	4798      	blx	r3
 8012fb0:	444f      	add	r7, r9
 8012fb2:	fa1f f987 	uxth.w	r9, r7
 8012fb6:	2801      	cmp	r0, #1
 8012fb8:	fa0f f789 	sxth.w	r7, r9
 8012fbc:	b2b3      	uxth	r3, r6
 8012fbe:	f000 80e1 	beq.w	8013184 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8012fc2:	2802      	cmp	r0, #2
 8012fc4:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 8012fc8:	f000 80e2 	beq.w	8013190 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8012fcc:	7aea      	ldrb	r2, [r5, #11]
 8012fce:	7b2d      	ldrb	r5, [r5, #12]
 8012fd0:	b236      	sxth	r6, r6
 8012fd2:	1ab6      	subs	r6, r6, r2
 8012fd4:	442a      	add	r2, r5
 8012fd6:	4413      	add	r3, r2
 8012fd8:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 8012fdc:	fa1f fa86 	uxth.w	sl, r6
 8012fe0:	b29b      	uxth	r3, r3
 8012fe2:	2a02      	cmp	r2, #2
 8012fe4:	fa0f fb8a 	sxth.w	fp, sl
 8012fe8:	b21e      	sxth	r6, r3
 8012fea:	f000 80d5 	beq.w	8013198 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8012fee:	2a03      	cmp	r2, #3
 8012ff0:	f000 80dd 	beq.w	80131ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8012ff4:	2a01      	cmp	r2, #1
 8012ff6:	f040 80e5 	bne.w	80131c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8012ffa:	8925      	ldrh	r5, [r4, #8]
 8012ffc:	4633      	mov	r3, r6
 8012ffe:	eba5 0909 	sub.w	r9, r5, r9
 8013002:	463e      	mov	r6, r7
 8013004:	465d      	mov	r5, fp
 8013006:	461f      	mov	r7, r3
 8013008:	fa0f fb89 	sxth.w	fp, r9
 801300c:	4b5c      	ldr	r3, [pc, #368]	@ (8013180 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801300e:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8013010:	6818      	ldr	r0, [r3, #0]
 8013012:	f7f4 fa0d 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8013016:	f8a8 b000 	strh.w	fp, [r8]
 801301a:	f8a8 5002 	strh.w	r5, [r8, #2]
 801301e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8013022:	f8a8 7006 	strh.w	r7, [r8, #6]
 8013026:	f8c8 0008 	str.w	r0, [r8, #8]
 801302a:	e737      	b.n	8012e9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801302c:	f005 fa07 	bl	801843e <_ZN8touchgfx12TextProviderC1Ev>
 8013030:	682b      	ldr	r3, [r5, #0]
 8013032:	4628      	mov	r0, r5
 8013034:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013036:	4798      	blx	r3
 8013038:	682b      	ldr	r3, [r5, #0]
 801303a:	4607      	mov	r7, r0
 801303c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801303e:	4628      	mov	r0, r5
 8013040:	4798      	blx	r3
 8013042:	6823      	ldr	r3, [r4, #0]
 8013044:	4683      	mov	fp, r0
 8013046:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013048:	4620      	mov	r0, r4
 801304a:	4798      	blx	r3
 801304c:	6822      	ldr	r2, [r4, #0]
 801304e:	9005      	str	r0, [sp, #20]
 8013050:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8013054:	4620      	mov	r0, r4
 8013056:	4790      	blx	r2
 8013058:	9b05      	ldr	r3, [sp, #20]
 801305a:	9001      	str	r0, [sp, #4]
 801305c:	463a      	mov	r2, r7
 801305e:	4649      	mov	r1, r9
 8013060:	9300      	str	r3, [sp, #0]
 8013062:	a80f      	add	r0, sp, #60	@ 0x3c
 8013064:	465b      	mov	r3, fp
 8013066:	f005 fa5a 	bl	801851e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801306a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801306e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8013072:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8013074:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 8013078:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 801307c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013080:	bf0a      	itet	eq
 8013082:	464a      	moveq	r2, r9
 8013084:	461a      	movne	r2, r3
 8013086:	4699      	moveq	r9, r3
 8013088:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 801308c:	1ad2      	subs	r2, r2, r3
 801308e:	6833      	ldr	r3, [r6, #0]
 8013090:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 8013094:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013098:	af0f      	add	r7, sp, #60	@ 0x3c
 801309a:	7859      	ldrb	r1, [r3, #1]
 801309c:	9707      	str	r7, [sp, #28]
 801309e:	2300      	movs	r3, #0
 80130a0:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80130a4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80130a8:	f88d 1020 	strb.w	r1, [sp, #32]
 80130ac:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 80130b0:	9509      	str	r5, [sp, #36]	@ 0x24
 80130b2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80130b6:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 80130ba:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 80130be:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80130c2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80130c6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80130ca:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80130ce:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80130d2:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80130d6:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 80130da:	b350      	cbz	r0, 8013132 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80130dc:	682b      	ldr	r3, [r5, #0]
 80130de:	4628      	mov	r0, r5
 80130e0:	695b      	ldr	r3, [r3, #20]
 80130e2:	4798      	blx	r3
 80130e4:	4607      	mov	r7, r0
 80130e6:	b320      	cbz	r0, 8013132 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80130e8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80130ea:	6803      	ldr	r3, [r0, #0]
 80130ec:	4639      	mov	r1, r7
 80130ee:	68db      	ldr	r3, [r3, #12]
 80130f0:	4798      	blx	r3
 80130f2:	4606      	mov	r6, r0
 80130f4:	b1e8      	cbz	r0, 8013132 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80130f6:	7b43      	ldrb	r3, [r0, #13]
 80130f8:	7a82      	ldrb	r2, [r0, #10]
 80130fa:	005b      	lsls	r3, r3, #1
 80130fc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013100:	4313      	orrs	r3, r2
 8013102:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8013106:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 801310a:	2b06      	cmp	r3, #6
 801310c:	d111      	bne.n	8013132 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801310e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8013110:	6803      	ldr	r3, [r0, #0]
 8013112:	4632      	mov	r2, r6
 8013114:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013116:	4639      	mov	r1, r7
 8013118:	4798      	blx	r3
 801311a:	7b73      	ldrb	r3, [r6, #13]
 801311c:	005b      	lsls	r3, r3, #1
 801311e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013122:	7ab3      	ldrb	r3, [r6, #10]
 8013124:	4313      	orrs	r3, r2
 8013126:	4418      	add	r0, r3
 8013128:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801312c:	4418      	add	r0, r3
 801312e:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 8013132:	2600      	movs	r6, #0
 8013134:	4637      	mov	r7, r6
 8013136:	a806      	add	r0, sp, #24
 8013138:	f002 face 	bl	80156d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801313c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 8013140:	9b03      	ldr	r3, [sp, #12]
 8013142:	4286      	cmp	r6, r0
 8013144:	eba9 0903 	sub.w	r9, r9, r3
 8013148:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801314c:	bfb8      	it	lt
 801314e:	4606      	movlt	r6, r0
 8013150:	3701      	adds	r7, #1
 8013152:	b236      	sxth	r6, r6
 8013154:	b2bf      	uxth	r7, r7
 8013156:	fa0f f989 	sxth.w	r9, r9
 801315a:	2b00      	cmp	r3, #0
 801315c:	f43f af0d 	beq.w	8012f7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013160:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 8013164:	2b00      	cmp	r3, #0
 8013166:	f47f af08 	bne.w	8012f7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801316a:	7a2b      	ldrb	r3, [r5, #8]
 801316c:	444b      	add	r3, r9
 801316e:	2b00      	cmp	r3, #0
 8013170:	dce1      	bgt.n	8013136 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8013172:	e702      	b.n	8012f7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013174:	20013fbc 	.word	0x20013fbc
 8013178:	20013fb8 	.word	0x20013fb8
 801317c:	20013fc0 	.word	0x20013fc0
 8013180:	20013fc4 	.word	0x20013fc4
 8013184:	ebaa 0606 	sub.w	r6, sl, r6
 8013188:	2002      	movs	r0, #2
 801318a:	fb96 f6f0 	sdiv	r6, r6, r0
 801318e:	e71d      	b.n	8012fcc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013190:	441e      	add	r6, r3
 8013192:	ebaa 0606 	sub.w	r6, sl, r6
 8013196:	e719      	b.n	8012fcc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013198:	8925      	ldrh	r5, [r4, #8]
 801319a:	1aed      	subs	r5, r5, r3
 801319c:	eba5 050a 	sub.w	r5, r5, sl
 80131a0:	fa0f fb85 	sxth.w	fp, r5
 80131a4:	8965      	ldrh	r5, [r4, #10]
 80131a6:	eba5 0509 	sub.w	r5, r5, r9
 80131aa:	b22d      	sxth	r5, r5
 80131ac:	e72e      	b.n	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80131ae:	8965      	ldrh	r5, [r4, #10]
 80131b0:	1aed      	subs	r5, r5, r3
 80131b2:	eba5 050a 	sub.w	r5, r5, sl
 80131b6:	4633      	mov	r3, r6
 80131b8:	b22d      	sxth	r5, r5
 80131ba:	463e      	mov	r6, r7
 80131bc:	f04f 0b00 	mov.w	fp, #0
 80131c0:	461f      	mov	r7, r3
 80131c2:	e723      	b.n	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80131c4:	2500      	movs	r5, #0
 80131c6:	e721      	b.n	801300c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080131c8 <_ZN8touchgfx8TextAreaD0Ev>:
 80131c8:	b510      	push	{r4, lr}
 80131ca:	2148      	movs	r1, #72	@ 0x48
 80131cc:	4604      	mov	r4, r0
 80131ce:	f015 fd33 	bl	8028c38 <_ZdlPvj>
 80131d2:	4620      	mov	r0, r4
 80131d4:	bd10      	pop	{r4, pc}
	...

080131d8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80131d8:	b513      	push	{r0, r1, r4, lr}
 80131da:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 80131de:	4604      	mov	r4, r0
 80131e0:	b1fb      	cbz	r3, 8013222 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80131e2:	4b16      	ldr	r3, [pc, #88]	@ (801323c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80131e4:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 80131e6:	881b      	ldrh	r3, [r3, #0]
 80131e8:	428b      	cmp	r3, r1
 80131ea:	d91a      	bls.n	8013222 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80131ec:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80131f0:	2b00      	cmp	r3, #0
 80131f2:	dd16      	ble.n	8013222 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80131f4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80131f8:	2b00      	cmp	r3, #0
 80131fa:	dd12      	ble.n	8013222 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80131fc:	4b10      	ldr	r3, [pc, #64]	@ (8013240 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80131fe:	6818      	ldr	r0, [r3, #0]
 8013200:	f7f4 f916 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8013204:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8013208:	6822      	ldr	r2, [r4, #0]
 801320a:	2b00      	cmp	r3, #0
 801320c:	db06      	blt.n	801321c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801320e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8013212:	2b00      	cmp	r3, #0
 8013214:	db02      	blt.n	801321c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8013216:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8013218:	4298      	cmp	r0, r3
 801321a:	d004      	beq.n	8013226 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801321c:	6953      	ldr	r3, [r2, #20]
 801321e:	4620      	mov	r0, r4
 8013220:	4798      	blx	r3
 8013222:	b002      	add	sp, #8
 8013224:	bd10      	pop	{r4, pc}
 8013226:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 801322a:	c903      	ldmia	r1, {r0, r1}
 801322c:	466b      	mov	r3, sp
 801322e:	e883 0003 	stmia.w	r3, {r0, r1}
 8013232:	6912      	ldr	r2, [r2, #16]
 8013234:	4619      	mov	r1, r3
 8013236:	4620      	mov	r0, r4
 8013238:	4790      	blx	r2
 801323a:	e7f2      	b.n	8013222 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801323c:	20013fbc 	.word	0x20013fbc
 8013240:	20013fc4 	.word	0x20013fc4

08013244 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8013244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013248:	4b44      	ldr	r3, [pc, #272]	@ (801335c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801324a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 801324c:	881b      	ldrh	r3, [r3, #0]
 801324e:	4293      	cmp	r3, r2
 8013250:	b08e      	sub	sp, #56	@ 0x38
 8013252:	4604      	mov	r4, r0
 8013254:	d97e      	bls.n	8013354 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013256:	6808      	ldr	r0, [r1, #0]
 8013258:	4d41      	ldr	r5, [pc, #260]	@ (8013360 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801325a:	6849      	ldr	r1, [r1, #4]
 801325c:	ab05      	add	r3, sp, #20
 801325e:	c303      	stmia	r3!, {r0, r1}
 8013260:	4611      	mov	r1, r2
 8013262:	6828      	ldr	r0, [r5, #0]
 8013264:	f7f4 f8e4 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8013268:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 801326c:	2b00      	cmp	r3, #0
 801326e:	db11      	blt.n	8013294 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013270:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8013274:	2b00      	cmp	r3, #0
 8013276:	db0d      	blt.n	8013294 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013278:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801327a:	4298      	cmp	r0, r3
 801327c:	d10a      	bne.n	8013294 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801327e:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 8013282:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013286:	ab09      	add	r3, sp, #36	@ 0x24
 8013288:	e883 0003 	stmia.w	r3, {r0, r1}
 801328c:	4619      	mov	r1, r3
 801328e:	a805      	add	r0, sp, #20
 8013290:	f7fc f8b4 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 8013294:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013298:	2b00      	cmp	r3, #0
 801329a:	dd5b      	ble.n	8013354 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801329c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80132a0:	2b00      	cmp	r3, #0
 80132a2:	dd57      	ble.n	8013354 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80132a4:	4f2f      	ldr	r7, [pc, #188]	@ (8013364 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80132a6:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 80132a8:	683b      	ldr	r3, [r7, #0]
 80132aa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80132ae:	4b2e      	ldr	r3, [pc, #184]	@ (8013368 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80132b0:	681b      	ldr	r3, [r3, #0]
 80132b2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80132b6:	2e00      	cmp	r6, #0
 80132b8:	d04c      	beq.n	8013354 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80132ba:	6823      	ldr	r3, [r4, #0]
 80132bc:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 80132c0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80132c2:	4620      	mov	r0, r4
 80132c4:	4798      	blx	r3
 80132c6:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 80132c8:	683b      	ldr	r3, [r7, #0]
 80132ca:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 80132ce:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 80132d2:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 80132d6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80132d8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80132dc:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 80132e0:	785b      	ldrb	r3, [r3, #1]
 80132e2:	9609      	str	r6, [sp, #36]	@ 0x24
 80132e4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80132e8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80132ec:	4b1f      	ldr	r3, [pc, #124]	@ (801336c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80132ee:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 80132f2:	681b      	ldr	r3, [r3, #0]
 80132f4:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 80132f8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80132fa:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 80132fe:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 8013302:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 8013306:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 801330a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801330e:	b10a      	cbz	r2, 8013314 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8013310:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 8013312:	b906      	cbnz	r6, 8013316 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8013314:	689e      	ldr	r6, [r3, #8]
 8013316:	af07      	add	r7, sp, #28
 8013318:	4621      	mov	r1, r4
 801331a:	4638      	mov	r0, r7
 801331c:	f004 f8ac 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013320:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8013322:	6828      	ldr	r0, [r5, #0]
 8013324:	f7f4 f884 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8013328:	6823      	ldr	r3, [r4, #0]
 801332a:	4605      	mov	r5, r0
 801332c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801332e:	4620      	mov	r0, r4
 8013330:	4798      	blx	r3
 8013332:	6823      	ldr	r3, [r4, #0]
 8013334:	4680      	mov	r8, r0
 8013336:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801333a:	4620      	mov	r0, r4
 801333c:	4798      	blx	r3
 801333e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8013342:	ab09      	add	r3, sp, #36	@ 0x24
 8013344:	9300      	str	r3, [sp, #0]
 8013346:	9501      	str	r5, [sp, #4]
 8013348:	ab05      	add	r3, sp, #20
 801334a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801334e:	4630      	mov	r0, r6
 8013350:	f7f4 f820 	bl	8007394 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013354:	b00e      	add	sp, #56	@ 0x38
 8013356:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801335a:	bf00      	nop
 801335c:	20013fbc 	.word	0x20013fbc
 8013360:	20013fc4 	.word	0x20013fc4
 8013364:	20013fb8 	.word	0x20013fb8
 8013368:	20013fc0 	.word	0x20013fc0
 801336c:	20013f60 	.word	0x20013f60

08013370 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 8013370:	b570      	push	{r4, r5, r6, lr}
 8013372:	6803      	ldr	r3, [r0, #0]
 8013374:	4604      	mov	r4, r0
 8013376:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013378:	4615      	mov	r5, r2
 801337a:	4798      	blx	r3
 801337c:	6823      	ldr	r3, [r4, #0]
 801337e:	4629      	mov	r1, r5
 8013380:	4620      	mov	r0, r4
 8013382:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8013384:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013388:	4718      	bx	r3
	...

0801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 801338c:	b538      	push	{r3, r4, r5, lr}
 801338e:	4b0e      	ldr	r3, [pc, #56]	@ (80133c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8013390:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8013392:	881b      	ldrh	r3, [r3, #0]
 8013394:	429a      	cmp	r2, r3
 8013396:	4604      	mov	r4, r0
 8013398:	d214      	bcs.n	80133c4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801339a:	6803      	ldr	r3, [r0, #0]
 801339c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 801339e:	4798      	blx	r3
 80133a0:	6823      	ldr	r3, [r4, #0]
 80133a2:	4605      	mov	r5, r0
 80133a4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80133a6:	4620      	mov	r0, r4
 80133a8:	4798      	blx	r3
 80133aa:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80133ae:	b22d      	sxth	r5, r5
 80133b0:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80133b4:	4601      	mov	r1, r0
 80133b6:	bf06      	itte	eq
 80133b8:	4602      	moveq	r2, r0
 80133ba:	4629      	moveq	r1, r5
 80133bc:	462a      	movne	r2, r5
 80133be:	4620      	mov	r0, r4
 80133c0:	f7ff ffd6 	bl	8013370 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80133c4:	bd38      	pop	{r3, r4, r5, pc}
 80133c6:	bf00      	nop
 80133c8:	20013fbc 	.word	0x20013fbc

080133cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80133cc:	b530      	push	{r4, r5, lr}
 80133ce:	888b      	ldrh	r3, [r1, #4]
 80133d0:	8583      	strh	r3, [r0, #44]	@ 0x2c
 80133d2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80133d6:	b085      	sub	sp, #20
 80133d8:	4604      	mov	r4, r0
 80133da:	b923      	cbnz	r3, 80133e6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80133dc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80133e0:	b90b      	cbnz	r3, 80133e6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80133e2:	f7ff ffd3 	bl	801338c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80133e6:	6823      	ldr	r3, [r4, #0]
 80133e8:	466d      	mov	r5, sp
 80133ea:	4621      	mov	r1, r4
 80133ec:	4628      	mov	r0, r5
 80133ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80133f2:	4798      	blx	r3
 80133f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80133f8:	343c      	adds	r4, #60	@ 0x3c
 80133fa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80133fe:	b005      	add	sp, #20
 8013400:	bd30      	pop	{r4, r5, pc}

08013402 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8013402:	2300      	movs	r3, #0
 8013404:	8083      	strh	r3, [r0, #4]
 8013406:	80c3      	strh	r3, [r0, #6]
 8013408:	8003      	strh	r3, [r0, #0]
 801340a:	8043      	strh	r3, [r0, #2]
 801340c:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8013410:	2bff      	cmp	r3, #255	@ 0xff
 8013412:	bf01      	itttt	eq
 8013414:	890b      	ldrheq	r3, [r1, #8]
 8013416:	8083      	strheq	r3, [r0, #4]
 8013418:	894b      	ldrheq	r3, [r1, #10]
 801341a:	80c3      	strheq	r3, [r0, #6]
 801341c:	4770      	bx	lr
	...

08013420 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8013420:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013422:	4604      	mov	r4, r0
 8013424:	6808      	ldr	r0, [r1, #0]
 8013426:	6849      	ldr	r1, [r1, #4]
 8013428:	466b      	mov	r3, sp
 801342a:	c303      	stmia	r3!, {r0, r1}
 801342c:	6823      	ldr	r3, [r4, #0]
 801342e:	4669      	mov	r1, sp
 8013430:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013432:	4620      	mov	r0, r4
 8013434:	4798      	blx	r3
 8013436:	4b08      	ldr	r3, [pc, #32]	@ (8013458 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8013438:	681b      	ldr	r3, [r3, #0]
 801343a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801343e:	b10a      	cbz	r2, 8013444 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8013440:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8013442:	b900      	cbnz	r0, 8013446 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8013444:	6898      	ldr	r0, [r3, #8]
 8013446:	6803      	ldr	r3, [r0, #0]
 8013448:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 801344a:	6a1d      	ldr	r5, [r3, #32]
 801344c:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8013450:	4669      	mov	r1, sp
 8013452:	47a8      	blx	r5
 8013454:	b003      	add	sp, #12
 8013456:	bd30      	pop	{r4, r5, pc}
 8013458:	20013f60 	.word	0x20013f60

0801345c <_ZN8touchgfx3BoxD1Ev>:
 801345c:	4770      	bx	lr

0801345e <_ZN8touchgfx3BoxD0Ev>:
 801345e:	b510      	push	{r4, lr}
 8013460:	212c      	movs	r1, #44	@ 0x2c
 8013462:	4604      	mov	r4, r0
 8013464:	f015 fbe8 	bl	8028c38 <_ZdlPvj>
 8013468:	4620      	mov	r0, r4
 801346a:	bd10      	pop	{r4, pc}

0801346c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801346c:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 8013470:	4770      	bx	lr

08013472 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8013472:	b570      	push	{r4, r5, r6, lr}
 8013474:	880b      	ldrh	r3, [r1, #0]
 8013476:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8013478:	4605      	mov	r5, r0
 801347a:	8813      	ldrh	r3, [r2, #0]
 801347c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013480:	4604      	mov	r4, r0
 8013482:	4628      	mov	r0, r5
 8013484:	f006 fb90 	bl	8019ba8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013488:	4606      	mov	r6, r0
 801348a:	4628      	mov	r0, r5
 801348c:	f006 fbc0 	bl	8019c10 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013490:	6823      	ldr	r3, [r4, #0]
 8013492:	4605      	mov	r5, r0
 8013494:	4631      	mov	r1, r6
 8013496:	4620      	mov	r0, r4
 8013498:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801349a:	4798      	blx	r3
 801349c:	6823      	ldr	r3, [r4, #0]
 801349e:	4629      	mov	r1, r5
 80134a0:	4620      	mov	r0, r4
 80134a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80134a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80134a8:	4718      	bx	r3

080134aa <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80134aa:	b510      	push	{r4, lr}
 80134ac:	4604      	mov	r4, r0
 80134ae:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80134b0:	b150      	cbz	r0, 80134c8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80134b2:	6803      	ldr	r3, [r0, #0]
 80134b4:	68db      	ldr	r3, [r3, #12]
 80134b6:	4798      	blx	r3
 80134b8:	b130      	cbz	r0, 80134c8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80134ba:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80134bc:	6803      	ldr	r3, [r0, #0]
 80134be:	4621      	mov	r1, r4
 80134c0:	689b      	ldr	r3, [r3, #8]
 80134c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80134c6:	4718      	bx	r3
 80134c8:	bd10      	pop	{r4, pc}

080134ca <_ZNK8touchgfx6Button12getSolidRectEv>:
 80134ca:	b510      	push	{r4, lr}
 80134cc:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 80134d0:	2bff      	cmp	r3, #255	@ 0xff
 80134d2:	4604      	mov	r4, r0
 80134d4:	d006      	beq.n	80134e4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80134d6:	2300      	movs	r3, #0
 80134d8:	8003      	strh	r3, [r0, #0]
 80134da:	8043      	strh	r3, [r0, #2]
 80134dc:	8083      	strh	r3, [r0, #4]
 80134de:	80c3      	strh	r3, [r0, #6]
 80134e0:	4620      	mov	r0, r4
 80134e2:	bd10      	pop	{r4, pc}
 80134e4:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 80134e8:	b11b      	cbz	r3, 80134f2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80134ea:	3130      	adds	r1, #48	@ 0x30
 80134ec:	f006 fbc4 	bl	8019c78 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80134f0:	e7f6      	b.n	80134e0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80134f2:	312e      	adds	r1, #46	@ 0x2e
 80134f4:	e7fa      	b.n	80134ec <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080134f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80134f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80134fc:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8013500:	b08a      	sub	sp, #40	@ 0x28
 8013502:	4604      	mov	r4, r0
 8013504:	4688      	mov	r8, r1
 8013506:	2b00      	cmp	r3, #0
 8013508:	d066      	beq.n	80135d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801350a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 801350c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013510:	a805      	add	r0, sp, #20
 8013512:	f006 fb49 	bl	8019ba8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013516:	4607      	mov	r7, r0
 8013518:	a805      	add	r0, sp, #20
 801351a:	f006 fb79 	bl	8019c10 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801351e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013522:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8013526:	4432      	add	r2, r6
 8013528:	b292      	uxth	r2, r2
 801352a:	2300      	movs	r3, #0
 801352c:	fa0f fc82 	sxth.w	ip, r2
 8013530:	459c      	cmp	ip, r3
 8013532:	9306      	str	r3, [sp, #24]
 8013534:	dd52      	ble.n	80135dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013536:	42b7      	cmp	r7, r6
 8013538:	dd50      	ble.n	80135dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801353a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801353e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013542:	442b      	add	r3, r5
 8013544:	b29b      	uxth	r3, r3
 8013546:	b219      	sxth	r1, r3
 8013548:	2900      	cmp	r1, #0
 801354a:	dd47      	ble.n	80135dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801354c:	42a8      	cmp	r0, r5
 801354e:	dd45      	ble.n	80135dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013550:	4567      	cmp	r7, ip
 8013552:	bfb8      	it	lt
 8013554:	b2ba      	uxthlt	r2, r7
 8013556:	4288      	cmp	r0, r1
 8013558:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801355c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013560:	bfb8      	it	lt
 8013562:	b283      	uxthlt	r3, r0
 8013564:	1b92      	subs	r2, r2, r6
 8013566:	1b5b      	subs	r3, r3, r5
 8013568:	f8ad 201c 	strh.w	r2, [sp, #28]
 801356c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013570:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013574:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013578:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801357c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8013580:	429a      	cmp	r2, r3
 8013582:	d026      	beq.n	80135d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013584:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013588:	2b00      	cmp	r3, #0
 801358a:	dd22      	ble.n	80135d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801358c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013590:	2b00      	cmp	r3, #0
 8013592:	dd1e      	ble.n	80135d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013594:	2300      	movs	r3, #0
 8013596:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801359a:	6823      	ldr	r3, [r4, #0]
 801359c:	a908      	add	r1, sp, #32
 801359e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80135a0:	4620      	mov	r0, r4
 80135a2:	4798      	blx	r3
 80135a4:	4b0f      	ldr	r3, [pc, #60]	@ (80135e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80135a6:	681b      	ldr	r3, [r3, #0]
 80135a8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80135ac:	b10a      	cbz	r2, 80135b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80135ae:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80135b0:	b900      	cbnz	r0, 80135b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80135b2:	6898      	ldr	r0, [r3, #8]
 80135b4:	6801      	ldr	r1, [r0, #0]
 80135b6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80135ba:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80135be:	2501      	movs	r5, #1
 80135c0:	9502      	str	r5, [sp, #8]
 80135c2:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 80135c6:	9401      	str	r4, [sp, #4]
 80135c8:	ac06      	add	r4, sp, #24
 80135ca:	9400      	str	r4, [sp, #0]
 80135cc:	688c      	ldr	r4, [r1, #8]
 80135ce:	a905      	add	r1, sp, #20
 80135d0:	47a0      	blx	r4
 80135d2:	b00a      	add	sp, #40	@ 0x28
 80135d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80135d8:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 80135da:	e797      	b.n	801350c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80135dc:	2300      	movs	r3, #0
 80135de:	9307      	str	r3, [sp, #28]
 80135e0:	e7ca      	b.n	8013578 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80135e2:	bf00      	nop
 80135e4:	20013f60 	.word	0x20013f60

080135e8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 80135e8:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 80135ec:	b12a      	cbz	r2, 80135fa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80135ee:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80135f2:	b112      	cbz	r2, 80135fa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80135f4:	6803      	ldr	r3, [r0, #0]
 80135f6:	695b      	ldr	r3, [r3, #20]
 80135f8:	4718      	bx	r3
 80135fa:	4770      	bx	lr

080135fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80135fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013600:	4b2f      	ldr	r3, [pc, #188]	@ (80136c0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013602:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8013604:	881b      	ldrh	r3, [r3, #0]
 8013606:	4293      	cmp	r3, r2
 8013608:	b08d      	sub	sp, #52	@ 0x34
 801360a:	4604      	mov	r4, r0
 801360c:	460f      	mov	r7, r1
 801360e:	d954      	bls.n	80136ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013610:	4b2c      	ldr	r3, [pc, #176]	@ (80136c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013612:	6819      	ldr	r1, [r3, #0]
 8013614:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8013618:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801361c:	4a2a      	ldr	r2, [pc, #168]	@ (80136c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801361e:	6812      	ldr	r2, [r2, #0]
 8013620:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013624:	2900      	cmp	r1, #0
 8013626:	d048      	beq.n	80136ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013628:	785a      	ldrb	r2, [r3, #1]
 801362a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 801362e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8013632:	4b26      	ldr	r3, [pc, #152]	@ (80136cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013634:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 8013638:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 801363c:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 8013640:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 8013642:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 8013646:	9107      	str	r1, [sp, #28]
 8013648:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801364c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013650:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8013654:	681a      	ldr	r2, [r3, #0]
 8013656:	f88d 8020 	strb.w	r8, [sp, #32]
 801365a:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 801365e:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 8013662:	9609      	str	r6, [sp, #36]	@ 0x24
 8013664:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 8013668:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 801366c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 8013670:	b10b      	cbz	r3, 8013676 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8013672:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 8013674:	b905      	cbnz	r5, 8013678 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8013676:	6895      	ldr	r5, [r2, #8]
 8013678:	ae05      	add	r6, sp, #20
 801367a:	4621      	mov	r1, r4
 801367c:	4630      	mov	r0, r6
 801367e:	f003 fefb 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013682:	4b13      	ldr	r3, [pc, #76]	@ (80136d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013684:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8013686:	6818      	ldr	r0, [r3, #0]
 8013688:	f7f3 fed2 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 801368c:	6823      	ldr	r3, [r4, #0]
 801368e:	4680      	mov	r8, r0
 8013690:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013692:	4620      	mov	r0, r4
 8013694:	4798      	blx	r3
 8013696:	6823      	ldr	r3, [r4, #0]
 8013698:	4681      	mov	r9, r0
 801369a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801369e:	4620      	mov	r0, r4
 80136a0:	4798      	blx	r3
 80136a2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80136a6:	ab07      	add	r3, sp, #28
 80136a8:	9300      	str	r3, [sp, #0]
 80136aa:	f8cd 8004 	str.w	r8, [sp, #4]
 80136ae:	463b      	mov	r3, r7
 80136b0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80136b4:	4628      	mov	r0, r5
 80136b6:	f7f3 fe6d 	bl	8007394 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80136ba:	b00d      	add	sp, #52	@ 0x34
 80136bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80136c0:	20013fbc 	.word	0x20013fbc
 80136c4:	20013fb8 	.word	0x20013fb8
 80136c8:	20013fc0 	.word	0x20013fc0
 80136cc:	20013f60 	.word	0x20013f60
 80136d0:	20013fc4 	.word	0x20013fc4

080136d4 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 80136d4:	4770      	bx	lr

080136d6 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 80136d6:	b510      	push	{r4, lr}
 80136d8:	2134      	movs	r1, #52	@ 0x34
 80136da:	4604      	mov	r4, r0
 80136dc:	f015 faac 	bl	8028c38 <_ZdlPvj>
 80136e0:	4620      	mov	r0, r4
 80136e2:	bd10      	pop	{r4, pc}

080136e4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 80136e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80136e8:	4604      	mov	r4, r0
 80136ea:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 80136ec:	8962      	ldrh	r2, [r4, #10]
 80136ee:	b218      	sxth	r0, r3
 80136f0:	460e      	mov	r6, r1
 80136f2:	005b      	lsls	r3, r3, #1
 80136f4:	8921      	ldrh	r1, [r4, #8]
 80136f6:	b29b      	uxth	r3, r3
 80136f8:	1ac9      	subs	r1, r1, r3
 80136fa:	b08e      	sub	sp, #56	@ 0x38
 80136fc:	b209      	sxth	r1, r1
 80136fe:	1ad3      	subs	r3, r2, r3
 8013700:	b21b      	sxth	r3, r3
 8013702:	2900      	cmp	r1, #0
 8013704:	f8ad 0000 	strh.w	r0, [sp]
 8013708:	f8ad 0002 	strh.w	r0, [sp, #2]
 801370c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8013710:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013714:	dd5e      	ble.n	80137d4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8013716:	2b00      	cmp	r3, #0
 8013718:	dd5c      	ble.n	80137d4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801371a:	6830      	ldr	r0, [r6, #0]
 801371c:	6871      	ldr	r1, [r6, #4]
 801371e:	ab02      	add	r3, sp, #8
 8013720:	c303      	stmia	r3!, {r0, r1}
 8013722:	4669      	mov	r1, sp
 8013724:	a802      	add	r0, sp, #8
 8013726:	f7fb fe69 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 801372a:	4620      	mov	r0, r4
 801372c:	a902      	add	r1, sp, #8
 801372e:	f7ff fe77 	bl	8013420 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8013732:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 8013734:	2800      	cmp	r0, #0
 8013736:	d05f      	beq.n	80137f8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8013738:	8963      	ldrh	r3, [r4, #10]
 801373a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801373e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013742:	1a1f      	subs	r7, r3, r0
 8013744:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8013748:	b202      	sxth	r2, r0
 801374a:	2500      	movs	r5, #0
 801374c:	b21b      	sxth	r3, r3
 801374e:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 8013752:	1a09      	subs	r1, r1, r0
 8013754:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8013758:	9506      	str	r5, [sp, #24]
 801375a:	f8ad 201e 	strh.w	r2, [sp, #30]
 801375e:	f8ad 5020 	strh.w	r5, [sp, #32]
 8013762:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 8013766:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 801376a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801376e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8013772:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8013776:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801377a:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801377e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8013782:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013786:	af04      	add	r7, sp, #16
 8013788:	ab06      	add	r3, sp, #24
 801378a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801378e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013792:	e887 0003 	stmia.w	r7, {r0, r1}
 8013796:	4631      	mov	r1, r6
 8013798:	4638      	mov	r0, r7
 801379a:	f7fb fe2f 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 801379e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80137a2:	2b00      	cmp	r3, #0
 80137a4:	dd12      	ble.n	80137cc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80137a6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80137aa:	2b00      	cmp	r3, #0
 80137ac:	dd0e      	ble.n	80137cc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80137ae:	6823      	ldr	r3, [r4, #0]
 80137b0:	4639      	mov	r1, r7
 80137b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80137b4:	4620      	mov	r0, r4
 80137b6:	4798      	blx	r3
 80137b8:	f7f0 fc98 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 80137bc:	6803      	ldr	r3, [r0, #0]
 80137be:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80137c0:	f8d3 8020 	ldr.w	r8, [r3, #32]
 80137c4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80137c8:	4639      	mov	r1, r7
 80137ca:	47c0      	blx	r8
 80137cc:	3501      	adds	r5, #1
 80137ce:	2d04      	cmp	r5, #4
 80137d0:	d1da      	bne.n	8013788 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 80137d2:	e011      	b.n	80137f8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80137d4:	6830      	ldr	r0, [r6, #0]
 80137d6:	6871      	ldr	r1, [r6, #4]
 80137d8:	ab06      	add	r3, sp, #24
 80137da:	c303      	stmia	r3!, {r0, r1}
 80137dc:	6823      	ldr	r3, [r4, #0]
 80137de:	a906      	add	r1, sp, #24
 80137e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80137e2:	4620      	mov	r0, r4
 80137e4:	4798      	blx	r3
 80137e6:	f7f0 fc81 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 80137ea:	6803      	ldr	r3, [r0, #0]
 80137ec:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80137ee:	6a1d      	ldr	r5, [r3, #32]
 80137f0:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80137f4:	a906      	add	r1, sp, #24
 80137f6:	47a8      	blx	r5
 80137f8:	b00e      	add	sp, #56	@ 0x38
 80137fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080137fe <_ZN8touchgfx5ImageD1Ev>:
 80137fe:	4770      	bx	lr

08013800 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013800:	b570      	push	{r4, r5, r6, lr}
 8013802:	880b      	ldrh	r3, [r1, #0]
 8013804:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8013806:	4604      	mov	r4, r0
 8013808:	4608      	mov	r0, r1
 801380a:	460d      	mov	r5, r1
 801380c:	f006 f9cc 	bl	8019ba8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013810:	4606      	mov	r6, r0
 8013812:	4628      	mov	r0, r5
 8013814:	f006 f9fc 	bl	8019c10 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013818:	6823      	ldr	r3, [r4, #0]
 801381a:	4605      	mov	r5, r0
 801381c:	4631      	mov	r1, r6
 801381e:	4620      	mov	r0, r4
 8013820:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013822:	4798      	blx	r3
 8013824:	6823      	ldr	r3, [r4, #0]
 8013826:	4629      	mov	r1, r5
 8013828:	4620      	mov	r0, r4
 801382a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801382c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013830:	4718      	bx	r3

08013832 <_ZN8touchgfx5ImageD0Ev>:
 8013832:	b510      	push	{r4, lr}
 8013834:	212c      	movs	r1, #44	@ 0x2c
 8013836:	4604      	mov	r4, r0
 8013838:	f015 f9fe 	bl	8028c38 <_ZdlPvj>
 801383c:	4620      	mov	r0, r4
 801383e:	bd10      	pop	{r4, pc}

08013840 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013840:	b510      	push	{r4, lr}
 8013842:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 8013846:	2bff      	cmp	r3, #255	@ 0xff
 8013848:	4604      	mov	r4, r0
 801384a:	d006      	beq.n	801385a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801384c:	2300      	movs	r3, #0
 801384e:	8003      	strh	r3, [r0, #0]
 8013850:	8043      	strh	r3, [r0, #2]
 8013852:	8083      	strh	r3, [r0, #4]
 8013854:	80c3      	strh	r3, [r0, #6]
 8013856:	4620      	mov	r0, r4
 8013858:	bd10      	pop	{r4, pc}
 801385a:	3126      	adds	r1, #38	@ 0x26
 801385c:	f006 fa0c 	bl	8019c78 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013860:	e7f9      	b.n	8013856 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013862 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013862:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 8013866:	b12a      	cbz	r2, 8013874 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013868:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 801386c:	b112      	cbz	r2, 8013874 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801386e:	6803      	ldr	r3, [r0, #0]
 8013870:	695b      	ldr	r3, [r3, #20]
 8013872:	4718      	bx	r3
 8013874:	4770      	bx	lr
	...

08013878 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801387c:	4604      	mov	r4, r0
 801387e:	b088      	sub	sp, #32
 8013880:	f854 3b26 	ldr.w	r3, [r4], #38
 8013884:	2500      	movs	r5, #0
 8013886:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013888:	460f      	mov	r7, r1
 801388a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801388e:	a904      	add	r1, sp, #16
 8013890:	4606      	mov	r6, r0
 8013892:	4798      	blx	r3
 8013894:	4620      	mov	r0, r4
 8013896:	f006 f987 	bl	8019ba8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801389a:	4680      	mov	r8, r0
 801389c:	4620      	mov	r0, r4
 801389e:	f006 f9b7 	bl	8019c10 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138a2:	9506      	str	r5, [sp, #24]
 80138a4:	ad06      	add	r5, sp, #24
 80138a6:	f8ad 001e 	strh.w	r0, [sp, #30]
 80138aa:	4639      	mov	r1, r7
 80138ac:	4628      	mov	r0, r5
 80138ae:	f8ad 801c 	strh.w	r8, [sp, #28]
 80138b2:	f7fb fda3 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 80138b6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80138ba:	2b00      	cmp	r3, #0
 80138bc:	dd19      	ble.n	80138f2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80138be:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80138c2:	2b00      	cmp	r3, #0
 80138c4:	dd15      	ble.n	80138f2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80138c6:	4b0c      	ldr	r3, [pc, #48]	@ (80138f8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80138c8:	681b      	ldr	r3, [r3, #0]
 80138ca:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80138ce:	b10a      	cbz	r2, 80138d4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80138d0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80138d2:	b900      	cbnz	r0, 80138d6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80138d4:	6898      	ldr	r0, [r3, #8]
 80138d6:	6801      	ldr	r1, [r0, #0]
 80138d8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80138dc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80138e0:	2701      	movs	r7, #1
 80138e2:	9702      	str	r7, [sp, #8]
 80138e4:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 80138e8:	e9cd 5600 	strd	r5, r6, [sp]
 80138ec:	688d      	ldr	r5, [r1, #8]
 80138ee:	4621      	mov	r1, r4
 80138f0:	47a8      	blx	r5
 80138f2:	b008      	add	sp, #32
 80138f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80138f8:	20013f60 	.word	0x20013f60

080138fc <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80138fc:	4770      	bx	lr

080138fe <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80138fe:	b510      	push	{r4, lr}
 8013900:	2148      	movs	r1, #72	@ 0x48
 8013902:	4604      	mov	r4, r0
 8013904:	f015 f998 	bl	8028c38 <_ZdlPvj>
 8013908:	4620      	mov	r0, r4
 801390a:	bd10      	pop	{r4, pc}

0801390c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 801390c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013910:	b08d      	sub	sp, #52	@ 0x34
 8013912:	4604      	mov	r4, r0
 8013914:	460f      	mov	r7, r1
 8013916:	f7ff fdef 	bl	80134f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801391a:	4a55      	ldr	r2, [pc, #340]	@ (8013a70 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 801391c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801391e:	8812      	ldrh	r2, [r2, #0]
 8013920:	429a      	cmp	r2, r3
 8013922:	f240 8082 	bls.w	8013a2a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013926:	4d53      	ldr	r5, [pc, #332]	@ (8013a74 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013928:	682a      	ldr	r2, [r5, #0]
 801392a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801392e:	4b52      	ldr	r3, [pc, #328]	@ (8013a78 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8013930:	681b      	ldr	r3, [r3, #0]
 8013932:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013936:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 801393a:	2200      	movs	r2, #0
 801393c:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8013940:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 8013944:	2a03      	cmp	r2, #3
 8013946:	d811      	bhi.n	801396c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013948:	e8df f002 	tbb	[pc, r2]
 801394c:	89727902 	.word	0x89727902
 8013950:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013954:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013958:	1ad2      	subs	r2, r2, r3
 801395a:	2002      	movs	r0, #2
 801395c:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013960:	fb92 f2f0 	sdiv	r2, r2, r0
 8013964:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013968:	f8ad 200e 	strh.w	r2, [sp, #14]
 801396c:	f10d 080c 	add.w	r8, sp, #12
 8013970:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013974:	f10d 0914 	add.w	r9, sp, #20
 8013978:	e889 0003 	stmia.w	r9, {r0, r1}
 801397c:	4639      	mov	r1, r7
 801397e:	4648      	mov	r0, r9
 8013980:	f7fb fd3c 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 8013984:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013988:	2b00      	cmp	r3, #0
 801398a:	dd4e      	ble.n	8013a2a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 801398c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013990:	2b00      	cmp	r3, #0
 8013992:	dd4a      	ble.n	8013a2a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013994:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013998:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801399c:	1a9b      	subs	r3, r3, r2
 801399e:	f8ad 3014 	strh.w	r3, [sp, #20]
 80139a2:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80139a6:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80139aa:	1a9b      	subs	r3, r3, r2
 80139ac:	f8ad 3016 	strh.w	r3, [sp, #22]
 80139b0:	6823      	ldr	r3, [r4, #0]
 80139b2:	4641      	mov	r1, r8
 80139b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80139b6:	4620      	mov	r0, r4
 80139b8:	4798      	blx	r3
 80139ba:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 80139be:	2b00      	cmp	r3, #0
 80139c0:	d053      	beq.n	8013a6a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80139c2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80139c4:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 80139c6:	682b      	ldr	r3, [r5, #0]
 80139c8:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 80139cc:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 80139d0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80139d4:	785b      	ldrb	r3, [r3, #1]
 80139d6:	9209      	str	r2, [sp, #36]	@ 0x24
 80139d8:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80139dc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80139e0:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 80139e4:	2300      	movs	r3, #0
 80139e6:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80139ea:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 80139ee:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 80139f2:	4b22      	ldr	r3, [pc, #136]	@ (8013a7c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80139f4:	9607      	str	r6, [sp, #28]
 80139f6:	681b      	ldr	r3, [r3, #0]
 80139f8:	f88d 5020 	strb.w	r5, [sp, #32]
 80139fc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8013a00:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8013a04:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8013a08:	b10a      	cbz	r2, 8013a0e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013a0a:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 8013a0c:	b904      	cbnz	r4, 8013a10 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8013a0e:	689c      	ldr	r4, [r3, #8]
 8013a10:	4b1b      	ldr	r3, [pc, #108]	@ (8013a80 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8013a12:	6818      	ldr	r0, [r3, #0]
 8013a14:	f7f3 fd0c 	bl	8007430 <_ZNK8touchgfx5Texts7getTextEt>
 8013a18:	ab07      	add	r3, sp, #28
 8013a1a:	9001      	str	r0, [sp, #4]
 8013a1c:	9300      	str	r3, [sp, #0]
 8013a1e:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013a22:	464b      	mov	r3, r9
 8013a24:	4620      	mov	r0, r4
 8013a26:	f7f3 fcb5 	bl	8007394 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013a2a:	b00d      	add	sp, #52	@ 0x34
 8013a2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013a30:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013a34:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013a38:	1ad2      	subs	r2, r2, r3
 8013a3a:	3201      	adds	r2, #1
 8013a3c:	e78d      	b.n	801395a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8013a3e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013a42:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013a46:	1ad2      	subs	r2, r2, r3
 8013a48:	3201      	adds	r2, #1
 8013a4a:	2002      	movs	r0, #2
 8013a4c:	f8ad 3010 	strh.w	r3, [sp, #16]
 8013a50:	fb92 f2f0 	sdiv	r2, r2, r0
 8013a54:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013a58:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013a5c:	e786      	b.n	801396c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013a5e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013a62:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013a66:	1ad2      	subs	r2, r2, r3
 8013a68:	e7ef      	b.n	8013a4a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8013a6a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8013a6c:	e7aa      	b.n	80139c4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8013a6e:	bf00      	nop
 8013a70:	20013fbc 	.word	0x20013fbc
 8013a74:	20013fb8 	.word	0x20013fb8
 8013a78:	20013fc0 	.word	0x20013fc0
 8013a7c:	20013f60 	.word	0x20013f60
 8013a80:	20013fc4 	.word	0x20013fc4

08013a84 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013a84:	b510      	push	{r4, lr}
 8013a86:	2101      	movs	r1, #1
 8013a88:	4c13      	ldr	r4, [pc, #76]	@ (8013ad8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013a8a:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8013a8e:	2200      	movs	r2, #0
 8013a90:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 8013a94:	6004      	str	r4, [r0, #0]
 8013a96:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8013a9a:	4c10      	ldr	r4, [pc, #64]	@ (8013adc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013a9c:	8082      	strh	r2, [r0, #4]
 8013a9e:	80c2      	strh	r2, [r0, #6]
 8013aa0:	8102      	strh	r2, [r0, #8]
 8013aa2:	8142      	strh	r2, [r0, #10]
 8013aa4:	8182      	strh	r2, [r0, #12]
 8013aa6:	81c2      	strh	r2, [r0, #14]
 8013aa8:	8202      	strh	r2, [r0, #16]
 8013aaa:	8242      	strh	r2, [r0, #18]
 8013aac:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013ab0:	61c2      	str	r2, [r0, #28]
 8013ab2:	8402      	strh	r2, [r0, #32]
 8013ab4:	8442      	strh	r2, [r0, #34]	@ 0x22
 8013ab6:	6282      	str	r2, [r0, #40]	@ 0x28
 8013ab8:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 8013abc:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 8013abe:	8601      	strh	r1, [r0, #48]	@ 0x30
 8013ac0:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 8013ac4:	6344      	str	r4, [r0, #52]	@ 0x34
 8013ac6:	8701      	strh	r1, [r0, #56]	@ 0x38
 8013ac8:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8013acc:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 8013ad0:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 8013ad4:	bd10      	pop	{r4, pc}
 8013ad6:	bf00      	nop
 8013ad8:	0802d6f4 	.word	0x0802d6f4
 8013adc:	0802c810 	.word	0x0802c810

08013ae0 <_ZN8touchgfx7OutlineD1Ev>:
 8013ae0:	4770      	bx	lr

08013ae2 <_ZN8touchgfx7OutlineD0Ev>:
 8013ae2:	b510      	push	{r4, lr}
 8013ae4:	2130      	movs	r1, #48	@ 0x30
 8013ae6:	4604      	mov	r4, r0
 8013ae8:	f015 f8a6 	bl	8028c38 <_ZdlPvj>
 8013aec:	4620      	mov	r0, r4
 8013aee:	bd10      	pop	{r4, pc}

08013af0 <_ZN8touchgfx7Outline5resetEv>:
 8013af0:	b510      	push	{r4, lr}
 8013af2:	4604      	mov	r4, r0
 8013af4:	f000 fe96 	bl	8014824 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013af8:	60e0      	str	r0, [r4, #12]
 8013afa:	f000 fe99 	bl	8014830 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8013afe:	68e3      	ldr	r3, [r4, #12]
 8013b00:	6123      	str	r3, [r4, #16]
 8013b02:	08c0      	lsrs	r0, r0, #3
 8013b04:	2200      	movs	r2, #0
 8013b06:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 8013b0a:	3801      	subs	r0, #1
 8013b0c:	6060      	str	r0, [r4, #4]
 8013b0e:	60a2      	str	r2, [r4, #8]
 8013b10:	8019      	strh	r1, [r3, #0]
 8013b12:	8059      	strh	r1, [r3, #2]
 8013b14:	809a      	strh	r2, [r3, #4]
 8013b16:	80da      	strh	r2, [r3, #6]
 8013b18:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8013b1a:	f023 0301 	bic.w	r3, r3, #1
 8013b1e:	f043 0302 	orr.w	r3, r3, #2
 8013b22:	6263      	str	r3, [r4, #36]	@ 0x24
 8013b24:	bd10      	pop	{r4, pc}
	...

08013b28 <_ZN8touchgfx7OutlineC1Ev>:
 8013b28:	b510      	push	{r4, lr}
 8013b2a:	4b0a      	ldr	r3, [pc, #40]	@ (8013b54 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013b2c:	6003      	str	r3, [r0, #0]
 8013b2e:	2300      	movs	r3, #0
 8013b30:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8013b34:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8013b38:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013b3c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8013b40:	6243      	str	r3, [r0, #36]	@ 0x24
 8013b42:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8013b46:	4604      	mov	r4, r0
 8013b48:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 8013b4c:	f7ff ffd0 	bl	8013af0 <_ZN8touchgfx7Outline5resetEv>
 8013b50:	4620      	mov	r0, r4
 8013b52:	bd10      	pop	{r4, pc}
 8013b54:	0802d768 	.word	0x0802d768

08013b58 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8013b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b5c:	b093      	sub	sp, #76	@ 0x4c
 8013b5e:	1156      	asrs	r6, r2, #5
 8013b60:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8013b62:	9305      	str	r3, [sp, #20]
 8013b64:	f004 051f 	and.w	r5, r4, #31
 8013b68:	1153      	asrs	r3, r2, #5
 8013b6a:	9504      	str	r5, [sp, #16]
 8013b6c:	1165      	asrs	r5, r4, #5
 8013b6e:	9303      	str	r3, [sp, #12]
 8013b70:	42ae      	cmp	r6, r5
 8013b72:	ea4f 1364 	mov.w	r3, r4, asr #5
 8013b76:	9306      	str	r3, [sp, #24]
 8013b78:	f002 031f 	and.w	r3, r2, #31
 8013b7c:	f040 80f8 	bne.w	8013d70 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8013b80:	9c04      	ldr	r4, [sp, #16]
 8013b82:	9a05      	ldr	r2, [sp, #20]
 8013b84:	42a3      	cmp	r3, r4
 8013b86:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8013b8a:	6902      	ldr	r2, [r0, #16]
 8013b8c:	d125      	bne.n	8013bda <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8013b8e:	f9b2 3000 	ldrsh.w	r3, [r2]
 8013b92:	459e      	cmp	lr, r3
 8013b94:	d103      	bne.n	8013b9e <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8013b96:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013b9a:	429e      	cmp	r6, r3
 8013b9c:	d035      	beq.n	8013c0a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013b9e:	88d1      	ldrh	r1, [r2, #6]
 8013ba0:	8893      	ldrh	r3, [r2, #4]
 8013ba2:	430b      	orrs	r3, r1
 8013ba4:	d010      	beq.n	8013bc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013ba6:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013baa:	2b00      	cmp	r3, #0
 8013bac:	db0c      	blt.n	8013bc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013bae:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8013bb0:	428b      	cmp	r3, r1
 8013bb2:	da09      	bge.n	8013bc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013bb4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013bb8:	428b      	cmp	r3, r1
 8013bba:	bf38      	it	cc
 8013bbc:	3208      	addcc	r2, #8
 8013bbe:	f103 0301 	add.w	r3, r3, #1
 8013bc2:	bf38      	it	cc
 8013bc4:	6102      	strcc	r2, [r0, #16]
 8013bc6:	6083      	str	r3, [r0, #8]
 8013bc8:	6903      	ldr	r3, [r0, #16]
 8013bca:	9a03      	ldr	r2, [sp, #12]
 8013bcc:	f8a3 e000 	strh.w	lr, [r3]
 8013bd0:	805a      	strh	r2, [r3, #2]
 8013bd2:	2200      	movs	r2, #0
 8013bd4:	809a      	strh	r2, [r3, #4]
 8013bd6:	80da      	strh	r2, [r3, #6]
 8013bd8:	e017      	b.n	8013c0a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013bda:	9c05      	ldr	r4, [sp, #20]
 8013bdc:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8013be0:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8013be4:	f004 041f 	and.w	r4, r4, #31
 8013be8:	114e      	asrs	r6, r1, #5
 8013bea:	9402      	str	r4, [sp, #8]
 8013bec:	9c04      	ldr	r4, [sp, #16]
 8013bee:	4576      	cmp	r6, lr
 8013bf0:	f001 0c1f 	and.w	ip, r1, #31
 8013bf4:	eba4 0403 	sub.w	r4, r4, r3
 8013bf8:	d10a      	bne.n	8013c10 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8013bfa:	9b02      	ldr	r3, [sp, #8]
 8013bfc:	449c      	add	ip, r3
 8013bfe:	44a0      	add	r8, r4
 8013c00:	fb04 a40c 	mla	r4, r4, ip, sl
 8013c04:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013c08:	80d4      	strh	r4, [r2, #6]
 8013c0a:	b013      	add	sp, #76	@ 0x4c
 8013c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c10:	9d05      	ldr	r5, [sp, #20]
 8013c12:	1a69      	subs	r1, r5, r1
 8013c14:	bf5b      	ittet	pl
 8013c16:	f1cc 0520 	rsbpl	r5, ip, #32
 8013c1a:	436c      	mulpl	r4, r5
 8013c1c:	2500      	movmi	r5, #0
 8013c1e:	2520      	movpl	r5, #32
 8013c20:	bf44      	itt	mi
 8013c22:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013c26:	4249      	negmi	r1, r1
 8013c28:	9501      	str	r5, [sp, #4]
 8013c2a:	9f01      	ldr	r7, [sp, #4]
 8013c2c:	fb94 f5f1 	sdiv	r5, r4, r1
 8013c30:	fb01 4415 	mls	r4, r1, r5, r4
 8013c34:	bf54      	ite	pl
 8013c36:	f04f 0901 	movpl.w	r9, #1
 8013c3a:	f04f 39ff 	movmi.w	r9, #4294967295
 8013c3e:	2c00      	cmp	r4, #0
 8013c40:	bfb8      	it	lt
 8013c42:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013c46:	44bc      	add	ip, r7
 8013c48:	44a8      	add	r8, r5
 8013c4a:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013c4e:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013c52:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013c56:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013c5a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013c5e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8013c62:	bfb8      	it	lt
 8013c64:	1864      	addlt	r4, r4, r1
 8013c66:	ea58 0202 	orrs.w	r2, r8, r2
 8013c6a:	444e      	add	r6, r9
 8013c6c:	d011      	beq.n	8013c92 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013c6e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013c72:	f1b8 0f00 	cmp.w	r8, #0
 8013c76:	db0c      	blt.n	8013c92 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013c78:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8013c7a:	4590      	cmp	r8, r2
 8013c7c:	da09      	bge.n	8013c92 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013c7e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8013c82:	4590      	cmp	r8, r2
 8013c84:	bf3c      	itt	cc
 8013c86:	f10c 0208 	addcc.w	r2, ip, #8
 8013c8a:	6102      	strcc	r2, [r0, #16]
 8013c8c:	f108 0201 	add.w	r2, r8, #1
 8013c90:	6082      	str	r2, [r0, #8]
 8013c92:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013c96:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013c9a:	f8ac 6000 	strh.w	r6, [ip]
 8013c9e:	2700      	movs	r7, #0
 8013ca0:	45b6      	cmp	lr, r6
 8013ca2:	f8ac 2002 	strh.w	r2, [ip, #2]
 8013ca6:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013caa:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013cae:	442b      	add	r3, r5
 8013cb0:	d04d      	beq.n	8013d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8013cb2:	9f04      	ldr	r7, [sp, #16]
 8013cb4:	1aff      	subs	r7, r7, r3
 8013cb6:	443d      	add	r5, r7
 8013cb8:	016d      	lsls	r5, r5, #5
 8013cba:	fb95 f8f1 	sdiv	r8, r5, r1
 8013cbe:	fb01 5518 	mls	r5, r1, r8, r5
 8013cc2:	2d00      	cmp	r5, #0
 8013cc4:	bfb8      	it	lt
 8013cc6:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013cca:	f108 0701 	add.w	r7, r8, #1
 8013cce:	bfb8      	it	lt
 8013cd0:	186d      	addlt	r5, r5, r1
 8013cd2:	1a64      	subs	r4, r4, r1
 8013cd4:	9703      	str	r7, [sp, #12]
 8013cd6:	f04f 0a00 	mov.w	sl, #0
 8013cda:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013cde:	1964      	adds	r4, r4, r5
 8013ce0:	bf58      	it	pl
 8013ce2:	9f03      	ldrpl	r7, [sp, #12]
 8013ce4:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013ce8:	bf48      	it	mi
 8013cea:	4647      	movmi	r7, r8
 8013cec:	44bb      	add	fp, r7
 8013cee:	f8ac b004 	strh.w	fp, [ip, #4]
 8013cf2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013cf6:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013cfa:	f8ac b006 	strh.w	fp, [ip, #6]
 8013cfe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013d02:	443b      	add	r3, r7
 8013d04:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013d08:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013d0c:	bf58      	it	pl
 8013d0e:	1a64      	subpl	r4, r4, r1
 8013d10:	ea5b 0707 	orrs.w	r7, fp, r7
 8013d14:	444e      	add	r6, r9
 8013d16:	d011      	beq.n	8013d3c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013d18:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013d1c:	f1bb 0f00 	cmp.w	fp, #0
 8013d20:	db0c      	blt.n	8013d3c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013d22:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8013d24:	45bb      	cmp	fp, r7
 8013d26:	da09      	bge.n	8013d3c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013d28:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013d2c:	45bb      	cmp	fp, r7
 8013d2e:	bf3c      	itt	cc
 8013d30:	f10c 0708 	addcc.w	r7, ip, #8
 8013d34:	6107      	strcc	r7, [r0, #16]
 8013d36:	f10b 0701 	add.w	r7, fp, #1
 8013d3a:	6087      	str	r7, [r0, #8]
 8013d3c:	6907      	ldr	r7, [r0, #16]
 8013d3e:	45b6      	cmp	lr, r6
 8013d40:	803e      	strh	r6, [r7, #0]
 8013d42:	807a      	strh	r2, [r7, #2]
 8013d44:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013d48:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013d4c:	d1c5      	bne.n	8013cda <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8013d4e:	9a04      	ldr	r2, [sp, #16]
 8013d50:	1ad3      	subs	r3, r2, r3
 8013d52:	6902      	ldr	r2, [r0, #16]
 8013d54:	8891      	ldrh	r1, [r2, #4]
 8013d56:	88d6      	ldrh	r6, [r2, #6]
 8013d58:	4419      	add	r1, r3
 8013d5a:	8091      	strh	r1, [r2, #4]
 8013d5c:	9902      	ldr	r1, [sp, #8]
 8013d5e:	f101 0c20 	add.w	ip, r1, #32
 8013d62:	9901      	ldr	r1, [sp, #4]
 8013d64:	ebac 0c01 	sub.w	ip, ip, r1
 8013d68:	fb03 630c 	mla	r3, r3, ip, r6
 8013d6c:	80d3      	strh	r3, [r2, #6]
 8013d6e:	e74c      	b.n	8013c0a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013d70:	9d05      	ldr	r5, [sp, #20]
 8013d72:	1aa2      	subs	r2, r4, r2
 8013d74:	eba5 0501 	sub.w	r5, r5, r1
 8013d78:	9508      	str	r5, [sp, #32]
 8013d7a:	9202      	str	r2, [sp, #8]
 8013d7c:	f140 8128 	bpl.w	8013fd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8013d80:	9a03      	ldr	r2, [sp, #12]
 8013d82:	2a00      	cmp	r2, #0
 8013d84:	f6ff af41 	blt.w	8013c0a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013d88:	9a02      	ldr	r2, [sp, #8]
 8013d8a:	4252      	negs	r2, r2
 8013d8c:	9202      	str	r2, [sp, #8]
 8013d8e:	9a06      	ldr	r2, [sp, #24]
 8013d90:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013d94:	f04f 34ff 	mov.w	r4, #4294967295
 8013d98:	9206      	str	r2, [sp, #24]
 8013d9a:	462a      	mov	r2, r5
 8013d9c:	940b      	str	r4, [sp, #44]	@ 0x2c
 8013d9e:	435a      	muls	r2, r3
 8013da0:	2400      	movs	r4, #0
 8013da2:	9d02      	ldr	r5, [sp, #8]
 8013da4:	9401      	str	r4, [sp, #4]
 8013da6:	9c02      	ldr	r4, [sp, #8]
 8013da8:	fb92 f4f4 	sdiv	r4, r2, r4
 8013dac:	fb05 2214 	mls	r2, r5, r4, r2
 8013db0:	2a00      	cmp	r2, #0
 8013db2:	9207      	str	r2, [sp, #28]
 8013db4:	bfbc      	itt	lt
 8013db6:	1952      	addlt	r2, r2, r5
 8013db8:	9207      	strlt	r2, [sp, #28]
 8013dba:	9a01      	ldr	r2, [sp, #4]
 8013dbc:	6905      	ldr	r5, [r0, #16]
 8013dbe:	bfb8      	it	lt
 8013dc0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013dc4:	eb04 0901 	add.w	r9, r4, r1
 8013dc8:	429a      	cmp	r2, r3
 8013dca:	ea4f 1669 	mov.w	r6, r9, asr #5
 8013dce:	f040 8112 	bne.w	8013ff6 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8013dd2:	f9b5 3000 	ldrsh.w	r3, [r5]
 8013dd6:	429e      	cmp	r6, r3
 8013dd8:	d104      	bne.n	8013de4 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8013dda:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013dde:	9a03      	ldr	r2, [sp, #12]
 8013de0:	429a      	cmp	r2, r3
 8013de2:	d01b      	beq.n	8013e1c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013de4:	88ea      	ldrh	r2, [r5, #6]
 8013de6:	88ab      	ldrh	r3, [r5, #4]
 8013de8:	4313      	orrs	r3, r2
 8013dea:	d010      	beq.n	8013e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013dec:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013df0:	2a00      	cmp	r2, #0
 8013df2:	db0c      	blt.n	8013e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013df4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8013df6:	429a      	cmp	r2, r3
 8013df8:	da09      	bge.n	8013e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013dfa:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8013dfe:	429a      	cmp	r2, r3
 8013e00:	bf38      	it	cc
 8013e02:	3508      	addcc	r5, #8
 8013e04:	f102 0201 	add.w	r2, r2, #1
 8013e08:	bf38      	it	cc
 8013e0a:	6105      	strcc	r5, [r0, #16]
 8013e0c:	6082      	str	r2, [r0, #8]
 8013e0e:	6903      	ldr	r3, [r0, #16]
 8013e10:	9a03      	ldr	r2, [sp, #12]
 8013e12:	805a      	strh	r2, [r3, #2]
 8013e14:	2200      	movs	r2, #0
 8013e16:	801e      	strh	r6, [r3, #0]
 8013e18:	809a      	strh	r2, [r3, #4]
 8013e1a:	80da      	strh	r2, [r3, #6]
 8013e1c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013e1e:	9a03      	ldr	r2, [sp, #12]
 8013e20:	6901      	ldr	r1, [r0, #16]
 8013e22:	441a      	add	r2, r3
 8013e24:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013e28:	42b3      	cmp	r3, r6
 8013e2a:	d103      	bne.n	8013e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8013e2c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8013e30:	429a      	cmp	r2, r3
 8013e32:	d01a      	beq.n	8013e6a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8013e34:	88cc      	ldrh	r4, [r1, #6]
 8013e36:	888b      	ldrh	r3, [r1, #4]
 8013e38:	4323      	orrs	r3, r4
 8013e3a:	d010      	beq.n	8013e5e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013e3c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013e40:	2c00      	cmp	r4, #0
 8013e42:	db0c      	blt.n	8013e5e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013e44:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8013e46:	429c      	cmp	r4, r3
 8013e48:	da09      	bge.n	8013e5e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013e4a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8013e4e:	429c      	cmp	r4, r3
 8013e50:	bf38      	it	cc
 8013e52:	3108      	addcc	r1, #8
 8013e54:	f104 0401 	add.w	r4, r4, #1
 8013e58:	bf38      	it	cc
 8013e5a:	6101      	strcc	r1, [r0, #16]
 8013e5c:	6084      	str	r4, [r0, #8]
 8013e5e:	6903      	ldr	r3, [r0, #16]
 8013e60:	2100      	movs	r1, #0
 8013e62:	801e      	strh	r6, [r3, #0]
 8013e64:	805a      	strh	r2, [r3, #2]
 8013e66:	8099      	strh	r1, [r3, #4]
 8013e68:	80d9      	strh	r1, [r3, #6]
 8013e6a:	9b06      	ldr	r3, [sp, #24]
 8013e6c:	4293      	cmp	r3, r2
 8013e6e:	f000 8082 	beq.w	8013f76 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8013e72:	9b08      	ldr	r3, [sp, #32]
 8013e74:	9c02      	ldr	r4, [sp, #8]
 8013e76:	9902      	ldr	r1, [sp, #8]
 8013e78:	015b      	lsls	r3, r3, #5
 8013e7a:	fb93 f1f1 	sdiv	r1, r3, r1
 8013e7e:	fb04 3311 	mls	r3, r4, r1, r3
 8013e82:	2b00      	cmp	r3, #0
 8013e84:	9103      	str	r1, [sp, #12]
 8013e86:	9308      	str	r3, [sp, #32]
 8013e88:	da04      	bge.n	8013e94 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8013e8a:	1e4b      	subs	r3, r1, #1
 8013e8c:	9303      	str	r3, [sp, #12]
 8013e8e:	9b08      	ldr	r3, [sp, #32]
 8013e90:	4423      	add	r3, r4
 8013e92:	9308      	str	r3, [sp, #32]
 8013e94:	9b07      	ldr	r3, [sp, #28]
 8013e96:	9902      	ldr	r1, [sp, #8]
 8013e98:	1a5b      	subs	r3, r3, r1
 8013e9a:	9307      	str	r3, [sp, #28]
 8013e9c:	9b01      	ldr	r3, [sp, #4]
 8013e9e:	f1c3 0320 	rsb	r3, r3, #32
 8013ea2:	930e      	str	r3, [sp, #56]	@ 0x38
 8013ea4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8013ea6:	9b01      	ldr	r3, [sp, #4]
 8013ea8:	1a5b      	subs	r3, r3, r1
 8013eaa:	464f      	mov	r7, r9
 8013eac:	930a      	str	r3, [sp, #40]	@ 0x28
 8013eae:	2600      	movs	r6, #0
 8013eb0:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8013eb4:	185b      	adds	r3, r3, r1
 8013eb6:	bf58      	it	pl
 8013eb8:	9902      	ldrpl	r1, [sp, #8]
 8013eba:	9307      	str	r3, [sp, #28]
 8013ebc:	bf5d      	ittte	pl
 8013ebe:	1a5b      	subpl	r3, r3, r1
 8013ec0:	9307      	strpl	r3, [sp, #28]
 8013ec2:	9b03      	ldrpl	r3, [sp, #12]
 8013ec4:	9903      	ldrmi	r1, [sp, #12]
 8013ec6:	bf58      	it	pl
 8013ec8:	1c59      	addpl	r1, r3, #1
 8013eca:	4489      	add	r9, r1
 8013ecc:	2a00      	cmp	r2, #0
 8013ece:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8013ed2:	db2e      	blt.n	8013f32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013ed4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8013ed6:	4293      	cmp	r3, r2
 8013ed8:	dd2b      	ble.n	8013f32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013eda:	9c01      	ldr	r4, [sp, #4]
 8013edc:	6905      	ldr	r5, [r0, #16]
 8013ede:	46a0      	mov	r8, r4
 8013ee0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8013ee2:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013ee6:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013eea:	45a0      	cmp	r8, r4
 8013eec:	f040 814f 	bne.w	801418e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8013ef0:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013ef4:	4551      	cmp	r1, sl
 8013ef6:	d103      	bne.n	8013f00 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013ef8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013efc:	4291      	cmp	r1, r2
 8013efe:	d018      	beq.n	8013f32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013f00:	ea5c 010e 	orrs.w	r1, ip, lr
 8013f04:	d00f      	beq.n	8013f26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013f06:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013f0a:	2900      	cmp	r1, #0
 8013f0c:	db0b      	blt.n	8013f26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013f0e:	428b      	cmp	r3, r1
 8013f10:	dd09      	ble.n	8013f26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013f12:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013f16:	4299      	cmp	r1, r3
 8013f18:	bf38      	it	cc
 8013f1a:	3508      	addcc	r5, #8
 8013f1c:	f101 0101 	add.w	r1, r1, #1
 8013f20:	bf38      	it	cc
 8013f22:	6105      	strcc	r5, [r0, #16]
 8013f24:	6081      	str	r1, [r0, #8]
 8013f26:	6903      	ldr	r3, [r0, #16]
 8013f28:	f8a3 a000 	strh.w	sl, [r3]
 8013f2c:	805a      	strh	r2, [r3, #2]
 8013f2e:	809e      	strh	r6, [r3, #4]
 8013f30:	80de      	strh	r6, [r3, #6]
 8013f32:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013f34:	6901      	ldr	r1, [r0, #16]
 8013f36:	441a      	add	r2, r3
 8013f38:	88cc      	ldrh	r4, [r1, #6]
 8013f3a:	888b      	ldrh	r3, [r1, #4]
 8013f3c:	4323      	orrs	r3, r4
 8013f3e:	d010      	beq.n	8013f62 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013f40:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013f44:	2c00      	cmp	r4, #0
 8013f46:	db0c      	blt.n	8013f62 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013f48:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8013f4a:	429c      	cmp	r4, r3
 8013f4c:	da09      	bge.n	8013f62 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013f4e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8013f52:	429c      	cmp	r4, r3
 8013f54:	bf38      	it	cc
 8013f56:	3108      	addcc	r1, #8
 8013f58:	f104 0401 	add.w	r4, r4, #1
 8013f5c:	bf38      	it	cc
 8013f5e:	6101      	strcc	r1, [r0, #16]
 8013f60:	6084      	str	r4, [r0, #8]
 8013f62:	6903      	ldr	r3, [r0, #16]
 8013f64:	f8a3 a000 	strh.w	sl, [r3]
 8013f68:	805a      	strh	r2, [r3, #2]
 8013f6a:	809e      	strh	r6, [r3, #4]
 8013f6c:	80de      	strh	r6, [r3, #6]
 8013f6e:	9b06      	ldr	r3, [sp, #24]
 8013f70:	4293      	cmp	r3, r2
 8013f72:	464f      	mov	r7, r9
 8013f74:	d19c      	bne.n	8013eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8013f76:	9b01      	ldr	r3, [sp, #4]
 8013f78:	6907      	ldr	r7, [r0, #16]
 8013f7a:	f1c3 0620 	rsb	r6, r3, #32
 8013f7e:	9b05      	ldr	r3, [sp, #20]
 8013f80:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8013f84:	9b04      	ldr	r3, [sp, #16]
 8013f86:	429e      	cmp	r6, r3
 8013f88:	f040 81cc 	bne.w	8014324 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8013f8c:	f9b7 3000 	ldrsh.w	r3, [r7]
 8013f90:	459e      	cmp	lr, r3
 8013f92:	d104      	bne.n	8013f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013f94:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013f98:	429a      	cmp	r2, r3
 8013f9a:	f43f ae36 	beq.w	8013c0a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013f9e:	88f9      	ldrh	r1, [r7, #6]
 8013fa0:	88bb      	ldrh	r3, [r7, #4]
 8013fa2:	430b      	orrs	r3, r1
 8013fa4:	d010      	beq.n	8013fc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013fa6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013faa:	2b00      	cmp	r3, #0
 8013fac:	db0c      	blt.n	8013fc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013fae:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8013fb0:	428b      	cmp	r3, r1
 8013fb2:	da09      	bge.n	8013fc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013fb4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013fb8:	428b      	cmp	r3, r1
 8013fba:	bf38      	it	cc
 8013fbc:	3708      	addcc	r7, #8
 8013fbe:	f103 0301 	add.w	r3, r3, #1
 8013fc2:	bf38      	it	cc
 8013fc4:	6107      	strcc	r7, [r0, #16]
 8013fc6:	6083      	str	r3, [r0, #8]
 8013fc8:	6903      	ldr	r3, [r0, #16]
 8013fca:	f8a3 e000 	strh.w	lr, [r3]
 8013fce:	e5ff      	b.n	8013bd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8013fd0:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8013fd2:	9c03      	ldr	r4, [sp, #12]
 8013fd4:	42a2      	cmp	r2, r4
 8013fd6:	f6ff ae18 	blt.w	8013c0a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013fda:	9c06      	ldr	r4, [sp, #24]
 8013fdc:	42a2      	cmp	r2, r4
 8013fde:	bfb8      	it	lt
 8013fe0:	3201      	addlt	r2, #1
 8013fe2:	9c08      	ldr	r4, [sp, #32]
 8013fe4:	bfb8      	it	lt
 8013fe6:	9206      	strlt	r2, [sp, #24]
 8013fe8:	f1c3 0220 	rsb	r2, r3, #32
 8013fec:	4362      	muls	r2, r4
 8013fee:	2401      	movs	r4, #1
 8013ff0:	940b      	str	r4, [sp, #44]	@ 0x2c
 8013ff2:	2420      	movs	r4, #32
 8013ff4:	e6d5      	b.n	8013da2 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013ff6:	f009 021f 	and.w	r2, r9, #31
 8013ffa:	ea4f 1861 	mov.w	r8, r1, asr #5
 8013ffe:	920c      	str	r2, [sp, #48]	@ 0x30
 8014000:	9a01      	ldr	r2, [sp, #4]
 8014002:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8014006:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 801400a:	45b0      	cmp	r8, r6
 801400c:	f001 011f 	and.w	r1, r1, #31
 8014010:	eba2 0203 	sub.w	r2, r2, r3
 8014014:	d108      	bne.n	8014028 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8014016:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014018:	4419      	add	r1, r3
 801401a:	4496      	add	lr, r2
 801401c:	fb02 a101 	mla	r1, r2, r1, sl
 8014020:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014024:	80e9      	strh	r1, [r5, #6]
 8014026:	e6f9      	b.n	8013e1c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014028:	2c00      	cmp	r4, #0
 801402a:	f2c0 80a9 	blt.w	8014180 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801402e:	2701      	movs	r7, #1
 8014030:	f1c1 0c20 	rsb	ip, r1, #32
 8014034:	970a      	str	r7, [sp, #40]	@ 0x28
 8014036:	fb02 f20c 	mul.w	r2, r2, ip
 801403a:	2720      	movs	r7, #32
 801403c:	9709      	str	r7, [sp, #36]	@ 0x24
 801403e:	fb92 fcf4 	sdiv	ip, r2, r4
 8014042:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8014044:	fb04 221c 	mls	r2, r4, ip, r2
 8014048:	2a00      	cmp	r2, #0
 801404a:	bfb8      	it	lt
 801404c:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8014050:	4439      	add	r1, r7
 8014052:	fb0c a101 	mla	r1, ip, r1, sl
 8014056:	80e9      	strh	r1, [r5, #6]
 8014058:	44e6      	add	lr, ip
 801405a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801405c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014060:	eb08 0501 	add.w	r5, r8, r1
 8014064:	6901      	ldr	r1, [r0, #16]
 8014066:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 801406a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801406e:	bfb8      	it	lt
 8014070:	1912      	addlt	r2, r2, r4
 8014072:	ea58 070e 	orrs.w	r7, r8, lr
 8014076:	d010      	beq.n	801409a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014078:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 801407c:	f1be 0f00 	cmp.w	lr, #0
 8014080:	db0b      	blt.n	801409a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014082:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014084:	45be      	cmp	lr, r7
 8014086:	da08      	bge.n	801409a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014088:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 801408c:	45be      	cmp	lr, r7
 801408e:	bf3c      	itt	cc
 8014090:	3108      	addcc	r1, #8
 8014092:	6101      	strcc	r1, [r0, #16]
 8014094:	f10e 0101 	add.w	r1, lr, #1
 8014098:	6081      	str	r1, [r0, #8]
 801409a:	6901      	ldr	r1, [r0, #16]
 801409c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80140a0:	800d      	strh	r5, [r1, #0]
 80140a2:	f04f 0e00 	mov.w	lr, #0
 80140a6:	42ae      	cmp	r6, r5
 80140a8:	f8a1 8002 	strh.w	r8, [r1, #2]
 80140ac:	f8a1 e004 	strh.w	lr, [r1, #4]
 80140b0:	f8a1 e006 	strh.w	lr, [r1, #6]
 80140b4:	4463      	add	r3, ip
 80140b6:	d054      	beq.n	8014162 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80140b8:	9901      	ldr	r1, [sp, #4]
 80140ba:	1ac9      	subs	r1, r1, r3
 80140bc:	4461      	add	r1, ip
 80140be:	0149      	lsls	r1, r1, #5
 80140c0:	fb91 fef4 	sdiv	lr, r1, r4
 80140c4:	fb04 111e 	mls	r1, r4, lr, r1
 80140c8:	2900      	cmp	r1, #0
 80140ca:	bfb8      	it	lt
 80140cc:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80140d0:	f10e 0701 	add.w	r7, lr, #1
 80140d4:	bfb8      	it	lt
 80140d6:	1909      	addlt	r1, r1, r4
 80140d8:	1b12      	subs	r2, r2, r4
 80140da:	970d      	str	r7, [sp, #52]	@ 0x34
 80140dc:	f8d0 a010 	ldr.w	sl, [r0, #16]
 80140e0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80140e2:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80140e6:	1852      	adds	r2, r2, r1
 80140e8:	bf54      	ite	pl
 80140ea:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 80140ee:	46f4      	movmi	ip, lr
 80140f0:	44e3      	add	fp, ip
 80140f2:	f8aa b004 	strh.w	fp, [sl, #4]
 80140f6:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80140fa:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80140fe:	f8aa b006 	strh.w	fp, [sl, #6]
 8014102:	4463      	add	r3, ip
 8014104:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014108:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801410c:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8014110:	bf58      	it	pl
 8014112:	1b12      	subpl	r2, r2, r4
 8014114:	443d      	add	r5, r7
 8014116:	ea5b 070a 	orrs.w	r7, fp, sl
 801411a:	d014      	beq.n	8014146 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801411c:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8014120:	f1ba 0f00 	cmp.w	sl, #0
 8014124:	db0f      	blt.n	8014146 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014126:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014128:	45ba      	cmp	sl, r7
 801412a:	da0c      	bge.n	8014146 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801412c:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8014130:	45ba      	cmp	sl, r7
 8014132:	bf38      	it	cc
 8014134:	f10c 0c08 	addcc.w	ip, ip, #8
 8014138:	f10a 0a01 	add.w	sl, sl, #1
 801413c:	bf38      	it	cc
 801413e:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8014142:	f8c0 a008 	str.w	sl, [r0, #8]
 8014146:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801414a:	f04f 0700 	mov.w	r7, #0
 801414e:	42ae      	cmp	r6, r5
 8014150:	f8ac 5000 	strh.w	r5, [ip]
 8014154:	f8ac 8002 	strh.w	r8, [ip, #2]
 8014158:	f8ac 7004 	strh.w	r7, [ip, #4]
 801415c:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014160:	d1bc      	bne.n	80140dc <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8014162:	6904      	ldr	r4, [r0, #16]
 8014164:	9a01      	ldr	r2, [sp, #4]
 8014166:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014168:	1ad3      	subs	r3, r2, r3
 801416a:	88a2      	ldrh	r2, [r4, #4]
 801416c:	441a      	add	r2, r3
 801416e:	80a2      	strh	r2, [r4, #4]
 8014170:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014172:	3120      	adds	r1, #32
 8014174:	1a89      	subs	r1, r1, r2
 8014176:	88e2      	ldrh	r2, [r4, #6]
 8014178:	fb03 2301 	mla	r3, r3, r1, r2
 801417c:	80e3      	strh	r3, [r4, #6]
 801417e:	e64d      	b.n	8013e1c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014180:	f04f 37ff 	mov.w	r7, #4294967295
 8014184:	970a      	str	r7, [sp, #40]	@ 0x28
 8014186:	434a      	muls	r2, r1
 8014188:	4264      	negs	r4, r4
 801418a:	2700      	movs	r7, #0
 801418c:	e756      	b.n	801403c <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801418e:	ea4f 1867 	mov.w	r8, r7, asr #5
 8014192:	f009 031f 	and.w	r3, r9, #31
 8014196:	45d0      	cmp	r8, sl
 8014198:	f007 071f 	and.w	r7, r7, #31
 801419c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801419e:	fa1f fc8c 	uxth.w	ip, ip
 80141a2:	fa1f fe8e 	uxth.w	lr, lr
 80141a6:	d10a      	bne.n	80141be <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 80141a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80141aa:	449c      	add	ip, r3
 80141ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80141ae:	f8a5 c004 	strh.w	ip, [r5, #4]
 80141b2:	441f      	add	r7, r3
 80141b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80141b6:	fb03 e707 	mla	r7, r3, r7, lr
 80141ba:	80ef      	strh	r7, [r5, #6]
 80141bc:	e6b9      	b.n	8013f32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80141be:	2900      	cmp	r1, #0
 80141c0:	f2c0 80a8 	blt.w	8014314 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 80141c4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80141c6:	f1c7 0320 	rsb	r3, r7, #32
 80141ca:	4363      	muls	r3, r4
 80141cc:	2401      	movs	r4, #1
 80141ce:	940d      	str	r4, [sp, #52]	@ 0x34
 80141d0:	2420      	movs	r4, #32
 80141d2:	940c      	str	r4, [sp, #48]	@ 0x30
 80141d4:	fb93 f4f1 	sdiv	r4, r3, r1
 80141d8:	fb01 3b14 	mls	fp, r1, r4, r3
 80141dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80141de:	f1bb 0f00 	cmp.w	fp, #0
 80141e2:	bfb8      	it	lt
 80141e4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80141e8:	441f      	add	r7, r3
 80141ea:	fb04 e707 	mla	r7, r4, r7, lr
 80141ee:	44a4      	add	ip, r4
 80141f0:	f8a5 c004 	strh.w	ip, [r5, #4]
 80141f4:	80ef      	strh	r7, [r5, #6]
 80141f6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80141fa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80141fc:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8014200:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014204:	bfb8      	it	lt
 8014206:	448b      	addlt	fp, r1
 8014208:	eb08 0503 	add.w	r5, r8, r3
 801420c:	ea5e 0307 	orrs.w	r3, lr, r7
 8014210:	d011      	beq.n	8014236 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014212:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8014216:	f1be 0f00 	cmp.w	lr, #0
 801421a:	db0c      	blt.n	8014236 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801421c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 801421e:	45be      	cmp	lr, r7
 8014220:	da09      	bge.n	8014236 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014222:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014226:	45be      	cmp	lr, r7
 8014228:	bf3c      	itt	cc
 801422a:	f10c 0708 	addcc.w	r7, ip, #8
 801422e:	6107      	strcc	r7, [r0, #16]
 8014230:	f10e 0701 	add.w	r7, lr, #1
 8014234:	6087      	str	r7, [r0, #8]
 8014236:	6907      	ldr	r7, [r0, #16]
 8014238:	b213      	sxth	r3, r2
 801423a:	9310      	str	r3, [sp, #64]	@ 0x40
 801423c:	807b      	strh	r3, [r7, #2]
 801423e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014240:	803d      	strh	r5, [r7, #0]
 8014242:	4555      	cmp	r5, sl
 8014244:	80be      	strh	r6, [r7, #4]
 8014246:	80fe      	strh	r6, [r7, #6]
 8014248:	eb04 0c03 	add.w	ip, r4, r3
 801424c:	d051      	beq.n	80142f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801424e:	9b01      	ldr	r3, [sp, #4]
 8014250:	eba3 070c 	sub.w	r7, r3, ip
 8014254:	443c      	add	r4, r7
 8014256:	0164      	lsls	r4, r4, #5
 8014258:	fb94 f8f1 	sdiv	r8, r4, r1
 801425c:	fb01 4418 	mls	r4, r1, r8, r4
 8014260:	2c00      	cmp	r4, #0
 8014262:	bfb8      	it	lt
 8014264:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014268:	ebab 0301 	sub.w	r3, fp, r1
 801426c:	f108 0701 	add.w	r7, r8, #1
 8014270:	bfb8      	it	lt
 8014272:	1864      	addlt	r4, r4, r1
 8014274:	9309      	str	r3, [sp, #36]	@ 0x24
 8014276:	9711      	str	r7, [sp, #68]	@ 0x44
 8014278:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801427a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801427e:	191b      	adds	r3, r3, r4
 8014280:	bf58      	it	pl
 8014282:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 8014284:	f8be b004 	ldrh.w	fp, [lr, #4]
 8014288:	9309      	str	r3, [sp, #36]	@ 0x24
 801428a:	bf48      	it	mi
 801428c:	4647      	movmi	r7, r8
 801428e:	44bb      	add	fp, r7
 8014290:	f8ae b004 	strh.w	fp, [lr, #4]
 8014294:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014298:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801429c:	f8ae b006 	strh.w	fp, [lr, #6]
 80142a0:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80142a4:	44bc      	add	ip, r7
 80142a6:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 80142a8:	f8be b006 	ldrh.w	fp, [lr, #6]
 80142ac:	443d      	add	r5, r7
 80142ae:	f8be 7004 	ldrh.w	r7, [lr, #4]
 80142b2:	bf5c      	itt	pl
 80142b4:	1a5b      	subpl	r3, r3, r1
 80142b6:	9309      	strpl	r3, [sp, #36]	@ 0x24
 80142b8:	ea5b 0307 	orrs.w	r3, fp, r7
 80142bc:	d011      	beq.n	80142e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80142be:	f9be b002 	ldrsh.w	fp, [lr, #2]
 80142c2:	f1bb 0f00 	cmp.w	fp, #0
 80142c6:	db0c      	blt.n	80142e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80142c8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80142ca:	45bb      	cmp	fp, r7
 80142cc:	da09      	bge.n	80142e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80142ce:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80142d2:	45bb      	cmp	fp, r7
 80142d4:	bf3c      	itt	cc
 80142d6:	f10e 0708 	addcc.w	r7, lr, #8
 80142da:	6107      	strcc	r7, [r0, #16]
 80142dc:	f10b 0701 	add.w	r7, fp, #1
 80142e0:	6087      	str	r7, [r0, #8]
 80142e2:	6907      	ldr	r7, [r0, #16]
 80142e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80142e6:	803d      	strh	r5, [r7, #0]
 80142e8:	4555      	cmp	r5, sl
 80142ea:	807b      	strh	r3, [r7, #2]
 80142ec:	80be      	strh	r6, [r7, #4]
 80142ee:	80fe      	strh	r6, [r7, #6]
 80142f0:	d1c2      	bne.n	8014278 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 80142f2:	9b01      	ldr	r3, [sp, #4]
 80142f4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80142f6:	eba3 0c0c 	sub.w	ip, r3, ip
 80142fa:	6903      	ldr	r3, [r0, #16]
 80142fc:	8899      	ldrh	r1, [r3, #4]
 80142fe:	4461      	add	r1, ip
 8014300:	8099      	strh	r1, [r3, #4]
 8014302:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014304:	3720      	adds	r7, #32
 8014306:	1a7f      	subs	r7, r7, r1
 8014308:	88d9      	ldrh	r1, [r3, #6]
 801430a:	fb0c 1c07 	mla	ip, ip, r7, r1
 801430e:	f8a3 c006 	strh.w	ip, [r3, #6]
 8014312:	e60e      	b.n	8013f32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014314:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014316:	f04f 34ff 	mov.w	r4, #4294967295
 801431a:	940d      	str	r4, [sp, #52]	@ 0x34
 801431c:	437b      	muls	r3, r7
 801431e:	4249      	negs	r1, r1
 8014320:	2400      	movs	r4, #0
 8014322:	e756      	b.n	80141d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8014324:	9905      	ldr	r1, [sp, #20]
 8014326:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 801432a:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801432e:	f001 011f 	and.w	r1, r1, #31
 8014332:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8014336:	9102      	str	r1, [sp, #8]
 8014338:	9904      	ldr	r1, [sp, #16]
 801433a:	45f3      	cmp	fp, lr
 801433c:	f009 0c1f 	and.w	ip, r9, #31
 8014340:	eba1 0406 	sub.w	r4, r1, r6
 8014344:	d108      	bne.n	8014358 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8014346:	9b02      	ldr	r3, [sp, #8]
 8014348:	449c      	add	ip, r3
 801434a:	44a0      	add	r8, r4
 801434c:	fb04 a40c 	mla	r4, r4, ip, sl
 8014350:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014354:	80fc      	strh	r4, [r7, #6]
 8014356:	e458      	b.n	8013c0a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014358:	9905      	ldr	r1, [sp, #20]
 801435a:	ebb1 0109 	subs.w	r1, r1, r9
 801435e:	bf5b      	ittet	pl
 8014360:	f1cc 0520 	rsbpl	r5, ip, #32
 8014364:	436c      	mulpl	r4, r5
 8014366:	2500      	movmi	r5, #0
 8014368:	2520      	movpl	r5, #32
 801436a:	bf44      	itt	mi
 801436c:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014370:	4249      	negmi	r1, r1
 8014372:	9501      	str	r5, [sp, #4]
 8014374:	9b01      	ldr	r3, [sp, #4]
 8014376:	fb94 f5f1 	sdiv	r5, r4, r1
 801437a:	fb01 4415 	mls	r4, r1, r5, r4
 801437e:	bf54      	ite	pl
 8014380:	f04f 0901 	movpl.w	r9, #1
 8014384:	f04f 39ff 	movmi.w	r9, #4294967295
 8014388:	2c00      	cmp	r4, #0
 801438a:	bfb8      	it	lt
 801438c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014390:	449c      	add	ip, r3
 8014392:	44a8      	add	r8, r5
 8014394:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014398:	f8a7 8004 	strh.w	r8, [r7, #4]
 801439c:	f8a7 c006 	strh.w	ip, [r7, #6]
 80143a0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80143a4:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80143a8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80143ac:	bfb8      	it	lt
 80143ae:	1864      	addlt	r4, r4, r1
 80143b0:	ea58 0707 	orrs.w	r7, r8, r7
 80143b4:	eb0b 0309 	add.w	r3, fp, r9
 80143b8:	d011      	beq.n	80143de <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80143ba:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80143be:	f1b8 0f00 	cmp.w	r8, #0
 80143c2:	db0c      	blt.n	80143de <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80143c4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80143c6:	45b8      	cmp	r8, r7
 80143c8:	da09      	bge.n	80143de <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80143ca:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 80143ce:	45b8      	cmp	r8, r7
 80143d0:	bf3c      	itt	cc
 80143d2:	f10c 0708 	addcc.w	r7, ip, #8
 80143d6:	6107      	strcc	r7, [r0, #16]
 80143d8:	f108 0701 	add.w	r7, r8, #1
 80143dc:	6087      	str	r7, [r0, #8]
 80143de:	6907      	ldr	r7, [r0, #16]
 80143e0:	f04f 0c00 	mov.w	ip, #0
 80143e4:	b212      	sxth	r2, r2
 80143e6:	459e      	cmp	lr, r3
 80143e8:	803b      	strh	r3, [r7, #0]
 80143ea:	807a      	strh	r2, [r7, #2]
 80143ec:	f8a7 c004 	strh.w	ip, [r7, #4]
 80143f0:	f8a7 c006 	strh.w	ip, [r7, #6]
 80143f4:	442e      	add	r6, r5
 80143f6:	d04d      	beq.n	8014494 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 80143f8:	9f04      	ldr	r7, [sp, #16]
 80143fa:	1bbf      	subs	r7, r7, r6
 80143fc:	443d      	add	r5, r7
 80143fe:	016d      	lsls	r5, r5, #5
 8014400:	fb95 f8f1 	sdiv	r8, r5, r1
 8014404:	fb01 5518 	mls	r5, r1, r8, r5
 8014408:	4565      	cmp	r5, ip
 801440a:	bfb8      	it	lt
 801440c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014410:	f108 0701 	add.w	r7, r8, #1
 8014414:	bfb8      	it	lt
 8014416:	186d      	addlt	r5, r5, r1
 8014418:	1a64      	subs	r4, r4, r1
 801441a:	9703      	str	r7, [sp, #12]
 801441c:	f04f 0a00 	mov.w	sl, #0
 8014420:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014424:	1964      	adds	r4, r4, r5
 8014426:	bf58      	it	pl
 8014428:	9f03      	ldrpl	r7, [sp, #12]
 801442a:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801442e:	bf48      	it	mi
 8014430:	4647      	movmi	r7, r8
 8014432:	44bb      	add	fp, r7
 8014434:	f8ac b004 	strh.w	fp, [ip, #4]
 8014438:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801443c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014440:	f8ac b006 	strh.w	fp, [ip, #6]
 8014444:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014448:	443e      	add	r6, r7
 801444a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801444e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014452:	bf58      	it	pl
 8014454:	1a64      	subpl	r4, r4, r1
 8014456:	ea5b 0707 	orrs.w	r7, fp, r7
 801445a:	444b      	add	r3, r9
 801445c:	d011      	beq.n	8014482 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801445e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014462:	f1bb 0f00 	cmp.w	fp, #0
 8014466:	db0c      	blt.n	8014482 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014468:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 801446a:	45bb      	cmp	fp, r7
 801446c:	da09      	bge.n	8014482 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801446e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014472:	45bb      	cmp	fp, r7
 8014474:	bf3c      	itt	cc
 8014476:	f10c 0708 	addcc.w	r7, ip, #8
 801447a:	6107      	strcc	r7, [r0, #16]
 801447c:	f10b 0701 	add.w	r7, fp, #1
 8014480:	6087      	str	r7, [r0, #8]
 8014482:	6907      	ldr	r7, [r0, #16]
 8014484:	459e      	cmp	lr, r3
 8014486:	803b      	strh	r3, [r7, #0]
 8014488:	807a      	strh	r2, [r7, #2]
 801448a:	f8a7 a004 	strh.w	sl, [r7, #4]
 801448e:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014492:	d1c5      	bne.n	8014420 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014494:	9b04      	ldr	r3, [sp, #16]
 8014496:	1b9e      	subs	r6, r3, r6
 8014498:	6903      	ldr	r3, [r0, #16]
 801449a:	889a      	ldrh	r2, [r3, #4]
 801449c:	4432      	add	r2, r6
 801449e:	809a      	strh	r2, [r3, #4]
 80144a0:	9a02      	ldr	r2, [sp, #8]
 80144a2:	f102 0c20 	add.w	ip, r2, #32
 80144a6:	9a01      	ldr	r2, [sp, #4]
 80144a8:	ebac 0c02 	sub.w	ip, ip, r2
 80144ac:	88da      	ldrh	r2, [r3, #6]
 80144ae:	fb06 260c 	mla	r6, r6, ip, r2
 80144b2:	80de      	strh	r6, [r3, #6]
 80144b4:	f7ff bba9 	b.w	8013c0a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080144b8 <_ZN8touchgfx7Outline6lineToEii>:
 80144b8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80144ba:	079b      	lsls	r3, r3, #30
 80144bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80144be:	460e      	mov	r6, r1
 80144c0:	4615      	mov	r5, r2
 80144c2:	d511      	bpl.n	80144e8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80144c4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 80144c8:	ea86 0701 	eor.w	r7, r6, r1
 80144cc:	ea85 0302 	eor.w	r3, r5, r2
 80144d0:	433b      	orrs	r3, r7
 80144d2:	d009      	beq.n	80144e8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80144d4:	4633      	mov	r3, r6
 80144d6:	9500      	str	r5, [sp, #0]
 80144d8:	f7ff fb3e 	bl	8013b58 <_ZN8touchgfx7Outline10renderLineEiiii>
 80144dc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80144de:	e9c0 6505 	strd	r6, r5, [r0, #20]
 80144e2:	f043 0301 	orr.w	r3, r3, #1
 80144e6:	6243      	str	r3, [r0, #36]	@ 0x24
 80144e8:	b003      	add	sp, #12
 80144ea:	bdf0      	pop	{r4, r5, r6, r7, pc}

080144ec <_ZN8touchgfx7Outline6moveToEii>:
 80144ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80144ee:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80144f0:	4615      	mov	r5, r2
 80144f2:	079a      	lsls	r2, r3, #30
 80144f4:	4604      	mov	r4, r0
 80144f6:	460e      	mov	r6, r1
 80144f8:	d401      	bmi.n	80144fe <_ZN8touchgfx7Outline6moveToEii+0x12>
 80144fa:	f7ff faf9 	bl	8013af0 <_ZN8touchgfx7Outline5resetEv>
 80144fe:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8014500:	07db      	lsls	r3, r3, #31
 8014502:	d504      	bpl.n	801450e <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014504:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014508:	4620      	mov	r0, r4
 801450a:	f7ff ffd5 	bl	80144b8 <_ZN8touchgfx7Outline6lineToEii>
 801450e:	6923      	ldr	r3, [r4, #16]
 8014510:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014514:	1170      	asrs	r0, r6, #5
 8014516:	4290      	cmp	r0, r2
 8014518:	ea4f 1165 	mov.w	r1, r5, asr #5
 801451c:	d103      	bne.n	8014526 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801451e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014522:	4291      	cmp	r1, r2
 8014524:	d01a      	beq.n	801455c <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014526:	88df      	ldrh	r7, [r3, #6]
 8014528:	889a      	ldrh	r2, [r3, #4]
 801452a:	433a      	orrs	r2, r7
 801452c:	d010      	beq.n	8014550 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801452e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014532:	2a00      	cmp	r2, #0
 8014534:	db0c      	blt.n	8014550 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014536:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8014538:	42ba      	cmp	r2, r7
 801453a:	da09      	bge.n	8014550 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801453c:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8014540:	42ba      	cmp	r2, r7
 8014542:	bf38      	it	cc
 8014544:	3308      	addcc	r3, #8
 8014546:	f102 0201 	add.w	r2, r2, #1
 801454a:	bf38      	it	cc
 801454c:	6123      	strcc	r3, [r4, #16]
 801454e:	60a2      	str	r2, [r4, #8]
 8014550:	6923      	ldr	r3, [r4, #16]
 8014552:	2200      	movs	r2, #0
 8014554:	8018      	strh	r0, [r3, #0]
 8014556:	8059      	strh	r1, [r3, #2]
 8014558:	809a      	strh	r2, [r3, #4]
 801455a:	80da      	strh	r2, [r3, #6]
 801455c:	6166      	str	r6, [r4, #20]
 801455e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8014562:	6225      	str	r5, [r4, #32]
 8014564:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014566 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014566:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801456a:	b0d0      	sub	sp, #320	@ 0x140
 801456c:	466c      	mov	r4, sp
 801456e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014572:	4627      	mov	r7, r4
 8014574:	1a0d      	subs	r5, r1, r0
 8014576:	2d48      	cmp	r5, #72	@ 0x48
 8014578:	f100 0308 	add.w	r3, r0, #8
 801457c:	f340 80d5 	ble.w	801472a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014580:	112d      	asrs	r5, r5, #4
 8014582:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8014586:	f9b0 9000 	ldrsh.w	r9, [r0]
 801458a:	6816      	ldr	r6, [r2, #0]
 801458c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8014590:	6006      	str	r6, [r0, #0]
 8014592:	6856      	ldr	r6, [r2, #4]
 8014594:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014598:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801459c:	6046      	str	r6, [r0, #4]
 801459e:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80145a2:	f8a2 8002 	strh.w	r8, [r2, #2]
 80145a6:	f8a2 e004 	strh.w	lr, [r2, #4]
 80145aa:	f8a2 c006 	strh.w	ip, [r2, #6]
 80145ae:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80145b2:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80145b6:	4565      	cmp	r5, ip
 80145b8:	f1a1 0208 	sub.w	r2, r1, #8
 80145bc:	db06      	blt.n	80145cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80145be:	d119      	bne.n	80145f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80145c0:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80145c4:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 80145c8:	42ae      	cmp	r6, r5
 80145ca:	dd13      	ble.n	80145f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80145cc:	460e      	mov	r6, r1
 80145ce:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80145d2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80145d6:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 80145da:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 80145de:	601d      	str	r5, [r3, #0]
 80145e0:	6875      	ldr	r5, [r6, #4]
 80145e2:	605d      	str	r5, [r3, #4]
 80145e4:	f821 9c08 	strh.w	r9, [r1, #-8]
 80145e8:	f821 cc06 	strh.w	ip, [r1, #-6]
 80145ec:	f821 8c04 	strh.w	r8, [r1, #-4]
 80145f0:	f821 ec02 	strh.w	lr, [r1, #-2]
 80145f4:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80145f8:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80145fc:	42ae      	cmp	r6, r5
 80145fe:	db06      	blt.n	801460e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8014600:	d116      	bne.n	8014630 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014602:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014606:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801460a:	45ac      	cmp	ip, r5
 801460c:	da10      	bge.n	8014630 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801460e:	681d      	ldr	r5, [r3, #0]
 8014610:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014614:	6005      	str	r5, [r0, #0]
 8014616:	685d      	ldr	r5, [r3, #4]
 8014618:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801461c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014620:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014624:	6045      	str	r5, [r0, #4]
 8014626:	8146      	strh	r6, [r0, #10]
 8014628:	f8a0 e00c 	strh.w	lr, [r0, #12]
 801462c:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8014630:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014634:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014638:	4565      	cmp	r5, ip
 801463a:	db06      	blt.n	801464a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 801463c:	d119      	bne.n	8014672 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801463e:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8014642:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014646:	42ae      	cmp	r6, r5
 8014648:	da13      	bge.n	8014672 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801464a:	460e      	mov	r6, r1
 801464c:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014650:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014654:	6005      	str	r5, [r0, #0]
 8014656:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801465a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801465e:	6875      	ldr	r5, [r6, #4]
 8014660:	6045      	str	r5, [r0, #4]
 8014662:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014666:	f821 cc06 	strh.w	ip, [r1, #-6]
 801466a:	f821 8c04 	strh.w	r8, [r1, #-4]
 801466e:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014672:	3308      	adds	r3, #8
 8014674:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014678:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 801467c:	45e6      	cmp	lr, ip
 801467e:	dbf8      	blt.n	8014672 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014680:	d105      	bne.n	801468e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014682:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014686:	f9b0 5000 	ldrsh.w	r5, [r0]
 801468a:	42ae      	cmp	r6, r5
 801468c:	dbf1      	blt.n	8014672 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801468e:	4615      	mov	r5, r2
 8014690:	3a08      	subs	r2, #8
 8014692:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014696:	45b4      	cmp	ip, r6
 8014698:	dbf9      	blt.n	801468e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801469a:	d105      	bne.n	80146a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 801469c:	f9b0 8000 	ldrsh.w	r8, [r0]
 80146a0:	f9b2 6000 	ldrsh.w	r6, [r2]
 80146a4:	45b0      	cmp	r8, r6
 80146a6:	dbf2      	blt.n	801468e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80146a8:	4293      	cmp	r3, r2
 80146aa:	f1a5 0608 	sub.w	r6, r5, #8
 80146ae:	d816      	bhi.n	80146de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80146b0:	f8d6 c000 	ldr.w	ip, [r6]
 80146b4:	f9b3 a000 	ldrsh.w	sl, [r3]
 80146b8:	f8c3 c000 	str.w	ip, [r3]
 80146bc:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80146c0:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80146c4:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80146c8:	f8c3 c004 	str.w	ip, [r3, #4]
 80146cc:	f825 ac08 	strh.w	sl, [r5, #-8]
 80146d0:	f825 ec06 	strh.w	lr, [r5, #-6]
 80146d4:	f825 9c04 	strh.w	r9, [r5, #-4]
 80146d8:	f825 8c02 	strh.w	r8, [r5, #-2]
 80146dc:	e7c9      	b.n	8014672 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80146de:	f8d6 e000 	ldr.w	lr, [r6]
 80146e2:	f9b0 a000 	ldrsh.w	sl, [r0]
 80146e6:	f8c0 e000 	str.w	lr, [r0]
 80146ea:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80146ee:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80146f2:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80146f6:	f8c0 e004 	str.w	lr, [r0, #4]
 80146fa:	f825 ac08 	strh.w	sl, [r5, #-8]
 80146fe:	f825 cc06 	strh.w	ip, [r5, #-6]
 8014702:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014706:	f825 8c02 	strh.w	r8, [r5, #-2]
 801470a:	1acd      	subs	r5, r1, r3
 801470c:	1a16      	subs	r6, r2, r0
 801470e:	10ed      	asrs	r5, r5, #3
 8014710:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014714:	bfb5      	itete	lt
 8014716:	e9c4 0200 	strdlt	r0, r2, [r4]
 801471a:	e9c4 3100 	strdge	r3, r1, [r4]
 801471e:	460a      	movlt	r2, r1
 8014720:	4603      	movge	r3, r0
 8014722:	3408      	adds	r4, #8
 8014724:	4618      	mov	r0, r3
 8014726:	4611      	mov	r1, r2
 8014728:	e724      	b.n	8014574 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801472a:	4299      	cmp	r1, r3
 801472c:	d928      	bls.n	8014780 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801472e:	f1a3 0210 	sub.w	r2, r3, #16
 8014732:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014736:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 801473a:	45ac      	cmp	ip, r5
 801473c:	db06      	blt.n	801474c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801473e:	d11d      	bne.n	801477c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014740:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014744:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014748:	42ae      	cmp	r6, r5
 801474a:	da17      	bge.n	801477c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801474c:	4615      	mov	r5, r2
 801474e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8014752:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014756:	6116      	str	r6, [r2, #16]
 8014758:	686e      	ldr	r6, [r5, #4]
 801475a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801475e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8014762:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014766:	42a8      	cmp	r0, r5
 8014768:	6156      	str	r6, [r2, #20]
 801476a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801476e:	f8a2 800c 	strh.w	r8, [r2, #12]
 8014772:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014776:	f1a2 0208 	sub.w	r2, r2, #8
 801477a:	d1da      	bne.n	8014732 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 801477c:	3308      	adds	r3, #8
 801477e:	e7d4      	b.n	801472a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014780:	42bc      	cmp	r4, r7
 8014782:	d903      	bls.n	801478c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014784:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014788:	3c08      	subs	r4, #8
 801478a:	e6f3      	b.n	8014574 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801478c:	b050      	add	sp, #320	@ 0x140
 801478e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08014792 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8014792:	b510      	push	{r4, lr}
 8014794:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014796:	07da      	lsls	r2, r3, #31
 8014798:	4604      	mov	r4, r0
 801479a:	d507      	bpl.n	80147ac <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 801479c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80147a0:	f7ff fe8a 	bl	80144b8 <_ZN8touchgfx7Outline6lineToEii>
 80147a4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80147a6:	f023 0301 	bic.w	r3, r3, #1
 80147aa:	6243      	str	r3, [r0, #36]	@ 0x24
 80147ac:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80147ae:	079b      	lsls	r3, r3, #30
 80147b0:	d521      	bpl.n	80147f6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80147b2:	6923      	ldr	r3, [r4, #16]
 80147b4:	88d9      	ldrh	r1, [r3, #6]
 80147b6:	889a      	ldrh	r2, [r3, #4]
 80147b8:	430a      	orrs	r2, r1
 80147ba:	d010      	beq.n	80147de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80147bc:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80147c0:	2a00      	cmp	r2, #0
 80147c2:	db0c      	blt.n	80147de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80147c4:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80147c6:	428a      	cmp	r2, r1
 80147c8:	da09      	bge.n	80147de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80147ca:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80147ce:	4291      	cmp	r1, r2
 80147d0:	bf88      	it	hi
 80147d2:	3308      	addhi	r3, #8
 80147d4:	f102 0201 	add.w	r2, r2, #1
 80147d8:	bf88      	it	hi
 80147da:	6123      	strhi	r3, [r4, #16]
 80147dc:	60a2      	str	r2, [r4, #8]
 80147de:	68a1      	ldr	r1, [r4, #8]
 80147e0:	b129      	cbz	r1, 80147ee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80147e2:	6863      	ldr	r3, [r4, #4]
 80147e4:	4299      	cmp	r1, r3
 80147e6:	d802      	bhi.n	80147ee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80147e8:	68e0      	ldr	r0, [r4, #12]
 80147ea:	f7ff febc 	bl	8014566 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80147ee:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80147f0:	f023 0302 	bic.w	r3, r3, #2
 80147f4:	6263      	str	r3, [r4, #36]	@ 0x24
 80147f6:	68e0      	ldr	r0, [r4, #12]
 80147f8:	bd10      	pop	{r4, pc}
	...

080147fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80147fc:	4b02      	ldr	r3, [pc, #8]	@ (8014808 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80147fe:	6018      	str	r0, [r3, #0]
 8014800:	4b02      	ldr	r3, [pc, #8]	@ (801480c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8014802:	6019      	str	r1, [r3, #0]
 8014804:	4770      	bx	lr
 8014806:	bf00      	nop
 8014808:	20013f68 	.word	0x20013f68
 801480c:	20013f6c 	.word	0x20013f6c

08014810 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8014810:	4a02      	ldr	r2, [pc, #8]	@ (801481c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8014812:	2300      	movs	r3, #0
 8014814:	6013      	str	r3, [r2, #0]
 8014816:	4a02      	ldr	r2, [pc, #8]	@ (8014820 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014818:	6013      	str	r3, [r2, #0]
 801481a:	4770      	bx	lr
 801481c:	20013f68 	.word	0x20013f68
 8014820:	20013f6c 	.word	0x20013f6c

08014824 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014824:	4b01      	ldr	r3, [pc, #4]	@ (801482c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014826:	6818      	ldr	r0, [r3, #0]
 8014828:	4770      	bx	lr
 801482a:	bf00      	nop
 801482c:	20013f68 	.word	0x20013f68

08014830 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014830:	4b01      	ldr	r3, [pc, #4]	@ (8014838 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014832:	6818      	ldr	r0, [r3, #0]
 8014834:	4770      	bx	lr
 8014836:	bf00      	nop
 8014838:	20013f6c 	.word	0x20013f6c

0801483c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 801483c:	b510      	push	{r4, lr}
 801483e:	6803      	ldr	r3, [r0, #0]
 8014840:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014842:	460c      	mov	r4, r1
 8014844:	4798      	blx	r3
 8014846:	1b03      	subs	r3, r0, r4
 8014848:	4258      	negs	r0, r3
 801484a:	4158      	adcs	r0, r3
 801484c:	bd10      	pop	{r4, pc}
	...

08014850 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014850:	4b01      	ldr	r3, [pc, #4]	@ (8014858 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014852:	6019      	str	r1, [r3, #0]
 8014854:	4770      	bx	lr
 8014856:	bf00      	nop
 8014858:	20013f70 	.word	0x20013f70

0801485c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801485c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014860:	4696      	mov	lr, r2
 8014862:	4605      	mov	r5, r0
 8014864:	4614      	mov	r4, r2
 8014866:	460e      	mov	r6, r1
 8014868:	461f      	mov	r7, r3
 801486a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801486e:	b097      	sub	sp, #92	@ 0x5c
 8014870:	f10d 0c1c 	add.w	ip, sp, #28
 8014874:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014878:	f8de 3000 	ldr.w	r3, [lr]
 801487c:	f8cc 3000 	str.w	r3, [ip]
 8014880:	f104 0e14 	add.w	lr, r4, #20
 8014884:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014888:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801488c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014890:	f8de 3000 	ldr.w	r3, [lr]
 8014894:	f8cc 3000 	str.w	r3, [ip]
 8014898:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 801489c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80148a0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 80148a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80148a8:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 80148ac:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 80148b0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 80148b4:	f8de 3000 	ldr.w	r3, [lr]
 80148b8:	f8cc 3000 	str.w	r3, [ip]
 80148bc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80148be:	682b      	ldr	r3, [r5, #0]
 80148c0:	9201      	str	r2, [sp, #4]
 80148c2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80148c6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80148c8:	9200      	str	r2, [sp, #0]
 80148ca:	f8cd 8008 	str.w	r8, [sp, #8]
 80148ce:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 80148d2:	aa07      	add	r2, sp, #28
 80148d4:	463b      	mov	r3, r7
 80148d6:	4631      	mov	r1, r6
 80148d8:	4628      	mov	r0, r5
 80148da:	47d8      	blx	fp
 80148dc:	46a6      	mov	lr, r4
 80148de:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80148e2:	f10d 0c1c 	add.w	ip, sp, #28
 80148e6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80148ea:	f8de 3000 	ldr.w	r3, [lr]
 80148ee:	f8cc 3000 	str.w	r3, [ip]
 80148f2:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 80148f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80148fa:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80148fe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014902:	343c      	adds	r4, #60	@ 0x3c
 8014904:	f8de 3000 	ldr.w	r3, [lr]
 8014908:	f8cc 3000 	str.w	r3, [ip]
 801490c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801490e:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8014912:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014916:	6823      	ldr	r3, [r4, #0]
 8014918:	f8cc 3000 	str.w	r3, [ip]
 801491c:	682b      	ldr	r3, [r5, #0]
 801491e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014922:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8014924:	9201      	str	r2, [sp, #4]
 8014926:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8014928:	9200      	str	r2, [sp, #0]
 801492a:	f8cd 8008 	str.w	r8, [sp, #8]
 801492e:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 8014930:	aa07      	add	r2, sp, #28
 8014932:	463b      	mov	r3, r7
 8014934:	4631      	mov	r1, r6
 8014936:	4628      	mov	r0, r5
 8014938:	47a0      	blx	r4
 801493a:	b017      	add	sp, #92	@ 0x5c
 801493c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014940 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8014940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014944:	b08d      	sub	sp, #52	@ 0x34
 8014946:	4688      	mov	r8, r1
 8014948:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801494a:	f8d3 c000 	ldr.w	ip, [r3]
 801494e:	680f      	ldr	r7, [r1, #0]
 8014950:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8014954:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 8014958:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 801495c:	edd3 6a07 	vldr	s13, [r3, #28]
 8014960:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8014962:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 8014966:	f9b1 9000 	ldrsh.w	r9, [r1]
 801496a:	f9ba 1000 	ldrsh.w	r1, [sl]
 801496e:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8014972:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 8014976:	eba7 070c 	sub.w	r7, r7, ip
 801497a:	42bc      	cmp	r4, r7
 801497c:	bfa8      	it	ge
 801497e:	463c      	movge	r4, r7
 8014980:	ee07 4a90 	vmov	s15, r4
 8014984:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014988:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 801498c:	ee25 4a04 	vmul.f32	s8, s10, s8
 8014990:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014994:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014998:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801499c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80149a0:	eb09 0e0c 	add.w	lr, r9, ip
 80149a4:	4571      	cmp	r1, lr
 80149a6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80149aa:	ee32 1a05 	vadd.f32	s2, s4, s10
 80149ae:	ee36 0a84 	vadd.f32	s0, s13, s8
 80149b2:	ee61 1a87 	vmul.f32	s3, s3, s14
 80149b6:	ee22 2a07 	vmul.f32	s4, s4, s14
 80149ba:	f340 808d 	ble.w	8014ad8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80149be:	eba1 060e 	sub.w	r6, r1, lr
 80149c2:	fb96 f5f4 	sdiv	r5, r6, r4
 80149c6:	ee07 5a10 	vmov	s14, r5
 80149ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80149ce:	2d00      	cmp	r5, #0
 80149d0:	fb04 6615 	mls	r6, r4, r5, r6
 80149d4:	eea7 0a04 	vfma.f32	s0, s14, s8
 80149d8:	eee7 0a24 	vfma.f32	s1, s14, s9
 80149dc:	eea7 1a05 	vfma.f32	s2, s14, s10
 80149e0:	dd13      	ble.n	8014a0a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80149e2:	ee70 6a44 	vsub.f32	s13, s0, s8
 80149e6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80149ea:	eef5 6a40 	vcmp.f32	s13, #0.0
 80149ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80149f2:	bf18      	it	ne
 80149f4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80149f8:	ee31 2a45 	vsub.f32	s4, s2, s10
 80149fc:	bf08      	it	eq
 80149fe:	eeb0 7a67 	vmoveq.f32	s14, s15
 8014a02:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014a06:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014a0a:	fb05 f204 	mul.w	r2, r5, r4
 8014a0e:	1abf      	subs	r7, r7, r2
 8014a10:	4494      	add	ip, r2
 8014a12:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014a16:	4411      	add	r1, r2
 8014a18:	eb09 020c 	add.w	r2, r9, ip
 8014a1c:	443a      	add	r2, r7
 8014a1e:	b209      	sxth	r1, r1
 8014a20:	428a      	cmp	r2, r1
 8014a22:	bfc4      	itt	gt
 8014a24:	eba1 0209 	subgt.w	r2, r1, r9
 8014a28:	eba2 070c 	subgt.w	r7, r2, ip
 8014a2c:	2f00      	cmp	r7, #0
 8014a2e:	dd50      	ble.n	8014ad2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8014a30:	fb97 f1f4 	sdiv	r1, r7, r4
 8014a34:	fb04 7211 	mls	r2, r4, r1, r7
 8014a38:	b90a      	cbnz	r2, 8014a3e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014a3a:	3901      	subs	r1, #1
 8014a3c:	4622      	mov	r2, r4
 8014a3e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8014a42:	6840      	ldr	r0, [r0, #4]
 8014a44:	900b      	str	r0, [sp, #44]	@ 0x2c
 8014a46:	f8d0 a000 	ldr.w	sl, [r0]
 8014a4a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8014a4c:	9008      	str	r0, [sp, #32]
 8014a4e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 8014a52:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8014a54:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8014a58:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014a5c:	695b      	ldr	r3, [r3, #20]
 8014a5e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8014a60:	445b      	add	r3, fp
 8014a62:	eef0 6a42 	vmov.f32	s13, s4
 8014a66:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014a6a:	ee21 3a23 	vmul.f32	s6, s2, s7
 8014a6e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8014a72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014a76:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014a7a:	9307      	str	r3, [sp, #28]
 8014a7c:	ee17 7a90 	vmov	r7, s15
 8014a80:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014a84:	eeb0 7a61 	vmov.f32	s14, s3
 8014a88:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014a8c:	ee16 3a90 	vmov	r3, s13
 8014a90:	fb97 f7f4 	sdiv	r7, r7, r4
 8014a94:	ee17 ca90 	vmov	ip, s15
 8014a98:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014a9c:	fb9c fcf4 	sdiv	ip, ip, r4
 8014aa0:	fb0c 3306 	mla	r3, ip, r6, r3
 8014aa4:	9302      	str	r3, [sp, #8]
 8014aa6:	ee17 3a10 	vmov	r3, s14
 8014aaa:	44b6      	add	lr, r6
 8014aac:	fb04 e505 	mla	r5, r4, r5, lr
 8014ab0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014ab4:	fb07 3706 	mla	r7, r7, r6, r3
 8014ab8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014abc:	e9cd 4700 	strd	r4, r7, [sp]
 8014ac0:	2900      	cmp	r1, #0
 8014ac2:	bfcc      	ite	gt
 8014ac4:	46a1      	movgt	r9, r4
 8014ac6:	4691      	movle	r9, r2
 8014ac8:	eba9 0306 	sub.w	r3, r9, r6
 8014acc:	f8da 4008 	ldr.w	r4, [sl, #8]
 8014ad0:	47a0      	blx	r4
 8014ad2:	b00d      	add	sp, #52	@ 0x34
 8014ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ad8:	2500      	movs	r5, #0
 8014ada:	462e      	mov	r6, r5
 8014adc:	e799      	b.n	8014a12 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08014ae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ae4:	b0db      	sub	sp, #364	@ 0x16c
 8014ae6:	461d      	mov	r5, r3
 8014ae8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8014aec:	930a      	str	r3, [sp, #40]	@ 0x28
 8014aee:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8014af2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014af4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8014af8:	9310      	str	r3, [sp, #64]	@ 0x40
 8014afa:	6803      	ldr	r3, [r0, #0]
 8014afc:	910f      	str	r1, [sp, #60]	@ 0x3c
 8014afe:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8014b00:	9009      	str	r0, [sp, #36]	@ 0x24
 8014b02:	4614      	mov	r4, r2
 8014b04:	4629      	mov	r1, r5
 8014b06:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 8014b0a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 8014b0e:	47b8      	blx	r7
 8014b10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014b12:	6058      	str	r0, [r3, #4]
 8014b14:	2800      	cmp	r0, #0
 8014b16:	f000 83a1 	beq.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014b1a:	682b      	ldr	r3, [r5, #0]
 8014b1c:	9314      	str	r3, [sp, #80]	@ 0x50
 8014b1e:	686b      	ldr	r3, [r5, #4]
 8014b20:	9315      	str	r3, [sp, #84]	@ 0x54
 8014b22:	4bc4      	ldr	r3, [pc, #784]	@ (8014e34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014b24:	ed94 7a02 	vldr	s14, [r4, #8]
 8014b28:	7819      	ldrb	r1, [r3, #0]
 8014b2a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8014b2e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8014b32:	2900      	cmp	r1, #0
 8014b34:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014b38:	bf16      	itet	ne
 8014b3a:	4619      	movne	r1, r3
 8014b3c:	4611      	moveq	r1, r2
 8014b3e:	4613      	movne	r3, r2
 8014b40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014b44:	9116      	str	r1, [sp, #88]	@ 0x58
 8014b46:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 8014b4a:	f240 8387 	bls.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014b4e:	ed94 7a07 	vldr	s14, [r4, #28]
 8014b52:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014b56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014b5a:	f240 837f 	bls.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014b5e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 8014b62:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014b66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014b6a:	f240 8377 	bls.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014b6e:	6822      	ldr	r2, [r4, #0]
 8014b70:	4bb1      	ldr	r3, [pc, #708]	@ (8014e38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8014b72:	429a      	cmp	r2, r3
 8014b74:	f2c0 8372 	blt.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014b78:	49b0      	ldr	r1, [pc, #704]	@ (8014e3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8014b7a:	6963      	ldr	r3, [r4, #20]
 8014b7c:	428a      	cmp	r2, r1
 8014b7e:	f300 836d 	bgt.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014b82:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8014b86:	48ae      	ldr	r0, [pc, #696]	@ (8014e40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8014b88:	33ff      	adds	r3, #255	@ 0xff
 8014b8a:	4283      	cmp	r3, r0
 8014b8c:	f200 8366 	bhi.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014b90:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8014b92:	4dac      	ldr	r5, [pc, #688]	@ (8014e44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014b94:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8014b98:	33ff      	adds	r3, #255	@ 0xff
 8014b9a:	42ab      	cmp	r3, r5
 8014b9c:	f200 835e 	bhi.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014ba0:	6862      	ldr	r2, [r4, #4]
 8014ba2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8014ba6:	33ff      	adds	r3, #255	@ 0xff
 8014ba8:	4283      	cmp	r3, r0
 8014baa:	f200 8357 	bhi.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014bae:	69a1      	ldr	r1, [r4, #24]
 8014bb0:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8014bb4:	33ff      	adds	r3, #255	@ 0xff
 8014bb6:	4283      	cmp	r3, r0
 8014bb8:	f200 8350 	bhi.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014bbc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8014bbe:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8014bc2:	30ff      	adds	r0, #255	@ 0xff
 8014bc4:	42a8      	cmp	r0, r5
 8014bc6:	f200 8349 	bhi.w	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014bca:	428a      	cmp	r2, r1
 8014bcc:	f280 8110 	bge.w	8014df0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8014bd0:	429a      	cmp	r2, r3
 8014bd2:	f300 8119 	bgt.w	8014e08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8014bd6:	4299      	cmp	r1, r3
 8014bd8:	f280 811d 	bge.w	8014e16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8014bdc:	2502      	movs	r5, #2
 8014bde:	2701      	movs	r7, #1
 8014be0:	46a9      	mov	r9, r5
 8014be2:	46b8      	mov	r8, r7
 8014be4:	f04f 0a00 	mov.w	sl, #0
 8014be8:	4621      	mov	r1, r4
 8014bea:	a849      	add	r0, sp, #292	@ 0x124
 8014bec:	f004 f998 	bl	8018f20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8014bf0:	4622      	mov	r2, r4
 8014bf2:	4653      	mov	r3, sl
 8014bf4:	a949      	add	r1, sp, #292	@ 0x124
 8014bf6:	f8cd 9000 	str.w	r9, [sp]
 8014bfa:	a819      	add	r0, sp, #100	@ 0x64
 8014bfc:	f004 fac0 	bl	8019180 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014c00:	4622      	mov	r2, r4
 8014c02:	4653      	mov	r3, sl
 8014c04:	a949      	add	r1, sp, #292	@ 0x124
 8014c06:	f8cd 8000 	str.w	r8, [sp]
 8014c0a:	a829      	add	r0, sp, #164	@ 0xa4
 8014c0c:	f004 fab8 	bl	8019180 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014c10:	4643      	mov	r3, r8
 8014c12:	4622      	mov	r2, r4
 8014c14:	a949      	add	r1, sp, #292	@ 0x124
 8014c16:	f8cd 9000 	str.w	r9, [sp]
 8014c1a:	a839      	add	r0, sp, #228	@ 0xe4
 8014c1c:	f004 fab0 	bl	8019180 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014c20:	42af      	cmp	r7, r5
 8014c22:	bfb5      	itete	lt
 8014c24:	2300      	movlt	r3, #0
 8014c26:	2301      	movge	r3, #1
 8014c28:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8014c2a:	930e      	strge	r3, [sp, #56]	@ 0x38
 8014c2c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8014c2e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014c32:	af12      	add	r7, sp, #72	@ 0x48
 8014c34:	bfb9      	ittee	lt
 8014c36:	ad29      	addlt	r5, sp, #164	@ 0xa4
 8014c38:	ac19      	addlt	r4, sp, #100	@ 0x64
 8014c3a:	ad19      	addge	r5, sp, #100	@ 0x64
 8014c3c:	ac29      	addge	r4, sp, #164	@ 0xa4
 8014c3e:	e887 0003 	stmia.w	r7, {r0, r1}
 8014c42:	b928      	cbnz	r0, 8014c50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8014c44:	4b80      	ldr	r3, [pc, #512]	@ (8014e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8014c46:	6818      	ldr	r0, [r3, #0]
 8014c48:	6803      	ldr	r3, [r0, #0]
 8014c4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014c4c:	4798      	blx	r3
 8014c4e:	6038      	str	r0, [r7, #0]
 8014c50:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8014c52:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014c56:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014c5a:	930c      	str	r3, [sp, #48]	@ 0x30
 8014c5c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014c5e:	6963      	ldr	r3, [r4, #20]
 8014c60:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8014c62:	440b      	add	r3, r1
 8014c64:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014c68:	4408      	add	r0, r1
 8014c6a:	b200      	sxth	r0, r0
 8014c6c:	4283      	cmp	r3, r0
 8014c6e:	900d      	str	r0, [sp, #52]	@ 0x34
 8014c70:	f280 80dd 	bge.w	8014e2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8014c74:	428b      	cmp	r3, r1
 8014c76:	da08      	bge.n	8014c8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014c78:	2a00      	cmp	r2, #0
 8014c7a:	dd06      	ble.n	8014c8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014c7c:	1acb      	subs	r3, r1, r3
 8014c7e:	429a      	cmp	r2, r3
 8014c80:	f2c0 80e4 	blt.w	8014e4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8014c84:	2b00      	cmp	r3, #0
 8014c86:	f300 80e2 	bgt.w	8014e4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8014c8a:	6967      	ldr	r7, [r4, #20]
 8014c8c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014c8e:	443b      	add	r3, r7
 8014c90:	461f      	mov	r7, r3
 8014c92:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014c94:	1bdf      	subs	r7, r3, r7
 8014c96:	4297      	cmp	r7, r2
 8014c98:	bfa8      	it	ge
 8014c9a:	4617      	movge	r7, r2
 8014c9c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8014ca0:	2f00      	cmp	r7, #0
 8014ca2:	f340 8166 	ble.w	8014f72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8014ca6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8014ca8:	6829      	ldr	r1, [r5, #0]
 8014caa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014cae:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014cb2:	6820      	ldr	r0, [r4, #0]
 8014cb4:	4411      	add	r1, r2
 8014cb6:	4299      	cmp	r1, r3
 8014cb8:	dd1a      	ble.n	8014cf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014cba:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014cbe:	440b      	add	r3, r1
 8014cc0:	4402      	add	r2, r0
 8014cc2:	b21b      	sxth	r3, r3
 8014cc4:	429a      	cmp	r2, r3
 8014cc6:	dc13      	bgt.n	8014cf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014cc8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014cca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014ccc:	681b      	ldr	r3, [r3, #0]
 8014cce:	9206      	str	r2, [sp, #24]
 8014cd0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014cd2:	9205      	str	r2, [sp, #20]
 8014cd4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8014cd6:	9500      	str	r5, [sp, #0]
 8014cd8:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014cdc:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8014cde:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8014ce0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014ce4:	a912      	add	r1, sp, #72	@ 0x48
 8014ce6:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8014cea:	aa49      	add	r2, sp, #292	@ 0x124
 8014cec:	4623      	mov	r3, r4
 8014cee:	47c8      	blx	r9
 8014cf0:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014cf4:	441a      	add	r2, r3
 8014cf6:	6963      	ldr	r3, [r4, #20]
 8014cf8:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8014cfc:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8014d00:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8014d04:	68a1      	ldr	r1, [r4, #8]
 8014d06:	ed94 6a08 	vldr	s12, [r4, #32]
 8014d0a:	6022      	str	r2, [r4, #0]
 8014d0c:	3301      	adds	r3, #1
 8014d0e:	6163      	str	r3, [r4, #20]
 8014d10:	69a3      	ldr	r3, [r4, #24]
 8014d12:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014d16:	3b01      	subs	r3, #1
 8014d18:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8014d1c:	61a3      	str	r3, [r4, #24]
 8014d1e:	6923      	ldr	r3, [r4, #16]
 8014d20:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8014d24:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014d28:	edd4 6a07 	vldr	s13, [r4, #28]
 8014d2c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8014d30:	440b      	add	r3, r1
 8014d32:	68e1      	ldr	r1, [r4, #12]
 8014d34:	6123      	str	r3, [r4, #16]
 8014d36:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014d3a:	428b      	cmp	r3, r1
 8014d3c:	edc4 6a07 	vstr	s13, [r4, #28]
 8014d40:	db15      	blt.n	8014d6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8014d42:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8014d46:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014d4a:	3201      	adds	r2, #1
 8014d4c:	edc4 6a07 	vstr	s13, [r4, #28]
 8014d50:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8014d54:	6022      	str	r2, [r4, #0]
 8014d56:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014d5a:	1a5b      	subs	r3, r3, r1
 8014d5c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8014d60:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8014d64:	6123      	str	r3, [r4, #16]
 8014d66:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014d6a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8014d6e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014d72:	441a      	add	r2, r3
 8014d74:	696b      	ldr	r3, [r5, #20]
 8014d76:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8014d7a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8014d7e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8014d82:	68a9      	ldr	r1, [r5, #8]
 8014d84:	ed95 6a08 	vldr	s12, [r5, #32]
 8014d88:	602a      	str	r2, [r5, #0]
 8014d8a:	3301      	adds	r3, #1
 8014d8c:	616b      	str	r3, [r5, #20]
 8014d8e:	69ab      	ldr	r3, [r5, #24]
 8014d90:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014d94:	3b01      	subs	r3, #1
 8014d96:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8014d9a:	61ab      	str	r3, [r5, #24]
 8014d9c:	692b      	ldr	r3, [r5, #16]
 8014d9e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8014da2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014da6:	edd5 6a07 	vldr	s13, [r5, #28]
 8014daa:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8014dae:	440b      	add	r3, r1
 8014db0:	68e9      	ldr	r1, [r5, #12]
 8014db2:	612b      	str	r3, [r5, #16]
 8014db4:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014db8:	428b      	cmp	r3, r1
 8014dba:	edc5 6a07 	vstr	s13, [r5, #28]
 8014dbe:	db15      	blt.n	8014dec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8014dc0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8014dc4:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014dc8:	3201      	adds	r2, #1
 8014dca:	edc5 6a07 	vstr	s13, [r5, #28]
 8014dce:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8014dd2:	602a      	str	r2, [r5, #0]
 8014dd4:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014dd8:	1a5b      	subs	r3, r3, r1
 8014dda:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8014dde:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8014de2:	612b      	str	r3, [r5, #16]
 8014de4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014de8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8014dec:	3f01      	subs	r7, #1
 8014dee:	e757      	b.n	8014ca0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8014df0:	4299      	cmp	r1, r3
 8014df2:	dc13      	bgt.n	8014e1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8014df4:	429a      	cmp	r2, r3
 8014df6:	da14      	bge.n	8014e22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8014df8:	2502      	movs	r5, #2
 8014dfa:	2703      	movs	r7, #3
 8014dfc:	46a9      	mov	r9, r5
 8014dfe:	f04f 0800 	mov.w	r8, #0
 8014e02:	f04f 0a01 	mov.w	sl, #1
 8014e06:	e6ef      	b.n	8014be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014e08:	2501      	movs	r5, #1
 8014e0a:	2700      	movs	r7, #0
 8014e0c:	46a9      	mov	r9, r5
 8014e0e:	46b8      	mov	r8, r7
 8014e10:	f04f 0a02 	mov.w	sl, #2
 8014e14:	e6e8      	b.n	8014be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014e16:	2501      	movs	r5, #1
 8014e18:	2702      	movs	r7, #2
 8014e1a:	e6e1      	b.n	8014be0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8014e1c:	2500      	movs	r5, #0
 8014e1e:	2701      	movs	r7, #1
 8014e20:	e7f4      	b.n	8014e0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8014e22:	2702      	movs	r7, #2
 8014e24:	2503      	movs	r5, #3
 8014e26:	f04f 0900 	mov.w	r9, #0
 8014e2a:	46b8      	mov	r8, r7
 8014e2c:	e7e9      	b.n	8014e02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8014e2e:	4613      	mov	r3, r2
 8014e30:	e728      	b.n	8014c84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8014e32:	bf00      	nop
 8014e34:	20013f58 	.word	0x20013f58
 8014e38:	fffd8f01 	.word	0xfffd8f01
 8014e3c:	00027100 	.word	0x00027100
 8014e40:	0004e1ff 	.word	0x0004e1ff
 8014e44:	0004e1fe 	.word	0x0004e1fe
 8014e48:	20013f60 	.word	0x20013f60
 8014e4c:	4613      	mov	r3, r2
 8014e4e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8014e50:	9111      	str	r1, [sp, #68]	@ 0x44
 8014e52:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 8014e56:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 8014e5a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 8014e5c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 8014e60:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 8014e64:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8014e68:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8014e6c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8014e70:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8014e74:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8014e78:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8014e7c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8014e80:	469e      	mov	lr, r3
 8014e82:	469c      	mov	ip, r3
 8014e84:	f04f 0900 	mov.w	r9, #0
 8014e88:	f1bc 0f00 	cmp.w	ip, #0
 8014e8c:	d147      	bne.n	8014f1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8014e8e:	eb03 0c07 	add.w	ip, r3, r7
 8014e92:	1ad7      	subs	r7, r2, r3
 8014e94:	f1b9 0f00 	cmp.w	r9, #0
 8014e98:	d009      	beq.n	8014eae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014e9a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8014e9e:	9029      	str	r0, [sp, #164]	@ 0xa4
 8014ea0:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8014ea4:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8014ea8:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8014eac:	912d      	str	r1, [sp, #180]	@ 0xb4
 8014eae:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8014eb0:	9111      	str	r1, [sp, #68]	@ 0x44
 8014eb2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8014eb6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8014eba:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8014ebe:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8014ec2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8014ec6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8014eca:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8014ece:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8014ed2:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8014ed6:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8014eda:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8014ede:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8014ee2:	f04f 0800 	mov.w	r8, #0
 8014ee6:	f1be 0f00 	cmp.w	lr, #0
 8014eea:	d031      	beq.n	8014f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014eec:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8014eee:	4431      	add	r1, r6
 8014ef0:	4549      	cmp	r1, r9
 8014ef2:	4450      	add	r0, sl
 8014ef4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014ef8:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014efc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014f00:	db08      	blt.n	8014f14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8014f02:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014f06:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014f0a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014f0e:	3001      	adds	r0, #1
 8014f10:	eba1 0109 	sub.w	r1, r1, r9
 8014f14:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014f18:	f04f 0801 	mov.w	r8, #1
 8014f1c:	e7e3      	b.n	8014ee6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8014f1e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8014f20:	4431      	add	r1, r6
 8014f22:	4541      	cmp	r1, r8
 8014f24:	4450      	add	r0, sl
 8014f26:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014f2a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014f2e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014f32:	db08      	blt.n	8014f46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8014f34:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014f38:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014f3c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014f40:	3001      	adds	r0, #1
 8014f42:	eba1 0108 	sub.w	r1, r1, r8
 8014f46:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014f4a:	f04f 0901 	mov.w	r9, #1
 8014f4e:	e79b      	b.n	8014e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8014f50:	449c      	add	ip, r3
 8014f52:	1aff      	subs	r7, r7, r3
 8014f54:	f1b8 0f00 	cmp.w	r8, #0
 8014f58:	d009      	beq.n	8014f6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014f5a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8014f5e:	9019      	str	r0, [sp, #100]	@ 0x64
 8014f60:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8014f64:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8014f68:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8014f6c:	911d      	str	r1, [sp, #116]	@ 0x74
 8014f6e:	1ad2      	subs	r2, r2, r3
 8014f70:	e68b      	b.n	8014c8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014f72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014f74:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 8014f76:	2b00      	cmp	r3, #0
 8014f78:	f000 80d1 	beq.w	801511e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014f7c:	ad19      	add	r5, sp, #100	@ 0x64
 8014f7e:	ac39      	add	r4, sp, #228	@ 0xe4
 8014f80:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8014f82:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014f86:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014f8a:	930c      	str	r3, [sp, #48]	@ 0x30
 8014f8c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014f8e:	6963      	ldr	r3, [r4, #20]
 8014f90:	440b      	add	r3, r1
 8014f92:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014f96:	4408      	add	r0, r1
 8014f98:	b200      	sxth	r0, r0
 8014f9a:	4283      	cmp	r3, r0
 8014f9c:	900d      	str	r0, [sp, #52]	@ 0x34
 8014f9e:	f280 80c1 	bge.w	8015124 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8014fa2:	428b      	cmp	r3, r1
 8014fa4:	da08      	bge.n	8014fb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014fa6:	2a00      	cmp	r2, #0
 8014fa8:	dd06      	ble.n	8014fb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014faa:	1acb      	subs	r3, r1, r3
 8014fac:	429a      	cmp	r2, r3
 8014fae:	f2c0 80bb 	blt.w	8015128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8014fb2:	2b00      	cmp	r3, #0
 8014fb4:	f300 80b9 	bgt.w	801512a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014fb8:	6967      	ldr	r7, [r4, #20]
 8014fba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014fbc:	443b      	add	r3, r7
 8014fbe:	461f      	mov	r7, r3
 8014fc0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014fc2:	1bdf      	subs	r7, r3, r7
 8014fc4:	4297      	cmp	r7, r2
 8014fc6:	bfa8      	it	ge
 8014fc8:	4617      	movge	r7, r2
 8014fca:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8014fce:	2f00      	cmp	r7, #0
 8014fd0:	f340 813c 	ble.w	801524c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014fd4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8014fd6:	6829      	ldr	r1, [r5, #0]
 8014fd8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014fdc:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014fe0:	6820      	ldr	r0, [r4, #0]
 8014fe2:	4411      	add	r1, r2
 8014fe4:	4299      	cmp	r1, r3
 8014fe6:	dd1a      	ble.n	801501e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014fe8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014fec:	440b      	add	r3, r1
 8014fee:	4402      	add	r2, r0
 8014ff0:	b21b      	sxth	r3, r3
 8014ff2:	429a      	cmp	r2, r3
 8014ff4:	dc13      	bgt.n	801501e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014ff6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014ff8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014ffa:	681b      	ldr	r3, [r3, #0]
 8014ffc:	9206      	str	r2, [sp, #24]
 8014ffe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015000:	9205      	str	r2, [sp, #20]
 8015002:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015004:	9500      	str	r5, [sp, #0]
 8015006:	e9cd b203 	strd	fp, r2, [sp, #12]
 801500a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 801500c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801500e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015012:	a912      	add	r1, sp, #72	@ 0x48
 8015014:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8015018:	aa49      	add	r2, sp, #292	@ 0x124
 801501a:	4623      	mov	r3, r4
 801501c:	47c8      	blx	r9
 801501e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015022:	441a      	add	r2, r3
 8015024:	6963      	ldr	r3, [r4, #20]
 8015026:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 801502a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 801502e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8015032:	68a1      	ldr	r1, [r4, #8]
 8015034:	ed94 6a08 	vldr	s12, [r4, #32]
 8015038:	6022      	str	r2, [r4, #0]
 801503a:	3301      	adds	r3, #1
 801503c:	6163      	str	r3, [r4, #20]
 801503e:	69a3      	ldr	r3, [r4, #24]
 8015040:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015044:	3b01      	subs	r3, #1
 8015046:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 801504a:	61a3      	str	r3, [r4, #24]
 801504c:	6923      	ldr	r3, [r4, #16]
 801504e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8015052:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015056:	edd4 6a07 	vldr	s13, [r4, #28]
 801505a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801505e:	440b      	add	r3, r1
 8015060:	68e1      	ldr	r1, [r4, #12]
 8015062:	6123      	str	r3, [r4, #16]
 8015064:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015068:	428b      	cmp	r3, r1
 801506a:	edc4 6a07 	vstr	s13, [r4, #28]
 801506e:	db15      	blt.n	801509c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8015070:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8015074:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015078:	3201      	adds	r2, #1
 801507a:	edc4 6a07 	vstr	s13, [r4, #28]
 801507e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8015082:	6022      	str	r2, [r4, #0]
 8015084:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015088:	1a5b      	subs	r3, r3, r1
 801508a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 801508e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8015092:	6123      	str	r3, [r4, #16]
 8015094:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015098:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801509c:	e9d5 2300 	ldrd	r2, r3, [r5]
 80150a0:	441a      	add	r2, r3
 80150a2:	696b      	ldr	r3, [r5, #20]
 80150a4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 80150a8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 80150ac:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 80150b0:	68a9      	ldr	r1, [r5, #8]
 80150b2:	ed95 6a08 	vldr	s12, [r5, #32]
 80150b6:	602a      	str	r2, [r5, #0]
 80150b8:	3301      	adds	r3, #1
 80150ba:	616b      	str	r3, [r5, #20]
 80150bc:	69ab      	ldr	r3, [r5, #24]
 80150be:	ee37 7a27 	vadd.f32	s14, s14, s15
 80150c2:	3b01      	subs	r3, #1
 80150c4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 80150c8:	61ab      	str	r3, [r5, #24]
 80150ca:	692b      	ldr	r3, [r5, #16]
 80150cc:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 80150d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80150d4:	edd5 6a07 	vldr	s13, [r5, #28]
 80150d8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 80150dc:	440b      	add	r3, r1
 80150de:	68e9      	ldr	r1, [r5, #12]
 80150e0:	612b      	str	r3, [r5, #16]
 80150e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80150e6:	428b      	cmp	r3, r1
 80150e8:	edc5 6a07 	vstr	s13, [r5, #28]
 80150ec:	db15      	blt.n	801511a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80150ee:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 80150f2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80150f6:	3201      	adds	r2, #1
 80150f8:	edc5 6a07 	vstr	s13, [r5, #28]
 80150fc:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8015100:	602a      	str	r2, [r5, #0]
 8015102:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015106:	1a5b      	subs	r3, r3, r1
 8015108:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 801510c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8015110:	612b      	str	r3, [r5, #16]
 8015112:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015116:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801511a:	3f01      	subs	r7, #1
 801511c:	e757      	b.n	8014fce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801511e:	ad39      	add	r5, sp, #228	@ 0xe4
 8015120:	ac19      	add	r4, sp, #100	@ 0x64
 8015122:	e72d      	b.n	8014f80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015124:	4613      	mov	r3, r2
 8015126:	e744      	b.n	8014fb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8015128:	4613      	mov	r3, r2
 801512a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 801512e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8015130:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8015134:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8015138:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 801513c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8015140:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 8015144:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 8015148:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 801514c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 801514e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 8015152:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 8015156:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 801515a:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 801515e:	960e      	str	r6, [sp, #56]	@ 0x38
 8015160:	469e      	mov	lr, r3
 8015162:	461f      	mov	r7, r3
 8015164:	f04f 0900 	mov.w	r9, #0
 8015168:	2f00      	cmp	r7, #0
 801516a:	d146      	bne.n	80151fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801516c:	449c      	add	ip, r3
 801516e:	1ad7      	subs	r7, r2, r3
 8015170:	f1b9 0f00 	cmp.w	r9, #0
 8015174:	d009      	beq.n	801518a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015176:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 801517a:	9039      	str	r0, [sp, #228]	@ 0xe4
 801517c:	913d      	str	r1, [sp, #244]	@ 0xf4
 801517e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8015182:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 8015186:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 801518a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 801518c:	910e      	str	r1, [sp, #56]	@ 0x38
 801518e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8015192:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8015196:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801519a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 801519e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 80151a2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 80151a6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 80151aa:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 80151ae:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 80151b2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 80151b6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 80151ba:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 80151be:	f04f 0800 	mov.w	r8, #0
 80151c2:	f1be 0f00 	cmp.w	lr, #0
 80151c6:	d030      	beq.n	801522a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80151c8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 80151ca:	4431      	add	r1, r6
 80151cc:	4549      	cmp	r1, r9
 80151ce:	4450      	add	r0, sl
 80151d0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80151d4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80151d8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80151dc:	db08      	blt.n	80151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80151de:	ee77 7a85 	vadd.f32	s15, s15, s10
 80151e2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80151e6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80151ea:	3001      	adds	r0, #1
 80151ec:	eba1 0109 	sub.w	r1, r1, r9
 80151f0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80151f4:	f04f 0801 	mov.w	r8, #1
 80151f8:	e7e3      	b.n	80151c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80151fa:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 80151fc:	4431      	add	r1, r6
 80151fe:	4541      	cmp	r1, r8
 8015200:	4450      	add	r0, sl
 8015202:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015206:	ee77 7a84 	vadd.f32	s15, s15, s8
 801520a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801520e:	db08      	blt.n	8015222 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8015210:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015214:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015218:	ee77 7a86 	vadd.f32	s15, s15, s12
 801521c:	3001      	adds	r0, #1
 801521e:	eba1 0108 	sub.w	r1, r1, r8
 8015222:	3f01      	subs	r7, #1
 8015224:	f04f 0901 	mov.w	r9, #1
 8015228:	e79e      	b.n	8015168 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801522a:	449c      	add	ip, r3
 801522c:	1aff      	subs	r7, r7, r3
 801522e:	f1b8 0f00 	cmp.w	r8, #0
 8015232:	d009      	beq.n	8015248 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8015234:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8015238:	9019      	str	r0, [sp, #100]	@ 0x64
 801523a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 801523e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8015242:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8015246:	911d      	str	r1, [sp, #116]	@ 0x74
 8015248:	1ad2      	subs	r2, r2, r3
 801524a:	e6b5      	b.n	8014fb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801524c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801524e:	681b      	ldr	r3, [r3, #0]
 8015250:	b923      	cbnz	r3, 801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015252:	4b04      	ldr	r3, [pc, #16]	@ (8015264 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015254:	6818      	ldr	r0, [r3, #0]
 8015256:	6803      	ldr	r3, [r0, #0]
 8015258:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801525a:	4798      	blx	r3
 801525c:	b05b      	add	sp, #364	@ 0x16c
 801525e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015262:	bf00      	nop
 8015264:	20013f60 	.word	0x20013f60

08015268 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8015268:	b570      	push	{r4, r5, r6, lr}
 801526a:	4604      	mov	r4, r0
 801526c:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8015270:	9805      	ldr	r0, [sp, #20]
 8015272:	6061      	str	r1, [r4, #4]
 8015274:	2500      	movs	r5, #0
 8015276:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801527a:	8263      	strh	r3, [r4, #18]
 801527c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015280:	8025      	strh	r5, [r4, #0]
 8015282:	7221      	strb	r1, [r4, #8]
 8015284:	7266      	strb	r6, [r4, #9]
 8015286:	60e0      	str	r0, [r4, #12]
 8015288:	8222      	strh	r2, [r4, #16]
 801528a:	82a3      	strh	r3, [r4, #20]
 801528c:	82e5      	strh	r5, [r4, #22]
 801528e:	8325      	strh	r5, [r4, #24]
 8015290:	8365      	strh	r5, [r4, #26]
 8015292:	83a5      	strh	r5, [r4, #28]
 8015294:	83e5      	strh	r5, [r4, #30]
 8015296:	8425      	strh	r5, [r4, #32]
 8015298:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 801529c:	b32e      	cbz	r6, 80152ea <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801529e:	6803      	ldr	r3, [r0, #0]
 80152a0:	695b      	ldr	r3, [r3, #20]
 80152a2:	4798      	blx	r3
 80152a4:	4606      	mov	r6, r0
 80152a6:	b300      	cbz	r0, 80152ea <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80152a8:	68e0      	ldr	r0, [r4, #12]
 80152aa:	6803      	ldr	r3, [r0, #0]
 80152ac:	4631      	mov	r1, r6
 80152ae:	68db      	ldr	r3, [r3, #12]
 80152b0:	4798      	blx	r3
 80152b2:	4605      	mov	r5, r0
 80152b4:	b1c8      	cbz	r0, 80152ea <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80152b6:	7b43      	ldrb	r3, [r0, #13]
 80152b8:	7a82      	ldrb	r2, [r0, #10]
 80152ba:	005b      	lsls	r3, r3, #1
 80152bc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80152c0:	4313      	orrs	r3, r2
 80152c2:	8423      	strh	r3, [r4, #32]
 80152c4:	7a63      	ldrb	r3, [r4, #9]
 80152c6:	2b06      	cmp	r3, #6
 80152c8:	d10f      	bne.n	80152ea <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80152ca:	68e0      	ldr	r0, [r4, #12]
 80152cc:	6803      	ldr	r3, [r0, #0]
 80152ce:	462a      	mov	r2, r5
 80152d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80152d2:	4631      	mov	r1, r6
 80152d4:	4798      	blx	r3
 80152d6:	7b6b      	ldrb	r3, [r5, #13]
 80152d8:	005b      	lsls	r3, r3, #1
 80152da:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80152de:	7aab      	ldrb	r3, [r5, #10]
 80152e0:	4313      	orrs	r3, r2
 80152e2:	4418      	add	r0, r3
 80152e4:	8c23      	ldrh	r3, [r4, #32]
 80152e6:	4418      	add	r0, r3
 80152e8:	8420      	strh	r0, [r4, #32]
 80152ea:	4620      	mov	r0, r4
 80152ec:	bd70      	pop	{r4, r5, r6, pc}

080152ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80152ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152f2:	2400      	movs	r4, #0
 80152f4:	b085      	sub	sp, #20
 80152f6:	4681      	mov	r9, r0
 80152f8:	4688      	mov	r8, r1
 80152fa:	4692      	mov	sl, r2
 80152fc:	469b      	mov	fp, r3
 80152fe:	4627      	mov	r7, r4
 8015300:	4625      	mov	r5, r4
 8015302:	4626      	mov	r6, r4
 8015304:	4554      	cmp	r4, sl
 8015306:	da2a      	bge.n	801535e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015308:	2300      	movs	r3, #0
 801530a:	9303      	str	r3, [sp, #12]
 801530c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015310:	429d      	cmp	r5, r3
 8015312:	d004      	beq.n	801531e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015314:	f242 030b 	movw	r3, #8203	@ 0x200b
 8015318:	429d      	cmp	r5, r3
 801531a:	bf18      	it	ne
 801531c:	462f      	movne	r7, r5
 801531e:	ab03      	add	r3, sp, #12
 8015320:	4642      	mov	r2, r8
 8015322:	4659      	mov	r1, fp
 8015324:	4648      	mov	r0, r9
 8015326:	f003 fc11 	bl	8018b4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801532a:	4605      	mov	r5, r0
 801532c:	b1b8      	cbz	r0, 801535e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801532e:	280a      	cmp	r0, #10
 8015330:	d015      	beq.n	801535e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015332:	9a03      	ldr	r2, [sp, #12]
 8015334:	b18a      	cbz	r2, 801535a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8015336:	7b50      	ldrb	r0, [r2, #13]
 8015338:	7a93      	ldrb	r3, [r2, #10]
 801533a:	8895      	ldrh	r5, [r2, #4]
 801533c:	0040      	lsls	r0, r0, #1
 801533e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8015342:	4303      	orrs	r3, r0
 8015344:	9301      	str	r3, [sp, #4]
 8015346:	f8d8 3000 	ldr.w	r3, [r8]
 801534a:	4639      	mov	r1, r7
 801534c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801534e:	4640      	mov	r0, r8
 8015350:	4798      	blx	r3
 8015352:	9b01      	ldr	r3, [sp, #4]
 8015354:	4418      	add	r0, r3
 8015356:	4406      	add	r6, r0
 8015358:	b2b6      	uxth	r6, r6
 801535a:	3401      	adds	r4, #1
 801535c:	e7d2      	b.n	8015304 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801535e:	4630      	mov	r0, r6
 8015360:	b005      	add	sp, #20
 8015362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015366 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8015366:	2a02      	cmp	r2, #2
 8015368:	b530      	push	{r4, r5, lr}
 801536a:	d011      	beq.n	8015390 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801536c:	2a03      	cmp	r2, #3
 801536e:	d01c      	beq.n	80153aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8015370:	2a01      	cmp	r2, #1
 8015372:	d10c      	bne.n	801538e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015374:	888b      	ldrh	r3, [r1, #4]
 8015376:	8801      	ldrh	r1, [r0, #0]
 8015378:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801537c:	8844      	ldrh	r4, [r0, #2]
 801537e:	8004      	strh	r4, [r0, #0]
 8015380:	1a5b      	subs	r3, r3, r1
 8015382:	1a9b      	subs	r3, r3, r2
 8015384:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015388:	8043      	strh	r3, [r0, #2]
 801538a:	8081      	strh	r1, [r0, #4]
 801538c:	80c2      	strh	r2, [r0, #6]
 801538e:	bd30      	pop	{r4, r5, pc}
 8015390:	88cb      	ldrh	r3, [r1, #6]
 8015392:	8842      	ldrh	r2, [r0, #2]
 8015394:	1a9b      	subs	r3, r3, r2
 8015396:	88c2      	ldrh	r2, [r0, #6]
 8015398:	1a9b      	subs	r3, r3, r2
 801539a:	888a      	ldrh	r2, [r1, #4]
 801539c:	8801      	ldrh	r1, [r0, #0]
 801539e:	8043      	strh	r3, [r0, #2]
 80153a0:	1a52      	subs	r2, r2, r1
 80153a2:	8881      	ldrh	r1, [r0, #4]
 80153a4:	1a52      	subs	r2, r2, r1
 80153a6:	8002      	strh	r2, [r0, #0]
 80153a8:	e7f1      	b.n	801538e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80153aa:	88cb      	ldrh	r3, [r1, #6]
 80153ac:	8841      	ldrh	r1, [r0, #2]
 80153ae:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80153b2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80153b6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80153ba:	8045      	strh	r5, [r0, #2]
 80153bc:	1a5b      	subs	r3, r3, r1
 80153be:	1a9b      	subs	r3, r3, r2
 80153c0:	8003      	strh	r3, [r0, #0]
 80153c2:	8082      	strh	r2, [r0, #4]
 80153c4:	80c4      	strh	r4, [r0, #6]
 80153c6:	e7e2      	b.n	801538e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080153c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80153c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153cc:	b09f      	sub	sp, #124	@ 0x7c
 80153ce:	920f      	str	r2, [sp, #60]	@ 0x3c
 80153d0:	9312      	str	r3, [sp, #72]	@ 0x48
 80153d2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80153d4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80153d6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80153d8:	8812      	ldrh	r2, [r2, #0]
 80153da:	889b      	ldrh	r3, [r3, #4]
 80153dc:	900e      	str	r0, [sp, #56]	@ 0x38
 80153de:	4413      	add	r3, r2
 80153e0:	6828      	ldr	r0, [r5, #0]
 80153e2:	9117      	str	r1, [sp, #92]	@ 0x5c
 80153e4:	b21b      	sxth	r3, r3
 80153e6:	9311      	str	r3, [sp, #68]	@ 0x44
 80153e8:	6803      	ldr	r3, [r0, #0]
 80153ea:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 80153ee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80153f0:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 80153f4:	4798      	blx	r3
 80153f6:	682b      	ldr	r3, [r5, #0]
 80153f8:	9013      	str	r0, [sp, #76]	@ 0x4c
 80153fa:	7b1a      	ldrb	r2, [r3, #12]
 80153fc:	7adb      	ldrb	r3, [r3, #11]
 80153fe:	9215      	str	r2, [sp, #84]	@ 0x54
 8015400:	9316      	str	r3, [sp, #88]	@ 0x58
 8015402:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8015406:	2c00      	cmp	r4, #0
 8015408:	d067      	beq.n	80154da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801540a:	7c2b      	ldrb	r3, [r5, #16]
 801540c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801540e:	2b06      	cmp	r3, #6
 8015410:	bf14      	ite	ne
 8015412:	2301      	movne	r3, #1
 8015414:	2302      	moveq	r3, #2
 8015416:	4413      	add	r3, r2
 8015418:	f04f 0900 	mov.w	r9, #0
 801541c:	9310      	str	r3, [sp, #64]	@ 0x40
 801541e:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8015422:	464c      	mov	r4, r9
 8015424:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8015428:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801542a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801542c:	4293      	cmp	r3, r2
 801542e:	f280 808b 	bge.w	8015548 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8015432:	2300      	movs	r3, #0
 8015434:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8015438:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 801543c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015440:	429c      	cmp	r4, r3
 8015442:	d006      	beq.n	8015452 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8015444:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015446:	f242 020b 	movw	r2, #8203	@ 0x200b
 801544a:	4294      	cmp	r4, r2
 801544c:	bf18      	it	ne
 801544e:	4623      	movne	r3, r4
 8015450:	930c      	str	r3, [sp, #48]	@ 0x30
 8015452:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015454:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8015456:	682a      	ldr	r2, [r5, #0]
 8015458:	428b      	cmp	r3, r1
 801545a:	db40      	blt.n	80154de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801545c:	6813      	ldr	r3, [r2, #0]
 801545e:	4610      	mov	r0, r2
 8015460:	695b      	ldr	r3, [r3, #20]
 8015462:	4798      	blx	r3
 8015464:	4604      	mov	r4, r0
 8015466:	6828      	ldr	r0, [r5, #0]
 8015468:	6803      	ldr	r3, [r0, #0]
 801546a:	aa1d      	add	r2, sp, #116	@ 0x74
 801546c:	689f      	ldr	r7, [r3, #8]
 801546e:	4621      	mov	r1, r4
 8015470:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8015474:	47b8      	blx	r7
 8015476:	901c      	str	r0, [sp, #112]	@ 0x70
 8015478:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801547c:	429c      	cmp	r4, r3
 801547e:	f000 80ea 	beq.w	8015656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015482:	f242 030b 	movw	r3, #8203	@ 0x200b
 8015486:	429c      	cmp	r4, r3
 8015488:	f000 80e5 	beq.w	8015656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801548c:	2c00      	cmp	r4, #0
 801548e:	f000 810c 	beq.w	80156aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8015492:	2c0a      	cmp	r4, #10
 8015494:	d05e      	beq.n	8015554 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8015496:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8015498:	b36a      	cbz	r2, 80154f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801549a:	8894      	ldrh	r4, [r2, #4]
 801549c:	f1bb 0f00 	cmp.w	fp, #0
 80154a0:	d03a      	beq.n	8015518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 80154a2:	f892 900d 	ldrb.w	r9, [r2, #13]
 80154a6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80154aa:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 80154ae:	f892 900a 	ldrb.w	r9, [r2, #10]
 80154b2:	f1bb 0f01 	cmp.w	fp, #1
 80154b6:	ea49 0903 	orr.w	r9, r9, r3
 80154ba:	d133      	bne.n	8015524 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 80154bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80154be:	eba6 0609 	sub.w	r6, r6, r9
 80154c2:	2b00      	cmp	r3, #0
 80154c4:	d14d      	bne.n	8015562 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80154c6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80154c8:	eb09 0306 	add.w	r3, r9, r6
 80154cc:	4413      	add	r3, r2
 80154ce:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80154d0:	f9b2 2000 	ldrsh.w	r2, [r2]
 80154d4:	4293      	cmp	r3, r2
 80154d6:	da4e      	bge.n	8015576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80154d8:	e036      	b.n	8015548 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80154da:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 80154dc:	e79c      	b.n	8015418 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 80154de:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 80154e2:	9301      	str	r3, [sp, #4]
 80154e4:	ab1d      	add	r3, sp, #116	@ 0x74
 80154e6:	9300      	str	r3, [sp, #0]
 80154e8:	4659      	mov	r1, fp
 80154ea:	ab1c      	add	r3, sp, #112	@ 0x70
 80154ec:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 80154ee:	f003 fb76 	bl	8018bde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80154f2:	4604      	mov	r4, r0
 80154f4:	e7c0      	b.n	8015478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80154f6:	6828      	ldr	r0, [r5, #0]
 80154f8:	6803      	ldr	r3, [r0, #0]
 80154fa:	691b      	ldr	r3, [r3, #16]
 80154fc:	4798      	blx	r3
 80154fe:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015502:	4298      	cmp	r0, r3
 8015504:	f000 80a7 	beq.w	8015656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015508:	f242 030b 	movw	r3, #8203	@ 0x200b
 801550c:	4298      	cmp	r0, r3
 801550e:	f000 80a2 	beq.w	8015656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015512:	f1bb 0f00 	cmp.w	fp, #0
 8015516:	d100      	bne.n	801551a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8015518:	444e      	add	r6, r9
 801551a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801551c:	2a00      	cmp	r2, #0
 801551e:	d1c0      	bne.n	80154a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8015520:	4691      	mov	r9, r2
 8015522:	e098      	b.n	8015656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015524:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015526:	2b00      	cmp	r3, #0
 8015528:	f000 80c1 	beq.w	80156ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 801552c:	f1bb 0f00 	cmp.w	fp, #0
 8015530:	d117      	bne.n	8015562 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8015532:	6828      	ldr	r0, [r5, #0]
 8015534:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015536:	6803      	ldr	r3, [r0, #0]
 8015538:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801553a:	4798      	blx	r3
 801553c:	4406      	add	r6, r0
 801553e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8015540:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015542:	1af3      	subs	r3, r6, r3
 8015544:	4293      	cmp	r3, r2
 8015546:	dd16      	ble.n	8015576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8015548:	2c00      	cmp	r4, #0
 801554a:	f000 80ae 	beq.w	80156aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 801554e:	2c0a      	cmp	r4, #10
 8015550:	f040 809c 	bne.w	801568c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 8015554:	240a      	movs	r4, #10
 8015556:	fab4 f084 	clz	r0, r4
 801555a:	0940      	lsrs	r0, r0, #5
 801555c:	b01f      	add	sp, #124	@ 0x7c
 801555e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015562:	6828      	ldr	r0, [r5, #0]
 8015564:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015566:	6803      	ldr	r3, [r0, #0]
 8015568:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801556a:	4798      	blx	r3
 801556c:	f1bb 0f01 	cmp.w	fp, #1
 8015570:	eba6 0600 	sub.w	r6, r6, r0
 8015574:	d0a7      	beq.n	80154c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015576:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8015578:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801557a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801557e:	f9b3 8000 	ldrsh.w	r8, [r3]
 8015582:	7b43      	ldrb	r3, [r0, #13]
 8015584:	015b      	lsls	r3, r3, #5
 8015586:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801558a:	7983      	ldrb	r3, [r0, #6]
 801558c:	4431      	add	r1, r6
 801558e:	4313      	orrs	r3, r2
 8015590:	440b      	add	r3, r1
 8015592:	4543      	cmp	r3, r8
 8015594:	db5f      	blt.n	8015656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015596:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015598:	4299      	cmp	r1, r3
 801559a:	da5c      	bge.n	8015656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801559c:	6828      	ldr	r0, [r5, #0]
 801559e:	6803      	ldr	r3, [r0, #0]
 80155a0:	45b0      	cmp	r8, r6
 80155a2:	bfc8      	it	gt
 80155a4:	eba8 0806 	subgt.w	r8, r8, r6
 80155a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80155aa:	bfcc      	ite	gt
 80155ac:	fa1f f888 	uxthgt.w	r8, r8
 80155b0:	f04f 0800 	movle.w	r8, #0
 80155b4:	4798      	blx	r3
 80155b6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80155b8:	7b53      	ldrb	r3, [r2, #13]
 80155ba:	00d9      	lsls	r1, r3, #3
 80155bc:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 80155c0:	7a11      	ldrb	r1, [r2, #8]
 80155c2:	4339      	orrs	r1, r7
 80155c4:	065f      	lsls	r7, r3, #25
 80155c6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80155c8:	bf44      	itt	mi
 80155ca:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 80155ce:	b209      	sxthmi	r1, r1
 80155d0:	19c7      	adds	r7, r0, r7
 80155d2:	1a7f      	subs	r7, r7, r1
 80155d4:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 80155d6:	b2bf      	uxth	r7, r7
 80155d8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80155dc:	fa0f fa87 	sxth.w	sl, r7
 80155e0:	4551      	cmp	r1, sl
 80155e2:	dd3c      	ble.n	801565e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 80155e4:	011b      	lsls	r3, r3, #4
 80155e6:	79d0      	ldrb	r0, [r2, #7]
 80155e8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80155ec:	4303      	orrs	r3, r0
 80155ee:	449a      	add	sl, r3
 80155f0:	4551      	cmp	r1, sl
 80155f2:	dc30      	bgt.n	8015656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80155f4:	1bcf      	subs	r7, r1, r7
 80155f6:	b23f      	sxth	r7, r7
 80155f8:	468a      	mov	sl, r1
 80155fa:	9219      	str	r2, [sp, #100]	@ 0x64
 80155fc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80155fe:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8015600:	6828      	ldr	r0, [r5, #0]
 8015602:	2a00      	cmp	r2, #0
 8015604:	d12d      	bne.n	8015662 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8015606:	9318      	str	r3, [sp, #96]	@ 0x60
 8015608:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801560a:	6819      	ldr	r1, [r3, #0]
 801560c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 801560e:	6801      	ldr	r1, [r0, #0]
 8015610:	9314      	str	r3, [sp, #80]	@ 0x50
 8015612:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8015614:	4788      	blx	r1
 8015616:	79a9      	ldrb	r1, [r5, #6]
 8015618:	910b      	str	r1, [sp, #44]	@ 0x2c
 801561a:	7ba9      	ldrb	r1, [r5, #14]
 801561c:	910a      	str	r1, [sp, #40]	@ 0x28
 801561e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8015622:	9109      	str	r1, [sp, #36]	@ 0x24
 8015624:	68a9      	ldr	r1, [r5, #8]
 8015626:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015628:	9306      	str	r3, [sp, #24]
 801562a:	b2bf      	uxth	r7, r7
 801562c:	e9cd 8702 	strd	r8, r7, [sp, #8]
 8015630:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8015632:	9304      	str	r3, [sp, #16]
 8015634:	44b0      	add	r8, r6
 8015636:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801563a:	fa0f f388 	sxth.w	r3, r8
 801563e:	9300      	str	r3, [sp, #0]
 8015640:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8015642:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015644:	9205      	str	r2, [sp, #20]
 8015646:	f8cd a004 	str.w	sl, [sp, #4]
 801564a:	681a      	ldr	r2, [r3, #0]
 801564c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801564e:	685b      	ldr	r3, [r3, #4]
 8015650:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8015652:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8015654:	47b8      	blx	r7
 8015656:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015658:	3301      	adds	r3, #1
 801565a:	930d      	str	r3, [sp, #52]	@ 0x34
 801565c:	e6e4      	b.n	8015428 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 801565e:	2700      	movs	r7, #0
 8015660:	e7cb      	b.n	80155fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 8015662:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015664:	f8d2 c008 	ldr.w	ip, [r2, #8]
 8015668:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801566a:	f8dc 1000 	ldr.w	r1, [ip]
 801566e:	e9cd 6204 	strd	r6, r2, [sp, #16]
 8015672:	79aa      	ldrb	r2, [r5, #6]
 8015674:	9203      	str	r2, [sp, #12]
 8015676:	7baa      	ldrb	r2, [r5, #14]
 8015678:	9202      	str	r2, [sp, #8]
 801567a:	68aa      	ldr	r2, [r5, #8]
 801567c:	e9cd 0200 	strd	r0, r2, [sp]
 8015680:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8015682:	688f      	ldr	r7, [r1, #8]
 8015684:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8015686:	4660      	mov	r0, ip
 8015688:	47b8      	blx	r7
 801568a:	e7e4      	b.n	8015656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801568c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801568e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8015690:	3501      	adds	r5, #1
 8015692:	429d      	cmp	r5, r3
 8015694:	f6bf af5f 	bge.w	8015556 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8015698:	4659      	mov	r1, fp
 801569a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801569c:	f7f1 fe36 	bl	800730c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80156a0:	4604      	mov	r4, r0
 80156a2:	b110      	cbz	r0, 80156aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80156a4:	280a      	cmp	r0, #10
 80156a6:	d1f2      	bne.n	801568e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 80156a8:	e754      	b.n	8015554 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 80156aa:	2400      	movs	r4, #0
 80156ac:	e753      	b.n	8015556 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 80156ae:	f1bb 0f00 	cmp.w	fp, #0
 80156b2:	f43f af44 	beq.w	801553e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 80156b6:	e75e      	b.n	8015576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

080156b8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80156b8:	b530      	push	{r4, r5, lr}
 80156ba:	8ac4      	ldrh	r4, [r0, #22]
 80156bc:	8b45      	ldrh	r5, [r0, #26]
 80156be:	8343      	strh	r3, [r0, #26]
 80156c0:	442c      	add	r4, r5
 80156c2:	1ae4      	subs	r4, r4, r3
 80156c4:	82c4      	strh	r4, [r0, #22]
 80156c6:	8b83      	ldrh	r3, [r0, #28]
 80156c8:	8b04      	ldrh	r4, [r0, #24]
 80156ca:	4422      	add	r2, r4
 80156cc:	440c      	add	r4, r1
 80156ce:	1a59      	subs	r1, r3, r1
 80156d0:	83c2      	strh	r2, [r0, #30]
 80156d2:	8304      	strh	r4, [r0, #24]
 80156d4:	8381      	strh	r1, [r0, #28]
 80156d6:	bd30      	pop	{r4, r5, pc}

080156d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80156d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156dc:	4604      	mov	r4, r0
 80156de:	8a47      	ldrh	r7, [r0, #18]
 80156e0:	68c0      	ldr	r0, [r0, #12]
 80156e2:	6803      	ldr	r3, [r0, #0]
 80156e4:	b085      	sub	sp, #20
 80156e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80156e8:	4798      	blx	r3
 80156ea:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80156ee:	7a63      	ldrb	r3, [r4, #9]
 80156f0:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80156f4:	42b7      	cmp	r7, r6
 80156f6:	f103 33ff 	add.w	r3, r3, #4294967295
 80156fa:	bfac      	ite	ge
 80156fc:	f04f 0900 	movge.w	r9, #0
 8015700:	f04f 0901 	movlt.w	r9, #1
 8015704:	2b05      	cmp	r3, #5
 8015706:	d804      	bhi.n	8015712 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8015708:	e8df f003 	tbb	[pc, r3]
 801570c:	470e0854 	.word	0x470e0854
 8015710:	4c4c      	.short	0x4c4c
 8015712:	2500      	movs	r5, #0
 8015714:	46a9      	mov	r9, r5
 8015716:	462e      	mov	r6, r5
 8015718:	462f      	mov	r7, r5
 801571a:	e00d      	b.n	8015738 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801571c:	42b7      	cmp	r7, r6
 801571e:	bfb4      	ite	lt
 8015720:	2600      	movlt	r6, #0
 8015722:	2601      	movge	r6, #1
 8015724:	2500      	movs	r5, #0
 8015726:	e7f7      	b.n	8015718 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015728:	42b7      	cmp	r7, r6
 801572a:	464d      	mov	r5, r9
 801572c:	f04f 0900 	mov.w	r9, #0
 8015730:	bfb4      	ite	lt
 8015732:	2600      	movlt	r6, #0
 8015734:	2601      	movge	r6, #1
 8015736:	464f      	mov	r7, r9
 8015738:	f04f 0800 	mov.w	r8, #0
 801573c:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015740:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015744:	f8cd 8004 	str.w	r8, [sp, #4]
 8015748:	2300      	movs	r3, #0
 801574a:	9303      	str	r3, [sp, #12]
 801574c:	8823      	ldrh	r3, [r4, #0]
 801574e:	2b20      	cmp	r3, #32
 8015750:	d034      	beq.n	80157bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015752:	f242 010b 	movw	r1, #8203	@ 0x200b
 8015756:	1a5a      	subs	r2, r3, r1
 8015758:	f1d2 0a00 	rsbs	sl, r2, #0
 801575c:	eb4a 0a02 	adc.w	sl, sl, r2
 8015760:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8015764:	4293      	cmp	r3, r2
 8015766:	d009      	beq.n	801577c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015768:	428b      	cmp	r3, r1
 801576a:	9a01      	ldr	r2, [sp, #4]
 801576c:	bf18      	it	ne
 801576e:	461a      	movne	r2, r3
 8015770:	9201      	str	r2, [sp, #4]
 8015772:	bf0c      	ite	eq
 8015774:	f04f 0a01 	moveq.w	sl, #1
 8015778:	f04f 0a00 	movne.w	sl, #0
 801577c:	ab03      	add	r3, sp, #12
 801577e:	68e2      	ldr	r2, [r4, #12]
 8015780:	7a21      	ldrb	r1, [r4, #8]
 8015782:	6860      	ldr	r0, [r4, #4]
 8015784:	f003 f9e2 	bl	8018b4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015788:	8020      	strh	r0, [r4, #0]
 801578a:	b9d8      	cbnz	r0, 80157c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 801578c:	8ba2      	ldrh	r2, [r4, #28]
 801578e:	2300      	movs	r3, #0
 8015790:	4611      	mov	r1, r2
 8015792:	4620      	mov	r0, r4
 8015794:	f7ff ff90 	bl	80156b8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015798:	e06e      	b.n	8015878 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801579a:	2500      	movs	r5, #0
 801579c:	46a9      	mov	r9, r5
 801579e:	462e      	mov	r6, r5
 80157a0:	2701      	movs	r7, #1
 80157a2:	e7c9      	b.n	8015738 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80157a4:	42b7      	cmp	r7, r6
 80157a6:	f04f 0500 	mov.w	r5, #0
 80157aa:	bfb4      	ite	lt
 80157ac:	2700      	movlt	r7, #0
 80157ae:	2701      	movge	r7, #1
 80157b0:	462e      	mov	r6, r5
 80157b2:	e7c1      	b.n	8015738 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80157b4:	2500      	movs	r5, #0
 80157b6:	46a9      	mov	r9, r5
 80157b8:	2601      	movs	r6, #1
 80157ba:	e7ad      	b.n	8015718 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80157bc:	9301      	str	r3, [sp, #4]
 80157be:	f04f 0a01 	mov.w	sl, #1
 80157c2:	e7db      	b.n	801577c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80157c4:	8b63      	ldrh	r3, [r4, #26]
 80157c6:	280a      	cmp	r0, #10
 80157c8:	f103 0301 	add.w	r3, r3, #1
 80157cc:	8363      	strh	r3, [r4, #26]
 80157ce:	d0dd      	beq.n	801578c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80157d0:	9a03      	ldr	r2, [sp, #12]
 80157d2:	bb62      	cbnz	r2, 801582e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80157d4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80157d8:	4298      	cmp	r0, r3
 80157da:	d003      	beq.n	80157e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80157dc:	f242 030b 	movw	r3, #8203	@ 0x200b
 80157e0:	4298      	cmp	r0, r3
 80157e2:	d1b1      	bne.n	8015748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80157e4:	8823      	ldrh	r3, [r4, #0]
 80157e6:	8ba1      	ldrh	r1, [r4, #28]
 80157e8:	2b20      	cmp	r3, #32
 80157ea:	d003      	beq.n	80157f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80157ec:	f242 000b 	movw	r0, #8203	@ 0x200b
 80157f0:	4283      	cmp	r3, r0
 80157f2:	d131      	bne.n	8015858 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80157f4:	f1ba 0f00 	cmp.w	sl, #0
 80157f8:	bf0a      	itet	eq
 80157fa:	4688      	moveq	r8, r1
 80157fc:	4650      	movne	r0, sl
 80157fe:	2001      	moveq	r0, #1
 8015800:	440a      	add	r2, r1
 8015802:	8b23      	ldrh	r3, [r4, #24]
 8015804:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015808:	b292      	uxth	r2, r2
 801580a:	83a2      	strh	r2, [r4, #28]
 801580c:	4413      	add	r3, r2
 801580e:	f1b9 0f00 	cmp.w	r9, #0
 8015812:	d102      	bne.n	801581a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015814:	2d00      	cmp	r5, #0
 8015816:	d042      	beq.n	801589e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8015818:	b300      	cbz	r0, 801585c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801581a:	8c21      	ldrh	r1, [r4, #32]
 801581c:	4419      	add	r1, r3
 801581e:	458c      	cmp	ip, r1
 8015820:	da37      	bge.n	8015892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015822:	8ae1      	ldrh	r1, [r4, #22]
 8015824:	2900      	cmp	r1, #0
 8015826:	d034      	beq.n	8015892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015828:	4563      	cmp	r3, ip
 801582a:	dd8d      	ble.n	8015748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801582c:	e01d      	b.n	801586a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801582e:	8893      	ldrh	r3, [r2, #4]
 8015830:	8023      	strh	r3, [r4, #0]
 8015832:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8015836:	9901      	ldr	r1, [sp, #4]
 8015838:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 801583c:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 8015840:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015844:	ea4b 0b00 	orr.w	fp, fp, r0
 8015848:	68e0      	ldr	r0, [r4, #12]
 801584a:	6803      	ldr	r3, [r0, #0]
 801584c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801584e:	4798      	blx	r3
 8015850:	eb0b 0200 	add.w	r2, fp, r0
 8015854:	b292      	uxth	r2, r2
 8015856:	e7c5      	b.n	80157e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015858:	2000      	movs	r0, #0
 801585a:	e7d1      	b.n	8015800 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 801585c:	4563      	cmp	r3, ip
 801585e:	f77f af73 	ble.w	8015748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015862:	8ae3      	ldrh	r3, [r4, #22]
 8015864:	2b00      	cmp	r3, #0
 8015866:	f43f af6f 	beq.w	8015748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801586a:	2301      	movs	r3, #1
 801586c:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8015870:	8c22      	ldrh	r2, [r4, #32]
 8015872:	8be3      	ldrh	r3, [r4, #30]
 8015874:	4413      	add	r3, r2
 8015876:	83e3      	strh	r3, [r4, #30]
 8015878:	68e0      	ldr	r0, [r4, #12]
 801587a:	6803      	ldr	r3, [r0, #0]
 801587c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801587e:	4798      	blx	r3
 8015880:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015884:	4418      	add	r0, r3
 8015886:	8a63      	ldrh	r3, [r4, #18]
 8015888:	1a18      	subs	r0, r3, r0
 801588a:	8260      	strh	r0, [r4, #18]
 801588c:	b005      	add	sp, #20
 801588e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015892:	2300      	movs	r3, #0
 8015894:	4611      	mov	r1, r2
 8015896:	4620      	mov	r0, r4
 8015898:	f7ff ff0e 	bl	80156b8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801589c:	e754      	b.n	8015748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801589e:	4563      	cmp	r3, ip
 80158a0:	dd14      	ble.n	80158cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80158a2:	b117      	cbz	r7, 80158aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80158a4:	2301      	movs	r3, #1
 80158a6:	460a      	mov	r2, r1
 80158a8:	e772      	b.n	8015790 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80158aa:	2e00      	cmp	r6, #0
 80158ac:	f43f af4c 	beq.w	8015748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80158b0:	2800      	cmp	r0, #0
 80158b2:	f47f af49 	bne.w	8015748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80158b6:	f1ba 0f00 	cmp.w	sl, #0
 80158ba:	d002      	beq.n	80158c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80158bc:	2301      	movs	r3, #1
 80158be:	4642      	mov	r2, r8
 80158c0:	e767      	b.n	8015792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80158c2:	8ae3      	ldrh	r3, [r4, #22]
 80158c4:	2b00      	cmp	r3, #0
 80158c6:	f43f af3f 	beq.w	8015748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80158ca:	e7d5      	b.n	8015878 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80158cc:	2800      	cmp	r0, #0
 80158ce:	f47f af3b 	bne.w	8015748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80158d2:	f1ba 0f00 	cmp.w	sl, #0
 80158d6:	f43f af37 	beq.w	8015748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80158da:	2301      	movs	r3, #1
 80158dc:	4642      	mov	r2, r8
 80158de:	e7da      	b.n	8015896 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080158e0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80158e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80158e2:	4605      	mov	r5, r0
 80158e4:	b08f      	sub	sp, #60	@ 0x3c
 80158e6:	4617      	mov	r7, r2
 80158e8:	461c      	mov	r4, r3
 80158ea:	460e      	mov	r6, r1
 80158ec:	b1d1      	cbz	r1, 8015924 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80158ee:	681b      	ldr	r3, [r3, #0]
 80158f0:	4620      	mov	r0, r4
 80158f2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80158f4:	4798      	blx	r3
 80158f6:	4240      	negs	r0, r0
 80158f8:	b200      	sxth	r0, r0
 80158fa:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80158fe:	9603      	str	r6, [sp, #12]
 8015900:	9700      	str	r7, [sp, #0]
 8015902:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8015906:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801590a:	4629      	mov	r1, r5
 801590c:	a805      	add	r0, sp, #20
 801590e:	f7ff fcab 	bl	8015268 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015912:	2401      	movs	r4, #1
 8015914:	a805      	add	r0, sp, #20
 8015916:	f7ff fedf 	bl	80156d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801591a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801591e:	b163      	cbz	r3, 801593a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015920:	3401      	adds	r4, #1
 8015922:	e7f7      	b.n	8015914 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015924:	f003 f9e0 	bl	8018ce8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015928:	2401      	movs	r4, #1
 801592a:	280a      	cmp	r0, #10
 801592c:	4628      	mov	r0, r5
 801592e:	bf08      	it	eq
 8015930:	3401      	addeq	r4, #1
 8015932:	f003 f9d9 	bl	8018ce8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015936:	2800      	cmp	r0, #0
 8015938:	d1f7      	bne.n	801592a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801593a:	b2a0      	uxth	r0, r4
 801593c:	b00f      	add	sp, #60	@ 0x3c
 801593e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015940 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015944:	b0e3      	sub	sp, #396	@ 0x18c
 8015946:	461c      	mov	r4, r3
 8015948:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 801594a:	4683      	mov	fp, r0
 801594c:	4688      	mov	r8, r1
 801594e:	2b00      	cmp	r3, #0
 8015950:	f000 8112 	beq.w	8015b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015954:	6823      	ldr	r3, [r4, #0]
 8015956:	2b00      	cmp	r3, #0
 8015958:	f000 810e 	beq.w	8015b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801595c:	7ba3      	ldrb	r3, [r4, #14]
 801595e:	2b00      	cmp	r3, #0
 8015960:	f000 810a 	beq.w	8015b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015964:	6810      	ldr	r0, [r2, #0]
 8015966:	6851      	ldr	r1, [r2, #4]
 8015968:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 801596c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8015970:	ad0a      	add	r5, sp, #40	@ 0x28
 8015972:	462b      	mov	r3, r5
 8015974:	c303      	stmia	r3!, {r0, r1}
 8015976:	2100      	movs	r1, #0
 8015978:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801597c:	910c      	str	r1, [sp, #48]	@ 0x30
 801597e:	79a2      	ldrb	r2, [r4, #6]
 8015980:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8015984:	a90c      	add	r1, sp, #48	@ 0x30
 8015986:	4628      	mov	r0, r5
 8015988:	f7ff fced 	bl	8015366 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801598c:	a90c      	add	r1, sp, #48	@ 0x30
 801598e:	4608      	mov	r0, r1
 8015990:	79a2      	ldrb	r2, [r4, #6]
 8015992:	f7ff fce8 	bl	8015366 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015996:	a817      	add	r0, sp, #92	@ 0x5c
 8015998:	f002 fd51 	bl	801843e <_ZN8touchgfx12TextProviderC1Ev>
 801599c:	6820      	ldr	r0, [r4, #0]
 801599e:	6803      	ldr	r3, [r0, #0]
 80159a0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80159a2:	4798      	blx	r3
 80159a4:	4606      	mov	r6, r0
 80159a6:	6820      	ldr	r0, [r4, #0]
 80159a8:	6803      	ldr	r3, [r0, #0]
 80159aa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80159ac:	4798      	blx	r3
 80159ae:	4633      	mov	r3, r6
 80159b0:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 80159b2:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 80159b4:	9000      	str	r0, [sp, #0]
 80159b6:	a817      	add	r0, sp, #92	@ 0x5c
 80159b8:	f002 fd9c 	bl	80184f4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80159bc:	6820      	ldr	r0, [r4, #0]
 80159be:	f894 a004 	ldrb.w	sl, [r4, #4]
 80159c2:	6803      	ldr	r3, [r0, #0]
 80159c4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80159c6:	4798      	blx	r3
 80159c8:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80159cc:	6823      	ldr	r3, [r4, #0]
 80159ce:	4607      	mov	r7, r0
 80159d0:	4406      	add	r6, r0
 80159d2:	a830      	add	r0, sp, #192	@ 0xc0
 80159d4:	f893 9009 	ldrb.w	r9, [r3, #9]
 80159d8:	f002 fd31 	bl	801843e <_ZN8touchgfx12TextProviderC1Ev>
 80159dc:	7c23      	ldrb	r3, [r4, #16]
 80159de:	b17b      	cbz	r3, 8015a00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80159e0:	6820      	ldr	r0, [r4, #0]
 80159e2:	6803      	ldr	r3, [r0, #0]
 80159e4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80159e6:	4798      	blx	r3
 80159e8:	9009      	str	r0, [sp, #36]	@ 0x24
 80159ea:	6820      	ldr	r0, [r4, #0]
 80159ec:	6802      	ldr	r2, [r0, #0]
 80159ee:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 80159f0:	4790      	blx	r2
 80159f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80159f4:	9000      	str	r0, [sp, #0]
 80159f6:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 80159f8:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 80159fa:	a830      	add	r0, sp, #192	@ 0xc0
 80159fc:	f002 fd7a 	bl	80184f4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015a00:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8015a04:	7be2      	ldrb	r2, [r4, #15]
 8015a06:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8015a0a:	1a8a      	subs	r2, r1, r2
 8015a0c:	7c21      	ldrb	r1, [r4, #16]
 8015a0e:	9103      	str	r1, [sp, #12]
 8015a10:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015a14:	9102      	str	r1, [sp, #8]
 8015a16:	6821      	ldr	r1, [r4, #0]
 8015a18:	9101      	str	r1, [sp, #4]
 8015a1a:	7961      	ldrb	r1, [r4, #5]
 8015a1c:	9100      	str	r1, [sp, #0]
 8015a1e:	b292      	uxth	r2, r2
 8015a20:	a930      	add	r1, sp, #192	@ 0xc0
 8015a22:	a80e      	add	r0, sp, #56	@ 0x38
 8015a24:	f7ff fc20 	bl	8015268 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015a28:	2e00      	cmp	r6, #0
 8015a2a:	dc5b      	bgt.n	8015ae4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015a2c:	af17      	add	r7, sp, #92	@ 0x5c
 8015a2e:	f04f 0900 	mov.w	r9, #0
 8015a32:	7c23      	ldrb	r3, [r4, #16]
 8015a34:	2b00      	cmp	r3, #0
 8015a36:	f000 80b1 	beq.w	8015b9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8015a3a:	a80e      	add	r0, sp, #56	@ 0x38
 8015a3c:	f7ff fe4c 	bl	80156d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015a40:	f1ba 0f00 	cmp.w	sl, #0
 8015a44:	f000 80a5 	beq.w	8015b92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015a48:	7c23      	ldrb	r3, [r4, #16]
 8015a4a:	9309      	str	r3, [sp, #36]	@ 0x24
 8015a4c:	2264      	movs	r2, #100	@ 0x64
 8015a4e:	4639      	mov	r1, r7
 8015a50:	a849      	add	r0, sp, #292	@ 0x124
 8015a52:	f014 fc3a 	bl	802a2ca <memcpy>
 8015a56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015a58:	2b00      	cmp	r3, #0
 8015a5a:	f000 80a7 	beq.w	8015bac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8015a5e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 8015a62:	7922      	ldrb	r2, [r4, #4]
 8015a64:	2a01      	cmp	r2, #1
 8015a66:	f040 808a 	bne.w	8015b7e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8015a6a:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8015a6e:	1ac0      	subs	r0, r0, r3
 8015a70:	2302      	movs	r3, #2
 8015a72:	fb90 f0f3 	sdiv	r0, r0, r3
 8015a76:	b200      	sxth	r0, r0
 8015a78:	7c23      	ldrb	r3, [r4, #16]
 8015a7a:	2b00      	cmp	r3, #0
 8015a7c:	f000 808b 	beq.w	8015b96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015a80:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8015a84:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8015a88:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8015a8c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015a90:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8015a94:	4410      	add	r0, r2
 8015a96:	b200      	sxth	r0, r0
 8015a98:	9000      	str	r0, [sp, #0]
 8015a9a:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8015a9e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8015aa2:	4642      	mov	r2, r8
 8015aa4:	2100      	movs	r1, #0
 8015aa6:	4658      	mov	r0, fp
 8015aa8:	f7ff fc8e 	bl	80153c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015aac:	2800      	cmp	r0, #0
 8015aae:	d163      	bne.n	8015b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015ab0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8015ab4:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8015ab8:	b2b2      	uxth	r2, r6
 8015aba:	4413      	add	r3, r2
 8015abc:	1a8a      	subs	r2, r1, r2
 8015abe:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8015ac2:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 8015ac6:	b21b      	sxth	r3, r3
 8015ac8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015acc:	2a00      	cmp	r2, #0
 8015ace:	d153      	bne.n	8015b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015ad0:	6822      	ldr	r2, [r4, #0]
 8015ad2:	8869      	ldrh	r1, [r5, #2]
 8015ad4:	7a12      	ldrb	r2, [r2, #8]
 8015ad6:	1a9b      	subs	r3, r3, r2
 8015ad8:	88ea      	ldrh	r2, [r5, #6]
 8015ada:	440a      	add	r2, r1
 8015adc:	b212      	sxth	r2, r2
 8015ade:	4293      	cmp	r3, r2
 8015ae0:	dda7      	ble.n	8015a32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8015ae2:	e049      	b.n	8015b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015ae4:	7c23      	ldrb	r3, [r4, #16]
 8015ae6:	444f      	add	r7, r9
 8015ae8:	b1c3      	cbz	r3, 8015b1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8015aea:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8015aee:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8015af2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015af6:	443b      	add	r3, r7
 8015af8:	4293      	cmp	r3, r2
 8015afa:	da97      	bge.n	8015a2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015afc:	a80e      	add	r0, sp, #56	@ 0x38
 8015afe:	f7ff fdeb 	bl	80156d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015b02:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8015b06:	3b01      	subs	r3, #1
 8015b08:	b29b      	uxth	r3, r3
 8015b0a:	454b      	cmp	r3, r9
 8015b0c:	9309      	str	r3, [sp, #36]	@ 0x24
 8015b0e:	d021      	beq.n	8015b54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8015b10:	7961      	ldrb	r1, [r4, #5]
 8015b12:	a817      	add	r0, sp, #92	@ 0x5c
 8015b14:	f7f1 fbfa 	bl	800730c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015b18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015b1a:	e7f4      	b.n	8015b06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015b1c:	fa1f f986 	uxth.w	r9, r6
 8015b20:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8015b24:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015b28:	443b      	add	r3, r7
 8015b2a:	4293      	cmp	r3, r2
 8015b2c:	f6bf af7e 	bge.w	8015a2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015b30:	a817      	add	r0, sp, #92	@ 0x5c
 8015b32:	f003 f8d9 	bl	8018ce8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015b36:	b1f8      	cbz	r0, 8015b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015b38:	280a      	cmp	r0, #10
 8015b3a:	d1f1      	bne.n	8015b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015b3c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8015b40:	444b      	add	r3, r9
 8015b42:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015b46:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8015b4a:	eba3 0309 	sub.w	r3, r3, r9
 8015b4e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8015b52:	e7e5      	b.n	8015b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015b54:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8015b58:	b2b3      	uxth	r3, r6
 8015b5a:	441a      	add	r2, r3
 8015b5c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8015b60:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8015b64:	1ad3      	subs	r3, r2, r3
 8015b66:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8015b6a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8015b6e:	b11b      	cbz	r3, 8015b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015b70:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8015b74:	2b00      	cmp	r3, #0
 8015b76:	d0ba      	beq.n	8015aee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8015b78:	b063      	add	sp, #396	@ 0x18c
 8015b7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b7e:	2a02      	cmp	r2, #2
 8015b80:	d105      	bne.n	8015b8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8015b82:	7be2      	ldrb	r2, [r4, #15]
 8015b84:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8015b88:	1a80      	subs	r0, r0, r2
 8015b8a:	1ac0      	subs	r0, r0, r3
 8015b8c:	e773      	b.n	8015a76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8015b8e:	2000      	movs	r0, #0
 8015b90:	e772      	b.n	8015a78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015b92:	7be0      	ldrb	r0, [r4, #15]
 8015b94:	e770      	b.n	8015a78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015b96:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8015b9a:	e773      	b.n	8015a84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8015b9c:	f1ba 0f00 	cmp.w	sl, #0
 8015ba0:	d0f7      	beq.n	8015b92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015ba2:	2264      	movs	r2, #100	@ 0x64
 8015ba4:	4639      	mov	r1, r7
 8015ba6:	a849      	add	r0, sp, #292	@ 0x124
 8015ba8:	f014 fb8f 	bl	802a2ca <memcpy>
 8015bac:	2300      	movs	r3, #0
 8015bae:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8015bb2:	6821      	ldr	r1, [r4, #0]
 8015bb4:	a849      	add	r0, sp, #292	@ 0x124
 8015bb6:	f7ff fb9a 	bl	80152ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015bba:	b203      	sxth	r3, r0
 8015bbc:	e751      	b.n	8015a62 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08015bbe <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015bbe:	2b03      	cmp	r3, #3
 8015bc0:	d818      	bhi.n	8015bf4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015bc2:	e8df f003 	tbb	[pc, r3]
 8015bc6:	0602      	.short	0x0602
 8015bc8:	130d      	.short	0x130d
 8015bca:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015bce:	1850      	adds	r0, r2, r1
 8015bd0:	4770      	bx	lr
 8015bd2:	8803      	ldrh	r3, [r0, #0]
 8015bd4:	8880      	ldrh	r0, [r0, #4]
 8015bd6:	4418      	add	r0, r3
 8015bd8:	b200      	sxth	r0, r0
 8015bda:	1a80      	subs	r0, r0, r2
 8015bdc:	3801      	subs	r0, #1
 8015bde:	4770      	bx	lr
 8015be0:	8803      	ldrh	r3, [r0, #0]
 8015be2:	8880      	ldrh	r0, [r0, #4]
 8015be4:	4418      	add	r0, r3
 8015be6:	b200      	sxth	r0, r0
 8015be8:	1a40      	subs	r0, r0, r1
 8015bea:	e7f7      	b.n	8015bdc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015bec:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015bf0:	4410      	add	r0, r2
 8015bf2:	4770      	bx	lr
 8015bf4:	2000      	movs	r0, #0
 8015bf6:	4770      	bx	lr

08015bf8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8015bf8:	2b03      	cmp	r3, #3
 8015bfa:	d817      	bhi.n	8015c2c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015bfc:	e8df f003 	tbb	[pc, r3]
 8015c00:	10090602 	.word	0x10090602
 8015c04:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015c08:	1850      	adds	r0, r2, r1
 8015c0a:	4770      	bx	lr
 8015c0c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015c10:	e7fa      	b.n	8015c08 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015c12:	8843      	ldrh	r3, [r0, #2]
 8015c14:	88c0      	ldrh	r0, [r0, #6]
 8015c16:	4418      	add	r0, r3
 8015c18:	b200      	sxth	r0, r0
 8015c1a:	1a80      	subs	r0, r0, r2
 8015c1c:	3801      	subs	r0, #1
 8015c1e:	4770      	bx	lr
 8015c20:	8843      	ldrh	r3, [r0, #2]
 8015c22:	88c0      	ldrh	r0, [r0, #6]
 8015c24:	4418      	add	r0, r3
 8015c26:	b200      	sxth	r0, r0
 8015c28:	1a40      	subs	r0, r0, r1
 8015c2a:	e7f7      	b.n	8015c1c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015c2c:	2000      	movs	r0, #0
 8015c2e:	4770      	bx	lr

08015c30 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015c30:	4b01      	ldr	r3, [pc, #4]	@ (8015c38 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015c32:	2200      	movs	r2, #0
 8015c34:	601a      	str	r2, [r3, #0]
 8015c36:	4770      	bx	lr
 8015c38:	20013f70 	.word	0x20013f70

08015c3c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015c3c:	4603      	mov	r3, r0
 8015c3e:	b1c8      	cbz	r0, 8015c74 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015c40:	0c02      	lsrs	r2, r0, #16
 8015c42:	0412      	lsls	r2, r2, #16
 8015c44:	b9a2      	cbnz	r2, 8015c70 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8015c46:	0403      	lsls	r3, r0, #16
 8015c48:	2010      	movs	r0, #16
 8015c4a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8015c4e:	bf04      	itt	eq
 8015c50:	021b      	lsleq	r3, r3, #8
 8015c52:	3008      	addeq	r0, #8
 8015c54:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8015c58:	bf04      	itt	eq
 8015c5a:	011b      	lsleq	r3, r3, #4
 8015c5c:	3004      	addeq	r0, #4
 8015c5e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8015c62:	bf04      	itt	eq
 8015c64:	009b      	lsleq	r3, r3, #2
 8015c66:	3002      	addeq	r0, #2
 8015c68:	2b00      	cmp	r3, #0
 8015c6a:	db04      	blt.n	8015c76 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8015c6c:	3001      	adds	r0, #1
 8015c6e:	4770      	bx	lr
 8015c70:	2000      	movs	r0, #0
 8015c72:	e7ea      	b.n	8015c4a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8015c74:	2020      	movs	r0, #32
 8015c76:	4770      	bx	lr

08015c78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8015c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c7c:	b087      	sub	sp, #28
 8015c7e:	460d      	mov	r5, r1
 8015c80:	4616      	mov	r6, r2
 8015c82:	4698      	mov	r8, r3
 8015c84:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8015c88:	4601      	mov	r1, r0
 8015c8a:	b120      	cbz	r0, 8015c96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015c8c:	b11a      	cbz	r2, 8015c96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015c8e:	2d1f      	cmp	r5, #31
 8015c90:	d801      	bhi.n	8015c96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015c92:	2b1f      	cmp	r3, #31
 8015c94:	d904      	bls.n	8015ca0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8015c96:	2000      	movs	r0, #0
 8015c98:	6038      	str	r0, [r7, #0]
 8015c9a:	b007      	add	sp, #28
 8015c9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ca0:	b97d      	cbnz	r5, 8015cc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8015ca2:	b143      	cbz	r3, 8015cb6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8015ca4:	4602      	mov	r2, r0
 8015ca6:	e9cd 4700 	strd	r4, r7, [sp]
 8015caa:	462b      	mov	r3, r5
 8015cac:	4641      	mov	r1, r8
 8015cae:	4630      	mov	r0, r6
 8015cb0:	f7ff ffe2 	bl	8015c78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015cb4:	e7f1      	b.n	8015c9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015cb6:	f04f 33ff 	mov.w	r3, #4294967295
 8015cba:	603b      	str	r3, [r7, #0]
 8015cbc:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8015cc0:	e7eb      	b.n	8015c9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015cc2:	fa32 fa05 	lsrs.w	sl, r2, r5
 8015cc6:	d106      	bne.n	8015cd6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8015cc8:	4346      	muls	r6, r0
 8015cca:	fbb6 f0f4 	udiv	r0, r6, r4
 8015cce:	fb04 6610 	mls	r6, r4, r0, r6
 8015cd2:	603e      	str	r6, [r7, #0]
 8015cd4:	e7e1      	b.n	8015c9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015cd6:	2201      	movs	r2, #1
 8015cd8:	40aa      	lsls	r2, r5
 8015cda:	3a01      	subs	r2, #1
 8015cdc:	4016      	ands	r6, r2
 8015cde:	fa00 fb05 	lsl.w	fp, r0, r5
 8015ce2:	4630      	mov	r0, r6
 8015ce4:	fbbb f9f4 	udiv	r9, fp, r4
 8015ce8:	fb0a f309 	mul.w	r3, sl, r9
 8015cec:	9303      	str	r3, [sp, #12]
 8015cee:	f7ff ffa5 	bl	8015c3c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015cf2:	462b      	mov	r3, r5
 8015cf4:	460a      	mov	r2, r1
 8015cf6:	e9cd 4700 	strd	r4, r7, [sp]
 8015cfa:	4601      	mov	r1, r0
 8015cfc:	4630      	mov	r0, r6
 8015cfe:	f7ff ffbb 	bl	8015c78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015d02:	fb04 b919 	mls	r9, r4, r9, fp
 8015d06:	4606      	mov	r6, r0
 8015d08:	4648      	mov	r0, r9
 8015d0a:	eb05 0108 	add.w	r1, r5, r8
 8015d0e:	f7ff ff95 	bl	8015c3c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015d12:	ab05      	add	r3, sp, #20
 8015d14:	e9cd 4300 	strd	r4, r3, [sp]
 8015d18:	464a      	mov	r2, r9
 8015d1a:	4603      	mov	r3, r0
 8015d1c:	4650      	mov	r0, sl
 8015d1e:	f7ff ffab 	bl	8015c78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015d22:	6839      	ldr	r1, [r7, #0]
 8015d24:	9a05      	ldr	r2, [sp, #20]
 8015d26:	9b03      	ldr	r3, [sp, #12]
 8015d28:	4411      	add	r1, r2
 8015d2a:	fbb1 f2f4 	udiv	r2, r1, r4
 8015d2e:	18d3      	adds	r3, r2, r3
 8015d30:	441e      	add	r6, r3
 8015d32:	fb04 1412 	mls	r4, r4, r2, r1
 8015d36:	4430      	add	r0, r6
 8015d38:	603c      	str	r4, [r7, #0]
 8015d3a:	e7ae      	b.n	8015c9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015d3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015d3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015d40:	b085      	sub	sp, #20
 8015d42:	f1b0 0900 	subs.w	r9, r0, #0
 8015d46:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8015d48:	461d      	mov	r5, r3
 8015d4a:	bfbf      	itttt	lt
 8015d4c:	6823      	ldrlt	r3, [r4, #0]
 8015d4e:	425b      	neglt	r3, r3
 8015d50:	f1c9 0900 	rsblt	r9, r9, #0
 8015d54:	6023      	strlt	r3, [r4, #0]
 8015d56:	bfb4      	ite	lt
 8015d58:	f04f 36ff 	movlt.w	r6, #4294967295
 8015d5c:	2601      	movge	r6, #1
 8015d5e:	2a00      	cmp	r2, #0
 8015d60:	4617      	mov	r7, r2
 8015d62:	da04      	bge.n	8015d6e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015d64:	6823      	ldr	r3, [r4, #0]
 8015d66:	425b      	negs	r3, r3
 8015d68:	4257      	negs	r7, r2
 8015d6a:	4276      	negs	r6, r6
 8015d6c:	6023      	str	r3, [r4, #0]
 8015d6e:	2d00      	cmp	r5, #0
 8015d70:	4638      	mov	r0, r7
 8015d72:	bfba      	itte	lt
 8015d74:	426d      	neglt	r5, r5
 8015d76:	f04f 38ff 	movlt.w	r8, #4294967295
 8015d7a:	f04f 0801 	movge.w	r8, #1
 8015d7e:	f7ff ff5d 	bl	8015c3c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015d82:	ab03      	add	r3, sp, #12
 8015d84:	e9cd 5300 	strd	r5, r3, [sp]
 8015d88:	463a      	mov	r2, r7
 8015d8a:	4603      	mov	r3, r0
 8015d8c:	4648      	mov	r0, r9
 8015d8e:	f7ff ff73 	bl	8015c78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015d92:	6823      	ldr	r3, [r4, #0]
 8015d94:	9a03      	ldr	r2, [sp, #12]
 8015d96:	4546      	cmp	r6, r8
 8015d98:	441a      	add	r2, r3
 8015d9a:	fb92 f3f5 	sdiv	r3, r2, r5
 8015d9e:	4418      	add	r0, r3
 8015da0:	bf18      	it	ne
 8015da2:	4240      	negne	r0, r0
 8015da4:	fb05 2313 	mls	r3, r5, r3, r2
 8015da8:	1c72      	adds	r2, r6, #1
 8015daa:	6023      	str	r3, [r4, #0]
 8015dac:	d105      	bne.n	8015dba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8015dae:	2b00      	cmp	r3, #0
 8015db0:	f1c3 0200 	rsb	r2, r3, #0
 8015db4:	db0b      	blt.n	8015dce <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8015db6:	6022      	str	r2, [r4, #0]
 8015db8:	e006      	b.n	8015dc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015dba:	2e01      	cmp	r6, #1
 8015dbc:	d104      	bne.n	8015dc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015dbe:	2b00      	cmp	r3, #0
 8015dc0:	da02      	bge.n	8015dc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015dc2:	442b      	add	r3, r5
 8015dc4:	3801      	subs	r0, #1
 8015dc6:	6023      	str	r3, [r4, #0]
 8015dc8:	b005      	add	sp, #20
 8015dca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015dce:	3801      	subs	r0, #1
 8015dd0:	1b52      	subs	r2, r2, r5
 8015dd2:	e7f0      	b.n	8015db6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015dd4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015dd4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8015dd8:	4c1c      	ldr	r4, [pc, #112]	@ (8015e4c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8015dda:	6807      	ldr	r7, [r0, #0]
 8015ddc:	69a3      	ldr	r3, [r4, #24]
 8015dde:	4605      	mov	r5, r0
 8015de0:	b92b      	cbnz	r3, 8015dee <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015de2:	6840      	ldr	r0, [r0, #4]
 8015de4:	e9c5 7000 	strd	r7, r0, [r5]
 8015de8:	b004      	add	sp, #16
 8015dea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015dee:	68a2      	ldr	r2, [r4, #8]
 8015df0:	6820      	ldr	r0, [r4, #0]
 8015df2:	ae04      	add	r6, sp, #16
 8015df4:	f04f 0802 	mov.w	r8, #2
 8015df8:	fb93 f1f8 	sdiv	r1, r3, r8
 8015dfc:	440a      	add	r2, r1
 8015dfe:	f846 2d04 	str.w	r2, [r6, #-4]!
 8015e02:	69e1      	ldr	r1, [r4, #28]
 8015e04:	9600      	str	r6, [sp, #0]
 8015e06:	463a      	mov	r2, r7
 8015e08:	f7ff ff98 	bl	8015d3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015e0c:	69a3      	ldr	r3, [r4, #24]
 8015e0e:	686a      	ldr	r2, [r5, #4]
 8015e10:	6a21      	ldr	r1, [r4, #32]
 8015e12:	9600      	str	r6, [sp, #0]
 8015e14:	4607      	mov	r7, r0
 8015e16:	6860      	ldr	r0, [r4, #4]
 8015e18:	f7ff ff90 	bl	8015d3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015e1c:	6962      	ldr	r2, [r4, #20]
 8015e1e:	69a3      	ldr	r3, [r4, #24]
 8015e20:	fb93 f8f8 	sdiv	r8, r3, r8
 8015e24:	4442      	add	r2, r8
 8015e26:	9203      	str	r2, [sp, #12]
 8015e28:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8015e2a:	682a      	ldr	r2, [r5, #0]
 8015e2c:	9600      	str	r6, [sp, #0]
 8015e2e:	4407      	add	r7, r0
 8015e30:	68e0      	ldr	r0, [r4, #12]
 8015e32:	f7ff ff83 	bl	8015d3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015e36:	9600      	str	r6, [sp, #0]
 8015e38:	4680      	mov	r8, r0
 8015e3a:	69a3      	ldr	r3, [r4, #24]
 8015e3c:	686a      	ldr	r2, [r5, #4]
 8015e3e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8015e40:	6920      	ldr	r0, [r4, #16]
 8015e42:	f7ff ff7b 	bl	8015d3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015e46:	4440      	add	r0, r8
 8015e48:	e7cc      	b.n	8015de4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8015e4a:	bf00      	nop
 8015e4c:	20013f74 	.word	0x20013f74

08015e50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015e50:	4b07      	ldr	r3, [pc, #28]	@ (8015e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015e52:	781b      	ldrb	r3, [r3, #0]
 8015e54:	2b01      	cmp	r3, #1
 8015e56:	d109      	bne.n	8015e6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8015e58:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015e5c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015e60:	8003      	strh	r3, [r0, #0]
 8015e62:	4b04      	ldr	r3, [pc, #16]	@ (8015e74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8015e64:	881b      	ldrh	r3, [r3, #0]
 8015e66:	3b01      	subs	r3, #1
 8015e68:	1a9b      	subs	r3, r3, r2
 8015e6a:	800b      	strh	r3, [r1, #0]
 8015e6c:	4770      	bx	lr
 8015e6e:	bf00      	nop
 8015e70:	20013f58 	.word	0x20013f58
 8015e74:	20013f54 	.word	0x20013f54

08015e78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8015e78:	b510      	push	{r4, lr}
 8015e7a:	4b07      	ldr	r3, [pc, #28]	@ (8015e98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8015e7c:	781b      	ldrb	r3, [r3, #0]
 8015e7e:	2b01      	cmp	r3, #1
 8015e80:	d108      	bne.n	8015e94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8015e82:	4b06      	ldr	r3, [pc, #24]	@ (8015e9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8015e84:	880c      	ldrh	r4, [r1, #0]
 8015e86:	881b      	ldrh	r3, [r3, #0]
 8015e88:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015e8c:	3b01      	subs	r3, #1
 8015e8e:	1b1b      	subs	r3, r3, r4
 8015e90:	8003      	strh	r3, [r0, #0]
 8015e92:	800a      	strh	r2, [r1, #0]
 8015e94:	bd10      	pop	{r4, pc}
 8015e96:	bf00      	nop
 8015e98:	20013f58 	.word	0x20013f58
 8015e9c:	20013f54 	.word	0x20013f54

08015ea0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015ea0:	b510      	push	{r4, lr}
 8015ea2:	4b0a      	ldr	r3, [pc, #40]	@ (8015ecc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015ea4:	781b      	ldrb	r3, [r3, #0]
 8015ea6:	2b01      	cmp	r3, #1
 8015ea8:	d10e      	bne.n	8015ec8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8015eaa:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015eae:	8843      	ldrh	r3, [r0, #2]
 8015eb0:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015eb4:	8044      	strh	r4, [r0, #2]
 8015eb6:	18ca      	adds	r2, r1, r3
 8015eb8:	4b05      	ldr	r3, [pc, #20]	@ (8015ed0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8015eba:	881b      	ldrh	r3, [r3, #0]
 8015ebc:	1a9b      	subs	r3, r3, r2
 8015ebe:	8003      	strh	r3, [r0, #0]
 8015ec0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015ec4:	80c3      	strh	r3, [r0, #6]
 8015ec6:	8081      	strh	r1, [r0, #4]
 8015ec8:	bd10      	pop	{r4, pc}
 8015eca:	bf00      	nop
 8015ecc:	20013f58 	.word	0x20013f58
 8015ed0:	20013f54 	.word	0x20013f54

08015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015ed4:	4b08      	ldr	r3, [pc, #32]	@ (8015ef8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8015ed6:	781b      	ldrb	r3, [r3, #0]
 8015ed8:	2b01      	cmp	r3, #1
 8015eda:	d10c      	bne.n	8015ef6 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015edc:	8803      	ldrh	r3, [r0, #0]
 8015ede:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015ee2:	8842      	ldrh	r2, [r0, #2]
 8015ee4:	8002      	strh	r2, [r0, #0]
 8015ee6:	185a      	adds	r2, r3, r1
 8015ee8:	4b04      	ldr	r3, [pc, #16]	@ (8015efc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8015eea:	881b      	ldrh	r3, [r3, #0]
 8015eec:	1a9b      	subs	r3, r3, r2
 8015eee:	8043      	strh	r3, [r0, #2]
 8015ef0:	88c3      	ldrh	r3, [r0, #6]
 8015ef2:	8083      	strh	r3, [r0, #4]
 8015ef4:	80c1      	strh	r1, [r0, #6]
 8015ef6:	4770      	bx	lr
 8015ef8:	20013f58 	.word	0x20013f58
 8015efc:	20013f54 	.word	0x20013f54

08015f00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015f00:	b510      	push	{r4, lr}
 8015f02:	4b07      	ldr	r3, [pc, #28]	@ (8015f20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015f04:	781b      	ldrb	r3, [r3, #0]
 8015f06:	2b01      	cmp	r3, #1
 8015f08:	d108      	bne.n	8015f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8015f0a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015f0e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015f12:	8003      	strh	r3, [r0, #0]
 8015f14:	8893      	ldrh	r3, [r2, #4]
 8015f16:	3b01      	subs	r3, #1
 8015f18:	1b1b      	subs	r3, r3, r4
 8015f1a:	800b      	strh	r3, [r1, #0]
 8015f1c:	bd10      	pop	{r4, pc}
 8015f1e:	bf00      	nop
 8015f20:	20013f58 	.word	0x20013f58

08015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8015f24:	b510      	push	{r4, lr}
 8015f26:	4b0a      	ldr	r3, [pc, #40]	@ (8015f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8015f28:	781b      	ldrb	r3, [r3, #0]
 8015f2a:	2b01      	cmp	r3, #1
 8015f2c:	460a      	mov	r2, r1
 8015f2e:	d10d      	bne.n	8015f4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8015f30:	8881      	ldrh	r1, [r0, #4]
 8015f32:	8803      	ldrh	r3, [r0, #0]
 8015f34:	440b      	add	r3, r1
 8015f36:	4601      	mov	r1, r0
 8015f38:	3b01      	subs	r3, #1
 8015f3a:	f821 3b02 	strh.w	r3, [r1], #2
 8015f3e:	f7ff ffdf 	bl	8015f00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8015f42:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015f46:	88c2      	ldrh	r2, [r0, #6]
 8015f48:	8082      	strh	r2, [r0, #4]
 8015f4a:	80c3      	strh	r3, [r0, #6]
 8015f4c:	bd10      	pop	{r4, pc}
 8015f4e:	bf00      	nop
 8015f50:	20013f58 	.word	0x20013f58

08015f54 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015f54:	4b06      	ldr	r3, [pc, #24]	@ (8015f70 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8015f56:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015f5a:	4b06      	ldr	r3, [pc, #24]	@ (8015f74 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015f5c:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8015f60:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015f64:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8015f68:	2100      	movs	r1, #0
 8015f6a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8015f6e:	4770      	bx	lr
 8015f70:	20013f54 	.word	0x20013f54
 8015f74:	20013f56 	.word	0x20013f56

08015f78 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015f78:	4b03      	ldr	r3, [pc, #12]	@ (8015f88 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015f7a:	6818      	ldr	r0, [r3, #0]
 8015f7c:	b110      	cbz	r0, 8015f84 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8015f7e:	6803      	ldr	r3, [r0, #0]
 8015f80:	699b      	ldr	r3, [r3, #24]
 8015f82:	4718      	bx	r3
 8015f84:	4770      	bx	lr
 8015f86:	bf00      	nop
 8015f88:	20013fa4 	.word	0x20013fa4

08015f8c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015f8c:	4770      	bx	lr
	...

08015f90 <_ZN8touchgfx11Application4drawEv>:
 8015f90:	b507      	push	{r0, r1, r2, lr}
 8015f92:	4b09      	ldr	r3, [pc, #36]	@ (8015fb8 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015f94:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015f98:	4b08      	ldr	r3, [pc, #32]	@ (8015fbc <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015f9a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015f9e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015fa2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015fa6:	6803      	ldr	r3, [r0, #0]
 8015fa8:	2100      	movs	r1, #0
 8015faa:	9100      	str	r1, [sp, #0]
 8015fac:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8015fae:	4669      	mov	r1, sp
 8015fb0:	4798      	blx	r3
 8015fb2:	b003      	add	sp, #12
 8015fb4:	f85d fb04 	ldr.w	pc, [sp], #4
 8015fb8:	20013f54 	.word	0x20013f54
 8015fbc:	20013f56 	.word	0x20013f56

08015fc0 <_ZN8touchgfx11Application10invalidateEv>:
 8015fc0:	4b09      	ldr	r3, [pc, #36]	@ (8015fe8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8015fc2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015fc6:	4b09      	ldr	r3, [pc, #36]	@ (8015fec <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015fc8:	b082      	sub	sp, #8
 8015fca:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015fce:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015fd2:	2100      	movs	r1, #0
 8015fd4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015fd8:	9100      	str	r1, [sp, #0]
 8015fda:	6803      	ldr	r3, [r0, #0]
 8015fdc:	aa02      	add	r2, sp, #8
 8015fde:	e912 0006 	ldmdb	r2, {r1, r2}
 8015fe2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8015fe4:	b002      	add	sp, #8
 8015fe6:	4718      	bx	r3
 8015fe8:	20013f54 	.word	0x20013f54
 8015fec:	20013f56 	.word	0x20013f56

08015ff0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8015ff0:	4b03      	ldr	r3, [pc, #12]	@ (8016000 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8015ff2:	6818      	ldr	r0, [r3, #0]
 8015ff4:	b110      	cbz	r0, 8015ffc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015ff6:	6803      	ldr	r3, [r0, #0]
 8015ff8:	69db      	ldr	r3, [r3, #28]
 8015ffa:	4718      	bx	r3
 8015ffc:	4770      	bx	lr
 8015ffe:	bf00      	nop
 8016000:	20013fa4 	.word	0x20013fa4

08016004 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8016004:	4b03      	ldr	r3, [pc, #12]	@ (8016014 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8016006:	6818      	ldr	r0, [r3, #0]
 8016008:	b110      	cbz	r0, 8016010 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801600a:	6803      	ldr	r3, [r0, #0]
 801600c:	6a1b      	ldr	r3, [r3, #32]
 801600e:	4718      	bx	r3
 8016010:	4770      	bx	lr
 8016012:	bf00      	nop
 8016014:	20013fa4 	.word	0x20013fa4

08016018 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8016018:	2300      	movs	r3, #0
 801601a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 801601e:	4770      	bx	lr

08016020 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8016020:	4b03      	ldr	r3, [pc, #12]	@ (8016030 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8016022:	6818      	ldr	r0, [r3, #0]
 8016024:	b110      	cbz	r0, 801602c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8016026:	6803      	ldr	r3, [r0, #0]
 8016028:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801602a:	4718      	bx	r3
 801602c:	4770      	bx	lr
 801602e:	bf00      	nop
 8016030:	20013fa4 	.word	0x20013fa4

08016034 <_ZN8touchgfx11ApplicationD1Ev>:
 8016034:	4770      	bx	lr

08016036 <_ZN8touchgfx11ApplicationD0Ev>:
 8016036:	b510      	push	{r4, lr}
 8016038:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 801603c:	4604      	mov	r4, r0
 801603e:	f012 fdfb 	bl	8028c38 <_ZdlPvj>
 8016042:	4620      	mov	r0, r4
 8016044:	bd10      	pop	{r4, pc}

08016046 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8016046:	b510      	push	{r4, lr}
 8016048:	f9b1 4000 	ldrsh.w	r4, [r1]
 801604c:	888a      	ldrh	r2, [r1, #4]
 801604e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016052:	4422      	add	r2, r4
 8016054:	b212      	sxth	r2, r2
 8016056:	4293      	cmp	r3, r2
 8016058:	da15      	bge.n	8016086 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801605a:	8882      	ldrh	r2, [r0, #4]
 801605c:	4413      	add	r3, r2
 801605e:	b21b      	sxth	r3, r3
 8016060:	429c      	cmp	r4, r3
 8016062:	da10      	bge.n	8016086 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016064:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016068:	88c9      	ldrh	r1, [r1, #6]
 801606a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801606e:	4419      	add	r1, r3
 8016070:	b209      	sxth	r1, r1
 8016072:	428a      	cmp	r2, r1
 8016074:	da07      	bge.n	8016086 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016076:	88c0      	ldrh	r0, [r0, #6]
 8016078:	4410      	add	r0, r2
 801607a:	b200      	sxth	r0, r0
 801607c:	4283      	cmp	r3, r0
 801607e:	bfac      	ite	ge
 8016080:	2000      	movge	r0, #0
 8016082:	2001      	movlt	r0, #1
 8016084:	bd10      	pop	{r4, pc}
 8016086:	2000      	movs	r0, #0
 8016088:	e7fc      	b.n	8016084 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801608a <_ZN8touchgfx4Rect10restrictToEss>:
 801608a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801608e:	2b00      	cmp	r3, #0
 8016090:	b510      	push	{r4, lr}
 8016092:	da04      	bge.n	801609e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016094:	8884      	ldrh	r4, [r0, #4]
 8016096:	4423      	add	r3, r4
 8016098:	8083      	strh	r3, [r0, #4]
 801609a:	2300      	movs	r3, #0
 801609c:	8003      	strh	r3, [r0, #0]
 801609e:	f9b0 4000 	ldrsh.w	r4, [r0]
 80160a2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80160a6:	1b09      	subs	r1, r1, r4
 80160a8:	428b      	cmp	r3, r1
 80160aa:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80160ae:	bfc8      	it	gt
 80160b0:	8081      	strhgt	r1, [r0, #4]
 80160b2:	2b00      	cmp	r3, #0
 80160b4:	da04      	bge.n	80160c0 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80160b6:	88c1      	ldrh	r1, [r0, #6]
 80160b8:	440b      	add	r3, r1
 80160ba:	80c3      	strh	r3, [r0, #6]
 80160bc:	2300      	movs	r3, #0
 80160be:	8043      	strh	r3, [r0, #2]
 80160c0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80160c4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80160c8:	1a52      	subs	r2, r2, r1
 80160ca:	4293      	cmp	r3, r2
 80160cc:	bfc8      	it	gt
 80160ce:	80c2      	strhgt	r2, [r0, #6]
 80160d0:	bd10      	pop	{r4, pc}
	...

080160d4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80160d4:	b510      	push	{r4, lr}
 80160d6:	4b10      	ldr	r3, [pc, #64]	@ (8016118 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80160d8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80160dc:	4b0f      	ldr	r3, [pc, #60]	@ (801611c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80160de:	460c      	mov	r4, r1
 80160e0:	4620      	mov	r0, r4
 80160e2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80160e6:	f7ff ffd0 	bl	801608a <_ZN8touchgfx4Rect10restrictToEss>
 80160ea:	4b0d      	ldr	r3, [pc, #52]	@ (8016120 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80160ec:	6818      	ldr	r0, [r3, #0]
 80160ee:	b190      	cbz	r0, 8016116 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80160f0:	6803      	ldr	r3, [r0, #0]
 80160f2:	4621      	mov	r1, r4
 80160f4:	689b      	ldr	r3, [r3, #8]
 80160f6:	4798      	blx	r3
 80160f8:	4b0a      	ldr	r3, [pc, #40]	@ (8016124 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80160fa:	6818      	ldr	r0, [r3, #0]
 80160fc:	b118      	cbz	r0, 8016106 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80160fe:	6803      	ldr	r3, [r0, #0]
 8016100:	4621      	mov	r1, r4
 8016102:	689b      	ldr	r3, [r3, #8]
 8016104:	4798      	blx	r3
 8016106:	4b08      	ldr	r3, [pc, #32]	@ (8016128 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8016108:	6818      	ldr	r0, [r3, #0]
 801610a:	6803      	ldr	r3, [r0, #0]
 801610c:	4621      	mov	r1, r4
 801610e:	69db      	ldr	r3, [r3, #28]
 8016110:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016114:	4718      	bx	r3
 8016116:	bd10      	pop	{r4, pc}
 8016118:	20013f56 	.word	0x20013f56
 801611c:	20013f54 	.word	0x20013f54
 8016120:	20013fa4 	.word	0x20013fa4
 8016124:	20013fa0 	.word	0x20013fa0
 8016128:	20013f60 	.word	0x20013f60

0801612c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801612c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801612e:	4606      	mov	r6, r0
 8016130:	4608      	mov	r0, r1
 8016132:	460f      	mov	r7, r1
 8016134:	f7f9 f9a5 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016138:	b9e8      	cbnz	r0, 8016176 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801613a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801613e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8016142:	42a5      	cmp	r5, r4
 8016144:	db17      	blt.n	8016176 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016146:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801614a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801614e:	429a      	cmp	r2, r3
 8016150:	db11      	blt.n	8016176 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016152:	88b9      	ldrh	r1, [r7, #4]
 8016154:	440d      	add	r5, r1
 8016156:	88b1      	ldrh	r1, [r6, #4]
 8016158:	440c      	add	r4, r1
 801615a:	b22d      	sxth	r5, r5
 801615c:	b224      	sxth	r4, r4
 801615e:	42a5      	cmp	r5, r4
 8016160:	dc09      	bgt.n	8016176 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016162:	88f8      	ldrh	r0, [r7, #6]
 8016164:	4410      	add	r0, r2
 8016166:	88f2      	ldrh	r2, [r6, #6]
 8016168:	4413      	add	r3, r2
 801616a:	b200      	sxth	r0, r0
 801616c:	b21b      	sxth	r3, r3
 801616e:	4298      	cmp	r0, r3
 8016170:	bfcc      	ite	gt
 8016172:	2000      	movgt	r0, #0
 8016174:	2001      	movle	r0, #1
 8016176:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016178 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801617a:	4604      	mov	r4, r0
 801617c:	4608      	mov	r0, r1
 801617e:	460d      	mov	r5, r1
 8016180:	f7f9 f97f 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016184:	b978      	cbnz	r0, 80161a6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8016186:	4620      	mov	r0, r4
 8016188:	f7f9 f97b 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 801618c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8016190:	b150      	cbz	r0, 80161a8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8016192:	8026      	strh	r6, [r4, #0]
 8016194:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016198:	8063      	strh	r3, [r4, #2]
 801619a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801619e:	80a3      	strh	r3, [r4, #4]
 80161a0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80161a4:	80e3      	strh	r3, [r4, #6]
 80161a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80161a8:	f9b4 1000 	ldrsh.w	r1, [r4]
 80161ac:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80161b0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80161b4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80161b8:	88ed      	ldrh	r5, [r5, #6]
 80161ba:	42b1      	cmp	r1, r6
 80161bc:	460f      	mov	r7, r1
 80161be:	bfa8      	it	ge
 80161c0:	4637      	movge	r7, r6
 80161c2:	4293      	cmp	r3, r2
 80161c4:	4618      	mov	r0, r3
 80161c6:	4466      	add	r6, ip
 80161c8:	bfa8      	it	ge
 80161ca:	4610      	movge	r0, r2
 80161cc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80161d0:	8027      	strh	r7, [r4, #0]
 80161d2:	442a      	add	r2, r5
 80161d4:	88e5      	ldrh	r5, [r4, #6]
 80161d6:	8060      	strh	r0, [r4, #2]
 80161d8:	4461      	add	r1, ip
 80161da:	442b      	add	r3, r5
 80161dc:	b236      	sxth	r6, r6
 80161de:	b209      	sxth	r1, r1
 80161e0:	b212      	sxth	r2, r2
 80161e2:	b21b      	sxth	r3, r3
 80161e4:	428e      	cmp	r6, r1
 80161e6:	bfac      	ite	ge
 80161e8:	ebc7 0106 	rsbge	r1, r7, r6
 80161ec:	ebc7 0101 	rsblt	r1, r7, r1
 80161f0:	429a      	cmp	r2, r3
 80161f2:	bfac      	ite	ge
 80161f4:	ebc0 0202 	rsbge	r2, r0, r2
 80161f8:	ebc0 0203 	rsblt	r2, r0, r3
 80161fc:	80a1      	strh	r1, [r4, #4]
 80161fe:	80e2      	strh	r2, [r4, #6]
 8016200:	e7d1      	b.n	80161a6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08016204 <_ZN8touchgfx11Application11getInstanceEv>:
 8016204:	4b01      	ldr	r3, [pc, #4]	@ (801620c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8016206:	6818      	ldr	r0, [r3, #0]
 8016208:	4770      	bx	lr
 801620a:	bf00      	nop
 801620c:	20013fb4 	.word	0x20013fb4

08016210 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8016210:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016212:	4b10      	ldr	r3, [pc, #64]	@ (8016254 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8016214:	781b      	ldrb	r3, [r3, #0]
 8016216:	4605      	mov	r5, r0
 8016218:	b1d3      	cbz	r3, 8016250 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 801621a:	4b0f      	ldr	r3, [pc, #60]	@ (8016258 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 801621c:	4f0f      	ldr	r7, [pc, #60]	@ (801625c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801621e:	881c      	ldrh	r4, [r3, #0]
 8016220:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
 8016224:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
 8016228:	42a3      	cmp	r3, r4
 801622a:	d90e      	bls.n	801624a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 801622c:	683b      	ldr	r3, [r7, #0]
 801622e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8016232:	b10a      	cbz	r2, 8016238 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8016234:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8016236:	b900      	cbnz	r0, 801623a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8016238:	6898      	ldr	r0, [r3, #8]
 801623a:	6803      	ldr	r3, [r0, #0]
 801623c:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8016240:	69db      	ldr	r3, [r3, #28]
 8016242:	3401      	adds	r4, #1
 8016244:	4798      	blx	r3
 8016246:	b2a4      	uxth	r4, r4
 8016248:	e7ec      	b.n	8016224 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 801624a:	2300      	movs	r3, #0
 801624c:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
 8016250:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016252:	bf00      	nop
 8016254:	20013f5e 	.word	0x20013f5e
 8016258:	20000084 	.word	0x20000084
 801625c:	20013f60 	.word	0x20013f60

08016260 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8016260:	b510      	push	{r4, lr}
 8016262:	2300      	movs	r3, #0
 8016264:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8016268:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801626c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8016270:	4604      	mov	r4, r0
 8016272:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8016276:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 801627a:	429a      	cmp	r2, r3
 801627c:	d90e      	bls.n	801629c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801627e:	18e2      	adds	r2, r4, r3
 8016280:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8016284:	b122      	cbz	r2, 8016290 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8016286:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801628a:	6803      	ldr	r3, [r0, #0]
 801628c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801628e:	4798      	blx	r3
 8016290:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8016294:	3301      	adds	r3, #1
 8016296:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801629a:	e7ea      	b.n	8016272 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 801629c:	bd10      	pop	{r4, pc}

0801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801629e:	2300      	movs	r3, #0
 80162a0:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80162a4:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 80162a8:	30a4      	adds	r0, #164	@ 0xa4
 80162aa:	f802 3b01 	strb.w	r3, [r2], #1
 80162ae:	4282      	cmp	r2, r0
 80162b0:	d1fb      	bne.n	80162aa <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80162b2:	4770      	bx	lr

080162b4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80162b4:	b570      	push	{r4, r5, r6, lr}
 80162b6:	4c0b      	ldr	r4, [pc, #44]	@ (80162e4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80162b8:	4605      	mov	r5, r0
 80162ba:	6820      	ldr	r0, [r4, #0]
 80162bc:	460e      	mov	r6, r1
 80162be:	b110      	cbz	r0, 80162c6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80162c0:	6803      	ldr	r3, [r0, #0]
 80162c2:	695b      	ldr	r3, [r3, #20]
 80162c4:	4798      	blx	r3
 80162c6:	1d28      	adds	r0, r5, #4
 80162c8:	f7ff ffe9 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80162cc:	6026      	str	r6, [r4, #0]
 80162ce:	6833      	ldr	r3, [r6, #0]
 80162d0:	4630      	mov	r0, r6
 80162d2:	68db      	ldr	r3, [r3, #12]
 80162d4:	4798      	blx	r3
 80162d6:	682b      	ldr	r3, [r5, #0]
 80162d8:	4628      	mov	r0, r5
 80162da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80162dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80162e0:	4718      	bx	r3
 80162e2:	bf00      	nop
 80162e4:	20013fa4 	.word	0x20013fa4

080162e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80162e8:	2300      	movs	r3, #0
 80162ea:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 80162ee:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 80162f2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80162f4:	461a      	mov	r2, r3
 80162f6:	461c      	mov	r4, r3
 80162f8:	461d      	mov	r5, r3
 80162fa:	459c      	cmp	ip, r3
 80162fc:	dd1a      	ble.n	8016334 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80162fe:	18c6      	adds	r6, r0, r3
 8016300:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8016304:	b16e      	cbz	r6, 8016322 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8016306:	429a      	cmp	r2, r3
 8016308:	d008      	beq.n	801631c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801630a:	fa1f fe82 	uxth.w	lr, r2
 801630e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8016312:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8016316:	1887      	adds	r7, r0, r2
 8016318:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 801631c:	3201      	adds	r2, #1
 801631e:	3301      	adds	r3, #1
 8016320:	e7eb      	b.n	80162fa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8016322:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8016326:	4299      	cmp	r1, r3
 8016328:	bfa8      	it	ge
 801632a:	3501      	addge	r5, #1
 801632c:	429e      	cmp	r6, r3
 801632e:	bfc8      	it	gt
 8016330:	3401      	addgt	r4, #1
 8016332:	e7f4      	b.n	801631e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8016334:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8016338:	1b49      	subs	r1, r1, r5
 801633a:	1b1b      	subs	r3, r3, r4
 801633c:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8016340:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8016344:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8016348:	4293      	cmp	r3, r2
 801634a:	dd03      	ble.n	8016354 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801634c:	3b01      	subs	r3, #1
 801634e:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8016352:	e7f7      	b.n	8016344 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8016354:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016358 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016358:	b570      	push	{r4, r5, r6, lr}
 801635a:	4d16      	ldr	r5, [pc, #88]	@ (80163b4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801635c:	4604      	mov	r4, r0
 801635e:	6828      	ldr	r0, [r5, #0]
 8016360:	b140      	cbz	r0, 8016374 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016362:	7a03      	ldrb	r3, [r0, #8]
 8016364:	b933      	cbnz	r3, 8016374 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016366:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801636a:	6803      	ldr	r3, [r0, #0]
 801636c:	689b      	ldr	r3, [r3, #8]
 801636e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016372:	4718      	bx	r3
 8016374:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8016378:	4e0f      	ldr	r6, [pc, #60]	@ (80163b8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801637a:	b973      	cbnz	r3, 801639a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801637c:	b168      	cbz	r0, 801639a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801637e:	7a03      	ldrb	r3, [r0, #8]
 8016380:	b15b      	cbz	r3, 801639a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016382:	6830      	ldr	r0, [r6, #0]
 8016384:	b110      	cbz	r0, 801638c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8016386:	6803      	ldr	r3, [r0, #0]
 8016388:	691b      	ldr	r3, [r3, #16]
 801638a:	4798      	blx	r3
 801638c:	6828      	ldr	r0, [r5, #0]
 801638e:	6803      	ldr	r3, [r0, #0]
 8016390:	68db      	ldr	r3, [r3, #12]
 8016392:	4798      	blx	r3
 8016394:	2301      	movs	r3, #1
 8016396:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801639a:	3404      	adds	r4, #4
 801639c:	4620      	mov	r0, r4
 801639e:	f7ff ff5f 	bl	8016260 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80163a2:	4620      	mov	r0, r4
 80163a4:	f7ff ffa0 	bl	80162e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80163a8:	6830      	ldr	r0, [r6, #0]
 80163aa:	b110      	cbz	r0, 80163b2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80163ac:	6803      	ldr	r3, [r0, #0]
 80163ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80163b0:	e7dd      	b.n	801636e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80163b2:	bd70      	pop	{r4, r5, r6, pc}
 80163b4:	20013fa8 	.word	0x20013fa8
 80163b8:	20013fa4 	.word	0x20013fa4

080163bc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80163bc:	4603      	mov	r3, r0
 80163be:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 80163c2:	2200      	movs	r2, #0
 80163c4:	801a      	strh	r2, [r3, #0]
 80163c6:	805a      	strh	r2, [r3, #2]
 80163c8:	809a      	strh	r2, [r3, #4]
 80163ca:	80da      	strh	r2, [r3, #6]
 80163cc:	3308      	adds	r3, #8
 80163ce:	428b      	cmp	r3, r1
 80163d0:	d1f8      	bne.n	80163c4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80163d2:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 80163d6:	4770      	bx	lr

080163d8 <_ZN8touchgfx11ApplicationC1Ev>:
 80163d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80163da:	4606      	mov	r6, r0
 80163dc:	4b1c      	ldr	r3, [pc, #112]	@ (8016450 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80163de:	f846 3b04 	str.w	r3, [r6], #4
 80163e2:	4604      	mov	r4, r0
 80163e4:	2500      	movs	r5, #0
 80163e6:	22a8      	movs	r2, #168	@ 0xa8
 80163e8:	2100      	movs	r1, #0
 80163ea:	4630      	mov	r0, r6
 80163ec:	f013 fe9d 	bl	802a12a <memset>
 80163f0:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 80163f4:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80163f8:	f7ff ffe0 	bl	80163bc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80163fc:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8016400:	f7ff ffdc 	bl	80163bc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016404:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8016408:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 801640c:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8016410:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8016414:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8016418:	490e      	ldr	r1, [pc, #56]	@ (8016454 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801641a:	480f      	ldr	r0, [pc, #60]	@ (8016458 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801641c:	4f0f      	ldr	r7, [pc, #60]	@ (801645c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801641e:	f011 fd77 	bl	8027f10 <CRC_Lock>
 8016422:	4b0f      	ldr	r3, [pc, #60]	@ (8016460 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016424:	b158      	cbz	r0, 801643e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8016426:	801d      	strh	r5, [r3, #0]
 8016428:	4a0e      	ldr	r2, [pc, #56]	@ (8016464 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801642a:	2300      	movs	r3, #0
 801642c:	6013      	str	r3, [r2, #0]
 801642e:	4a0e      	ldr	r2, [pc, #56]	@ (8016468 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016430:	603b      	str	r3, [r7, #0]
 8016432:	4630      	mov	r0, r6
 8016434:	6013      	str	r3, [r2, #0]
 8016436:	f7ff ff32 	bl	801629e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801643a:	4620      	mov	r0, r4
 801643c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801643e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8016442:	2002      	movs	r0, #2
 8016444:	801a      	strh	r2, [r3, #0]
 8016446:	6038      	str	r0, [r7, #0]
 8016448:	f001 fe4c 	bl	80180e4 <_ZN8touchgfx6Screen4drawEv>
 801644c:	e7ec      	b.n	8016428 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801644e:	bf00      	nop
 8016450:	0802d778 	.word	0x0802d778
 8016454:	b5e8b5cd 	.word	0xb5e8b5cd
 8016458:	f407a5c2 	.word	0xf407a5c2
 801645c:	20013fa4 	.word	0x20013fa4
 8016460:	20000084 	.word	0x20000084
 8016464:	20013fb4 	.word	0x20013fb4
 8016468:	20013fa8 	.word	0x20013fa8

0801646c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801646c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8016470:	3b01      	subs	r3, #1
 8016472:	b29b      	uxth	r3, r3
 8016474:	428b      	cmp	r3, r1
 8016476:	b510      	push	{r4, lr}
 8016478:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 801647c:	d908      	bls.n	8016490 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801647e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016482:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016486:	681a      	ldr	r2, [r3, #0]
 8016488:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801648c:	685a      	ldr	r2, [r3, #4]
 801648e:	6062      	str	r2, [r4, #4]
 8016490:	bd10      	pop	{r4, pc}
	...

08016494 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016498:	4b8f      	ldr	r3, [pc, #572]	@ (80166d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801649a:	b08f      	sub	sp, #60	@ 0x3c
 801649c:	ac0a      	add	r4, sp, #40	@ 0x28
 801649e:	e884 0006 	stmia.w	r4, {r1, r2}
 80164a2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80164a6:	4b8d      	ldr	r3, [pc, #564]	@ (80166dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80164a8:	4683      	mov	fp, r0
 80164aa:	f9b3 1000 	ldrsh.w	r1, [r3]
 80164ae:	4620      	mov	r0, r4
 80164b0:	f7ff fdeb 	bl	801608a <_ZN8touchgfx4Rect10restrictToEss>
 80164b4:	4620      	mov	r0, r4
 80164b6:	f7f8 ffe4 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 80164ba:	2800      	cmp	r0, #0
 80164bc:	d16a      	bne.n	8016594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80164be:	9403      	str	r4, [sp, #12]
 80164c0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80164c4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80164c8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80164cc:	35a4      	adds	r5, #164	@ 0xa4
 80164ce:	9301      	str	r3, [sp, #4]
 80164d0:	b15c      	cbz	r4, 80164ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80164d2:	4629      	mov	r1, r5
 80164d4:	9803      	ldr	r0, [sp, #12]
 80164d6:	f7ff fe29 	bl	801612c <_ZNK8touchgfx4Rect8includesERKS0_>
 80164da:	3c01      	subs	r4, #1
 80164dc:	b118      	cbz	r0, 80164e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80164de:	b2a1      	uxth	r1, r4
 80164e0:	9801      	ldr	r0, [sp, #4]
 80164e2:	f7ff ffc3 	bl	801646c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80164e6:	3d08      	subs	r5, #8
 80164e8:	e7f2      	b.n	80164d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80164ea:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 80164ee:	f8cd a010 	str.w	sl, [sp, #16]
 80164f2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80164f6:	9302      	str	r3, [sp, #8]
 80164f8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80164fc:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8016500:	9306      	str	r3, [sp, #24]
 8016502:	445c      	add	r4, fp
 8016504:	2500      	movs	r5, #0
 8016506:	4626      	mov	r6, r4
 8016508:	f8cd a014 	str.w	sl, [sp, #20]
 801650c:	462f      	mov	r7, r5
 801650e:	9b05      	ldr	r3, [sp, #20]
 8016510:	2b00      	cmp	r3, #0
 8016512:	d073      	beq.n	80165fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016514:	9903      	ldr	r1, [sp, #12]
 8016516:	4630      	mov	r0, r6
 8016518:	f7ff fd95 	bl	8016046 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801651c:	b350      	cbz	r0, 8016574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801651e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8016522:	f9b6 c000 	ldrsh.w	ip, [r6]
 8016526:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 801652a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801652e:	45e6      	cmp	lr, ip
 8016530:	db33      	blt.n	801659a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016532:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8016536:	88b3      	ldrh	r3, [r6, #4]
 8016538:	4472      	add	r2, lr
 801653a:	4463      	add	r3, ip
 801653c:	b212      	sxth	r2, r2
 801653e:	b21b      	sxth	r3, r3
 8016540:	429a      	cmp	r2, r3
 8016542:	dc2a      	bgt.n	801659a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016544:	88f3      	ldrh	r3, [r6, #6]
 8016546:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801654a:	fa1f f289 	uxth.w	r2, r9
 801654e:	4413      	add	r3, r2
 8016550:	b29b      	uxth	r3, r3
 8016552:	45c8      	cmp	r8, r9
 8016554:	fa1f fc88 	uxth.w	ip, r8
 8016558:	fa0f fe83 	sxth.w	lr, r3
 801655c:	db0f      	blt.n	801657e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801655e:	eba3 030c 	sub.w	r3, r3, ip
 8016562:	1ac9      	subs	r1, r1, r3
 8016564:	b209      	sxth	r1, r1
 8016566:	2900      	cmp	r1, #0
 8016568:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801656c:	dd12      	ble.n	8016594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801656e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8016572:	4605      	mov	r5, r0
 8016574:	9b05      	ldr	r3, [sp, #20]
 8016576:	3b01      	subs	r3, #1
 8016578:	9305      	str	r3, [sp, #20]
 801657a:	3e08      	subs	r6, #8
 801657c:	e7c7      	b.n	801650e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801657e:	4461      	add	r1, ip
 8016580:	b209      	sxth	r1, r1
 8016582:	4571      	cmp	r1, lr
 8016584:	dc38      	bgt.n	80165f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016586:	eba2 020c 	sub.w	r2, r2, ip
 801658a:	b212      	sxth	r2, r2
 801658c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8016590:	2a00      	cmp	r2, #0
 8016592:	dcee      	bgt.n	8016572 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016594:	b00f      	add	sp, #60	@ 0x3c
 8016596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801659a:	45c8      	cmp	r8, r9
 801659c:	db2c      	blt.n	80165f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801659e:	88f3      	ldrh	r3, [r6, #6]
 80165a0:	4499      	add	r9, r3
 80165a2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 80165a6:	4498      	add	r8, r3
 80165a8:	fa0f f989 	sxth.w	r9, r9
 80165ac:	fa0f f888 	sxth.w	r8, r8
 80165b0:	45c1      	cmp	r9, r8
 80165b2:	db21      	blt.n	80165f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80165b4:	88b3      	ldrh	r3, [r6, #4]
 80165b6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80165ba:	fa1f f28c 	uxth.w	r2, ip
 80165be:	4413      	add	r3, r2
 80165c0:	b29b      	uxth	r3, r3
 80165c2:	45e6      	cmp	lr, ip
 80165c4:	fa1f f88e 	uxth.w	r8, lr
 80165c8:	fa0f f983 	sxth.w	r9, r3
 80165cc:	db0a      	blt.n	80165e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80165ce:	eba3 0308 	sub.w	r3, r3, r8
 80165d2:	1ac9      	subs	r1, r1, r3
 80165d4:	b209      	sxth	r1, r1
 80165d6:	2900      	cmp	r1, #0
 80165d8:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80165dc:	ddda      	ble.n	8016594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80165de:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80165e2:	e7c6      	b.n	8016572 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80165e4:	4441      	add	r1, r8
 80165e6:	b209      	sxth	r1, r1
 80165e8:	4549      	cmp	r1, r9
 80165ea:	dc05      	bgt.n	80165f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80165ec:	eba2 0208 	sub.w	r2, r2, r8
 80165f0:	b212      	sxth	r2, r2
 80165f2:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80165f6:	e7cb      	b.n	8016590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80165f8:	4607      	mov	r7, r0
 80165fa:	e7bb      	b.n	8016574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80165fc:	2d00      	cmp	r5, #0
 80165fe:	d181      	bne.n	8016504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016600:	2f00      	cmp	r7, #0
 8016602:	f000 81dd 	beq.w	80169c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016606:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801660a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 801660e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8016612:	b2b3      	uxth	r3, r6
 8016614:	9305      	str	r3, [sp, #20]
 8016616:	9a05      	ldr	r2, [sp, #20]
 8016618:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801661c:	4413      	add	r3, r2
 801661e:	b2ba      	uxth	r2, r7
 8016620:	4492      	add	sl, r2
 8016622:	b29b      	uxth	r3, r3
 8016624:	fa1f fa8a 	uxth.w	sl, sl
 8016628:	fa0f f883 	sxth.w	r8, r3
 801662c:	fa0f f98a 	sxth.w	r9, sl
 8016630:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016634:	9b04      	ldr	r3, [sp, #16]
 8016636:	2b00      	cmp	r3, #0
 8016638:	d052      	beq.n	80166e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801663a:	9903      	ldr	r1, [sp, #12]
 801663c:	4620      	mov	r0, r4
 801663e:	f7ff fd02 	bl	8016046 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016642:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016646:	b1c0      	cbz	r0, 801667a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016648:	f9b4 e000 	ldrsh.w	lr, [r4]
 801664c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016650:	4576      	cmp	r6, lr
 8016652:	dc22      	bgt.n	801669a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016654:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016658:	44f4      	add	ip, lr
 801665a:	fa0f fc8c 	sxth.w	ip, ip
 801665e:	45e0      	cmp	r8, ip
 8016660:	db1b      	blt.n	801669a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016662:	428f      	cmp	r7, r1
 8016664:	fa1f fc81 	uxth.w	ip, r1
 8016668:	88e1      	ldrh	r1, [r4, #6]
 801666a:	dc0d      	bgt.n	8016688 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801666c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016670:	eba1 010c 	sub.w	r1, r1, ip
 8016674:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016678:	80e1      	strh	r1, [r4, #6]
 801667a:	4628      	mov	r0, r5
 801667c:	9904      	ldr	r1, [sp, #16]
 801667e:	3901      	subs	r1, #1
 8016680:	9104      	str	r1, [sp, #16]
 8016682:	3c08      	subs	r4, #8
 8016684:	4605      	mov	r5, r0
 8016686:	e7d3      	b.n	8016630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016688:	4461      	add	r1, ip
 801668a:	b209      	sxth	r1, r1
 801668c:	4549      	cmp	r1, r9
 801668e:	dcf5      	bgt.n	801667c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016690:	eba2 0c0c 	sub.w	ip, r2, ip
 8016694:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016698:	e7ef      	b.n	801667a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801669a:	428f      	cmp	r7, r1
 801669c:	dcee      	bgt.n	801667c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801669e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80166a2:	4461      	add	r1, ip
 80166a4:	b209      	sxth	r1, r1
 80166a6:	4589      	cmp	r9, r1
 80166a8:	dbe8      	blt.n	801667c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80166aa:	4576      	cmp	r6, lr
 80166ac:	fa1f fc8e 	uxth.w	ip, lr
 80166b0:	88a1      	ldrh	r1, [r4, #4]
 80166b2:	dc07      	bgt.n	80166c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80166b4:	eba3 0c0c 	sub.w	ip, r3, ip
 80166b8:	eba1 010c 	sub.w	r1, r1, ip
 80166bc:	f8a4 8000 	strh.w	r8, [r4]
 80166c0:	80a1      	strh	r1, [r4, #4]
 80166c2:	e7da      	b.n	801667a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80166c4:	4461      	add	r1, ip
 80166c6:	b209      	sxth	r1, r1
 80166c8:	4588      	cmp	r8, r1
 80166ca:	dbd7      	blt.n	801667c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80166cc:	9905      	ldr	r1, [sp, #20]
 80166ce:	eba1 0c0c 	sub.w	ip, r1, ip
 80166d2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80166d6:	e7d0      	b.n	801667a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80166d8:	20013f56 	.word	0x20013f56
 80166dc:	20013f54 	.word	0x20013f54
 80166e0:	2d00      	cmp	r5, #0
 80166e2:	f000 816d 	beq.w	80169c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80166e6:	9b06      	ldr	r3, [sp, #24]
 80166e8:	445b      	add	r3, fp
 80166ea:	461c      	mov	r4, r3
 80166ec:	9b02      	ldr	r3, [sp, #8]
 80166ee:	3301      	adds	r3, #1
 80166f0:	f000 8166 	beq.w	80169c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80166f4:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 80166f8:	4629      	mov	r1, r5
 80166fa:	9803      	ldr	r0, [sp, #12]
 80166fc:	f7ff fd16 	bl	801612c <_ZNK8touchgfx4Rect8includesERKS0_>
 8016700:	b120      	cbz	r0, 801670c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016702:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016706:	9801      	ldr	r0, [sp, #4]
 8016708:	f7ff feb0 	bl	801646c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801670c:	9903      	ldr	r1, [sp, #12]
 801670e:	4628      	mov	r0, r5
 8016710:	f7ff fc99 	bl	8016046 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016714:	2800      	cmp	r0, #0
 8016716:	f000 809c 	beq.w	8016852 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801671a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 801671e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8016722:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8016726:	9309      	str	r3, [sp, #36]	@ 0x24
 8016728:	fa1f f189 	uxth.w	r1, r9
 801672c:	eb01 0c03 	add.w	ip, r1, r3
 8016730:	fa1f fa8c 	uxth.w	sl, ip
 8016734:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8016738:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 801673c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8016740:	b283      	uxth	r3, r0
 8016742:	eb03 050c 	add.w	r5, r3, ip
 8016746:	b2ad      	uxth	r5, r5
 8016748:	9505      	str	r5, [sp, #20]
 801674a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801674e:	9504      	str	r5, [sp, #16]
 8016750:	4548      	cmp	r0, r9
 8016752:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8016756:	f340 8099 	ble.w	801688c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801675a:	1a5b      	subs	r3, r3, r1
 801675c:	b29b      	uxth	r3, r3
 801675e:	4596      	cmp	lr, r2
 8016760:	fa0f f08a 	sxth.w	r0, sl
 8016764:	b21e      	sxth	r6, r3
 8016766:	dd2e      	ble.n	80167c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016768:	9f02      	ldr	r7, [sp, #8]
 801676a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801676e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016772:	9f04      	ldr	r7, [sp, #16]
 8016774:	1a3f      	subs	r7, r7, r0
 8016776:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 801677a:	fa1f fe8e 	uxth.w	lr, lr
 801677e:	b292      	uxth	r2, r2
 8016780:	ebae 0102 	sub.w	r1, lr, r2
 8016784:	44a6      	add	lr, r4
 8016786:	4402      	add	r2, r0
 8016788:	b289      	uxth	r1, r1
 801678a:	fa0f fe8e 	sxth.w	lr, lr
 801678e:	b212      	sxth	r2, r2
 8016790:	b20d      	sxth	r5, r1
 8016792:	ebae 0202 	sub.w	r2, lr, r2
 8016796:	436f      	muls	r7, r5
 8016798:	4372      	muls	r2, r6
 801679a:	4297      	cmp	r7, r2
 801679c:	db09      	blt.n	80167b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801679e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 80167a2:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 80167a6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80167aa:	449c      	add	ip, r3
 80167ac:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80167b0:	e686      	b.n	80164c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80167b2:	4421      	add	r1, r4
 80167b4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 80167b8:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 80167bc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80167c0:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80167c4:	e67c      	b.n	80164c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80167c6:	9f04      	ldr	r7, [sp, #16]
 80167c8:	42b8      	cmp	r0, r7
 80167ca:	da27      	bge.n	801681c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80167cc:	9902      	ldr	r1, [sp, #8]
 80167ce:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 80167d2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80167d6:	eb05 010e 	add.w	r1, r5, lr
 80167da:	fa1f f881 	uxth.w	r8, r1
 80167de:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 80167e2:	4411      	add	r1, r2
 80167e4:	eba1 0108 	sub.w	r1, r1, r8
 80167e8:	b289      	uxth	r1, r1
 80167ea:	fa0f f988 	sxth.w	r9, r8
 80167ee:	eba2 020e 	sub.w	r2, r2, lr
 80167f2:	fa0f f881 	sxth.w	r8, r1
 80167f6:	1a3f      	subs	r7, r7, r0
 80167f8:	4372      	muls	r2, r6
 80167fa:	fb08 f707 	mul.w	r7, r8, r7
 80167fe:	42ba      	cmp	r2, r7
 8016800:	dc06      	bgt.n	8016810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016802:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8016806:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 801680a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 801680e:	e7ca      	b.n	80167a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016810:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8016814:	4429      	add	r1, r5
 8016816:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801681a:	e651      	b.n	80164c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801681c:	9805      	ldr	r0, [sp, #20]
 801681e:	ebaa 0000 	sub.w	r0, sl, r0
 8016822:	b280      	uxth	r0, r0
 8016824:	2d06      	cmp	r5, #6
 8016826:	fa0f fe80 	sxth.w	lr, r0
 801682a:	d817      	bhi.n	801685c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801682c:	9b04      	ldr	r3, [sp, #16]
 801682e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8016832:	1c6b      	adds	r3, r5, #1
 8016834:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8016838:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 801683c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8016840:	9b01      	ldr	r3, [sp, #4]
 8016842:	9801      	ldr	r0, [sp, #4]
 8016844:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016848:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801684c:	805a      	strh	r2, [r3, #2]
 801684e:	809e      	strh	r6, [r3, #4]
 8016850:	80d9      	strh	r1, [r3, #6]
 8016852:	9b02      	ldr	r3, [sp, #8]
 8016854:	3b01      	subs	r3, #1
 8016856:	9302      	str	r3, [sp, #8]
 8016858:	3c08      	subs	r4, #8
 801685a:	e747      	b.n	80166ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801685c:	9a02      	ldr	r2, [sp, #8]
 801685e:	45b6      	cmp	lr, r6
 8016860:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016864:	db0d      	blt.n	8016882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016866:	449c      	add	ip, r3
 8016868:	fa1f fc8c 	uxth.w	ip, ip
 801686c:	445a      	add	r2, fp
 801686e:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8016872:	448c      	add	ip, r1
 8016874:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8016878:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 801687c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8016880:	e61e      	b.n	80164c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016882:	445a      	add	r2, fp
 8016884:	4484      	add	ip, r0
 8016886:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 801688a:	e78f      	b.n	80167ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801688c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8016890:	fa1f f18e 	uxth.w	r1, lr
 8016894:	eb01 0806 	add.w	r8, r1, r6
 8016898:	b293      	uxth	r3, r2
 801689a:	fa1f f888 	uxth.w	r8, r8
 801689e:	9306      	str	r3, [sp, #24]
 80168a0:	fa0f f388 	sxth.w	r3, r8
 80168a4:	9307      	str	r3, [sp, #28]
 80168a6:	9f06      	ldr	r7, [sp, #24]
 80168a8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80168ac:	443b      	add	r3, r7
 80168ae:	b29b      	uxth	r3, r3
 80168b0:	4596      	cmp	lr, r2
 80168b2:	9308      	str	r3, [sp, #32]
 80168b4:	da24      	bge.n	8016900 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80168b6:	9905      	ldr	r1, [sp, #20]
 80168b8:	eba3 0308 	sub.w	r3, r3, r8
 80168bc:	ebaa 0401 	sub.w	r4, sl, r1
 80168c0:	b2a4      	uxth	r4, r4
 80168c2:	b29b      	uxth	r3, r3
 80168c4:	b225      	sxth	r5, r4
 80168c6:	b219      	sxth	r1, r3
 80168c8:	eba2 020e 	sub.w	r2, r2, lr
 80168cc:	eba9 0000 	sub.w	r0, r9, r0
 80168d0:	436a      	muls	r2, r5
 80168d2:	4348      	muls	r0, r1
 80168d4:	4282      	cmp	r2, r0
 80168d6:	9a02      	ldr	r2, [sp, #8]
 80168d8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80168dc:	445a      	add	r2, fp
 80168de:	dc06      	bgt.n	80168ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80168e0:	9b07      	ldr	r3, [sp, #28]
 80168e2:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 80168e6:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 80168ea:	44a4      	add	ip, r4
 80168ec:	e75e      	b.n	80167ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80168ee:	9904      	ldr	r1, [sp, #16]
 80168f0:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 80168f4:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 80168f8:	4433      	add	r3, r6
 80168fa:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80168fe:	e5df      	b.n	80164c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016900:	9f06      	ldr	r7, [sp, #24]
 8016902:	9b04      	ldr	r3, [sp, #16]
 8016904:	1bc9      	subs	r1, r1, r7
 8016906:	fa0f f78a 	sxth.w	r7, sl
 801690a:	b289      	uxth	r1, r1
 801690c:	429f      	cmp	r7, r3
 801690e:	fa0f fe81 	sxth.w	lr, r1
 8016912:	dd23      	ble.n	801695c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016914:	9a05      	ldr	r2, [sp, #20]
 8016916:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801691a:	9d07      	ldr	r5, [sp, #28]
 801691c:	ebaa 0202 	sub.w	r2, sl, r2
 8016920:	b292      	uxth	r2, r2
 8016922:	eba5 0a03 	sub.w	sl, r5, r3
 8016926:	b214      	sxth	r4, r2
 8016928:	eba9 0000 	sub.w	r0, r9, r0
 801692c:	9b02      	ldr	r3, [sp, #8]
 801692e:	fb0e f000 	mul.w	r0, lr, r0
 8016932:	fb04 fa0a 	mul.w	sl, r4, sl
 8016936:	00db      	lsls	r3, r3, #3
 8016938:	4550      	cmp	r0, sl
 801693a:	445b      	add	r3, fp
 801693c:	db03      	blt.n	8016946 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801693e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8016942:	4494      	add	ip, r2
 8016944:	e732      	b.n	80167ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016946:	9a04      	ldr	r2, [sp, #16]
 8016948:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 801694c:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8016950:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8016954:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8016958:	4431      	add	r1, r6
 801695a:	e75c      	b.n	8016816 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801695c:	9b08      	ldr	r3, [sp, #32]
 801695e:	eba3 0308 	sub.w	r3, r3, r8
 8016962:	b29b      	uxth	r3, r3
 8016964:	2d06      	cmp	r5, #6
 8016966:	b218      	sxth	r0, r3
 8016968:	d813      	bhi.n	8016992 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801696a:	9b07      	ldr	r3, [sp, #28]
 801696c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8016970:	1c6b      	adds	r3, r5, #1
 8016972:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8016976:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801697a:	9b01      	ldr	r3, [sp, #4]
 801697c:	9901      	ldr	r1, [sp, #4]
 801697e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016982:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016986:	805a      	strh	r2, [r3, #2]
 8016988:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801698a:	809a      	strh	r2, [r3, #4]
 801698c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016990:	e75f      	b.n	8016852 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016992:	9c02      	ldr	r4, [sp, #8]
 8016994:	4570      	cmp	r0, lr
 8016996:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801699a:	db0d      	blt.n	80169b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801699c:	4431      	add	r1, r6
 801699e:	9b06      	ldr	r3, [sp, #24]
 80169a0:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80169a4:	b289      	uxth	r1, r1
 80169a6:	445c      	add	r4, fp
 80169a8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80169ac:	4419      	add	r1, r3
 80169ae:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 80169b2:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 80169b6:	e583      	b.n	80164c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80169b8:	445c      	add	r4, fp
 80169ba:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 80169be:	e79b      	b.n	80168f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80169c0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80169c4:	1e65      	subs	r5, r4, #1
 80169c6:	b2ad      	uxth	r5, r5
 80169c8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80169cc:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80169d0:	42b5      	cmp	r5, r6
 80169d2:	d044      	beq.n	8016a5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80169d4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80169d8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 80169dc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80169e0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 80169e4:	4282      	cmp	r2, r0
 80169e6:	d11f      	bne.n	8016a28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80169e8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 80169ec:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80169f0:	459c      	cmp	ip, r3
 80169f2:	d119      	bne.n	8016a28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80169f4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 80169f8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80169fc:	19d8      	adds	r0, r3, r7
 80169fe:	b200      	sxth	r0, r0
 8016a00:	4288      	cmp	r0, r1
 8016a02:	d109      	bne.n	8016a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016a04:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8016a08:	4413      	add	r3, r2
 8016a0a:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8016a0e:	4629      	mov	r1, r5
 8016a10:	9801      	ldr	r0, [sp, #4]
 8016a12:	f7ff fd2b 	bl	801646c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016a16:	e003      	b.n	8016a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016a18:	4411      	add	r1, r2
 8016a1a:	b209      	sxth	r1, r1
 8016a1c:	42b9      	cmp	r1, r7
 8016a1e:	d0f3      	beq.n	8016a08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016a20:	3d01      	subs	r5, #1
 8016a22:	b2ad      	uxth	r5, r5
 8016a24:	3c08      	subs	r4, #8
 8016a26:	e7d3      	b.n	80169d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016a28:	42b9      	cmp	r1, r7
 8016a2a:	d1f9      	bne.n	8016a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016a2c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8016a30:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8016a34:	4299      	cmp	r1, r3
 8016a36:	d1f3      	bne.n	8016a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016a38:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8016a3c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8016a40:	181f      	adds	r7, r3, r0
 8016a42:	b23f      	sxth	r7, r7
 8016a44:	42ba      	cmp	r2, r7
 8016a46:	d105      	bne.n	8016a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016a48:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8016a4c:	440b      	add	r3, r1
 8016a4e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8016a52:	e7dc      	b.n	8016a0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016a54:	440a      	add	r2, r1
 8016a56:	b212      	sxth	r2, r2
 8016a58:	4290      	cmp	r0, r2
 8016a5a:	d1e1      	bne.n	8016a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016a5c:	e7f6      	b.n	8016a4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8016a5e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8016a62:	2e07      	cmp	r6, #7
 8016a64:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016a68:	d812      	bhi.n	8016a90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8016a6a:	1c75      	adds	r5, r6, #1
 8016a6c:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8016a70:	9d01      	ldr	r5, [sp, #4]
 8016a72:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8016a76:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8016a7a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8016a7e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8016a82:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016a86:	442c      	add	r4, r5
 8016a88:	8061      	strh	r1, [r4, #2]
 8016a8a:	80a2      	strh	r2, [r4, #4]
 8016a8c:	80e3      	strh	r3, [r4, #6]
 8016a8e:	e581      	b.n	8016594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016a90:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8016a94:	3e01      	subs	r6, #1
 8016a96:	445c      	add	r4, fp
 8016a98:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8016a9c:	f04f 37ff 	mov.w	r7, #4294967295
 8016aa0:	2500      	movs	r5, #0
 8016aa2:	9305      	str	r3, [sp, #20]
 8016aa4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8016aa8:	9302      	str	r3, [sp, #8]
 8016aaa:	1e72      	subs	r2, r6, #1
 8016aac:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8016ab0:	9304      	str	r3, [sp, #16]
 8016ab2:	4691      	mov	r9, r2
 8016ab4:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8016ab8:	f1b9 3fff 	cmp.w	r9, #4294967295
 8016abc:	bf14      	ite	ne
 8016abe:	9905      	ldrne	r1, [sp, #20]
 8016ac0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8016ac4:	6818      	ldr	r0, [r3, #0]
 8016ac6:	9207      	str	r2, [sp, #28]
 8016ac8:	bf18      	it	ne
 8016aca:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8016ace:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8016ad2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016ad6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8016ada:	9306      	str	r3, [sp, #24]
 8016adc:	fb18 f801 	smulbb	r8, r8, r1
 8016ae0:	6859      	ldr	r1, [r3, #4]
 8016ae2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016ae6:	4671      	mov	r1, lr
 8016ae8:	a80c      	add	r0, sp, #48	@ 0x30
 8016aea:	f7ff fb45 	bl	8016178 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016aee:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8016af2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8016af6:	9b04      	ldr	r3, [sp, #16]
 8016af8:	9a02      	ldr	r2, [sp, #8]
 8016afa:	fb10 f001 	smulbb	r0, r0, r1
 8016afe:	fb02 8803 	mla	r8, r2, r3, r8
 8016b02:	eba0 0108 	sub.w	r1, r0, r8
 8016b06:	f04f 0c08 	mov.w	ip, #8
 8016b0a:	fb90 f0fc 	sdiv	r0, r0, ip
 8016b0e:	4288      	cmp	r0, r1
 8016b10:	dc20      	bgt.n	8016b54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016b12:	4551      	cmp	r1, sl
 8016b14:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016b18:	da03      	bge.n	8016b22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8016b1a:	b1d9      	cbz	r1, 8016b54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016b1c:	468a      	mov	sl, r1
 8016b1e:	464f      	mov	r7, r9
 8016b20:	4635      	mov	r5, r6
 8016b22:	f109 39ff 	add.w	r9, r9, #4294967295
 8016b26:	f119 0f02 	cmn.w	r9, #2
 8016b2a:	d1c5      	bne.n	8016ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8016b2c:	4616      	mov	r6, r2
 8016b2e:	3201      	adds	r2, #1
 8016b30:	f1a4 0408 	sub.w	r4, r4, #8
 8016b34:	d1b6      	bne.n	8016aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8016b36:	9b01      	ldr	r3, [sp, #4]
 8016b38:	b2ac      	uxth	r4, r5
 8016b3a:	00ed      	lsls	r5, r5, #3
 8016b3c:	1958      	adds	r0, r3, r5
 8016b3e:	1c7b      	adds	r3, r7, #1
 8016b40:	d10b      	bne.n	8016b5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8016b42:	4601      	mov	r1, r0
 8016b44:	9803      	ldr	r0, [sp, #12]
 8016b46:	f7ff fb17 	bl	8016178 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016b4a:	4621      	mov	r1, r4
 8016b4c:	9801      	ldr	r0, [sp, #4]
 8016b4e:	f7ff fc8d 	bl	801646c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016b52:	e4b5      	b.n	80164c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016b54:	464f      	mov	r7, r9
 8016b56:	4635      	mov	r5, r6
 8016b58:	e7ed      	b.n	8016b36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8016b5a:	9b01      	ldr	r3, [sp, #4]
 8016b5c:	00ff      	lsls	r7, r7, #3
 8016b5e:	19d9      	adds	r1, r3, r7
 8016b60:	f7ff fb0a 	bl	8016178 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016b64:	9b03      	ldr	r3, [sp, #12]
 8016b66:	cb03      	ldmia	r3!, {r0, r1}
 8016b68:	445f      	add	r7, fp
 8016b6a:	445d      	add	r5, fp
 8016b6c:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8016b70:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8016b74:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016b78:	9b03      	ldr	r3, [sp, #12]
 8016b7a:	6869      	ldr	r1, [r5, #4]
 8016b7c:	c303      	stmia	r3!, {r0, r1}
 8016b7e:	e7e4      	b.n	8016b4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016b80 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b84:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8016b88:	b09b      	sub	sp, #108	@ 0x6c
 8016b8a:	4604      	mov	r4, r0
 8016b8c:	4630      	mov	r0, r6
 8016b8e:	f7f8 fc78 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016b92:	4605      	mov	r5, r0
 8016b94:	b948      	cbnz	r0, 8016baa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8016b96:	6823      	ldr	r3, [r4, #0]
 8016b98:	e896 0006 	ldmia.w	r6, {r1, r2}
 8016b9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8016b9e:	4620      	mov	r0, r4
 8016ba0:	4798      	blx	r3
 8016ba2:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8016ba6:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8016baa:	4bc6      	ldr	r3, [pc, #792]	@ (8016ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8016bac:	681b      	ldr	r3, [r3, #0]
 8016bae:	2b00      	cmp	r3, #0
 8016bb0:	d03f      	beq.n	8016c32 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016bb2:	4dc5      	ldr	r5, [pc, #788]	@ (8016ec8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8016bb4:	4628      	mov	r0, r5
 8016bb6:	f7f8 fc64 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016bba:	4606      	mov	r6, r0
 8016bbc:	2800      	cmp	r0, #0
 8016bbe:	d138      	bne.n	8016c32 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016bc0:	4628      	mov	r0, r5
 8016bc2:	f7ff f96d 	bl	8015ea0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016bc6:	6823      	ldr	r3, [r4, #0]
 8016bc8:	6829      	ldr	r1, [r5, #0]
 8016bca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8016bcc:	686a      	ldr	r2, [r5, #4]
 8016bce:	4620      	mov	r0, r4
 8016bd0:	4798      	blx	r3
 8016bd2:	802e      	strh	r6, [r5, #0]
 8016bd4:	806e      	strh	r6, [r5, #2]
 8016bd6:	80ae      	strh	r6, [r5, #4]
 8016bd8:	80ee      	strh	r6, [r5, #6]
 8016bda:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8016bde:	4dbb      	ldr	r5, [pc, #748]	@ (8016ecc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016be0:	4640      	mov	r0, r8
 8016be2:	f7ff fbeb 	bl	80163bc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016be6:	882e      	ldrh	r6, [r5, #0]
 8016be8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8016bec:	4633      	mov	r3, r6
 8016bee:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8016bf2:	42bb      	cmp	r3, r7
 8016bf4:	d224      	bcs.n	8016c40 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016bf6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8016bfa:	2907      	cmp	r1, #7
 8016bfc:	d816      	bhi.n	8016c2c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8016bfe:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016c02:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8016c06:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8016c0a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8016c0e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016c12:	1c4a      	adds	r2, r1, #1
 8016c14:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8016c18:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8016c1c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8016c20:	f8a2 a002 	strh.w	sl, [r2, #2]
 8016c24:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016c28:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016c2c:	3301      	adds	r3, #1
 8016c2e:	b29b      	uxth	r3, r3
 8016c30:	e7df      	b.n	8016bf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8016c32:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8016c36:	2b00      	cmp	r3, #0
 8016c38:	d1cf      	bne.n	8016bda <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8016c3a:	b01b      	add	sp, #108	@ 0x6c
 8016c3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c40:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8016c44:	42b3      	cmp	r3, r6
 8016c46:	d90c      	bls.n	8016c62 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8016c48:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8016c4c:	6822      	ldr	r2, [r4, #0]
 8016c4e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8016c52:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8016c54:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8016c58:	4620      	mov	r0, r4
 8016c5a:	3601      	adds	r6, #1
 8016c5c:	47b8      	blx	r7
 8016c5e:	b2b6      	uxth	r6, r6
 8016c60:	e7ee      	b.n	8016c40 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016c62:	4a9b      	ldr	r2, [pc, #620]	@ (8016ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016c64:	6813      	ldr	r3, [r2, #0]
 8016c66:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8016c6a:	2b01      	cmp	r3, #1
 8016c6c:	4691      	mov	r9, r2
 8016c6e:	f040 80e2 	bne.w	8016e36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8016c72:	8829      	ldrh	r1, [r5, #0]
 8016c74:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8016c78:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8016c7c:	33ae      	adds	r3, #174	@ 0xae
 8016c7e:	2600      	movs	r6, #0
 8016c80:	428f      	cmp	r7, r1
 8016c82:	f103 0308 	add.w	r3, r3, #8
 8016c86:	dd0a      	ble.n	8016c9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016c88:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8016c8c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8016c90:	4402      	add	r2, r0
 8016c92:	b212      	sxth	r2, r2
 8016c94:	4296      	cmp	r6, r2
 8016c96:	bfb8      	it	lt
 8016c98:	4616      	movlt	r6, r2
 8016c9a:	3101      	adds	r1, #1
 8016c9c:	e7f0      	b.n	8016c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8016c9e:	4b8d      	ldr	r3, [pc, #564]	@ (8016ed4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8016ca0:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8016ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8016ca4:	881b      	ldrh	r3, [r3, #0]
 8016ca6:	2b0f      	cmp	r3, #15
 8016ca8:	bf88      	it	hi
 8016caa:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8016cae:	f04f 0300 	mov.w	r3, #0
 8016cb2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8016cb6:	bf98      	it	ls
 8016cb8:	f04f 0b01 	movls.w	fp, #1
 8016cbc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8016cc0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8016cc4:	4b82      	ldr	r3, [pc, #520]	@ (8016ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016cc6:	4438      	add	r0, r7
 8016cc8:	b207      	sxth	r7, r0
 8016cca:	6818      	ldr	r0, [r3, #0]
 8016ccc:	42b7      	cmp	r7, r6
 8016cce:	6803      	ldr	r3, [r0, #0]
 8016cd0:	f280 8083 	bge.w	8016dda <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016cd4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8016cd8:	4798      	blx	r3
 8016cda:	eb07 030b 	add.w	r3, r7, fp
 8016cde:	4298      	cmp	r0, r3
 8016ce0:	da07      	bge.n	8016cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016ce2:	42b0      	cmp	r0, r6
 8016ce4:	da05      	bge.n	8016cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016ce6:	4287      	cmp	r7, r0
 8016ce8:	dd6c      	ble.n	8016dc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8016cea:	2f00      	cmp	r7, #0
 8016cec:	dd6a      	ble.n	8016dc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8016cee:	4630      	mov	r0, r6
 8016cf0:	e004      	b.n	8016cfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8016cf2:	4287      	cmp	r7, r0
 8016cf4:	dcfb      	bgt.n	8016cee <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016cf6:	42b0      	cmp	r0, r6
 8016cf8:	bfa8      	it	ge
 8016cfa:	4630      	movge	r0, r6
 8016cfc:	4b76      	ldr	r3, [pc, #472]	@ (8016ed8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8016cfe:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016d02:	1bc0      	subs	r0, r0, r7
 8016d04:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016d08:	882f      	ldrh	r7, [r5, #0]
 8016d0a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016d0e:	2200      	movs	r2, #0
 8016d10:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016d14:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016d18:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8016d1c:	42bb      	cmp	r3, r7
 8016d1e:	d9cd      	bls.n	8016cbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016d20:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8016d24:	ab07      	add	r3, sp, #28
 8016d26:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016d2a:	6851      	ldr	r1, [r2, #4]
 8016d2c:	c303      	stmia	r3!, {r0, r1}
 8016d2e:	a905      	add	r1, sp, #20
 8016d30:	a807      	add	r0, sp, #28
 8016d32:	f7ff f988 	bl	8016046 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016d36:	2800      	cmp	r0, #0
 8016d38:	d04c      	beq.n	8016dd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8016d3a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8016d3e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016d42:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8016d46:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8016d4a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016d4e:	9302      	str	r3, [sp, #8]
 8016d50:	4686      	mov	lr, r0
 8016d52:	4290      	cmp	r0, r2
 8016d54:	4450      	add	r0, sl
 8016d56:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8016d5a:	bfb8      	it	lt
 8016d5c:	4696      	movlt	lr, r2
 8016d5e:	4452      	add	r2, sl
 8016d60:	4299      	cmp	r1, r3
 8016d62:	b280      	uxth	r0, r0
 8016d64:	b292      	uxth	r2, r2
 8016d66:	468c      	mov	ip, r1
 8016d68:	fa0f fa82 	sxth.w	sl, r2
 8016d6c:	bfb8      	it	lt
 8016d6e:	469c      	movlt	ip, r3
 8016d70:	b203      	sxth	r3, r0
 8016d72:	4553      	cmp	r3, sl
 8016d74:	bfb8      	it	lt
 8016d76:	4602      	movlt	r2, r0
 8016d78:	eba2 020e 	sub.w	r2, r2, lr
 8016d7c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016d80:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8016d84:	9b02      	ldr	r3, [sp, #8]
 8016d86:	f8ad e01c 	strh.w	lr, [sp, #28]
 8016d8a:	4411      	add	r1, r2
 8016d8c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016d90:	f8ad c01e 	strh.w	ip, [sp, #30]
 8016d94:	4413      	add	r3, r2
 8016d96:	b289      	uxth	r1, r1
 8016d98:	b29b      	uxth	r3, r3
 8016d9a:	b208      	sxth	r0, r1
 8016d9c:	b21a      	sxth	r2, r3
 8016d9e:	4290      	cmp	r0, r2
 8016da0:	bfb8      	it	lt
 8016da2:	460b      	movlt	r3, r1
 8016da4:	eba3 030c 	sub.w	r3, r3, ip
 8016da8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8016dac:	a807      	add	r0, sp, #28
 8016dae:	f7f8 fb68 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016db2:	b920      	cbnz	r0, 8016dbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8016db4:	6823      	ldr	r3, [r4, #0]
 8016db6:	a907      	add	r1, sp, #28
 8016db8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8016dba:	4620      	mov	r0, r4
 8016dbc:	4798      	blx	r3
 8016dbe:	3701      	adds	r7, #1
 8016dc0:	b2bf      	uxth	r7, r7
 8016dc2:	e7a9      	b.n	8016d18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8016dc4:	f8d9 0000 	ldr.w	r0, [r9]
 8016dc8:	6803      	ldr	r3, [r0, #0]
 8016dca:	2101      	movs	r1, #1
 8016dcc:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8016dd0:	4798      	blx	r3
 8016dd2:	e773      	b.n	8016cbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016dd4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016dd8:	e7e8      	b.n	8016dac <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8016dda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016ddc:	4798      	blx	r3
 8016dde:	4b3f      	ldr	r3, [pc, #252]	@ (8016edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016de0:	781b      	ldrb	r3, [r3, #0]
 8016de2:	2b00      	cmp	r3, #0
 8016de4:	f43f af29 	beq.w	8016c3a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016de8:	2300      	movs	r3, #0
 8016dea:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8016dee:	882b      	ldrh	r3, [r5, #0]
 8016df0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8016df4:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8016df8:	42ab      	cmp	r3, r5
 8016dfa:	f4bf af1e 	bcs.w	8016c3a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016dfe:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8016e02:	2907      	cmp	r1, #7
 8016e04:	d814      	bhi.n	8016e30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8016e06:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8016e0a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8016e0e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016e12:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016e16:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8016e1a:	1c4a      	adds	r2, r1, #1
 8016e1c:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8016e20:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016e24:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016e28:	f8a2 c002 	strh.w	ip, [r2, #2]
 8016e2c:	8097      	strh	r7, [r2, #4]
 8016e2e:	80d6      	strh	r6, [r2, #6]
 8016e30:	3301      	adds	r3, #1
 8016e32:	b29b      	uxth	r3, r3
 8016e34:	e7e0      	b.n	8016df8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8016e36:	2b02      	cmp	r3, #2
 8016e38:	f040 8133 	bne.w	80170a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8016e3c:	4b28      	ldr	r3, [pc, #160]	@ (8016ee0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8016e3e:	781b      	ldrb	r3, [r3, #0]
 8016e40:	2b01      	cmp	r3, #1
 8016e42:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8016e46:	f000 8098 	beq.w	8016f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016e4a:	882a      	ldrh	r2, [r5, #0]
 8016e4c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8016e50:	3201      	adds	r2, #1
 8016e52:	b292      	uxth	r2, r2
 8016e54:	2900      	cmp	r1, #0
 8016e56:	d0c2      	beq.n	8016dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016e58:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8016e5c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8016e60:	441e      	add	r6, r3
 8016e62:	b236      	sxth	r6, r6
 8016e64:	4694      	mov	ip, r2
 8016e66:	f04f 0900 	mov.w	r9, #0
 8016e6a:	fa1f f38c 	uxth.w	r3, ip
 8016e6e:	4299      	cmp	r1, r3
 8016e70:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016e74:	f240 80bf 	bls.w	8016ff6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016e78:	4427      	add	r7, r4
 8016e7a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8016e7e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8016e82:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8016e86:	4283      	cmp	r3, r0
 8016e88:	f340 80a1 	ble.w	8016fce <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8016e8c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8016e90:	4406      	add	r6, r0
 8016e92:	b236      	sxth	r6, r6
 8016e94:	429e      	cmp	r6, r3
 8016e96:	bfa8      	it	ge
 8016e98:	461e      	movge	r6, r3
 8016e9a:	46e1      	mov	r9, ip
 8016e9c:	f10c 0c01 	add.w	ip, ip, #1
 8016ea0:	e7e3      	b.n	8016e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8016ea2:	d10a      	bne.n	8016eba <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8016ea4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8016ea8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8016eac:	4562      	cmp	r2, ip
 8016eae:	bfb8      	it	lt
 8016eb0:	4662      	movlt	r2, ip
 8016eb2:	4288      	cmp	r0, r1
 8016eb4:	bfb8      	it	lt
 8016eb6:	461f      	movlt	r7, r3
 8016eb8:	e087      	b.n	8016fca <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016eba:	428a      	cmp	r2, r1
 8016ebc:	bfb8      	it	lt
 8016ebe:	460a      	movlt	r2, r1
 8016ec0:	e083      	b.n	8016fca <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016ec2:	bf00      	nop
 8016ec4:	20013fa0 	.word	0x20013fa0
 8016ec8:	20013fac 	.word	0x20013fac
 8016ecc:	20000084 	.word	0x20000084
 8016ed0:	20013f60 	.word	0x20013f60
 8016ed4:	20013f56 	.word	0x20013f56
 8016ed8:	20013f54 	.word	0x20013f54
 8016edc:	20013f5e 	.word	0x20013f5e
 8016ee0:	20013f58 	.word	0x20013f58
 8016ee4:	19a1      	adds	r1, r4, r6
 8016ee6:	ab07      	add	r3, sp, #28
 8016ee8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8016eec:	6849      	ldr	r1, [r1, #4]
 8016eee:	c303      	stmia	r3!, {r0, r1}
 8016ef0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016ef4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016ef8:	2b13      	cmp	r3, #19
 8016efa:	bfd8      	it	le
 8016efc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016f00:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016f04:	440b      	add	r3, r1
 8016f06:	1a9b      	subs	r3, r3, r2
 8016f08:	a807      	add	r0, sp, #28
 8016f0a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016f0e:	f7fe ffe1 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f12:	a807      	add	r0, sp, #28
 8016f14:	f7f8 fab5 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016f18:	bb78      	cbnz	r0, 8016f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016f1a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8016f1e:	f8d9 0000 	ldr.w	r0, [r9]
 8016f22:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016f26:	f8d0 e000 	ldr.w	lr, [r0]
 8016f2a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016f2e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016f32:	f1bc 0f14 	cmp.w	ip, #20
 8016f36:	bfa8      	it	ge
 8016f38:	f04f 0c14 	movge.w	ip, #20
 8016f3c:	fa1f fc8c 	uxth.w	ip, ip
 8016f40:	f8cd c000 	str.w	ip, [sp]
 8016f44:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8016f48:	47d8      	blx	fp
 8016f4a:	4683      	mov	fp, r0
 8016f4c:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8016f50:	a807      	add	r0, sp, #28
 8016f52:	f7fe ffa5 	bl	8015ea0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016f56:	6823      	ldr	r3, [r4, #0]
 8016f58:	4426      	add	r6, r4
 8016f5a:	4620      	mov	r0, r4
 8016f5c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8016f5e:	a907      	add	r1, sp, #28
 8016f60:	4798      	blx	r3
 8016f62:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8016f66:	eba0 000b 	sub.w	r0, r0, fp
 8016f6a:	b200      	sxth	r0, r0
 8016f6c:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8016f70:	b918      	cbnz	r0, 8016f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016f72:	b2b9      	uxth	r1, r7
 8016f74:	4650      	mov	r0, sl
 8016f76:	f7ff fa79 	bl	801646c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016f7a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8016f7e:	f1bb 0f00 	cmp.w	fp, #0
 8016f82:	f43f af2c 	beq.w	8016dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016f86:	882b      	ldrh	r3, [r5, #0]
 8016f88:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8016f8c:	3301      	adds	r3, #1
 8016f8e:	b29b      	uxth	r3, r3
 8016f90:	2700      	movs	r7, #0
 8016f92:	b299      	uxth	r1, r3
 8016f94:	458b      	cmp	fp, r1
 8016f96:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8016f9a:	d9a3      	bls.n	8016ee4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8016f9c:	4426      	add	r6, r4
 8016f9e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016fa2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8016fa6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8016faa:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8016fae:	4408      	add	r0, r1
 8016fb0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8016fb4:	4461      	add	r1, ip
 8016fb6:	b200      	sxth	r0, r0
 8016fb8:	b209      	sxth	r1, r1
 8016fba:	4288      	cmp	r0, r1
 8016fbc:	f6bf af71 	bge.w	8016ea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016fc0:	4584      	cmp	ip, r0
 8016fc2:	4662      	mov	r2, ip
 8016fc4:	461f      	mov	r7, r3
 8016fc6:	bfb8      	it	lt
 8016fc8:	4602      	movlt	r2, r0
 8016fca:	3301      	adds	r3, #1
 8016fcc:	e7e1      	b.n	8016f92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8016fce:	d10e      	bne.n	8016fee <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016fd0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8016fd4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8016fd8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8016fdc:	4473      	add	r3, lr
 8016fde:	b21b      	sxth	r3, r3
 8016fe0:	429e      	cmp	r6, r3
 8016fe2:	bfa8      	it	ge
 8016fe4:	461e      	movge	r6, r3
 8016fe6:	4287      	cmp	r7, r0
 8016fe8:	bfb8      	it	lt
 8016fea:	46e1      	movlt	r9, ip
 8016fec:	e756      	b.n	8016e9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016fee:	4286      	cmp	r6, r0
 8016ff0:	bfa8      	it	ge
 8016ff2:	4606      	movge	r6, r0
 8016ff4:	e752      	b.n	8016e9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016ff6:	eb0a 0007 	add.w	r0, sl, r7
 8016ffa:	4427      	add	r7, r4
 8016ffc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017000:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8017004:	f1bb 0f13 	cmp.w	fp, #19
 8017008:	bfde      	ittt	le
 801700a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 801700e:	445e      	addle	r6, fp
 8017010:	b236      	sxthle	r6, r6
 8017012:	f7f8 fa36 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017016:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801701a:	2800      	cmp	r0, #0
 801701c:	f47f af1a 	bne.w	8016e54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8017020:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8017024:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8017028:	482a      	ldr	r0, [pc, #168]	@ (80170d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801702a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 801702e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8017032:	6800      	ldr	r0, [r0, #0]
 8017034:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017038:	1ab6      	subs	r6, r6, r2
 801703a:	2e14      	cmp	r6, #20
 801703c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8017040:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017044:	bfa8      	it	ge
 8017046:	2614      	movge	r6, #20
 8017048:	f8d0 c000 	ldr.w	ip, [r0]
 801704c:	b2b6      	uxth	r6, r6
 801704e:	fa1f fb8b 	uxth.w	fp, fp
 8017052:	455e      	cmp	r6, fp
 8017054:	bf94      	ite	ls
 8017056:	9600      	strls	r6, [sp, #0]
 8017058:	f8cd b000 	strhi.w	fp, [sp]
 801705c:	b292      	uxth	r2, r2
 801705e:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8017062:	b29b      	uxth	r3, r3
 8017064:	b289      	uxth	r1, r1
 8017066:	47b0      	blx	r6
 8017068:	6823      	ldr	r3, [r4, #0]
 801706a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 801706e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8017070:	a907      	add	r1, sp, #28
 8017072:	4620      	mov	r0, r4
 8017074:	4798      	blx	r3
 8017076:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 801707a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 801707e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8017082:	1a5b      	subs	r3, r3, r1
 8017084:	440a      	add	r2, r1
 8017086:	b21b      	sxth	r3, r3
 8017088:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 801708c:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8017090:	2b00      	cmp	r3, #0
 8017092:	f47f aeda 	bne.w	8016e4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017096:	fa1f f189 	uxth.w	r1, r9
 801709a:	4650      	mov	r0, sl
 801709c:	f7ff f9e6 	bl	801646c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80170a0:	e6d3      	b.n	8016e4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80170a2:	882e      	ldrh	r6, [r5, #0]
 80170a4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80170a8:	42b3      	cmp	r3, r6
 80170aa:	f67f ae98 	bls.w	8016dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80170ae:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80170b2:	ab07      	add	r3, sp, #28
 80170b4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80170b8:	6851      	ldr	r1, [r2, #4]
 80170ba:	c303      	stmia	r3!, {r0, r1}
 80170bc:	a807      	add	r0, sp, #28
 80170be:	f7f8 f9e0 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 80170c2:	b920      	cbnz	r0, 80170ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80170c4:	6823      	ldr	r3, [r4, #0]
 80170c6:	a907      	add	r1, sp, #28
 80170c8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80170ca:	4620      	mov	r0, r4
 80170cc:	4798      	blx	r3
 80170ce:	3601      	adds	r6, #1
 80170d0:	b2b6      	uxth	r6, r6
 80170d2:	e7e7      	b.n	80170a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80170d4:	20013f60 	.word	0x20013f60

080170d8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80170d8:	4b03      	ldr	r3, [pc, #12]	@ (80170e8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80170da:	2200      	movs	r2, #0
 80170dc:	801a      	strh	r2, [r3, #0]
 80170de:	805a      	strh	r2, [r3, #2]
 80170e0:	809a      	strh	r2, [r3, #4]
 80170e2:	80da      	strh	r2, [r3, #6]
 80170e4:	4770      	bx	lr
 80170e6:	bf00      	nop
 80170e8:	20013fac 	.word	0x20013fac

080170ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80170ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170f0:	4606      	mov	r6, r0
 80170f2:	b09d      	sub	sp, #116	@ 0x74
 80170f4:	a803      	add	r0, sp, #12
 80170f6:	4614      	mov	r4, r2
 80170f8:	468a      	mov	sl, r1
 80170fa:	461d      	mov	r5, r3
 80170fc:	f001 f99f 	bl	801843e <_ZN8touchgfx12TextProviderC1Ev>
 8017100:	6833      	ldr	r3, [r6, #0]
 8017102:	4630      	mov	r0, r6
 8017104:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017106:	4798      	blx	r3
 8017108:	6833      	ldr	r3, [r6, #0]
 801710a:	4607      	mov	r7, r0
 801710c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801710e:	4630      	mov	r0, r6
 8017110:	4798      	blx	r3
 8017112:	462a      	mov	r2, r5
 8017114:	9000      	str	r0, [sp, #0]
 8017116:	4621      	mov	r1, r4
 8017118:	463b      	mov	r3, r7
 801711a:	a803      	add	r0, sp, #12
 801711c:	f001 f9ea 	bl	80184f4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017120:	2500      	movs	r5, #0
 8017122:	462c      	mov	r4, r5
 8017124:	46a9      	mov	r9, r5
 8017126:	46a8      	mov	r8, r5
 8017128:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 801712c:	2300      	movs	r3, #0
 801712e:	9302      	str	r3, [sp, #8]
 8017130:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8017134:	429c      	cmp	r4, r3
 8017136:	d002      	beq.n	801713e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017138:	455c      	cmp	r4, fp
 801713a:	bf18      	it	ne
 801713c:	4625      	movne	r5, r4
 801713e:	ab02      	add	r3, sp, #8
 8017140:	4632      	mov	r2, r6
 8017142:	4651      	mov	r1, sl
 8017144:	a803      	add	r0, sp, #12
 8017146:	f001 fd01 	bl	8018b4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801714a:	4604      	mov	r4, r0
 801714c:	b108      	cbz	r0, 8017152 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801714e:	280a      	cmp	r0, #10
 8017150:	d10a      	bne.n	8017168 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8017152:	45c1      	cmp	r9, r8
 8017154:	bf38      	it	cc
 8017156:	46c1      	movcc	r9, r8
 8017158:	f04f 0800 	mov.w	r8, #0
 801715c:	2c00      	cmp	r4, #0
 801715e:	d1e5      	bne.n	801712c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017160:	4648      	mov	r0, r9
 8017162:	b01d      	add	sp, #116	@ 0x74
 8017164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017168:	9a02      	ldr	r2, [sp, #8]
 801716a:	2a00      	cmp	r2, #0
 801716c:	d0de      	beq.n	801712c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801716e:	7b57      	ldrb	r7, [r2, #13]
 8017170:	6833      	ldr	r3, [r6, #0]
 8017172:	8894      	ldrh	r4, [r2, #4]
 8017174:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8017176:	007f      	lsls	r7, r7, #1
 8017178:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 801717c:	7a97      	ldrb	r7, [r2, #10]
 801717e:	4629      	mov	r1, r5
 8017180:	4307      	orrs	r7, r0
 8017182:	4630      	mov	r0, r6
 8017184:	4798      	blx	r3
 8017186:	4438      	add	r0, r7
 8017188:	4480      	add	r8, r0
 801718a:	fa1f f888 	uxth.w	r8, r8
 801718e:	e7e5      	b.n	801715c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08017190 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8017190:	b508      	push	{r3, lr}
 8017192:	6803      	ldr	r3, [r0, #0]
 8017194:	68db      	ldr	r3, [r3, #12]
 8017196:	4798      	blx	r3
 8017198:	b128      	cbz	r0, 80171a6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801719a:	7b43      	ldrb	r3, [r0, #13]
 801719c:	7a80      	ldrb	r0, [r0, #10]
 801719e:	005b      	lsls	r3, r3, #1
 80171a0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80171a4:	4318      	orrs	r0, r3
 80171a6:	bd08      	pop	{r3, pc}

080171a8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80171a8:	b40e      	push	{r1, r2, r3}
 80171aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80171ac:	b09e      	sub	sp, #120	@ 0x78
 80171ae:	ab23      	add	r3, sp, #140	@ 0x8c
 80171b0:	4605      	mov	r5, r0
 80171b2:	f853 4b04 	ldr.w	r4, [r3], #4
 80171b6:	9303      	str	r3, [sp, #12]
 80171b8:	a805      	add	r0, sp, #20
 80171ba:	f001 f940 	bl	801843e <_ZN8touchgfx12TextProviderC1Ev>
 80171be:	682b      	ldr	r3, [r5, #0]
 80171c0:	4628      	mov	r0, r5
 80171c2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80171c4:	4798      	blx	r3
 80171c6:	682b      	ldr	r3, [r5, #0]
 80171c8:	4606      	mov	r6, r0
 80171ca:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80171cc:	4628      	mov	r0, r5
 80171ce:	4798      	blx	r3
 80171d0:	4633      	mov	r3, r6
 80171d2:	ae1e      	add	r6, sp, #120	@ 0x78
 80171d4:	4621      	mov	r1, r4
 80171d6:	9000      	str	r0, [sp, #0]
 80171d8:	9a03      	ldr	r2, [sp, #12]
 80171da:	2400      	movs	r4, #0
 80171dc:	a805      	add	r0, sp, #20
 80171de:	f001 f989 	bl	80184f4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80171e2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80171e6:	462a      	mov	r2, r5
 80171e8:	4633      	mov	r3, r6
 80171ea:	4621      	mov	r1, r4
 80171ec:	a805      	add	r0, sp, #20
 80171ee:	f001 fcad 	bl	8018b4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80171f2:	b1f0      	cbz	r0, 8017232 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80171f4:	280a      	cmp	r0, #10
 80171f6:	d018      	beq.n	801722a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80171f8:	9f04      	ldr	r7, [sp, #16]
 80171fa:	b1b7      	cbz	r7, 801722a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80171fc:	7b78      	ldrb	r0, [r7, #13]
 80171fe:	7a3b      	ldrb	r3, [r7, #8]
 8017200:	88ea      	ldrh	r2, [r5, #6]
 8017202:	00c1      	lsls	r1, r0, #3
 8017204:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8017208:	4319      	orrs	r1, r3
 801720a:	0643      	lsls	r3, r0, #25
 801720c:	bf44      	itt	mi
 801720e:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8017212:	b219      	sxthmi	r1, r3
 8017214:	0100      	lsls	r0, r0, #4
 8017216:	79fb      	ldrb	r3, [r7, #7]
 8017218:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 801721c:	4303      	orrs	r3, r0
 801721e:	4413      	add	r3, r2
 8017220:	1a5b      	subs	r3, r3, r1
 8017222:	b21b      	sxth	r3, r3
 8017224:	429c      	cmp	r4, r3
 8017226:	bfb8      	it	lt
 8017228:	461c      	movlt	r4, r3
 801722a:	4633      	mov	r3, r6
 801722c:	462a      	mov	r2, r5
 801722e:	2100      	movs	r1, #0
 8017230:	e7dc      	b.n	80171ec <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017232:	b2a0      	uxth	r0, r4
 8017234:	b01e      	add	sp, #120	@ 0x78
 8017236:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801723a:	b003      	add	sp, #12
 801723c:	4770      	bx	lr

0801723e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801723e:	7a43      	ldrb	r3, [r0, #9]
 8017240:	8880      	ldrh	r0, [r0, #4]
 8017242:	4418      	add	r0, r3
 8017244:	b280      	uxth	r0, r0
 8017246:	4770      	bx	lr

08017248 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8017248:	6803      	ldr	r3, [r0, #0]
 801724a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801724c:	4718      	bx	r3

0801724e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801724e:	b40e      	push	{r1, r2, r3}
 8017250:	b570      	push	{r4, r5, r6, lr}
 8017252:	b09d      	sub	sp, #116	@ 0x74
 8017254:	ab21      	add	r3, sp, #132	@ 0x84
 8017256:	4604      	mov	r4, r0
 8017258:	f853 5b04 	ldr.w	r5, [r3], #4
 801725c:	9302      	str	r3, [sp, #8]
 801725e:	a803      	add	r0, sp, #12
 8017260:	f001 f8ed 	bl	801843e <_ZN8touchgfx12TextProviderC1Ev>
 8017264:	6823      	ldr	r3, [r4, #0]
 8017266:	4620      	mov	r0, r4
 8017268:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801726a:	4798      	blx	r3
 801726c:	6823      	ldr	r3, [r4, #0]
 801726e:	4606      	mov	r6, r0
 8017270:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017272:	4620      	mov	r0, r4
 8017274:	4798      	blx	r3
 8017276:	4633      	mov	r3, r6
 8017278:	9000      	str	r0, [sp, #0]
 801727a:	9a02      	ldr	r2, [sp, #8]
 801727c:	4629      	mov	r1, r5
 801727e:	a803      	add	r0, sp, #12
 8017280:	f001 f938 	bl	80184f4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017284:	a803      	add	r0, sp, #12
 8017286:	f001 fd2f 	bl	8018ce8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801728a:	2401      	movs	r4, #1
 801728c:	b2a3      	uxth	r3, r4
 801728e:	b140      	cbz	r0, 80172a2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8017290:	280a      	cmp	r0, #10
 8017292:	bf08      	it	eq
 8017294:	3301      	addeq	r3, #1
 8017296:	a803      	add	r0, sp, #12
 8017298:	bf08      	it	eq
 801729a:	b21c      	sxtheq	r4, r3
 801729c:	f001 fd24 	bl	8018ce8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80172a0:	e7f4      	b.n	801728c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80172a2:	4618      	mov	r0, r3
 80172a4:	b01d      	add	sp, #116	@ 0x74
 80172a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80172aa:	b003      	add	sp, #12
 80172ac:	4770      	bx	lr

080172ae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80172ae:	b40e      	push	{r1, r2, r3}
 80172b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80172b2:	b09e      	sub	sp, #120	@ 0x78
 80172b4:	ab23      	add	r3, sp, #140	@ 0x8c
 80172b6:	4604      	mov	r4, r0
 80172b8:	f853 5b04 	ldr.w	r5, [r3], #4
 80172bc:	9303      	str	r3, [sp, #12]
 80172be:	a805      	add	r0, sp, #20
 80172c0:	f001 f8bd 	bl	801843e <_ZN8touchgfx12TextProviderC1Ev>
 80172c4:	6823      	ldr	r3, [r4, #0]
 80172c6:	4620      	mov	r0, r4
 80172c8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80172ca:	4798      	blx	r3
 80172cc:	6823      	ldr	r3, [r4, #0]
 80172ce:	4606      	mov	r6, r0
 80172d0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80172d2:	4620      	mov	r0, r4
 80172d4:	4798      	blx	r3
 80172d6:	4633      	mov	r3, r6
 80172d8:	4629      	mov	r1, r5
 80172da:	9000      	str	r0, [sp, #0]
 80172dc:	9a03      	ldr	r2, [sp, #12]
 80172de:	a805      	add	r0, sp, #20
 80172e0:	ad1e      	add	r5, sp, #120	@ 0x78
 80172e2:	f001 f907 	bl	80184f4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80172e6:	2100      	movs	r1, #0
 80172e8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80172ec:	4622      	mov	r2, r4
 80172ee:	462b      	mov	r3, r5
 80172f0:	a805      	add	r0, sp, #20
 80172f2:	f001 fc2b 	bl	8018b4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80172f6:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 80172fa:	b1d8      	cbz	r0, 8017334 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80172fc:	280a      	cmp	r0, #10
 80172fe:	d012      	beq.n	8017326 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017300:	9804      	ldr	r0, [sp, #16]
 8017302:	b180      	cbz	r0, 8017326 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017304:	7b47      	ldrb	r7, [r0, #13]
 8017306:	88e2      	ldrh	r2, [r4, #6]
 8017308:	00fb      	lsls	r3, r7, #3
 801730a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801730e:	7a03      	ldrb	r3, [r0, #8]
 8017310:	430b      	orrs	r3, r1
 8017312:	0679      	lsls	r1, r7, #25
 8017314:	bf44      	itt	mi
 8017316:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801731a:	b21b      	sxthmi	r3, r3
 801731c:	1ad3      	subs	r3, r2, r3
 801731e:	b21b      	sxth	r3, r3
 8017320:	429e      	cmp	r6, r3
 8017322:	bfa8      	it	ge
 8017324:	461e      	movge	r6, r3
 8017326:	462b      	mov	r3, r5
 8017328:	4622      	mov	r2, r4
 801732a:	2100      	movs	r1, #0
 801732c:	a805      	add	r0, sp, #20
 801732e:	f001 fc0d 	bl	8018b4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017332:	e7e2      	b.n	80172fa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8017334:	4630      	mov	r0, r6
 8017336:	b01e      	add	sp, #120	@ 0x78
 8017338:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801733c:	b003      	add	sp, #12
 801733e:	4770      	bx	lr

08017340 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017340:	b513      	push	{r0, r1, r4, lr}
 8017342:	6803      	ldr	r3, [r0, #0]
 8017344:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017348:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801734c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017350:	2400      	movs	r4, #0
 8017352:	9400      	str	r4, [sp, #0]
 8017354:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017358:	691b      	ldr	r3, [r3, #16]
 801735a:	4669      	mov	r1, sp
 801735c:	4798      	blx	r3
 801735e:	b002      	add	sp, #8
 8017360:	bd10      	pop	{r4, pc}

08017362 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8017362:	b538      	push	{r3, r4, r5, lr}
 8017364:	680b      	ldr	r3, [r1, #0]
 8017366:	460c      	mov	r4, r1
 8017368:	68db      	ldr	r3, [r3, #12]
 801736a:	4605      	mov	r5, r0
 801736c:	4798      	blx	r3
 801736e:	6823      	ldr	r3, [r4, #0]
 8017370:	4620      	mov	r0, r4
 8017372:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017374:	4629      	mov	r1, r5
 8017376:	4798      	blx	r3
 8017378:	4628      	mov	r0, r5
 801737a:	bd38      	pop	{r3, r4, r5, pc}

0801737c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801737c:	b410      	push	{r4}
 801737e:	880a      	ldrh	r2, [r1, #0]
 8017380:	8884      	ldrh	r4, [r0, #4]
 8017382:	4422      	add	r2, r4
 8017384:	800a      	strh	r2, [r1, #0]
 8017386:	88c4      	ldrh	r4, [r0, #6]
 8017388:	884a      	ldrh	r2, [r1, #2]
 801738a:	4422      	add	r2, r4
 801738c:	804a      	strh	r2, [r1, #2]
 801738e:	6940      	ldr	r0, [r0, #20]
 8017390:	b120      	cbz	r0, 801739c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8017392:	6803      	ldr	r3, [r0, #0]
 8017394:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017398:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801739a:	4718      	bx	r3
 801739c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80173a0:	4770      	bx	lr

080173a2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80173a2:	b570      	push	{r4, r5, r6, lr}
 80173a4:	8882      	ldrh	r2, [r0, #4]
 80173a6:	880b      	ldrh	r3, [r1, #0]
 80173a8:	4413      	add	r3, r2
 80173aa:	800b      	strh	r3, [r1, #0]
 80173ac:	88c2      	ldrh	r2, [r0, #6]
 80173ae:	884b      	ldrh	r3, [r1, #2]
 80173b0:	460c      	mov	r4, r1
 80173b2:	4413      	add	r3, r2
 80173b4:	804b      	strh	r3, [r1, #2]
 80173b6:	4605      	mov	r5, r0
 80173b8:	1d01      	adds	r1, r0, #4
 80173ba:	4620      	mov	r0, r4
 80173bc:	f7f8 f81e 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 80173c0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80173c4:	2b00      	cmp	r3, #0
 80173c6:	dd0b      	ble.n	80173e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80173c8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80173cc:	2b00      	cmp	r3, #0
 80173ce:	dd07      	ble.n	80173e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80173d0:	6968      	ldr	r0, [r5, #20]
 80173d2:	b128      	cbz	r0, 80173e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80173d4:	6803      	ldr	r3, [r0, #0]
 80173d6:	4621      	mov	r1, r4
 80173d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80173da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80173de:	4718      	bx	r3
 80173e0:	bd70      	pop	{r4, r5, r6, pc}
	...

080173e4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80173e4:	b570      	push	{r4, r5, r6, lr}
 80173e6:	8882      	ldrh	r2, [r0, #4]
 80173e8:	880b      	ldrh	r3, [r1, #0]
 80173ea:	4413      	add	r3, r2
 80173ec:	800b      	strh	r3, [r1, #0]
 80173ee:	88c2      	ldrh	r2, [r0, #6]
 80173f0:	884b      	ldrh	r3, [r1, #2]
 80173f2:	460c      	mov	r4, r1
 80173f4:	4413      	add	r3, r2
 80173f6:	804b      	strh	r3, [r1, #2]
 80173f8:	4605      	mov	r5, r0
 80173fa:	1d01      	adds	r1, r0, #4
 80173fc:	4620      	mov	r0, r4
 80173fe:	f7f7 fffd 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 8017402:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017406:	2b00      	cmp	r3, #0
 8017408:	dd19      	ble.n	801743e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801740a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801740e:	2b00      	cmp	r3, #0
 8017410:	dd15      	ble.n	801743e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017412:	6968      	ldr	r0, [r5, #20]
 8017414:	b128      	cbz	r0, 8017422 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017416:	6803      	ldr	r3, [r0, #0]
 8017418:	4621      	mov	r1, r4
 801741a:	691b      	ldr	r3, [r3, #16]
 801741c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017420:	4718      	bx	r3
 8017422:	4b07      	ldr	r3, [pc, #28]	@ (8017440 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017424:	681b      	ldr	r3, [r3, #0]
 8017426:	3304      	adds	r3, #4
 8017428:	429d      	cmp	r5, r3
 801742a:	d108      	bne.n	801743e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801742c:	f7fe feea 	bl	8016204 <_ZN8touchgfx11Application11getInstanceEv>
 8017430:	6803      	ldr	r3, [r0, #0]
 8017432:	6821      	ldr	r1, [r4, #0]
 8017434:	6862      	ldr	r2, [r4, #4]
 8017436:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017438:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801743c:	4718      	bx	r3
 801743e:	bd70      	pop	{r4, r5, r6, pc}
 8017440:	20013fa4 	.word	0x20013fa4

08017444 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017444:	b570      	push	{r4, r5, r6, lr}
 8017446:	4604      	mov	r4, r0
 8017448:	4616      	mov	r6, r2
 801744a:	460d      	mov	r5, r1
 801744c:	b901      	cbnz	r1, 8017450 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801744e:	b192      	cbz	r2, 8017476 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017450:	6823      	ldr	r3, [r4, #0]
 8017452:	4620      	mov	r0, r4
 8017454:	699b      	ldr	r3, [r3, #24]
 8017456:	4798      	blx	r3
 8017458:	88e2      	ldrh	r2, [r4, #6]
 801745a:	88a1      	ldrh	r1, [r4, #4]
 801745c:	4432      	add	r2, r6
 801745e:	4429      	add	r1, r5
 8017460:	4620      	mov	r0, r4
 8017462:	b212      	sxth	r2, r2
 8017464:	b209      	sxth	r1, r1
 8017466:	f7eb fe62 	bl	800312e <_ZN8touchgfx8Drawable5setXYEss>
 801746a:	6823      	ldr	r3, [r4, #0]
 801746c:	4620      	mov	r0, r4
 801746e:	699b      	ldr	r3, [r3, #24]
 8017470:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017474:	4718      	bx	r3
 8017476:	bd70      	pop	{r4, r5, r6, pc}

08017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017478:	b510      	push	{r4, lr}
 801747a:	4604      	mov	r4, r0
 801747c:	4608      	mov	r0, r1
 801747e:	2300      	movs	r3, #0
 8017480:	8023      	strh	r3, [r4, #0]
 8017482:	8063      	strh	r3, [r4, #2]
 8017484:	6803      	ldr	r3, [r0, #0]
 8017486:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801748a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801748e:	80a1      	strh	r1, [r4, #4]
 8017490:	80e2      	strh	r2, [r4, #6]
 8017492:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017494:	4621      	mov	r1, r4
 8017496:	4798      	blx	r3
 8017498:	4620      	mov	r0, r4
 801749a:	bd10      	pop	{r4, pc}

0801749c <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 801749c:	4770      	bx	lr

0801749e <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 801749e:	b510      	push	{r4, lr}
 80174a0:	211c      	movs	r1, #28
 80174a2:	4604      	mov	r4, r0
 80174a4:	f011 fbc8 	bl	8028c38 <_ZdlPvj>
 80174a8:	4620      	mov	r0, r4
 80174aa:	bd10      	pop	{r4, pc}

080174ac <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 80174ac:	4a04      	ldr	r2, [pc, #16]	@ (80174c0 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 80174ae:	6002      	str	r2, [r0, #0]
 80174b0:	2200      	movs	r2, #0
 80174b2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80174b6:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80174ba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80174be:	4770      	bx	lr
 80174c0:	0802d7cc 	.word	0x0802d7cc

080174c4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 80174c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174c8:	4604      	mov	r4, r0
 80174ca:	b087      	sub	sp, #28
 80174cc:	4696      	mov	lr, r2
 80174ce:	8b22      	ldrh	r2, [r4, #24]
 80174d0:	6880      	ldr	r0, [r0, #8]
 80174d2:	9105      	str	r1, [sp, #20]
 80174d4:	1c51      	adds	r1, r2, #1
 80174d6:	8321      	strh	r1, [r4, #24]
 80174d8:	2101      	movs	r1, #1
 80174da:	5481      	strb	r1, [r0, r2]
 80174dc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80174e0:	8b60      	ldrh	r0, [r4, #26]
 80174e2:	ee06 2a90 	vmov	s13, r2
 80174e6:	68e2      	ldr	r2, [r4, #12]
 80174e8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80174ec:	1845      	adds	r5, r0, r1
 80174ee:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 80174f2:	8365      	strh	r5, [r4, #26]
 80174f4:	edc2 6a00 	vstr	s13, [r2]
 80174f8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80174fc:	8b60      	ldrh	r0, [r4, #26]
 80174fe:	ee07 2a10 	vmov	s14, r2
 8017502:	68e2      	ldr	r2, [r4, #12]
 8017504:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017508:	1845      	adds	r5, r0, r1
 801750a:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 801750e:	8365      	strh	r5, [r4, #26]
 8017510:	ed82 7a00 	vstr	s14, [r2]
 8017514:	f8be 2000 	ldrh.w	r2, [lr]
 8017518:	9203      	str	r2, [sp, #12]
 801751a:	2200      	movs	r2, #0
 801751c:	1d18      	adds	r0, r3, #4
 801751e:	4689      	mov	r9, r1
 8017520:	9201      	str	r2, [sp, #4]
 8017522:	4613      	mov	r3, r2
 8017524:	4694      	mov	ip, r2
 8017526:	460d      	mov	r5, r1
 8017528:	9202      	str	r2, [sp, #8]
 801752a:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 801752e:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 8017532:	9e05      	ldr	r6, [sp, #20]
 8017534:	f8d4 a008 	ldr.w	sl, [r4, #8]
 8017538:	f108 0701 	add.w	r7, r8, #1
 801753c:	428e      	cmp	r6, r1
 801753e:	b2bf      	uxth	r7, r7
 8017540:	eb0a 0b08 	add.w	fp, sl, r8
 8017544:	f340 80b6 	ble.w	80176b4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
 8017548:	9b03      	ldr	r3, [sp, #12]
 801754a:	f9b0 c000 	ldrsh.w	ip, [r0]
 801754e:	fa43 fb05 	asr.w	fp, r3, r5
 8017552:	f00b 0b01 	and.w	fp, fp, #1
 8017556:	fa5f f38b 	uxtb.w	r3, fp
 801755a:	9304      	str	r3, [sp, #16]
 801755c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8017560:	f1bb 0f00 	cmp.w	fp, #0
 8017564:	d057      	beq.n	8017616 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
 8017566:	ee07 ca90 	vmov	s15, ip
 801756a:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 801756e:	ee07 3a90 	vmov	s15, r3
 8017572:	8327      	strh	r7, [r4, #24]
 8017574:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017578:	f1b9 0f00 	cmp.w	r9, #0
 801757c:	d028      	beq.n	80175d0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
 801757e:	f04f 0602 	mov.w	r6, #2
 8017582:	f80a 6008 	strb.w	r6, [sl, r8]
 8017586:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801758a:	68e7      	ldr	r7, [r4, #12]
 801758c:	f108 0901 	add.w	r9, r8, #1
 8017590:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8017594:	f8a4 901a 	strh.w	r9, [r4, #26]
 8017598:	edc7 5a00 	vstr	s11, [r7]
 801759c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80175a0:	68e7      	ldr	r7, [r4, #12]
 80175a2:	f108 0901 	add.w	r9, r8, #1
 80175a6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80175aa:	f8a4 901a 	strh.w	r9, [r4, #26]
 80175ae:	edc7 7a00 	vstr	s15, [r7]
 80175b2:	3501      	adds	r5, #1
 80175b4:	2d10      	cmp	r5, #16
 80175b6:	d106      	bne.n	80175c6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 80175b8:	9d02      	ldr	r5, [sp, #8]
 80175ba:	3501      	adds	r5, #1
 80175bc:	9502      	str	r5, [sp, #8]
 80175be:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
 80175c2:	9503      	str	r5, [sp, #12]
 80175c4:	2500      	movs	r5, #0
 80175c6:	3101      	adds	r1, #1
 80175c8:	3004      	adds	r0, #4
 80175ca:	f8dd 9010 	ldr.w	r9, [sp, #16]
 80175ce:	e7ae      	b.n	801752e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
 80175d0:	f04f 0605 	mov.w	r6, #5
 80175d4:	f80a 6008 	strb.w	r6, [sl, r8]
 80175d8:	ed9d 5a01 	vldr	s10, [sp, #4]
 80175dc:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80175e0:	68e7      	ldr	r7, [r4, #12]
 80175e2:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 80175e6:	f108 0901 	add.w	r9, r8, #1
 80175ea:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80175ee:	f8a4 901a 	strh.w	r9, [r4, #26]
 80175f2:	ed87 5a00 	vstr	s10, [r7]
 80175f6:	ee05 2a10 	vmov	s10, r2
 80175fa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80175fe:	68e7      	ldr	r7, [r4, #12]
 8017600:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8017604:	f108 0901 	add.w	r9, r8, #1
 8017608:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801760c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8017610:	ed87 5a00 	vstr	s10, [r7]
 8017614:	e7b7      	b.n	8017586 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
 8017616:	f1b9 0f00 	cmp.w	r9, #0
 801761a:	d147      	bne.n	80176ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
 801761c:	f04f 0605 	mov.w	r6, #5
 8017620:	8327      	strh	r7, [r4, #24]
 8017622:	f80a 6008 	strb.w	r6, [sl, r8]
 8017626:	eddd 7a01 	vldr	s15, [sp, #4]
 801762a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801762e:	68e7      	ldr	r7, [r4, #12]
 8017630:	9e01      	ldr	r6, [sp, #4]
 8017632:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017636:	f108 0901 	add.w	r9, r8, #1
 801763a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801763e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8017642:	edc7 7a00 	vstr	s15, [r7]
 8017646:	ee07 2a90 	vmov	s15, r2
 801764a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801764e:	68e7      	ldr	r7, [r4, #12]
 8017650:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017654:	f108 0901 	add.w	r9, r8, #1
 8017658:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801765c:	4466      	add	r6, ip
 801765e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8017662:	edc7 7a00 	vstr	s15, [r7]
 8017666:	ee07 6a90 	vmov	s15, r6
 801766a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801766e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8017672:	68e7      	ldr	r7, [r4, #12]
 8017674:	ee67 7a86 	vmul.f32	s15, s15, s12
 8017678:	f108 0901 	add.w	r9, r8, #1
 801767c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8017680:	441a      	add	r2, r3
 8017682:	f8a4 901a 	strh.w	r9, [r4, #26]
 8017686:	edc7 7a00 	vstr	s15, [r7]
 801768a:	ee07 2a90 	vmov	s15, r2
 801768e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017692:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8017696:	68e7      	ldr	r7, [r4, #12]
 8017698:	ee67 7a86 	vmul.f32	s15, s15, s12
 801769c:	f108 0901 	add.w	r9, r8, #1
 80176a0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80176a4:	f8a4 901a 	strh.w	r9, [r4, #26]
 80176a8:	edc7 7a00 	vstr	s15, [r7]
 80176ac:	461a      	mov	r2, r3
 80176ae:	f8cd c004 	str.w	ip, [sp, #4]
 80176b2:	e77e      	b.n	80175b2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
 80176b4:	f1b9 0f00 	cmp.w	r9, #0
 80176b8:	d028      	beq.n	801770c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 80176ba:	ee07 ca90 	vmov	s15, ip
 80176be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80176c2:	eef4 6a67 	vcmp.f32	s13, s15
 80176c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176ca:	d108      	bne.n	80176de <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
 80176cc:	ee07 3a90 	vmov	s15, r3
 80176d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80176d4:	eeb4 7a67 	vcmp.f32	s14, s15
 80176d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176dc:	d016      	beq.n	801770c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 80176de:	2302      	movs	r3, #2
 80176e0:	8327      	strh	r7, [r4, #24]
 80176e2:	f88b 3000 	strb.w	r3, [fp]
 80176e6:	8b62      	ldrh	r2, [r4, #26]
 80176e8:	68e3      	ldr	r3, [r4, #12]
 80176ea:	1c51      	adds	r1, r2, #1
 80176ec:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80176f0:	8361      	strh	r1, [r4, #26]
 80176f2:	edc3 6a00 	vstr	s13, [r3]
 80176f6:	8b62      	ldrh	r2, [r4, #26]
 80176f8:	68e3      	ldr	r3, [r4, #12]
 80176fa:	1c51      	adds	r1, r2, #1
 80176fc:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8017700:	8361      	strh	r1, [r4, #26]
 8017702:	ed83 7a00 	vstr	s14, [r3]
 8017706:	b007      	add	sp, #28
 8017708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801770c:	2305      	movs	r3, #5
 801770e:	8327      	strh	r7, [r4, #24]
 8017710:	eddd 7a01 	vldr	s15, [sp, #4]
 8017714:	f88b 3000 	strb.w	r3, [fp]
 8017718:	8b61      	ldrh	r1, [r4, #26]
 801771a:	68e3      	ldr	r3, [r4, #12]
 801771c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017720:	1c4d      	adds	r5, r1, #1
 8017722:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8017726:	8365      	strh	r5, [r4, #26]
 8017728:	edc3 7a00 	vstr	s15, [r3]
 801772c:	ee07 2a90 	vmov	s15, r2
 8017730:	8b61      	ldrh	r1, [r4, #26]
 8017732:	68e3      	ldr	r3, [r4, #12]
 8017734:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017738:	1c4d      	adds	r5, r1, #1
 801773a:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 801773e:	8365      	strh	r5, [r4, #26]
 8017740:	edc3 7a00 	vstr	s15, [r3]
 8017744:	e7cf      	b.n	80176e6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

08017748 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 8017748:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801774c:	b08e      	sub	sp, #56	@ 0x38
 801774e:	4604      	mov	r4, r0
 8017750:	4688      	mov	r8, r1
 8017752:	4615      	mov	r5, r2
 8017754:	4699      	mov	r9, r3
 8017756:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8017758:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 801775c:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 801775e:	f7ea fba7 	bl	8001eb0 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 8017762:	6060      	str	r0, [r4, #4]
 8017764:	f1b9 0f00 	cmp.w	r9, #0
 8017768:	f000 80e8 	beq.w	801793c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801776c:	2800      	cmp	r0, #0
 801776e:	f000 80e5 	beq.w	801793c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8017772:	a805      	add	r0, sp, #20
 8017774:	f000 f8f9 	bl	801796a <_ZN8touchgfx9Matrix3x3C1Ev>
 8017778:	6833      	ldr	r3, [r6, #0]
 801777a:	4630      	mov	r0, r6
 801777c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 801777e:	4798      	blx	r3
 8017780:	a805      	add	r0, sp, #20
 8017782:	eef0 0a40 	vmov.f32	s1, s0
 8017786:	f000 f8f4 	bl	8017972 <_ZN8touchgfx9Matrix3x35scaleEff>
 801778a:	6860      	ldr	r0, [r4, #4]
 801778c:	f1ba 0f03 	cmp.w	sl, #3
 8017790:	d83b      	bhi.n	801780a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 8017792:	e8df f00a 	tbb	[pc, sl]
 8017796:	1002      	.short	0x1002
 8017798:	9f71      	.short	0x9f71
 801779a:	6803      	ldr	r3, [r0, #0]
 801779c:	462a      	mov	r2, r5
 801779e:	689b      	ldr	r3, [r3, #8]
 80177a0:	4641      	mov	r1, r8
 80177a2:	4798      	blx	r3
 80177a4:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 80177a8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80177ac:	ee07 7a90 	vmov	s15, r7
 80177b0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80177b4:	e026      	b.n	8017804 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 80177b6:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 80177ba:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 80177be:	8869      	ldrh	r1, [r5, #2]
 80177c0:	f8ad 2010 	strh.w	r2, [sp, #16]
 80177c4:	1a9b      	subs	r3, r3, r2
 80177c6:	1a5b      	subs	r3, r3, r1
 80177c8:	f8ad 300c 	strh.w	r3, [sp, #12]
 80177cc:	882b      	ldrh	r3, [r5, #0]
 80177ce:	f8ad 300e 	strh.w	r3, [sp, #14]
 80177d2:	88ab      	ldrh	r3, [r5, #4]
 80177d4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80177d8:	6803      	ldr	r3, [r0, #0]
 80177da:	aa03      	add	r2, sp, #12
 80177dc:	689b      	ldr	r3, [r3, #8]
 80177de:	4641      	mov	r1, r8
 80177e0:	4798      	blx	r3
 80177e2:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 8017944 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 80177e6:	a805      	add	r0, sp, #20
 80177e8:	f000 f8e8 	bl	80179bc <_ZN8touchgfx9Matrix3x36rotateEf>
 80177ec:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 80177f0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80177f2:	ee07 7a90 	vmov	s15, r7
 80177f6:	1a9b      	subs	r3, r3, r2
 80177f8:	ee00 3a10 	vmov	s0, r3
 80177fc:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8017800:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8017804:	a805      	add	r0, sp, #20
 8017806:	f000 f927 	bl	8017a58 <_ZN8touchgfx9Matrix3x39translateEff>
 801780a:	6860      	ldr	r0, [r4, #4]
 801780c:	6803      	ldr	r3, [r0, #0]
 801780e:	a905      	add	r1, sp, #20
 8017810:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8017812:	4798      	blx	r3
 8017814:	6860      	ldr	r0, [r4, #4]
 8017816:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8017818:	6803      	ldr	r3, [r0, #0]
 801781a:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 801781e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017820:	4798      	blx	r3
 8017822:	6860      	ldr	r0, [r4, #4]
 8017824:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 8017828:	6803      	ldr	r3, [r0, #0]
 801782a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801782c:	4798      	blx	r3
 801782e:	6860      	ldr	r0, [r4, #4]
 8017830:	6803      	ldr	r3, [r0, #0]
 8017832:	2101      	movs	r1, #1
 8017834:	68db      	ldr	r3, [r3, #12]
 8017836:	2500      	movs	r5, #0
 8017838:	4798      	blx	r3
 801783a:	f8b9 7000 	ldrh.w	r7, [r9]
 801783e:	61a5      	str	r5, [r4, #24]
 8017840:	f104 0310 	add.w	r3, r4, #16
 8017844:	f104 0208 	add.w	r2, r4, #8
 8017848:	f104 0114 	add.w	r1, r4, #20
 801784c:	f104 000c 	add.w	r0, r4, #12
 8017850:	f109 0602 	add.w	r6, r9, #2
 8017854:	f7ef fe1a 	bl	800748c <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8017858:	42af      	cmp	r7, r5
 801785a:	dd60      	ble.n	801791e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 801785c:	8831      	ldrh	r1, [r6, #0]
 801785e:	f101 030f 	add.w	r3, r1, #15
 8017862:	1cb2      	adds	r2, r6, #2
 8017864:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8017868:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801786c:	4620      	mov	r0, r4
 801786e:	f7ff fe29 	bl	80174c4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8017872:	3501      	adds	r5, #1
 8017874:	4606      	mov	r6, r0
 8017876:	e7ef      	b.n	8017858 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8017878:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801787c:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8017880:	8829      	ldrh	r1, [r5, #0]
 8017882:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017886:	1a9b      	subs	r3, r3, r2
 8017888:	1a5b      	subs	r3, r3, r1
 801788a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801788e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017892:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8017896:	886d      	ldrh	r5, [r5, #2]
 8017898:	f8ad 1012 	strh.w	r1, [sp, #18]
 801789c:	1a5b      	subs	r3, r3, r1
 801789e:	1b5b      	subs	r3, r3, r5
 80178a0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80178a4:	6803      	ldr	r3, [r0, #0]
 80178a6:	aa03      	add	r2, sp, #12
 80178a8:	689b      	ldr	r3, [r3, #8]
 80178aa:	4641      	mov	r1, r8
 80178ac:	4798      	blx	r3
 80178ae:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8017948 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 80178b2:	a805      	add	r0, sp, #20
 80178b4:	f000 f882 	bl	80179bc <_ZN8touchgfx9Matrix3x36rotateEf>
 80178b8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80178bc:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80178be:	1a9b      	subs	r3, r3, r2
 80178c0:	ee00 3a90 	vmov	s1, r3
 80178c4:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 80178c8:	1bdb      	subs	r3, r3, r7
 80178ca:	ee00 3a10 	vmov	s0, r3
 80178ce:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80178d2:	e795      	b.n	8017800 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 80178d4:	886b      	ldrh	r3, [r5, #2]
 80178d6:	f8ad 300c 	strh.w	r3, [sp, #12]
 80178da:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80178de:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80178e2:	8829      	ldrh	r1, [r5, #0]
 80178e4:	f8ad 2012 	strh.w	r2, [sp, #18]
 80178e8:	1a9b      	subs	r3, r3, r2
 80178ea:	1a5b      	subs	r3, r3, r1
 80178ec:	f8ad 300e 	strh.w	r3, [sp, #14]
 80178f0:	88eb      	ldrh	r3, [r5, #6]
 80178f2:	f8ad 3010 	strh.w	r3, [sp, #16]
 80178f6:	6803      	ldr	r3, [r0, #0]
 80178f8:	aa03      	add	r2, sp, #12
 80178fa:	689b      	ldr	r3, [r3, #8]
 80178fc:	4641      	mov	r1, r8
 80178fe:	4798      	blx	r3
 8017900:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 801794c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8017904:	a805      	add	r0, sp, #20
 8017906:	f000 f859 	bl	80179bc <_ZN8touchgfx9Matrix3x36rotateEf>
 801790a:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801790e:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8017912:	1bdb      	subs	r3, r3, r7
 8017914:	ee00 3a90 	vmov	s1, r3
 8017918:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801791c:	e748      	b.n	80177b0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 801791e:	6860      	ldr	r0, [r4, #4]
 8017920:	8b22      	ldrh	r2, [r4, #24]
 8017922:	6803      	ldr	r3, [r0, #0]
 8017924:	2100      	movs	r1, #0
 8017926:	9101      	str	r1, [sp, #4]
 8017928:	8b61      	ldrh	r1, [r4, #26]
 801792a:	9100      	str	r1, [sp, #0]
 801792c:	6a1d      	ldr	r5, [r3, #32]
 801792e:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 8017932:	47a8      	blx	r5
 8017934:	6860      	ldr	r0, [r4, #4]
 8017936:	6803      	ldr	r3, [r0, #0]
 8017938:	69db      	ldr	r3, [r3, #28]
 801793a:	4798      	blx	r3
 801793c:	b00e      	add	sp, #56	@ 0x38
 801793e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017942:	bf00      	nop
 8017944:	42b40000 	.word	0x42b40000
 8017948:	43340000 	.word	0x43340000
 801794c:	43870000 	.word	0x43870000

08017950 <_ZN8touchgfx9Matrix3x35resetEv>:
 8017950:	2300      	movs	r3, #0
 8017952:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8017956:	6002      	str	r2, [r0, #0]
 8017958:	6043      	str	r3, [r0, #4]
 801795a:	6083      	str	r3, [r0, #8]
 801795c:	60c3      	str	r3, [r0, #12]
 801795e:	6102      	str	r2, [r0, #16]
 8017960:	6143      	str	r3, [r0, #20]
 8017962:	6183      	str	r3, [r0, #24]
 8017964:	61c3      	str	r3, [r0, #28]
 8017966:	6202      	str	r2, [r0, #32]
 8017968:	4770      	bx	lr

0801796a <_ZN8touchgfx9Matrix3x3C1Ev>:
 801796a:	b508      	push	{r3, lr}
 801796c:	f7ff fff0 	bl	8017950 <_ZN8touchgfx9Matrix3x35resetEv>
 8017970:	bd08      	pop	{r3, pc}

08017972 <_ZN8touchgfx9Matrix3x35scaleEff>:
 8017972:	edd0 7a00 	vldr	s15, [r0]
 8017976:	ee67 7a80 	vmul.f32	s15, s15, s0
 801797a:	edc0 7a00 	vstr	s15, [r0]
 801797e:	edd0 7a01 	vldr	s15, [r0, #4]
 8017982:	ee67 7a80 	vmul.f32	s15, s15, s0
 8017986:	edc0 7a01 	vstr	s15, [r0, #4]
 801798a:	edd0 7a02 	vldr	s15, [r0, #8]
 801798e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8017992:	edd0 7a03 	vldr	s15, [r0, #12]
 8017996:	ed80 0a02 	vstr	s0, [r0, #8]
 801799a:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801799e:	edc0 7a03 	vstr	s15, [r0, #12]
 80179a2:	edd0 7a04 	vldr	s15, [r0, #16]
 80179a6:	ee67 7aa0 	vmul.f32	s15, s15, s1
 80179aa:	edc0 7a04 	vstr	s15, [r0, #16]
 80179ae:	edd0 7a05 	vldr	s15, [r0, #20]
 80179b2:	ee67 0aa0 	vmul.f32	s1, s15, s1
 80179b6:	edc0 0a05 	vstr	s1, [r0, #20]
 80179ba:	4770      	bx	lr

080179bc <_ZN8touchgfx9Matrix3x36rotateEf>:
 80179bc:	b510      	push	{r4, lr}
 80179be:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8017a50 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 80179c2:	ee20 0a27 	vmul.f32	s0, s0, s15
 80179c6:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8017a54 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 80179ca:	ed2d 8b02 	vpush	{d8}
 80179ce:	eec0 8a27 	vdiv.f32	s17, s0, s15
 80179d2:	4604      	mov	r4, r0
 80179d4:	eeb0 0a68 	vmov.f32	s0, s17
 80179d8:	f011 f9a2 	bl	8028d20 <cosf>
 80179dc:	eeb0 8a40 	vmov.f32	s16, s0
 80179e0:	eeb0 0a68 	vmov.f32	s0, s17
 80179e4:	f011 f9e0 	bl	8028da8 <sinf>
 80179e8:	edd4 6a03 	vldr	s13, [r4, #12]
 80179ec:	edd4 4a00 	vldr	s9, [r4]
 80179f0:	ed94 7a04 	vldr	s14, [r4, #16]
 80179f4:	ed94 5a01 	vldr	s10, [r4, #4]
 80179f8:	edd4 5a02 	vldr	s11, [r4, #8]
 80179fc:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8017a00:	ee66 6a88 	vmul.f32	s13, s13, s16
 8017a04:	eee8 7a24 	vfma.f32	s15, s16, s9
 8017a08:	eee0 6a24 	vfma.f32	s13, s0, s9
 8017a0c:	edc4 7a00 	vstr	s15, [r4]
 8017a10:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8017a14:	ee27 7a08 	vmul.f32	s14, s14, s16
 8017a18:	eee8 7a05 	vfma.f32	s15, s16, s10
 8017a1c:	eea0 7a05 	vfma.f32	s14, s0, s10
 8017a20:	edc4 7a01 	vstr	s15, [r4, #4]
 8017a24:	edd4 7a05 	vldr	s15, [r4, #20]
 8017a28:	edc4 6a03 	vstr	s13, [r4, #12]
 8017a2c:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8017a30:	ee67 7a88 	vmul.f32	s15, s15, s16
 8017a34:	eea8 6a25 	vfma.f32	s12, s16, s11
 8017a38:	ecbd 8b02 	vpop	{d8}
 8017a3c:	eee0 7a25 	vfma.f32	s15, s0, s11
 8017a40:	ed84 6a02 	vstr	s12, [r4, #8]
 8017a44:	ed84 7a04 	vstr	s14, [r4, #16]
 8017a48:	edc4 7a05 	vstr	s15, [r4, #20]
 8017a4c:	bd10      	pop	{r4, pc}
 8017a4e:	bf00      	nop
 8017a50:	40490fdb 	.word	0x40490fdb
 8017a54:	43340000 	.word	0x43340000

08017a58 <_ZN8touchgfx9Matrix3x39translateEff>:
 8017a58:	ed90 6a06 	vldr	s12, [r0, #24]
 8017a5c:	edd0 7a00 	vldr	s15, [r0]
 8017a60:	edd0 6a07 	vldr	s13, [r0, #28]
 8017a64:	ed90 7a08 	vldr	s14, [r0, #32]
 8017a68:	eee6 7a00 	vfma.f32	s15, s12, s0
 8017a6c:	edc0 7a00 	vstr	s15, [r0]
 8017a70:	edd0 7a01 	vldr	s15, [r0, #4]
 8017a74:	eee6 7a80 	vfma.f32	s15, s13, s0
 8017a78:	edc0 7a01 	vstr	s15, [r0, #4]
 8017a7c:	edd0 7a02 	vldr	s15, [r0, #8]
 8017a80:	eee7 7a00 	vfma.f32	s15, s14, s0
 8017a84:	edc0 7a02 	vstr	s15, [r0, #8]
 8017a88:	edd0 7a03 	vldr	s15, [r0, #12]
 8017a8c:	eee6 7a20 	vfma.f32	s15, s12, s1
 8017a90:	edc0 7a03 	vstr	s15, [r0, #12]
 8017a94:	edd0 7a04 	vldr	s15, [r0, #16]
 8017a98:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8017a9c:	edc0 7a04 	vstr	s15, [r0, #16]
 8017aa0:	edd0 7a05 	vldr	s15, [r0, #20]
 8017aa4:	eee7 7a20 	vfma.f32	s15, s14, s1
 8017aa8:	edc0 7a05 	vstr	s15, [r0, #20]
 8017aac:	4770      	bx	lr

08017aae <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8017aae:	edd0 6a01 	vldr	s13, [r0, #4]
 8017ab2:	edd0 7a04 	vldr	s15, [r0, #16]
 8017ab6:	ed90 7a03 	vldr	s14, [r0, #12]
 8017aba:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8017abe:	ee60 0aa6 	vmul.f32	s1, s1, s13
 8017ac2:	edd0 6a00 	vldr	s13, [r0]
 8017ac6:	eee7 7a00 	vfma.f32	s15, s14, s0
 8017aca:	b084      	sub	sp, #16
 8017acc:	eee6 0a80 	vfma.f32	s1, s13, s0
 8017ad0:	ed90 7a05 	vldr	s14, [r0, #20]
 8017ad4:	ed90 0a02 	vldr	s0, [r0, #8]
 8017ad8:	ee30 0a80 	vadd.f32	s0, s1, s0
 8017adc:	ee77 0a87 	vadd.f32	s1, s15, s14
 8017ae0:	b004      	add	sp, #16
 8017ae2:	4770      	bx	lr

08017ae4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8017ae4:	b530      	push	{r4, r5, lr}
 8017ae6:	8083      	strh	r3, [r0, #4]
 8017ae8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017aec:	80c3      	strh	r3, [r0, #6]
 8017aee:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8017af2:	7203      	strb	r3, [r0, #8]
 8017af4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017af8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8017afc:	7243      	strb	r3, [r0, #9]
 8017afe:	7a83      	ldrb	r3, [r0, #10]
 8017b00:	6141      	str	r1, [r0, #20]
 8017b02:	f365 0306 	bfi	r3, r5, #0, #7
 8017b06:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8017b0a:	8302      	strh	r2, [r0, #24]
 8017b0c:	f365 13c7 	bfi	r3, r5, #7, #1
 8017b10:	7283      	strb	r3, [r0, #10]
 8017b12:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8017b16:	72c3      	strb	r3, [r0, #11]
 8017b18:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8017b1c:	7303      	strb	r3, [r0, #12]
 8017b1e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017b22:	81c3      	strh	r3, [r0, #14]
 8017b24:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8017b28:	8203      	strh	r3, [r0, #16]
 8017b2a:	4b01      	ldr	r3, [pc, #4]	@ (8017b30 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8017b2c:	6003      	str	r3, [r0, #0]
 8017b2e:	bd30      	pop	{r4, r5, pc}
 8017b30:	0802d7e0 	.word	0x0802d7e0

08017b34 <_ZNK8touchgfx9ConstFont4findEt>:
 8017b34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b36:	6944      	ldr	r4, [r0, #20]
 8017b38:	b3bc      	cbz	r4, 8017baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b3a:	88a3      	ldrh	r3, [r4, #4]
 8017b3c:	8b02      	ldrh	r2, [r0, #24]
 8017b3e:	1acb      	subs	r3, r1, r3
 8017b40:	f102 32ff 	add.w	r2, r2, #4294967295
 8017b44:	d431      	bmi.n	8017baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b46:	4293      	cmp	r3, r2
 8017b48:	dd0c      	ble.n	8017b64 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8017b4a:	230e      	movs	r3, #14
 8017b4c:	fb03 4302 	mla	r3, r3, r2, r4
 8017b50:	889b      	ldrh	r3, [r3, #4]
 8017b52:	1a5b      	subs	r3, r3, r1
 8017b54:	1ad3      	subs	r3, r2, r3
 8017b56:	429a      	cmp	r2, r3
 8017b58:	db27      	blt.n	8017baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b5a:	2b00      	cmp	r3, #0
 8017b5c:	bfbc      	itt	lt
 8017b5e:	2302      	movlt	r3, #2
 8017b60:	fb92 f3f3 	sdivlt	r3, r2, r3
 8017b64:	2500      	movs	r5, #0
 8017b66:	260e      	movs	r6, #14
 8017b68:	4295      	cmp	r5, r2
 8017b6a:	dc1e      	bgt.n	8017baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b6c:	fb06 4003 	mla	r0, r6, r3, r4
 8017b70:	8887      	ldrh	r7, [r0, #4]
 8017b72:	42b9      	cmp	r1, r7
 8017b74:	d01a      	beq.n	8017bac <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8017b76:	d20d      	bcs.n	8017b94 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017b78:	1e5a      	subs	r2, r3, #1
 8017b7a:	4295      	cmp	r5, r2
 8017b7c:	dc15      	bgt.n	8017baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b7e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8017b82:	1a5b      	subs	r3, r3, r1
 8017b84:	1ad3      	subs	r3, r2, r3
 8017b86:	429a      	cmp	r2, r3
 8017b88:	db0f      	blt.n	8017baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b8a:	429d      	cmp	r5, r3
 8017b8c:	ddec      	ble.n	8017b68 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017b8e:	1953      	adds	r3, r2, r5
 8017b90:	105b      	asrs	r3, r3, #1
 8017b92:	e7e9      	b.n	8017b68 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017b94:	1c5d      	adds	r5, r3, #1
 8017b96:	42aa      	cmp	r2, r5
 8017b98:	db07      	blt.n	8017baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b9a:	8a43      	ldrh	r3, [r0, #18]
 8017b9c:	1acb      	subs	r3, r1, r3
 8017b9e:	442b      	add	r3, r5
 8017ba0:	429d      	cmp	r5, r3
 8017ba2:	dc02      	bgt.n	8017baa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017ba4:	429a      	cmp	r2, r3
 8017ba6:	dadf      	bge.n	8017b68 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017ba8:	e7f1      	b.n	8017b8e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017baa:	2000      	movs	r0, #0
 8017bac:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017bae <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017bae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017bb0:	4604      	mov	r4, r0
 8017bb2:	4617      	mov	r7, r2
 8017bb4:	461e      	mov	r6, r3
 8017bb6:	b911      	cbnz	r1, 8017bbe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017bb8:	2500      	movs	r5, #0
 8017bba:	4628      	mov	r0, r5
 8017bbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017bbe:	290a      	cmp	r1, #10
 8017bc0:	d0fa      	beq.n	8017bb8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017bc2:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8017bc6:	4291      	cmp	r1, r2
 8017bc8:	d0f6      	beq.n	8017bb8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017bca:	f242 020b 	movw	r2, #8203	@ 0x200b
 8017bce:	4291      	cmp	r1, r2
 8017bd0:	d0f2      	beq.n	8017bb8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017bd2:	f7ff ffaf 	bl	8017b34 <_ZNK8touchgfx9ConstFont4findEt>
 8017bd6:	4605      	mov	r5, r0
 8017bd8:	b950      	cbnz	r0, 8017bf0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8017bda:	6823      	ldr	r3, [r4, #0]
 8017bdc:	4620      	mov	r0, r4
 8017bde:	691b      	ldr	r3, [r3, #16]
 8017be0:	4798      	blx	r3
 8017be2:	4601      	mov	r1, r0
 8017be4:	4620      	mov	r0, r4
 8017be6:	f7ff ffa5 	bl	8017b34 <_ZNK8touchgfx9ConstFont4findEt>
 8017bea:	4605      	mov	r5, r0
 8017bec:	2800      	cmp	r0, #0
 8017bee:	d0e3      	beq.n	8017bb8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017bf0:	6823      	ldr	r3, [r4, #0]
 8017bf2:	4629      	mov	r1, r5
 8017bf4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8017bf6:	4620      	mov	r0, r4
 8017bf8:	4798      	blx	r3
 8017bfa:	6038      	str	r0, [r7, #0]
 8017bfc:	6823      	ldr	r3, [r4, #0]
 8017bfe:	4620      	mov	r0, r4
 8017c00:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017c02:	4798      	blx	r3
 8017c04:	7030      	strb	r0, [r6, #0]
 8017c06:	e7d8      	b.n	8017bba <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017c08 <_ZN8touchgfx4clzuEm>:
 8017c08:	4603      	mov	r3, r0
 8017c0a:	b1c8      	cbz	r0, 8017c40 <_ZN8touchgfx4clzuEm+0x38>
 8017c0c:	0c02      	lsrs	r2, r0, #16
 8017c0e:	0412      	lsls	r2, r2, #16
 8017c10:	b9a2      	cbnz	r2, 8017c3c <_ZN8touchgfx4clzuEm+0x34>
 8017c12:	0403      	lsls	r3, r0, #16
 8017c14:	2010      	movs	r0, #16
 8017c16:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8017c1a:	bf04      	itt	eq
 8017c1c:	021b      	lsleq	r3, r3, #8
 8017c1e:	3008      	addeq	r0, #8
 8017c20:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8017c24:	bf04      	itt	eq
 8017c26:	011b      	lsleq	r3, r3, #4
 8017c28:	3004      	addeq	r0, #4
 8017c2a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8017c2e:	bf04      	itt	eq
 8017c30:	009b      	lsleq	r3, r3, #2
 8017c32:	3002      	addeq	r0, #2
 8017c34:	2b00      	cmp	r3, #0
 8017c36:	db04      	blt.n	8017c42 <_ZN8touchgfx4clzuEm+0x3a>
 8017c38:	3001      	adds	r0, #1
 8017c3a:	4770      	bx	lr
 8017c3c:	2000      	movs	r0, #0
 8017c3e:	e7ea      	b.n	8017c16 <_ZN8touchgfx4clzuEm+0xe>
 8017c40:	2020      	movs	r0, #32
 8017c42:	4770      	bx	lr

08017c44 <_ZN8touchgfx7muldivuEmmmRm>:
 8017c44:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017c48:	460f      	mov	r7, r1
 8017c4a:	4615      	mov	r5, r2
 8017c4c:	461e      	mov	r6, r3
 8017c4e:	4601      	mov	r1, r0
 8017c50:	b100      	cbz	r0, 8017c54 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8017c52:	b927      	cbnz	r7, 8017c5e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017c54:	2000      	movs	r0, #0
 8017c56:	6030      	str	r0, [r6, #0]
 8017c58:	b002      	add	sp, #8
 8017c5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017c5e:	f7ff ffd3 	bl	8017c08 <_ZN8touchgfx4clzuEm>
 8017c62:	b980      	cbnz	r0, 8017c86 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017c64:	4638      	mov	r0, r7
 8017c66:	f7ff ffcf 	bl	8017c08 <_ZN8touchgfx4clzuEm>
 8017c6a:	2800      	cmp	r0, #0
 8017c6c:	dd05      	ble.n	8017c7a <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8017c6e:	4633      	mov	r3, r6
 8017c70:	462a      	mov	r2, r5
 8017c72:	4638      	mov	r0, r7
 8017c74:	f7ff ffe6 	bl	8017c44 <_ZN8touchgfx7muldivuEmmmRm>
 8017c78:	e7ee      	b.n	8017c58 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017c7a:	f04f 33ff 	mov.w	r3, #4294967295
 8017c7e:	6033      	str	r3, [r6, #0]
 8017c80:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8017c84:	e7e8      	b.n	8017c58 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017c86:	fa37 f800 	lsrs.w	r8, r7, r0
 8017c8a:	fb07 f301 	mul.w	r3, r7, r1
 8017c8e:	d105      	bne.n	8017c9c <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8017c90:	fbb3 f0f5 	udiv	r0, r3, r5
 8017c94:	fb05 3510 	mls	r5, r5, r0, r3
 8017c98:	6035      	str	r5, [r6, #0]
 8017c9a:	e7dd      	b.n	8017c58 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017c9c:	2301      	movs	r3, #1
 8017c9e:	fa01 fa00 	lsl.w	sl, r1, r0
 8017ca2:	fa03 f000 	lsl.w	r0, r3, r0
 8017ca6:	3801      	subs	r0, #1
 8017ca8:	462a      	mov	r2, r5
 8017caa:	4633      	mov	r3, r6
 8017cac:	4038      	ands	r0, r7
 8017cae:	f7ff ffc9 	bl	8017c44 <_ZN8touchgfx7muldivuEmmmRm>
 8017cb2:	fbba f9f5 	udiv	r9, sl, r5
 8017cb6:	462a      	mov	r2, r5
 8017cb8:	4607      	mov	r7, r0
 8017cba:	ab01      	add	r3, sp, #4
 8017cbc:	fb05 a119 	mls	r1, r5, r9, sl
 8017cc0:	4640      	mov	r0, r8
 8017cc2:	f7ff ffbf 	bl	8017c44 <_ZN8touchgfx7muldivuEmmmRm>
 8017cc6:	9b01      	ldr	r3, [sp, #4]
 8017cc8:	6832      	ldr	r2, [r6, #0]
 8017cca:	fb08 f409 	mul.w	r4, r8, r9
 8017cce:	441a      	add	r2, r3
 8017cd0:	fbb2 f3f5 	udiv	r3, r2, r5
 8017cd4:	441c      	add	r4, r3
 8017cd6:	443c      	add	r4, r7
 8017cd8:	4420      	add	r0, r4
 8017cda:	fb05 2513 	mls	r5, r5, r3, r2
 8017cde:	e7db      	b.n	8017c98 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08017ce0 <_ZN8touchgfx6muldivElllRl>:
 8017ce0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017ce2:	2800      	cmp	r0, #0
 8017ce4:	bfba      	itte	lt
 8017ce6:	4240      	neglt	r0, r0
 8017ce8:	f04f 34ff 	movlt.w	r4, #4294967295
 8017cec:	2401      	movge	r4, #1
 8017cee:	2900      	cmp	r1, #0
 8017cf0:	bfbc      	itt	lt
 8017cf2:	4249      	neglt	r1, r1
 8017cf4:	4264      	neglt	r4, r4
 8017cf6:	2a00      	cmp	r2, #0
 8017cf8:	bfb6      	itet	lt
 8017cfa:	4265      	neglt	r5, r4
 8017cfc:	4625      	movge	r5, r4
 8017cfe:	4252      	neglt	r2, r2
 8017d00:	4288      	cmp	r0, r1
 8017d02:	461e      	mov	r6, r3
 8017d04:	bfc2      	ittt	gt
 8017d06:	4603      	movgt	r3, r0
 8017d08:	4608      	movgt	r0, r1
 8017d0a:	4619      	movgt	r1, r3
 8017d0c:	ab01      	add	r3, sp, #4
 8017d0e:	f7ff ff99 	bl	8017c44 <_ZN8touchgfx7muldivuEmmmRm>
 8017d12:	9b01      	ldr	r3, [sp, #4]
 8017d14:	4368      	muls	r0, r5
 8017d16:	435c      	muls	r4, r3
 8017d18:	6034      	str	r4, [r6, #0]
 8017d1a:	b002      	add	sp, #8
 8017d1c:	bd70      	pop	{r4, r5, r6, pc}

08017d1e <_ZN8touchgfx6muldivElll>:
 8017d1e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017d20:	4606      	mov	r6, r0
 8017d22:	ab01      	add	r3, sp, #4
 8017d24:	460d      	mov	r5, r1
 8017d26:	4614      	mov	r4, r2
 8017d28:	f7ff ffda 	bl	8017ce0 <_ZN8touchgfx6muldivElllRl>
 8017d2c:	2e00      	cmp	r6, #0
 8017d2e:	db20      	blt.n	8017d72 <_ZN8touchgfx6muldivElll+0x54>
 8017d30:	bf14      	ite	ne
 8017d32:	2301      	movne	r3, #1
 8017d34:	2300      	moveq	r3, #0
 8017d36:	2d00      	cmp	r5, #0
 8017d38:	db1e      	blt.n	8017d78 <_ZN8touchgfx6muldivElll+0x5a>
 8017d3a:	bf14      	ite	ne
 8017d3c:	2201      	movne	r2, #1
 8017d3e:	2200      	moveq	r2, #0
 8017d40:	2c00      	cmp	r4, #0
 8017d42:	fb03 f202 	mul.w	r2, r3, r2
 8017d46:	db1a      	blt.n	8017d7e <_ZN8touchgfx6muldivElll+0x60>
 8017d48:	bf14      	ite	ne
 8017d4a:	2301      	movne	r3, #1
 8017d4c:	2300      	moveq	r3, #0
 8017d4e:	4353      	muls	r3, r2
 8017d50:	2b01      	cmp	r3, #1
 8017d52:	d117      	bne.n	8017d84 <_ZN8touchgfx6muldivElll+0x66>
 8017d54:	9b01      	ldr	r3, [sp, #4]
 8017d56:	2c00      	cmp	r4, #0
 8017d58:	bfb8      	it	lt
 8017d5a:	4264      	neglt	r4, r4
 8017d5c:	2b00      	cmp	r3, #0
 8017d5e:	f104 0401 	add.w	r4, r4, #1
 8017d62:	bfb8      	it	lt
 8017d64:	425b      	neglt	r3, r3
 8017d66:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017d6a:	db00      	blt.n	8017d6e <_ZN8touchgfx6muldivElll+0x50>
 8017d6c:	3001      	adds	r0, #1
 8017d6e:	b002      	add	sp, #8
 8017d70:	bd70      	pop	{r4, r5, r6, pc}
 8017d72:	f04f 33ff 	mov.w	r3, #4294967295
 8017d76:	e7de      	b.n	8017d36 <_ZN8touchgfx6muldivElll+0x18>
 8017d78:	f04f 32ff 	mov.w	r2, #4294967295
 8017d7c:	e7e0      	b.n	8017d40 <_ZN8touchgfx6muldivElll+0x22>
 8017d7e:	f04f 33ff 	mov.w	r3, #4294967295
 8017d82:	e7e4      	b.n	8017d4e <_ZN8touchgfx6muldivElll+0x30>
 8017d84:	3301      	adds	r3, #1
 8017d86:	d1f2      	bne.n	8017d6e <_ZN8touchgfx6muldivElll+0x50>
 8017d88:	9b01      	ldr	r3, [sp, #4]
 8017d8a:	2c00      	cmp	r4, #0
 8017d8c:	bfb8      	it	lt
 8017d8e:	4264      	neglt	r4, r4
 8017d90:	2b00      	cmp	r3, #0
 8017d92:	bfb8      	it	lt
 8017d94:	425b      	neglt	r3, r3
 8017d96:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017d9a:	bfc8      	it	gt
 8017d9c:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8017da0:	e7e5      	b.n	8017d6e <_ZN8touchgfx6muldivElll+0x50>

08017da2 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8017da2:	2000      	movs	r0, #0
 8017da4:	4770      	bx	lr

08017da6 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8017da6:	2001      	movs	r0, #1
 8017da8:	4770      	bx	lr

08017daa <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017daa:	2002      	movs	r0, #2
 8017dac:	4770      	bx	lr

08017dae <_ZN8touchgfx6ScreenD1Ev>:
 8017dae:	4770      	bx	lr

08017db0 <_ZN8touchgfx12GestureEventD1Ev>:
 8017db0:	4770      	bx	lr

08017db2 <_ZN8touchgfx9DragEventD1Ev>:
 8017db2:	4770      	bx	lr

08017db4 <_ZN8touchgfx10ClickEventD1Ev>:
 8017db4:	4770      	bx	lr

08017db6 <_ZN8touchgfx10ClickEventD0Ev>:
 8017db6:	b510      	push	{r4, lr}
 8017db8:	210c      	movs	r1, #12
 8017dba:	4604      	mov	r4, r0
 8017dbc:	f010 ff3c 	bl	8028c38 <_ZdlPvj>
 8017dc0:	4620      	mov	r0, r4
 8017dc2:	bd10      	pop	{r4, pc}

08017dc4 <_ZN8touchgfx9DragEventD0Ev>:
 8017dc4:	b510      	push	{r4, lr}
 8017dc6:	2110      	movs	r1, #16
 8017dc8:	4604      	mov	r4, r0
 8017dca:	f010 ff35 	bl	8028c38 <_ZdlPvj>
 8017dce:	4620      	mov	r0, r4
 8017dd0:	bd10      	pop	{r4, pc}

08017dd2 <_ZN8touchgfx12GestureEventD0Ev>:
 8017dd2:	b510      	push	{r4, lr}
 8017dd4:	210c      	movs	r1, #12
 8017dd6:	4604      	mov	r4, r0
 8017dd8:	f010 ff2e 	bl	8028c38 <_ZdlPvj>
 8017ddc:	4620      	mov	r0, r4
 8017dde:	bd10      	pop	{r4, pc}

08017de0 <_ZN8touchgfx6ScreenD0Ev>:
 8017de0:	b510      	push	{r4, lr}
 8017de2:	213c      	movs	r1, #60	@ 0x3c
 8017de4:	4604      	mov	r4, r0
 8017de6:	f010 ff27 	bl	8028c38 <_ZdlPvj>
 8017dea:	4620      	mov	r0, r4
 8017dec:	bd10      	pop	{r4, pc}
	...

08017df0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8017df0:	b530      	push	{r4, r5, lr}
 8017df2:	460d      	mov	r5, r1
 8017df4:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8017df6:	b087      	sub	sp, #28
 8017df8:	4604      	mov	r4, r0
 8017dfa:	b301      	cbz	r1, 8017e3e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017dfc:	a801      	add	r0, sp, #4
 8017dfe:	f7ff fb3b 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017e02:	892a      	ldrh	r2, [r5, #8]
 8017e04:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017e08:	7928      	ldrb	r0, [r5, #4]
 8017e0a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017e0e:	f88d 0010 	strb.w	r0, [sp, #16]
 8017e12:	1ad2      	subs	r2, r2, r3
 8017e14:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8017e16:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8017e18:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017e1c:	441a      	add	r2, r3
 8017e1e:	896b      	ldrh	r3, [r5, #10]
 8017e20:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017e24:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017e28:	1b5b      	subs	r3, r3, r5
 8017e2a:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8017e2c:	442b      	add	r3, r5
 8017e2e:	4d05      	ldr	r5, [pc, #20]	@ (8017e44 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8017e30:	9503      	str	r5, [sp, #12]
 8017e32:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017e36:	6803      	ldr	r3, [r0, #0]
 8017e38:	a903      	add	r1, sp, #12
 8017e3a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8017e3c:	4798      	blx	r3
 8017e3e:	b007      	add	sp, #28
 8017e40:	bd30      	pop	{r4, r5, pc}
 8017e42:	bf00      	nop
 8017e44:	0802d870 	.word	0x0802d870

08017e48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017e48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017e4c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8017e4e:	b08a      	sub	sp, #40	@ 0x28
 8017e50:	4604      	mov	r4, r0
 8017e52:	460d      	mov	r5, r1
 8017e54:	b113      	cbz	r3, 8017e5c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017e56:	790b      	ldrb	r3, [r1, #4]
 8017e58:	2b00      	cmp	r3, #0
 8017e5a:	d044      	beq.n	8017ee6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017e5c:	f104 0804 	add.w	r8, r4, #4
 8017e60:	4641      	mov	r1, r8
 8017e62:	a803      	add	r0, sp, #12
 8017e64:	f7ff fb08 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017e68:	792b      	ldrb	r3, [r5, #4]
 8017e6a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017e6e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017e72:	b983      	cbnz	r3, 8017e96 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017e74:	892a      	ldrh	r2, [r5, #8]
 8017e76:	88e9      	ldrh	r1, [r5, #6]
 8017e78:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8017e7c:	1b92      	subs	r2, r2, r6
 8017e7e:	1bc9      	subs	r1, r1, r7
 8017e80:	9301      	str	r3, [sp, #4]
 8017e82:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8017e86:	9300      	str	r3, [sp, #0]
 8017e88:	b212      	sxth	r2, r2
 8017e8a:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8017e8e:	b209      	sxth	r1, r1
 8017e90:	4640      	mov	r0, r8
 8017e92:	f7f7 f9cf 	bl	800f234 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017e96:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8017e98:	b329      	cbz	r1, 8017ee6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017e9a:	a805      	add	r0, sp, #20
 8017e9c:	f7ff faec 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017ea0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017ea4:	792b      	ldrb	r3, [r5, #4]
 8017ea6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8017ea8:	f88d 3020 	strb.w	r3, [sp, #32]
 8017eac:	1abf      	subs	r7, r7, r2
 8017eae:	88ea      	ldrh	r2, [r5, #6]
 8017eb0:	4417      	add	r7, r2
 8017eb2:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8017eb4:	4417      	add	r7, r2
 8017eb6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017eba:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8017ebe:	1ab6      	subs	r6, r6, r2
 8017ec0:	892a      	ldrh	r2, [r5, #8]
 8017ec2:	4416      	add	r6, r2
 8017ec4:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8017ec6:	4416      	add	r6, r2
 8017ec8:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8017ecc:	4a07      	ldr	r2, [pc, #28]	@ (8017eec <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8017ece:	9207      	str	r2, [sp, #28]
 8017ed0:	2600      	movs	r6, #0
 8017ed2:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8017ed6:	6803      	ldr	r3, [r0, #0]
 8017ed8:	a907      	add	r1, sp, #28
 8017eda:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8017edc:	4798      	blx	r3
 8017ede:	792b      	ldrb	r3, [r5, #4]
 8017ee0:	b10b      	cbz	r3, 8017ee6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017ee2:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8017ee6:	b00a      	add	sp, #40	@ 0x28
 8017ee8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017eec:	0802d848 	.word	0x0802d848

08017ef0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8017ef0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017ef4:	460c      	mov	r4, r1
 8017ef6:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8017ef8:	b088      	sub	sp, #32
 8017efa:	4605      	mov	r5, r0
 8017efc:	2900      	cmp	r1, #0
 8017efe:	d06d      	beq.n	8017fdc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8017f00:	4668      	mov	r0, sp
 8017f02:	f7ff fab9 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017f06:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8017f08:	88e3      	ldrh	r3, [r4, #6]
 8017f0a:	f9bd 8000 	ldrsh.w	r8, [sp]
 8017f0e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8017f12:	440b      	add	r3, r1
 8017f14:	b21b      	sxth	r3, r3
 8017f16:	4543      	cmp	r3, r8
 8017f18:	db31      	blt.n	8017f7e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017f1a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8017f1e:	44c4      	add	ip, r8
 8017f20:	fa0f fc8c 	sxth.w	ip, ip
 8017f24:	4563      	cmp	r3, ip
 8017f26:	da2a      	bge.n	8017f7e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017f28:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8017f2a:	8926      	ldrh	r6, [r4, #8]
 8017f2c:	4416      	add	r6, r2
 8017f2e:	b236      	sxth	r6, r6
 8017f30:	42be      	cmp	r6, r7
 8017f32:	db24      	blt.n	8017f7e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017f34:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017f38:	4438      	add	r0, r7
 8017f3a:	b200      	sxth	r0, r0
 8017f3c:	4286      	cmp	r6, r0
 8017f3e:	da1e      	bge.n	8017f7e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017f40:	8963      	ldrh	r3, [r4, #10]
 8017f42:	4419      	add	r1, r3
 8017f44:	b209      	sxth	r1, r1
 8017f46:	4541      	cmp	r1, r8
 8017f48:	db08      	blt.n	8017f5c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017f4a:	4561      	cmp	r1, ip
 8017f4c:	da06      	bge.n	8017f5c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017f4e:	89a3      	ldrh	r3, [r4, #12]
 8017f50:	441a      	add	r2, r3
 8017f52:	b212      	sxth	r2, r2
 8017f54:	42ba      	cmp	r2, r7
 8017f56:	db01      	blt.n	8017f5c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017f58:	4282      	cmp	r2, r0
 8017f5a:	db10      	blt.n	8017f7e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017f5c:	4b21      	ldr	r3, [pc, #132]	@ (8017fe4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017f5e:	9304      	str	r3, [sp, #16]
 8017f60:	2302      	movs	r3, #2
 8017f62:	f88d 3014 	strb.w	r3, [sp, #20]
 8017f66:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8017f68:	2300      	movs	r3, #0
 8017f6a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017f6e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017f72:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017f76:	6803      	ldr	r3, [r0, #0]
 8017f78:	a904      	add	r1, sp, #16
 8017f7a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8017f7c:	4798      	blx	r3
 8017f7e:	1d29      	adds	r1, r5, #4
 8017f80:	a802      	add	r0, sp, #8
 8017f82:	f7ff fa79 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017f86:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017f8a:	88e0      	ldrh	r0, [r4, #6]
 8017f8c:	7921      	ldrb	r1, [r4, #4]
 8017f8e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8017f92:	8922      	ldrh	r2, [r4, #8]
 8017f94:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8017f96:	f88d 1014 	strb.w	r1, [sp, #20]
 8017f9a:	eba3 0808 	sub.w	r8, r3, r8
 8017f9e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017fa2:	1bdf      	subs	r7, r3, r7
 8017fa4:	b2bb      	uxth	r3, r7
 8017fa6:	fa1f f888 	uxth.w	r8, r8
 8017faa:	8967      	ldrh	r7, [r4, #10]
 8017fac:	89a4      	ldrh	r4, [r4, #12]
 8017fae:	4440      	add	r0, r8
 8017fb0:	4460      	add	r0, ip
 8017fb2:	441a      	add	r2, r3
 8017fb4:	44b8      	add	r8, r7
 8017fb6:	4423      	add	r3, r4
 8017fb8:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017fbc:	4433      	add	r3, r6
 8017fbe:	4432      	add	r2, r6
 8017fc0:	44e0      	add	r8, ip
 8017fc2:	4c09      	ldr	r4, [pc, #36]	@ (8017fe8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017fc4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8017fc6:	9404      	str	r4, [sp, #16]
 8017fc8:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017fcc:	f8ad 801a 	strh.w	r8, [sp, #26]
 8017fd0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017fd4:	6803      	ldr	r3, [r0, #0]
 8017fd6:	a904      	add	r1, sp, #16
 8017fd8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017fda:	4798      	blx	r3
 8017fdc:	b008      	add	sp, #32
 8017fde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017fe2:	bf00      	nop
 8017fe4:	0802d848 	.word	0x0802d848
 8017fe8:	0802d85c 	.word	0x0802d85c

08017fec <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017fec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017fee:	4604      	mov	r4, r0
 8017ff0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017ff4:	3201      	adds	r2, #1
 8017ff6:	d112      	bne.n	801801e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017ff8:	6803      	ldr	r3, [r0, #0]
 8017ffa:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017ffe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8018002:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018006:	2500      	movs	r5, #0
 8018008:	9500      	str	r5, [sp, #0]
 801800a:	466d      	mov	r5, sp
 801800c:	4629      	mov	r1, r5
 801800e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018012:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018014:	4798      	blx	r3
 8018016:	e895 0003 	ldmia.w	r5, {r0, r1}
 801801a:	e884 0003 	stmia.w	r4, {r0, r1}
 801801e:	4620      	mov	r0, r4
 8018020:	b003      	add	sp, #12
 8018022:	bd30      	pop	{r4, r5, pc}

08018024 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8018024:	b513      	push	{r0, r1, r4, lr}
 8018026:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801802a:	3301      	adds	r3, #1
 801802c:	4604      	mov	r4, r0
 801802e:	d109      	bne.n	8018044 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8018030:	4601      	mov	r1, r0
 8018032:	4668      	mov	r0, sp
 8018034:	f7ff fa20 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018038:	f8bd 3000 	ldrh.w	r3, [sp]
 801803c:	8423      	strh	r3, [r4, #32]
 801803e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018042:	8463      	strh	r3, [r4, #34]	@ 0x22
 8018044:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8018048:	b002      	add	sp, #8
 801804a:	bd10      	pop	{r4, pc}

0801804c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801804c:	b513      	push	{r0, r1, r4, lr}
 801804e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8018052:	3301      	adds	r3, #1
 8018054:	4604      	mov	r4, r0
 8018056:	d109      	bne.n	801806c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8018058:	4601      	mov	r1, r0
 801805a:	4668      	mov	r0, sp
 801805c:	f7ff fa0c 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018060:	f8bd 3000 	ldrh.w	r3, [sp]
 8018064:	8423      	strh	r3, [r4, #32]
 8018066:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801806a:	8463      	strh	r3, [r4, #34]	@ 0x22
 801806c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8018070:	b002      	add	sp, #8
 8018072:	bd10      	pop	{r4, pc}

08018074 <_ZN8touchgfx6ScreenC1Ev>:
 8018074:	b570      	push	{r4, r5, r6, lr}
 8018076:	4605      	mov	r5, r0
 8018078:	4b16      	ldr	r3, [pc, #88]	@ (80180d4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801807a:	f845 3b04 	str.w	r3, [r5], #4
 801807e:	2300      	movs	r3, #0
 8018080:	8103      	strh	r3, [r0, #8]
 8018082:	8143      	strh	r3, [r0, #10]
 8018084:	8183      	strh	r3, [r0, #12]
 8018086:	81c3      	strh	r3, [r0, #14]
 8018088:	8203      	strh	r3, [r0, #16]
 801808a:	8243      	strh	r3, [r0, #18]
 801808c:	8283      	strh	r3, [r0, #20]
 801808e:	82c3      	strh	r3, [r0, #22]
 8018090:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8018094:	6203      	str	r3, [r0, #32]
 8018096:	8483      	strh	r3, [r0, #36]	@ 0x24
 8018098:	84c3      	strh	r3, [r0, #38]	@ 0x26
 801809a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801809e:	4a0e      	ldr	r2, [pc, #56]	@ (80180d8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80180a0:	6343      	str	r3, [r0, #52]	@ 0x34
 80180a2:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80180a6:	4b0d      	ldr	r3, [pc, #52]	@ (80180dc <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80180a8:	6042      	str	r2, [r0, #4]
 80180aa:	f9b3 6000 	ldrsh.w	r6, [r3]
 80180ae:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80180b0:	4a0b      	ldr	r2, [pc, #44]	@ (80180e0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80180b2:	4604      	mov	r4, r0
 80180b4:	2101      	movs	r1, #1
 80180b6:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80180ba:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80180be:	f9b2 1000 	ldrsh.w	r1, [r2]
 80180c2:	4628      	mov	r0, r5
 80180c4:	4798      	blx	r3
 80180c6:	6863      	ldr	r3, [r4, #4]
 80180c8:	4628      	mov	r0, r5
 80180ca:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80180cc:	4631      	mov	r1, r6
 80180ce:	4798      	blx	r3
 80180d0:	4620      	mov	r0, r4
 80180d2:	bd70      	pop	{r4, r5, r6, pc}
 80180d4:	0802d884 	.word	0x0802d884
 80180d8:	0802d134 	.word	0x0802d134
 80180dc:	20013f56 	.word	0x20013f56
 80180e0:	20013f54 	.word	0x20013f54

080180e4 <_ZN8touchgfx6Screen4drawEv>:
 80180e4:	b507      	push	{r0, r1, r2, lr}
 80180e6:	4b09      	ldr	r3, [pc, #36]	@ (801810c <_ZN8touchgfx6Screen4drawEv+0x28>)
 80180e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80180ec:	4b08      	ldr	r3, [pc, #32]	@ (8018110 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80180ee:	f8ad 2004 	strh.w	r2, [sp, #4]
 80180f2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80180f6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80180fa:	6803      	ldr	r3, [r0, #0]
 80180fc:	2100      	movs	r1, #0
 80180fe:	9100      	str	r1, [sp, #0]
 8018100:	689b      	ldr	r3, [r3, #8]
 8018102:	4669      	mov	r1, sp
 8018104:	4798      	blx	r3
 8018106:	b003      	add	sp, #12
 8018108:	f85d fb04 	ldr.w	pc, [sp], #4
 801810c:	20013f54 	.word	0x20013f54
 8018110:	20013f56 	.word	0x20013f56

08018114 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8018114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018118:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801811c:	2b00      	cmp	r3, #0
 801811e:	b089      	sub	sp, #36	@ 0x24
 8018120:	4680      	mov	r8, r0
 8018122:	460c      	mov	r4, r1
 8018124:	4615      	mov	r5, r2
 8018126:	dd0e      	ble.n	8018146 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018128:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801812c:	2b00      	cmp	r3, #0
 801812e:	dd0a      	ble.n	8018146 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018130:	4628      	mov	r0, r5
 8018132:	f7ff ff5b 	bl	8017fec <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018136:	4621      	mov	r1, r4
 8018138:	f7fd ff85 	bl	8016046 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801813c:	69eb      	ldr	r3, [r5, #28]
 801813e:	b928      	cbnz	r0, 801814c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8018140:	461d      	mov	r5, r3
 8018142:	2b00      	cmp	r3, #0
 8018144:	d1f4      	bne.n	8018130 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8018146:	b009      	add	sp, #36	@ 0x24
 8018148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801814c:	ae04      	add	r6, sp, #16
 801814e:	2b00      	cmp	r3, #0
 8018150:	f000 80b5 	beq.w	80182be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018154:	682b      	ldr	r3, [r5, #0]
 8018156:	4629      	mov	r1, r5
 8018158:	68db      	ldr	r3, [r3, #12]
 801815a:	a802      	add	r0, sp, #8
 801815c:	4798      	blx	r3
 801815e:	4628      	mov	r0, r5
 8018160:	f7ff ff60 	bl	8018024 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018164:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8018168:	4407      	add	r7, r0
 801816a:	4628      	mov	r0, r5
 801816c:	f7ff ff6e 	bl	801804c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018170:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018174:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8018178:	f8ad 2014 	strh.w	r2, [sp, #20]
 801817c:	4418      	add	r0, r3
 801817e:	4621      	mov	r1, r4
 8018180:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8018184:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018188:	b23f      	sxth	r7, r7
 801818a:	4630      	mov	r0, r6
 801818c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018190:	f8ad 7010 	strh.w	r7, [sp, #16]
 8018194:	f7f7 f932 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 8018198:	4628      	mov	r0, r5
 801819a:	f7ff ff27 	bl	8017fec <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801819e:	4602      	mov	r2, r0
 80181a0:	e896 0003 	ldmia.w	r6, {r0, r1}
 80181a4:	ab06      	add	r3, sp, #24
 80181a6:	e883 0003 	stmia.w	r3, {r0, r1}
 80181aa:	4611      	mov	r1, r2
 80181ac:	4618      	mov	r0, r3
 80181ae:	f7f7 f925 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 80181b2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80181b6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80181ba:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80181be:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80181c2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80181c6:	4299      	cmp	r1, r3
 80181c8:	d10b      	bne.n	80181e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80181ca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80181ce:	4552      	cmp	r2, sl
 80181d0:	d107      	bne.n	80181e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80181d2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80181d6:	455a      	cmp	r2, fp
 80181d8:	d103      	bne.n	80181e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80181da:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80181de:	454a      	cmp	r2, r9
 80181e0:	d06d      	beq.n	80182be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80181e2:	f1bb 0f00 	cmp.w	fp, #0
 80181e6:	dd65      	ble.n	80182b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80181e8:	f1b9 0f00 	cmp.w	r9, #0
 80181ec:	dd62      	ble.n	80182b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80181ee:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80181f2:	fa1f f08a 	uxth.w	r0, sl
 80181f6:	4552      	cmp	r2, sl
 80181f8:	9000      	str	r0, [sp, #0]
 80181fa:	da12      	bge.n	8018222 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80181fc:	9301      	str	r3, [sp, #4]
 80181fe:	9b00      	ldr	r3, [sp, #0]
 8018200:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018204:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018208:	1a9a      	subs	r2, r3, r2
 801820a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801820e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8018212:	f8ad 2016 	strh.w	r2, [sp, #22]
 8018216:	69ea      	ldr	r2, [r5, #28]
 8018218:	4631      	mov	r1, r6
 801821a:	4640      	mov	r0, r8
 801821c:	f7ff ff7a 	bl	8018114 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018220:	9b01      	ldr	r3, [sp, #4]
 8018222:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018226:	429a      	cmp	r2, r3
 8018228:	b29f      	uxth	r7, r3
 801822a:	da0d      	bge.n	8018248 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801822c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018230:	1aba      	subs	r2, r7, r2
 8018232:	f8ad a012 	strh.w	sl, [sp, #18]
 8018236:	f8ad 2014 	strh.w	r2, [sp, #20]
 801823a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801823e:	69ea      	ldr	r2, [r5, #28]
 8018240:	4631      	mov	r1, r6
 8018242:	4640      	mov	r0, r8
 8018244:	f7ff ff66 	bl	8018114 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018248:	8822      	ldrh	r2, [r4, #0]
 801824a:	88a3      	ldrh	r3, [r4, #4]
 801824c:	445f      	add	r7, fp
 801824e:	4413      	add	r3, r2
 8018250:	b29b      	uxth	r3, r3
 8018252:	b2bf      	uxth	r7, r7
 8018254:	b23a      	sxth	r2, r7
 8018256:	b219      	sxth	r1, r3
 8018258:	4291      	cmp	r1, r2
 801825a:	dd0d      	ble.n	8018278 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801825c:	1bdb      	subs	r3, r3, r7
 801825e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018262:	f8ad a012 	strh.w	sl, [sp, #18]
 8018266:	f8ad 3014 	strh.w	r3, [sp, #20]
 801826a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801826e:	69ea      	ldr	r2, [r5, #28]
 8018270:	4631      	mov	r1, r6
 8018272:	4640      	mov	r0, r8
 8018274:	f7ff ff4e 	bl	8018114 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018278:	88e2      	ldrh	r2, [r4, #6]
 801827a:	8863      	ldrh	r3, [r4, #2]
 801827c:	4413      	add	r3, r2
 801827e:	9a00      	ldr	r2, [sp, #0]
 8018280:	444a      	add	r2, r9
 8018282:	b29b      	uxth	r3, r3
 8018284:	fa1f f982 	uxth.w	r9, r2
 8018288:	fa0f f289 	sxth.w	r2, r9
 801828c:	b219      	sxth	r1, r3
 801828e:	428a      	cmp	r2, r1
 8018290:	da15      	bge.n	80182be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018292:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018296:	f9b4 0000 	ldrsh.w	r0, [r4]
 801829a:	f8ad 1014 	strh.w	r1, [sp, #20]
 801829e:	eba3 0309 	sub.w	r3, r3, r9
 80182a2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80182a6:	f8ad 2012 	strh.w	r2, [sp, #18]
 80182aa:	f8ad 3016 	strh.w	r3, [sp, #22]
 80182ae:	69ea      	ldr	r2, [r5, #28]
 80182b0:	4631      	mov	r1, r6
 80182b2:	e001      	b.n	80182b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80182b4:	69ea      	ldr	r2, [r5, #28]
 80182b6:	4621      	mov	r1, r4
 80182b8:	4640      	mov	r0, r8
 80182ba:	f7ff ff2b 	bl	8018114 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80182be:	4628      	mov	r0, r5
 80182c0:	f7ff fe94 	bl	8017fec <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80182c4:	6861      	ldr	r1, [r4, #4]
 80182c6:	4602      	mov	r2, r0
 80182c8:	6820      	ldr	r0, [r4, #0]
 80182ca:	4633      	mov	r3, r6
 80182cc:	c303      	stmia	r3!, {r0, r1}
 80182ce:	4611      	mov	r1, r2
 80182d0:	4630      	mov	r0, r6
 80182d2:	f7f7 f893 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 80182d6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80182da:	2b00      	cmp	r3, #0
 80182dc:	f77f af33 	ble.w	8018146 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80182e0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80182e4:	2b00      	cmp	r3, #0
 80182e6:	f77f af2e 	ble.w	8018146 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80182ea:	4628      	mov	r0, r5
 80182ec:	f7ff fe9a 	bl	8018024 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80182f0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80182f4:	1a18      	subs	r0, r3, r0
 80182f6:	f8ad 0010 	strh.w	r0, [sp, #16]
 80182fa:	4628      	mov	r0, r5
 80182fc:	f7ff fea6 	bl	801804c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018300:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018304:	1a18      	subs	r0, r3, r0
 8018306:	f8ad 0012 	strh.w	r0, [sp, #18]
 801830a:	682b      	ldr	r3, [r5, #0]
 801830c:	4631      	mov	r1, r6
 801830e:	689b      	ldr	r3, [r3, #8]
 8018310:	4628      	mov	r0, r5
 8018312:	4798      	blx	r3
 8018314:	e717      	b.n	8018146 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018316 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018316:	b570      	push	{r4, r5, r6, lr}
 8018318:	460c      	mov	r4, r1
 801831a:	b086      	sub	sp, #24
 801831c:	1d06      	adds	r6, r0, #4
 801831e:	2300      	movs	r3, #0
 8018320:	4631      	mov	r1, r6
 8018322:	4605      	mov	r5, r0
 8018324:	a802      	add	r0, sp, #8
 8018326:	9301      	str	r3, [sp, #4]
 8018328:	f7ff f8a6 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801832c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018330:	8822      	ldrh	r2, [r4, #0]
 8018332:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018336:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801833a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801833e:	1ad2      	subs	r2, r2, r3
 8018340:	8863      	ldrh	r3, [r4, #2]
 8018342:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018346:	1a5b      	subs	r3, r3, r1
 8018348:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801834c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8018350:	aa01      	add	r2, sp, #4
 8018352:	a904      	add	r1, sp, #16
 8018354:	4630      	mov	r0, r6
 8018356:	f8ad 3012 	strh.w	r3, [sp, #18]
 801835a:	f7f7 f927 	bl	800f5ac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801835e:	9a01      	ldr	r2, [sp, #4]
 8018360:	b11a      	cbz	r2, 801836a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8018362:	4621      	mov	r1, r4
 8018364:	4628      	mov	r0, r5
 8018366:	f7ff fed5 	bl	8018114 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801836a:	b006      	add	sp, #24
 801836c:	bd70      	pop	{r4, r5, r6, pc}

0801836e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801836e:	b530      	push	{r4, r5, lr}
 8018370:	4602      	mov	r2, r0
 8018372:	4604      	mov	r4, r0
 8018374:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8018378:	b085      	sub	sp, #20
 801837a:	460d      	mov	r5, r1
 801837c:	6851      	ldr	r1, [r2, #4]
 801837e:	466b      	mov	r3, sp
 8018380:	c303      	stmia	r3!, {r0, r1}
 8018382:	4629      	mov	r1, r5
 8018384:	4668      	mov	r0, sp
 8018386:	f7f7 f839 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 801838a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801838e:	b12b      	cbz	r3, 801839c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8018390:	4669      	mov	r1, sp
 8018392:	4620      	mov	r0, r4
 8018394:	f7ff ffbf 	bl	8018316 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8018398:	b005      	add	sp, #20
 801839a:	bd30      	pop	{r4, r5, pc}
 801839c:	3404      	adds	r4, #4
 801839e:	4621      	mov	r1, r4
 80183a0:	a802      	add	r0, sp, #8
 80183a2:	f7ff f869 	bl	8017478 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80183a6:	f8bd 3000 	ldrh.w	r3, [sp]
 80183aa:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80183ae:	1a9b      	subs	r3, r3, r2
 80183b0:	f8ad 3000 	strh.w	r3, [sp]
 80183b4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80183b8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80183bc:	4669      	mov	r1, sp
 80183be:	1a9b      	subs	r3, r3, r2
 80183c0:	4620      	mov	r0, r4
 80183c2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80183c6:	f7f7 f8b8 	bl	800f53a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80183ca:	e7e5      	b.n	8018398 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080183cc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80183cc:	680a      	ldr	r2, [r1, #0]
 80183ce:	460b      	mov	r3, r1
 80183d0:	6992      	ldr	r2, [r2, #24]
 80183d2:	1d01      	adds	r1, r0, #4
 80183d4:	4618      	mov	r0, r3
 80183d6:	4710      	bx	r2

080183d8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80183d8:	4298      	cmp	r0, r3
 80183da:	d200      	bcs.n	80183de <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80183dc:	b913      	cbnz	r3, 80183e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80183de:	440a      	add	r2, r1
 80183e0:	b210      	sxth	r0, r2
 80183e2:	4770      	bx	lr
 80183e4:	ee07 0a90 	vmov	s15, r0
 80183e8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80183ec:	ee07 3a90 	vmov	s15, r3
 80183f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80183f4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80183f8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80183fc:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018400:	ee07 2a90 	vmov	s15, r2
 8018404:	ee67 5a07 	vmul.f32	s11, s14, s14
 8018408:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801840c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018410:	ee07 1a90 	vmov	s15, r1
 8018414:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018418:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801841c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018420:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018424:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018428:	bfcc      	ite	gt
 801842a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801842e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018432:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018436:	ee17 3a90 	vmov	r3, s15
 801843a:	b218      	sxth	r0, r3
 801843c:	4770      	bx	lr

0801843e <_ZN8touchgfx12TextProviderC1Ev>:
 801843e:	b538      	push	{r3, r4, r5, lr}
 8018440:	2500      	movs	r5, #0
 8018442:	2302      	movs	r3, #2
 8018444:	4604      	mov	r4, r0
 8018446:	e9c0 5500 	strd	r5, r5, [r0]
 801844a:	7403      	strb	r3, [r0, #16]
 801844c:	6145      	str	r5, [r0, #20]
 801844e:	7605      	strb	r5, [r0, #24]
 8018450:	83c5      	strh	r5, [r0, #30]
 8018452:	8405      	strh	r5, [r0, #32]
 8018454:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8018456:	8705      	strh	r5, [r0, #56]	@ 0x38
 8018458:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 801845a:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 801845e:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8018462:	220e      	movs	r2, #14
 8018464:	4629      	mov	r1, r5
 8018466:	304c      	adds	r0, #76	@ 0x4c
 8018468:	f011 fe5f 	bl	802a12a <memset>
 801846c:	2301      	movs	r3, #1
 801846e:	4620      	mov	r0, r4
 8018470:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8018474:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8018478:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 801847c:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8018480:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8018484:	f7ee ff84 	bl	8007390 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8018488:	4620      	mov	r0, r4
 801848a:	bd38      	pop	{r3, r4, r5, pc}

0801848c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801848c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801848e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018492:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8018494:	fab0 f080 	clz	r0, r0
 8018498:	0940      	lsrs	r0, r0, #5
 801849a:	4770      	bx	lr

0801849c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801849c:	b530      	push	{r4, r5, lr}
 801849e:	2500      	movs	r5, #0
 80184a0:	2401      	movs	r4, #1
 80184a2:	6843      	ldr	r3, [r0, #4]
 80184a4:	b913      	cbnz	r3, 80184ac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80184a6:	6803      	ldr	r3, [r0, #0]
 80184a8:	b313      	cbz	r3, 80184f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80184aa:	6043      	str	r3, [r0, #4]
 80184ac:	7e03      	ldrb	r3, [r0, #24]
 80184ae:	b143      	cbz	r3, 80184c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80184b0:	6943      	ldr	r3, [r0, #20]
 80184b2:	b12b      	cbz	r3, 80184c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80184b4:	881a      	ldrh	r2, [r3, #0]
 80184b6:	b11a      	cbz	r2, 80184c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80184b8:	1c9a      	adds	r2, r3, #2
 80184ba:	6142      	str	r2, [r0, #20]
 80184bc:	8818      	ldrh	r0, [r3, #0]
 80184be:	bd30      	pop	{r4, r5, pc}
 80184c0:	7605      	strb	r5, [r0, #24]
 80184c2:	6843      	ldr	r3, [r0, #4]
 80184c4:	8819      	ldrh	r1, [r3, #0]
 80184c6:	b199      	cbz	r1, 80184f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80184c8:	1c9a      	adds	r2, r3, #2
 80184ca:	2902      	cmp	r1, #2
 80184cc:	6042      	str	r2, [r0, #4]
 80184ce:	d1f5      	bne.n	80184bc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80184d0:	7c03      	ldrb	r3, [r0, #16]
 80184d2:	2b01      	cmp	r3, #1
 80184d4:	d8e5      	bhi.n	80184a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80184d6:	1c5a      	adds	r2, r3, #1
 80184d8:	3302      	adds	r3, #2
 80184da:	7402      	strb	r2, [r0, #16]
 80184dc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80184e0:	6143      	str	r3, [r0, #20]
 80184e2:	2b00      	cmp	r3, #0
 80184e4:	d0dd      	beq.n	80184a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80184e6:	881b      	ldrh	r3, [r3, #0]
 80184e8:	2b00      	cmp	r3, #0
 80184ea:	d0da      	beq.n	80184a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80184ec:	7604      	strb	r4, [r0, #24]
 80184ee:	e7d8      	b.n	80184a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80184f0:	2000      	movs	r0, #0
 80184f2:	e7e4      	b.n	80184be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080184f4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80184f4:	b430      	push	{r4, r5}
 80184f6:	6001      	str	r1, [r0, #0]
 80184f8:	2100      	movs	r1, #0
 80184fa:	6041      	str	r1, [r0, #4]
 80184fc:	6815      	ldr	r5, [r2, #0]
 80184fe:	6085      	str	r5, [r0, #8]
 8018500:	6852      	ldr	r2, [r2, #4]
 8018502:	6443      	str	r3, [r0, #68]	@ 0x44
 8018504:	9b02      	ldr	r3, [sp, #8]
 8018506:	60c2      	str	r2, [r0, #12]
 8018508:	7401      	strb	r1, [r0, #16]
 801850a:	6141      	str	r1, [r0, #20]
 801850c:	7601      	strb	r1, [r0, #24]
 801850e:	8701      	strh	r1, [r0, #56]	@ 0x38
 8018510:	8401      	strh	r1, [r0, #32]
 8018512:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8018516:	6483      	str	r3, [r0, #72]	@ 0x48
 8018518:	bc30      	pop	{r4, r5}
 801851a:	f7ee bf39 	b.w	8007390 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801851e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801851e:	b408      	push	{r3}
 8018520:	b510      	push	{r4, lr}
 8018522:	b085      	sub	sp, #20
 8018524:	ac07      	add	r4, sp, #28
 8018526:	f854 3b04 	ldr.w	r3, [r4], #4
 801852a:	9300      	str	r3, [sp, #0]
 801852c:	4613      	mov	r3, r2
 801852e:	4622      	mov	r2, r4
 8018530:	9403      	str	r4, [sp, #12]
 8018532:	f7ff ffdf 	bl	80184f4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018536:	b005      	add	sp, #20
 8018538:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801853c:	b001      	add	sp, #4
 801853e:	4770      	bx	lr

08018540 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018540:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018542:	4605      	mov	r5, r0
 8018544:	4608      	mov	r0, r1
 8018546:	b1e9      	cbz	r1, 8018584 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8018548:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 801854c:	460b      	mov	r3, r1
 801854e:	f101 0708 	add.w	r7, r1, #8
 8018552:	4622      	mov	r2, r4
 8018554:	6818      	ldr	r0, [r3, #0]
 8018556:	6859      	ldr	r1, [r3, #4]
 8018558:	4626      	mov	r6, r4
 801855a:	c603      	stmia	r6!, {r0, r1}
 801855c:	3308      	adds	r3, #8
 801855e:	42bb      	cmp	r3, r7
 8018560:	4634      	mov	r4, r6
 8018562:	d1f7      	bne.n	8018554 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018564:	6818      	ldr	r0, [r3, #0]
 8018566:	6030      	str	r0, [r6, #0]
 8018568:	889b      	ldrh	r3, [r3, #4]
 801856a:	80b3      	strh	r3, [r6, #4]
 801856c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8018570:	015b      	lsls	r3, r3, #5
 8018572:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8018576:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 801857a:	430b      	orrs	r3, r1
 801857c:	425b      	negs	r3, r3
 801857e:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8018582:	4610      	mov	r0, r2
 8018584:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018586 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8018586:	b538      	push	{r3, r4, r5, lr}
 8018588:	460c      	mov	r4, r1
 801858a:	6811      	ldr	r1, [r2, #0]
 801858c:	4610      	mov	r0, r2
 801858e:	68cd      	ldr	r5, [r1, #12]
 8018590:	4619      	mov	r1, r3
 8018592:	47a8      	blx	r5
 8018594:	2800      	cmp	r0, #0
 8018596:	bf08      	it	eq
 8018598:	4620      	moveq	r0, r4
 801859a:	bd38      	pop	{r3, r4, r5, pc}

0801859c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801859c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80185a0:	468c      	mov	ip, r1
 80185a2:	4605      	mov	r5, r0
 80185a4:	4614      	mov	r4, r2
 80185a6:	b942      	cbnz	r2, 80185ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 80185a8:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 80185ac:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 80185b0:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 80185b4:	4620      	mov	r0, r4
 80185b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80185ba:	7b50      	ldrb	r0, [r2, #13]
 80185bc:	8893      	ldrh	r3, [r2, #4]
 80185be:	0106      	lsls	r6, r0, #4
 80185c0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 80185c4:	79e6      	ldrb	r6, [r4, #7]
 80185c6:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 80185ca:	4316      	orrs	r6, r2
 80185cc:	185a      	adds	r2, r3, r1
 80185ce:	b291      	uxth	r1, r2
 80185d0:	291d      	cmp	r1, #29
 80185d2:	b2b7      	uxth	r7, r6
 80185d4:	d87e      	bhi.n	80186d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 80185d6:	2201      	movs	r2, #1
 80185d8:	408a      	lsls	r2, r1
 80185da:	498a      	ldr	r1, [pc, #552]	@ (8018804 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 80185dc:	420a      	tst	r2, r1
 80185de:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80185e2:	d12d      	bne.n	8018640 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80185e4:	f412 7f60 	tst.w	r2, #896	@ 0x380
 80185e8:	d074      	beq.n	80186d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 80185ea:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80185ee:	4623      	mov	r3, r4
 80185f0:	f104 0e08 	add.w	lr, r4, #8
 80185f4:	4614      	mov	r4, r2
 80185f6:	6818      	ldr	r0, [r3, #0]
 80185f8:	6859      	ldr	r1, [r3, #4]
 80185fa:	4694      	mov	ip, r2
 80185fc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8018600:	3308      	adds	r3, #8
 8018602:	4573      	cmp	r3, lr
 8018604:	4662      	mov	r2, ip
 8018606:	d1f6      	bne.n	80185f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8018608:	6818      	ldr	r0, [r3, #0]
 801860a:	f8cc 0000 	str.w	r0, [ip]
 801860e:	889b      	ldrh	r3, [r3, #4]
 8018610:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018614:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8018618:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 801861c:	b2b3      	uxth	r3, r6
 801861e:	1aca      	subs	r2, r1, r3
 8018620:	b292      	uxth	r2, r2
 8018622:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8018626:	10d2      	asrs	r2, r2, #3
 8018628:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 801862c:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8018630:	4302      	orrs	r2, r0
 8018632:	1bcf      	subs	r7, r1, r7
 8018634:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8018638:	1afb      	subs	r3, r7, r3
 801863a:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 801863e:	e7b9      	b.n	80185b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8018640:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8018644:	4623      	mov	r3, r4
 8018646:	f104 0808 	add.w	r8, r4, #8
 801864a:	4614      	mov	r4, r2
 801864c:	6818      	ldr	r0, [r3, #0]
 801864e:	6859      	ldr	r1, [r3, #4]
 8018650:	4696      	mov	lr, r2
 8018652:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8018656:	3308      	adds	r3, #8
 8018658:	4543      	cmp	r3, r8
 801865a:	4672      	mov	r2, lr
 801865c:	d1f6      	bne.n	801864c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 801865e:	6818      	ldr	r0, [r3, #0]
 8018660:	f8ce 0000 	str.w	r0, [lr]
 8018664:	889b      	ldrh	r3, [r3, #4]
 8018666:	f8ae 3004 	strh.w	r3, [lr, #4]
 801866a:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 801866c:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8018670:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8018672:	f640 6333 	movw	r3, #3635	@ 0xe33
 8018676:	4299      	cmp	r1, r3
 8018678:	d111      	bne.n	801869e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801867a:	f8dc 3000 	ldr.w	r3, [ip]
 801867e:	4660      	mov	r0, ip
 8018680:	68db      	ldr	r3, [r3, #12]
 8018682:	4798      	blx	r3
 8018684:	7b41      	ldrb	r1, [r0, #13]
 8018686:	00cb      	lsls	r3, r1, #3
 8018688:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801868c:	7a03      	ldrb	r3, [r0, #8]
 801868e:	4313      	orrs	r3, r2
 8018690:	064a      	lsls	r2, r1, #25
 8018692:	bf44      	itt	mi
 8018694:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8018698:	b21b      	sxthmi	r3, r3
 801869a:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801869e:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 80186a2:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 80186a6:	443b      	add	r3, r7
 80186a8:	4433      	add	r3, r6
 80186aa:	b29b      	uxth	r3, r3
 80186ac:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80186b0:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 80186b4:	10db      	asrs	r3, r3, #3
 80186b6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80186ba:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80186be:	4313      	orrs	r3, r2
 80186c0:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 80186c4:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 80186c8:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 80186cc:	1a9b      	subs	r3, r3, r2
 80186ce:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 80186d2:	e76f      	b.n	80185b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80186d4:	f023 0204 	bic.w	r2, r3, #4
 80186d8:	f640 611b 	movw	r1, #3611	@ 0xe1b
 80186dc:	428a      	cmp	r2, r1
 80186de:	d003      	beq.n	80186e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 80186e0:	f640 621d 	movw	r2, #3613	@ 0xe1d
 80186e4:	4293      	cmp	r3, r2
 80186e6:	d137      	bne.n	8018758 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 80186e8:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 80186ec:	4622      	mov	r2, r4
 80186ee:	f104 0808 	add.w	r8, r4, #8
 80186f2:	4634      	mov	r4, r6
 80186f4:	6810      	ldr	r0, [r2, #0]
 80186f6:	6851      	ldr	r1, [r2, #4]
 80186f8:	46b6      	mov	lr, r6
 80186fa:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80186fe:	3208      	adds	r2, #8
 8018700:	4542      	cmp	r2, r8
 8018702:	4676      	mov	r6, lr
 8018704:	d1f6      	bne.n	80186f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8018706:	6810      	ldr	r0, [r2, #0]
 8018708:	f8ce 0000 	str.w	r0, [lr]
 801870c:	8892      	ldrh	r2, [r2, #4]
 801870e:	f8ae 2004 	strh.w	r2, [lr, #4]
 8018712:	3b01      	subs	r3, #1
 8018714:	b29b      	uxth	r3, r3
 8018716:	4662      	mov	r2, ip
 8018718:	4621      	mov	r1, r4
 801871a:	4628      	mov	r0, r5
 801871c:	f7ff ff33 	bl	8018586 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018720:	7b41      	ldrb	r1, [r0, #13]
 8018722:	00cb      	lsls	r3, r1, #3
 8018724:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8018728:	7a03      	ldrb	r3, [r0, #8]
 801872a:	0648      	lsls	r0, r1, #25
 801872c:	ea43 0302 	orr.w	r3, r3, r2
 8018730:	bf44      	itt	mi
 8018732:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8018736:	b21b      	sxthmi	r3, r3
 8018738:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801873c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8018740:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8018744:	005b      	lsls	r3, r3, #1
 8018746:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801874a:	4313      	orrs	r3, r2
 801874c:	115a      	asrs	r2, r3, #5
 801874e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8018752:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8018756:	e046      	b.n	80187e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8018758:	00c2      	lsls	r2, r0, #3
 801875a:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 801875e:	7a22      	ldrb	r2, [r4, #8]
 8018760:	430a      	orrs	r2, r1
 8018762:	0641      	lsls	r1, r0, #25
 8018764:	bf44      	itt	mi
 8018766:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 801876a:	b212      	sxthmi	r2, r2
 801876c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8018770:	f640 6109 	movw	r1, #3593	@ 0xe09
 8018774:	f023 0210 	bic.w	r2, r3, #16
 8018778:	428a      	cmp	r2, r1
 801877a:	d003      	beq.n	8018784 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 801877c:	f640 6213 	movw	r2, #3603	@ 0xe13
 8018780:	4293      	cmp	r3, r2
 8018782:	d13d      	bne.n	8018800 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8018784:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8018788:	f104 0808 	add.w	r8, r4, #8
 801878c:	4696      	mov	lr, r2
 801878e:	6820      	ldr	r0, [r4, #0]
 8018790:	6861      	ldr	r1, [r4, #4]
 8018792:	4616      	mov	r6, r2
 8018794:	c603      	stmia	r6!, {r0, r1}
 8018796:	3408      	adds	r4, #8
 8018798:	4544      	cmp	r4, r8
 801879a:	4632      	mov	r2, r6
 801879c:	d1f7      	bne.n	801878e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 801879e:	6820      	ldr	r0, [r4, #0]
 80187a0:	6030      	str	r0, [r6, #0]
 80187a2:	88a1      	ldrh	r1, [r4, #4]
 80187a4:	80b1      	strh	r1, [r6, #4]
 80187a6:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 80187aa:	0076      	lsls	r6, r6, #1
 80187ac:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 80187b0:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 80187b4:	4316      	orrs	r6, r2
 80187b6:	f640 6213 	movw	r2, #3603	@ 0xe13
 80187ba:	4293      	cmp	r3, r2
 80187bc:	bf1a      	itte	ne
 80187be:	f103 33ff 	addne.w	r3, r3, #4294967295
 80187c2:	b29b      	uxthne	r3, r3
 80187c4:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 80187c8:	4662      	mov	r2, ip
 80187ca:	4671      	mov	r1, lr
 80187cc:	4628      	mov	r0, r5
 80187ce:	4674      	mov	r4, lr
 80187d0:	f7ff fed9 	bl	8018586 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80187d4:	7b43      	ldrb	r3, [r0, #13]
 80187d6:	7a82      	ldrb	r2, [r0, #10]
 80187d8:	005b      	lsls	r3, r3, #1
 80187da:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80187de:	4313      	orrs	r3, r2
 80187e0:	1af6      	subs	r6, r6, r3
 80187e2:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 80187e6:	7b61      	ldrb	r1, [r4, #13]
 80187e8:	00cb      	lsls	r3, r1, #3
 80187ea:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80187ee:	7a23      	ldrb	r3, [r4, #8]
 80187f0:	4313      	orrs	r3, r2
 80187f2:	064a      	lsls	r2, r1, #25
 80187f4:	bf44      	itt	mi
 80187f6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80187fa:	b21b      	sxthmi	r3, r3
 80187fc:	1bdb      	subs	r3, r3, r7
 80187fe:	e71c      	b.n	801863a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8018800:	2300      	movs	r3, #0
 8018802:	e7a6      	b.n	8018752 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8018804:	3fc00079 	.word	0x3fc00079

08018808 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8018808:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801880c:	4604      	mov	r4, r0
 801880e:	b942      	cbnz	r2, 8018822 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018810:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8018814:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8018818:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 801881c:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8018820:	e047      	b.n	80188b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018822:	7b51      	ldrb	r1, [r2, #13]
 8018824:	8893      	ldrh	r3, [r2, #4]
 8018826:	010d      	lsls	r5, r1, #4
 8018828:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 801882c:	79d5      	ldrb	r5, [r2, #7]
 801882e:	4305      	orrs	r5, r0
 8018830:	2d04      	cmp	r5, #4
 8018832:	bfcc      	ite	gt
 8018834:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8018838:	f04f 0e01 	movle.w	lr, #1
 801883c:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8018840:	f200 80ab 	bhi.w	801899a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8018844:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8018848:	4283      	cmp	r3, r0
 801884a:	d216      	bcs.n	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801884c:	f240 605b 	movw	r0, #1627	@ 0x65b
 8018850:	4283      	cmp	r3, r0
 8018852:	d859      	bhi.n	8018908 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8018854:	f240 6057 	movw	r0, #1623	@ 0x657
 8018858:	4283      	cmp	r3, r0
 801885a:	d20e      	bcs.n	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801885c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8018860:	d24a      	bcs.n	80188f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8018862:	f240 604e 	movw	r0, #1614	@ 0x64e
 8018866:	4283      	cmp	r3, r0
 8018868:	d207      	bcs.n	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801886a:	f240 601a 	movw	r0, #1562	@ 0x61a
 801886e:	4283      	cmp	r3, r0
 8018870:	d02a      	beq.n	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018872:	d821      	bhi.n	80188b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8018874:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8018878:	d35b      	bcc.n	8018932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801887a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 801887e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8018882:	f040 80d0 	bne.w	8018a26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018886:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801888a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801888e:	f040 80ca 	bne.w	8018a26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018892:	00cb      	lsls	r3, r1, #3
 8018894:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8018898:	7a13      	ldrb	r3, [r2, #8]
 801889a:	0649      	lsls	r1, r1, #25
 801889c:	ea43 0300 	orr.w	r3, r3, r0
 80188a0:	bf44      	itt	mi
 80188a2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80188a6:	b21b      	sxthmi	r3, r3
 80188a8:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80188ac:	1b5d      	subs	r5, r3, r5
 80188ae:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80188b2:	4610      	mov	r0, r2
 80188b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80188b8:	f240 604b 	movw	r0, #1611	@ 0x64b
 80188bc:	4283      	cmp	r3, r0
 80188be:	d338      	bcc.n	8018932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80188c0:	f240 604c 	movw	r0, #1612	@ 0x64c
 80188c4:	4283      	cmp	r3, r0
 80188c6:	d9d8      	bls.n	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80188c8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 80188cc:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 80188d0:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80188d4:	f040 80f2 	bne.w	8018abc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80188d8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80188dc:	f040 80ee 	bne.w	8018abc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80188e0:	00cb      	lsls	r3, r1, #3
 80188e2:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80188e6:	7a13      	ldrb	r3, [r2, #8]
 80188e8:	064e      	lsls	r6, r1, #25
 80188ea:	ea43 0300 	orr.w	r3, r3, r0
 80188ee:	bf44      	itt	mi
 80188f0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80188f4:	b21b      	sxthmi	r3, r3
 80188f6:	e7d9      	b.n	80188ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80188f8:	f240 6054 	movw	r0, #1620	@ 0x654
 80188fc:	4283      	cmp	r3, r0
 80188fe:	d8e3      	bhi.n	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018900:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8018904:	d9e0      	bls.n	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018906:	e7b8      	b.n	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018908:	f240 6074 	movw	r0, #1652	@ 0x674
 801890c:	4283      	cmp	r3, r0
 801890e:	d0b4      	beq.n	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018910:	d82d      	bhi.n	801896e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8018912:	f240 605e 	movw	r0, #1630	@ 0x65e
 8018916:	4283      	cmp	r3, r0
 8018918:	d804      	bhi.n	8018924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801891a:	f240 605d 	movw	r0, #1629	@ 0x65d
 801891e:	4283      	cmp	r3, r0
 8018920:	d3d2      	bcc.n	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018922:	e7aa      	b.n	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018924:	f240 605f 	movw	r0, #1631	@ 0x65f
 8018928:	4283      	cmp	r3, r0
 801892a:	d0cd      	beq.n	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801892c:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8018930:	d0a3      	beq.n	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018932:	00cb      	lsls	r3, r1, #3
 8018934:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8018938:	7a13      	ldrb	r3, [r2, #8]
 801893a:	0649      	lsls	r1, r1, #25
 801893c:	ea43 0300 	orr.w	r3, r3, r0
 8018940:	bf44      	itt	mi
 8018942:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8018946:	b21b      	sxthmi	r3, r3
 8018948:	1b5d      	subs	r5, r3, r5
 801894a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801894e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8018952:	7b53      	ldrb	r3, [r2, #13]
 8018954:	015b      	lsls	r3, r3, #5
 8018956:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801895a:	7993      	ldrb	r3, [r2, #6]
 801895c:	430b      	orrs	r3, r1
 801895e:	005b      	lsls	r3, r3, #1
 8018960:	2105      	movs	r1, #5
 8018962:	fb93 f3f1 	sdiv	r3, r3, r1
 8018966:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801896a:	440b      	add	r3, r1
 801896c:	e756      	b.n	801881c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801896e:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8018972:	4283      	cmp	r3, r0
 8018974:	d809      	bhi.n	801898a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8018976:	f240 60df 	movw	r0, #1759	@ 0x6df
 801897a:	4283      	cmp	r3, r0
 801897c:	f4bf af7d 	bcs.w	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018980:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8018984:	2b05      	cmp	r3, #5
 8018986:	d8d4      	bhi.n	8018932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018988:	e777      	b.n	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801898a:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 801898e:	4283      	cmp	r3, r0
 8018990:	d09a      	beq.n	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018992:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8018996:	4283      	cmp	r3, r0
 8018998:	e7ca      	b.n	8018930 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801899a:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 801899e:	d22b      	bcs.n	80189f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80189a0:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 80189a4:	4283      	cmp	r3, r0
 80189a6:	d28f      	bcs.n	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80189a8:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 80189ac:	4283      	cmp	r3, r0
 80189ae:	d816      	bhi.n	80189de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80189b0:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 80189b4:	4283      	cmp	r3, r0
 80189b6:	f4bf af60 	bcs.w	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80189ba:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 80189be:	4283      	cmp	r3, r0
 80189c0:	d80a      	bhi.n	80189d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80189c2:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 80189c6:	4283      	cmp	r3, r0
 80189c8:	f4bf af57 	bcs.w	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80189cc:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 80189d0:	4283      	cmp	r3, r0
 80189d2:	f43f af79 	beq.w	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80189d6:	e7ac      	b.n	8018932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80189d8:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 80189dc:	e7f8      	b.n	80189d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80189de:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 80189e2:	4283      	cmp	r3, r0
 80189e4:	d802      	bhi.n	80189ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80189e6:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 80189ea:	e798      	b.n	801891e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80189ec:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 80189f0:	4283      	cmp	r3, r0
 80189f2:	f47f af42 	bne.w	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80189f6:	e767      	b.n	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80189f8:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 80189fc:	4283      	cmp	r3, r0
 80189fe:	f43f af63 	beq.w	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018a02:	d802      	bhi.n	8018a0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018a04:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8018a08:	e7f2      	b.n	80189f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8018a0a:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8018a0e:	4283      	cmp	r3, r0
 8018a10:	d805      	bhi.n	8018a1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018a12:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8018a16:	4283      	cmp	r3, r0
 8018a18:	f4ff af2f 	bcc.w	801887a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a1c:	e754      	b.n	80188c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018a1e:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8018a22:	4283      	cmp	r3, r0
 8018a24:	e7af      	b.n	8018986 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8018a26:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8018a2a:	4617      	mov	r7, r2
 8018a2c:	f102 0808 	add.w	r8, r2, #8
 8018a30:	4666      	mov	r6, ip
 8018a32:	6838      	ldr	r0, [r7, #0]
 8018a34:	6879      	ldr	r1, [r7, #4]
 8018a36:	46e6      	mov	lr, ip
 8018a38:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8018a3c:	3708      	adds	r7, #8
 8018a3e:	4547      	cmp	r7, r8
 8018a40:	46f4      	mov	ip, lr
 8018a42:	d1f6      	bne.n	8018a32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8018a44:	6838      	ldr	r0, [r7, #0]
 8018a46:	f8ce 0000 	str.w	r0, [lr]
 8018a4a:	88b9      	ldrh	r1, [r7, #4]
 8018a4c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018a50:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8018a54:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8018a58:	d009      	beq.n	8018a6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8018a5a:	7b51      	ldrb	r1, [r2, #13]
 8018a5c:	7992      	ldrb	r2, [r2, #6]
 8018a5e:	0149      	lsls	r1, r1, #5
 8018a60:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8018a64:	4311      	orrs	r1, r2
 8018a66:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018a6a:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8018a6e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8018a72:	b2ad      	uxth	r5, r5
 8018a74:	d00d      	beq.n	8018a92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8018a76:	442b      	add	r3, r5
 8018a78:	b29b      	uxth	r3, r3
 8018a7a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8018a7e:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8018a82:	10db      	asrs	r3, r3, #3
 8018a84:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8018a88:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8018a8c:	4313      	orrs	r3, r2
 8018a8e:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8018a92:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8018a96:	00cb      	lsls	r3, r1, #3
 8018a98:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8018a9c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8018aa0:	064f      	lsls	r7, r1, #25
 8018aa2:	ea43 0302 	orr.w	r3, r3, r2
 8018aa6:	bf44      	itt	mi
 8018aa8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8018aac:	b21b      	sxthmi	r3, r3
 8018aae:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8018ab2:	1b5b      	subs	r3, r3, r5
 8018ab4:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8018ab8:	4632      	mov	r2, r6
 8018aba:	e6fa      	b.n	80188b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018abc:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8018ac0:	4617      	mov	r7, r2
 8018ac2:	f102 0908 	add.w	r9, r2, #8
 8018ac6:	4666      	mov	r6, ip
 8018ac8:	6838      	ldr	r0, [r7, #0]
 8018aca:	6879      	ldr	r1, [r7, #4]
 8018acc:	46e0      	mov	r8, ip
 8018ace:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8018ad2:	3708      	adds	r7, #8
 8018ad4:	454f      	cmp	r7, r9
 8018ad6:	46c4      	mov	ip, r8
 8018ad8:	d1f6      	bne.n	8018ac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8018ada:	6838      	ldr	r0, [r7, #0]
 8018adc:	f8c8 0000 	str.w	r0, [r8]
 8018ae0:	88b9      	ldrh	r1, [r7, #4]
 8018ae2:	f8a8 1004 	strh.w	r1, [r8, #4]
 8018ae6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8018aea:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8018aee:	d009      	beq.n	8018b04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018af0:	7b51      	ldrb	r1, [r2, #13]
 8018af2:	7992      	ldrb	r2, [r2, #6]
 8018af4:	0149      	lsls	r1, r1, #5
 8018af6:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8018afa:	4311      	orrs	r1, r2
 8018afc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018b00:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8018b04:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8018b08:	d00e      	beq.n	8018b28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8018b0a:	eba3 030e 	sub.w	r3, r3, lr
 8018b0e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8018b12:	b29b      	uxth	r3, r3
 8018b14:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8018b18:	10db      	asrs	r3, r3, #3
 8018b1a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8018b1e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8018b22:	4313      	orrs	r3, r2
 8018b24:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8018b28:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8018b2c:	00cb      	lsls	r3, r1, #3
 8018b2e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8018b32:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8018b36:	0648      	lsls	r0, r1, #25
 8018b38:	ea43 0302 	orr.w	r3, r3, r2
 8018b3c:	bf44      	itt	mi
 8018b3e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8018b42:	b21b      	sxthmi	r3, r3
 8018b44:	1b5d      	subs	r5, r3, r5
 8018b46:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8018b4a:	e7b5      	b.n	8018ab8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08018b4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018b4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018b50:	461e      	mov	r6, r3
 8018b52:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8018b54:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018b58:	4604      	mov	r4, r0
 8018b5a:	4617      	mov	r7, r2
 8018b5c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8018b60:	f7ee fbd4 	bl	800730c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018b64:	4605      	mov	r5, r0
 8018b66:	b918      	cbnz	r0, 8018b70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8018b68:	6030      	str	r0, [r6, #0]
 8018b6a:	4628      	mov	r0, r5
 8018b6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018b70:	683b      	ldr	r3, [r7, #0]
 8018b72:	4601      	mov	r1, r0
 8018b74:	68db      	ldr	r3, [r3, #12]
 8018b76:	4638      	mov	r0, r7
 8018b78:	4798      	blx	r3
 8018b7a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8018b7e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8018b82:	4602      	mov	r2, r0
 8018b84:	6030      	str	r0, [r6, #0]
 8018b86:	d213      	bcs.n	8018bb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8018b88:	4643      	mov	r3, r8
 8018b8a:	4639      	mov	r1, r7
 8018b8c:	4620      	mov	r0, r4
 8018b8e:	f7ff fe3b 	bl	8018808 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018b92:	6030      	str	r0, [r6, #0]
 8018b94:	6833      	ldr	r3, [r6, #0]
 8018b96:	b143      	cbz	r3, 8018baa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8018b98:	7b5a      	ldrb	r2, [r3, #13]
 8018b9a:	7a9b      	ldrb	r3, [r3, #10]
 8018b9c:	0052      	lsls	r2, r2, #1
 8018b9e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8018ba2:	4313      	orrs	r3, r2
 8018ba4:	bf0c      	ite	eq
 8018ba6:	2301      	moveq	r3, #1
 8018ba8:	2300      	movne	r3, #0
 8018baa:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8018bae:	e7dc      	b.n	8018b6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018bb0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8018bb4:	b29b      	uxth	r3, r3
 8018bb6:	2b7f      	cmp	r3, #127	@ 0x7f
 8018bb8:	d804      	bhi.n	8018bc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8018bba:	4639      	mov	r1, r7
 8018bbc:	4620      	mov	r0, r4
 8018bbe:	f7ff fced 	bl	801859c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018bc2:	e7e6      	b.n	8018b92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018bc4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8018bc8:	2b00      	cmp	r3, #0
 8018bca:	d0e3      	beq.n	8018b94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018bcc:	f640 1302 	movw	r3, #2306	@ 0x902
 8018bd0:	429d      	cmp	r5, r3
 8018bd2:	d1df      	bne.n	8018b94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018bd4:	4601      	mov	r1, r0
 8018bd6:	4620      	mov	r0, r4
 8018bd8:	f7ff fcb2 	bl	8018540 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018bdc:	e7d9      	b.n	8018b92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018bde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018bde:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018be2:	461e      	mov	r6, r3
 8018be4:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8018be6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018bea:	4604      	mov	r4, r0
 8018bec:	4617      	mov	r7, r2
 8018bee:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8018bf2:	f7ee fb8b 	bl	800730c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018bf6:	4605      	mov	r5, r0
 8018bf8:	b918      	cbnz	r0, 8018c02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8018bfa:	6030      	str	r0, [r6, #0]
 8018bfc:	4628      	mov	r0, r5
 8018bfe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018c02:	683b      	ldr	r3, [r7, #0]
 8018c04:	4601      	mov	r1, r0
 8018c06:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8018c0a:	4638      	mov	r0, r7
 8018c0c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018c10:	47c8      	blx	r9
 8018c12:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8018c16:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8018c1a:	4602      	mov	r2, r0
 8018c1c:	6030      	str	r0, [r6, #0]
 8018c1e:	d213      	bcs.n	8018c48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018c20:	4643      	mov	r3, r8
 8018c22:	4639      	mov	r1, r7
 8018c24:	4620      	mov	r0, r4
 8018c26:	f7ff fdef 	bl	8018808 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018c2a:	6030      	str	r0, [r6, #0]
 8018c2c:	6833      	ldr	r3, [r6, #0]
 8018c2e:	b143      	cbz	r3, 8018c42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018c30:	7b5a      	ldrb	r2, [r3, #13]
 8018c32:	7a9b      	ldrb	r3, [r3, #10]
 8018c34:	0052      	lsls	r2, r2, #1
 8018c36:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8018c3a:	4313      	orrs	r3, r2
 8018c3c:	bf0c      	ite	eq
 8018c3e:	2301      	moveq	r3, #1
 8018c40:	2300      	movne	r3, #0
 8018c42:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8018c46:	e7d9      	b.n	8018bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8018c48:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8018c4c:	b29b      	uxth	r3, r3
 8018c4e:	2b7f      	cmp	r3, #127	@ 0x7f
 8018c50:	d804      	bhi.n	8018c5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8018c52:	4639      	mov	r1, r7
 8018c54:	4620      	mov	r0, r4
 8018c56:	f7ff fca1 	bl	801859c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018c5a:	e7e6      	b.n	8018c2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018c5c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8018c60:	2b00      	cmp	r3, #0
 8018c62:	d0e3      	beq.n	8018c2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018c64:	f640 1302 	movw	r3, #2306	@ 0x902
 8018c68:	429d      	cmp	r5, r3
 8018c6a:	d1df      	bne.n	8018c2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018c6c:	4601      	mov	r1, r0
 8018c6e:	4620      	mov	r0, r4
 8018c70:	f7ff fc66 	bl	8018540 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018c74:	e7d9      	b.n	8018c2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08018c76 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8018c76:	b510      	push	{r4, lr}
 8018c78:	4604      	mov	r4, r0
 8018c7a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8018c7e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8018c80:	b1f1      	cbz	r1, 8018cc0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018c82:	2b0a      	cmp	r3, #10
 8018c84:	d02f      	beq.n	8018ce6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018c86:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8018c88:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018c8c:	3901      	subs	r1, #1
 8018c8e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8018c90:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8018c94:	1c51      	adds	r1, r2, #1
 8018c96:	b289      	uxth	r1, r1
 8018c98:	2901      	cmp	r1, #1
 8018c9a:	bf84      	itt	hi
 8018c9c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018ca0:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8018ca2:	f103 0201 	add.w	r2, r3, #1
 8018ca6:	8722      	strh	r2, [r4, #56]	@ 0x38
 8018ca8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8018caa:	bf98      	it	ls
 8018cac:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8018cae:	4413      	add	r3, r2
 8018cb0:	b29b      	uxth	r3, r3
 8018cb2:	2b09      	cmp	r3, #9
 8018cb4:	bf88      	it	hi
 8018cb6:	3b0a      	subhi	r3, #10
 8018cb8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018cbc:	8458      	strh	r0, [r3, #34]	@ 0x22
 8018cbe:	e7dc      	b.n	8018c7a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018cc0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8018cc2:	2b0a      	cmp	r3, #10
 8018cc4:	d00f      	beq.n	8018ce6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018cc6:	4620      	mov	r0, r4
 8018cc8:	f7ff fbe8 	bl	801849c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018ccc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8018cce:	1c5a      	adds	r2, r3, #1
 8018cd0:	8722      	strh	r2, [r4, #56]	@ 0x38
 8018cd2:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8018cd4:	4413      	add	r3, r2
 8018cd6:	b29b      	uxth	r3, r3
 8018cd8:	2b09      	cmp	r3, #9
 8018cda:	bf88      	it	hi
 8018cdc:	3b0a      	subhi	r3, #10
 8018cde:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018ce2:	8458      	strh	r0, [r3, #34]	@ 0x22
 8018ce4:	e7ec      	b.n	8018cc0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018ce6:	bd10      	pop	{r4, pc}

08018ce8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018ce8:	b538      	push	{r3, r4, r5, lr}
 8018cea:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8018cec:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018cf0:	4604      	mov	r4, r0
 8018cf2:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8018cf4:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8018cf6:	3a01      	subs	r2, #1
 8018cf8:	8702      	strh	r2, [r0, #56]	@ 0x38
 8018cfa:	1c5a      	adds	r2, r3, #1
 8018cfc:	b292      	uxth	r2, r2
 8018cfe:	2a09      	cmp	r2, #9
 8018d00:	bf86      	itte	hi
 8018d02:	3b09      	subhi	r3, #9
 8018d04:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8018d06:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8018d08:	f7ff ffb5 	bl	8018c76 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018d0c:	8c23      	ldrh	r3, [r4, #32]
 8018d0e:	2b01      	cmp	r3, #1
 8018d10:	bf9c      	itt	ls
 8018d12:	3301      	addls	r3, #1
 8018d14:	8423      	strhls	r3, [r4, #32]
 8018d16:	8be3      	ldrh	r3, [r4, #30]
 8018d18:	b90b      	cbnz	r3, 8018d1e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8018d1a:	2302      	movs	r3, #2
 8018d1c:	83e3      	strh	r3, [r4, #30]
 8018d1e:	8be3      	ldrh	r3, [r4, #30]
 8018d20:	3b01      	subs	r3, #1
 8018d22:	b29b      	uxth	r3, r3
 8018d24:	83e3      	strh	r3, [r4, #30]
 8018d26:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018d2a:	4628      	mov	r0, r5
 8018d2c:	8365      	strh	r5, [r4, #26]
 8018d2e:	bd38      	pop	{r3, r4, r5, pc}

08018d30 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018d30:	428a      	cmp	r2, r1
 8018d32:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018d36:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8018d38:	d931      	bls.n	8018d9e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8018d3a:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8018d3c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8018d40:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8018d44:	19ee      	adds	r6, r5, r7
 8018d46:	1a54      	subs	r4, r2, r1
 8018d48:	3e01      	subs	r6, #1
 8018d4a:	fa1f fe84 	uxth.w	lr, r4
 8018d4e:	b2b4      	uxth	r4, r6
 8018d50:	eba4 090e 	sub.w	r9, r4, lr
 8018d54:	fa1f f989 	uxth.w	r9, r9
 8018d58:	2c09      	cmp	r4, #9
 8018d5a:	4626      	mov	r6, r4
 8018d5c:	bf88      	it	hi
 8018d5e:	f1a4 060a 	subhi.w	r6, r4, #10
 8018d62:	f1bc 0f00 	cmp.w	ip, #0
 8018d66:	bf08      	it	eq
 8018d68:	f04f 0c02 	moveq.w	ip, #2
 8018d6c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018d70:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018d74:	fa1f fc8c 	uxth.w	ip, ip
 8018d78:	3c01      	subs	r4, #1
 8018d7a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8018d7e:	b2a4      	uxth	r4, r4
 8018d80:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018d84:	454c      	cmp	r4, r9
 8018d86:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8018d8a:	d1e5      	bne.n	8018d58 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018d8c:	eba5 050e 	sub.w	r5, r5, lr
 8018d90:	eb0e 0408 	add.w	r4, lr, r8
 8018d94:	8705      	strh	r5, [r0, #56]	@ 0x38
 8018d96:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8018d9a:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8018d9e:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8018da0:	1a64      	subs	r4, r4, r1
 8018da2:	4439      	add	r1, r7
 8018da4:	b289      	uxth	r1, r1
 8018da6:	2909      	cmp	r1, #9
 8018da8:	bf88      	it	hi
 8018daa:	390a      	subhi	r1, #10
 8018dac:	8704      	strh	r4, [r0, #56]	@ 0x38
 8018dae:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8018db0:	250a      	movs	r5, #10
 8018db2:	b18a      	cbz	r2, 8018dd8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018db4:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8018db6:	3a01      	subs	r2, #1
 8018db8:	b292      	uxth	r2, r2
 8018dba:	3101      	adds	r1, #1
 8018dbc:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018dc0:	8701      	strh	r1, [r0, #56]	@ 0x38
 8018dc2:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8018dc4:	b901      	cbnz	r1, 8018dc8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8018dc6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8018dc8:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8018dca:	3901      	subs	r1, #1
 8018dcc:	b289      	uxth	r1, r1
 8018dce:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8018dd0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018dd4:	844c      	strh	r4, [r1, #34]	@ 0x22
 8018dd6:	e7ec      	b.n	8018db2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8018dd8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018ddc:	f7ff bf4b 	b.w	8018c76 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018de0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018de0:	b570      	push	{r4, r5, r6, lr}
 8018de2:	2500      	movs	r5, #0
 8018de4:	4295      	cmp	r5, r2
 8018de6:	d011      	beq.n	8018e0c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018de8:	8bc4      	ldrh	r4, [r0, #30]
 8018dea:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018dee:	4414      	add	r4, r2
 8018df0:	3c01      	subs	r4, #1
 8018df2:	1b64      	subs	r4, r4, r5
 8018df4:	b2a4      	uxth	r4, r4
 8018df6:	2c01      	cmp	r4, #1
 8018df8:	bf88      	it	hi
 8018dfa:	3c02      	subhi	r4, #2
 8018dfc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018e00:	8b64      	ldrh	r4, [r4, #26]
 8018e02:	42b4      	cmp	r4, r6
 8018e04:	d117      	bne.n	8018e36 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8018e06:	3501      	adds	r5, #1
 8018e08:	b2ad      	uxth	r5, r5
 8018e0a:	e7eb      	b.n	8018de4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018e0c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018e10:	2400      	movs	r4, #0
 8018e12:	4413      	add	r3, r2
 8018e14:	b2a2      	uxth	r2, r4
 8018e16:	429a      	cmp	r2, r3
 8018e18:	da0f      	bge.n	8018e3a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8018e1a:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8018e1c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018e20:	4432      	add	r2, r6
 8018e22:	b292      	uxth	r2, r2
 8018e24:	2a09      	cmp	r2, #9
 8018e26:	bf88      	it	hi
 8018e28:	3a0a      	subhi	r2, #10
 8018e2a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018e2e:	3401      	adds	r4, #1
 8018e30:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8018e32:	42aa      	cmp	r2, r5
 8018e34:	d0ee      	beq.n	8018e14 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8018e36:	2000      	movs	r0, #0
 8018e38:	bd70      	pop	{r4, r5, r6, pc}
 8018e3a:	2001      	movs	r0, #1
 8018e3c:	e7fc      	b.n	8018e38 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018e3e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018e3e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e42:	4605      	mov	r5, r0
 8018e44:	4616      	mov	r6, r2
 8018e46:	1c8c      	adds	r4, r1, #2
 8018e48:	8809      	ldrh	r1, [r1, #0]
 8018e4a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018e4e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018e52:	42b3      	cmp	r3, r6
 8018e54:	d124      	bne.n	8018ea0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8018e56:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8018e5a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018e5e:	f001 070f 	and.w	r7, r1, #15
 8018e62:	f8cd 8000 	str.w	r8, [sp]
 8018e66:	464b      	mov	r3, r9
 8018e68:	4652      	mov	r2, sl
 8018e6a:	4621      	mov	r1, r4
 8018e6c:	4628      	mov	r0, r5
 8018e6e:	f7ff ffb7 	bl	8018de0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018e72:	4683      	mov	fp, r0
 8018e74:	b168      	cbz	r0, 8018e92 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8018e76:	eb0a 0109 	add.w	r1, sl, r9
 8018e7a:	4441      	add	r1, r8
 8018e7c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018e80:	463a      	mov	r2, r7
 8018e82:	4649      	mov	r1, r9
 8018e84:	4628      	mov	r0, r5
 8018e86:	f7ff ff53 	bl	8018d30 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8018e8a:	4658      	mov	r0, fp
 8018e8c:	b003      	add	sp, #12
 8018e8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e92:	eb07 010a 	add.w	r1, r7, sl
 8018e96:	4449      	add	r1, r9
 8018e98:	4441      	add	r1, r8
 8018e9a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018e9e:	e7d2      	b.n	8018e46 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018ea0:	f04f 0b00 	mov.w	fp, #0
 8018ea4:	e7f1      	b.n	8018e8a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08018ea6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8018ea6:	b570      	push	{r4, r5, r6, lr}
 8018ea8:	8810      	ldrh	r0, [r2, #0]
 8018eaa:	4298      	cmp	r0, r3
 8018eac:	d817      	bhi.n	8018ede <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018eae:	1e48      	subs	r0, r1, #1
 8018eb0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018eb4:	4298      	cmp	r0, r3
 8018eb6:	d312      	bcc.n	8018ede <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018eb8:	2400      	movs	r4, #0
 8018eba:	428c      	cmp	r4, r1
 8018ebc:	d20f      	bcs.n	8018ede <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018ebe:	1860      	adds	r0, r4, r1
 8018ec0:	1040      	asrs	r0, r0, #1
 8018ec2:	0085      	lsls	r5, r0, #2
 8018ec4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018ec8:	42b3      	cmp	r3, r6
 8018eca:	d902      	bls.n	8018ed2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018ecc:	3001      	adds	r0, #1
 8018ece:	b284      	uxth	r4, r0
 8018ed0:	e7f3      	b.n	8018eba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018ed2:	d201      	bcs.n	8018ed8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018ed4:	b281      	uxth	r1, r0
 8018ed6:	e7f0      	b.n	8018eba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018ed8:	442a      	add	r2, r5
 8018eda:	8850      	ldrh	r0, [r2, #2]
 8018edc:	bd70      	pop	{r4, r5, r6, pc}
 8018ede:	2000      	movs	r0, #0
 8018ee0:	e7fc      	b.n	8018edc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018ee2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018ee2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018ee6:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8018ee8:	886f      	ldrh	r7, [r5, #2]
 8018eea:	4604      	mov	r4, r0
 8018eec:	087f      	lsrs	r7, r7, #1
 8018eee:	260b      	movs	r6, #11
 8018ef0:	3e01      	subs	r6, #1
 8018ef2:	d013      	beq.n	8018f1c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018ef4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8018ef6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018efa:	462a      	mov	r2, r5
 8018efc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8018f00:	4639      	mov	r1, r7
 8018f02:	4643      	mov	r3, r8
 8018f04:	4620      	mov	r0, r4
 8018f06:	f7ff ffce 	bl	8018ea6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018f0a:	b138      	cbz	r0, 8018f1c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018f0c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018f10:	4642      	mov	r2, r8
 8018f12:	4620      	mov	r0, r4
 8018f14:	f7ff ff93 	bl	8018e3e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018f18:	2800      	cmp	r0, #0
 8018f1a:	d1e9      	bne.n	8018ef0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018f1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018f20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018f20:	b570      	push	{r4, r5, r6, lr}
 8018f22:	694a      	ldr	r2, [r1, #20]
 8018f24:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8018f26:	684b      	ldr	r3, [r1, #4]
 8018f28:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8018f2a:	1b54      	subs	r4, r2, r5
 8018f2c:	f000 8106 	beq.w	801913c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018f30:	1b9b      	subs	r3, r3, r6
 8018f32:	d003      	beq.n	8018f3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018f34:	4363      	muls	r3, r4
 8018f36:	2210      	movs	r2, #16
 8018f38:	fb93 f3f2 	sdiv	r3, r3, r2
 8018f3c:	680c      	ldr	r4, [r1, #0]
 8018f3e:	698a      	ldr	r2, [r1, #24]
 8018f40:	1b65      	subs	r5, r4, r5
 8018f42:	f000 80fd 	beq.w	8019140 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8018f46:	1b92      	subs	r2, r2, r6
 8018f48:	d003      	beq.n	8018f52 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018f4a:	436a      	muls	r2, r5
 8018f4c:	2410      	movs	r4, #16
 8018f4e:	fb92 f2f4 	sdiv	r2, r2, r4
 8018f52:	1a9b      	subs	r3, r3, r2
 8018f54:	ee07 3a90 	vmov	s15, r3
 8018f58:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 801917c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018f5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018f60:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018f64:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018f68:	460a      	mov	r2, r1
 8018f6a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018f6e:	4603      	mov	r3, r0
 8018f70:	f100 040c 	add.w	r4, r0, #12
 8018f74:	eeb1 6a43 	vneg.f32	s12, s6
 8018f78:	edd2 7a02 	vldr	s15, [r2, #8]
 8018f7c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018f80:	3214      	adds	r2, #20
 8018f82:	ece3 6a01 	vstmia	r3!, {s13}
 8018f86:	ed52 7a02 	vldr	s15, [r2, #-8]
 8018f8a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018f8e:	429c      	cmp	r4, r3
 8018f90:	edc3 7a02 	vstr	s15, [r3, #8]
 8018f94:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018f98:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018f9c:	edc3 7a05 	vstr	s15, [r3, #20]
 8018fa0:	d1ea      	bne.n	8018f78 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018fa2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8018fa4:	698b      	ldr	r3, [r1, #24]
 8018fa6:	edd0 4a02 	vldr	s9, [r0, #8]
 8018faa:	edd0 3a00 	vldr	s7, [r0]
 8018fae:	edd0 6a01 	vldr	s13, [r0, #4]
 8018fb2:	ed90 5a05 	vldr	s10, [r0, #20]
 8018fb6:	ed90 2a03 	vldr	s4, [r0, #12]
 8018fba:	edd0 5a04 	vldr	s11, [r0, #16]
 8018fbe:	ed90 1a07 	vldr	s2, [r0, #28]
 8018fc2:	edd0 2a06 	vldr	s5, [r0, #24]
 8018fc6:	1a9b      	subs	r3, r3, r2
 8018fc8:	ee07 3a90 	vmov	s15, r3
 8018fcc:	684b      	ldr	r3, [r1, #4]
 8018fce:	1a9b      	subs	r3, r3, r2
 8018fd0:	ee07 3a10 	vmov	s14, r3
 8018fd4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018fd8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018fdc:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018fe0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018fe4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018fe8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018fec:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018ff0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018ff4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018ff8:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018ffc:	ee67 7a83 	vmul.f32	s15, s15, s6
 8019000:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8019004:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8019006:	694a      	ldr	r2, [r1, #20]
 8019008:	1b13      	subs	r3, r2, r4
 801900a:	ee07 3a10 	vmov	s14, r3
 801900e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019012:	680b      	ldr	r3, [r1, #0]
 8019014:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019018:	1b1b      	subs	r3, r3, r4
 801901a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801901e:	ee07 3a10 	vmov	s14, r3
 8019022:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019026:	ee27 7a04 	vmul.f32	s14, s14, s8
 801902a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801902e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8019032:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8019036:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8019038:	698b      	ldr	r3, [r1, #24]
 801903a:	1a9b      	subs	r3, r3, r2
 801903c:	ee06 3a90 	vmov	s13, r3
 8019040:	684b      	ldr	r3, [r1, #4]
 8019042:	1a9b      	subs	r3, r3, r2
 8019044:	ee07 3a10 	vmov	s14, r3
 8019048:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801904c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019050:	ee66 6a84 	vmul.f32	s13, s13, s8
 8019054:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019058:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801905c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8019060:	ee66 6a83 	vmul.f32	s13, s13, s6
 8019064:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8019068:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801906a:	694a      	ldr	r2, [r1, #20]
 801906c:	1b13      	subs	r3, r2, r4
 801906e:	ee07 3a10 	vmov	s14, r3
 8019072:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019076:	680b      	ldr	r3, [r1, #0]
 8019078:	ee27 7a04 	vmul.f32	s14, s14, s8
 801907c:	1b1b      	subs	r3, r3, r4
 801907e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8019082:	ee07 3a10 	vmov	s14, r3
 8019086:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801908a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801908e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8019092:	edd0 5a08 	vldr	s11, [r0, #32]
 8019096:	ee25 5a06 	vmul.f32	s10, s10, s12
 801909a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801909e:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 80190a2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80190a4:	698b      	ldr	r3, [r1, #24]
 80190a6:	1a9b      	subs	r3, r3, r2
 80190a8:	ee07 3a10 	vmov	s14, r3
 80190ac:	684b      	ldr	r3, [r1, #4]
 80190ae:	1a9b      	subs	r3, r3, r2
 80190b0:	ee01 3a90 	vmov	s3, r3
 80190b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80190b8:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80190bc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80190c0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80190c4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80190c8:	ee61 1a84 	vmul.f32	s3, s3, s8
 80190cc:	eea1 7a21 	vfma.f32	s14, s2, s3
 80190d0:	ee27 7a03 	vmul.f32	s14, s14, s6
 80190d4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80190d8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80190da:	694a      	ldr	r2, [r1, #20]
 80190dc:	1b13      	subs	r3, r2, r4
 80190de:	ee03 3a10 	vmov	s6, r3
 80190e2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80190e6:	680b      	ldr	r3, [r1, #0]
 80190e8:	ee23 3a04 	vmul.f32	s6, s6, s8
 80190ec:	1b1b      	subs	r3, r3, r4
 80190ee:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80190f2:	ee03 3a10 	vmov	s6, r3
 80190f6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80190fa:	ee23 4a04 	vmul.f32	s8, s6, s8
 80190fe:	eee1 5a04 	vfma.f32	s11, s2, s8
 8019102:	ee25 6a86 	vmul.f32	s12, s11, s12
 8019106:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801910a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 801910e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8019112:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8019116:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801911a:	dd13      	ble.n	8019144 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801911c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8019120:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8019124:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8019126:	eee3 7a87 	vfma.f32	s15, s7, s14
 801912a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801912e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019132:	dd15      	ble.n	8019160 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8019134:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8019138:	6403      	str	r3, [r0, #64]	@ 0x40
 801913a:	bd70      	pop	{r4, r5, r6, pc}
 801913c:	4623      	mov	r3, r4
 801913e:	e6fd      	b.n	8018f3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019140:	462a      	mov	r2, r5
 8019142:	e706      	b.n	8018f52 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019144:	d502      	bpl.n	801914c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8019146:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801914a:	e7e9      	b.n	8019120 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801914c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8019150:	eea3 2a85 	vfma.f32	s4, s7, s10
 8019154:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8019158:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801915c:	dade      	bge.n	801911c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801915e:	e7f2      	b.n	8019146 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8019160:	d502      	bpl.n	8019168 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8019162:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8019166:	e7e7      	b.n	8019138 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8019168:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801916c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8019170:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8019174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019178:	dadc      	bge.n	8019134 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801917a:	e7f2      	b.n	8019162 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801917c:	3d800000 	.word	0x3d800000

08019180 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8019180:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019184:	2714      	movs	r7, #20
 8019186:	435f      	muls	r7, r3
 8019188:	eb02 0c07 	add.w	ip, r2, r7
 801918c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8019190:	f115 0e0f 	adds.w	lr, r5, #15
 8019194:	f100 80a2 	bmi.w	80192dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8019198:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801919c:	9c08      	ldr	r4, [sp, #32]
 801919e:	f8c0 e014 	str.w	lr, [r0, #20]
 80191a2:	2614      	movs	r6, #20
 80191a4:	4366      	muls	r6, r4
 80191a6:	eb02 0806 	add.w	r8, r2, r6
 80191aa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80191ae:	f115 040f 	adds.w	r4, r5, #15
 80191b2:	f100 809f 	bmi.w	80192f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80191b6:	1124      	asrs	r4, r4, #4
 80191b8:	eba4 040e 	sub.w	r4, r4, lr
 80191bc:	6184      	str	r4, [r0, #24]
 80191be:	2c00      	cmp	r4, #0
 80191c0:	f000 808a 	beq.w	80192d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80191c4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80191c8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80191cc:	5995      	ldr	r5, [r2, r6]
 80191ce:	eba4 0809 	sub.w	r8, r4, r9
 80191d2:	59d4      	ldr	r4, [r2, r7]
 80191d4:	eba5 0a04 	sub.w	sl, r5, r4
 80191d8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80191dc:	fb0e fe05 	mul.w	lr, lr, r5
 80191e0:	fb0a ee19 	mls	lr, sl, r9, lr
 80191e4:	fb08 e404 	mla	r4, r8, r4, lr
 80191e8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80191ec:	3c01      	subs	r4, #1
 80191ee:	19a4      	adds	r4, r4, r6
 80191f0:	f100 808c 	bmi.w	801930c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80191f4:	fb94 fef6 	sdiv	lr, r4, r6
 80191f8:	f8c0 e000 	str.w	lr, [r0]
 80191fc:	fb06 441e 	mls	r4, r6, lr, r4
 8019200:	6104      	str	r4, [r0, #16]
 8019202:	2d00      	cmp	r5, #0
 8019204:	f2c0 8095 	blt.w	8019332 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8019208:	fb95 f4f6 	sdiv	r4, r5, r6
 801920c:	6044      	str	r4, [r0, #4]
 801920e:	fb06 5514 	mls	r5, r6, r4, r5
 8019212:	6085      	str	r5, [r0, #8]
 8019214:	60c6      	str	r6, [r0, #12]
 8019216:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801921a:	6945      	ldr	r5, [r0, #20]
 801921c:	59d2      	ldr	r2, [r2, r7]
 801921e:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8019354 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8019222:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8019226:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801922a:	ee07 4a10 	vmov	s14, r4
 801922e:	6804      	ldr	r4, [r0, #0]
 8019230:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8019234:	ee07 2a90 	vmov	s15, r2
 8019238:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801923c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019240:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019244:	ee27 7a26 	vmul.f32	s14, s14, s13
 8019248:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801924c:	edd3 6a00 	vldr	s13, [r3]
 8019250:	eee6 6a07 	vfma.f32	s13, s12, s14
 8019254:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8019258:	eee6 6a27 	vfma.f32	s13, s12, s15
 801925c:	edc0 6a07 	vstr	s13, [r0, #28]
 8019260:	edd0 6a01 	vldr	s13, [r0, #4]
 8019264:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8019268:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801926c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019270:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019274:	ed80 6a08 	vstr	s12, [r0, #32]
 8019278:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801927a:	6242      	str	r2, [r0, #36]	@ 0x24
 801927c:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8019280:	ed93 6a03 	vldr	s12, [r3, #12]
 8019284:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019288:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801928c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019290:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8019294:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8019298:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 801929c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80192a0:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 80192a4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80192a6:	6302      	str	r2, [r0, #48]	@ 0x30
 80192a8:	ed93 6a06 	vldr	s12, [r3, #24]
 80192ac:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 80192b0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80192b4:	eeb0 7a46 	vmov.f32	s14, s12
 80192b8:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 80192bc:	eea6 7a27 	vfma.f32	s14, s12, s15
 80192c0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80192c4:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 80192c8:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 80192cc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80192d0:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 80192d4:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80192d6:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80192d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80192dc:	f1c5 0501 	rsb	r5, r5, #1
 80192e0:	f015 050f 	ands.w	r5, r5, #15
 80192e4:	bf18      	it	ne
 80192e6:	2501      	movne	r5, #1
 80192e8:	2410      	movs	r4, #16
 80192ea:	fb9e fef4 	sdiv	lr, lr, r4
 80192ee:	ebae 0e05 	sub.w	lr, lr, r5
 80192f2:	e753      	b.n	801919c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80192f4:	f1c5 0501 	rsb	r5, r5, #1
 80192f8:	f015 050f 	ands.w	r5, r5, #15
 80192fc:	bf18      	it	ne
 80192fe:	2501      	movne	r5, #1
 8019300:	f04f 0910 	mov.w	r9, #16
 8019304:	fb94 f4f9 	sdiv	r4, r4, r9
 8019308:	1b64      	subs	r4, r4, r5
 801930a:	e755      	b.n	80191b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801930c:	4264      	negs	r4, r4
 801930e:	fb94 fef6 	sdiv	lr, r4, r6
 8019312:	f1ce 0800 	rsb	r8, lr, #0
 8019316:	fb06 441e 	mls	r4, r6, lr, r4
 801931a:	f8c0 8000 	str.w	r8, [r0]
 801931e:	6104      	str	r4, [r0, #16]
 8019320:	2c00      	cmp	r4, #0
 8019322:	f43f af6e 	beq.w	8019202 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8019326:	ea6f 0e0e 	mvn.w	lr, lr
 801932a:	f8c0 e000 	str.w	lr, [r0]
 801932e:	1b34      	subs	r4, r6, r4
 8019330:	e766      	b.n	8019200 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8019332:	426d      	negs	r5, r5
 8019334:	fb95 f4f6 	sdiv	r4, r5, r6
 8019338:	f1c4 0e00 	rsb	lr, r4, #0
 801933c:	fb06 5514 	mls	r5, r6, r4, r5
 8019340:	f8c0 e004 	str.w	lr, [r0, #4]
 8019344:	6085      	str	r5, [r0, #8]
 8019346:	2d00      	cmp	r5, #0
 8019348:	f43f af64 	beq.w	8019214 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801934c:	43e4      	mvns	r4, r4
 801934e:	6044      	str	r4, [r0, #4]
 8019350:	1b75      	subs	r5, r6, r5
 8019352:	e75e      	b.n	8019212 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8019354:	3d800000 	.word	0x3d800000

08019358 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019358:	4602      	mov	r2, r0
 801935a:	b148      	cbz	r0, 8019370 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801935c:	2300      	movs	r3, #0
 801935e:	b298      	uxth	r0, r3
 8019360:	3301      	adds	r3, #1
 8019362:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019366:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801936a:	2900      	cmp	r1, #0
 801936c:	d1f7      	bne.n	801935e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801936e:	4770      	bx	lr
 8019370:	4770      	bx	lr

08019372 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019372:	b530      	push	{r4, r5, lr}
 8019374:	4604      	mov	r4, r0
 8019376:	b159      	cbz	r1, 8019390 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019378:	b148      	cbz	r0, 801938e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801937a:	2300      	movs	r3, #0
 801937c:	b298      	uxth	r0, r3
 801937e:	4282      	cmp	r2, r0
 8019380:	d905      	bls.n	801938e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019382:	5ccd      	ldrb	r5, [r1, r3]
 8019384:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019388:	3301      	adds	r3, #1
 801938a:	2d00      	cmp	r5, #0
 801938c:	d1f6      	bne.n	801937c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801938e:	bd30      	pop	{r4, r5, pc}
 8019390:	4608      	mov	r0, r1
 8019392:	e7fc      	b.n	801938e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019394 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8019394:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019396:	b08b      	sub	sp, #44	@ 0x2c
 8019398:	468c      	mov	ip, r1
 801939a:	2100      	movs	r1, #0
 801939c:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 80193a0:	4604      	mov	r4, r0
 80193a2:	261f      	movs	r6, #31
 80193a4:	af01      	add	r7, sp, #4
 80193a6:	fb94 fef3 	sdiv	lr, r4, r3
 80193aa:	fb03 441e 	mls	r4, r3, lr, r4
 80193ae:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80193b2:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80193b6:	b2ec      	uxtb	r4, r5
 80193b8:	2d09      	cmp	r5, #9
 80193ba:	bfd4      	ite	le
 80193bc:	3430      	addle	r4, #48	@ 0x30
 80193be:	3457      	addgt	r4, #87	@ 0x57
 80193c0:	b2e4      	uxtb	r4, r4
 80193c2:	55bc      	strb	r4, [r7, r6]
 80193c4:	4674      	mov	r4, lr
 80193c6:	1e71      	subs	r1, r6, #1
 80193c8:	b974      	cbnz	r4, 80193e8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80193ca:	2800      	cmp	r0, #0
 80193cc:	da05      	bge.n	80193da <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80193ce:	ab0a      	add	r3, sp, #40	@ 0x28
 80193d0:	4419      	add	r1, r3
 80193d2:	232d      	movs	r3, #45	@ 0x2d
 80193d4:	f801 3c24 	strb.w	r3, [r1, #-36]
 80193d8:	1eb1      	subs	r1, r6, #2
 80193da:	3101      	adds	r1, #1
 80193dc:	4439      	add	r1, r7
 80193de:	4660      	mov	r0, ip
 80193e0:	f7ff ffc7 	bl	8019372 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80193e4:	b00b      	add	sp, #44	@ 0x2c
 80193e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80193e8:	460e      	mov	r6, r1
 80193ea:	e7dc      	b.n	80193a6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080193ec <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80193ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80193ee:	b08b      	sub	sp, #44	@ 0x2c
 80193f0:	468c      	mov	ip, r1
 80193f2:	2100      	movs	r1, #0
 80193f4:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 80193f8:	ae01      	add	r6, sp, #4
 80193fa:	211f      	movs	r1, #31
 80193fc:	fbb0 f7f3 	udiv	r7, r0, r3
 8019400:	fb03 0517 	mls	r5, r3, r7, r0
 8019404:	b2ec      	uxtb	r4, r5
 8019406:	2d09      	cmp	r5, #9
 8019408:	bfd4      	ite	le
 801940a:	3430      	addle	r4, #48	@ 0x30
 801940c:	3457      	addgt	r4, #87	@ 0x57
 801940e:	b2e4      	uxtb	r4, r4
 8019410:	558c      	strb	r4, [r1, r6]
 8019412:	4638      	mov	r0, r7
 8019414:	1e4c      	subs	r4, r1, #1
 8019416:	b92f      	cbnz	r7, 8019424 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8019418:	4431      	add	r1, r6
 801941a:	4660      	mov	r0, ip
 801941c:	f7ff ffa9 	bl	8019372 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019420:	b00b      	add	sp, #44	@ 0x2c
 8019422:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019424:	4621      	mov	r1, r4
 8019426:	e7e9      	b.n	80193fc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08019428 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801942c:	4691      	mov	r9, r2
 801942e:	b085      	sub	sp, #20
 8019430:	6802      	ldr	r2, [r0, #0]
 8019432:	9201      	str	r2, [sp, #4]
 8019434:	4688      	mov	r8, r1
 8019436:	4683      	mov	fp, r0
 8019438:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 801943c:	9103      	str	r1, [sp, #12]
 801943e:	4610      	mov	r0, r2
 8019440:	461c      	mov	r4, r3
 8019442:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8019446:	9302      	str	r3, [sp, #8]
 8019448:	f7ff ff86 	bl	8019358 <_ZN8touchgfx7Unicode6strlenEPKt>
 801944c:	f1b8 0f00 	cmp.w	r8, #0
 8019450:	bf0c      	ite	eq
 8019452:	4684      	moveq	ip, r0
 8019454:	f100 0c01 	addne.w	ip, r0, #1
 8019458:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 801945c:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8019460:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8019462:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019464:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8019468:	9903      	ldr	r1, [sp, #12]
 801946a:	fa1f fc8c 	uxth.w	ip, ip
 801946e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8019472:	d041      	beq.n	80194f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019474:	d834      	bhi.n	80194e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8019476:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 801947a:	d059      	beq.n	8019530 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801947c:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8019480:	d03a      	beq.n	80194f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019482:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8019486:	d034      	beq.n	80194f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019488:	2400      	movs	r4, #0
 801948a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801948e:	3a01      	subs	r2, #1
 8019490:	b169      	cbz	r1, 80194ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019492:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8019494:	458c      	cmp	ip, r1
 8019496:	da09      	bge.n	80194ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019498:	eba1 010c 	sub.w	r1, r1, ip
 801949c:	b289      	uxth	r1, r1
 801949e:	b933      	cbnz	r3, 80194ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80194a0:	2e00      	cmp	r6, #0
 80194a2:	d051      	beq.n	8019548 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80194a4:	2800      	cmp	r0, #0
 80194a6:	d04f      	beq.n	8019548 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80194a8:	440c      	add	r4, r1
 80194aa:	b2a4      	uxth	r4, r4
 80194ac:	2100      	movs	r1, #0
 80194ae:	682b      	ldr	r3, [r5, #0]
 80194b0:	4293      	cmp	r3, r2
 80194b2:	da07      	bge.n	80194c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80194b4:	f1b8 0f00 	cmp.w	r8, #0
 80194b8:	d004      	beq.n	80194c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80194ba:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80194be:	682b      	ldr	r3, [r5, #0]
 80194c0:	3301      	adds	r3, #1
 80194c2:	602b      	str	r3, [r5, #0]
 80194c4:	2730      	movs	r7, #48	@ 0x30
 80194c6:	2c00      	cmp	r4, #0
 80194c8:	d04e      	beq.n	8019568 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80194ca:	682e      	ldr	r6, [r5, #0]
 80194cc:	3c01      	subs	r4, #1
 80194ce:	42b2      	cmp	r2, r6
 80194d0:	b2a4      	uxth	r4, r4
 80194d2:	dd49      	ble.n	8019568 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80194d4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80194d8:	682b      	ldr	r3, [r5, #0]
 80194da:	3301      	adds	r3, #1
 80194dc:	602b      	str	r3, [r5, #0]
 80194de:	e7f2      	b.n	80194c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80194e0:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 80194e4:	d01d      	beq.n	8019522 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80194e6:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 80194ea:	d002      	beq.n	80194f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80194ec:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 80194f0:	e7c9      	b.n	8019486 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80194f2:	4684      	mov	ip, r0
 80194f4:	f04f 0800 	mov.w	r8, #0
 80194f8:	2c00      	cmp	r4, #0
 80194fa:	d0c6      	beq.n	801948a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80194fc:	b947      	cbnz	r7, 8019510 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80194fe:	2801      	cmp	r0, #1
 8019500:	d106      	bne.n	8019510 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019502:	8814      	ldrh	r4, [r2, #0]
 8019504:	2c30      	cmp	r4, #48	@ 0x30
 8019506:	bf02      	ittt	eq
 8019508:	3202      	addeq	r2, #2
 801950a:	f8cb 2000 	streq.w	r2, [fp]
 801950e:	4638      	moveq	r0, r7
 8019510:	45bc      	cmp	ip, r7
 8019512:	da14      	bge.n	801953e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8019514:	b2bf      	uxth	r7, r7
 8019516:	eba7 040c 	sub.w	r4, r7, ip
 801951a:	b2a4      	uxth	r4, r4
 801951c:	46bc      	mov	ip, r7
 801951e:	2600      	movs	r6, #0
 8019520:	e7b3      	b.n	801948a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019522:	4684      	mov	ip, r0
 8019524:	b16c      	cbz	r4, 8019542 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8019526:	42b8      	cmp	r0, r7
 8019528:	dd00      	ble.n	801952c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801952a:	b2b8      	uxth	r0, r7
 801952c:	2400      	movs	r4, #0
 801952e:	e003      	b.n	8019538 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019530:	f04f 0c01 	mov.w	ip, #1
 8019534:	2400      	movs	r4, #0
 8019536:	4660      	mov	r0, ip
 8019538:	4626      	mov	r6, r4
 801953a:	46a0      	mov	r8, r4
 801953c:	e7a5      	b.n	801948a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801953e:	2400      	movs	r4, #0
 8019540:	e7ed      	b.n	801951e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8019542:	4626      	mov	r6, r4
 8019544:	46a0      	mov	r8, r4
 8019546:	e7a0      	b.n	801948a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019548:	2900      	cmp	r1, #0
 801954a:	d0b0      	beq.n	80194ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801954c:	2720      	movs	r7, #32
 801954e:	682e      	ldr	r6, [r5, #0]
 8019550:	2900      	cmp	r1, #0
 8019552:	d0ac      	beq.n	80194ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019554:	3901      	subs	r1, #1
 8019556:	4296      	cmp	r6, r2
 8019558:	b289      	uxth	r1, r1
 801955a:	daa7      	bge.n	80194ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801955c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019560:	682b      	ldr	r3, [r5, #0]
 8019562:	3301      	adds	r3, #1
 8019564:	602b      	str	r3, [r5, #0]
 8019566:	e7f2      	b.n	801954e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019568:	b188      	cbz	r0, 801958e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801956a:	682b      	ldr	r3, [r5, #0]
 801956c:	3801      	subs	r0, #1
 801956e:	429a      	cmp	r2, r3
 8019570:	b280      	uxth	r0, r0
 8019572:	dd0c      	ble.n	801958e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019574:	f8db 3000 	ldr.w	r3, [fp]
 8019578:	1c9c      	adds	r4, r3, #2
 801957a:	f8cb 4000 	str.w	r4, [fp]
 801957e:	881c      	ldrh	r4, [r3, #0]
 8019580:	682b      	ldr	r3, [r5, #0]
 8019582:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8019586:	682b      	ldr	r3, [r5, #0]
 8019588:	3301      	adds	r3, #1
 801958a:	602b      	str	r3, [r5, #0]
 801958c:	e7ec      	b.n	8019568 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801958e:	2620      	movs	r6, #32
 8019590:	b151      	cbz	r1, 80195a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019592:	6828      	ldr	r0, [r5, #0]
 8019594:	3901      	subs	r1, #1
 8019596:	4282      	cmp	r2, r0
 8019598:	b289      	uxth	r1, r1
 801959a:	dd05      	ble.n	80195a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801959c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80195a0:	682b      	ldr	r3, [r5, #0]
 80195a2:	3301      	adds	r3, #1
 80195a4:	602b      	str	r3, [r5, #0]
 80195a6:	e7f3      	b.n	8019590 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80195a8:	b005      	add	sp, #20
 80195aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080195ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80195ae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80195b2:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80195b6:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 80195ba:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 80195be:	2400      	movs	r4, #0
 80195c0:	8014      	strh	r4, [r2, #0]
 80195c2:	701c      	strb	r4, [r3, #0]
 80195c4:	f888 4000 	strb.w	r4, [r8]
 80195c8:	f88c 4000 	strb.w	r4, [ip]
 80195cc:	f88e 4000 	strb.w	r4, [lr]
 80195d0:	703c      	strb	r4, [r7, #0]
 80195d2:	6804      	ldr	r4, [r0, #0]
 80195d4:	b1a4      	cbz	r4, 8019600 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80195d6:	8824      	ldrh	r4, [r4, #0]
 80195d8:	f04f 0901 	mov.w	r9, #1
 80195dc:	b314      	cbz	r4, 8019624 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80195de:	2c2b      	cmp	r4, #43	@ 0x2b
 80195e0:	d001      	beq.n	80195e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80195e2:	2c20      	cmp	r4, #32
 80195e4:	d110      	bne.n	8019608 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80195e6:	8014      	strh	r4, [r2, #0]
 80195e8:	6804      	ldr	r4, [r0, #0]
 80195ea:	b10c      	cbz	r4, 80195f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80195ec:	3402      	adds	r4, #2
 80195ee:	6004      	str	r4, [r0, #0]
 80195f0:	680c      	ldr	r4, [r1, #0]
 80195f2:	b10c      	cbz	r4, 80195f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80195f4:	3401      	adds	r4, #1
 80195f6:	600c      	str	r4, [r1, #0]
 80195f8:	6804      	ldr	r4, [r0, #0]
 80195fa:	b17c      	cbz	r4, 801961c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80195fc:	8824      	ldrh	r4, [r4, #0]
 80195fe:	e7ed      	b.n	80195dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019600:	680c      	ldr	r4, [r1, #0]
 8019602:	b17c      	cbz	r4, 8019624 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019604:	7824      	ldrb	r4, [r4, #0]
 8019606:	e7e7      	b.n	80195d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019608:	2c2d      	cmp	r4, #45	@ 0x2d
 801960a:	d102      	bne.n	8019612 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801960c:	f883 9000 	strb.w	r9, [r3]
 8019610:	e7ea      	b.n	80195e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019612:	2c23      	cmp	r4, #35	@ 0x23
 8019614:	d107      	bne.n	8019626 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8019616:	f888 9000 	strb.w	r9, [r8]
 801961a:	e7e5      	b.n	80195e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801961c:	680c      	ldr	r4, [r1, #0]
 801961e:	b10c      	cbz	r4, 8019624 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019620:	7824      	ldrb	r4, [r4, #0]
 8019622:	e7db      	b.n	80195dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019624:	2400      	movs	r4, #0
 8019626:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 801962a:	2b09      	cmp	r3, #9
 801962c:	d901      	bls.n	8019632 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801962e:	2c2a      	cmp	r4, #42	@ 0x2a
 8019630:	d122      	bne.n	8019678 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019632:	2301      	movs	r3, #1
 8019634:	2c30      	cmp	r4, #48	@ 0x30
 8019636:	f88e 3000 	strb.w	r3, [lr]
 801963a:	d10d      	bne.n	8019658 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801963c:	f88c 3000 	strb.w	r3, [ip]
 8019640:	6803      	ldr	r3, [r0, #0]
 8019642:	b10b      	cbz	r3, 8019648 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8019644:	3302      	adds	r3, #2
 8019646:	6003      	str	r3, [r0, #0]
 8019648:	680b      	ldr	r3, [r1, #0]
 801964a:	b10b      	cbz	r3, 8019650 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801964c:	3301      	adds	r3, #1
 801964e:	600b      	str	r3, [r1, #0]
 8019650:	6803      	ldr	r3, [r0, #0]
 8019652:	2b00      	cmp	r3, #0
 8019654:	d02f      	beq.n	80196b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8019656:	881c      	ldrh	r4, [r3, #0]
 8019658:	2c2a      	cmp	r4, #42	@ 0x2a
 801965a:	d135      	bne.n	80196c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801965c:	f04f 33ff 	mov.w	r3, #4294967295
 8019660:	6033      	str	r3, [r6, #0]
 8019662:	6803      	ldr	r3, [r0, #0]
 8019664:	b10b      	cbz	r3, 801966a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8019666:	3302      	adds	r3, #2
 8019668:	6003      	str	r3, [r0, #0]
 801966a:	680b      	ldr	r3, [r1, #0]
 801966c:	b10b      	cbz	r3, 8019672 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801966e:	3301      	adds	r3, #1
 8019670:	600b      	str	r3, [r1, #0]
 8019672:	6803      	ldr	r3, [r0, #0]
 8019674:	b31b      	cbz	r3, 80196be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8019676:	881c      	ldrh	r4, [r3, #0]
 8019678:	2c2e      	cmp	r4, #46	@ 0x2e
 801967a:	d11a      	bne.n	80196b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801967c:	2301      	movs	r3, #1
 801967e:	703b      	strb	r3, [r7, #0]
 8019680:	6803      	ldr	r3, [r0, #0]
 8019682:	b10b      	cbz	r3, 8019688 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8019684:	3302      	adds	r3, #2
 8019686:	6003      	str	r3, [r0, #0]
 8019688:	680b      	ldr	r3, [r1, #0]
 801968a:	b10b      	cbz	r3, 8019690 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801968c:	3301      	adds	r3, #1
 801968e:	600b      	str	r3, [r1, #0]
 8019690:	6803      	ldr	r3, [r0, #0]
 8019692:	2b00      	cmp	r3, #0
 8019694:	d036      	beq.n	8019704 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8019696:	881b      	ldrh	r3, [r3, #0]
 8019698:	2b2a      	cmp	r3, #42	@ 0x2a
 801969a:	d137      	bne.n	801970c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801969c:	f04f 33ff 	mov.w	r3, #4294967295
 80196a0:	602b      	str	r3, [r5, #0]
 80196a2:	6803      	ldr	r3, [r0, #0]
 80196a4:	b10b      	cbz	r3, 80196aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80196a6:	3302      	adds	r3, #2
 80196a8:	6003      	str	r3, [r0, #0]
 80196aa:	680b      	ldr	r3, [r1, #0]
 80196ac:	b10b      	cbz	r3, 80196b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80196ae:	3301      	adds	r3, #1
 80196b0:	600b      	str	r3, [r1, #0]
 80196b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80196b6:	680c      	ldr	r4, [r1, #0]
 80196b8:	b134      	cbz	r4, 80196c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80196ba:	7824      	ldrb	r4, [r4, #0]
 80196bc:	e7cc      	b.n	8019658 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80196be:	680b      	ldr	r3, [r1, #0]
 80196c0:	2b00      	cmp	r3, #0
 80196c2:	d0f6      	beq.n	80196b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80196c4:	781c      	ldrb	r4, [r3, #0]
 80196c6:	e7d7      	b.n	8019678 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80196c8:	2300      	movs	r3, #0
 80196ca:	6033      	str	r3, [r6, #0]
 80196cc:	220a      	movs	r2, #10
 80196ce:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 80196d2:	fa1f f38c 	uxth.w	r3, ip
 80196d6:	2b09      	cmp	r3, #9
 80196d8:	d8ce      	bhi.n	8019678 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80196da:	6833      	ldr	r3, [r6, #0]
 80196dc:	fb02 c303 	mla	r3, r2, r3, ip
 80196e0:	6033      	str	r3, [r6, #0]
 80196e2:	6803      	ldr	r3, [r0, #0]
 80196e4:	b10b      	cbz	r3, 80196ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80196e6:	3302      	adds	r3, #2
 80196e8:	6003      	str	r3, [r0, #0]
 80196ea:	680b      	ldr	r3, [r1, #0]
 80196ec:	b10b      	cbz	r3, 80196f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80196ee:	3301      	adds	r3, #1
 80196f0:	600b      	str	r3, [r1, #0]
 80196f2:	6803      	ldr	r3, [r0, #0]
 80196f4:	b10b      	cbz	r3, 80196fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80196f6:	881c      	ldrh	r4, [r3, #0]
 80196f8:	e7e9      	b.n	80196ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80196fa:	680c      	ldr	r4, [r1, #0]
 80196fc:	2c00      	cmp	r4, #0
 80196fe:	d0e6      	beq.n	80196ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019700:	7824      	ldrb	r4, [r4, #0]
 8019702:	e7e4      	b.n	80196ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019704:	680b      	ldr	r3, [r1, #0]
 8019706:	b10b      	cbz	r3, 801970c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019708:	781b      	ldrb	r3, [r3, #0]
 801970a:	e7c5      	b.n	8019698 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801970c:	2200      	movs	r2, #0
 801970e:	602a      	str	r2, [r5, #0]
 8019710:	240a      	movs	r4, #10
 8019712:	3b30      	subs	r3, #48	@ 0x30
 8019714:	b29e      	uxth	r6, r3
 8019716:	2e09      	cmp	r6, #9
 8019718:	682a      	ldr	r2, [r5, #0]
 801971a:	d813      	bhi.n	8019744 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801971c:	fb04 3302 	mla	r3, r4, r2, r3
 8019720:	602b      	str	r3, [r5, #0]
 8019722:	6803      	ldr	r3, [r0, #0]
 8019724:	b10b      	cbz	r3, 801972a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8019726:	3302      	adds	r3, #2
 8019728:	6003      	str	r3, [r0, #0]
 801972a:	680b      	ldr	r3, [r1, #0]
 801972c:	b10b      	cbz	r3, 8019732 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801972e:	3301      	adds	r3, #1
 8019730:	600b      	str	r3, [r1, #0]
 8019732:	6803      	ldr	r3, [r0, #0]
 8019734:	b10b      	cbz	r3, 801973a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8019736:	881b      	ldrh	r3, [r3, #0]
 8019738:	e7eb      	b.n	8019712 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801973a:	680b      	ldr	r3, [r1, #0]
 801973c:	2b00      	cmp	r3, #0
 801973e:	d0e8      	beq.n	8019712 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019740:	781b      	ldrb	r3, [r3, #0]
 8019742:	e7e6      	b.n	8019712 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019744:	2a06      	cmp	r2, #6
 8019746:	bfa8      	it	ge
 8019748:	2206      	movge	r2, #6
 801974a:	602a      	str	r2, [r5, #0]
 801974c:	e7b1      	b.n	80196b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801974e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801974e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019752:	b0a3      	sub	sp, #140	@ 0x8c
 8019754:	2600      	movs	r6, #0
 8019756:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 801975a:	4607      	mov	r7, r0
 801975c:	4688      	mov	r8, r1
 801975e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019762:	4631      	mov	r1, r6
 8019764:	2242      	movs	r2, #66	@ 0x42
 8019766:	4648      	mov	r0, r9
 8019768:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 801976a:	960d      	str	r6, [sp, #52]	@ 0x34
 801976c:	f010 fcdd 	bl	802a12a <memset>
 8019770:	b15f      	cbz	r7, 801978a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8019772:	f108 3aff 	add.w	sl, r8, #4294967295
 8019776:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019778:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801977a:	b152      	cbz	r2, 8019792 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801977c:	8812      	ldrh	r2, [r2, #0]
 801977e:	b10a      	cbz	r2, 8019784 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019780:	459a      	cmp	sl, r3
 8019782:	dc2e      	bgt.n	80197e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8019784:	2200      	movs	r2, #0
 8019786:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801978a:	4638      	mov	r0, r7
 801978c:	b023      	add	sp, #140	@ 0x8c
 801978e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019792:	9a08      	ldr	r2, [sp, #32]
 8019794:	2a00      	cmp	r2, #0
 8019796:	d0f5      	beq.n	8019784 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019798:	7812      	ldrb	r2, [r2, #0]
 801979a:	e7f0      	b.n	801977e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801979c:	2d00      	cmp	r5, #0
 801979e:	d0ea      	beq.n	8019776 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80197a0:	782a      	ldrb	r2, [r5, #0]
 80197a2:	b142      	cbz	r2, 80197b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80197a4:	2a25      	cmp	r2, #37	@ 0x25
 80197a6:	d001      	beq.n	80197ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80197a8:	459a      	cmp	sl, r3
 80197aa:	dc08      	bgt.n	80197be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80197ac:	f1bb 0f00 	cmp.w	fp, #0
 80197b0:	d121      	bne.n	80197f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80197b2:	2d00      	cmp	r5, #0
 80197b4:	d0df      	beq.n	8019776 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80197b6:	782a      	ldrb	r2, [r5, #0]
 80197b8:	f04f 0b00 	mov.w	fp, #0
 80197bc:	e01d      	b.n	80197fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80197be:	f1bb 0f00 	cmp.w	fp, #0
 80197c2:	d078      	beq.n	80198b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80197c4:	f8bb 2000 	ldrh.w	r2, [fp]
 80197c8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80197cc:	f1bb 0f00 	cmp.w	fp, #0
 80197d0:	d002      	beq.n	80197d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80197d2:	f10b 0202 	add.w	r2, fp, #2
 80197d6:	9209      	str	r2, [sp, #36]	@ 0x24
 80197d8:	b10d      	cbz	r5, 80197de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80197da:	3501      	adds	r5, #1
 80197dc:	9508      	str	r5, [sp, #32]
 80197de:	3301      	adds	r3, #1
 80197e0:	930d      	str	r3, [sp, #52]	@ 0x34
 80197e2:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80197e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80197e8:	f1bb 0f00 	cmp.w	fp, #0
 80197ec:	d0d6      	beq.n	801979c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80197ee:	f8bb 2000 	ldrh.w	r2, [fp]
 80197f2:	2a00      	cmp	r2, #0
 80197f4:	d1d6      	bne.n	80197a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80197f6:	f8bb 2000 	ldrh.w	r2, [fp]
 80197fa:	2a00      	cmp	r2, #0
 80197fc:	d0bb      	beq.n	8019776 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80197fe:	459a      	cmp	sl, r3
 8019800:	ddb9      	ble.n	8019776 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019802:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8019806:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 801980a:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 801980e:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8019812:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8019816:	960e      	str	r6, [sp, #56]	@ 0x38
 8019818:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 801981c:	960f      	str	r6, [sp, #60]	@ 0x3c
 801981e:	f1bb 0f00 	cmp.w	fp, #0
 8019822:	d002      	beq.n	801982a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8019824:	f10b 0302 	add.w	r3, fp, #2
 8019828:	9309      	str	r3, [sp, #36]	@ 0x24
 801982a:	b10d      	cbz	r5, 8019830 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801982c:	1c6b      	adds	r3, r5, #1
 801982e:	9308      	str	r3, [sp, #32]
 8019830:	ab0f      	add	r3, sp, #60	@ 0x3c
 8019832:	9305      	str	r3, [sp, #20]
 8019834:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8019838:	9304      	str	r3, [sp, #16]
 801983a:	ab0e      	add	r3, sp, #56	@ 0x38
 801983c:	9303      	str	r3, [sp, #12]
 801983e:	ab0c      	add	r3, sp, #48	@ 0x30
 8019840:	9302      	str	r3, [sp, #8]
 8019842:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8019846:	9301      	str	r3, [sp, #4]
 8019848:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 801984c:	9300      	str	r3, [sp, #0]
 801984e:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8019852:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8019856:	a908      	add	r1, sp, #32
 8019858:	a809      	add	r0, sp, #36	@ 0x24
 801985a:	f7ff fea8 	bl	80195ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801985e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019860:	2b00      	cmp	r3, #0
 8019862:	bfbe      	ittt	lt
 8019864:	6823      	ldrlt	r3, [r4, #0]
 8019866:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801986a:	930e      	strlt	r3, [sp, #56]	@ 0x38
 801986c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801986e:	bfb8      	it	lt
 8019870:	3404      	addlt	r4, #4
 8019872:	2b00      	cmp	r3, #0
 8019874:	bfb8      	it	lt
 8019876:	6823      	ldrlt	r3, [r4, #0]
 8019878:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801987c:	bfbe      	ittt	lt
 801987e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019882:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8019884:	3404      	addlt	r4, #4
 8019886:	b1d9      	cbz	r1, 80198c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019888:	880b      	ldrh	r3, [r1, #0]
 801988a:	2b69      	cmp	r3, #105	@ 0x69
 801988c:	d01f      	beq.n	80198ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801988e:	d82f      	bhi.n	80198f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019890:	2b58      	cmp	r3, #88	@ 0x58
 8019892:	d01c      	beq.n	80198ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019894:	d818      	bhi.n	80198c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8019896:	2b25      	cmp	r3, #37	@ 0x25
 8019898:	d034      	beq.n	8019904 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801989a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801989e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80198a0:	f1bb 0f00 	cmp.w	fp, #0
 80198a4:	f000 80b8 	beq.w	8019a18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80198a8:	f8bb 5000 	ldrh.w	r5, [fp]
 80198ac:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80198b0:	3301      	adds	r3, #1
 80198b2:	930d      	str	r3, [sp, #52]	@ 0x34
 80198b4:	e029      	b.n	801990a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80198b6:	b10d      	cbz	r5, 80198bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80198b8:	782a      	ldrb	r2, [r5, #0]
 80198ba:	e785      	b.n	80197c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80198bc:	462a      	mov	r2, r5
 80198be:	e783      	b.n	80197c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80198c0:	2a00      	cmp	r2, #0
 80198c2:	d0ea      	beq.n	801989a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80198c4:	7813      	ldrb	r3, [r2, #0]
 80198c6:	e7e0      	b.n	801988a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80198c8:	3b63      	subs	r3, #99	@ 0x63
 80198ca:	2b01      	cmp	r3, #1
 80198cc:	d8e5      	bhi.n	801989a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80198ce:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 80198d2:	b329      	cbz	r1, 8019920 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80198d4:	880b      	ldrh	r3, [r1, #0]
 80198d6:	2b69      	cmp	r3, #105	@ 0x69
 80198d8:	d063      	beq.n	80199a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80198da:	d825      	bhi.n	8019928 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80198dc:	2b63      	cmp	r3, #99	@ 0x63
 80198de:	d038      	beq.n	8019952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80198e0:	2b64      	cmp	r3, #100	@ 0x64
 80198e2:	d05e      	beq.n	80199a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80198e4:	2b58      	cmp	r3, #88	@ 0x58
 80198e6:	d07b      	beq.n	80199e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80198e8:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 80198ec:	4625      	mov	r5, r4
 80198ee:	e036      	b.n	801995e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80198f0:	2b73      	cmp	r3, #115	@ 0x73
 80198f2:	d0ec      	beq.n	80198ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80198f4:	d802      	bhi.n	80198fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80198f6:	2b6f      	cmp	r3, #111	@ 0x6f
 80198f8:	d1cf      	bne.n	801989a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80198fa:	e7e8      	b.n	80198ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80198fc:	2b75      	cmp	r3, #117	@ 0x75
 80198fe:	d0e6      	beq.n	80198ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019900:	2b78      	cmp	r3, #120	@ 0x78
 8019902:	e7f9      	b.n	80198f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8019904:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8019906:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801990a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801990c:	b10b      	cbz	r3, 8019912 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801990e:	3302      	adds	r3, #2
 8019910:	9309      	str	r3, [sp, #36]	@ 0x24
 8019912:	9b08      	ldr	r3, [sp, #32]
 8019914:	2b00      	cmp	r3, #0
 8019916:	f43f af2e 	beq.w	8019776 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801991a:	3301      	adds	r3, #1
 801991c:	9308      	str	r3, [sp, #32]
 801991e:	e72a      	b.n	8019776 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019920:	2a00      	cmp	r2, #0
 8019922:	d0e1      	beq.n	80198e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019924:	7813      	ldrb	r3, [r2, #0]
 8019926:	e7d6      	b.n	80198d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019928:	2b73      	cmp	r3, #115	@ 0x73
 801992a:	d036      	beq.n	801999a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801992c:	d807      	bhi.n	801993e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801992e:	2b6f      	cmp	r3, #111	@ 0x6f
 8019930:	d1da      	bne.n	80198e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019932:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8019934:	1d25      	adds	r5, r4, #4
 8019936:	eba8 0202 	sub.w	r2, r8, r2
 801993a:	2308      	movs	r3, #8
 801993c:	e04a      	b.n	80199d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801993e:	2b75      	cmp	r3, #117	@ 0x75
 8019940:	d043      	beq.n	80199ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8019942:	2b78      	cmp	r3, #120	@ 0x78
 8019944:	d1d0      	bne.n	80198e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019946:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8019948:	1d25      	adds	r5, r4, #4
 801994a:	eba8 0202 	sub.w	r2, r8, r2
 801994e:	2310      	movs	r3, #16
 8019950:	e040      	b.n	80199d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019952:	6823      	ldr	r3, [r4, #0]
 8019954:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8019958:	1d25      	adds	r5, r4, #4
 801995a:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 801995e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019960:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8019964:	2b00      	cmp	r3, #0
 8019966:	d052      	beq.n	8019a0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019968:	881a      	ldrh	r2, [r3, #0]
 801996a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801996e:	a80d      	add	r0, sp, #52	@ 0x34
 8019970:	9005      	str	r0, [sp, #20]
 8019972:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8019976:	9004      	str	r0, [sp, #16]
 8019978:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801997a:	9003      	str	r0, [sp, #12]
 801997c:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8019980:	9002      	str	r0, [sp, #8]
 8019982:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8019984:	9001      	str	r0, [sp, #4]
 8019986:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801998a:	9000      	str	r0, [sp, #0]
 801998c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8019990:	a810      	add	r0, sp, #64	@ 0x40
 8019992:	f7ff fd49 	bl	8019428 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019996:	462c      	mov	r4, r5
 8019998:	e7b7      	b.n	801990a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801999a:	6823      	ldr	r3, [r4, #0]
 801999c:	1d25      	adds	r5, r4, #4
 801999e:	9310      	str	r3, [sp, #64]	@ 0x40
 80199a0:	e7dd      	b.n	801995e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80199a2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80199a4:	6820      	ldr	r0, [r4, #0]
 80199a6:	eba8 0202 	sub.w	r2, r8, r2
 80199aa:	230a      	movs	r3, #10
 80199ac:	b292      	uxth	r2, r2
 80199ae:	4649      	mov	r1, r9
 80199b0:	f7ff fcf0 	bl	8019394 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80199b4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80199b8:	2b2d      	cmp	r3, #45	@ 0x2d
 80199ba:	f104 0504 	add.w	r5, r4, #4
 80199be:	d1ce      	bne.n	801995e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80199c0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80199c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80199c6:	3302      	adds	r3, #2
 80199c8:	e7e9      	b.n	801999e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80199ca:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80199cc:	1d25      	adds	r5, r4, #4
 80199ce:	eba8 0202 	sub.w	r2, r8, r2
 80199d2:	230a      	movs	r3, #10
 80199d4:	b292      	uxth	r2, r2
 80199d6:	4649      	mov	r1, r9
 80199d8:	6820      	ldr	r0, [r4, #0]
 80199da:	f7ff fd07 	bl	80193ec <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80199de:	e7be      	b.n	801995e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80199e0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80199e2:	6820      	ldr	r0, [r4, #0]
 80199e4:	eba8 0202 	sub.w	r2, r8, r2
 80199e8:	b292      	uxth	r2, r2
 80199ea:	2310      	movs	r3, #16
 80199ec:	4649      	mov	r1, r9
 80199ee:	f7ff fcfd 	bl	80193ec <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80199f2:	1d25      	adds	r5, r4, #4
 80199f4:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 80199f8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80199fc:	2b00      	cmp	r3, #0
 80199fe:	d0ae      	beq.n	801995e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019a00:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8019a04:	2919      	cmp	r1, #25
 8019a06:	d8f7      	bhi.n	80199f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019a08:	3b20      	subs	r3, #32
 8019a0a:	8013      	strh	r3, [r2, #0]
 8019a0c:	e7f4      	b.n	80199f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019a0e:	9a08      	ldr	r2, [sp, #32]
 8019a10:	2a00      	cmp	r2, #0
 8019a12:	d0aa      	beq.n	801996a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019a14:	7812      	ldrb	r2, [r2, #0]
 8019a16:	e7a8      	b.n	801996a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019a18:	2d00      	cmp	r5, #0
 8019a1a:	f43f af47 	beq.w	80198ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8019a1e:	782d      	ldrb	r5, [r5, #0]
 8019a20:	e744      	b.n	80198ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08019a22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8019a22:	b507      	push	{r0, r1, r2, lr}
 8019a24:	9300      	str	r3, [sp, #0]
 8019a26:	4613      	mov	r3, r2
 8019a28:	2200      	movs	r2, #0
 8019a2a:	f7ff fe90 	bl	801974e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8019a2e:	b003      	add	sp, #12
 8019a30:	f85d fb04 	ldr.w	pc, [sp], #4

08019a34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8019a34:	b40c      	push	{r2, r3}
 8019a36:	b507      	push	{r0, r1, r2, lr}
 8019a38:	ab04      	add	r3, sp, #16
 8019a3a:	f853 2b04 	ldr.w	r2, [r3], #4
 8019a3e:	9301      	str	r3, [sp, #4]
 8019a40:	f7ff ffef 	bl	8019a22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8019a44:	b003      	add	sp, #12
 8019a46:	f85d eb04 	ldr.w	lr, [sp], #4
 8019a4a:	b002      	add	sp, #8
 8019a4c:	4770      	bx	lr
	...

08019a50 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019a50:	4b01      	ldr	r3, [pc, #4]	@ (8019a58 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8019a52:	6018      	str	r0, [r3, #0]
 8019a54:	4770      	bx	lr
 8019a56:	bf00      	nop
 8019a58:	20013fc8 	.word	0x20013fc8

08019a5c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019a5c:	4b06      	ldr	r3, [pc, #24]	@ (8019a78 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8019a5e:	881a      	ldrh	r2, [r3, #0]
 8019a60:	4282      	cmp	r2, r0
 8019a62:	d807      	bhi.n	8019a74 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019a64:	4b05      	ldr	r3, [pc, #20]	@ (8019a7c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8019a66:	881b      	ldrh	r3, [r3, #0]
 8019a68:	4413      	add	r3, r2
 8019a6a:	4298      	cmp	r0, r3
 8019a6c:	bfac      	ite	ge
 8019a6e:	2000      	movge	r0, #0
 8019a70:	2001      	movlt	r0, #1
 8019a72:	4770      	bx	lr
 8019a74:	2000      	movs	r0, #0
 8019a76:	4770      	bx	lr
 8019a78:	20013fe8 	.word	0x20013fe8
 8019a7c:	20013fec 	.word	0x20013fec

08019a80 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019a80:	b508      	push	{r3, lr}
 8019a82:	4601      	mov	r1, r0
 8019a84:	f7ff ffea 	bl	8019a5c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019a88:	b118      	cbz	r0, 8019a92 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019a8a:	4b02      	ldr	r3, [pc, #8]	@ (8019a94 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019a8c:	681b      	ldr	r3, [r3, #0]
 8019a8e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8019a92:	bd08      	pop	{r3, pc}
 8019a94:	20013fcc 	.word	0x20013fcc

08019a98 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019a98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019a9a:	4c24      	ldr	r4, [pc, #144]	@ (8019b2c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019a9c:	6823      	ldr	r3, [r4, #0]
 8019a9e:	2b00      	cmp	r3, #0
 8019aa0:	d042      	beq.n	8019b28 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019aa2:	4a23      	ldr	r2, [pc, #140]	@ (8019b30 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8019aa4:	4d23      	ldr	r5, [pc, #140]	@ (8019b34 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8019aa6:	8811      	ldrh	r1, [r2, #0]
 8019aa8:	f8b5 c000 	ldrh.w	ip, [r5]
 8019aac:	4822      	ldr	r0, [pc, #136]	@ (8019b38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8019aae:	4461      	add	r1, ip
 8019ab0:	1c4a      	adds	r2, r1, #1
 8019ab2:	f022 0201 	bic.w	r2, r2, #1
 8019ab6:	008f      	lsls	r7, r1, #2
 8019ab8:	0412      	lsls	r2, r2, #16
 8019aba:	19de      	adds	r6, r3, r7
 8019abc:	0c12      	lsrs	r2, r2, #16
 8019abe:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8019ac2:	6006      	str	r6, [r0, #0]
 8019ac4:	4e1d      	ldr	r6, [pc, #116]	@ (8019b3c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8019ac6:	19da      	adds	r2, r3, r7
 8019ac8:	6032      	str	r2, [r6, #0]
 8019aca:	220e      	movs	r2, #14
 8019acc:	fb02 f20c 	mul.w	r2, r2, ip
 8019ad0:	3203      	adds	r2, #3
 8019ad2:	f022 0203 	bic.w	r2, r2, #3
 8019ad6:	443a      	add	r2, r7
 8019ad8:	4f19      	ldr	r7, [pc, #100]	@ (8019b40 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019ada:	4413      	add	r3, r2
 8019adc:	603b      	str	r3, [r7, #0]
 8019ade:	4f19      	ldr	r7, [pc, #100]	@ (8019b44 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8019ae0:	2300      	movs	r3, #0
 8019ae2:	803b      	strh	r3, [r7, #0]
 8019ae4:	4f18      	ldr	r7, [pc, #96]	@ (8019b48 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019ae6:	683f      	ldr	r7, [r7, #0]
 8019ae8:	1aba      	subs	r2, r7, r2
 8019aea:	4f18      	ldr	r7, [pc, #96]	@ (8019b4c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019aec:	603a      	str	r2, [r7, #0]
 8019aee:	4a18      	ldr	r2, [pc, #96]	@ (8019b50 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019af0:	469c      	mov	ip, r3
 8019af2:	8013      	strh	r3, [r2, #0]
 8019af4:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8019af8:	428b      	cmp	r3, r1
 8019afa:	d10d      	bne.n	8019b18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019afc:	882d      	ldrh	r5, [r5, #0]
 8019afe:	6830      	ldr	r0, [r6, #0]
 8019b00:	2300      	movs	r3, #0
 8019b02:	240e      	movs	r4, #14
 8019b04:	429d      	cmp	r5, r3
 8019b06:	d90f      	bls.n	8019b28 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019b08:	fb04 0203 	mla	r2, r4, r3, r0
 8019b0c:	3301      	adds	r3, #1
 8019b0e:	7b11      	ldrb	r1, [r2, #12]
 8019b10:	f36f 1145 	bfc	r1, #5, #1
 8019b14:	7311      	strb	r1, [r2, #12]
 8019b16:	e7f5      	b.n	8019b04 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019b18:	6822      	ldr	r2, [r4, #0]
 8019b1a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8019b1e:	6802      	ldr	r2, [r0, #0]
 8019b20:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019b24:	3301      	adds	r3, #1
 8019b26:	e7e7      	b.n	8019af8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019b28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019b2a:	bf00      	nop
 8019b2c:	20013fcc 	.word	0x20013fcc
 8019b30:	20013fe8 	.word	0x20013fe8
 8019b34:	20013fec 	.word	0x20013fec
 8019b38:	20013fe0 	.word	0x20013fe0
 8019b3c:	20013fd0 	.word	0x20013fd0
 8019b40:	20013fd8 	.word	0x20013fd8
 8019b44:	20013fea 	.word	0x20013fea
 8019b48:	20013fd4 	.word	0x20013fd4
 8019b4c:	20013fe4 	.word	0x20013fe4
 8019b50:	20013fdc 	.word	0x20013fdc

08019b54 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8019b54:	4b06      	ldr	r3, [pc, #24]	@ (8019b70 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8019b56:	681b      	ldr	r3, [r3, #0]
 8019b58:	b943      	cbnz	r3, 8019b6c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019b5a:	b139      	cbz	r1, 8019b6c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019b5c:	4b05      	ldr	r3, [pc, #20]	@ (8019b74 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8019b5e:	801a      	strh	r2, [r3, #0]
 8019b60:	4b05      	ldr	r3, [pc, #20]	@ (8019b78 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8019b62:	6019      	str	r1, [r3, #0]
 8019b64:	4b05      	ldr	r3, [pc, #20]	@ (8019b7c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8019b66:	6018      	str	r0, [r3, #0]
 8019b68:	f7ff bf96 	b.w	8019a98 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019b6c:	4770      	bx	lr
 8019b6e:	bf00      	nop
 8019b70:	20013fd8 	.word	0x20013fd8
 8019b74:	20013fec 	.word	0x20013fec
 8019b78:	20013fd4 	.word	0x20013fd4
 8019b7c:	20013fcc 	.word	0x20013fcc

08019b80 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8019b80:	b470      	push	{r4, r5, r6}
 8019b82:	4c07      	ldr	r4, [pc, #28]	@ (8019ba0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019b84:	6826      	ldr	r6, [r4, #0]
 8019b86:	4605      	mov	r5, r0
 8019b88:	4610      	mov	r0, r2
 8019b8a:	9a03      	ldr	r2, [sp, #12]
 8019b8c:	b936      	cbnz	r6, 8019b9c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8019b8e:	6025      	str	r5, [r4, #0]
 8019b90:	4c04      	ldr	r4, [pc, #16]	@ (8019ba4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8019b92:	8021      	strh	r1, [r4, #0]
 8019b94:	bc70      	pop	{r4, r5, r6}
 8019b96:	4619      	mov	r1, r3
 8019b98:	f7ff bfdc 	b.w	8019b54 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8019b9c:	bc70      	pop	{r4, r5, r6}
 8019b9e:	4770      	bx	lr
 8019ba0:	20013ff0 	.word	0x20013ff0
 8019ba4:	20013fe8 	.word	0x20013fe8

08019ba8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8019ba8:	4a12      	ldr	r2, [pc, #72]	@ (8019bf4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8019baa:	8803      	ldrh	r3, [r0, #0]
 8019bac:	8812      	ldrh	r2, [r2, #0]
 8019bae:	4293      	cmp	r3, r2
 8019bb0:	d207      	bcs.n	8019bc2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8019bb2:	4a11      	ldr	r2, [pc, #68]	@ (8019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8019bb4:	6812      	ldr	r2, [r2, #0]
 8019bb6:	2114      	movs	r1, #20
 8019bb8:	fb01 2303 	mla	r3, r1, r3, r2
 8019bbc:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8019bc0:	4770      	bx	lr
 8019bc2:	490e      	ldr	r1, [pc, #56]	@ (8019bfc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8019bc4:	8809      	ldrh	r1, [r1, #0]
 8019bc6:	4411      	add	r1, r2
 8019bc8:	428b      	cmp	r3, r1
 8019bca:	da04      	bge.n	8019bd6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8019bcc:	1a9b      	subs	r3, r3, r2
 8019bce:	4a0c      	ldr	r2, [pc, #48]	@ (8019c00 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8019bd0:	210e      	movs	r1, #14
 8019bd2:	6812      	ldr	r2, [r2, #0]
 8019bd4:	e7f0      	b.n	8019bb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8019bd6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8019bda:	4293      	cmp	r3, r2
 8019bdc:	d108      	bne.n	8019bf0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8019bde:	4b09      	ldr	r3, [pc, #36]	@ (8019c04 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8019be0:	781b      	ldrb	r3, [r3, #0]
 8019be2:	b91b      	cbnz	r3, 8019bec <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8019be4:	4b08      	ldr	r3, [pc, #32]	@ (8019c08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8019be6:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019bea:	4770      	bx	lr
 8019bec:	4b07      	ldr	r3, [pc, #28]	@ (8019c0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8019bee:	e7fa      	b.n	8019be6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8019bf0:	2000      	movs	r0, #0
 8019bf2:	4770      	bx	lr
 8019bf4:	20013fe8 	.word	0x20013fe8
 8019bf8:	20013ff0 	.word	0x20013ff0
 8019bfc:	20013fec 	.word	0x20013fec
 8019c00:	20013fd0 	.word	0x20013fd0
 8019c04:	20013f58 	.word	0x20013f58
 8019c08:	20013f5a 	.word	0x20013f5a
 8019c0c:	20013f5c 	.word	0x20013f5c

08019c10 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019c10:	4a12      	ldr	r2, [pc, #72]	@ (8019c5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8019c12:	8803      	ldrh	r3, [r0, #0]
 8019c14:	8812      	ldrh	r2, [r2, #0]
 8019c16:	4293      	cmp	r3, r2
 8019c18:	d207      	bcs.n	8019c2a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8019c1a:	4a11      	ldr	r2, [pc, #68]	@ (8019c60 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8019c1c:	6812      	ldr	r2, [r2, #0]
 8019c1e:	2114      	movs	r1, #20
 8019c20:	fb01 2303 	mla	r3, r1, r3, r2
 8019c24:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019c28:	4770      	bx	lr
 8019c2a:	490e      	ldr	r1, [pc, #56]	@ (8019c64 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8019c2c:	8809      	ldrh	r1, [r1, #0]
 8019c2e:	4411      	add	r1, r2
 8019c30:	428b      	cmp	r3, r1
 8019c32:	da04      	bge.n	8019c3e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8019c34:	1a9b      	subs	r3, r3, r2
 8019c36:	4a0c      	ldr	r2, [pc, #48]	@ (8019c68 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8019c38:	210e      	movs	r1, #14
 8019c3a:	6812      	ldr	r2, [r2, #0]
 8019c3c:	e7f0      	b.n	8019c20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8019c3e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8019c42:	4293      	cmp	r3, r2
 8019c44:	d108      	bne.n	8019c58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8019c46:	4b09      	ldr	r3, [pc, #36]	@ (8019c6c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8019c48:	781b      	ldrb	r3, [r3, #0]
 8019c4a:	b91b      	cbnz	r3, 8019c54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8019c4c:	4b08      	ldr	r3, [pc, #32]	@ (8019c70 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8019c4e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019c52:	4770      	bx	lr
 8019c54:	4b07      	ldr	r3, [pc, #28]	@ (8019c74 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8019c56:	e7fa      	b.n	8019c4e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8019c58:	2000      	movs	r0, #0
 8019c5a:	4770      	bx	lr
 8019c5c:	20013fe8 	.word	0x20013fe8
 8019c60:	20013ff0 	.word	0x20013ff0
 8019c64:	20013fec 	.word	0x20013fec
 8019c68:	20013fd0 	.word	0x20013fd0
 8019c6c:	20013f58 	.word	0x20013f58
 8019c70:	20013f5c 	.word	0x20013f5c
 8019c74:	20013f5a 	.word	0x20013f5a

08019c78 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019c78:	b530      	push	{r4, r5, lr}
 8019c7a:	4a22      	ldr	r2, [pc, #136]	@ (8019d04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8019c7c:	880b      	ldrh	r3, [r1, #0]
 8019c7e:	8812      	ldrh	r2, [r2, #0]
 8019c80:	4293      	cmp	r3, r2
 8019c82:	d213      	bcs.n	8019cac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8019c84:	4a20      	ldr	r2, [pc, #128]	@ (8019d08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8019c86:	6812      	ldr	r2, [r2, #0]
 8019c88:	2114      	movs	r1, #20
 8019c8a:	fb01 2303 	mla	r3, r1, r3, r2
 8019c8e:	8a1a      	ldrh	r2, [r3, #16]
 8019c90:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019c94:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019c98:	8a5b      	ldrh	r3, [r3, #18]
 8019c9a:	8004      	strh	r4, [r0, #0]
 8019c9c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019ca0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8019ca4:	8041      	strh	r1, [r0, #2]
 8019ca6:	8082      	strh	r2, [r0, #4]
 8019ca8:	80c3      	strh	r3, [r0, #6]
 8019caa:	e024      	b.n	8019cf6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8019cac:	4917      	ldr	r1, [pc, #92]	@ (8019d0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8019cae:	8809      	ldrh	r1, [r1, #0]
 8019cb0:	4411      	add	r1, r2
 8019cb2:	428b      	cmp	r3, r1
 8019cb4:	da10      	bge.n	8019cd8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8019cb6:	1a9b      	subs	r3, r3, r2
 8019cb8:	220e      	movs	r2, #14
 8019cba:	4353      	muls	r3, r2
 8019cbc:	4a14      	ldr	r2, [pc, #80]	@ (8019d10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8019cbe:	6811      	ldr	r1, [r2, #0]
 8019cc0:	18ca      	adds	r2, r1, r3
 8019cc2:	5ecd      	ldrsh	r5, [r1, r3]
 8019cc4:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8019cc8:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8019ccc:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8019cd0:	8005      	strh	r5, [r0, #0]
 8019cd2:	8044      	strh	r4, [r0, #2]
 8019cd4:	8081      	strh	r1, [r0, #4]
 8019cd6:	e7e7      	b.n	8019ca8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019cd8:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8019cdc:	4293      	cmp	r3, r2
 8019cde:	d10b      	bne.n	8019cf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8019ce0:	4b0c      	ldr	r3, [pc, #48]	@ (8019d14 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8019ce2:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019ce6:	4b0c      	ldr	r3, [pc, #48]	@ (8019d18 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8019ce8:	8081      	strh	r1, [r0, #4]
 8019cea:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019cee:	80c2      	strh	r2, [r0, #6]
 8019cf0:	2300      	movs	r3, #0
 8019cf2:	8003      	strh	r3, [r0, #0]
 8019cf4:	8043      	strh	r3, [r0, #2]
 8019cf6:	bd30      	pop	{r4, r5, pc}
 8019cf8:	2300      	movs	r3, #0
 8019cfa:	8003      	strh	r3, [r0, #0]
 8019cfc:	8043      	strh	r3, [r0, #2]
 8019cfe:	8083      	strh	r3, [r0, #4]
 8019d00:	e7d2      	b.n	8019ca8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019d02:	bf00      	nop
 8019d04:	20013fe8 	.word	0x20013fe8
 8019d08:	20013ff0 	.word	0x20013ff0
 8019d0c:	20013fec 	.word	0x20013fec
 8019d10:	20013fd0 	.word	0x20013fd0
 8019d14:	20013f54 	.word	0x20013f54
 8019d18:	20013f56 	.word	0x20013f56

08019d1c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019d1c:	4a17      	ldr	r2, [pc, #92]	@ (8019d7c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8019d1e:	8803      	ldrh	r3, [r0, #0]
 8019d20:	8812      	ldrh	r2, [r2, #0]
 8019d22:	4293      	cmp	r3, r2
 8019d24:	d213      	bcs.n	8019d4e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8019d26:	4a16      	ldr	r2, [pc, #88]	@ (8019d80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019d28:	6812      	ldr	r2, [r2, #0]
 8019d2a:	2114      	movs	r1, #20
 8019d2c:	fb01 2303 	mla	r3, r1, r3, r2
 8019d30:	8a1a      	ldrh	r2, [r3, #16]
 8019d32:	8919      	ldrh	r1, [r3, #8]
 8019d34:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019d38:	428a      	cmp	r2, r1
 8019d3a:	db1d      	blt.n	8019d78 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019d3c:	8a58      	ldrh	r0, [r3, #18]
 8019d3e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8019d42:	895b      	ldrh	r3, [r3, #10]
 8019d44:	4298      	cmp	r0, r3
 8019d46:	bfac      	ite	ge
 8019d48:	2000      	movge	r0, #0
 8019d4a:	2001      	movlt	r0, #1
 8019d4c:	4770      	bx	lr
 8019d4e:	490d      	ldr	r1, [pc, #52]	@ (8019d84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8019d50:	8809      	ldrh	r1, [r1, #0]
 8019d52:	4411      	add	r1, r2
 8019d54:	428b      	cmp	r3, r1
 8019d56:	da0d      	bge.n	8019d74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8019d58:	1a9b      	subs	r3, r3, r2
 8019d5a:	4a0b      	ldr	r2, [pc, #44]	@ (8019d88 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8019d5c:	6812      	ldr	r2, [r2, #0]
 8019d5e:	210e      	movs	r1, #14
 8019d60:	fb01 2303 	mla	r3, r1, r3, r2
 8019d64:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8019d68:	891a      	ldrh	r2, [r3, #8]
 8019d6a:	4291      	cmp	r1, r2
 8019d6c:	db04      	blt.n	8019d78 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019d6e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8019d72:	e7e6      	b.n	8019d42 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8019d74:	2000      	movs	r0, #0
 8019d76:	4770      	bx	lr
 8019d78:	2001      	movs	r0, #1
 8019d7a:	4770      	bx	lr
 8019d7c:	20013fe8 	.word	0x20013fe8
 8019d80:	20013ff0 	.word	0x20013ff0
 8019d84:	20013fec 	.word	0x20013fec
 8019d88:	20013fd0 	.word	0x20013fd0

08019d8c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8019d8c:	4a12      	ldr	r2, [pc, #72]	@ (8019dd8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8019d8e:	8803      	ldrh	r3, [r0, #0]
 8019d90:	8811      	ldrh	r1, [r2, #0]
 8019d92:	428b      	cmp	r3, r1
 8019d94:	d20b      	bcs.n	8019dae <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8019d96:	4a11      	ldr	r2, [pc, #68]	@ (8019ddc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019d98:	6812      	ldr	r2, [r2, #0]
 8019d9a:	b112      	cbz	r2, 8019da2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8019d9c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019da0:	b9c0      	cbnz	r0, 8019dd4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8019da2:	4a0f      	ldr	r2, [pc, #60]	@ (8019de0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019da4:	6811      	ldr	r1, [r2, #0]
 8019da6:	2214      	movs	r2, #20
 8019da8:	4353      	muls	r3, r2
 8019daa:	58c8      	ldr	r0, [r1, r3]
 8019dac:	4770      	bx	lr
 8019dae:	4a0d      	ldr	r2, [pc, #52]	@ (8019de4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8019db0:	8812      	ldrh	r2, [r2, #0]
 8019db2:	440a      	add	r2, r1
 8019db4:	4293      	cmp	r3, r2
 8019db6:	da04      	bge.n	8019dc2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8019db8:	4a08      	ldr	r2, [pc, #32]	@ (8019ddc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019dba:	6812      	ldr	r2, [r2, #0]
 8019dbc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019dc0:	4770      	bx	lr
 8019dc2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8019dc6:	4293      	cmp	r3, r2
 8019dc8:	d103      	bne.n	8019dd2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8019dca:	4b07      	ldr	r3, [pc, #28]	@ (8019de8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8019dcc:	681b      	ldr	r3, [r3, #0]
 8019dce:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8019dd0:	4770      	bx	lr
 8019dd2:	2000      	movs	r0, #0
 8019dd4:	4770      	bx	lr
 8019dd6:	bf00      	nop
 8019dd8:	20013fe8 	.word	0x20013fe8
 8019ddc:	20013fcc 	.word	0x20013fcc
 8019de0:	20013ff0 	.word	0x20013ff0
 8019de4:	20013fec 	.word	0x20013fec
 8019de8:	20013f60 	.word	0x20013f60

08019dec <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8019dec:	4b24      	ldr	r3, [pc, #144]	@ (8019e80 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8019dee:	8802      	ldrh	r2, [r0, #0]
 8019df0:	8818      	ldrh	r0, [r3, #0]
 8019df2:	4282      	cmp	r2, r0
 8019df4:	d221      	bcs.n	8019e3a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8019df6:	4b23      	ldr	r3, [pc, #140]	@ (8019e84 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019df8:	6819      	ldr	r1, [r3, #0]
 8019dfa:	2314      	movs	r3, #20
 8019dfc:	fb03 1302 	mla	r3, r3, r2, r1
 8019e00:	6858      	ldr	r0, [r3, #4]
 8019e02:	2800      	cmp	r0, #0
 8019e04:	d03a      	beq.n	8019e7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019e06:	4920      	ldr	r1, [pc, #128]	@ (8019e88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019e08:	6809      	ldr	r1, [r1, #0]
 8019e0a:	2900      	cmp	r1, #0
 8019e0c:	d036      	beq.n	8019e7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019e0e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019e12:	2900      	cmp	r1, #0
 8019e14:	d032      	beq.n	8019e7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019e16:	891a      	ldrh	r2, [r3, #8]
 8019e18:	8958      	ldrh	r0, [r3, #10]
 8019e1a:	4350      	muls	r0, r2
 8019e1c:	7c5a      	ldrb	r2, [r3, #17]
 8019e1e:	7cdb      	ldrb	r3, [r3, #19]
 8019e20:	0952      	lsrs	r2, r2, #5
 8019e22:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019e26:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8019e2a:	2b0b      	cmp	r3, #11
 8019e2c:	bf18      	it	ne
 8019e2e:	0040      	lslne	r0, r0, #1
 8019e30:	3003      	adds	r0, #3
 8019e32:	f020 0003 	bic.w	r0, r0, #3
 8019e36:	4408      	add	r0, r1
 8019e38:	4770      	bx	lr
 8019e3a:	4b14      	ldr	r3, [pc, #80]	@ (8019e8c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8019e3c:	881b      	ldrh	r3, [r3, #0]
 8019e3e:	4403      	add	r3, r0
 8019e40:	429a      	cmp	r2, r3
 8019e42:	da1a      	bge.n	8019e7a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019e44:	4b12      	ldr	r3, [pc, #72]	@ (8019e90 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019e46:	681b      	ldr	r3, [r3, #0]
 8019e48:	1a10      	subs	r0, r2, r0
 8019e4a:	210e      	movs	r1, #14
 8019e4c:	fb01 3000 	mla	r0, r1, r0, r3
 8019e50:	7b03      	ldrb	r3, [r0, #12]
 8019e52:	f003 031f 	and.w	r3, r3, #31
 8019e56:	2b0b      	cmp	r3, #11
 8019e58:	d10b      	bne.n	8019e72 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8019e5a:	8903      	ldrh	r3, [r0, #8]
 8019e5c:	8940      	ldrh	r0, [r0, #10]
 8019e5e:	4358      	muls	r0, r3
 8019e60:	4b09      	ldr	r3, [pc, #36]	@ (8019e88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019e62:	6819      	ldr	r1, [r3, #0]
 8019e64:	3003      	adds	r0, #3
 8019e66:	f020 0303 	bic.w	r3, r0, #3
 8019e6a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8019e6e:	4418      	add	r0, r3
 8019e70:	4770      	bx	lr
 8019e72:	2b0d      	cmp	r3, #13
 8019e74:	d101      	bne.n	8019e7a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019e76:	300d      	adds	r0, #13
 8019e78:	4770      	bx	lr
 8019e7a:	2000      	movs	r0, #0
 8019e7c:	4770      	bx	lr
 8019e7e:	bf00      	nop
 8019e80:	20013fe8 	.word	0x20013fe8
 8019e84:	20013ff0 	.word	0x20013ff0
 8019e88:	20013fcc 	.word	0x20013fcc
 8019e8c:	20013fec 	.word	0x20013fec
 8019e90:	20013fd0 	.word	0x20013fd0

08019e94 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019e94:	b510      	push	{r4, lr}
 8019e96:	4b1f      	ldr	r3, [pc, #124]	@ (8019f14 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8019e98:	8802      	ldrh	r2, [r0, #0]
 8019e9a:	881b      	ldrh	r3, [r3, #0]
 8019e9c:	429a      	cmp	r2, r3
 8019e9e:	d21a      	bcs.n	8019ed6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8019ea0:	4b1d      	ldr	r3, [pc, #116]	@ (8019f18 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8019ea2:	681b      	ldr	r3, [r3, #0]
 8019ea4:	2114      	movs	r1, #20
 8019ea6:	fb01 3102 	mla	r1, r1, r2, r3
 8019eaa:	7c4b      	ldrb	r3, [r1, #17]
 8019eac:	0958      	lsrs	r0, r3, #5
 8019eae:	7ccb      	ldrb	r3, [r1, #19]
 8019eb0:	491a      	ldr	r1, [pc, #104]	@ (8019f1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8019eb2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019eb6:	6809      	ldr	r1, [r1, #0]
 8019eb8:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8019ebc:	b2d8      	uxtb	r0, r3
 8019ebe:	b149      	cbz	r1, 8019ed4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8019ec0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8019ec4:	b132      	cbz	r2, 8019ed4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8019ec6:	2b0e      	cmp	r3, #14
 8019ec8:	d021      	beq.n	8019f0e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8019eca:	280f      	cmp	r0, #15
 8019ecc:	d01d      	beq.n	8019f0a <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8019ece:	2810      	cmp	r0, #16
 8019ed0:	bf08      	it	eq
 8019ed2:	2002      	moveq	r0, #2
 8019ed4:	bd10      	pop	{r4, pc}
 8019ed6:	4912      	ldr	r1, [pc, #72]	@ (8019f20 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8019ed8:	8809      	ldrh	r1, [r1, #0]
 8019eda:	4419      	add	r1, r3
 8019edc:	428a      	cmp	r2, r1
 8019ede:	da09      	bge.n	8019ef4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8019ee0:	1ad3      	subs	r3, r2, r3
 8019ee2:	4a10      	ldr	r2, [pc, #64]	@ (8019f24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8019ee4:	6812      	ldr	r2, [r2, #0]
 8019ee6:	210e      	movs	r1, #14
 8019ee8:	fb01 2303 	mla	r3, r1, r3, r2
 8019eec:	7b18      	ldrb	r0, [r3, #12]
 8019eee:	f000 001f 	and.w	r0, r0, #31
 8019ef2:	e7ef      	b.n	8019ed4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8019ef4:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8019ef8:	429a      	cmp	r2, r3
 8019efa:	d108      	bne.n	8019f0e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8019efc:	f7ea f8f6 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 8019f00:	6803      	ldr	r3, [r0, #0]
 8019f02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019f06:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019f08:	4718      	bx	r3
 8019f0a:	2001      	movs	r0, #1
 8019f0c:	e7e2      	b.n	8019ed4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8019f0e:	2000      	movs	r0, #0
 8019f10:	e7e0      	b.n	8019ed4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8019f12:	bf00      	nop
 8019f14:	20013fe8 	.word	0x20013fe8
 8019f18:	20013ff0 	.word	0x20013ff0
 8019f1c:	20013fcc 	.word	0x20013fcc
 8019f20:	20013fec 	.word	0x20013fec
 8019f24:	20013fd0 	.word	0x20013fd0

08019f28 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019f28:	2010      	movs	r0, #16
 8019f2a:	4770      	bx	lr

08019f2c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019f2c:	2000      	movs	r0, #0
 8019f2e:	4770      	bx	lr

08019f30 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8019f30:	4b02      	ldr	r3, [pc, #8]	@ (8019f3c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8019f32:	8818      	ldrh	r0, [r3, #0]
 8019f34:	0040      	lsls	r0, r0, #1
 8019f36:	b280      	uxth	r0, r0
 8019f38:	4770      	bx	lr
 8019f3a:	bf00      	nop
 8019f3c:	20013f5a 	.word	0x20013f5a

08019f40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019f40:	2bff      	cmp	r3, #255	@ 0xff
 8019f42:	d05e      	beq.n	801a002 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8019f44:	2a0b      	cmp	r2, #11
 8019f46:	d058      	beq.n	8019ffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8019f48:	d80e      	bhi.n	8019f68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019f4a:	2a03      	cmp	r2, #3
 8019f4c:	d04d      	beq.n	8019fea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8019f4e:	d804      	bhi.n	8019f5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8019f50:	2a01      	cmp	r2, #1
 8019f52:	d04c      	beq.n	8019fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8019f54:	d94d      	bls.n	8019ff2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8019f56:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8019f58:	e031      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019f5a:	2a09      	cmp	r2, #9
 8019f5c:	d04d      	beq.n	8019ffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8019f5e:	d84a      	bhi.n	8019ff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8019f60:	2a08      	cmp	r2, #8
 8019f62:	d048      	beq.n	8019ff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8019f64:	2300      	movs	r3, #0
 8019f66:	e02a      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019f68:	2a2f      	cmp	r2, #47	@ 0x2f
 8019f6a:	d02c      	beq.n	8019fc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8019f6c:	d811      	bhi.n	8019f92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8019f6e:	2a2d      	cmp	r2, #45	@ 0x2d
 8019f70:	d018      	beq.n	8019fa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8019f72:	d831      	bhi.n	8019fd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8019f74:	2a2c      	cmp	r2, #44	@ 0x2c
 8019f76:	d1f5      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019f78:	684a      	ldr	r2, [r1, #4]
 8019f7a:	7813      	ldrb	r3, [r2, #0]
 8019f7c:	7852      	ldrb	r2, [r2, #1]
 8019f7e:	2a00      	cmp	r2, #0
 8019f80:	d1f0      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019f82:	2b01      	cmp	r3, #1
 8019f84:	d01d      	beq.n	8019fc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019f86:	2b00      	cmp	r3, #0
 8019f88:	d02d      	beq.n	8019fe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019f8a:	2b02      	cmp	r3, #2
 8019f8c:	d1ea      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019f8e:	68c3      	ldr	r3, [r0, #12]
 8019f90:	e015      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019f92:	2a31      	cmp	r2, #49	@ 0x31
 8019f94:	d004      	beq.n	8019fa0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8019f96:	d332      	bcc.n	8019ffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8019f98:	2a32      	cmp	r2, #50	@ 0x32
 8019f9a:	d030      	beq.n	8019ffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8019f9c:	2a33      	cmp	r2, #51	@ 0x33
 8019f9e:	d1e1      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019fa0:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8019fa2:	e00c      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019fa4:	684a      	ldr	r2, [r1, #4]
 8019fa6:	7813      	ldrb	r3, [r2, #0]
 8019fa8:	7852      	ldrb	r2, [r2, #1]
 8019faa:	2a00      	cmp	r2, #0
 8019fac:	d1da      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019fae:	2b01      	cmp	r3, #1
 8019fb0:	d004      	beq.n	8019fbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8019fb2:	d30f      	bcc.n	8019fd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8019fb4:	2b02      	cmp	r3, #2
 8019fb6:	d1d5      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019fb8:	6943      	ldr	r3, [r0, #20]
 8019fba:	e000      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019fbc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8019fbe:	4618      	mov	r0, r3
 8019fc0:	4770      	bx	lr
 8019fc2:	69c3      	ldr	r3, [r0, #28]
 8019fc4:	e7fb      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019fc6:	684b      	ldr	r3, [r1, #4]
 8019fc8:	781a      	ldrb	r2, [r3, #0]
 8019fca:	785b      	ldrb	r3, [r3, #1]
 8019fcc:	2b00      	cmp	r3, #0
 8019fce:	d1c9      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019fd0:	2a00      	cmp	r2, #0
 8019fd2:	d1f4      	bne.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019fd4:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8019fd6:	e7f2      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019fd8:	684b      	ldr	r3, [r1, #4]
 8019fda:	781a      	ldrb	r2, [r3, #0]
 8019fdc:	785b      	ldrb	r3, [r3, #1]
 8019fde:	2b00      	cmp	r3, #0
 8019fe0:	d1c0      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019fe2:	2a00      	cmp	r2, #0
 8019fe4:	d1eb      	bne.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019fe6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8019fe8:	e7e9      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019fea:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8019fec:	e7e7      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019fee:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8019ff0:	e7e5      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019ff2:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8019ff4:	e7e3      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019ff6:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8019ff8:	e7e1      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019ffa:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8019ffc:	e7df      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019ffe:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 801a000:	e7dd      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a002:	2a0b      	cmp	r2, #11
 801a004:	d059      	beq.n	801a0ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801a006:	d80e      	bhi.n	801a026 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 801a008:	2a03      	cmp	r2, #3
 801a00a:	d050      	beq.n	801a0ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 801a00c:	d804      	bhi.n	801a018 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 801a00e:	2a01      	cmp	r2, #1
 801a010:	d04f      	beq.n	801a0b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 801a012:	d950      	bls.n	801a0b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 801a014:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801a016:	e7d2      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a018:	2a09      	cmp	r2, #9
 801a01a:	d04e      	beq.n	801a0ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801a01c:	d801      	bhi.n	801a022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 801a01e:	2a08      	cmp	r2, #8
 801a020:	d1a0      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a022:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 801a024:	e7cb      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a026:	2a2f      	cmp	r2, #47	@ 0x2f
 801a028:	d02d      	beq.n	801a086 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 801a02a:	d811      	bhi.n	801a050 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801a02c:	2a2d      	cmp	r2, #45	@ 0x2d
 801a02e:	d018      	beq.n	801a062 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 801a030:	d833      	bhi.n	801a09a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 801a032:	2a2c      	cmp	r2, #44	@ 0x2c
 801a034:	d196      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a036:	684a      	ldr	r2, [r1, #4]
 801a038:	7813      	ldrb	r3, [r2, #0]
 801a03a:	7852      	ldrb	r2, [r2, #1]
 801a03c:	2a00      	cmp	r2, #0
 801a03e:	d191      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a040:	2b01      	cmp	r3, #1
 801a042:	d01e      	beq.n	801a082 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a044:	2b00      	cmp	r3, #0
 801a046:	d030      	beq.n	801a0aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 801a048:	2b02      	cmp	r3, #2
 801a04a:	d18b      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a04c:	6903      	ldr	r3, [r0, #16]
 801a04e:	e7b6      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a050:	2a31      	cmp	r2, #49	@ 0x31
 801a052:	d004      	beq.n	801a05e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 801a054:	d333      	bcc.n	801a0be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801a056:	2a32      	cmp	r2, #50	@ 0x32
 801a058:	d031      	beq.n	801a0be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801a05a:	2a33      	cmp	r2, #51	@ 0x33
 801a05c:	d182      	bne.n	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a05e:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 801a060:	e7ad      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a062:	684a      	ldr	r2, [r1, #4]
 801a064:	7813      	ldrb	r3, [r2, #0]
 801a066:	7852      	ldrb	r2, [r2, #1]
 801a068:	2a00      	cmp	r2, #0
 801a06a:	f47f af7b 	bne.w	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a06e:	2b01      	cmp	r3, #1
 801a070:	d005      	beq.n	801a07e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a072:	d310      	bcc.n	801a096 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 801a074:	2b02      	cmp	r3, #2
 801a076:	f47f af75 	bne.w	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a07a:	6983      	ldr	r3, [r0, #24]
 801a07c:	e79f      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a07e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801a080:	e79d      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a082:	6a03      	ldr	r3, [r0, #32]
 801a084:	e79b      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a086:	684b      	ldr	r3, [r1, #4]
 801a088:	781a      	ldrb	r2, [r3, #0]
 801a08a:	785b      	ldrb	r3, [r3, #1]
 801a08c:	2b00      	cmp	r3, #0
 801a08e:	f47f af69 	bne.w	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a092:	2a00      	cmp	r2, #0
 801a094:	d193      	bne.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a096:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801a098:	e791      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a09a:	684b      	ldr	r3, [r1, #4]
 801a09c:	781a      	ldrb	r2, [r3, #0]
 801a09e:	785b      	ldrb	r3, [r3, #1]
 801a0a0:	2b00      	cmp	r3, #0
 801a0a2:	f47f af5f 	bne.w	8019f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a0a6:	2a00      	cmp	r2, #0
 801a0a8:	d189      	bne.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a0aa:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801a0ac:	e787      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a0ae:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 801a0b0:	e785      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a0b2:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 801a0b4:	e783      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a0b6:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801a0b8:	e781      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a0ba:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 801a0bc:	e77f      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a0be:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 801a0c0:	e77d      	b.n	8019fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

0801a0c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a0c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0c6:	b087      	sub	sp, #28
 801a0c8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a0ca:	9205      	str	r2, [sp, #20]
 801a0cc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801a0d0:	9202      	str	r2, [sp, #8]
 801a0d2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801a0d6:	9101      	str	r1, [sp, #4]
 801a0d8:	6841      	ldr	r1, [r0, #4]
 801a0da:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801a0de:	fb01 2404 	mla	r4, r1, r4, r2
 801a0e2:	6802      	ldr	r2, [r0, #0]
 801a0e4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a0e8:	f8de 2000 	ldr.w	r2, [lr]
 801a0ec:	9203      	str	r2, [sp, #12]
 801a0ee:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a0f2:	3204      	adds	r2, #4
 801a0f4:	9204      	str	r2, [sp, #16]
 801a0f6:	9a02      	ldr	r2, [sp, #8]
 801a0f8:	43d6      	mvns	r6, r2
 801a0fa:	b2f6      	uxtb	r6, r6
 801a0fc:	9a01      	ldr	r2, [sp, #4]
 801a0fe:	2a00      	cmp	r2, #0
 801a100:	dc03      	bgt.n	801a10a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a102:	9a05      	ldr	r2, [sp, #20]
 801a104:	2a00      	cmp	r2, #0
 801a106:	f340 8129 	ble.w	801a35c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a10a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a10c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a110:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a114:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801a118:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a11a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801a11e:	2b00      	cmp	r3, #0
 801a120:	dd0e      	ble.n	801a140 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a122:	1408      	asrs	r0, r1, #16
 801a124:	d405      	bmi.n	801a132 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a126:	4560      	cmp	r0, ip
 801a128:	da03      	bge.n	801a132 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a12a:	1410      	asrs	r0, r2, #16
 801a12c:	d401      	bmi.n	801a132 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a12e:	42b8      	cmp	r0, r7
 801a130:	db07      	blt.n	801a142 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a132:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a134:	4401      	add	r1, r0
 801a136:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801a138:	3b01      	subs	r3, #1
 801a13a:	4402      	add	r2, r0
 801a13c:	3402      	adds	r4, #2
 801a13e:	e7ee      	b.n	801a11e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a140:	d071      	beq.n	801a226 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a142:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a144:	1e58      	subs	r0, r3, #1
 801a146:	fb05 1500 	mla	r5, r5, r0, r1
 801a14a:	142d      	asrs	r5, r5, #16
 801a14c:	d45f      	bmi.n	801a20e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a14e:	4565      	cmp	r5, ip
 801a150:	da5d      	bge.n	801a20e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a152:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801a154:	fb05 2000 	mla	r0, r5, r0, r2
 801a158:	1400      	asrs	r0, r0, #16
 801a15a:	d458      	bmi.n	801a20e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a15c:	42b8      	cmp	r0, r7
 801a15e:	da56      	bge.n	801a20e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a160:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801a164:	4699      	mov	r9, r3
 801a166:	46a2      	mov	sl, r4
 801a168:	f1b9 0f00 	cmp.w	r9, #0
 801a16c:	dd57      	ble.n	801a21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801a16e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a172:	9803      	ldr	r0, [sp, #12]
 801a174:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801a178:	140d      	asrs	r5, r1, #16
 801a17a:	fb07 000c 	mla	r0, r7, ip, r0
 801a17e:	f109 39ff 	add.w	r9, r9, #4294967295
 801a182:	5d40      	ldrb	r0, [r0, r5]
 801a184:	9d04      	ldr	r5, [sp, #16]
 801a186:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a18a:	f8ba 5000 	ldrh.w	r5, [sl]
 801a18e:	122f      	asrs	r7, r5, #8
 801a190:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a194:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a198:	fb17 f706 	smulbb	r7, r7, r6
 801a19c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a1a0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a1a4:	00ed      	lsls	r5, r5, #3
 801a1a6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a1aa:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801a1ae:	10c7      	asrs	r7, r0, #3
 801a1b0:	b2ed      	uxtb	r5, r5
 801a1b2:	00c0      	lsls	r0, r0, #3
 801a1b4:	fb18 f806 	smulbb	r8, r8, r6
 801a1b8:	fb15 f506 	smulbb	r5, r5, r6
 801a1bc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a1c0:	b2c0      	uxtb	r0, r0
 801a1c2:	fa1f fc8c 	uxth.w	ip, ip
 801a1c6:	fb07 870b 	mla	r7, r7, fp, r8
 801a1ca:	fb00 500b 	mla	r0, r0, fp, r5
 801a1ce:	b280      	uxth	r0, r0
 801a1d0:	b2bf      	uxth	r7, r7
 801a1d2:	f10c 0501 	add.w	r5, ip, #1
 801a1d6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a1da:	f107 0801 	add.w	r8, r7, #1
 801a1de:	1c45      	adds	r5, r0, #1
 801a1e0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a1e4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a1e8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a1ea:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a1ee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a1f2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a1f6:	ea45 0c0c 	orr.w	ip, r5, ip
 801a1fa:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801a1fe:	4401      	add	r1, r0
 801a200:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801a202:	ea4c 0c08 	orr.w	ip, ip, r8
 801a206:	f82a cb02 	strh.w	ip, [sl], #2
 801a20a:	4402      	add	r2, r0
 801a20c:	e7ac      	b.n	801a168 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a20e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801a212:	f04f 0800 	mov.w	r8, #0
 801a216:	eb03 0008 	add.w	r0, r3, r8
 801a21a:	2800      	cmp	r0, #0
 801a21c:	dc41      	bgt.n	801a2a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a21e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a222:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a226:	9b01      	ldr	r3, [sp, #4]
 801a228:	2b00      	cmp	r3, #0
 801a22a:	f340 8097 	ble.w	801a35c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a22e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a232:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a236:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a23a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a23c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a240:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a244:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a248:	eef0 6a62 	vmov.f32	s13, s5
 801a24c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a250:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a254:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a258:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801a25c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a260:	eef0 6a43 	vmov.f32	s13, s6
 801a264:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a268:	ee12 2a90 	vmov	r2, s5
 801a26c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a270:	fb92 f3f3 	sdiv	r3, r2, r3
 801a274:	ee13 2a10 	vmov	r2, s6
 801a278:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a27a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a27c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a280:	9314      	str	r3, [sp, #80]	@ 0x50
 801a282:	9b01      	ldr	r3, [sp, #4]
 801a284:	9a05      	ldr	r2, [sp, #20]
 801a286:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a28a:	3b01      	subs	r3, #1
 801a28c:	9301      	str	r3, [sp, #4]
 801a28e:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801a292:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a294:	eeb0 3a67 	vmov.f32	s6, s15
 801a298:	bf08      	it	eq
 801a29a:	4613      	moveq	r3, r2
 801a29c:	eef0 2a47 	vmov.f32	s5, s14
 801a2a0:	e72c      	b.n	801a0fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a2a2:	140f      	asrs	r7, r1, #16
 801a2a4:	d453      	bmi.n	801a34e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a2a6:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a2aa:	42bd      	cmp	r5, r7
 801a2ac:	dd4f      	ble.n	801a34e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a2ae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a2b2:	d44c      	bmi.n	801a34e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a2b4:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a2b8:	4560      	cmp	r0, ip
 801a2ba:	dd48      	ble.n	801a34e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a2bc:	9803      	ldr	r0, [sp, #12]
 801a2be:	b22d      	sxth	r5, r5
 801a2c0:	fb0c 0505 	mla	r5, ip, r5, r0
 801a2c4:	5de8      	ldrb	r0, [r5, r7]
 801a2c6:	9d04      	ldr	r5, [sp, #16]
 801a2c8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a2cc:	f06f 0501 	mvn.w	r5, #1
 801a2d0:	fb05 fb08 	mul.w	fp, r5, r8
 801a2d4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a2d8:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a2dc:	122f      	asrs	r7, r5, #8
 801a2de:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a2e2:	fb17 f706 	smulbb	r7, r7, r6
 801a2e6:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a2ea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a2ee:	00ed      	lsls	r5, r5, #3
 801a2f0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a2f4:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801a2f8:	10c7      	asrs	r7, r0, #3
 801a2fa:	b2ed      	uxtb	r5, r5
 801a2fc:	00c0      	lsls	r0, r0, #3
 801a2fe:	fb19 f906 	smulbb	r9, r9, r6
 801a302:	fb15 f506 	smulbb	r5, r5, r6
 801a306:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a30a:	b2c0      	uxtb	r0, r0
 801a30c:	fa1f fc8c 	uxth.w	ip, ip
 801a310:	fb07 970a 	mla	r7, r7, sl, r9
 801a314:	fb00 500a 	mla	r0, r0, sl, r5
 801a318:	b2bf      	uxth	r7, r7
 801a31a:	b280      	uxth	r0, r0
 801a31c:	f10c 0501 	add.w	r5, ip, #1
 801a320:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a324:	f107 0901 	add.w	r9, r7, #1
 801a328:	1c45      	adds	r5, r0, #1
 801a32a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a32e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a332:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a336:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a33a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a33e:	ea45 0c0c 	orr.w	ip, r5, ip
 801a342:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a346:	ea4c 0c09 	orr.w	ip, ip, r9
 801a34a:	f824 c00b 	strh.w	ip, [r4, fp]
 801a34e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a350:	4401      	add	r1, r0
 801a352:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801a354:	f108 38ff 	add.w	r8, r8, #4294967295
 801a358:	4402      	add	r2, r0
 801a35a:	e75c      	b.n	801a216 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801a35c:	b007      	add	sp, #28
 801a35e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a362:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a366:	b085      	sub	sp, #20
 801a368:	4693      	mov	fp, r2
 801a36a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801a36c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801a36e:	6870      	ldr	r0, [r6, #4]
 801a370:	9100      	str	r1, [sp, #0]
 801a372:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801a376:	fb00 2404 	mla	r4, r0, r4, r2
 801a37a:	6832      	ldr	r2, [r6, #0]
 801a37c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a380:	682a      	ldr	r2, [r5, #0]
 801a382:	9201      	str	r2, [sp, #4]
 801a384:	686a      	ldr	r2, [r5, #4]
 801a386:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801a38a:	3204      	adds	r2, #4
 801a38c:	9202      	str	r2, [sp, #8]
 801a38e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a392:	9a00      	ldr	r2, [sp, #0]
 801a394:	2a00      	cmp	r2, #0
 801a396:	dc03      	bgt.n	801a3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a398:	f1bb 0f00 	cmp.w	fp, #0
 801a39c:	f340 80a0 	ble.w	801a4e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a3a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a3a2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a3a6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a3aa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801a3ae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a3b0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801a3b4:	2b00      	cmp	r3, #0
 801a3b6:	dd0c      	ble.n	801a3d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a3b8:	1406      	asrs	r6, r0, #16
 801a3ba:	d405      	bmi.n	801a3c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3bc:	454e      	cmp	r6, r9
 801a3be:	da03      	bge.n	801a3c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3c0:	1416      	asrs	r6, r2, #16
 801a3c2:	d401      	bmi.n	801a3c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3c4:	4546      	cmp	r6, r8
 801a3c6:	db05      	blt.n	801a3d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a3c8:	4470      	add	r0, lr
 801a3ca:	4462      	add	r2, ip
 801a3cc:	3b01      	subs	r3, #1
 801a3ce:	3402      	adds	r4, #2
 801a3d0:	e7f0      	b.n	801a3b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a3d2:	d00f      	beq.n	801a3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a3d4:	1e5e      	subs	r6, r3, #1
 801a3d6:	fb0e 0706 	mla	r7, lr, r6, r0
 801a3da:	143f      	asrs	r7, r7, #16
 801a3dc:	d541      	bpl.n	801a462 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801a3de:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a3e2:	4698      	mov	r8, r3
 801a3e4:	9603      	str	r6, [sp, #12]
 801a3e6:	f1b8 0f00 	cmp.w	r8, #0
 801a3ea:	dc59      	bgt.n	801a4a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a3ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a3f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a3f4:	9b00      	ldr	r3, [sp, #0]
 801a3f6:	2b00      	cmp	r3, #0
 801a3f8:	dd72      	ble.n	801a4e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a3fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a3fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a402:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a406:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a408:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a40c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a410:	eeb0 6a62 	vmov.f32	s12, s5
 801a414:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a418:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a41c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a420:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801a424:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a428:	eeb0 6a43 	vmov.f32	s12, s6
 801a42c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a430:	ee12 2a90 	vmov	r2, s5
 801a434:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a438:	fb92 fef3 	sdiv	lr, r2, r3
 801a43c:	ee13 2a10 	vmov	r2, s6
 801a440:	fb92 fcf3 	sdiv	ip, r2, r3
 801a444:	9b00      	ldr	r3, [sp, #0]
 801a446:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a44a:	3b01      	subs	r3, #1
 801a44c:	9300      	str	r3, [sp, #0]
 801a44e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801a452:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a454:	eeb0 3a67 	vmov.f32	s6, s15
 801a458:	bf08      	it	eq
 801a45a:	465b      	moveq	r3, fp
 801a45c:	eef0 2a47 	vmov.f32	s5, s14
 801a460:	e797      	b.n	801a392 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a462:	454f      	cmp	r7, r9
 801a464:	dabb      	bge.n	801a3de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a466:	fb0c 2606 	mla	r6, ip, r6, r2
 801a46a:	1436      	asrs	r6, r6, #16
 801a46c:	d4b7      	bmi.n	801a3de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a46e:	4546      	cmp	r6, r8
 801a470:	dab5      	bge.n	801a3de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a472:	461e      	mov	r6, r3
 801a474:	46a0      	mov	r8, r4
 801a476:	2e00      	cmp	r6, #0
 801a478:	ddb8      	ble.n	801a3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a47a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a47e:	9901      	ldr	r1, [sp, #4]
 801a480:	1417      	asrs	r7, r2, #16
 801a482:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a486:	fb0a 1707 	mla	r7, sl, r7, r1
 801a48a:	9902      	ldr	r1, [sp, #8]
 801a48c:	f817 7009 	ldrb.w	r7, [r7, r9]
 801a490:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a494:	f828 7b02 	strh.w	r7, [r8], #2
 801a498:	4470      	add	r0, lr
 801a49a:	4462      	add	r2, ip
 801a49c:	3e01      	subs	r6, #1
 801a49e:	e7ea      	b.n	801a476 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801a4a0:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a4a4:	d417      	bmi.n	801a4d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a4a6:	68ae      	ldr	r6, [r5, #8]
 801a4a8:	454e      	cmp	r6, r9
 801a4aa:	dd14      	ble.n	801a4d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a4ac:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a4b0:	d411      	bmi.n	801a4d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a4b2:	68ef      	ldr	r7, [r5, #12]
 801a4b4:	4557      	cmp	r7, sl
 801a4b6:	dd0e      	ble.n	801a4d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a4b8:	9f01      	ldr	r7, [sp, #4]
 801a4ba:	b236      	sxth	r6, r6
 801a4bc:	fb0a 7606 	mla	r6, sl, r6, r7
 801a4c0:	9f02      	ldr	r7, [sp, #8]
 801a4c2:	f816 6009 	ldrb.w	r6, [r6, r9]
 801a4c6:	f06f 0101 	mvn.w	r1, #1
 801a4ca:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a4ce:	fb01 f608 	mul.w	r6, r1, r8
 801a4d2:	9903      	ldr	r1, [sp, #12]
 801a4d4:	538f      	strh	r7, [r1, r6]
 801a4d6:	4470      	add	r0, lr
 801a4d8:	4462      	add	r2, ip
 801a4da:	f108 38ff 	add.w	r8, r8, #4294967295
 801a4de:	e782      	b.n	801a3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a4e0:	b005      	add	sp, #20
 801a4e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a4e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a4e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4ea:	b087      	sub	sp, #28
 801a4ec:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801a4ee:	9205      	str	r2, [sp, #20]
 801a4f0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801a4f4:	9203      	str	r2, [sp, #12]
 801a4f6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801a4fa:	9102      	str	r1, [sp, #8]
 801a4fc:	6861      	ldr	r1, [r4, #4]
 801a4fe:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801a502:	fb01 2000 	mla	r0, r1, r0, r2
 801a506:	6822      	ldr	r2, [r4, #0]
 801a508:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801a50c:	9200      	str	r2, [sp, #0]
 801a50e:	f8dc 2000 	ldr.w	r2, [ip]
 801a512:	9204      	str	r2, [sp, #16]
 801a514:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a518:	3204      	adds	r2, #4
 801a51a:	9201      	str	r2, [sp, #4]
 801a51c:	9a03      	ldr	r2, [sp, #12]
 801a51e:	43d5      	mvns	r5, r2
 801a520:	b2ed      	uxtb	r5, r5
 801a522:	9a02      	ldr	r2, [sp, #8]
 801a524:	2a00      	cmp	r2, #0
 801a526:	dc03      	bgt.n	801a530 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a528:	9a05      	ldr	r2, [sp, #20]
 801a52a:	2a00      	cmp	r2, #0
 801a52c:	f340 812c 	ble.w	801a788 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a530:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a532:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a536:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801a53a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801a53e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a540:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801a544:	2b00      	cmp	r3, #0
 801a546:	dd10      	ble.n	801a56a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a548:	140c      	asrs	r4, r1, #16
 801a54a:	d405      	bmi.n	801a558 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a54c:	4574      	cmp	r4, lr
 801a54e:	da03      	bge.n	801a558 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a550:	1414      	asrs	r4, r2, #16
 801a552:	d401      	bmi.n	801a558 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a554:	42bc      	cmp	r4, r7
 801a556:	db09      	blt.n	801a56c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a558:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a55a:	9800      	ldr	r0, [sp, #0]
 801a55c:	4421      	add	r1, r4
 801a55e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a560:	3002      	adds	r0, #2
 801a562:	4422      	add	r2, r4
 801a564:	3b01      	subs	r3, #1
 801a566:	9000      	str	r0, [sp, #0]
 801a568:	e7ec      	b.n	801a544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a56a:	d071      	beq.n	801a650 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a56c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801a56e:	1e5c      	subs	r4, r3, #1
 801a570:	fb06 1604 	mla	r6, r6, r4, r1
 801a574:	1436      	asrs	r6, r6, #16
 801a576:	d45d      	bmi.n	801a634 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a578:	4576      	cmp	r6, lr
 801a57a:	da5b      	bge.n	801a634 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a57c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801a57e:	fb06 2404 	mla	r4, r6, r4, r2
 801a582:	1424      	asrs	r4, r4, #16
 801a584:	d456      	bmi.n	801a634 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a586:	42bc      	cmp	r4, r7
 801a588:	da54      	bge.n	801a634 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a58a:	f8dd 9000 	ldr.w	r9, [sp]
 801a58e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a592:	4698      	mov	r8, r3
 801a594:	f1b8 0f00 	cmp.w	r8, #0
 801a598:	dd54      	ble.n	801a644 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a59a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a59e:	9804      	ldr	r0, [sp, #16]
 801a5a0:	1414      	asrs	r4, r2, #16
 801a5a2:	fb07 0404 	mla	r4, r7, r4, r0
 801a5a6:	140e      	asrs	r6, r1, #16
 801a5a8:	9801      	ldr	r0, [sp, #4]
 801a5aa:	f814 e006 	ldrb.w	lr, [r4, r6]
 801a5ae:	f8b9 4000 	ldrh.w	r4, [r9]
 801a5b2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a5b6:	eb00 0b0e 	add.w	fp, r0, lr
 801a5ba:	1227      	asrs	r7, r4, #8
 801a5bc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a5c0:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a5c4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801a5c8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a5ca:	fb16 f60a 	smulbb	r6, r6, sl
 801a5ce:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a5d2:	fb07 6705 	mla	r7, r7, r5, r6
 801a5d6:	10e6      	asrs	r6, r4, #3
 801a5d8:	00e4      	lsls	r4, r4, #3
 801a5da:	b2e4      	uxtb	r4, r4
 801a5dc:	fb1b fb0a 	smulbb	fp, fp, sl
 801a5e0:	fb14 f405 	smulbb	r4, r4, r5
 801a5e4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a5e8:	b2bf      	uxth	r7, r7
 801a5ea:	fb06 b605 	mla	r6, r6, r5, fp
 801a5ee:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801a5f2:	b2b6      	uxth	r6, r6
 801a5f4:	fa1f fe8e 	uxth.w	lr, lr
 801a5f8:	1c7c      	adds	r4, r7, #1
 801a5fa:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a5fe:	f106 0b01 	add.w	fp, r6, #1
 801a602:	f10e 0401 	add.w	r4, lr, #1
 801a606:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801a60a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a60e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801a612:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a616:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a61a:	4327      	orrs	r7, r4
 801a61c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801a620:	4401      	add	r1, r0
 801a622:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801a624:	ea47 070b 	orr.w	r7, r7, fp
 801a628:	f829 7b02 	strh.w	r7, [r9], #2
 801a62c:	4402      	add	r2, r0
 801a62e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a632:	e7af      	b.n	801a594 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a634:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801a638:	f04f 0e00 	mov.w	lr, #0
 801a63c:	eb03 040e 	add.w	r4, r3, lr
 801a640:	2c00      	cmp	r4, #0
 801a642:	dc43      	bgt.n	801a6cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a644:	9a00      	ldr	r2, [sp, #0]
 801a646:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a64a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a64e:	9300      	str	r3, [sp, #0]
 801a650:	9b02      	ldr	r3, [sp, #8]
 801a652:	2b00      	cmp	r3, #0
 801a654:	f340 8098 	ble.w	801a788 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a658:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a65c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a660:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a664:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a666:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a66a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a66e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a672:	eef0 6a62 	vmov.f32	s13, s5
 801a676:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a67a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a67e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a682:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801a686:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a68a:	eef0 6a43 	vmov.f32	s13, s6
 801a68e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a692:	ee12 2a90 	vmov	r2, s5
 801a696:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a69a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a69e:	ee13 2a10 	vmov	r2, s6
 801a6a2:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a6a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a6a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6aa:	9314      	str	r3, [sp, #80]	@ 0x50
 801a6ac:	9b02      	ldr	r3, [sp, #8]
 801a6ae:	9a05      	ldr	r2, [sp, #20]
 801a6b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6b4:	3b01      	subs	r3, #1
 801a6b6:	9302      	str	r3, [sp, #8]
 801a6b8:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801a6bc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a6be:	eeb0 3a67 	vmov.f32	s6, s15
 801a6c2:	bf08      	it	eq
 801a6c4:	4613      	moveq	r3, r2
 801a6c6:	eef0 2a47 	vmov.f32	s5, s14
 801a6ca:	e72a      	b.n	801a522 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a6cc:	140f      	asrs	r7, r1, #16
 801a6ce:	d454      	bmi.n	801a77a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a6d0:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a6d4:	42be      	cmp	r6, r7
 801a6d6:	dd50      	ble.n	801a77a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a6d8:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a6dc:	d44d      	bmi.n	801a77a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a6de:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a6e2:	4544      	cmp	r4, r8
 801a6e4:	dd49      	ble.n	801a77a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a6e6:	9c04      	ldr	r4, [sp, #16]
 801a6e8:	b236      	sxth	r6, r6
 801a6ea:	fb08 4606 	mla	r6, r8, r6, r4
 801a6ee:	f06f 0001 	mvn.w	r0, #1
 801a6f2:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a6f6:	9c01      	ldr	r4, [sp, #4]
 801a6f8:	fb00 fa0e 	mul.w	sl, r0, lr
 801a6fc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a700:	9800      	ldr	r0, [sp, #0]
 801a702:	eb04 0b08 	add.w	fp, r4, r8
 801a706:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a70a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a70e:	9801      	ldr	r0, [sp, #4]
 801a710:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a714:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a718:	9800      	ldr	r0, [sp, #0]
 801a71a:	1227      	asrs	r7, r4, #8
 801a71c:	fb16 f609 	smulbb	r6, r6, r9
 801a720:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a724:	fb07 6705 	mla	r7, r7, r5, r6
 801a728:	10e6      	asrs	r6, r4, #3
 801a72a:	00e4      	lsls	r4, r4, #3
 801a72c:	b2e4      	uxtb	r4, r4
 801a72e:	fb1b fb09 	smulbb	fp, fp, r9
 801a732:	fb14 f405 	smulbb	r4, r4, r5
 801a736:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a73a:	b2bf      	uxth	r7, r7
 801a73c:	fb06 b605 	mla	r6, r6, r5, fp
 801a740:	fb08 4809 	mla	r8, r8, r9, r4
 801a744:	b2b6      	uxth	r6, r6
 801a746:	fa1f f888 	uxth.w	r8, r8
 801a74a:	1c7c      	adds	r4, r7, #1
 801a74c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a750:	f106 0b01 	add.w	fp, r6, #1
 801a754:	f108 0401 	add.w	r4, r8, #1
 801a758:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a75c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a760:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801a764:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a768:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a76c:	4327      	orrs	r7, r4
 801a76e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801a772:	ea47 070b 	orr.w	r7, r7, fp
 801a776:	f820 700a 	strh.w	r7, [r0, sl]
 801a77a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a77c:	4401      	add	r1, r0
 801a77e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801a780:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a784:	4402      	add	r2, r0
 801a786:	e759      	b.n	801a63c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a788:	b007      	add	sp, #28
 801a78a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a790 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a794:	b085      	sub	sp, #20
 801a796:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a79a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801a79c:	9203      	str	r2, [sp, #12]
 801a79e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801a7a2:	6870      	ldr	r0, [r6, #4]
 801a7a4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801a7a6:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801a7aa:	686f      	ldr	r7, [r5, #4]
 801a7ac:	9101      	str	r1, [sp, #4]
 801a7ae:	fb00 2404 	mla	r4, r0, r4, r2
 801a7b2:	6832      	ldr	r2, [r6, #0]
 801a7b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a7b8:	682a      	ldr	r2, [r5, #0]
 801a7ba:	9202      	str	r2, [sp, #8]
 801a7bc:	3704      	adds	r7, #4
 801a7be:	9a01      	ldr	r2, [sp, #4]
 801a7c0:	2a00      	cmp	r2, #0
 801a7c2:	dc03      	bgt.n	801a7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a7c4:	9a03      	ldr	r2, [sp, #12]
 801a7c6:	2a00      	cmp	r2, #0
 801a7c8:	f340 80cc 	ble.w	801a964 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a7cc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a7ce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a7d2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a7d6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801a7da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a7dc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801a7e0:	2b00      	cmp	r3, #0
 801a7e2:	dd0d      	ble.n	801a800 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a7e4:	1406      	asrs	r6, r0, #16
 801a7e6:	d405      	bmi.n	801a7f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a7e8:	454e      	cmp	r6, r9
 801a7ea:	da03      	bge.n	801a7f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a7ec:	1416      	asrs	r6, r2, #16
 801a7ee:	d401      	bmi.n	801a7f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a7f0:	4546      	cmp	r6, r8
 801a7f2:	db06      	blt.n	801a802 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a7f4:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801a7f6:	4460      	add	r0, ip
 801a7f8:	4432      	add	r2, r6
 801a7fa:	3b01      	subs	r3, #1
 801a7fc:	3402      	adds	r4, #2
 801a7fe:	e7ef      	b.n	801a7e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a800:	d00f      	beq.n	801a822 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a802:	1e5e      	subs	r6, r3, #1
 801a804:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a808:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a80c:	d543      	bpl.n	801a896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a80e:	4698      	mov	r8, r3
 801a810:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a814:	f1b8 0f00 	cmp.w	r8, #0
 801a818:	dc71      	bgt.n	801a8fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a81a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a81e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a822:	9b01      	ldr	r3, [sp, #4]
 801a824:	2b00      	cmp	r3, #0
 801a826:	f340 809d 	ble.w	801a964 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a82a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a82e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a832:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a836:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a838:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a83c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a840:	eeb0 6a62 	vmov.f32	s12, s5
 801a844:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a848:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a84c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a850:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801a854:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a858:	eeb0 6a43 	vmov.f32	s12, s6
 801a85c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a860:	ee12 2a90 	vmov	r2, s5
 801a864:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a868:	fb92 fcf3 	sdiv	ip, r2, r3
 801a86c:	ee13 2a10 	vmov	r2, s6
 801a870:	fb92 f3f3 	sdiv	r3, r2, r3
 801a874:	9312      	str	r3, [sp, #72]	@ 0x48
 801a876:	9b01      	ldr	r3, [sp, #4]
 801a878:	9a03      	ldr	r2, [sp, #12]
 801a87a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a87e:	3b01      	subs	r3, #1
 801a880:	9301      	str	r3, [sp, #4]
 801a882:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801a886:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a888:	eeb0 3a67 	vmov.f32	s6, s15
 801a88c:	bf08      	it	eq
 801a88e:	4613      	moveq	r3, r2
 801a890:	eef0 2a47 	vmov.f32	s5, s14
 801a894:	e793      	b.n	801a7be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a896:	45ce      	cmp	lr, r9
 801a898:	dab9      	bge.n	801a80e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a89a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801a89c:	fb01 2606 	mla	r6, r1, r6, r2
 801a8a0:	1436      	asrs	r6, r6, #16
 801a8a2:	d4b4      	bmi.n	801a80e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a8a4:	4546      	cmp	r6, r8
 801a8a6:	dab2      	bge.n	801a80e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a8a8:	4698      	mov	r8, r3
 801a8aa:	46a2      	mov	sl, r4
 801a8ac:	f1b8 0f00 	cmp.w	r8, #0
 801a8b0:	ddb3      	ble.n	801a81a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a8b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a8b6:	9902      	ldr	r1, [sp, #8]
 801a8b8:	1416      	asrs	r6, r2, #16
 801a8ba:	fb09 1606 	mla	r6, r9, r6, r1
 801a8be:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a8c2:	492a      	ldr	r1, [pc, #168]	@ (801a96c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a8c4:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a8c8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a8cc:	eb07 0b0e 	add.w	fp, r7, lr
 801a8d0:	4460      	add	r0, ip
 801a8d2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a8d6:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a8da:	00f6      	lsls	r6, r6, #3
 801a8dc:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a8e0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a8e4:	ea49 0606 	orr.w	r6, r9, r6
 801a8e8:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a8ec:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801a8ee:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a8f2:	f82a 6b02 	strh.w	r6, [sl], #2
 801a8f6:	440a      	add	r2, r1
 801a8f8:	f108 38ff 	add.w	r8, r8, #4294967295
 801a8fc:	e7d6      	b.n	801a8ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a8fe:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a902:	d429      	bmi.n	801a958 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a904:	68ae      	ldr	r6, [r5, #8]
 801a906:	454e      	cmp	r6, r9
 801a908:	dd26      	ble.n	801a958 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a90a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a90e:	d423      	bmi.n	801a958 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a910:	68e9      	ldr	r1, [r5, #12]
 801a912:	4559      	cmp	r1, fp
 801a914:	dd20      	ble.n	801a958 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a916:	9902      	ldr	r1, [sp, #8]
 801a918:	fa0f fe86 	sxth.w	lr, r6
 801a91c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a920:	f06f 0101 	mvn.w	r1, #1
 801a924:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a928:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a92c:	eb07 060e 	add.w	r6, r7, lr
 801a930:	fb01 f908 	mul.w	r9, r1, r8
 801a934:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a938:	7876      	ldrb	r6, [r6, #1]
 801a93a:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 801a93e:	00f6      	lsls	r6, r6, #3
 801a940:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a944:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a948:	ea4b 0606 	orr.w	r6, fp, r6
 801a94c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a950:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a954:	f82a 6009 	strh.w	r6, [sl, r9]
 801a958:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801a95a:	4460      	add	r0, ip
 801a95c:	440a      	add	r2, r1
 801a95e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a962:	e757      	b.n	801a814 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a964:	b005      	add	sp, #20
 801a966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a96a:	bf00      	nop
 801a96c:	fffff800 	.word	0xfffff800

0801a970 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a974:	b087      	sub	sp, #28
 801a976:	468b      	mov	fp, r1
 801a978:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a97a:	9204      	str	r2, [sp, #16]
 801a97c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801a980:	9205      	str	r2, [sp, #20]
 801a982:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801a986:	6841      	ldr	r1, [r0, #4]
 801a988:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801a98c:	fb01 2404 	mla	r4, r1, r4, r2
 801a990:	6802      	ldr	r2, [r0, #0]
 801a992:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a996:	f8dc 2000 	ldr.w	r2, [ip]
 801a99a:	9201      	str	r2, [sp, #4]
 801a99c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a9a0:	3204      	adds	r2, #4
 801a9a2:	9202      	str	r2, [sp, #8]
 801a9a4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a9a8:	f1bb 0f00 	cmp.w	fp, #0
 801a9ac:	dc03      	bgt.n	801a9b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a9ae:	9a04      	ldr	r2, [sp, #16]
 801a9b0:	2a00      	cmp	r2, #0
 801a9b2:	f340 8138 	ble.w	801ac26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a9b6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a9b8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a9bc:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a9c0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801a9c4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a9c6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801a9ca:	2b00      	cmp	r3, #0
 801a9cc:	dd0e      	ble.n	801a9ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a9ce:	1402      	asrs	r2, r0, #16
 801a9d0:	d405      	bmi.n	801a9de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a9d2:	42ba      	cmp	r2, r7
 801a9d4:	da03      	bge.n	801a9de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a9d6:	140a      	asrs	r2, r1, #16
 801a9d8:	d401      	bmi.n	801a9de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a9da:	42b2      	cmp	r2, r6
 801a9dc:	db07      	blt.n	801a9ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a9de:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a9e0:	4410      	add	r0, r2
 801a9e2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a9e4:	3b01      	subs	r3, #1
 801a9e6:	4411      	add	r1, r2
 801a9e8:	3402      	adds	r4, #2
 801a9ea:	e7ee      	b.n	801a9ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a9ec:	d019      	beq.n	801aa22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a9ee:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a9f0:	1e5a      	subs	r2, r3, #1
 801a9f2:	fb05 0502 	mla	r5, r5, r2, r0
 801a9f6:	142d      	asrs	r5, r5, #16
 801a9f8:	d409      	bmi.n	801aa0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a9fa:	42bd      	cmp	r5, r7
 801a9fc:	da07      	bge.n	801aa0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a9fe:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801aa00:	fb05 1202 	mla	r2, r5, r2, r1
 801aa04:	1412      	asrs	r2, r2, #16
 801aa06:	d402      	bmi.n	801aa0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801aa08:	42b2      	cmp	r2, r6
 801aa0a:	f2c0 80ac 	blt.w	801ab66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801aa0e:	f04f 0e00 	mov.w	lr, #0
 801aa12:	eb03 020e 	add.w	r2, r3, lr
 801aa16:	2a00      	cmp	r2, #0
 801aa18:	dc3e      	bgt.n	801aa98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801aa1a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aa1e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aa22:	f1bb 0f00 	cmp.w	fp, #0
 801aa26:	f340 80fe 	ble.w	801ac26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801aa2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aa2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aa32:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aa36:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aa38:	f1bb 0b01 	subs.w	fp, fp, #1
 801aa3c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa40:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa44:	eeb0 6a62 	vmov.f32	s12, s5
 801aa48:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa50:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa54:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801aa58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa5c:	eeb0 6a43 	vmov.f32	s12, s6
 801aa60:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa64:	ee12 2a90 	vmov	r2, s5
 801aa68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa6c:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa70:	ee13 2a10 	vmov	r2, s6
 801aa74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa78:	9313      	str	r3, [sp, #76]	@ 0x4c
 801aa7a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aa7c:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa80:	9a04      	ldr	r2, [sp, #16]
 801aa82:	9314      	str	r3, [sp, #80]	@ 0x50
 801aa84:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801aa88:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aa8a:	eeb0 3a67 	vmov.f32	s6, s15
 801aa8e:	bf08      	it	eq
 801aa90:	4613      	moveq	r3, r2
 801aa92:	eef0 2a47 	vmov.f32	s5, s14
 801aa96:	e787      	b.n	801a9a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801aa98:	1406      	asrs	r6, r0, #16
 801aa9a:	d45d      	bmi.n	801ab58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801aa9c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801aaa0:	42b5      	cmp	r5, r6
 801aaa2:	dd59      	ble.n	801ab58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801aaa4:	140f      	asrs	r7, r1, #16
 801aaa6:	d457      	bmi.n	801ab58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801aaa8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801aaac:	42ba      	cmp	r2, r7
 801aaae:	dd53      	ble.n	801ab58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801aab0:	9a01      	ldr	r2, [sp, #4]
 801aab2:	b22d      	sxth	r5, r5
 801aab4:	fb07 2505 	mla	r5, r7, r5, r2
 801aab8:	5daa      	ldrb	r2, [r5, r6]
 801aaba:	9d02      	ldr	r5, [sp, #8]
 801aabc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801aac0:	0e2e      	lsrs	r6, r5, #24
 801aac2:	d049      	beq.n	801ab58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801aac4:	f06f 0201 	mvn.w	r2, #1
 801aac8:	fb02 f20e 	mul.w	r2, r2, lr
 801aacc:	9203      	str	r2, [sp, #12]
 801aace:	f834 8002 	ldrh.w	r8, [r4, r2]
 801aad2:	9a05      	ldr	r2, [sp, #20]
 801aad4:	4356      	muls	r6, r2
 801aad6:	1c72      	adds	r2, r6, #1
 801aad8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801aadc:	1212      	asrs	r2, r2, #8
 801aade:	fa1f f982 	uxth.w	r9, r2
 801aae2:	ea4f 2728 	mov.w	r7, r8, asr #8
 801aae6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801aaea:	43d2      	mvns	r2, r2
 801aaec:	b2d2      	uxtb	r2, r2
 801aaee:	fb16 f609 	smulbb	r6, r6, r9
 801aaf2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801aaf6:	fb07 6702 	mla	r7, r7, r2, r6
 801aafa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801aafe:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801ab02:	b2ed      	uxtb	r5, r5
 801ab04:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ab08:	fa5f f888 	uxtb.w	r8, r8
 801ab0c:	fb15 f509 	smulbb	r5, r5, r9
 801ab10:	fb08 5502 	mla	r5, r8, r2, r5
 801ab14:	b2bf      	uxth	r7, r7
 801ab16:	fb1a fa09 	smulbb	sl, sl, r9
 801ab1a:	b2ad      	uxth	r5, r5
 801ab1c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801ab20:	fb06 a602 	mla	r6, r6, r2, sl
 801ab24:	1c7a      	adds	r2, r7, #1
 801ab26:	f105 0a01 	add.w	sl, r5, #1
 801ab2a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ab2e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ab32:	b2b6      	uxth	r6, r6
 801ab34:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab38:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801ab3c:	ea4a 0707 	orr.w	r7, sl, r7
 801ab40:	f106 0a01 	add.w	sl, r6, #1
 801ab44:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ab48:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab4c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801ab50:	9a03      	ldr	r2, [sp, #12]
 801ab52:	ea47 070a 	orr.w	r7, r7, sl
 801ab56:	52a7      	strh	r7, [r4, r2]
 801ab58:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ab5a:	4410      	add	r0, r2
 801ab5c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ab5e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ab62:	4411      	add	r1, r2
 801ab64:	e755      	b.n	801aa12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ab66:	f04f 0800 	mov.w	r8, #0
 801ab6a:	eba3 0208 	sub.w	r2, r3, r8
 801ab6e:	2a00      	cmp	r2, #0
 801ab70:	f77f af53 	ble.w	801aa1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ab74:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801ab78:	9f01      	ldr	r7, [sp, #4]
 801ab7a:	140a      	asrs	r2, r1, #16
 801ab7c:	1405      	asrs	r5, r0, #16
 801ab7e:	fb06 7202 	mla	r2, r6, r2, r7
 801ab82:	5d52      	ldrb	r2, [r2, r5]
 801ab84:	9d02      	ldr	r5, [sp, #8]
 801ab86:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801ab8a:	0e2e      	lsrs	r6, r5, #24
 801ab8c:	d044      	beq.n	801ac18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ab8e:	9a05      	ldr	r2, [sp, #20]
 801ab90:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ab94:	4356      	muls	r6, r2
 801ab96:	1c72      	adds	r2, r6, #1
 801ab98:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801ab9c:	1212      	asrs	r2, r2, #8
 801ab9e:	fa1f f982 	uxth.w	r9, r2
 801aba2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801aba6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801abaa:	43d2      	mvns	r2, r2
 801abac:	b2d2      	uxtb	r2, r2
 801abae:	fb16 f609 	smulbb	r6, r6, r9
 801abb2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801abb6:	fb07 6702 	mla	r7, r7, r2, r6
 801abba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801abbe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801abc2:	b2ed      	uxtb	r5, r5
 801abc4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801abc8:	fa5f fe8e 	uxtb.w	lr, lr
 801abcc:	fb15 f509 	smulbb	r5, r5, r9
 801abd0:	fb0e 5502 	mla	r5, lr, r2, r5
 801abd4:	b2bf      	uxth	r7, r7
 801abd6:	fb1a fa09 	smulbb	sl, sl, r9
 801abda:	b2ad      	uxth	r5, r5
 801abdc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801abe0:	fb06 a602 	mla	r6, r6, r2, sl
 801abe4:	1c7a      	adds	r2, r7, #1
 801abe6:	f105 0a01 	add.w	sl, r5, #1
 801abea:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801abee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801abf2:	b2b6      	uxth	r6, r6
 801abf4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801abf8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801abfc:	ea4a 0707 	orr.w	r7, sl, r7
 801ac00:	f106 0a01 	add.w	sl, r6, #1
 801ac04:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ac08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac0c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801ac10:	ea47 070a 	orr.w	r7, r7, sl
 801ac14:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801ac18:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ac1a:	4410      	add	r0, r2
 801ac1c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ac1e:	f108 0801 	add.w	r8, r8, #1
 801ac22:	4411      	add	r1, r2
 801ac24:	e7a1      	b.n	801ab6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801ac26:	b007      	add	sp, #28
 801ac28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ac2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac30:	b085      	sub	sp, #20
 801ac32:	468b      	mov	fp, r1
 801ac34:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ac36:	9203      	str	r2, [sp, #12]
 801ac38:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801ac3c:	6841      	ldr	r1, [r0, #4]
 801ac3e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801ac42:	fb01 2404 	mla	r4, r1, r4, r2
 801ac46:	6802      	ldr	r2, [r0, #0]
 801ac48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ac4c:	f8de 2000 	ldr.w	r2, [lr]
 801ac50:	9200      	str	r2, [sp, #0]
 801ac52:	f8de 2004 	ldr.w	r2, [lr, #4]
 801ac56:	3204      	adds	r2, #4
 801ac58:	9201      	str	r2, [sp, #4]
 801ac5a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801ac5e:	f1bb 0f00 	cmp.w	fp, #0
 801ac62:	dc03      	bgt.n	801ac6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ac64:	9a03      	ldr	r2, [sp, #12]
 801ac66:	2a00      	cmp	r2, #0
 801ac68:	f340 8153 	ble.w	801af12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801ac6c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ac6e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ac72:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801ac76:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801ac7a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801ac7c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801ac80:	2b00      	cmp	r3, #0
 801ac82:	dd0e      	ble.n	801aca2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ac84:	1408      	asrs	r0, r1, #16
 801ac86:	d405      	bmi.n	801ac94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ac88:	42b8      	cmp	r0, r7
 801ac8a:	da03      	bge.n	801ac94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ac8c:	1410      	asrs	r0, r2, #16
 801ac8e:	d401      	bmi.n	801ac94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ac90:	42b0      	cmp	r0, r6
 801ac92:	db07      	blt.n	801aca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ac94:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ac96:	4401      	add	r1, r0
 801ac98:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801ac9a:	3b01      	subs	r3, #1
 801ac9c:	4402      	add	r2, r0
 801ac9e:	3402      	adds	r4, #2
 801aca0:	e7ee      	b.n	801ac80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801aca2:	d017      	beq.n	801acd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801aca4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801aca6:	1e58      	subs	r0, r3, #1
 801aca8:	fb05 1500 	mla	r5, r5, r0, r1
 801acac:	142d      	asrs	r5, r5, #16
 801acae:	d409      	bmi.n	801acc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801acb0:	42bd      	cmp	r5, r7
 801acb2:	da07      	bge.n	801acc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801acb4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801acb6:	fb05 2000 	mla	r0, r5, r0, r2
 801acba:	1400      	asrs	r0, r0, #16
 801acbc:	d402      	bmi.n	801acc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801acbe:	42b0      	cmp	r0, r6
 801acc0:	f2c0 80bc 	blt.w	801ae3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801acc4:	2600      	movs	r6, #0
 801acc6:	1998      	adds	r0, r3, r6
 801acc8:	2800      	cmp	r0, #0
 801acca:	dc3e      	bgt.n	801ad4a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801accc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801acd0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801acd4:	f1bb 0f00 	cmp.w	fp, #0
 801acd8:	f340 811b 	ble.w	801af12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801acdc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ace0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ace4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ace8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801acea:	f1bb 0b01 	subs.w	fp, fp, #1
 801acee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801acf2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801acf6:	eeb0 6a62 	vmov.f32	s12, s5
 801acfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801acfe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad02:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad06:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801ad0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad0e:	eeb0 6a43 	vmov.f32	s12, s6
 801ad12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad16:	ee12 2a90 	vmov	r2, s5
 801ad1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad1e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad22:	ee13 2a10 	vmov	r2, s6
 801ad26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad2a:	9311      	str	r3, [sp, #68]	@ 0x44
 801ad2c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ad2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad32:	9a03      	ldr	r2, [sp, #12]
 801ad34:	9312      	str	r3, [sp, #72]	@ 0x48
 801ad36:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801ad3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ad3c:	eeb0 3a67 	vmov.f32	s6, s15
 801ad40:	bf08      	it	eq
 801ad42:	4613      	moveq	r3, r2
 801ad44:	eef0 2a47 	vmov.f32	s5, s14
 801ad48:	e789      	b.n	801ac5e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ad4a:	140f      	asrs	r7, r1, #16
 801ad4c:	d426      	bmi.n	801ad9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ad4e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ad52:	42bd      	cmp	r5, r7
 801ad54:	dd22      	ble.n	801ad9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ad56:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ad5a:	d41f      	bmi.n	801ad9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ad5c:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ad60:	4560      	cmp	r0, ip
 801ad62:	dd1b      	ble.n	801ad9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ad64:	9800      	ldr	r0, [sp, #0]
 801ad66:	b22d      	sxth	r5, r5
 801ad68:	fb0c 0505 	mla	r5, ip, r5, r0
 801ad6c:	5de8      	ldrb	r0, [r5, r7]
 801ad6e:	9d01      	ldr	r5, [sp, #4]
 801ad70:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801ad74:	0e07      	lsrs	r7, r0, #24
 801ad76:	2fff      	cmp	r7, #255	@ 0xff
 801ad78:	d116      	bne.n	801ada8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ad7a:	f06f 0501 	mvn.w	r5, #1
 801ad7e:	fb05 f706 	mul.w	r7, r5, r6
 801ad82:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801ad86:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801ad8a:	0945      	lsrs	r5, r0, #5
 801ad8c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ad90:	ea4c 0505 	orr.w	r5, ip, r5
 801ad94:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ad98:	4305      	orrs	r5, r0
 801ad9a:	53e5      	strh	r5, [r4, r7]
 801ad9c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ad9e:	4401      	add	r1, r0
 801ada0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801ada2:	3e01      	subs	r6, #1
 801ada4:	4402      	add	r2, r0
 801ada6:	e78e      	b.n	801acc6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ada8:	b2fd      	uxtb	r5, r7
 801adaa:	2f00      	cmp	r7, #0
 801adac:	d0f6      	beq.n	801ad9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801adae:	f06f 0701 	mvn.w	r7, #1
 801adb2:	4377      	muls	r7, r6
 801adb4:	fa1f f985 	uxth.w	r9, r5
 801adb8:	f834 8007 	ldrh.w	r8, [r4, r7]
 801adbc:	9702      	str	r7, [sp, #8]
 801adbe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801adc2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801adc6:	43ed      	mvns	r5, r5
 801adc8:	b2ed      	uxtb	r5, r5
 801adca:	fb17 f709 	smulbb	r7, r7, r9
 801adce:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801add2:	fb0c 7c05 	mla	ip, ip, r5, r7
 801add6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801adda:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801adde:	b2c0      	uxtb	r0, r0
 801ade0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ade4:	fa5f f888 	uxtb.w	r8, r8
 801ade8:	fb10 f009 	smulbb	r0, r0, r9
 801adec:	fb08 0005 	mla	r0, r8, r5, r0
 801adf0:	b280      	uxth	r0, r0
 801adf2:	fa1f fc8c 	uxth.w	ip, ip
 801adf6:	fb1a fa09 	smulbb	sl, sl, r9
 801adfa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801adfe:	fb07 a705 	mla	r7, r7, r5, sl
 801ae02:	f100 0a01 	add.w	sl, r0, #1
 801ae06:	f10c 0501 	add.w	r5, ip, #1
 801ae0a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ae0e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ae12:	b2bf      	uxth	r7, r7
 801ae14:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae18:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801ae1c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ae20:	f107 0a01 	add.w	sl, r7, #1
 801ae24:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ae28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae2c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801ae30:	9802      	ldr	r0, [sp, #8]
 801ae32:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ae36:	f824 c000 	strh.w	ip, [r4, r0]
 801ae3a:	e7af      	b.n	801ad9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ae3c:	f04f 0800 	mov.w	r8, #0
 801ae40:	eba3 0008 	sub.w	r0, r3, r8
 801ae44:	2800      	cmp	r0, #0
 801ae46:	f77f af41 	ble.w	801accc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ae4a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801ae4e:	9f00      	ldr	r7, [sp, #0]
 801ae50:	1410      	asrs	r0, r2, #16
 801ae52:	140d      	asrs	r5, r1, #16
 801ae54:	fb06 7000 	mla	r0, r6, r0, r7
 801ae58:	5d40      	ldrb	r0, [r0, r5]
 801ae5a:	9d01      	ldr	r5, [sp, #4]
 801ae5c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801ae60:	0e2e      	lsrs	r6, r5, #24
 801ae62:	2eff      	cmp	r6, #255	@ 0xff
 801ae64:	d112      	bne.n	801ae8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801ae66:	482c      	ldr	r0, [pc, #176]	@ (801af18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801ae68:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801ae6c:	0968      	lsrs	r0, r5, #5
 801ae6e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ae72:	4330      	orrs	r0, r6
 801ae74:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ae78:	4328      	orrs	r0, r5
 801ae7a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801ae7e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ae80:	4401      	add	r1, r0
 801ae82:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801ae84:	f108 0801 	add.w	r8, r8, #1
 801ae88:	4402      	add	r2, r0
 801ae8a:	e7d9      	b.n	801ae40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ae8c:	b2f0      	uxtb	r0, r6
 801ae8e:	2e00      	cmp	r6, #0
 801ae90:	d0f5      	beq.n	801ae7e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ae92:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801ae96:	fa1f f980 	uxth.w	r9, r0
 801ae9a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ae9e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801aea2:	43c0      	mvns	r0, r0
 801aea4:	b2c0      	uxtb	r0, r0
 801aea6:	fb16 f609 	smulbb	r6, r6, r9
 801aeaa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801aeae:	fb07 6700 	mla	r7, r7, r0, r6
 801aeb2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801aeb6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801aeba:	b2ed      	uxtb	r5, r5
 801aebc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aec0:	fa5f fc8c 	uxtb.w	ip, ip
 801aec4:	fb15 f509 	smulbb	r5, r5, r9
 801aec8:	fb0c 5500 	mla	r5, ip, r0, r5
 801aecc:	b2bf      	uxth	r7, r7
 801aece:	fb1a fa09 	smulbb	sl, sl, r9
 801aed2:	b2ad      	uxth	r5, r5
 801aed4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801aed8:	fb06 a600 	mla	r6, r6, r0, sl
 801aedc:	1c78      	adds	r0, r7, #1
 801aede:	f105 0a01 	add.w	sl, r5, #1
 801aee2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801aee6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aeea:	b2b6      	uxth	r6, r6
 801aeec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aef0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801aef4:	ea4a 0707 	orr.w	r7, sl, r7
 801aef8:	f106 0a01 	add.w	sl, r6, #1
 801aefc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801af00:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af04:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801af08:	ea47 070a 	orr.w	r7, r7, sl
 801af0c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801af10:	e7b5      	b.n	801ae7e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801af12:	b005      	add	sp, #20
 801af14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af18:	fffff800 	.word	0xfffff800

0801af1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af20:	b087      	sub	sp, #28
 801af22:	468b      	mov	fp, r1
 801af24:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801af26:	9204      	str	r2, [sp, #16]
 801af28:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801af2c:	9205      	str	r2, [sp, #20]
 801af2e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801af32:	6861      	ldr	r1, [r4, #4]
 801af34:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801af38:	fb01 2000 	mla	r0, r1, r0, r2
 801af3c:	6822      	ldr	r2, [r4, #0]
 801af3e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801af42:	f8de 2000 	ldr.w	r2, [lr]
 801af46:	9201      	str	r2, [sp, #4]
 801af48:	f8de 2004 	ldr.w	r2, [lr, #4]
 801af4c:	9202      	str	r2, [sp, #8]
 801af4e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801af52:	f1bb 0f00 	cmp.w	fp, #0
 801af56:	dc03      	bgt.n	801af60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801af58:	9a04      	ldr	r2, [sp, #16]
 801af5a:	2a00      	cmp	r2, #0
 801af5c:	f340 8142 	ble.w	801b1e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801af60:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801af62:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801af66:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801af6a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801af6e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801af70:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801af74:	2b00      	cmp	r3, #0
 801af76:	dd0e      	ble.n	801af96 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801af78:	140c      	asrs	r4, r1, #16
 801af7a:	d405      	bmi.n	801af88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801af7c:	42bc      	cmp	r4, r7
 801af7e:	da03      	bge.n	801af88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801af80:	1414      	asrs	r4, r2, #16
 801af82:	d401      	bmi.n	801af88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801af84:	42b4      	cmp	r4, r6
 801af86:	db07      	blt.n	801af98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801af88:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801af8a:	4421      	add	r1, r4
 801af8c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801af8e:	3b01      	subs	r3, #1
 801af90:	4422      	add	r2, r4
 801af92:	3002      	adds	r0, #2
 801af94:	e7ee      	b.n	801af74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801af96:	d019      	beq.n	801afcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801af98:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801af9a:	1e5c      	subs	r4, r3, #1
 801af9c:	fb05 1504 	mla	r5, r5, r4, r1
 801afa0:	142d      	asrs	r5, r5, #16
 801afa2:	d409      	bmi.n	801afb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801afa4:	42bd      	cmp	r5, r7
 801afa6:	da07      	bge.n	801afb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801afa8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801afaa:	fb05 2404 	mla	r4, r5, r4, r2
 801afae:	1424      	asrs	r4, r4, #16
 801afb0:	d402      	bmi.n	801afb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801afb2:	42b4      	cmp	r4, r6
 801afb4:	f2c0 80b1 	blt.w	801b11a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801afb8:	f04f 0800 	mov.w	r8, #0
 801afbc:	eb03 0408 	add.w	r4, r3, r8
 801afc0:	2c00      	cmp	r4, #0
 801afc2:	dc3e      	bgt.n	801b042 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801afc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801afc8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801afcc:	f1bb 0f00 	cmp.w	fp, #0
 801afd0:	f340 8108 	ble.w	801b1e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801afd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afdc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801afe0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801afe2:	f1bb 0b01 	subs.w	fp, fp, #1
 801afe6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801afea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801afee:	eeb0 6a62 	vmov.f32	s12, s5
 801aff2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aff6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801affa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801affe:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801b002:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b006:	eeb0 6a43 	vmov.f32	s12, s6
 801b00a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b00e:	ee12 2a90 	vmov	r2, s5
 801b012:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b016:	fb92 f3f3 	sdiv	r3, r2, r3
 801b01a:	ee13 2a10 	vmov	r2, s6
 801b01e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b022:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b024:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b026:	fb92 f3f3 	sdiv	r3, r2, r3
 801b02a:	9a04      	ldr	r2, [sp, #16]
 801b02c:	9314      	str	r3, [sp, #80]	@ 0x50
 801b02e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801b032:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b034:	eeb0 3a67 	vmov.f32	s6, s15
 801b038:	bf08      	it	eq
 801b03a:	4613      	moveq	r3, r2
 801b03c:	eef0 2a47 	vmov.f32	s5, s14
 801b040:	e787      	b.n	801af52 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801b042:	140e      	asrs	r6, r1, #16
 801b044:	d462      	bmi.n	801b10c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b046:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b04a:	42b5      	cmp	r5, r6
 801b04c:	dd5e      	ble.n	801b10c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b04e:	1417      	asrs	r7, r2, #16
 801b050:	d45c      	bmi.n	801b10c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b052:	f8de 400c 	ldr.w	r4, [lr, #12]
 801b056:	42bc      	cmp	r4, r7
 801b058:	dd58      	ble.n	801b10c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b05a:	b22d      	sxth	r5, r5
 801b05c:	fb07 6505 	mla	r5, r7, r5, r6
 801b060:	9c02      	ldr	r4, [sp, #8]
 801b062:	5d66      	ldrb	r6, [r4, r5]
 801b064:	2e00      	cmp	r6, #0
 801b066:	d051      	beq.n	801b10c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b068:	9c01      	ldr	r4, [sp, #4]
 801b06a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801b06e:	f06f 0401 	mvn.w	r4, #1
 801b072:	fb04 f408 	mul.w	r4, r4, r8
 801b076:	9403      	str	r4, [sp, #12]
 801b078:	5b05      	ldrh	r5, [r0, r4]
 801b07a:	9c05      	ldr	r4, [sp, #20]
 801b07c:	4366      	muls	r6, r4
 801b07e:	1c74      	adds	r4, r6, #1
 801b080:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b084:	1224      	asrs	r4, r4, #8
 801b086:	b2a7      	uxth	r7, r4
 801b088:	122e      	asrs	r6, r5, #8
 801b08a:	43e4      	mvns	r4, r4
 801b08c:	b2e4      	uxtb	r4, r4
 801b08e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801b092:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b096:	fb16 f604 	smulbb	r6, r6, r4
 801b09a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b09e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b0a2:	00ed      	lsls	r5, r5, #3
 801b0a4:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b0a8:	b2ed      	uxtb	r5, r5
 801b0aa:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801b0ae:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b0b2:	fb15 f504 	smulbb	r5, r5, r4
 801b0b6:	fa5f f989 	uxtb.w	r9, r9
 801b0ba:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b0be:	fb09 5507 	mla	r5, r9, r7, r5
 801b0c2:	fb1a fa04 	smulbb	sl, sl, r4
 801b0c6:	fa1f fc8c 	uxth.w	ip, ip
 801b0ca:	b2ad      	uxth	r5, r5
 801b0cc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b0d0:	fb06 a607 	mla	r6, r6, r7, sl
 801b0d4:	f10c 0401 	add.w	r4, ip, #1
 801b0d8:	f105 0a01 	add.w	sl, r5, #1
 801b0dc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b0e0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b0e4:	b2b6      	uxth	r6, r6
 801b0e6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b0ea:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b0ee:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b0f2:	f106 0a01 	add.w	sl, r6, #1
 801b0f6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b0fa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b0fe:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b102:	9c03      	ldr	r4, [sp, #12]
 801b104:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b108:	f820 c004 	strh.w	ip, [r0, r4]
 801b10c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b10e:	4421      	add	r1, r4
 801b110:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b112:	f108 38ff 	add.w	r8, r8, #4294967295
 801b116:	4422      	add	r2, r4
 801b118:	e750      	b.n	801afbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b11a:	f04f 0900 	mov.w	r9, #0
 801b11e:	eba3 0409 	sub.w	r4, r3, r9
 801b122:	2c00      	cmp	r4, #0
 801b124:	f77f af4e 	ble.w	801afc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b128:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b12c:	140d      	asrs	r5, r1, #16
 801b12e:	1414      	asrs	r4, r2, #16
 801b130:	fb06 5404 	mla	r4, r6, r4, r5
 801b134:	9d02      	ldr	r5, [sp, #8]
 801b136:	5d2e      	ldrb	r6, [r5, r4]
 801b138:	2e00      	cmp	r6, #0
 801b13a:	d04c      	beq.n	801b1d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801b13c:	9d01      	ldr	r5, [sp, #4]
 801b13e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801b142:	9c05      	ldr	r4, [sp, #20]
 801b144:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b148:	4366      	muls	r6, r4
 801b14a:	1c74      	adds	r4, r6, #1
 801b14c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b150:	1224      	asrs	r4, r4, #8
 801b152:	b2a7      	uxth	r7, r4
 801b154:	122e      	asrs	r6, r5, #8
 801b156:	43e4      	mvns	r4, r4
 801b158:	b2e4      	uxtb	r4, r4
 801b15a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b15e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b162:	fb16 f604 	smulbb	r6, r6, r4
 801b166:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b16a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b16e:	00ed      	lsls	r5, r5, #3
 801b170:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b174:	b2ed      	uxtb	r5, r5
 801b176:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b17a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b17e:	fb15 f504 	smulbb	r5, r5, r4
 801b182:	fa5f f888 	uxtb.w	r8, r8
 801b186:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b18a:	fb08 5507 	mla	r5, r8, r7, r5
 801b18e:	fb1a fa04 	smulbb	sl, sl, r4
 801b192:	fa1f fc8c 	uxth.w	ip, ip
 801b196:	b2ad      	uxth	r5, r5
 801b198:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b19c:	fb06 a607 	mla	r6, r6, r7, sl
 801b1a0:	f10c 0401 	add.w	r4, ip, #1
 801b1a4:	f105 0a01 	add.w	sl, r5, #1
 801b1a8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b1ac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b1b0:	b2b6      	uxth	r6, r6
 801b1b2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b1b6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b1ba:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b1be:	f106 0a01 	add.w	sl, r6, #1
 801b1c2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b1c6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b1ca:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b1ce:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b1d2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b1d6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b1d8:	4421      	add	r1, r4
 801b1da:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b1dc:	f109 0901 	add.w	r9, r9, #1
 801b1e0:	4422      	add	r2, r4
 801b1e2:	e79c      	b.n	801b11e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801b1e4:	b007      	add	sp, #28
 801b1e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b1ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b1ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1ee:	b085      	sub	sp, #20
 801b1f0:	468b      	mov	fp, r1
 801b1f2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b1f4:	9203      	str	r2, [sp, #12]
 801b1f6:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801b1fa:	6861      	ldr	r1, [r4, #4]
 801b1fc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801b200:	fb01 2000 	mla	r0, r1, r0, r2
 801b204:	6822      	ldr	r2, [r4, #0]
 801b206:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b20a:	f8d8 2000 	ldr.w	r2, [r8]
 801b20e:	9200      	str	r2, [sp, #0]
 801b210:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801b214:	9201      	str	r2, [sp, #4]
 801b216:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b21a:	f1bb 0f00 	cmp.w	fp, #0
 801b21e:	dc03      	bgt.n	801b228 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b220:	9a03      	ldr	r2, [sp, #12]
 801b222:	2a00      	cmp	r2, #0
 801b224:	f340 8146 	ble.w	801b4b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b228:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b22a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b22e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b232:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801b236:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b238:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b23c:	2b00      	cmp	r3, #0
 801b23e:	dd0e      	ble.n	801b25e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b240:	140c      	asrs	r4, r1, #16
 801b242:	d405      	bmi.n	801b250 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b244:	42bc      	cmp	r4, r7
 801b246:	da03      	bge.n	801b250 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b248:	1414      	asrs	r4, r2, #16
 801b24a:	d401      	bmi.n	801b250 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b24c:	42b4      	cmp	r4, r6
 801b24e:	db07      	blt.n	801b260 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b250:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b252:	4421      	add	r1, r4
 801b254:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b256:	3b01      	subs	r3, #1
 801b258:	4422      	add	r2, r4
 801b25a:	3002      	adds	r0, #2
 801b25c:	e7ee      	b.n	801b23c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b25e:	d017      	beq.n	801b290 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b260:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b262:	1e5c      	subs	r4, r3, #1
 801b264:	fb05 1504 	mla	r5, r5, r4, r1
 801b268:	142d      	asrs	r5, r5, #16
 801b26a:	d409      	bmi.n	801b280 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b26c:	42bd      	cmp	r5, r7
 801b26e:	da07      	bge.n	801b280 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b270:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b272:	fb05 2404 	mla	r4, r5, r4, r2
 801b276:	1424      	asrs	r4, r4, #16
 801b278:	d402      	bmi.n	801b280 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b27a:	42b4      	cmp	r4, r6
 801b27c:	f2c0 80b3 	blt.w	801b3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b280:	2600      	movs	r6, #0
 801b282:	199c      	adds	r4, r3, r6
 801b284:	2c00      	cmp	r4, #0
 801b286:	dc3e      	bgt.n	801b306 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b288:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b28c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b290:	f1bb 0f00 	cmp.w	fp, #0
 801b294:	f340 810e 	ble.w	801b4b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b298:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b29c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b2a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b2a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b2a6:	f1bb 0b01 	subs.w	fp, fp, #1
 801b2aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b2ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b2b2:	eeb0 6a62 	vmov.f32	s12, s5
 801b2b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b2ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b2c2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801b2c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b2ca:	eeb0 6a43 	vmov.f32	s12, s6
 801b2ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b2d2:	ee12 2a90 	vmov	r2, s5
 801b2d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b2da:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2de:	ee13 2a10 	vmov	r2, s6
 801b2e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2e6:	9311      	str	r3, [sp, #68]	@ 0x44
 801b2e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b2ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2ee:	9a03      	ldr	r2, [sp, #12]
 801b2f0:	9312      	str	r3, [sp, #72]	@ 0x48
 801b2f2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801b2f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b2f8:	eeb0 3a67 	vmov.f32	s6, s15
 801b2fc:	bf08      	it	eq
 801b2fe:	4613      	moveq	r3, r2
 801b300:	eef0 2a47 	vmov.f32	s5, s14
 801b304:	e789      	b.n	801b21a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b306:	140f      	asrs	r7, r1, #16
 801b308:	d418      	bmi.n	801b33c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b30a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b30e:	42bd      	cmp	r5, r7
 801b310:	dd14      	ble.n	801b33c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b312:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b316:	d411      	bmi.n	801b33c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b318:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801b31c:	4564      	cmp	r4, ip
 801b31e:	dd0d      	ble.n	801b33c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b320:	b22d      	sxth	r5, r5
 801b322:	fb0c 7505 	mla	r5, ip, r5, r7
 801b326:	9c01      	ldr	r4, [sp, #4]
 801b328:	5d64      	ldrb	r4, [r4, r5]
 801b32a:	2cff      	cmp	r4, #255	@ 0xff
 801b32c:	d10c      	bne.n	801b348 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801b32e:	9c00      	ldr	r4, [sp, #0]
 801b330:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801b334:	f06f 0401 	mvn.w	r4, #1
 801b338:	4374      	muls	r4, r6
 801b33a:	5305      	strh	r5, [r0, r4]
 801b33c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b33e:	4421      	add	r1, r4
 801b340:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b342:	3e01      	subs	r6, #1
 801b344:	4422      	add	r2, r4
 801b346:	e79c      	b.n	801b282 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b348:	2c00      	cmp	r4, #0
 801b34a:	d0f7      	beq.n	801b33c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b34c:	9f00      	ldr	r7, [sp, #0]
 801b34e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801b352:	f06f 0501 	mvn.w	r5, #1
 801b356:	4375      	muls	r5, r6
 801b358:	9502      	str	r5, [sp, #8]
 801b35a:	5b45      	ldrh	r5, [r0, r5]
 801b35c:	fa1f fc84 	uxth.w	ip, r4
 801b360:	122f      	asrs	r7, r5, #8
 801b362:	43e4      	mvns	r4, r4
 801b364:	b2e4      	uxtb	r4, r4
 801b366:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801b36a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b36e:	fb17 f704 	smulbb	r7, r7, r4
 801b372:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b376:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801b37a:	00ed      	lsls	r5, r5, #3
 801b37c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801b380:	b2ed      	uxtb	r5, r5
 801b382:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801b386:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b38a:	fb15 f504 	smulbb	r5, r5, r4
 801b38e:	fa5f f989 	uxtb.w	r9, r9
 801b392:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b396:	fb09 550c 	mla	r5, r9, ip, r5
 801b39a:	fb1a fa04 	smulbb	sl, sl, r4
 801b39e:	fa1f fe8e 	uxth.w	lr, lr
 801b3a2:	b2ad      	uxth	r5, r5
 801b3a4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b3a8:	fb07 a70c 	mla	r7, r7, ip, sl
 801b3ac:	f10e 0401 	add.w	r4, lr, #1
 801b3b0:	f105 0a01 	add.w	sl, r5, #1
 801b3b4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801b3b8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b3bc:	b2bf      	uxth	r7, r7
 801b3be:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b3c2:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801b3c6:	ea4a 0e0e 	orr.w	lr, sl, lr
 801b3ca:	f107 0a01 	add.w	sl, r7, #1
 801b3ce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b3d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b3d6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b3da:	9c02      	ldr	r4, [sp, #8]
 801b3dc:	ea4e 0e0a 	orr.w	lr, lr, sl
 801b3e0:	f820 e004 	strh.w	lr, [r0, r4]
 801b3e4:	e7aa      	b.n	801b33c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b3e6:	f04f 0900 	mov.w	r9, #0
 801b3ea:	eba3 0409 	sub.w	r4, r3, r9
 801b3ee:	2c00      	cmp	r4, #0
 801b3f0:	f77f af4a 	ble.w	801b288 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b3f4:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b3f8:	1414      	asrs	r4, r2, #16
 801b3fa:	140d      	asrs	r5, r1, #16
 801b3fc:	fb06 5504 	mla	r5, r6, r4, r5
 801b400:	9c01      	ldr	r4, [sp, #4]
 801b402:	5d64      	ldrb	r4, [r4, r5]
 801b404:	2cff      	cmp	r4, #255	@ 0xff
 801b406:	d10b      	bne.n	801b420 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b408:	9c00      	ldr	r4, [sp, #0]
 801b40a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801b40e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801b412:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b414:	4421      	add	r1, r4
 801b416:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b418:	f109 0901 	add.w	r9, r9, #1
 801b41c:	4422      	add	r2, r4
 801b41e:	e7e4      	b.n	801b3ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b420:	2c00      	cmp	r4, #0
 801b422:	d0f6      	beq.n	801b412 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b424:	9e00      	ldr	r6, [sp, #0]
 801b426:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801b42a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b42e:	b2a7      	uxth	r7, r4
 801b430:	122e      	asrs	r6, r5, #8
 801b432:	43e4      	mvns	r4, r4
 801b434:	b2e4      	uxtb	r4, r4
 801b436:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b43a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b43e:	fb16 f604 	smulbb	r6, r6, r4
 801b442:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b446:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b44a:	00ed      	lsls	r5, r5, #3
 801b44c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b450:	b2ed      	uxtb	r5, r5
 801b452:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b456:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b45a:	fb15 f504 	smulbb	r5, r5, r4
 801b45e:	fa5f fe8e 	uxtb.w	lr, lr
 801b462:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b466:	fb0e 5507 	mla	r5, lr, r7, r5
 801b46a:	fb1a fa04 	smulbb	sl, sl, r4
 801b46e:	fa1f fc8c 	uxth.w	ip, ip
 801b472:	b2ad      	uxth	r5, r5
 801b474:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b478:	fb06 a607 	mla	r6, r6, r7, sl
 801b47c:	f10c 0401 	add.w	r4, ip, #1
 801b480:	f105 0a01 	add.w	sl, r5, #1
 801b484:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b488:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b48c:	b2b6      	uxth	r6, r6
 801b48e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b492:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b496:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b49a:	f106 0a01 	add.w	sl, r6, #1
 801b49e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b4a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b4a6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b4aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b4ae:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b4b2:	e7ae      	b.n	801b412 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b4b4:	b005      	add	sp, #20
 801b4b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b4ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b4ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4be:	b085      	sub	sp, #20
 801b4c0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b4c2:	9203      	str	r2, [sp, #12]
 801b4c4:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 801b4c8:	9201      	str	r2, [sp, #4]
 801b4ca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801b4ce:	9100      	str	r1, [sp, #0]
 801b4d0:	6841      	ldr	r1, [r0, #4]
 801b4d2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801b4d6:	fb01 2404 	mla	r4, r1, r4, r2
 801b4da:	6802      	ldr	r2, [r0, #0]
 801b4dc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b4e0:	f8de 2000 	ldr.w	r2, [lr]
 801b4e4:	9202      	str	r2, [sp, #8]
 801b4e6:	9a01      	ldr	r2, [sp, #4]
 801b4e8:	43d6      	mvns	r6, r2
 801b4ea:	b2f6      	uxtb	r6, r6
 801b4ec:	9a00      	ldr	r2, [sp, #0]
 801b4ee:	2a00      	cmp	r2, #0
 801b4f0:	dc03      	bgt.n	801b4fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b4f2:	9a03      	ldr	r2, [sp, #12]
 801b4f4:	2a00      	cmp	r2, #0
 801b4f6:	f340 8124 	ble.w	801b742 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b4fa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b4fc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b500:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b504:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801b508:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b50a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b50e:	2b00      	cmp	r3, #0
 801b510:	dd0e      	ble.n	801b530 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b512:	1408      	asrs	r0, r1, #16
 801b514:	d405      	bmi.n	801b522 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b516:	4560      	cmp	r0, ip
 801b518:	da03      	bge.n	801b522 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b51a:	1410      	asrs	r0, r2, #16
 801b51c:	d401      	bmi.n	801b522 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b51e:	42b8      	cmp	r0, r7
 801b520:	db07      	blt.n	801b532 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b522:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b524:	4401      	add	r1, r0
 801b526:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801b528:	3b01      	subs	r3, #1
 801b52a:	4402      	add	r2, r0
 801b52c:	3402      	adds	r4, #2
 801b52e:	e7ee      	b.n	801b50e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b530:	d06e      	beq.n	801b610 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b532:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b534:	1e58      	subs	r0, r3, #1
 801b536:	fb05 1500 	mla	r5, r5, r0, r1
 801b53a:	142d      	asrs	r5, r5, #16
 801b53c:	d45c      	bmi.n	801b5f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b53e:	4565      	cmp	r5, ip
 801b540:	da5a      	bge.n	801b5f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b542:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b544:	fb05 2000 	mla	r0, r5, r0, r2
 801b548:	1400      	asrs	r0, r0, #16
 801b54a:	d455      	bmi.n	801b5f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b54c:	42b8      	cmp	r0, r7
 801b54e:	da53      	bge.n	801b5f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b550:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801b554:	4699      	mov	r9, r3
 801b556:	46a2      	mov	sl, r4
 801b558:	f1b9 0f00 	cmp.w	r9, #0
 801b55c:	dd54      	ble.n	801b608 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b55e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b562:	140d      	asrs	r5, r1, #16
 801b564:	1410      	asrs	r0, r2, #16
 801b566:	fb07 5000 	mla	r0, r7, r0, r5
 801b56a:	9d02      	ldr	r5, [sp, #8]
 801b56c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b570:	f8ba 5000 	ldrh.w	r5, [sl]
 801b574:	122f      	asrs	r7, r5, #8
 801b576:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b57a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b57e:	fb17 f706 	smulbb	r7, r7, r6
 801b582:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b586:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b58a:	00ed      	lsls	r5, r5, #3
 801b58c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b590:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801b594:	10c7      	asrs	r7, r0, #3
 801b596:	b2ed      	uxtb	r5, r5
 801b598:	00c0      	lsls	r0, r0, #3
 801b59a:	fb18 f806 	smulbb	r8, r8, r6
 801b59e:	fb15 f506 	smulbb	r5, r5, r6
 801b5a2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b5a6:	b2c0      	uxtb	r0, r0
 801b5a8:	fa1f fc8c 	uxth.w	ip, ip
 801b5ac:	fb07 870b 	mla	r7, r7, fp, r8
 801b5b0:	fb00 500b 	mla	r0, r0, fp, r5
 801b5b4:	b280      	uxth	r0, r0
 801b5b6:	b2bf      	uxth	r7, r7
 801b5b8:	f10c 0501 	add.w	r5, ip, #1
 801b5bc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b5c0:	f107 0801 	add.w	r8, r7, #1
 801b5c4:	1c45      	adds	r5, r0, #1
 801b5c6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b5ca:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b5ce:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b5d0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b5d4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b5d8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b5dc:	ea45 0c0c 	orr.w	ip, r5, ip
 801b5e0:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801b5e4:	4401      	add	r1, r0
 801b5e6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801b5e8:	ea4c 0c08 	orr.w	ip, ip, r8
 801b5ec:	f82a cb02 	strh.w	ip, [sl], #2
 801b5f0:	4402      	add	r2, r0
 801b5f2:	f109 39ff 	add.w	r9, r9, #4294967295
 801b5f6:	e7af      	b.n	801b558 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b5f8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801b5fc:	f04f 0800 	mov.w	r8, #0
 801b600:	eb03 0008 	add.w	r0, r3, r8
 801b604:	2800      	cmp	r0, #0
 801b606:	dc41      	bgt.n	801b68c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b608:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b60c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b610:	9b00      	ldr	r3, [sp, #0]
 801b612:	2b00      	cmp	r3, #0
 801b614:	f340 8095 	ble.w	801b742 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b618:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b61c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b620:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b624:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b626:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b62a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b62e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b632:	eef0 6a62 	vmov.f32	s13, s5
 801b636:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b63a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b63e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b642:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801b646:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b64a:	eef0 6a43 	vmov.f32	s13, s6
 801b64e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b652:	ee12 2a90 	vmov	r2, s5
 801b656:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b65a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b65e:	ee13 2a10 	vmov	r2, s6
 801b662:	9311      	str	r3, [sp, #68]	@ 0x44
 801b664:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b666:	fb92 f3f3 	sdiv	r3, r2, r3
 801b66a:	9312      	str	r3, [sp, #72]	@ 0x48
 801b66c:	9b00      	ldr	r3, [sp, #0]
 801b66e:	9a03      	ldr	r2, [sp, #12]
 801b670:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b674:	3b01      	subs	r3, #1
 801b676:	9300      	str	r3, [sp, #0]
 801b678:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801b67c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b67e:	eeb0 3a67 	vmov.f32	s6, s15
 801b682:	bf08      	it	eq
 801b684:	4613      	moveq	r3, r2
 801b686:	eef0 2a47 	vmov.f32	s5, s14
 801b68a:	e72f      	b.n	801b4ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b68c:	140f      	asrs	r7, r1, #16
 801b68e:	d451      	bmi.n	801b734 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b690:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b694:	42bd      	cmp	r5, r7
 801b696:	dd4d      	ble.n	801b734 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b698:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b69c:	d44a      	bmi.n	801b734 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b69e:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b6a2:	4560      	cmp	r0, ip
 801b6a4:	dd46      	ble.n	801b734 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b6a6:	b22d      	sxth	r5, r5
 801b6a8:	fb0c 7505 	mla	r5, ip, r5, r7
 801b6ac:	9802      	ldr	r0, [sp, #8]
 801b6ae:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b6b2:	f06f 0501 	mvn.w	r5, #1
 801b6b6:	fb05 fb08 	mul.w	fp, r5, r8
 801b6ba:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b6be:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b6c2:	122f      	asrs	r7, r5, #8
 801b6c4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b6c8:	fb17 f706 	smulbb	r7, r7, r6
 801b6cc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b6d0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b6d4:	00ed      	lsls	r5, r5, #3
 801b6d6:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b6da:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801b6de:	10c7      	asrs	r7, r0, #3
 801b6e0:	b2ed      	uxtb	r5, r5
 801b6e2:	00c0      	lsls	r0, r0, #3
 801b6e4:	fb19 f906 	smulbb	r9, r9, r6
 801b6e8:	fb15 f506 	smulbb	r5, r5, r6
 801b6ec:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b6f0:	b2c0      	uxtb	r0, r0
 801b6f2:	fa1f fc8c 	uxth.w	ip, ip
 801b6f6:	fb07 970a 	mla	r7, r7, sl, r9
 801b6fa:	fb00 500a 	mla	r0, r0, sl, r5
 801b6fe:	b2bf      	uxth	r7, r7
 801b700:	b280      	uxth	r0, r0
 801b702:	f10c 0501 	add.w	r5, ip, #1
 801b706:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b70a:	f107 0901 	add.w	r9, r7, #1
 801b70e:	1c45      	adds	r5, r0, #1
 801b710:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b714:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b718:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b71c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b720:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b724:	ea45 0c0c 	orr.w	ip, r5, ip
 801b728:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801b72c:	ea4c 0c09 	orr.w	ip, ip, r9
 801b730:	f824 c00b 	strh.w	ip, [r4, fp]
 801b734:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b736:	4401      	add	r1, r0
 801b738:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801b73a:	f108 38ff 	add.w	r8, r8, #4294967295
 801b73e:	4402      	add	r2, r0
 801b740:	e75e      	b.n	801b600 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b742:	b005      	add	sp, #20
 801b744:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b748 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b74c:	b085      	sub	sp, #20
 801b74e:	4693      	mov	fp, r2
 801b750:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801b752:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b754:	6870      	ldr	r0, [r6, #4]
 801b756:	9101      	str	r1, [sp, #4]
 801b758:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801b75c:	fb00 2404 	mla	r4, r0, r4, r2
 801b760:	6832      	ldr	r2, [r6, #0]
 801b762:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801b766:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b76a:	682a      	ldr	r2, [r5, #0]
 801b76c:	9202      	str	r2, [sp, #8]
 801b76e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b772:	9a01      	ldr	r2, [sp, #4]
 801b774:	2a00      	cmp	r2, #0
 801b776:	dc03      	bgt.n	801b780 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b778:	f1bb 0f00 	cmp.w	fp, #0
 801b77c:	f340 809a 	ble.w	801b8b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b780:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b782:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b786:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b78a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801b78e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b790:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b794:	2b00      	cmp	r3, #0
 801b796:	dd0c      	ble.n	801b7b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b798:	1406      	asrs	r6, r0, #16
 801b79a:	d405      	bmi.n	801b7a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b79c:	454e      	cmp	r6, r9
 801b79e:	da03      	bge.n	801b7a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b7a0:	1416      	asrs	r6, r2, #16
 801b7a2:	d401      	bmi.n	801b7a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b7a4:	4546      	cmp	r6, r8
 801b7a6:	db05      	blt.n	801b7b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b7a8:	4470      	add	r0, lr
 801b7aa:	4462      	add	r2, ip
 801b7ac:	3b01      	subs	r3, #1
 801b7ae:	3402      	adds	r4, #2
 801b7b0:	e7f0      	b.n	801b794 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b7b2:	d00f      	beq.n	801b7d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b7b4:	1e5e      	subs	r6, r3, #1
 801b7b6:	fb0e 0706 	mla	r7, lr, r6, r0
 801b7ba:	143f      	asrs	r7, r7, #16
 801b7bc:	d541      	bpl.n	801b842 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b7be:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b7c2:	4698      	mov	r8, r3
 801b7c4:	9603      	str	r6, [sp, #12]
 801b7c6:	f1b8 0f00 	cmp.w	r8, #0
 801b7ca:	dc56      	bgt.n	801b87a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b7cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b7d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b7d4:	9b01      	ldr	r3, [sp, #4]
 801b7d6:	2b00      	cmp	r3, #0
 801b7d8:	dd6c      	ble.n	801b8b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b7da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b7de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b7e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b7e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b7e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b7ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b7f0:	eeb0 6a62 	vmov.f32	s12, s5
 801b7f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b7f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b7fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b800:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801b804:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b808:	eeb0 6a43 	vmov.f32	s12, s6
 801b80c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b810:	ee12 2a90 	vmov	r2, s5
 801b814:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b818:	fb92 fef3 	sdiv	lr, r2, r3
 801b81c:	ee13 2a10 	vmov	r2, s6
 801b820:	fb92 fcf3 	sdiv	ip, r2, r3
 801b824:	9b01      	ldr	r3, [sp, #4]
 801b826:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b82a:	3b01      	subs	r3, #1
 801b82c:	9301      	str	r3, [sp, #4]
 801b82e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801b832:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b834:	eeb0 3a67 	vmov.f32	s6, s15
 801b838:	bf08      	it	eq
 801b83a:	465b      	moveq	r3, fp
 801b83c:	eef0 2a47 	vmov.f32	s5, s14
 801b840:	e797      	b.n	801b772 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b842:	454f      	cmp	r7, r9
 801b844:	dabb      	bge.n	801b7be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b846:	fb0c 2606 	mla	r6, ip, r6, r2
 801b84a:	1436      	asrs	r6, r6, #16
 801b84c:	d4b7      	bmi.n	801b7be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b84e:	4546      	cmp	r6, r8
 801b850:	dab5      	bge.n	801b7be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b852:	461e      	mov	r6, r3
 801b854:	46a0      	mov	r8, r4
 801b856:	2e00      	cmp	r6, #0
 801b858:	ddb8      	ble.n	801b7cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b85a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b85e:	9902      	ldr	r1, [sp, #8]
 801b860:	1417      	asrs	r7, r2, #16
 801b862:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b866:	fb0a 9707 	mla	r7, sl, r7, r9
 801b86a:	4470      	add	r0, lr
 801b86c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b870:	f828 7b02 	strh.w	r7, [r8], #2
 801b874:	4462      	add	r2, ip
 801b876:	3e01      	subs	r6, #1
 801b878:	e7ed      	b.n	801b856 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b87a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b87e:	d414      	bmi.n	801b8aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b880:	68ae      	ldr	r6, [r5, #8]
 801b882:	454e      	cmp	r6, r9
 801b884:	dd11      	ble.n	801b8aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b886:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b88a:	d40e      	bmi.n	801b8aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b88c:	68ef      	ldr	r7, [r5, #12]
 801b88e:	4557      	cmp	r7, sl
 801b890:	dd0b      	ble.n	801b8aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b892:	b236      	sxth	r6, r6
 801b894:	fb0a 9606 	mla	r6, sl, r6, r9
 801b898:	9f02      	ldr	r7, [sp, #8]
 801b89a:	f06f 0101 	mvn.w	r1, #1
 801b89e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b8a2:	fb01 f608 	mul.w	r6, r1, r8
 801b8a6:	9903      	ldr	r1, [sp, #12]
 801b8a8:	538f      	strh	r7, [r1, r6]
 801b8aa:	4470      	add	r0, lr
 801b8ac:	4462      	add	r2, ip
 801b8ae:	f108 38ff 	add.w	r8, r8, #4294967295
 801b8b2:	e788      	b.n	801b7c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b8b4:	b005      	add	sp, #20
 801b8b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b8ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b8ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8be:	b087      	sub	sp, #28
 801b8c0:	468b      	mov	fp, r1
 801b8c2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b8c4:	9203      	str	r2, [sp, #12]
 801b8c6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b8ca:	9204      	str	r2, [sp, #16]
 801b8cc:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 801b8d0:	6841      	ldr	r1, [r0, #4]
 801b8d2:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801b8d6:	fb01 2505 	mla	r5, r1, r5, r2
 801b8da:	6802      	ldr	r2, [r0, #0]
 801b8dc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b8e0:	f8d9 2000 	ldr.w	r2, [r9]
 801b8e4:	9201      	str	r2, [sp, #4]
 801b8e6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b8ea:	f1bb 0f00 	cmp.w	fp, #0
 801b8ee:	dc03      	bgt.n	801b8f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b8f0:	9a03      	ldr	r2, [sp, #12]
 801b8f2:	2a00      	cmp	r2, #0
 801b8f4:	f340 8159 	ble.w	801bbaa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b8f8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b8fa:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b8fe:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b902:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801b906:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b908:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801b90c:	2b00      	cmp	r3, #0
 801b90e:	dd0e      	ble.n	801b92e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b910:	1402      	asrs	r2, r0, #16
 801b912:	d405      	bmi.n	801b920 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b914:	42ba      	cmp	r2, r7
 801b916:	da03      	bge.n	801b920 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b918:	140a      	asrs	r2, r1, #16
 801b91a:	d401      	bmi.n	801b920 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b91c:	42b2      	cmp	r2, r6
 801b91e:	db07      	blt.n	801b930 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b920:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801b922:	4410      	add	r0, r2
 801b924:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b926:	3b01      	subs	r3, #1
 801b928:	4411      	add	r1, r2
 801b92a:	3502      	adds	r5, #2
 801b92c:	e7ee      	b.n	801b90c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b92e:	d017      	beq.n	801b960 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b930:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b932:	1e5a      	subs	r2, r3, #1
 801b934:	fb04 0402 	mla	r4, r4, r2, r0
 801b938:	1424      	asrs	r4, r4, #16
 801b93a:	d409      	bmi.n	801b950 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b93c:	42bc      	cmp	r4, r7
 801b93e:	da07      	bge.n	801b950 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b940:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b942:	fb04 1202 	mla	r2, r4, r2, r1
 801b946:	1412      	asrs	r2, r2, #16
 801b948:	d402      	bmi.n	801b950 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b94a:	42b2      	cmp	r2, r6
 801b94c:	f2c0 80bf 	blt.w	801bace <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b950:	2700      	movs	r7, #0
 801b952:	19da      	adds	r2, r3, r7
 801b954:	2a00      	cmp	r2, #0
 801b956:	dc3e      	bgt.n	801b9d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b958:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b95c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b960:	f1bb 0f00 	cmp.w	fp, #0
 801b964:	f340 8121 	ble.w	801bbaa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b968:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b96c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b970:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b974:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b976:	f1bb 0b01 	subs.w	fp, fp, #1
 801b97a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b97e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b982:	eeb0 6a62 	vmov.f32	s12, s5
 801b986:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b98a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b98e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b992:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801b996:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b99a:	eeb0 6a43 	vmov.f32	s12, s6
 801b99e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b9a2:	ee12 2a90 	vmov	r2, s5
 801b9a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b9aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801b9ae:	ee13 2a10 	vmov	r2, s6
 801b9b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b9b6:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b9b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b9ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801b9be:	9a03      	ldr	r2, [sp, #12]
 801b9c0:	9314      	str	r3, [sp, #80]	@ 0x50
 801b9c2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801b9c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b9c8:	eeb0 3a67 	vmov.f32	s6, s15
 801b9cc:	bf08      	it	eq
 801b9ce:	4613      	moveq	r3, r2
 801b9d0:	eef0 2a47 	vmov.f32	s5, s14
 801b9d4:	e789      	b.n	801b8ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b9d6:	1406      	asrs	r6, r0, #16
 801b9d8:	d42d      	bmi.n	801ba36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b9da:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b9de:	42b4      	cmp	r4, r6
 801b9e0:	dd29      	ble.n	801ba36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b9e2:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b9e6:	d426      	bmi.n	801ba36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b9e8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b9ec:	4562      	cmp	r2, ip
 801b9ee:	dd22      	ble.n	801ba36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b9f0:	b224      	sxth	r4, r4
 801b9f2:	9a01      	ldr	r2, [sp, #4]
 801b9f4:	fb0c 6404 	mla	r4, ip, r4, r6
 801b9f8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b9fc:	0e22      	lsrs	r2, r4, #24
 801b9fe:	d01a      	beq.n	801ba36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ba00:	9e04      	ldr	r6, [sp, #16]
 801ba02:	4372      	muls	r2, r6
 801ba04:	1c56      	adds	r6, r2, #1
 801ba06:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801ba0a:	1212      	asrs	r2, r2, #8
 801ba0c:	0a26      	lsrs	r6, r4, #8
 801ba0e:	2aff      	cmp	r2, #255	@ 0xff
 801ba10:	9605      	str	r6, [sp, #20]
 801ba12:	d116      	bne.n	801ba42 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801ba14:	f06f 0201 	mvn.w	r2, #1
 801ba18:	fb02 fc07 	mul.w	ip, r2, r7
 801ba1c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801ba20:	0962      	lsrs	r2, r4, #5
 801ba22:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ba26:	f026 0607 	bic.w	r6, r6, #7
 801ba2a:	4316      	orrs	r6, r2
 801ba2c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ba30:	4326      	orrs	r6, r4
 801ba32:	f825 600c 	strh.w	r6, [r5, ip]
 801ba36:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ba38:	4410      	add	r0, r2
 801ba3a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ba3c:	3f01      	subs	r7, #1
 801ba3e:	4411      	add	r1, r2
 801ba40:	e787      	b.n	801b952 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ba42:	f06f 0601 	mvn.w	r6, #1
 801ba46:	437e      	muls	r6, r7
 801ba48:	fa1f fa82 	uxth.w	sl, r2
 801ba4c:	f835 8006 	ldrh.w	r8, [r5, r6]
 801ba50:	9602      	str	r6, [sp, #8]
 801ba52:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801ba56:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801ba5a:	43d2      	mvns	r2, r2
 801ba5c:	b2d2      	uxtb	r2, r2
 801ba5e:	fb1c fc0a 	smulbb	ip, ip, sl
 801ba62:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ba66:	fb0e ce02 	mla	lr, lr, r2, ip
 801ba6a:	b2e4      	uxtb	r4, r4
 801ba6c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ba70:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ba74:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ba78:	fa5f f888 	uxtb.w	r8, r8
 801ba7c:	fb14 f40a 	smulbb	r4, r4, sl
 801ba80:	fb08 4402 	mla	r4, r8, r2, r4
 801ba84:	fa1f fe8e 	uxth.w	lr, lr
 801ba88:	fb16 f60a 	smulbb	r6, r6, sl
 801ba8c:	b2a4      	uxth	r4, r4
 801ba8e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801ba92:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ba96:	f10e 0201 	add.w	r2, lr, #1
 801ba9a:	1c66      	adds	r6, r4, #1
 801ba9c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801baa0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801baa4:	fa1f fc8c 	uxth.w	ip, ip
 801baa8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801baac:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801bab0:	ea46 0e0e 	orr.w	lr, r6, lr
 801bab4:	f10c 0601 	add.w	r6, ip, #1
 801bab8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801babc:	0976      	lsrs	r6, r6, #5
 801babe:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801bac2:	9a02      	ldr	r2, [sp, #8]
 801bac4:	ea4e 0e06 	orr.w	lr, lr, r6
 801bac8:	f825 e002 	strh.w	lr, [r5, r2]
 801bacc:	e7b3      	b.n	801ba36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bace:	f04f 0800 	mov.w	r8, #0
 801bad2:	eba3 0208 	sub.w	r2, r3, r8
 801bad6:	2a00      	cmp	r2, #0
 801bad8:	f77f af3e 	ble.w	801b958 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801badc:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801bae0:	1404      	asrs	r4, r0, #16
 801bae2:	140a      	asrs	r2, r1, #16
 801bae4:	fb06 4202 	mla	r2, r6, r2, r4
 801bae8:	9c01      	ldr	r4, [sp, #4]
 801baea:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801baee:	0e22      	lsrs	r2, r4, #24
 801baf0:	d016      	beq.n	801bb20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801baf2:	9e04      	ldr	r6, [sp, #16]
 801baf4:	4372      	muls	r2, r6
 801baf6:	1c56      	adds	r6, r2, #1
 801baf8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801bafc:	1212      	asrs	r2, r2, #8
 801bafe:	2aff      	cmp	r2, #255	@ 0xff
 801bb00:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801bb04:	d113      	bne.n	801bb2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801bb06:	0962      	lsrs	r2, r4, #5
 801bb08:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801bb0c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bb10:	f026 0607 	bic.w	r6, r6, #7
 801bb14:	4316      	orrs	r6, r2
 801bb16:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801bb1a:	4326      	orrs	r6, r4
 801bb1c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801bb20:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bb22:	4410      	add	r0, r2
 801bb24:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bb26:	f108 0801 	add.w	r8, r8, #1
 801bb2a:	4411      	add	r1, r2
 801bb2c:	e7d1      	b.n	801bad2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801bb2e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801bb32:	fa1f fa82 	uxth.w	sl, r2
 801bb36:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bb3a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801bb3e:	43d2      	mvns	r2, r2
 801bb40:	b2d2      	uxtb	r2, r2
 801bb42:	fb17 f70a 	smulbb	r7, r7, sl
 801bb46:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801bb4a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bb4e:	b2e4      	uxtb	r4, r4
 801bb50:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bb54:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bb58:	fa5f fe8e 	uxtb.w	lr, lr
 801bb5c:	fb14 f40a 	smulbb	r4, r4, sl
 801bb60:	fb0e 4402 	mla	r4, lr, r2, r4
 801bb64:	b2f6      	uxtb	r6, r6
 801bb66:	fa1f fc8c 	uxth.w	ip, ip
 801bb6a:	fb16 f60a 	smulbb	r6, r6, sl
 801bb6e:	b2a4      	uxth	r4, r4
 801bb70:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801bb74:	fb07 6702 	mla	r7, r7, r2, r6
 801bb78:	f10c 0201 	add.w	r2, ip, #1
 801bb7c:	1c66      	adds	r6, r4, #1
 801bb7e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bb82:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801bb86:	b2bf      	uxth	r7, r7
 801bb88:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bb8c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801bb90:	ea46 0c0c 	orr.w	ip, r6, ip
 801bb94:	1c7e      	adds	r6, r7, #1
 801bb96:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801bb9a:	0976      	lsrs	r6, r6, #5
 801bb9c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801bba0:	ea4c 0c06 	orr.w	ip, ip, r6
 801bba4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801bba8:	e7ba      	b.n	801bb20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801bbaa:	b007      	add	sp, #28
 801bbac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bbb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bbb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bbb4:	b085      	sub	sp, #20
 801bbb6:	468b      	mov	fp, r1
 801bbb8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bbba:	9203      	str	r2, [sp, #12]
 801bbbc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801bbc0:	6841      	ldr	r1, [r0, #4]
 801bbc2:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801bbc6:	fb01 2404 	mla	r4, r1, r4, r2
 801bbca:	6802      	ldr	r2, [r0, #0]
 801bbcc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bbd0:	f8d8 2000 	ldr.w	r2, [r8]
 801bbd4:	9201      	str	r2, [sp, #4]
 801bbd6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801bbda:	f1bb 0f00 	cmp.w	fp, #0
 801bbde:	dc03      	bgt.n	801bbe8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801bbe0:	9a03      	ldr	r2, [sp, #12]
 801bbe2:	2a00      	cmp	r2, #0
 801bbe4:	f340 814f 	ble.w	801be86 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801bbe8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bbea:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801bbee:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801bbf2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801bbf6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801bbf8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801bbfc:	2b00      	cmp	r3, #0
 801bbfe:	dd0e      	ble.n	801bc1e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bc00:	1408      	asrs	r0, r1, #16
 801bc02:	d405      	bmi.n	801bc10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bc04:	42b8      	cmp	r0, r7
 801bc06:	da03      	bge.n	801bc10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bc08:	1410      	asrs	r0, r2, #16
 801bc0a:	d401      	bmi.n	801bc10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bc0c:	42b0      	cmp	r0, r6
 801bc0e:	db07      	blt.n	801bc20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bc10:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801bc12:	4401      	add	r1, r0
 801bc14:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801bc16:	3b01      	subs	r3, #1
 801bc18:	4402      	add	r2, r0
 801bc1a:	3402      	adds	r4, #2
 801bc1c:	e7ee      	b.n	801bbfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bc1e:	d017      	beq.n	801bc50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bc20:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bc22:	1e58      	subs	r0, r3, #1
 801bc24:	fb05 1500 	mla	r5, r5, r0, r1
 801bc28:	142d      	asrs	r5, r5, #16
 801bc2a:	d409      	bmi.n	801bc40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bc2c:	42bd      	cmp	r5, r7
 801bc2e:	da07      	bge.n	801bc40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bc30:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801bc32:	fb05 2000 	mla	r0, r5, r0, r2
 801bc36:	1400      	asrs	r0, r0, #16
 801bc38:	d402      	bmi.n	801bc40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bc3a:	42b0      	cmp	r0, r6
 801bc3c:	f2c0 80ba 	blt.w	801bdb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801bc40:	2600      	movs	r6, #0
 801bc42:	1998      	adds	r0, r3, r6
 801bc44:	2800      	cmp	r0, #0
 801bc46:	dc3e      	bgt.n	801bcc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801bc48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bc4c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bc50:	f1bb 0f00 	cmp.w	fp, #0
 801bc54:	f340 8117 	ble.w	801be86 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801bc58:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bc5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bc60:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bc64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bc66:	f1bb 0b01 	subs.w	fp, fp, #1
 801bc6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bc6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bc72:	eeb0 6a62 	vmov.f32	s12, s5
 801bc76:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bc7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bc82:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801bc86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bc8a:	eeb0 6a43 	vmov.f32	s12, s6
 801bc8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bc92:	ee12 2a90 	vmov	r2, s5
 801bc96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc9a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc9e:	ee13 2a10 	vmov	r2, s6
 801bca2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bca6:	9311      	str	r3, [sp, #68]	@ 0x44
 801bca8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bcaa:	fb92 f3f3 	sdiv	r3, r2, r3
 801bcae:	9a03      	ldr	r2, [sp, #12]
 801bcb0:	9312      	str	r3, [sp, #72]	@ 0x48
 801bcb2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801bcb6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bcb8:	eeb0 3a67 	vmov.f32	s6, s15
 801bcbc:	bf08      	it	eq
 801bcbe:	4613      	moveq	r3, r2
 801bcc0:	eef0 2a47 	vmov.f32	s5, s14
 801bcc4:	e789      	b.n	801bbda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801bcc6:	140f      	asrs	r7, r1, #16
 801bcc8:	d424      	bmi.n	801bd14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bcca:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801bcce:	42bd      	cmp	r5, r7
 801bcd0:	dd20      	ble.n	801bd14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bcd2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bcd6:	d41d      	bmi.n	801bd14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bcd8:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801bcdc:	4560      	cmp	r0, ip
 801bcde:	dd19      	ble.n	801bd14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bce0:	b22d      	sxth	r5, r5
 801bce2:	fb0c 7505 	mla	r5, ip, r5, r7
 801bce6:	9801      	ldr	r0, [sp, #4]
 801bce8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801bcec:	0e07      	lsrs	r7, r0, #24
 801bcee:	2fff      	cmp	r7, #255	@ 0xff
 801bcf0:	d116      	bne.n	801bd20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801bcf2:	f06f 0501 	mvn.w	r5, #1
 801bcf6:	fb05 f706 	mul.w	r7, r5, r6
 801bcfa:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801bcfe:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801bd02:	0945      	lsrs	r5, r0, #5
 801bd04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bd08:	ea4c 0505 	orr.w	r5, ip, r5
 801bd0c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bd10:	4305      	orrs	r5, r0
 801bd12:	53e5      	strh	r5, [r4, r7]
 801bd14:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801bd16:	4401      	add	r1, r0
 801bd18:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801bd1a:	3e01      	subs	r6, #1
 801bd1c:	4402      	add	r2, r0
 801bd1e:	e790      	b.n	801bc42 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bd20:	b2fd      	uxtb	r5, r7
 801bd22:	2f00      	cmp	r7, #0
 801bd24:	d0f6      	beq.n	801bd14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bd26:	f06f 0701 	mvn.w	r7, #1
 801bd2a:	4377      	muls	r7, r6
 801bd2c:	fa1f f985 	uxth.w	r9, r5
 801bd30:	f834 e007 	ldrh.w	lr, [r4, r7]
 801bd34:	9702      	str	r7, [sp, #8]
 801bd36:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bd3a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801bd3e:	43ed      	mvns	r5, r5
 801bd40:	b2ed      	uxtb	r5, r5
 801bd42:	fb17 f709 	smulbb	r7, r7, r9
 801bd46:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801bd4a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801bd4e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801bd52:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bd56:	b2c0      	uxtb	r0, r0
 801bd58:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bd5c:	fa5f fe8e 	uxtb.w	lr, lr
 801bd60:	fb10 f009 	smulbb	r0, r0, r9
 801bd64:	fb0e 0005 	mla	r0, lr, r5, r0
 801bd68:	b280      	uxth	r0, r0
 801bd6a:	fa1f fc8c 	uxth.w	ip, ip
 801bd6e:	fb1a fa09 	smulbb	sl, sl, r9
 801bd72:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801bd76:	fb07 a705 	mla	r7, r7, r5, sl
 801bd7a:	f100 0a01 	add.w	sl, r0, #1
 801bd7e:	f10c 0501 	add.w	r5, ip, #1
 801bd82:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801bd86:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bd8a:	b2bf      	uxth	r7, r7
 801bd8c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bd90:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801bd94:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bd98:	f107 0a01 	add.w	sl, r7, #1
 801bd9c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bda0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bda4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bda8:	9802      	ldr	r0, [sp, #8]
 801bdaa:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bdae:	f824 c000 	strh.w	ip, [r4, r0]
 801bdb2:	e7af      	b.n	801bd14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bdb4:	f04f 0e00 	mov.w	lr, #0
 801bdb8:	eba3 000e 	sub.w	r0, r3, lr
 801bdbc:	2800      	cmp	r0, #0
 801bdbe:	f77f af43 	ble.w	801bc48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bdc2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801bdc6:	140d      	asrs	r5, r1, #16
 801bdc8:	1410      	asrs	r0, r2, #16
 801bdca:	fb06 5000 	mla	r0, r6, r0, r5
 801bdce:	9d01      	ldr	r5, [sp, #4]
 801bdd0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801bdd4:	0e2e      	lsrs	r6, r5, #24
 801bdd6:	2eff      	cmp	r6, #255	@ 0xff
 801bdd8:	d112      	bne.n	801be00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801bdda:	482c      	ldr	r0, [pc, #176]	@ (801be8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801bddc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801bde0:	0968      	lsrs	r0, r5, #5
 801bde2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bde6:	4330      	orrs	r0, r6
 801bde8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bdec:	4328      	orrs	r0, r5
 801bdee:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801bdf2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801bdf4:	4401      	add	r1, r0
 801bdf6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801bdf8:	f10e 0e01 	add.w	lr, lr, #1
 801bdfc:	4402      	add	r2, r0
 801bdfe:	e7db      	b.n	801bdb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801be00:	b2f0      	uxtb	r0, r6
 801be02:	2e00      	cmp	r6, #0
 801be04:	d0f5      	beq.n	801bdf2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801be06:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801be0a:	fa1f f980 	uxth.w	r9, r0
 801be0e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801be12:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801be16:	43c0      	mvns	r0, r0
 801be18:	b2c0      	uxtb	r0, r0
 801be1a:	fb16 f609 	smulbb	r6, r6, r9
 801be1e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801be22:	fb07 6700 	mla	r7, r7, r0, r6
 801be26:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801be2a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801be2e:	b2ed      	uxtb	r5, r5
 801be30:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801be34:	fa5f fc8c 	uxtb.w	ip, ip
 801be38:	fb15 f509 	smulbb	r5, r5, r9
 801be3c:	fb0c 5500 	mla	r5, ip, r0, r5
 801be40:	b2bf      	uxth	r7, r7
 801be42:	fb1a fa09 	smulbb	sl, sl, r9
 801be46:	b2ad      	uxth	r5, r5
 801be48:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801be4c:	fb06 a600 	mla	r6, r6, r0, sl
 801be50:	1c78      	adds	r0, r7, #1
 801be52:	f105 0a01 	add.w	sl, r5, #1
 801be56:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801be5a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801be5e:	b2b6      	uxth	r6, r6
 801be60:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801be64:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801be68:	ea4a 0707 	orr.w	r7, sl, r7
 801be6c:	f106 0a01 	add.w	sl, r6, #1
 801be70:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801be74:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801be78:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801be7c:	ea47 070a 	orr.w	r7, r7, sl
 801be80:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801be84:	e7b5      	b.n	801bdf2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801be86:	b005      	add	sp, #20
 801be88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be8c:	fffff800 	.word	0xfffff800

0801be90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801be90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be94:	b087      	sub	sp, #28
 801be96:	468b      	mov	fp, r1
 801be98:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801be9a:	9203      	str	r2, [sp, #12]
 801be9c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801bea0:	9204      	str	r2, [sp, #16]
 801bea2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801bea6:	6841      	ldr	r1, [r0, #4]
 801bea8:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801beac:	fb01 2404 	mla	r4, r1, r4, r2
 801beb0:	6802      	ldr	r2, [r0, #0]
 801beb2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801beb6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801beba:	3201      	adds	r2, #1
 801bebc:	f022 0201 	bic.w	r2, r2, #1
 801bec0:	9200      	str	r2, [sp, #0]
 801bec2:	f8d9 2000 	ldr.w	r2, [r9]
 801bec6:	9201      	str	r2, [sp, #4]
 801bec8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801becc:	f1bb 0f00 	cmp.w	fp, #0
 801bed0:	dc03      	bgt.n	801beda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bed2:	9a03      	ldr	r2, [sp, #12]
 801bed4:	2a00      	cmp	r2, #0
 801bed6:	f340 8169 	ble.w	801c1ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801beda:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bedc:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801bee0:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801bee4:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801bee8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801beea:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801beee:	2b00      	cmp	r3, #0
 801bef0:	dd0e      	ble.n	801bf10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bef2:	1402      	asrs	r2, r0, #16
 801bef4:	d405      	bmi.n	801bf02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bef6:	42ba      	cmp	r2, r7
 801bef8:	da03      	bge.n	801bf02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801befa:	140a      	asrs	r2, r1, #16
 801befc:	d401      	bmi.n	801bf02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801befe:	42b2      	cmp	r2, r6
 801bf00:	db07      	blt.n	801bf12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bf02:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bf04:	4410      	add	r0, r2
 801bf06:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bf08:	3b01      	subs	r3, #1
 801bf0a:	4411      	add	r1, r2
 801bf0c:	3402      	adds	r4, #2
 801bf0e:	e7ee      	b.n	801beee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801bf10:	d017      	beq.n	801bf42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bf12:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801bf14:	1e5a      	subs	r2, r3, #1
 801bf16:	fb05 0502 	mla	r5, r5, r2, r0
 801bf1a:	142d      	asrs	r5, r5, #16
 801bf1c:	d409      	bmi.n	801bf32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bf1e:	42bd      	cmp	r5, r7
 801bf20:	da07      	bge.n	801bf32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bf22:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801bf24:	fb05 1202 	mla	r2, r5, r2, r1
 801bf28:	1412      	asrs	r2, r2, #16
 801bf2a:	d402      	bmi.n	801bf32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bf2c:	42b2      	cmp	r2, r6
 801bf2e:	f2c0 80c7 	blt.w	801c0c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801bf32:	2700      	movs	r7, #0
 801bf34:	19da      	adds	r2, r3, r7
 801bf36:	2a00      	cmp	r2, #0
 801bf38:	dc3e      	bgt.n	801bfb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bf3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bf3e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bf42:	f1bb 0f00 	cmp.w	fp, #0
 801bf46:	f340 8131 	ble.w	801c1ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801bf4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bf4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bf52:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bf56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bf58:	f1bb 0b01 	subs.w	fp, fp, #1
 801bf5c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bf60:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bf64:	eeb0 6a62 	vmov.f32	s12, s5
 801bf68:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bf6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bf70:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bf74:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801bf78:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bf7c:	eeb0 6a43 	vmov.f32	s12, s6
 801bf80:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bf84:	ee12 2a90 	vmov	r2, s5
 801bf88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bf8c:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf90:	ee13 2a10 	vmov	r2, s6
 801bf94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bf98:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bf9a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bf9c:	fb92 f3f3 	sdiv	r3, r2, r3
 801bfa0:	9a03      	ldr	r2, [sp, #12]
 801bfa2:	9314      	str	r3, [sp, #80]	@ 0x50
 801bfa4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801bfa8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bfaa:	eeb0 3a67 	vmov.f32	s6, s15
 801bfae:	bf08      	it	eq
 801bfb0:	4613      	moveq	r3, r2
 801bfb2:	eef0 2a47 	vmov.f32	s5, s14
 801bfb6:	e789      	b.n	801becc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bfb8:	1405      	asrs	r5, r0, #16
 801bfba:	d435      	bmi.n	801c028 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bfbc:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801bfc0:	42aa      	cmp	r2, r5
 801bfc2:	dd31      	ble.n	801c028 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bfc4:	140e      	asrs	r6, r1, #16
 801bfc6:	d42f      	bmi.n	801c028 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bfc8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801bfcc:	42b2      	cmp	r2, r6
 801bfce:	dd2b      	ble.n	801c028 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bfd0:	9a00      	ldr	r2, [sp, #0]
 801bfd2:	fb06 5502 	mla	r5, r6, r2, r5
 801bfd6:	086a      	lsrs	r2, r5, #1
 801bfd8:	9e01      	ldr	r6, [sp, #4]
 801bfda:	5cb2      	ldrb	r2, [r6, r2]
 801bfdc:	07ee      	lsls	r6, r5, #31
 801bfde:	bf54      	ite	pl
 801bfe0:	f002 020f 	andpl.w	r2, r2, #15
 801bfe4:	1112      	asrmi	r2, r2, #4
 801bfe6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bfea:	b2d2      	uxtb	r2, r2
 801bfec:	b1e2      	cbz	r2, 801c028 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bfee:	9d04      	ldr	r5, [sp, #16]
 801bff0:	436a      	muls	r2, r5
 801bff2:	1c55      	adds	r5, r2, #1
 801bff4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bff8:	4d6e      	ldr	r5, [pc, #440]	@ (801c1b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bffa:	682d      	ldr	r5, [r5, #0]
 801bffc:	1212      	asrs	r2, r2, #8
 801bffe:	0a2e      	lsrs	r6, r5, #8
 801c000:	2aff      	cmp	r2, #255	@ 0xff
 801c002:	9605      	str	r6, [sp, #20]
 801c004:	d116      	bne.n	801c034 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c006:	f06f 0201 	mvn.w	r2, #1
 801c00a:	fb02 fc07 	mul.w	ip, r2, r7
 801c00e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801c012:	096a      	lsrs	r2, r5, #5
 801c014:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c018:	f026 0607 	bic.w	r6, r6, #7
 801c01c:	4316      	orrs	r6, r2
 801c01e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c022:	432e      	orrs	r6, r5
 801c024:	f824 600c 	strh.w	r6, [r4, ip]
 801c028:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c02a:	4410      	add	r0, r2
 801c02c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c02e:	3f01      	subs	r7, #1
 801c030:	4411      	add	r1, r2
 801c032:	e77f      	b.n	801bf34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801c034:	f06f 0601 	mvn.w	r6, #1
 801c038:	437e      	muls	r6, r7
 801c03a:	fa1f fa82 	uxth.w	sl, r2
 801c03e:	f834 8006 	ldrh.w	r8, [r4, r6]
 801c042:	9602      	str	r6, [sp, #8]
 801c044:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c048:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801c04c:	43d2      	mvns	r2, r2
 801c04e:	b2d2      	uxtb	r2, r2
 801c050:	fb1c fc0a 	smulbb	ip, ip, sl
 801c054:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801c058:	fb0e ce02 	mla	lr, lr, r2, ip
 801c05c:	b2ed      	uxtb	r5, r5
 801c05e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c062:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c066:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c06a:	fa5f f888 	uxtb.w	r8, r8
 801c06e:	fb15 f50a 	smulbb	r5, r5, sl
 801c072:	fb08 5502 	mla	r5, r8, r2, r5
 801c076:	fa1f fe8e 	uxth.w	lr, lr
 801c07a:	fb16 f60a 	smulbb	r6, r6, sl
 801c07e:	b2ad      	uxth	r5, r5
 801c080:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801c084:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c088:	f10e 0201 	add.w	r2, lr, #1
 801c08c:	1c6e      	adds	r6, r5, #1
 801c08e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c092:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801c096:	fa1f fc8c 	uxth.w	ip, ip
 801c09a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c09e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801c0a2:	ea46 0e0e 	orr.w	lr, r6, lr
 801c0a6:	f10c 0601 	add.w	r6, ip, #1
 801c0aa:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c0ae:	0976      	lsrs	r6, r6, #5
 801c0b0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801c0b4:	9a02      	ldr	r2, [sp, #8]
 801c0b6:	ea4e 0e06 	orr.w	lr, lr, r6
 801c0ba:	f824 e002 	strh.w	lr, [r4, r2]
 801c0be:	e7b3      	b.n	801c028 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c0c0:	f04f 0800 	mov.w	r8, #0
 801c0c4:	eba3 0208 	sub.w	r2, r3, r8
 801c0c8:	2a00      	cmp	r2, #0
 801c0ca:	f77f af36 	ble.w	801bf3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801c0ce:	9e00      	ldr	r6, [sp, #0]
 801c0d0:	1402      	asrs	r2, r0, #16
 801c0d2:	140d      	asrs	r5, r1, #16
 801c0d4:	fb06 2505 	mla	r5, r6, r5, r2
 801c0d8:	086a      	lsrs	r2, r5, #1
 801c0da:	9e01      	ldr	r6, [sp, #4]
 801c0dc:	5cb2      	ldrb	r2, [r6, r2]
 801c0de:	07ed      	lsls	r5, r5, #31
 801c0e0:	bf54      	ite	pl
 801c0e2:	f002 020f 	andpl.w	r2, r2, #15
 801c0e6:	1112      	asrmi	r2, r2, #4
 801c0e8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c0ec:	b2d2      	uxtb	r2, r2
 801c0ee:	b1c2      	cbz	r2, 801c122 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c0f0:	9d04      	ldr	r5, [sp, #16]
 801c0f2:	436a      	muls	r2, r5
 801c0f4:	1c55      	adds	r5, r2, #1
 801c0f6:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c0fa:	4d2e      	ldr	r5, [pc, #184]	@ (801c1b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c0fc:	1212      	asrs	r2, r2, #8
 801c0fe:	682e      	ldr	r6, [r5, #0]
 801c100:	2aff      	cmp	r2, #255	@ 0xff
 801c102:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801c106:	d113      	bne.n	801c130 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c108:	0972      	lsrs	r2, r6, #5
 801c10a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801c10e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c112:	f025 0507 	bic.w	r5, r5, #7
 801c116:	4315      	orrs	r5, r2
 801c118:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c11c:	4335      	orrs	r5, r6
 801c11e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801c122:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c124:	4410      	add	r0, r2
 801c126:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c128:	f108 0801 	add.w	r8, r8, #1
 801c12c:	4411      	add	r1, r2
 801c12e:	e7c9      	b.n	801c0c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c130:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801c134:	fa1f fa82 	uxth.w	sl, r2
 801c138:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c13c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801c140:	43d2      	mvns	r2, r2
 801c142:	b2d2      	uxtb	r2, r2
 801c144:	fb17 f70a 	smulbb	r7, r7, sl
 801c148:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c14c:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c150:	b2f6      	uxtb	r6, r6
 801c152:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c156:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c15a:	fa5f fe8e 	uxtb.w	lr, lr
 801c15e:	fb16 f60a 	smulbb	r6, r6, sl
 801c162:	fb0e 6602 	mla	r6, lr, r2, r6
 801c166:	b2ed      	uxtb	r5, r5
 801c168:	fa1f fc8c 	uxth.w	ip, ip
 801c16c:	fb15 f50a 	smulbb	r5, r5, sl
 801c170:	b2b6      	uxth	r6, r6
 801c172:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c176:	fb07 5702 	mla	r7, r7, r2, r5
 801c17a:	f10c 0201 	add.w	r2, ip, #1
 801c17e:	1c75      	adds	r5, r6, #1
 801c180:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c184:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c188:	b2bf      	uxth	r7, r7
 801c18a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c18e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c192:	ea45 0c0c 	orr.w	ip, r5, ip
 801c196:	1c7d      	adds	r5, r7, #1
 801c198:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801c19c:	096d      	lsrs	r5, r5, #5
 801c19e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c1a2:	ea4c 0c05 	orr.w	ip, ip, r5
 801c1a6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801c1aa:	e7ba      	b.n	801c122 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c1ac:	b007      	add	sp, #28
 801c1ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c1b2:	bf00      	nop
 801c1b4:	20013f70 	.word	0x20013f70

0801c1b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c1b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1bc:	b087      	sub	sp, #28
 801c1be:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 801c4cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801c1c2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c1c4:	9205      	str	r2, [sp, #20]
 801c1c6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801c1ca:	9101      	str	r1, [sp, #4]
 801c1cc:	6841      	ldr	r1, [r0, #4]
 801c1ce:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 801c1d2:	fb01 2404 	mla	r4, r1, r4, r2
 801c1d6:	6802      	ldr	r2, [r0, #0]
 801c1d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c1dc:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c1e0:	3201      	adds	r2, #1
 801c1e2:	f022 0201 	bic.w	r2, r2, #1
 801c1e6:	9202      	str	r2, [sp, #8]
 801c1e8:	f8db 2000 	ldr.w	r2, [fp]
 801c1ec:	9203      	str	r2, [sp, #12]
 801c1ee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801c1f2:	9a01      	ldr	r2, [sp, #4]
 801c1f4:	2a00      	cmp	r2, #0
 801c1f6:	dc03      	bgt.n	801c200 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c1f8:	9a05      	ldr	r2, [sp, #20]
 801c1fa:	2a00      	cmp	r2, #0
 801c1fc:	f340 8162 	ble.w	801c4c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c200:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c202:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801c206:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801c20a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801c20e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c210:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801c214:	2b00      	cmp	r3, #0
 801c216:	dd0e      	ble.n	801c236 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c218:	1402      	asrs	r2, r0, #16
 801c21a:	d405      	bmi.n	801c228 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c21c:	42ba      	cmp	r2, r7
 801c21e:	da03      	bge.n	801c228 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c220:	140a      	asrs	r2, r1, #16
 801c222:	d401      	bmi.n	801c228 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c224:	42b2      	cmp	r2, r6
 801c226:	db07      	blt.n	801c238 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c228:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c22a:	4410      	add	r0, r2
 801c22c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c22e:	3b01      	subs	r3, #1
 801c230:	4411      	add	r1, r2
 801c232:	3402      	adds	r4, #2
 801c234:	e7ee      	b.n	801c214 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c236:	d017      	beq.n	801c268 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c238:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c23a:	1e5a      	subs	r2, r3, #1
 801c23c:	fb05 0502 	mla	r5, r5, r2, r0
 801c240:	142d      	asrs	r5, r5, #16
 801c242:	d409      	bmi.n	801c258 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c244:	42bd      	cmp	r5, r7
 801c246:	da07      	bge.n	801c258 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c248:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c24a:	fb05 1202 	mla	r2, r5, r2, r1
 801c24e:	1412      	asrs	r2, r2, #16
 801c250:	d402      	bmi.n	801c258 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c252:	42b2      	cmp	r2, r6
 801c254:	f2c0 80c3 	blt.w	801c3de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801c258:	2500      	movs	r5, #0
 801c25a:	195a      	adds	r2, r3, r5
 801c25c:	2a00      	cmp	r2, #0
 801c25e:	dc3f      	bgt.n	801c2e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c260:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c264:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c268:	9b01      	ldr	r3, [sp, #4]
 801c26a:	2b00      	cmp	r3, #0
 801c26c:	f340 812a 	ble.w	801c4c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c270:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c274:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c278:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c27c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c27e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c282:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c286:	eeb0 6a62 	vmov.f32	s12, s5
 801c28a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c28e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c292:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c296:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801c29a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c29e:	eeb0 6a43 	vmov.f32	s12, s6
 801c2a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c2a6:	ee12 2a90 	vmov	r2, s5
 801c2aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c2ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2b2:	ee13 2a10 	vmov	r2, s6
 801c2b6:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c2b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c2ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2be:	9314      	str	r3, [sp, #80]	@ 0x50
 801c2c0:	9b01      	ldr	r3, [sp, #4]
 801c2c2:	9a05      	ldr	r2, [sp, #20]
 801c2c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c2c8:	3b01      	subs	r3, #1
 801c2ca:	9301      	str	r3, [sp, #4]
 801c2cc:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801c2d0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c2d2:	eeb0 3a67 	vmov.f32	s6, s15
 801c2d6:	bf08      	it	eq
 801c2d8:	4613      	moveq	r3, r2
 801c2da:	eef0 2a47 	vmov.f32	s5, s14
 801c2de:	e788      	b.n	801c1f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c2e0:	1406      	asrs	r6, r0, #16
 801c2e2:	d42c      	bmi.n	801c33e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c2e4:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c2e8:	42b2      	cmp	r2, r6
 801c2ea:	dd28      	ble.n	801c33e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c2ec:	140f      	asrs	r7, r1, #16
 801c2ee:	d426      	bmi.n	801c33e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c2f0:	f8db 200c 	ldr.w	r2, [fp, #12]
 801c2f4:	42ba      	cmp	r2, r7
 801c2f6:	dd22      	ble.n	801c33e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c2f8:	9a02      	ldr	r2, [sp, #8]
 801c2fa:	fb07 6602 	mla	r6, r7, r2, r6
 801c2fe:	0872      	lsrs	r2, r6, #1
 801c300:	9f03      	ldr	r7, [sp, #12]
 801c302:	5cba      	ldrb	r2, [r7, r2]
 801c304:	07f6      	lsls	r6, r6, #31
 801c306:	bf54      	ite	pl
 801c308:	f002 020f 	andpl.w	r2, r2, #15
 801c30c:	1112      	asrmi	r2, r2, #4
 801c30e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c312:	b2d2      	uxtb	r2, r2
 801c314:	2aff      	cmp	r2, #255	@ 0xff
 801c316:	d118      	bne.n	801c34a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801c318:	f8d8 2000 	ldr.w	r2, [r8]
 801c31c:	f06f 0601 	mvn.w	r6, #1
 801c320:	fb06 f705 	mul.w	r7, r6, r5
 801c324:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 801c328:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801c32c:	0956      	lsrs	r6, r2, #5
 801c32e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801c332:	ea4c 0606 	orr.w	r6, ip, r6
 801c336:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c33a:	4316      	orrs	r6, r2
 801c33c:	53e6      	strh	r6, [r4, r7]
 801c33e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c340:	4410      	add	r0, r2
 801c342:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c344:	3d01      	subs	r5, #1
 801c346:	4411      	add	r1, r2
 801c348:	e787      	b.n	801c25a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c34a:	2a00      	cmp	r2, #0
 801c34c:	d0f7      	beq.n	801c33e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c34e:	f06f 0601 	mvn.w	r6, #1
 801c352:	436e      	muls	r6, r5
 801c354:	f8d8 c000 	ldr.w	ip, [r8]
 801c358:	f834 e006 	ldrh.w	lr, [r4, r6]
 801c35c:	9604      	str	r6, [sp, #16]
 801c35e:	fa1f f982 	uxth.w	r9, r2
 801c362:	ea4f 272e 	mov.w	r7, lr, asr #8
 801c366:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801c36a:	43d2      	mvns	r2, r2
 801c36c:	b2d2      	uxtb	r2, r2
 801c36e:	fb16 f609 	smulbb	r6, r6, r9
 801c372:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801c376:	fb07 6702 	mla	r7, r7, r2, r6
 801c37a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801c37e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c382:	fa5f fc8c 	uxtb.w	ip, ip
 801c386:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c38a:	fa5f fe8e 	uxtb.w	lr, lr
 801c38e:	fb1c fc09 	smulbb	ip, ip, r9
 801c392:	fb0e cc02 	mla	ip, lr, r2, ip
 801c396:	b2bf      	uxth	r7, r7
 801c398:	fb1a fa09 	smulbb	sl, sl, r9
 801c39c:	fa1f fc8c 	uxth.w	ip, ip
 801c3a0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c3a4:	fb06 a602 	mla	r6, r6, r2, sl
 801c3a8:	1c7a      	adds	r2, r7, #1
 801c3aa:	f10c 0a01 	add.w	sl, ip, #1
 801c3ae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c3b2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801c3b6:	b2b6      	uxth	r6, r6
 801c3b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c3bc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801c3c0:	ea4a 0707 	orr.w	r7, sl, r7
 801c3c4:	f106 0a01 	add.w	sl, r6, #1
 801c3c8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c3cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c3d0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c3d4:	9a04      	ldr	r2, [sp, #16]
 801c3d6:	ea47 070a 	orr.w	r7, r7, sl
 801c3da:	52a7      	strh	r7, [r4, r2]
 801c3dc:	e7af      	b.n	801c33e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c3de:	f04f 0e00 	mov.w	lr, #0
 801c3e2:	eba3 020e 	sub.w	r2, r3, lr
 801c3e6:	2a00      	cmp	r2, #0
 801c3e8:	f77f af3a 	ble.w	801c260 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c3ec:	9e02      	ldr	r6, [sp, #8]
 801c3ee:	1402      	asrs	r2, r0, #16
 801c3f0:	140d      	asrs	r5, r1, #16
 801c3f2:	fb06 2505 	mla	r5, r6, r5, r2
 801c3f6:	086a      	lsrs	r2, r5, #1
 801c3f8:	9e03      	ldr	r6, [sp, #12]
 801c3fa:	5cb2      	ldrb	r2, [r6, r2]
 801c3fc:	07ed      	lsls	r5, r5, #31
 801c3fe:	bf54      	ite	pl
 801c400:	f002 020f 	andpl.w	r2, r2, #15
 801c404:	1112      	asrmi	r2, r2, #4
 801c406:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c40a:	b2d2      	uxtb	r2, r2
 801c40c:	2aff      	cmp	r2, #255	@ 0xff
 801c40e:	d115      	bne.n	801c43c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801c410:	f8d8 5000 	ldr.w	r5, [r8]
 801c414:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 801c418:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801c41c:	096a      	lsrs	r2, r5, #5
 801c41e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c422:	4332      	orrs	r2, r6
 801c424:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c428:	432a      	orrs	r2, r5
 801c42a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801c42e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c430:	4410      	add	r0, r2
 801c432:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c434:	f10e 0e01 	add.w	lr, lr, #1
 801c438:	4411      	add	r1, r2
 801c43a:	e7d2      	b.n	801c3e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c43c:	2a00      	cmp	r2, #0
 801c43e:	d0f6      	beq.n	801c42e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c440:	f8d8 7000 	ldr.w	r7, [r8]
 801c444:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c448:	fa1f f982 	uxth.w	r9, r2
 801c44c:	ea4f 262c 	mov.w	r6, ip, asr #8
 801c450:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801c454:	43d2      	mvns	r2, r2
 801c456:	b2d2      	uxtb	r2, r2
 801c458:	fb15 f509 	smulbb	r5, r5, r9
 801c45c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c460:	fb06 5602 	mla	r6, r6, r2, r5
 801c464:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801c468:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c46c:	b2ff      	uxtb	r7, r7
 801c46e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c472:	fa5f fc8c 	uxtb.w	ip, ip
 801c476:	fb17 f709 	smulbb	r7, r7, r9
 801c47a:	fb0c 7702 	mla	r7, ip, r2, r7
 801c47e:	b2b6      	uxth	r6, r6
 801c480:	fb1a fa09 	smulbb	sl, sl, r9
 801c484:	b2bf      	uxth	r7, r7
 801c486:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c48a:	fb05 a502 	mla	r5, r5, r2, sl
 801c48e:	1c72      	adds	r2, r6, #1
 801c490:	f107 0a01 	add.w	sl, r7, #1
 801c494:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c498:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c49c:	b2ad      	uxth	r5, r5
 801c49e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c4a2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801c4a6:	ea4a 0606 	orr.w	r6, sl, r6
 801c4aa:	f105 0a01 	add.w	sl, r5, #1
 801c4ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c4b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c4b6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c4ba:	ea46 060a 	orr.w	r6, r6, sl
 801c4be:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801c4c2:	e7b4      	b.n	801c42e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c4c4:	b007      	add	sp, #28
 801c4c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4ca:	bf00      	nop
 801c4cc:	20013f70 	.word	0x20013f70

0801c4d0 <_ZN8touchgfx8LCD16bppD1Ev>:
 801c4d0:	4770      	bx	lr

0801c4d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 801c4d2:	4770      	bx	lr

0801c4d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801c4d4:	4770      	bx	lr

0801c4d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801c4d6:	4770      	bx	lr

0801c4d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801c4d8:	4770      	bx	lr

0801c4da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801c4da:	4770      	bx	lr

0801c4dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801c4dc:	4770      	bx	lr

0801c4de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801c4de:	4770      	bx	lr

0801c4e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801c4e0:	4770      	bx	lr

0801c4e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c4e2:	4770      	bx	lr

0801c4e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c4e4:	4770      	bx	lr

0801c4e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c4e6:	4770      	bx	lr

0801c4e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c4e8:	4770      	bx	lr

0801c4ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c4ea:	4770      	bx	lr

0801c4ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c4ec:	4770      	bx	lr

0801c4ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c4ee:	4770      	bx	lr

0801c4f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c4f0:	4770      	bx	lr

0801c4f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c4f2:	4770      	bx	lr

0801c4f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c4f4:	4770      	bx	lr

0801c4f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c4f6:	4770      	bx	lr

0801c4f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c4f8:	4770      	bx	lr

0801c4fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c4fa:	4770      	bx	lr

0801c4fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c4fc:	4770      	bx	lr

0801c4fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c4fe:	4770      	bx	lr

0801c500 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c500:	4770      	bx	lr

0801c502 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c502:	4770      	bx	lr

0801c504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801c504:	4770      	bx	lr

0801c506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c506:	4770      	bx	lr

0801c508 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801c508:	4770      	bx	lr

0801c50a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c50a:	4770      	bx	lr

0801c50c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c50c:	4770      	bx	lr

0801c50e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c50e:	4770      	bx	lr

0801c510 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c510:	4770      	bx	lr

0801c512 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801c512:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c516:	b088      	sub	sp, #32
 801c518:	ac08      	add	r4, sp, #32
 801c51a:	4606      	mov	r6, r0
 801c51c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801c520:	4620      	mov	r0, r4
 801c522:	4688      	mov	r8, r1
 801c524:	4691      	mov	r9, r2
 801c526:	f7fd fc31 	bl	8019d8c <_ZNK8touchgfx6Bitmap7getDataEv>
 801c52a:	6833      	ldr	r3, [r6, #0]
 801c52c:	4605      	mov	r5, r0
 801c52e:	4620      	mov	r0, r4
 801c530:	699f      	ldr	r7, [r3, #24]
 801c532:	f7fd fb39 	bl	8019ba8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c536:	4682      	mov	sl, r0
 801c538:	4620      	mov	r0, r4
 801c53a:	f7fd fb69 	bl	8019c10 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c53e:	9500      	str	r5, [sp, #0]
 801c540:	e9cd a001 	strd	sl, r0, [sp, #4]
 801c544:	464b      	mov	r3, r9
 801c546:	a806      	add	r0, sp, #24
 801c548:	4642      	mov	r2, r8
 801c54a:	4631      	mov	r1, r6
 801c54c:	47b8      	blx	r7
 801c54e:	4628      	mov	r0, r5
 801c550:	b008      	add	sp, #32
 801c552:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801c558 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801c558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c55c:	2300      	movs	r3, #0
 801c55e:	9300      	str	r3, [sp, #0]
 801c560:	4b3d      	ldr	r3, [pc, #244]	@ (801c658 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801c562:	781b      	ldrb	r3, [r3, #0]
 801c564:	2b00      	cmp	r3, #0
 801c566:	d137      	bne.n	801c5d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801c568:	4a3c      	ldr	r2, [pc, #240]	@ (801c65c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c56a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801c56e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801c572:	2b00      	cmp	r3, #0
 801c574:	d132      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801c576:	4b3a      	ldr	r3, [pc, #232]	@ (801c660 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c578:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c57c:	6808      	ldr	r0, [r1, #0]
 801c57e:	6849      	ldr	r1, [r1, #4]
 801c580:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c584:	ac02      	add	r4, sp, #8
 801c586:	ab02      	add	r3, sp, #8
 801c588:	c303      	stmia	r3!, {r0, r1}
 801c58a:	4669      	mov	r1, sp
 801c58c:	4620      	mov	r0, r4
 801c58e:	f7f9 fcc9 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c592:	4668      	mov	r0, sp
 801c594:	f7f9 fc9e 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c598:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801c59c:	f8bd 2000 	ldrh.w	r2, [sp]
 801c5a0:	4d30      	ldr	r5, [pc, #192]	@ (801c664 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801c5a2:	4413      	add	r3, r2
 801c5a4:	f8ad 3008 	strh.w	r3, [sp, #8]
 801c5a8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c5ac:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801c5b0:	6828      	ldr	r0, [r5, #0]
 801c5b2:	4413      	add	r3, r2
 801c5b4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c5b8:	6803      	ldr	r3, [r0, #0]
 801c5ba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c5bc:	4798      	blx	r3
 801c5be:	f010 0f01 	tst.w	r0, #1
 801c5c2:	462f      	mov	r7, r5
 801c5c4:	d00c      	beq.n	801c5e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801c5c6:	6828      	ldr	r0, [r5, #0]
 801c5c8:	6803      	ldr	r3, [r0, #0]
 801c5ca:	e894 0006 	ldmia.w	r4, {r1, r2}
 801c5ce:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801c5d0:	4798      	blx	r3
 801c5d2:	b004      	add	sp, #16
 801c5d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c5d8:	4a21      	ldr	r2, [pc, #132]	@ (801c660 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c5da:	e7c6      	b.n	801c56a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801c5dc:	4b1f      	ldr	r3, [pc, #124]	@ (801c65c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c5de:	e7cb      	b.n	801c578 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801c5e0:	6838      	ldr	r0, [r7, #0]
 801c5e2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801c5e6:	6803      	ldr	r3, [r0, #0]
 801c5e8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801c5ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c5ee:	4798      	blx	r3
 801c5f0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801c5f4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c5f8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801c5fc:	fb16 3602 	smlabb	r6, r6, r2, r3
 801c600:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c604:	6838      	ldr	r0, [r7, #0]
 801c606:	6803      	ldr	r3, [r0, #0]
 801c608:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c60a:	4798      	blx	r3
 801c60c:	4a13      	ldr	r2, [pc, #76]	@ (801c65c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c60e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801c612:	8813      	ldrh	r3, [r2, #0]
 801c614:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c618:	fb03 1404 	mla	r4, r3, r4, r1
 801c61c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c620:	435d      	muls	r5, r3
 801c622:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c626:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801c62a:	4691      	mov	r9, r2
 801c62c:	6838      	ldr	r0, [r7, #0]
 801c62e:	42ac      	cmp	r4, r5
 801c630:	6803      	ldr	r3, [r0, #0]
 801c632:	d20e      	bcs.n	801c652 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801c634:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 801c638:	4632      	mov	r2, r6
 801c63a:	4643      	mov	r3, r8
 801c63c:	4621      	mov	r1, r4
 801c63e:	47d0      	blx	sl
 801c640:	f8b9 3000 	ldrh.w	r3, [r9]
 801c644:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c648:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801c64c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c650:	e7ec      	b.n	801c62c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801c652:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c654:	4798      	blx	r3
 801c656:	e7bc      	b.n	801c5d2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c658:	20013f58 	.word	0x20013f58
 801c65c:	20013f5a 	.word	0x20013f5a
 801c660:	20013f5c 	.word	0x20013f5c
 801c664:	20013f60 	.word	0x20013f60

0801c668 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c66c:	b08b      	sub	sp, #44	@ 0x2c
 801c66e:	460f      	mov	r7, r1
 801c670:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 801c674:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801c678:	4616      	mov	r6, r2
 801c67a:	f1bb 0f00 	cmp.w	fp, #0
 801c67e:	d04a      	beq.n	801c716 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c680:	6810      	ldr	r0, [r2, #0]
 801c682:	6851      	ldr	r1, [r2, #4]
 801c684:	ad06      	add	r5, sp, #24
 801c686:	c503      	stmia	r5!, {r0, r1}
 801c688:	6818      	ldr	r0, [r3, #0]
 801c68a:	6859      	ldr	r1, [r3, #4]
 801c68c:	ad08      	add	r5, sp, #32
 801c68e:	c503      	stmia	r5!, {r0, r1}
 801c690:	a806      	add	r0, sp, #24
 801c692:	f7f9 fc1f 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c696:	4631      	mov	r1, r6
 801c698:	a808      	add	r0, sp, #32
 801c69a:	f7f9 fc43 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c69e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c6a2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801c6a6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c6aa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801c6ae:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801c6b2:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c6b6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c6ba:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c6be:	4f5f      	ldr	r7, [pc, #380]	@ (801c83c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c6c0:	440a      	add	r2, r1
 801c6c2:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c6c6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c6ca:	6838      	ldr	r0, [r7, #0]
 801c6cc:	4413      	add	r3, r2
 801c6ce:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801c6d2:	6803      	ldr	r3, [r0, #0]
 801c6d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c6d6:	4798      	blx	r3
 801c6d8:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801c6dc:	46b9      	mov	r9, r7
 801c6de:	d11d      	bne.n	801c71c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801c6e0:	b9fc      	cbnz	r4, 801c722 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c6e2:	f010 0f01 	tst.w	r0, #1
 801c6e6:	d01c      	beq.n	801c722 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c6e8:	f8d9 0000 	ldr.w	r0, [r9]
 801c6ec:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801c6f0:	6801      	ldr	r1, [r0, #0]
 801c6f2:	f8cd b00c 	str.w	fp, [sp, #12]
 801c6f6:	2700      	movs	r7, #0
 801c6f8:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c6fc:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c700:	9402      	str	r4, [sp, #8]
 801c702:	b2ad      	uxth	r5, r5
 801c704:	fa1f f488 	uxth.w	r4, r8
 801c708:	9501      	str	r5, [sp, #4]
 801c70a:	9400      	str	r4, [sp, #0]
 801c70c:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 801c70e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c712:	4631      	mov	r1, r6
 801c714:	47a0      	blx	r4
 801c716:	b00b      	add	sp, #44	@ 0x2c
 801c718:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c71c:	f010 0f04 	tst.w	r0, #4
 801c720:	e7e1      	b.n	801c6e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801c722:	f8d9 0000 	ldr.w	r0, [r9]
 801c726:	6803      	ldr	r3, [r0, #0]
 801c728:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c72a:	4798      	blx	r3
 801c72c:	4b44      	ldr	r3, [pc, #272]	@ (801c840 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c72e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801c732:	881a      	ldrh	r2, [r3, #0]
 801c734:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c738:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801c73c:	fb02 1404 	mla	r4, r2, r4, r1
 801c740:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c744:	469a      	mov	sl, r3
 801c746:	fb05 f502 	mul.w	r5, r5, r2
 801c74a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c74e:	d059      	beq.n	801c804 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c750:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801c754:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c758:	fa1f f28b 	uxth.w	r2, fp
 801c75c:	fa1f f989 	uxth.w	r9, r9
 801c760:	469e      	mov	lr, r3
 801c762:	42ac      	cmp	r4, r5
 801c764:	d264      	bcs.n	801c830 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c766:	eb04 0a07 	add.w	sl, r4, r7
 801c76a:	4554      	cmp	r4, sl
 801c76c:	d23d      	bcs.n	801c7ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c76e:	8821      	ldrh	r1, [r4, #0]
 801c770:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c774:	1208      	asrs	r0, r1, #8
 801c776:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c77a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c77e:	fb10 f009 	smulbb	r0, r0, r9
 801c782:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c786:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c78a:	00c9      	lsls	r1, r1, #3
 801c78c:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c790:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801c794:	10d8      	asrs	r0, r3, #3
 801c796:	b2c9      	uxtb	r1, r1
 801c798:	00db      	lsls	r3, r3, #3
 801c79a:	fa1f fc8c 	uxth.w	ip, ip
 801c79e:	fb1b fb09 	smulbb	fp, fp, r9
 801c7a2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c7a6:	b2db      	uxtb	r3, r3
 801c7a8:	fb11 f109 	smulbb	r1, r1, r9
 801c7ac:	fb00 b002 	mla	r0, r0, r2, fp
 801c7b0:	fb03 1302 	mla	r3, r3, r2, r1
 801c7b4:	f10c 0b01 	add.w	fp, ip, #1
 801c7b8:	b29b      	uxth	r3, r3
 801c7ba:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c7be:	b280      	uxth	r0, r0
 801c7c0:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 801c7c4:	f103 0c01 	add.w	ip, r3, #1
 801c7c8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c7cc:	1c43      	adds	r3, r0, #1
 801c7ce:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c7d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c7d6:	0940      	lsrs	r0, r0, #5
 801c7d8:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c7dc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c7e0:	ea4c 0c00 	orr.w	ip, ip, r0
 801c7e4:	f824 cb02 	strh.w	ip, [r4], #2
 801c7e8:	e7bf      	b.n	801c76a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c7ea:	f8be 3000 	ldrh.w	r3, [lr]
 801c7ee:	eba3 0308 	sub.w	r3, r3, r8
 801c7f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c7f6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c7fa:	eba3 0308 	sub.w	r3, r3, r8
 801c7fe:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c802:	e7ae      	b.n	801c762 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c804:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c808:	f8d9 0000 	ldr.w	r0, [r9]
 801c80c:	42ac      	cmp	r4, r5
 801c80e:	6803      	ldr	r3, [r0, #0]
 801c810:	d20e      	bcs.n	801c830 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c812:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 801c816:	4632      	mov	r2, r6
 801c818:	463b      	mov	r3, r7
 801c81a:	4621      	mov	r1, r4
 801c81c:	47c0      	blx	r8
 801c81e:	f8ba 3000 	ldrh.w	r3, [sl]
 801c822:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c826:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c82a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c82e:	e7eb      	b.n	801c808 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c830:	4b02      	ldr	r3, [pc, #8]	@ (801c83c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c832:	6818      	ldr	r0, [r3, #0]
 801c834:	6803      	ldr	r3, [r0, #0]
 801c836:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c838:	4798      	blx	r3
 801c83a:	e76c      	b.n	801c716 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c83c:	20013f60 	.word	0x20013f60
 801c840:	20013f5a 	.word	0x20013f5a

0801c844 <_ZN8touchgfx8LCD16bppD0Ev>:
 801c844:	b510      	push	{r4, lr}
 801c846:	218c      	movs	r1, #140	@ 0x8c
 801c848:	4604      	mov	r4, r0
 801c84a:	f00c f9f5 	bl	8028c38 <_ZdlPvj>
 801c84e:	4620      	mov	r0, r4
 801c850:	bd10      	pop	{r4, pc}

0801c852 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c852:	b510      	push	{r4, lr}
 801c854:	2104      	movs	r1, #4
 801c856:	4604      	mov	r4, r0
 801c858:	f00c f9ee 	bl	8028c38 <_ZdlPvj>
 801c85c:	4620      	mov	r0, r4
 801c85e:	bd10      	pop	{r4, pc}

0801c860 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c860:	b510      	push	{r4, lr}
 801c862:	2104      	movs	r1, #4
 801c864:	4604      	mov	r4, r0
 801c866:	f00c f9e7 	bl	8028c38 <_ZdlPvj>
 801c86a:	4620      	mov	r0, r4
 801c86c:	bd10      	pop	{r4, pc}

0801c86e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c86e:	b510      	push	{r4, lr}
 801c870:	f640 0144 	movw	r1, #2116	@ 0x844
 801c874:	4604      	mov	r4, r0
 801c876:	f00c f9df 	bl	8028c38 <_ZdlPvj>
 801c87a:	4620      	mov	r0, r4
 801c87c:	bd10      	pop	{r4, pc}

0801c87e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801c87e:	b510      	push	{r4, lr}
 801c880:	f44f 7182 	mov.w	r1, #260	@ 0x104
 801c884:	4604      	mov	r4, r0
 801c886:	f00c f9d7 	bl	8028c38 <_ZdlPvj>
 801c88a:	4620      	mov	r0, r4
 801c88c:	bd10      	pop	{r4, pc}

0801c88e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c88e:	b510      	push	{r4, lr}
 801c890:	2104      	movs	r1, #4
 801c892:	4604      	mov	r4, r0
 801c894:	f00c f9d0 	bl	8028c38 <_ZdlPvj>
 801c898:	4620      	mov	r0, r4
 801c89a:	bd10      	pop	{r4, pc}

0801c89c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c89c:	b510      	push	{r4, lr}
 801c89e:	2104      	movs	r1, #4
 801c8a0:	4604      	mov	r4, r0
 801c8a2:	f00c f9c9 	bl	8028c38 <_ZdlPvj>
 801c8a6:	4620      	mov	r0, r4
 801c8a8:	bd10      	pop	{r4, pc}

0801c8aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c8aa:	b510      	push	{r4, lr}
 801c8ac:	2104      	movs	r1, #4
 801c8ae:	4604      	mov	r4, r0
 801c8b0:	f00c f9c2 	bl	8028c38 <_ZdlPvj>
 801c8b4:	4620      	mov	r0, r4
 801c8b6:	bd10      	pop	{r4, pc}

0801c8b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c8b8:	b510      	push	{r4, lr}
 801c8ba:	2104      	movs	r1, #4
 801c8bc:	4604      	mov	r4, r0
 801c8be:	f00c f9bb 	bl	8028c38 <_ZdlPvj>
 801c8c2:	4620      	mov	r0, r4
 801c8c4:	bd10      	pop	{r4, pc}

0801c8c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c8c6:	b510      	push	{r4, lr}
 801c8c8:	2104      	movs	r1, #4
 801c8ca:	4604      	mov	r4, r0
 801c8cc:	f00c f9b4 	bl	8028c38 <_ZdlPvj>
 801c8d0:	4620      	mov	r0, r4
 801c8d2:	bd10      	pop	{r4, pc}

0801c8d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c8d4:	b510      	push	{r4, lr}
 801c8d6:	2104      	movs	r1, #4
 801c8d8:	4604      	mov	r4, r0
 801c8da:	f00c f9ad 	bl	8028c38 <_ZdlPvj>
 801c8de:	4620      	mov	r0, r4
 801c8e0:	bd10      	pop	{r4, pc}

0801c8e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c8e2:	b510      	push	{r4, lr}
 801c8e4:	2104      	movs	r1, #4
 801c8e6:	4604      	mov	r4, r0
 801c8e8:	f00c f9a6 	bl	8028c38 <_ZdlPvj>
 801c8ec:	4620      	mov	r0, r4
 801c8ee:	bd10      	pop	{r4, pc}

0801c8f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c8f0:	b510      	push	{r4, lr}
 801c8f2:	2104      	movs	r1, #4
 801c8f4:	4604      	mov	r4, r0
 801c8f6:	f00c f99f 	bl	8028c38 <_ZdlPvj>
 801c8fa:	4620      	mov	r0, r4
 801c8fc:	bd10      	pop	{r4, pc}

0801c8fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c8fe:	b510      	push	{r4, lr}
 801c900:	2104      	movs	r1, #4
 801c902:	4604      	mov	r4, r0
 801c904:	f00c f998 	bl	8028c38 <_ZdlPvj>
 801c908:	4620      	mov	r0, r4
 801c90a:	bd10      	pop	{r4, pc}

0801c90c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c90c:	b510      	push	{r4, lr}
 801c90e:	2104      	movs	r1, #4
 801c910:	4604      	mov	r4, r0
 801c912:	f00c f991 	bl	8028c38 <_ZdlPvj>
 801c916:	4620      	mov	r0, r4
 801c918:	bd10      	pop	{r4, pc}

0801c91a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c91a:	b510      	push	{r4, lr}
 801c91c:	2104      	movs	r1, #4
 801c91e:	4604      	mov	r4, r0
 801c920:	f00c f98a 	bl	8028c38 <_ZdlPvj>
 801c924:	4620      	mov	r0, r4
 801c926:	bd10      	pop	{r4, pc}

0801c928 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c928:	b510      	push	{r4, lr}
 801c92a:	2104      	movs	r1, #4
 801c92c:	4604      	mov	r4, r0
 801c92e:	f00c f983 	bl	8028c38 <_ZdlPvj>
 801c932:	4620      	mov	r0, r4
 801c934:	bd10      	pop	{r4, pc}

0801c936 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c936:	b510      	push	{r4, lr}
 801c938:	2104      	movs	r1, #4
 801c93a:	4604      	mov	r4, r0
 801c93c:	f00c f97c 	bl	8028c38 <_ZdlPvj>
 801c940:	4620      	mov	r0, r4
 801c942:	bd10      	pop	{r4, pc}

0801c944 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c944:	b510      	push	{r4, lr}
 801c946:	2104      	movs	r1, #4
 801c948:	4604      	mov	r4, r0
 801c94a:	f00c f975 	bl	8028c38 <_ZdlPvj>
 801c94e:	4620      	mov	r0, r4
 801c950:	bd10      	pop	{r4, pc}

0801c952 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c952:	b510      	push	{r4, lr}
 801c954:	2104      	movs	r1, #4
 801c956:	4604      	mov	r4, r0
 801c958:	f00c f96e 	bl	8028c38 <_ZdlPvj>
 801c95c:	4620      	mov	r0, r4
 801c95e:	bd10      	pop	{r4, pc}

0801c960 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c960:	b510      	push	{r4, lr}
 801c962:	2104      	movs	r1, #4
 801c964:	4604      	mov	r4, r0
 801c966:	f00c f967 	bl	8028c38 <_ZdlPvj>
 801c96a:	4620      	mov	r0, r4
 801c96c:	bd10      	pop	{r4, pc}

0801c96e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c96e:	b510      	push	{r4, lr}
 801c970:	2104      	movs	r1, #4
 801c972:	4604      	mov	r4, r0
 801c974:	f00c f960 	bl	8028c38 <_ZdlPvj>
 801c978:	4620      	mov	r0, r4
 801c97a:	bd10      	pop	{r4, pc}

0801c97c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c97c:	b510      	push	{r4, lr}
 801c97e:	2104      	movs	r1, #4
 801c980:	4604      	mov	r4, r0
 801c982:	f00c f959 	bl	8028c38 <_ZdlPvj>
 801c986:	4620      	mov	r0, r4
 801c988:	bd10      	pop	{r4, pc}

0801c98a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c98a:	b510      	push	{r4, lr}
 801c98c:	2104      	movs	r1, #4
 801c98e:	4604      	mov	r4, r0
 801c990:	f00c f952 	bl	8028c38 <_ZdlPvj>
 801c994:	4620      	mov	r0, r4
 801c996:	bd10      	pop	{r4, pc}

0801c998 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c998:	b510      	push	{r4, lr}
 801c99a:	2104      	movs	r1, #4
 801c99c:	4604      	mov	r4, r0
 801c99e:	f00c f94b 	bl	8028c38 <_ZdlPvj>
 801c9a2:	4620      	mov	r0, r4
 801c9a4:	bd10      	pop	{r4, pc}

0801c9a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c9a6:	b510      	push	{r4, lr}
 801c9a8:	2104      	movs	r1, #4
 801c9aa:	4604      	mov	r4, r0
 801c9ac:	f00c f944 	bl	8028c38 <_ZdlPvj>
 801c9b0:	4620      	mov	r0, r4
 801c9b2:	bd10      	pop	{r4, pc}

0801c9b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c9b4:	b510      	push	{r4, lr}
 801c9b6:	2104      	movs	r1, #4
 801c9b8:	4604      	mov	r4, r0
 801c9ba:	f00c f93d 	bl	8028c38 <_ZdlPvj>
 801c9be:	4620      	mov	r0, r4
 801c9c0:	bd10      	pop	{r4, pc}

0801c9c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c9c2:	b510      	push	{r4, lr}
 801c9c4:	2104      	movs	r1, #4
 801c9c6:	4604      	mov	r4, r0
 801c9c8:	f00c f936 	bl	8028c38 <_ZdlPvj>
 801c9cc:	4620      	mov	r0, r4
 801c9ce:	bd10      	pop	{r4, pc}

0801c9d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c9d0:	b510      	push	{r4, lr}
 801c9d2:	2104      	movs	r1, #4
 801c9d4:	4604      	mov	r4, r0
 801c9d6:	f00c f92f 	bl	8028c38 <_ZdlPvj>
 801c9da:	4620      	mov	r0, r4
 801c9dc:	bd10      	pop	{r4, pc}

0801c9de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c9de:	b510      	push	{r4, lr}
 801c9e0:	2104      	movs	r1, #4
 801c9e2:	4604      	mov	r4, r0
 801c9e4:	f00c f928 	bl	8028c38 <_ZdlPvj>
 801c9e8:	4620      	mov	r0, r4
 801c9ea:	bd10      	pop	{r4, pc}

0801c9ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c9ec:	b510      	push	{r4, lr}
 801c9ee:	2104      	movs	r1, #4
 801c9f0:	4604      	mov	r4, r0
 801c9f2:	f00c f921 	bl	8028c38 <_ZdlPvj>
 801c9f6:	4620      	mov	r0, r4
 801c9f8:	bd10      	pop	{r4, pc}

0801c9fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c9fa:	b510      	push	{r4, lr}
 801c9fc:	2104      	movs	r1, #4
 801c9fe:	4604      	mov	r4, r0
 801ca00:	f00c f91a 	bl	8028c38 <_ZdlPvj>
 801ca04:	4620      	mov	r0, r4
 801ca06:	bd10      	pop	{r4, pc}

0801ca08 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801ca08:	b510      	push	{r4, lr}
 801ca0a:	2104      	movs	r1, #4
 801ca0c:	4604      	mov	r4, r0
 801ca0e:	f00c f913 	bl	8028c38 <_ZdlPvj>
 801ca12:	4620      	mov	r0, r4
 801ca14:	bd10      	pop	{r4, pc}
	...

0801ca18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801ca18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca1c:	b08f      	sub	sp, #60	@ 0x3c
 801ca1e:	4616      	mov	r6, r2
 801ca20:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801ca24:	9205      	str	r2, [sp, #20]
 801ca26:	4682      	mov	sl, r0
 801ca28:	460d      	mov	r5, r1
 801ca2a:	2a00      	cmp	r2, #0
 801ca2c:	f000 82b7 	beq.w	801cf9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801ca30:	6830      	ldr	r0, [r6, #0]
 801ca32:	6871      	ldr	r1, [r6, #4]
 801ca34:	ac0a      	add	r4, sp, #40	@ 0x28
 801ca36:	c403      	stmia	r4!, {r0, r1}
 801ca38:	6818      	ldr	r0, [r3, #0]
 801ca3a:	6859      	ldr	r1, [r3, #4]
 801ca3c:	ac0c      	add	r4, sp, #48	@ 0x30
 801ca3e:	c403      	stmia	r4!, {r0, r1}
 801ca40:	a80a      	add	r0, sp, #40	@ 0x28
 801ca42:	f7f9 fa47 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca46:	4631      	mov	r1, r6
 801ca48:	a80c      	add	r0, sp, #48	@ 0x30
 801ca4a:	f7f9 fa6b 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca4e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801ca52:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801ca56:	bfd7      	itett	le
 801ca58:	b293      	uxthle	r3, r2
 801ca5a:	2301      	movgt	r3, #1
 801ca5c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801ca60:	fb91 f3f3 	sdivle	r3, r1, r3
 801ca64:	9300      	str	r3, [sp, #0]
 801ca66:	f105 0308 	add.w	r3, r5, #8
 801ca6a:	9900      	ldr	r1, [sp, #0]
 801ca6c:	9306      	str	r3, [sp, #24]
 801ca6e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801ca72:	440b      	add	r3, r1
 801ca74:	3b01      	subs	r3, #1
 801ca76:	fb93 f3f1 	sdiv	r3, r3, r1
 801ca7a:	9906      	ldr	r1, [sp, #24]
 801ca7c:	3b01      	subs	r3, #1
 801ca7e:	b29b      	uxth	r3, r3
 801ca80:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801ca84:	9307      	str	r3, [sp, #28]
 801ca86:	9900      	ldr	r1, [sp, #0]
 801ca88:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801ca8c:	fb93 f0f1 	sdiv	r0, r3, r1
 801ca90:	b284      	uxth	r4, r0
 801ca92:	9402      	str	r4, [sp, #8]
 801ca94:	9d02      	ldr	r5, [sp, #8]
 801ca96:	9c00      	ldr	r4, [sp, #0]
 801ca98:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801ca9c:	fb05 3414 	mls	r4, r5, r4, r3
 801caa0:	fb14 f402 	smulbb	r4, r4, r2
 801caa4:	440c      	add	r4, r1
 801caa6:	b2a4      	uxth	r4, r4
 801caa8:	2d00      	cmp	r5, #0
 801caaa:	d06c      	beq.n	801cb86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801caac:	1e6a      	subs	r2, r5, #1
 801caae:	9806      	ldr	r0, [sp, #24]
 801cab0:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801cab4:	9a07      	ldr	r2, [sp, #28]
 801cab6:	ba36      	rev	r6, r6
 801cab8:	4416      	add	r6, r2
 801caba:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801cabe:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801cac2:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 801cdf8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801cac6:	4411      	add	r1, r2
 801cac8:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801cacc:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801cad0:	4413      	add	r3, r2
 801cad2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801cad6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801cada:	9301      	str	r3, [sp, #4]
 801cadc:	4bc4      	ldr	r3, [pc, #784]	@ (801cdf0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801cade:	6818      	ldr	r0, [r3, #0]
 801cae0:	6803      	ldr	r3, [r0, #0]
 801cae2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cae4:	4798      	blx	r3
 801cae6:	4bc3      	ldr	r3, [pc, #780]	@ (801cdf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801cae8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801caec:	881b      	ldrh	r3, [r3, #0]
 801caee:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801caf2:	fb03 2808 	mla	r8, r3, r8, r2
 801caf6:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801cafa:	436b      	muls	r3, r5
 801cafc:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801cb00:	9309      	str	r3, [sp, #36]	@ 0x24
 801cb02:	2500      	movs	r5, #0
 801cb04:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801cb08:	fb94 f3f3 	sdiv	r3, r4, r3
 801cb0c:	9304      	str	r3, [sp, #16]
 801cb0e:	f10a 0304 	add.w	r3, sl, #4
 801cb12:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801cb16:	4629      	mov	r1, r5
 801cb18:	4618      	mov	r0, r3
 801cb1a:	9308      	str	r3, [sp, #32]
 801cb1c:	f00d fb05 	bl	802a12a <memset>
 801cb20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cb22:	4543      	cmp	r3, r8
 801cb24:	f240 8236 	bls.w	801cf94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 801cb28:	2203      	movs	r2, #3
 801cb2a:	2107      	movs	r1, #7
 801cb2c:	200b      	movs	r0, #11
 801cb2e:	2c00      	cmp	r4, #0
 801cb30:	f000 8131 	beq.w	801cd96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801cb34:	7833      	ldrb	r3, [r6, #0]
 801cb36:	b2db      	uxtb	r3, r3
 801cb38:	2bfe      	cmp	r3, #254	@ 0xfe
 801cb3a:	d126      	bne.n	801cb8a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801cb3c:	f896 e001 	ldrb.w	lr, [r6, #1]
 801cb40:	f896 c002 	ldrb.w	ip, [r6, #2]
 801cb44:	f896 b003 	ldrb.w	fp, [r6, #3]
 801cb48:	fa5f fe8e 	uxtb.w	lr, lr
 801cb4c:	fa5f fc8c 	uxtb.w	ip, ip
 801cb50:	f36e 0507 	bfi	r5, lr, #0, #8
 801cb54:	f36c 250f 	bfi	r5, ip, #8, #8
 801cb58:	fa5f fb8b 	uxtb.w	fp, fp
 801cb5c:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801cb60:	f36b 4517 	bfi	r5, fp, #16, #8
 801cb64:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801cb68:	0e2b      	lsrs	r3, r5, #24
 801cb6a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801cb6e:	fb10 c303 	smlabb	r3, r0, r3, ip
 801cb72:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801cb76:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801cb7a:	3c01      	subs	r4, #1
 801cb7c:	1d37      	adds	r7, r6, #4
 801cb7e:	b2a4      	uxth	r4, r4
 801cb80:	605d      	str	r5, [r3, #4]
 801cb82:	463e      	mov	r6, r7
 801cb84:	e7d3      	b.n	801cb2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801cb86:	9e07      	ldr	r6, [sp, #28]
 801cb88:	e797      	b.n	801caba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801cb8a:	2bff      	cmp	r3, #255	@ 0xff
 801cb8c:	d127      	bne.n	801cbde <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801cb8e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801cb92:	78b3      	ldrb	r3, [r6, #2]
 801cb94:	f896 e003 	ldrb.w	lr, [r6, #3]
 801cb98:	f896 b004 	ldrb.w	fp, [r6, #4]
 801cb9c:	fa5f fc8c 	uxtb.w	ip, ip
 801cba0:	b2db      	uxtb	r3, r3
 801cba2:	f36c 0507 	bfi	r5, ip, #0, #8
 801cba6:	f363 250f 	bfi	r5, r3, #8, #8
 801cbaa:	fa5f fe8e 	uxtb.w	lr, lr
 801cbae:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801cbb2:	fb12 330e 	smlabb	r3, r2, lr, r3
 801cbb6:	fa5f fb8b 	uxtb.w	fp, fp
 801cbba:	f36e 4517 	bfi	r5, lr, #16, #8
 801cbbe:	fb11 330c 	smlabb	r3, r1, ip, r3
 801cbc2:	f36b 651f 	bfi	r5, fp, #24, #8
 801cbc6:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801cbca:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801cbce:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801cbd2:	3c01      	subs	r4, #1
 801cbd4:	1d77      	adds	r7, r6, #5
 801cbd6:	b2a4      	uxth	r4, r4
 801cbd8:	f8cb 5004 	str.w	r5, [fp, #4]
 801cbdc:	e7d1      	b.n	801cb82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801cbde:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801cbe2:	f106 0701 	add.w	r7, r6, #1
 801cbe6:	d107      	bne.n	801cbf8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801cbe8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801cbec:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801cbf0:	685d      	ldr	r5, [r3, #4]
 801cbf2:	3c01      	subs	r4, #1
 801cbf4:	b2a4      	uxth	r4, r4
 801cbf6:	e7c4      	b.n	801cb82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801cbf8:	f1bc 0f01 	cmp.w	ip, #1
 801cbfc:	d12c      	bne.n	801cc58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801cbfe:	f003 0e03 	and.w	lr, r3, #3
 801cc02:	f1ae 0e02 	sub.w	lr, lr, #2
 801cc06:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801cc0a:	fa5f fe8e 	uxtb.w	lr, lr
 801cc0e:	f003 0c0c 	and.w	ip, r3, #12
 801cc12:	f36e 0507 	bfi	r5, lr, #0, #8
 801cc16:	f1ac 0c08 	sub.w	ip, ip, #8
 801cc1a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801cc1e:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801cc22:	f36c 250f 	bfi	r5, ip, #8, #8
 801cc26:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801cc2a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801cc2e:	3b02      	subs	r3, #2
 801cc30:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801cc34:	b2db      	uxtb	r3, r3
 801cc36:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801cc3a:	f363 4517 	bfi	r5, r3, #16, #8
 801cc3e:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801cc42:	0e2e      	lsrs	r6, r5, #24
 801cc44:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801cc48:	fb10 c606 	smlabb	r6, r0, r6, ip
 801cc4c:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 801cc50:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801cc54:	6075      	str	r5, [r6, #4]
 801cc56:	e7cc      	b.n	801cbf2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801cc58:	f1bc 0f02 	cmp.w	ip, #2
 801cc5c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801cc60:	d12a      	bne.n	801ccb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801cc62:	1cb7      	adds	r7, r6, #2
 801cc64:	7876      	ldrb	r6, [r6, #1]
 801cc66:	b2f6      	uxtb	r6, r6
 801cc68:	f006 0c0f 	and.w	ip, r6, #15
 801cc6c:	3b20      	subs	r3, #32
 801cc6e:	f1ac 0c08 	sub.w	ip, ip, #8
 801cc72:	449c      	add	ip, r3
 801cc74:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801cc78:	fa5f fc8c 	uxtb.w	ip, ip
 801cc7c:	f36c 0507 	bfi	r5, ip, #0, #8
 801cc80:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 801cc84:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801cc88:	fa5f fe8e 	uxtb.w	lr, lr
 801cc8c:	1136      	asrs	r6, r6, #4
 801cc8e:	f36e 250f 	bfi	r5, lr, #8, #8
 801cc92:	3e08      	subs	r6, #8
 801cc94:	4433      	add	r3, r6
 801cc96:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801cc9a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801cc9e:	b2db      	uxtb	r3, r3
 801cca0:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801cca4:	f363 4517 	bfi	r5, r3, #16, #8
 801cca8:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801ccac:	0e2e      	lsrs	r6, r5, #24
 801ccae:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801ccb2:	fb10 e606 	smlabb	r6, r0, r6, lr
 801ccb6:	e7c9      	b.n	801cc4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801ccb8:	1c5e      	adds	r6, r3, #1
 801ccba:	42a6      	cmp	r6, r4
 801ccbc:	dd4e      	ble.n	801cd5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801ccbe:	1b36      	subs	r6, r6, r4
 801ccc0:	2e00      	cmp	r6, #0
 801ccc2:	dc4e      	bgt.n	801cd62 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801ccc4:	f8dd b004 	ldr.w	fp, [sp, #4]
 801ccc8:	2400      	movs	r4, #0
 801ccca:	f1bb 0f00 	cmp.w	fp, #0
 801ccce:	f340 8122 	ble.w	801cf16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801ccd2:	1c7b      	adds	r3, r7, #1
 801ccd4:	9303      	str	r3, [sp, #12]
 801ccd6:	783b      	ldrb	r3, [r7, #0]
 801ccd8:	b2db      	uxtb	r3, r3
 801ccda:	2bfe      	cmp	r3, #254	@ 0xfe
 801ccdc:	d160      	bne.n	801cda0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801ccde:	7879      	ldrb	r1, [r7, #1]
 801cce0:	78ba      	ldrb	r2, [r7, #2]
 801cce2:	78f8      	ldrb	r0, [r7, #3]
 801cce4:	b2c9      	uxtb	r1, r1
 801cce6:	f361 0507 	bfi	r5, r1, #0, #8
 801ccea:	b2d2      	uxtb	r2, r2
 801ccec:	1d3b      	adds	r3, r7, #4
 801ccee:	f362 250f 	bfi	r5, r2, #8, #8
 801ccf2:	b2c0      	uxtb	r0, r0
 801ccf4:	9303      	str	r3, [sp, #12]
 801ccf6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801ccfa:	2303      	movs	r3, #3
 801ccfc:	fb13 2200 	smlabb	r2, r3, r0, r2
 801cd00:	f360 4517 	bfi	r5, r0, #16, #8
 801cd04:	2307      	movs	r3, #7
 801cd06:	fb13 2101 	smlabb	r1, r3, r1, r2
 801cd0a:	0e2e      	lsrs	r6, r5, #24
 801cd0c:	230b      	movs	r3, #11
 801cd0e:	fb13 1306 	smlabb	r3, r3, r6, r1
 801cd12:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801cd16:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801cd1a:	605d      	str	r5, [r3, #4]
 801cd1c:	2601      	movs	r6, #1
 801cd1e:	4637      	mov	r7, r6
 801cd20:	0e2b      	lsrs	r3, r5, #24
 801cd22:	ebab 0b07 	sub.w	fp, fp, r7
 801cd26:	eba6 0607 	sub.w	r6, r6, r7
 801cd2a:	f040 80d3 	bne.w	801ced4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801cd2e:	b18c      	cbz	r4, 801cd54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 801cd30:	4648      	mov	r0, r9
 801cd32:	00a1      	lsls	r1, r4, #2
 801cd34:	f7e4 fdb0 	bl	8001898 <_ZN8touchgfx5paint9flushLineEPmi>
 801cd38:	9b05      	ldr	r3, [sp, #20]
 801cd3a:	4622      	mov	r2, r4
 801cd3c:	4649      	mov	r1, r9
 801cd3e:	4640      	mov	r0, r8
 801cd40:	f7e4 fdf8 	bl	8001934 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801cd44:	4b2c      	ldr	r3, [pc, #176]	@ (801cdf8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801cd46:	4a2d      	ldr	r2, [pc, #180]	@ (801cdfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801cd48:	4599      	cmp	r9, r3
 801cd4a:	bf08      	it	eq
 801cd4c:	4613      	moveq	r3, r2
 801cd4e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801cd52:	4699      	mov	r9, r3
 801cd54:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801cd58:	2400      	movs	r4, #0
 801cd5a:	e0da      	b.n	801cf12 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801cd5c:	1ba6      	subs	r6, r4, r6
 801cd5e:	b2b4      	uxth	r4, r6
 801cd60:	e70f      	b.n	801cb82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801cd62:	9b01      	ldr	r3, [sp, #4]
 801cd64:	9a01      	ldr	r2, [sp, #4]
 801cd66:	42b3      	cmp	r3, r6
 801cd68:	bfa8      	it	ge
 801cd6a:	4633      	movge	r3, r6
 801cd6c:	0e2c      	lsrs	r4, r5, #24
 801cd6e:	eba2 0b03 	sub.w	fp, r2, r3
 801cd72:	eba6 0603 	sub.w	r6, r6, r3
 801cd76:	d00b      	beq.n	801cd90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801cd78:	f1a9 0104 	sub.w	r1, r9, #4
 801cd7c:	461a      	mov	r2, r3
 801cd7e:	2a00      	cmp	r2, #0
 801cd80:	dc02      	bgt.n	801cd88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801cd82:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cd86:	e7a0      	b.n	801ccca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801cd88:	f841 5f04 	str.w	r5, [r1, #4]!
 801cd8c:	3a01      	subs	r2, #1
 801cd8e:	e7f6      	b.n	801cd7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801cd90:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801cd94:	e799      	b.n	801ccca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801cd96:	4637      	mov	r7, r6
 801cd98:	f8dd b004 	ldr.w	fp, [sp, #4]
 801cd9c:	4626      	mov	r6, r4
 801cd9e:	e794      	b.n	801ccca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801cda0:	2bff      	cmp	r3, #255	@ 0xff
 801cda2:	d11d      	bne.n	801cde0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801cda4:	7878      	ldrb	r0, [r7, #1]
 801cda6:	78ba      	ldrb	r2, [r7, #2]
 801cda8:	78fe      	ldrb	r6, [r7, #3]
 801cdaa:	1d7b      	adds	r3, r7, #5
 801cdac:	b2c0      	uxtb	r0, r0
 801cdae:	9303      	str	r3, [sp, #12]
 801cdb0:	793b      	ldrb	r3, [r7, #4]
 801cdb2:	f360 0507 	bfi	r5, r0, #0, #8
 801cdb6:	b2d2      	uxtb	r2, r2
 801cdb8:	b2d9      	uxtb	r1, r3
 801cdba:	f362 250f 	bfi	r5, r2, #8, #8
 801cdbe:	b2f6      	uxtb	r6, r6
 801cdc0:	2303      	movs	r3, #3
 801cdc2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801cdc6:	fb13 2206 	smlabb	r2, r3, r6, r2
 801cdca:	2307      	movs	r3, #7
 801cdcc:	fb13 2000 	smlabb	r0, r3, r0, r2
 801cdd0:	f366 4517 	bfi	r5, r6, #16, #8
 801cdd4:	230b      	movs	r3, #11
 801cdd6:	f361 651f 	bfi	r5, r1, #24, #8
 801cdda:	fb13 0301 	smlabb	r3, r3, r1, r0
 801cdde:	e798      	b.n	801cd12 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801cde0:	119e      	asrs	r6, r3, #6
 801cde2:	d10d      	bne.n	801ce00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801cde4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801cde8:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801cdec:	685d      	ldr	r5, [r3, #4]
 801cdee:	e795      	b.n	801cd1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801cdf0:	20013f60 	.word	0x20013f60
 801cdf4:	20013f5a 	.word	0x20013f5a
 801cdf8:	20000180 	.word	0x20000180
 801cdfc:	20000280 	.word	0x20000280
 801ce00:	2e01      	cmp	r6, #1
 801ce02:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801ce06:	d12b      	bne.n	801ce60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801ce08:	f003 0003 	and.w	r0, r3, #3
 801ce0c:	3802      	subs	r0, #2
 801ce0e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801ce12:	b2c0      	uxtb	r0, r0
 801ce14:	f003 020c 	and.w	r2, r3, #12
 801ce18:	f360 0507 	bfi	r5, r0, #0, #8
 801ce1c:	3a08      	subs	r2, #8
 801ce1e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801ce22:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801ce26:	f362 250f 	bfi	r5, r2, #8, #8
 801ce2a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801ce2e:	1e9f      	subs	r7, r3, #2
 801ce30:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801ce34:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801ce38:	b2db      	uxtb	r3, r3
 801ce3a:	2703      	movs	r7, #3
 801ce3c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801ce40:	fb17 2203 	smlabb	r2, r7, r3, r2
 801ce44:	2707      	movs	r7, #7
 801ce46:	f363 4517 	bfi	r5, r3, #16, #8
 801ce4a:	fb17 2000 	smlabb	r0, r7, r0, r2
 801ce4e:	230b      	movs	r3, #11
 801ce50:	fb13 0101 	smlabb	r1, r3, r1, r0
 801ce54:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801ce58:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801ce5c:	604d      	str	r5, [r1, #4]
 801ce5e:	e75e      	b.n	801cd1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801ce60:	2e02      	cmp	r6, #2
 801ce62:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ce66:	d12f      	bne.n	801cec8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801ce68:	7878      	ldrb	r0, [r7, #1]
 801ce6a:	1cba      	adds	r2, r7, #2
 801ce6c:	b2c0      	uxtb	r0, r0
 801ce6e:	9203      	str	r2, [sp, #12]
 801ce70:	f000 020f 	and.w	r2, r0, #15
 801ce74:	3b20      	subs	r3, #32
 801ce76:	3a08      	subs	r2, #8
 801ce78:	441a      	add	r2, r3
 801ce7a:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801ce7e:	b2d2      	uxtb	r2, r2
 801ce80:	f362 0507 	bfi	r5, r2, #0, #8
 801ce84:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801ce88:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801ce8c:	b2f6      	uxtb	r6, r6
 801ce8e:	1100      	asrs	r0, r0, #4
 801ce90:	f366 250f 	bfi	r5, r6, #8, #8
 801ce94:	3808      	subs	r0, #8
 801ce96:	4403      	add	r3, r0
 801ce98:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801ce9c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801cea0:	b2db      	uxtb	r3, r3
 801cea2:	2003      	movs	r0, #3
 801cea4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801cea8:	fb10 6603 	smlabb	r6, r0, r3, r6
 801ceac:	2007      	movs	r0, #7
 801ceae:	f363 4517 	bfi	r5, r3, #16, #8
 801ceb2:	fb10 6202 	smlabb	r2, r0, r2, r6
 801ceb6:	230b      	movs	r3, #11
 801ceb8:	fb13 2101 	smlabb	r1, r3, r1, r2
 801cebc:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801cec0:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801cec4:	604d      	str	r5, [r1, #4]
 801cec6:	e729      	b.n	801cd1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801cec8:	1c5e      	adds	r6, r3, #1
 801ceca:	45b3      	cmp	fp, r6
 801cecc:	465f      	mov	r7, fp
 801cece:	bfa8      	it	ge
 801ced0:	4637      	movge	r7, r6
 801ced2:	e725      	b.n	801cd20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801ced4:	193b      	adds	r3, r7, r4
 801ced6:	2b40      	cmp	r3, #64	@ 0x40
 801ced8:	dd13      	ble.n	801cf02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801ceda:	4648      	mov	r0, r9
 801cedc:	00a1      	lsls	r1, r4, #2
 801cede:	f7e4 fcdb 	bl	8001898 <_ZN8touchgfx5paint9flushLineEPmi>
 801cee2:	4649      	mov	r1, r9
 801cee4:	9b05      	ldr	r3, [sp, #20]
 801cee6:	4622      	mov	r2, r4
 801cee8:	4640      	mov	r0, r8
 801ceea:	f7e4 fd23 	bl	8001934 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801ceee:	4b2d      	ldr	r3, [pc, #180]	@ (801cfa4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 801cef0:	4599      	cmp	r9, r3
 801cef2:	bf0c      	ite	eq
 801cef4:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 801cfb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801cef8:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 801cfa4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801cefc:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801cf00:	2400      	movs	r4, #0
 801cf02:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801cf06:	463b      	mov	r3, r7
 801cf08:	3b01      	subs	r3, #1
 801cf0a:	f842 5b04 	str.w	r5, [r2], #4
 801cf0e:	d1fb      	bne.n	801cf08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 801cf10:	443c      	add	r4, r7
 801cf12:	9f03      	ldr	r7, [sp, #12]
 801cf14:	e6d9      	b.n	801ccca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801cf16:	b15c      	cbz	r4, 801cf30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 801cf18:	00a1      	lsls	r1, r4, #2
 801cf1a:	4648      	mov	r0, r9
 801cf1c:	f7e4 fcbc 	bl	8001898 <_ZN8touchgfx5paint9flushLineEPmi>
 801cf20:	4640      	mov	r0, r8
 801cf22:	9b05      	ldr	r3, [sp, #20]
 801cf24:	4622      	mov	r2, r4
 801cf26:	4649      	mov	r1, r9
 801cf28:	f7e4 fd04 	bl	8001934 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801cf2c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801cf30:	4b1d      	ldr	r3, [pc, #116]	@ (801cfa8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 801cf32:	9a01      	ldr	r2, [sp, #4]
 801cf34:	881b      	ldrh	r3, [r3, #0]
 801cf36:	1a9b      	subs	r3, r3, r2
 801cf38:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801cf3c:	9b04      	ldr	r3, [sp, #16]
 801cf3e:	3301      	adds	r3, #1
 801cf40:	9304      	str	r3, [sp, #16]
 801cf42:	9a04      	ldr	r2, [sp, #16]
 801cf44:	9b00      	ldr	r3, [sp, #0]
 801cf46:	4293      	cmp	r3, r2
 801cf48:	d11d      	bne.n	801cf86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801cf4a:	9b02      	ldr	r3, [sp, #8]
 801cf4c:	9a02      	ldr	r2, [sp, #8]
 801cf4e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801cf52:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801cf56:	9808      	ldr	r0, [sp, #32]
 801cf58:	f103 0b01 	add.w	fp, r3, #1
 801cf5c:	9b06      	ldr	r3, [sp, #24]
 801cf5e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801cf62:	9b07      	ldr	r3, [sp, #28]
 801cf64:	2500      	movs	r5, #0
 801cf66:	ba3f      	rev	r7, r7
 801cf68:	1ba4      	subs	r4, r4, r6
 801cf6a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801cf6e:	4629      	mov	r1, r5
 801cf70:	441f      	add	r7, r3
 801cf72:	b2a4      	uxth	r4, r4
 801cf74:	f00d f8d9 	bl	802a12a <memset>
 801cf78:	f8cd b008 	str.w	fp, [sp, #8]
 801cf7c:	9504      	str	r5, [sp, #16]
 801cf7e:	f7e4 fc81 	bl	8001884 <_ZN8touchgfx5paint8tearDownEv>
 801cf82:	463e      	mov	r6, r7
 801cf84:	e5cc      	b.n	801cb20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801cf86:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801cf8a:	9b01      	ldr	r3, [sp, #4]
 801cf8c:	1ae4      	subs	r4, r4, r3
 801cf8e:	1ba4      	subs	r4, r4, r6
 801cf90:	b2a4      	uxth	r4, r4
 801cf92:	e7f4      	b.n	801cf7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 801cf94:	4b05      	ldr	r3, [pc, #20]	@ (801cfac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801cf96:	6818      	ldr	r0, [r3, #0]
 801cf98:	6803      	ldr	r3, [r0, #0]
 801cf9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cf9c:	4798      	blx	r3
 801cf9e:	b00f      	add	sp, #60	@ 0x3c
 801cfa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfa4:	20000180 	.word	0x20000180
 801cfa8:	20013f5a 	.word	0x20013f5a
 801cfac:	20013f60 	.word	0x20013f60
 801cfb0:	20000280 	.word	0x20000280

0801cfb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801cfb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfb8:	b08f      	sub	sp, #60	@ 0x3c
 801cfba:	461c      	mov	r4, r3
 801cfbc:	9205      	str	r2, [sp, #20]
 801cfbe:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801cfc2:	9100      	str	r1, [sp, #0]
 801cfc4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cfc6:	9201      	str	r2, [sp, #4]
 801cfc8:	2a00      	cmp	r2, #0
 801cfca:	f000 8115 	beq.w	801d1f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801cfce:	6820      	ldr	r0, [r4, #0]
 801cfd0:	6861      	ldr	r1, [r4, #4]
 801cfd2:	aa0a      	add	r2, sp, #40	@ 0x28
 801cfd4:	c203      	stmia	r2!, {r0, r1}
 801cfd6:	6818      	ldr	r0, [r3, #0]
 801cfd8:	6859      	ldr	r1, [r3, #4]
 801cfda:	aa0c      	add	r2, sp, #48	@ 0x30
 801cfdc:	c203      	stmia	r2!, {r0, r1}
 801cfde:	a80a      	add	r0, sp, #40	@ 0x28
 801cfe0:	f7f8 ff78 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cfe4:	4621      	mov	r1, r4
 801cfe6:	a80c      	add	r0, sp, #48	@ 0x30
 801cfe8:	f7f8 ff9c 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cfec:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801cff0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801cff4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801cff8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801cffc:	bfde      	ittt	le
 801cffe:	b2b3      	uxthle	r3, r6
 801d000:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801d004:	fb92 f3f3 	sdivle	r3, r2, r3
 801d008:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801d00c:	bfc8      	it	gt
 801d00e:	2301      	movgt	r3, #1
 801d010:	fb92 f1f3 	sdiv	r1, r2, r3
 801d014:	fa1f fc81 	uxth.w	ip, r1
 801d018:	fb0c 2413 	mls	r4, ip, r3, r2
 801d01c:	fb14 f406 	smulbb	r4, r4, r6
 801d020:	441d      	add	r5, r3
 801d022:	4404      	add	r4, r0
 801d024:	4661      	mov	r1, ip
 801d026:	3d01      	subs	r5, #1
 801d028:	b2a4      	uxth	r4, r4
 801d02a:	fb95 f5f3 	sdiv	r5, r5, r3
 801d02e:	b131      	cbz	r1, 801d03e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801d030:	9b05      	ldr	r3, [sp, #20]
 801d032:	9900      	ldr	r1, [sp, #0]
 801d034:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d038:	ba1b      	rev	r3, r3
 801d03a:	4419      	add	r1, r3
 801d03c:	9100      	str	r1, [sp, #0]
 801d03e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801d042:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801d046:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801d04a:	4418      	add	r0, r3
 801d04c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801d050:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801d054:	441a      	add	r2, r3
 801d056:	4b6a      	ldr	r3, [pc, #424]	@ (801d200 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d058:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801d05c:	6818      	ldr	r0, [r3, #0]
 801d05e:	6803      	ldr	r3, [r0, #0]
 801d060:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d062:	4798      	blx	r3
 801d064:	4967      	ldr	r1, [pc, #412]	@ (801d204 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801d066:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801d06a:	880b      	ldrh	r3, [r1, #0]
 801d06c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801d070:	9109      	str	r1, [sp, #36]	@ 0x24
 801d072:	fb03 c202 	mla	r2, r3, r2, ip
 801d076:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d07a:	4373      	muls	r3, r6
 801d07c:	b2ad      	uxth	r5, r5
 801d07e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d082:	00ad      	lsls	r5, r5, #2
 801d084:	9306      	str	r3, [sp, #24]
 801d086:	1d2b      	adds	r3, r5, #4
 801d088:	9307      	str	r3, [sp, #28]
 801d08a:	9b01      	ldr	r3, [sp, #4]
 801d08c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d090:	9103      	str	r1, [sp, #12]
 801d092:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801d096:	2c00      	cmp	r4, #0
 801d098:	bf0c      	ite	eq
 801d09a:	46c6      	moveq	lr, r8
 801d09c:	f04f 0e00 	movne.w	lr, #0
 801d0a0:	2300      	movs	r3, #0
 801d0a2:	b292      	uxth	r2, r2
 801d0a4:	fa1f fe8e 	uxth.w	lr, lr
 801d0a8:	9302      	str	r3, [sp, #8]
 801d0aa:	9204      	str	r2, [sp, #16]
 801d0ac:	9a06      	ldr	r2, [sp, #24]
 801d0ae:	4282      	cmp	r2, r0
 801d0b0:	f240 809d 	bls.w	801d1ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801d0b4:	b963      	cbnz	r3, 801d0d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d0b6:	9b00      	ldr	r3, [sp, #0]
 801d0b8:	781a      	ldrb	r2, [r3, #0]
 801d0ba:	0993      	lsrs	r3, r2, #6
 801d0bc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801d0c0:	9202      	str	r2, [sp, #8]
 801d0c2:	1e5a      	subs	r2, r3, #1
 801d0c4:	2a02      	cmp	r2, #2
 801d0c6:	d815      	bhi.n	801d0f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801d0c8:	9a00      	ldr	r2, [sp, #0]
 801d0ca:	3201      	adds	r2, #1
 801d0cc:	9200      	str	r2, [sp, #0]
 801d0ce:	b29b      	uxth	r3, r3
 801d0d0:	b1b4      	cbz	r4, 801d100 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801d0d2:	429c      	cmp	r4, r3
 801d0d4:	bf95      	itete	ls
 801d0d6:	1b1c      	subls	r4, r3, r4
 801d0d8:	1ae4      	subhi	r4, r4, r3
 801d0da:	fa1f fa84 	uxthls.w	sl, r4
 801d0de:	b2a4      	uxthhi	r4, r4
 801d0e0:	bf87      	ittee	hi
 801d0e2:	4671      	movhi	r1, lr
 801d0e4:	f04f 0a00 	movhi.w	sl, #0
 801d0e8:	fa1f f188 	uxthls.w	r1, r8
 801d0ec:	2400      	movls	r4, #0
 801d0ee:	4653      	mov	r3, sl
 801d0f0:	468e      	mov	lr, r1
 801d0f2:	e7db      	b.n	801d0ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801d0f4:	9a00      	ldr	r2, [sp, #0]
 801d0f6:	9b00      	ldr	r3, [sp, #0]
 801d0f8:	3202      	adds	r2, #2
 801d0fa:	785b      	ldrb	r3, [r3, #1]
 801d0fc:	9200      	str	r2, [sp, #0]
 801d0fe:	e7e7      	b.n	801d0d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d100:	2202      	movs	r2, #2
 801d102:	4615      	mov	r5, r2
 801d104:	9907      	ldr	r1, [sp, #28]
 801d106:	9a02      	ldr	r2, [sp, #8]
 801d108:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d10c:	9905      	ldr	r1, [sp, #20]
 801d10e:	4573      	cmp	r3, lr
 801d110:	f831 c002 	ldrh.w	ip, [r1, r2]
 801d114:	9a01      	ldr	r2, [sp, #4]
 801d116:	bf2b      	itete	cs
 801d118:	eba3 0a0e 	subcs.w	sl, r3, lr
 801d11c:	ebae 0103 	subcc.w	r1, lr, r3
 801d120:	46f1      	movcs	r9, lr
 801d122:	4699      	movcc	r9, r3
 801d124:	bf27      	ittee	cs
 801d126:	fa1f fa8a 	uxthcs.w	sl, sl
 801d12a:	4621      	movcs	r1, r4
 801d12c:	b289      	uxthcc	r1, r1
 801d12e:	46a2      	movcc	sl, r4
 801d130:	2aff      	cmp	r2, #255	@ 0xff
 801d132:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d136:	d105      	bne.n	801d144 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d138:	4481      	add	r9, r0
 801d13a:	4581      	cmp	r9, r0
 801d13c:	d045      	beq.n	801d1ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d13e:	f820 cb02 	strh.w	ip, [r0], #2
 801d142:	e7fa      	b.n	801d13a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801d144:	9d03      	ldr	r5, [sp, #12]
 801d146:	ea4f 222c 	mov.w	r2, ip, asr #8
 801d14a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d14e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801d152:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d156:	436a      	muls	r2, r5
 801d158:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d15c:	fa5f fc8c 	uxtb.w	ip, ip
 801d160:	9208      	str	r2, [sp, #32]
 801d162:	fb0b fb05 	mul.w	fp, fp, r5
 801d166:	fb0c fc05 	mul.w	ip, ip, r5
 801d16a:	4481      	add	r9, r0
 801d16c:	4581      	cmp	r9, r0
 801d16e:	d02c      	beq.n	801d1ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d170:	8802      	ldrh	r2, [r0, #0]
 801d172:	9d04      	ldr	r5, [sp, #16]
 801d174:	9f04      	ldr	r7, [sp, #16]
 801d176:	1216      	asrs	r6, r2, #8
 801d178:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d17c:	fb16 f605 	smulbb	r6, r6, r5
 801d180:	9d08      	ldr	r5, [sp, #32]
 801d182:	442e      	add	r6, r5
 801d184:	10d5      	asrs	r5, r2, #3
 801d186:	00d2      	lsls	r2, r2, #3
 801d188:	b2d2      	uxtb	r2, r2
 801d18a:	fb12 f207 	smulbb	r2, r2, r7
 801d18e:	b2b6      	uxth	r6, r6
 801d190:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d194:	4462      	add	r2, ip
 801d196:	fb15 f507 	smulbb	r5, r5, r7
 801d19a:	b292      	uxth	r2, r2
 801d19c:	1c77      	adds	r7, r6, #1
 801d19e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801d1a2:	1c57      	adds	r7, r2, #1
 801d1a4:	445d      	add	r5, fp
 801d1a6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801d1aa:	b2ad      	uxth	r5, r5
 801d1ac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d1b0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801d1b4:	4316      	orrs	r6, r2
 801d1b6:	1c6a      	adds	r2, r5, #1
 801d1b8:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d1bc:	096d      	lsrs	r5, r5, #5
 801d1be:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d1c2:	432e      	orrs	r6, r5
 801d1c4:	f820 6b02 	strh.w	r6, [r0], #2
 801d1c8:	e7d0      	b.n	801d16c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801d1ca:	4573      	cmp	r3, lr
 801d1cc:	d38f      	bcc.n	801d0ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d1ce:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801d1d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d1d4:	fa1f f188 	uxth.w	r1, r8
 801d1d8:	1a64      	subs	r4, r4, r1
 801d1da:	881b      	ldrh	r3, [r3, #0]
 801d1dc:	b2a4      	uxth	r4, r4
 801d1de:	2c00      	cmp	r4, #0
 801d1e0:	eba3 0308 	sub.w	r3, r3, r8
 801d1e4:	bf18      	it	ne
 801d1e6:	2100      	movne	r1, #0
 801d1e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d1ec:	e77f      	b.n	801d0ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d1ee:	4b04      	ldr	r3, [pc, #16]	@ (801d200 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d1f0:	6818      	ldr	r0, [r3, #0]
 801d1f2:	6803      	ldr	r3, [r0, #0]
 801d1f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d1f6:	4798      	blx	r3
 801d1f8:	b00f      	add	sp, #60	@ 0x3c
 801d1fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1fe:	bf00      	nop
 801d200:	20013f60 	.word	0x20013f60
 801d204:	20013f5a 	.word	0x20013f5a

0801d208 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d20c:	b09f      	sub	sp, #124	@ 0x7c
 801d20e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801d212:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801d216:	9209      	str	r2, [sp, #36]	@ 0x24
 801d218:	461d      	mov	r5, r3
 801d21a:	4604      	mov	r4, r0
 801d21c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d21e:	2a00      	cmp	r2, #0
 801d220:	f000 81eb 	beq.w	801d5fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d224:	6828      	ldr	r0, [r5, #0]
 801d226:	6869      	ldr	r1, [r5, #4]
 801d228:	aa1a      	add	r2, sp, #104	@ 0x68
 801d22a:	c203      	stmia	r2!, {r0, r1}
 801d22c:	6818      	ldr	r0, [r3, #0]
 801d22e:	6859      	ldr	r1, [r3, #4]
 801d230:	aa1c      	add	r2, sp, #112	@ 0x70
 801d232:	c203      	stmia	r2!, {r0, r1}
 801d234:	a81a      	add	r0, sp, #104	@ 0x68
 801d236:	f7f8 fe4d 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d23a:	4629      	mov	r1, r5
 801d23c:	a81c      	add	r0, sp, #112	@ 0x70
 801d23e:	f7f8 fe71 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d242:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801d246:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801d24a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801d24e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801d252:	bfd7      	itett	le
 801d254:	b29a      	uxthle	r2, r3
 801d256:	2201      	movgt	r2, #1
 801d258:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801d25c:	fb91 f2f2 	sdivle	r2, r1, r2
 801d260:	9202      	str	r2, [sp, #8]
 801d262:	9802      	ldr	r0, [sp, #8]
 801d264:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801d268:	fb92 f0f0 	sdiv	r0, r2, r0
 801d26c:	b280      	uxth	r0, r0
 801d26e:	9010      	str	r0, [sp, #64]	@ 0x40
 801d270:	9902      	ldr	r1, [sp, #8]
 801d272:	9802      	ldr	r0, [sp, #8]
 801d274:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801d276:	4488      	add	r8, r1
 801d278:	fb05 2510 	mls	r5, r5, r0, r2
 801d27c:	fb15 f503 	smulbb	r5, r5, r3
 801d280:	f108 38ff 	add.w	r8, r8, #4294967295
 801d284:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801d288:	fb98 f8f1 	sdiv	r8, r8, r1
 801d28c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801d290:	440d      	add	r5, r1
 801d292:	4419      	add	r1, r3
 801d294:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801d298:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801d29c:	441a      	add	r2, r3
 801d29e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801d2a2:	9304      	str	r3, [sp, #16]
 801d2a4:	4b95      	ldr	r3, [pc, #596]	@ (801d4fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d2a6:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801d2aa:	6818      	ldr	r0, [r3, #0]
 801d2ac:	6803      	ldr	r3, [r0, #0]
 801d2ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d2b0:	4798      	blx	r3
 801d2b2:	4b93      	ldr	r3, [pc, #588]	@ (801d500 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d2b4:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801d2b8:	881a      	ldrh	r2, [r3, #0]
 801d2ba:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801d2be:	9318      	str	r3, [sp, #96]	@ 0x60
 801d2c0:	fb02 7101 	mla	r1, r2, r1, r7
 801d2c4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d2c8:	4356      	muls	r6, r2
 801d2ca:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801d2ce:	f108 0801 	add.w	r8, r8, #1
 801d2d2:	920a      	str	r2, [sp, #40]	@ 0x28
 801d2d4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d2d6:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801d2da:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d2dc:	fa1f f888 	uxth.w	r8, r8
 801d2e0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801d2e4:	f108 0204 	add.w	r2, r8, #4
 801d2e8:	9211      	str	r2, [sp, #68]	@ 0x44
 801d2ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d2ec:	4b85      	ldr	r3, [pc, #532]	@ (801d504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d2ee:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801d2f2:	b2ad      	uxth	r5, r5
 801d2f4:	9215      	str	r2, [sp, #84]	@ 0x54
 801d2f6:	2d00      	cmp	r5, #0
 801d2f8:	9a04      	ldr	r2, [sp, #16]
 801d2fa:	f04f 0100 	mov.w	r1, #0
 801d2fe:	bf18      	it	ne
 801d300:	2200      	movne	r2, #0
 801d302:	1b1b      	subs	r3, r3, r4
 801d304:	b292      	uxth	r2, r2
 801d306:	910d      	str	r1, [sp, #52]	@ 0x34
 801d308:	9319      	str	r3, [sp, #100]	@ 0x64
 801d30a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801d30c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d30e:	fa11 f383 	uxtah	r3, r1, r3
 801d312:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801d314:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d318:	3304      	adds	r3, #4
 801d31a:	9306      	str	r3, [sp, #24]
 801d31c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d31e:	4283      	cmp	r3, r0
 801d320:	f240 8166 	bls.w	801d5f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801d324:	9902      	ldr	r1, [sp, #8]
 801d326:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801d32a:	fbb5 f3f3 	udiv	r3, r5, r3
 801d32e:	1acb      	subs	r3, r1, r3
 801d330:	b29b      	uxth	r3, r3
 801d332:	9316      	str	r3, [sp, #88]	@ 0x58
 801d334:	9b06      	ldr	r3, [sp, #24]
 801d336:	9e06      	ldr	r6, [sp, #24]
 801d338:	7859      	ldrb	r1, [r3, #1]
 801d33a:	789b      	ldrb	r3, [r3, #2]
 801d33c:	7836      	ldrb	r6, [r6, #0]
 801d33e:	9612      	str	r6, [sp, #72]	@ 0x48
 801d340:	021b      	lsls	r3, r3, #8
 801d342:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d346:	9906      	ldr	r1, [sp, #24]
 801d348:	78c9      	ldrb	r1, [r1, #3]
 801d34a:	430b      	orrs	r3, r1
 801d34c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801d34e:	3601      	adds	r6, #1
 801d350:	4419      	add	r1, r3
 801d352:	9605      	str	r6, [sp, #20]
 801d354:	1c4e      	adds	r6, r1, #1
 801d356:	9603      	str	r6, [sp, #12]
 801d358:	7849      	ldrb	r1, [r1, #1]
 801d35a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801d35c:	0209      	lsls	r1, r1, #8
 801d35e:	5cf3      	ldrb	r3, [r6, r3]
 801d360:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801d364:	4319      	orrs	r1, r3
 801d366:	b28b      	uxth	r3, r1
 801d368:	930c      	str	r3, [sp, #48]	@ 0x30
 801d36a:	2300      	movs	r3, #0
 801d36c:	f04f 0a01 	mov.w	sl, #1
 801d370:	9307      	str	r3, [sp, #28]
 801d372:	469c      	mov	ip, r3
 801d374:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801d378:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801d37c:	46d3      	mov	fp, sl
 801d37e:	4657      	mov	r7, sl
 801d380:	930e      	str	r3, [sp, #56]	@ 0x38
 801d382:	2d00      	cmp	r5, #0
 801d384:	d07e      	beq.n	801d484 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801d386:	42af      	cmp	r7, r5
 801d388:	d26e      	bcs.n	801d468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801d38a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d38c:	9201      	str	r2, [sp, #4]
 801d38e:	1bed      	subs	r5, r5, r7
 801d390:	4283      	cmp	r3, r0
 801d392:	b2ad      	uxth	r5, r5
 801d394:	d802      	bhi.n	801d39c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801d396:	e073      	b.n	801d480 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801d398:	2b00      	cmp	r3, #0
 801d39a:	d15f      	bne.n	801d45c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801d39c:	9b03      	ldr	r3, [sp, #12]
 801d39e:	785b      	ldrb	r3, [r3, #1]
 801d3a0:	f1cb 0207 	rsb	r2, fp, #7
 801d3a4:	4093      	lsls	r3, r2
 801d3a6:	005b      	lsls	r3, r3, #1
 801d3a8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801d3ac:	9b03      	ldr	r3, [sp, #12]
 801d3ae:	781b      	ldrb	r3, [r3, #0]
 801d3b0:	fa43 f30b 	asr.w	r3, r3, fp
 801d3b4:	b2db      	uxtb	r3, r3
 801d3b6:	4313      	orrs	r3, r2
 801d3b8:	f10b 0201 	add.w	r2, fp, #1
 801d3bc:	fa5f fb82 	uxtb.w	fp, r2
 801d3c0:	9a03      	ldr	r2, [sp, #12]
 801d3c2:	f1bb 0f08 	cmp.w	fp, #8
 801d3c6:	bf15      	itete	ne
 801d3c8:	3201      	addne	r2, #1
 801d3ca:	3202      	addeq	r2, #2
 801d3cc:	9203      	strne	r2, [sp, #12]
 801d3ce:	9203      	streq	r2, [sp, #12]
 801d3d0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801d3d2:	b29f      	uxth	r7, r3
 801d3d4:	bf08      	it	eq
 801d3d6:	f04f 0b00 	moveq.w	fp, #0
 801d3da:	42ba      	cmp	r2, r7
 801d3dc:	d309      	bcc.n	801d3f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d3de:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801d3e2:	2301      	movs	r3, #1
 801d3e4:	9a05      	ldr	r2, [sp, #20]
 801d3e6:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801d3ea:	d30e      	bcc.n	801d40a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801d3ec:	469a      	mov	sl, r3
 801d3ee:	2600      	movs	r6, #0
 801d3f0:	e035      	b.n	801d45e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801d3f2:	9b05      	ldr	r3, [sp, #20]
 801d3f4:	429f      	cmp	r7, r3
 801d3f6:	d318      	bcc.n	801d42a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801d3f8:	eb04 030a 	add.w	r3, r4, sl
 801d3fc:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801d400:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801d404:	f10a 0301 	add.w	r3, sl, #1
 801d408:	b29b      	uxth	r3, r3
 801d40a:	9a05      	ldr	r2, [sp, #20]
 801d40c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801d410:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801d412:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d416:	7116      	strb	r6, [r2, #4]
 801d418:	f10a 0601 	add.w	r6, sl, #1
 801d41c:	80d1      	strh	r1, [r2, #6]
 801d41e:	7156      	strb	r6, [r2, #5]
 801d420:	9a05      	ldr	r2, [sp, #20]
 801d422:	3201      	adds	r2, #1
 801d424:	b292      	uxth	r2, r2
 801d426:	9205      	str	r2, [sp, #20]
 801d428:	e7e0      	b.n	801d3ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801d42a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801d42e:	463a      	mov	r2, r7
 801d430:	795b      	ldrb	r3, [r3, #5]
 801d432:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801d436:	4426      	add	r6, r4
 801d438:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801d43a:	eb01 0c06 	add.w	ip, r1, r6
 801d43e:	f1bc 0f00 	cmp.w	ip, #0
 801d442:	dd07      	ble.n	801d454 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801d444:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d448:	f892 c004 	ldrb.w	ip, [r2, #4]
 801d44c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801d450:	88d2      	ldrh	r2, [r2, #6]
 801d452:	e7f1      	b.n	801d438 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801d454:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801d458:	b29b      	uxth	r3, r3
 801d45a:	e7c3      	b.n	801d3e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801d45c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801d45e:	970c      	str	r7, [sp, #48]	@ 0x30
 801d460:	9a01      	ldr	r2, [sp, #4]
 801d462:	46b4      	mov	ip, r6
 801d464:	461f      	mov	r7, r3
 801d466:	e78c      	b.n	801d382 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801d468:	1b7b      	subs	r3, r7, r5
 801d46a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d46e:	9201      	str	r2, [sp, #4]
 801d470:	eb0c 0605 	add.w	r6, ip, r5
 801d474:	b29b      	uxth	r3, r3
 801d476:	b2b6      	uxth	r6, r6
 801d478:	2500      	movs	r5, #0
 801d47a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d47c:	4282      	cmp	r2, r0
 801d47e:	d88b      	bhi.n	801d398 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d480:	9a01      	ldr	r2, [sp, #4]
 801d482:	e74b      	b.n	801d31c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801d484:	4297      	cmp	r7, r2
 801d486:	d332      	bcc.n	801d4ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801d488:	1abb      	subs	r3, r7, r2
 801d48a:	b29b      	uxth	r3, r3
 801d48c:	9208      	str	r2, [sp, #32]
 801d48e:	9501      	str	r5, [sp, #4]
 801d490:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d492:	29ff      	cmp	r1, #255	@ 0xff
 801d494:	9908      	ldr	r1, [sp, #32]
 801d496:	eb0c 0601 	add.w	r6, ip, r1
 801d49a:	d135      	bne.n	801d508 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801d49c:	f1a0 0e02 	sub.w	lr, r0, #2
 801d4a0:	b2b6      	uxth	r6, r6
 801d4a2:	45b4      	cmp	ip, r6
 801d4a4:	f040 808c 	bne.w	801d5c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801d4a8:	9908      	ldr	r1, [sp, #32]
 801d4aa:	4297      	cmp	r7, r2
 801d4ac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d4b0:	d3e2      	bcc.n	801d478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801d4b2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801d4b4:	9904      	ldr	r1, [sp, #16]
 801d4b6:	8812      	ldrh	r2, [r2, #0]
 801d4b8:	1a52      	subs	r2, r2, r1
 801d4ba:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d4be:	9a07      	ldr	r2, [sp, #28]
 801d4c0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801d4c2:	3201      	adds	r2, #1
 801d4c4:	428a      	cmp	r2, r1
 801d4c6:	9207      	str	r2, [sp, #28]
 801d4c8:	f040 8087 	bne.w	801d5da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d4cc:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801d4d0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801d4d4:	9b04      	ldr	r3, [sp, #16]
 801d4d6:	1bed      	subs	r5, r5, r7
 801d4d8:	b2ad      	uxth	r5, r5
 801d4da:	2d00      	cmp	r5, #0
 801d4dc:	bf08      	it	eq
 801d4de:	461a      	moveq	r2, r3
 801d4e0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d4e2:	bf18      	it	ne
 801d4e4:	2200      	movne	r2, #0
 801d4e6:	3301      	adds	r3, #1
 801d4e8:	930d      	str	r3, [sp, #52]	@ 0x34
 801d4ea:	b292      	uxth	r2, r2
 801d4ec:	e70d      	b.n	801d30a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801d4ee:	1bd1      	subs	r1, r2, r7
 801d4f0:	b28b      	uxth	r3, r1
 801d4f2:	9301      	str	r3, [sp, #4]
 801d4f4:	9708      	str	r7, [sp, #32]
 801d4f6:	462b      	mov	r3, r5
 801d4f8:	e7ca      	b.n	801d490 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801d4fa:	bf00      	nop
 801d4fc:	20013f60 	.word	0x20013f60
 801d500:	20013f5a 	.word	0x20013f5a
 801d504:	fffff7fb 	.word	0xfffff7fb
 801d508:	b2b6      	uxth	r6, r6
 801d50a:	900b      	str	r0, [sp, #44]	@ 0x2c
 801d50c:	45b4      	cmp	ip, r6
 801d50e:	d0cb      	beq.n	801d4a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801d510:	f10c 0101 	add.w	r1, ip, #1
 801d514:	44a4      	add	ip, r4
 801d516:	9117      	str	r1, [sp, #92]	@ 0x5c
 801d518:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801d51c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801d51e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d522:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801d524:	f8b1 c000 	ldrh.w	ip, [r1]
 801d528:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801d52a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801d52e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801d532:	fb1e fe01 	smulbb	lr, lr, r1
 801d536:	ea4f 2825 	mov.w	r8, r5, asr #8
 801d53a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801d53c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801d540:	fb08 e801 	mla	r8, r8, r1, lr
 801d544:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801d548:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801d54a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801d54e:	fb19 f901 	smulbb	r9, r9, r1
 801d552:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801d556:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801d558:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801d55c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801d560:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d564:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801d566:	fa5f fc8c 	uxtb.w	ip, ip
 801d56a:	fb1c fc01 	smulbb	ip, ip, r1
 801d56e:	00ed      	lsls	r5, r5, #3
 801d570:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801d572:	b2ed      	uxtb	r5, r5
 801d574:	fb05 c501 	mla	r5, r5, r1, ip
 801d578:	fa1f f888 	uxth.w	r8, r8
 801d57c:	fa1f fe8e 	uxth.w	lr, lr
 801d580:	b2ad      	uxth	r5, r5
 801d582:	f108 0c01 	add.w	ip, r8, #1
 801d586:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801d58a:	f10e 0901 	add.w	r9, lr, #1
 801d58e:	f105 0c01 	add.w	ip, r5, #1
 801d592:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801d596:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801d59a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d59e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801d5a2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d5a6:	ea4c 0808 	orr.w	r8, ip, r8
 801d5aa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801d5ac:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801d5b0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d5b4:	ea48 0809 	orr.w	r8, r8, r9
 801d5b8:	f821 8b02 	strh.w	r8, [r1], #2
 801d5bc:	910b      	str	r1, [sp, #44]	@ 0x2c
 801d5be:	e7a5      	b.n	801d50c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801d5c0:	f10c 0801 	add.w	r8, ip, #1
 801d5c4:	44a4      	add	ip, r4
 801d5c6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801d5c8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801d5cc:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d5d0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801d5d4:	fa1f fc88 	uxth.w	ip, r8
 801d5d8:	e763      	b.n	801d4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801d5da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d5de:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801d5e2:	1aad      	subs	r5, r5, r2
 801d5e4:	b2ad      	uxth	r5, r5
 801d5e6:	2d00      	cmp	r5, #0
 801d5e8:	bf18      	it	ne
 801d5ea:	2200      	movne	r2, #0
 801d5ec:	9201      	str	r2, [sp, #4]
 801d5ee:	e744      	b.n	801d47a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801d5f0:	4b03      	ldr	r3, [pc, #12]	@ (801d600 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801d5f2:	6818      	ldr	r0, [r3, #0]
 801d5f4:	6803      	ldr	r3, [r0, #0]
 801d5f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d5f8:	4798      	blx	r3
 801d5fa:	b01f      	add	sp, #124	@ 0x7c
 801d5fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d600:	20013f60 	.word	0x20013f60

0801d604 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801d604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d608:	b093      	sub	sp, #76	@ 0x4c
 801d60a:	4616      	mov	r6, r2
 801d60c:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801d610:	9003      	str	r0, [sp, #12]
 801d612:	460d      	mov	r5, r1
 801d614:	9201      	str	r2, [sp, #4]
 801d616:	2a00      	cmp	r2, #0
 801d618:	f000 8304 	beq.w	801dc24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 801d61c:	6830      	ldr	r0, [r6, #0]
 801d61e:	6871      	ldr	r1, [r6, #4]
 801d620:	ac0e      	add	r4, sp, #56	@ 0x38
 801d622:	c403      	stmia	r4!, {r0, r1}
 801d624:	6818      	ldr	r0, [r3, #0]
 801d626:	6859      	ldr	r1, [r3, #4]
 801d628:	ac10      	add	r4, sp, #64	@ 0x40
 801d62a:	c403      	stmia	r4!, {r0, r1}
 801d62c:	a80e      	add	r0, sp, #56	@ 0x38
 801d62e:	f7f8 fc51 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d632:	4631      	mov	r1, r6
 801d634:	a810      	add	r0, sp, #64	@ 0x40
 801d636:	f7f8 fc75 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d63a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801d63e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801d642:	bfd7      	itett	le
 801d644:	b293      	uxthle	r3, r2
 801d646:	2301      	movgt	r3, #1
 801d648:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801d64c:	fb91 f3f3 	sdivle	r3, r1, r3
 801d650:	9304      	str	r3, [sp, #16]
 801d652:	f105 0308 	add.w	r3, r5, #8
 801d656:	9904      	ldr	r1, [sp, #16]
 801d658:	9308      	str	r3, [sp, #32]
 801d65a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801d65e:	440b      	add	r3, r1
 801d660:	3b01      	subs	r3, #1
 801d662:	fb93 f3f1 	sdiv	r3, r3, r1
 801d666:	9908      	ldr	r1, [sp, #32]
 801d668:	3b01      	subs	r3, #1
 801d66a:	b29b      	uxth	r3, r3
 801d66c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d670:	9309      	str	r3, [sp, #36]	@ 0x24
 801d672:	9904      	ldr	r1, [sp, #16]
 801d674:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801d678:	fb93 f0f1 	sdiv	r0, r3, r1
 801d67c:	b284      	uxth	r4, r0
 801d67e:	9405      	str	r4, [sp, #20]
 801d680:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801d684:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801d688:	fb05 3914 	mls	r9, r5, r4, r3
 801d68c:	fb19 f902 	smulbb	r9, r9, r2
 801d690:	4489      	add	r9, r1
 801d692:	fa1f f989 	uxth.w	r9, r9
 801d696:	2d00      	cmp	r5, #0
 801d698:	d05d      	beq.n	801d756 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801d69a:	1e6a      	subs	r2, r5, #1
 801d69c:	9808      	ldr	r0, [sp, #32]
 801d69e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801d6a2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d6a4:	fa9a fa8a 	rev.w	sl, sl
 801d6a8:	4492      	add	sl, r2
 801d6aa:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801d6ae:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801d6b2:	4411      	add	r1, r2
 801d6b4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801d6b8:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801d6bc:	4413      	add	r3, r2
 801d6be:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801d6c2:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801d6c6:	9302      	str	r3, [sp, #8]
 801d6c8:	4bcb      	ldr	r3, [pc, #812]	@ (801d9f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801d6ca:	6818      	ldr	r0, [r3, #0]
 801d6cc:	6803      	ldr	r3, [r0, #0]
 801d6ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d6d0:	4798      	blx	r3
 801d6d2:	4bca      	ldr	r3, [pc, #808]	@ (801d9fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801d6d4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801d6d8:	881b      	ldrh	r3, [r3, #0]
 801d6da:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801d6de:	fb03 2404 	mla	r4, r3, r4, r2
 801d6e2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d6e6:	436b      	muls	r3, r5
 801d6e8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d6ec:	930d      	str	r3, [sp, #52]	@ 0x34
 801d6ee:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801d6f2:	fb99 f3f3 	sdiv	r3, r9, r3
 801d6f6:	9306      	str	r3, [sp, #24]
 801d6f8:	9b01      	ldr	r3, [sp, #4]
 801d6fa:	43db      	mvns	r3, r3
 801d6fc:	b2db      	uxtb	r3, r3
 801d6fe:	930a      	str	r3, [sp, #40]	@ 0x28
 801d700:	9b03      	ldr	r3, [sp, #12]
 801d702:	3304      	adds	r3, #4
 801d704:	4618      	mov	r0, r3
 801d706:	2280      	movs	r2, #128	@ 0x80
 801d708:	2100      	movs	r1, #0
 801d70a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d70c:	f00c fd0d 	bl	802a12a <memset>
 801d710:	4bbb      	ldr	r3, [pc, #748]	@ (801da00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801d712:	9300      	str	r3, [sp, #0]
 801d714:	2300      	movs	r3, #0
 801d716:	f04f 0600 	mov.w	r6, #0
 801d71a:	9307      	str	r3, [sp, #28]
 801d71c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d71e:	42a3      	cmp	r3, r4
 801d720:	f240 827b 	bls.w	801dc1a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 801d724:	f04f 0e07 	mov.w	lr, #7
 801d728:	f1b9 0f00 	cmp.w	r9, #0
 801d72c:	f000 8159 	beq.w	801d9e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801d730:	f89a 5000 	ldrb.w	r5, [sl]
 801d734:	b2ed      	uxtb	r5, r5
 801d736:	11aa      	asrs	r2, r5, #6
 801d738:	f10a 0701 	add.w	r7, sl, #1
 801d73c:	d10e      	bne.n	801d75c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801d73e:	9b03      	ldr	r3, [sp, #12]
 801d740:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801d744:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801d748:	88ae      	ldrh	r6, [r5, #4]
 801d74a:	f109 39ff 	add.w	r9, r9, #4294967295
 801d74e:	fa1f f989 	uxth.w	r9, r9
 801d752:	46ba      	mov	sl, r7
 801d754:	e7e8      	b.n	801d728 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801d756:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801d75a:	e7a6      	b.n	801d6aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801d75c:	2a01      	cmp	r2, #1
 801d75e:	d129      	bne.n	801d7b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801d760:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801d764:	f005 0203 	and.w	r2, r5, #3
 801d768:	3b02      	subs	r3, #2
 801d76a:	4413      	add	r3, r2
 801d76c:	f003 031f 	and.w	r3, r3, #31
 801d770:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801d774:	f363 0604 	bfi	r6, r3, #0, #5
 801d778:	3a02      	subs	r2, #2
 801d77a:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801d77e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801d782:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801d786:	f362 164a 	bfi	r6, r2, #5, #6
 801d78a:	3d02      	subs	r5, #2
 801d78c:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801d790:	f005 051f 	and.w	r5, r5, #31
 801d794:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801d798:	2103      	movs	r1, #3
 801d79a:	fb11 2205 	smlabb	r2, r1, r5, r2
 801d79e:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801d7a2:	9a03      	ldr	r2, [sp, #12]
 801d7a4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d7a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d7ac:	f365 26cf 	bfi	r6, r5, #11, #5
 801d7b0:	809e      	strh	r6, [r3, #4]
 801d7b2:	e7ca      	b.n	801d74a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801d7b4:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801d7b8:	2a02      	cmp	r2, #2
 801d7ba:	b2ab      	uxth	r3, r5
 801d7bc:	d136      	bne.n	801d82c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801d7be:	2101      	movs	r1, #1
 801d7c0:	fb12 1205 	smlabb	r2, r2, r5, r1
 801d7c4:	4492      	add	sl, r2
 801d7c6:	463a      	mov	r2, r7
 801d7c8:	4552      	cmp	r2, sl
 801d7ca:	d01c      	beq.n	801d806 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801d7cc:	4694      	mov	ip, r2
 801d7ce:	f04f 0b03 	mov.w	fp, #3
 801d7d2:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801d7d6:	7852      	ldrb	r2, [r2, #1]
 801d7d8:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801d7dc:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801d7e0:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801d7e4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801d7e8:	f001 021f 	and.w	r2, r1, #31
 801d7ec:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801d7f0:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801d7f4:	9a03      	ldr	r2, [sp, #12]
 801d7f6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801d7fa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d7fe:	460e      	mov	r6, r1
 801d800:	8081      	strh	r1, [r0, #4]
 801d802:	4662      	mov	r2, ip
 801d804:	e7e0      	b.n	801d7c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801d806:	4599      	cmp	r9, r3
 801d808:	d20b      	bcs.n	801d822 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801d80a:	eba5 0509 	sub.w	r5, r5, r9
 801d80e:	2d00      	cmp	r5, #0
 801d810:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801d814:	f300 8209 	bgt.w	801dc2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 801d818:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801d81c:	2301      	movs	r3, #1
 801d81e:	9307      	str	r3, [sp, #28]
 801d820:	e00c      	b.n	801d83c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801d822:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801d826:	eba9 0903 	sub.w	r9, r9, r3
 801d82a:	e790      	b.n	801d74e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 801d82c:	4599      	cmp	r9, r3
 801d82e:	d2fa      	bcs.n	801d826 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801d830:	eba5 0509 	sub.w	r5, r5, r9
 801d834:	2d00      	cmp	r5, #0
 801d836:	dc1d      	bgt.n	801d874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801d838:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801d83c:	f04f 0b00 	mov.w	fp, #0
 801d840:	f1b8 0f00 	cmp.w	r8, #0
 801d844:	f340 81a1 	ble.w	801db8a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 801d848:	783b      	ldrb	r3, [r7, #0]
 801d84a:	b2db      	uxtb	r3, r3
 801d84c:	119a      	asrs	r2, r3, #6
 801d84e:	f107 0a01 	add.w	sl, r7, #1
 801d852:	f040 80d7 	bne.w	801da04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801d856:	9a03      	ldr	r2, [sp, #12]
 801d858:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d85c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d860:	889e      	ldrh	r6, [r3, #4]
 801d862:	9b01      	ldr	r3, [sp, #4]
 801d864:	2bff      	cmp	r3, #255	@ 0xff
 801d866:	f040 81e9 	bne.w	801dc3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801d86a:	8026      	strh	r6, [r4, #0]
 801d86c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d870:	3402      	adds	r4, #2
 801d872:	e0be      	b.n	801d9f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801d874:	9b02      	ldr	r3, [sp, #8]
 801d876:	9a02      	ldr	r2, [sp, #8]
 801d878:	42ab      	cmp	r3, r5
 801d87a:	bfa8      	it	ge
 801d87c:	462b      	movge	r3, r5
 801d87e:	eba2 0803 	sub.w	r8, r2, r3
 801d882:	9a07      	ldr	r2, [sp, #28]
 801d884:	1aed      	subs	r5, r5, r3
 801d886:	2a00      	cmp	r2, #0
 801d888:	d05a      	beq.n	801d940 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801d88a:	9a01      	ldr	r2, [sp, #4]
 801d88c:	2aff      	cmp	r2, #255	@ 0xff
 801d88e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d892:	d049      	beq.n	801d928 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801d894:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801d898:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801d89c:	42a3      	cmp	r3, r4
 801d89e:	f240 80a5 	bls.w	801d9ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801d8a2:	46bc      	mov	ip, r7
 801d8a4:	8820      	ldrh	r0, [r4, #0]
 801d8a6:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801d8aa:	7879      	ldrb	r1, [r7, #1]
 801d8ac:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801d8b0:	b212      	sxth	r2, r2
 801d8b2:	b291      	uxth	r1, r2
 801d8b4:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801d8b8:	120f      	asrs	r7, r1, #8
 801d8ba:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801d8be:	fb1a fa09 	smulbb	sl, sl, r9
 801d8c2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801d8c6:	fb07 a70e 	mla	r7, r7, lr, sl
 801d8ca:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801d8ce:	00c0      	lsls	r0, r0, #3
 801d8d0:	10c9      	asrs	r1, r1, #3
 801d8d2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801d8d6:	00d2      	lsls	r2, r2, #3
 801d8d8:	b2c0      	uxtb	r0, r0
 801d8da:	fb1a fa09 	smulbb	sl, sl, r9
 801d8de:	fb10 f009 	smulbb	r0, r0, r9
 801d8e2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d8e6:	b2d2      	uxtb	r2, r2
 801d8e8:	b2bf      	uxth	r7, r7
 801d8ea:	fb01 a10e 	mla	r1, r1, lr, sl
 801d8ee:	fb02 020e 	mla	r2, r2, lr, r0
 801d8f2:	b289      	uxth	r1, r1
 801d8f4:	b292      	uxth	r2, r2
 801d8f6:	1c78      	adds	r0, r7, #1
 801d8f8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d8fc:	f101 0a01 	add.w	sl, r1, #1
 801d900:	1c50      	adds	r0, r2, #1
 801d902:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d906:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801d90a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801d90e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d912:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d916:	4307      	orrs	r7, r0
 801d918:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801d91c:	ea47 070a 	orr.w	r7, r7, sl
 801d920:	f824 7b02 	strh.w	r7, [r4], #2
 801d924:	4667      	mov	r7, ip
 801d926:	e7b9      	b.n	801d89c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801d928:	42a3      	cmp	r3, r4
 801d92a:	d95f      	bls.n	801d9ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801d92c:	463a      	mov	r2, r7
 801d92e:	f812 1b02 	ldrb.w	r1, [r2], #2
 801d932:	7878      	ldrb	r0, [r7, #1]
 801d934:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801d938:	f824 1b02 	strh.w	r1, [r4], #2
 801d93c:	4617      	mov	r7, r2
 801d93e:	e7f3      	b.n	801d928 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801d940:	9901      	ldr	r1, [sp, #4]
 801d942:	29ff      	cmp	r1, #255	@ 0xff
 801d944:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d948:	b2b2      	uxth	r2, r6
 801d94a:	d044      	beq.n	801d9d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801d94c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d950:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801d954:	ea4f 2922 	mov.w	r9, r2, asr #8
 801d958:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d95c:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801d960:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801d964:	4608      	mov	r0, r1
 801d966:	fb09 f901 	mul.w	r9, r9, r1
 801d96a:	fb0e fe01 	mul.w	lr, lr, r1
 801d96e:	00d1      	lsls	r1, r2, #3
 801d970:	b2c9      	uxtb	r1, r1
 801d972:	4341      	muls	r1, r0
 801d974:	429c      	cmp	r4, r3
 801d976:	f4bf af61 	bcs.w	801d83c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801d97a:	8822      	ldrh	r2, [r4, #0]
 801d97c:	1210      	asrs	r0, r2, #8
 801d97e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d982:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d986:	00d2      	lsls	r2, r2, #3
 801d988:	fb00 900a 	mla	r0, r0, sl, r9
 801d98c:	b2d2      	uxtb	r2, r2
 801d98e:	b280      	uxth	r0, r0
 801d990:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801d994:	fb02 120a 	mla	r2, r2, sl, r1
 801d998:	b292      	uxth	r2, r2
 801d99a:	f100 0b01 	add.w	fp, r0, #1
 801d99e:	fb0c ec0a 	mla	ip, ip, sl, lr
 801d9a2:	fa1f fc8c 	uxth.w	ip, ip
 801d9a6:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801d9aa:	1c50      	adds	r0, r2, #1
 801d9ac:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d9b0:	f10c 0201 	add.w	r2, ip, #1
 801d9b4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d9b8:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801d9bc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d9c0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d9c4:	ea40 0b0b 	orr.w	fp, r0, fp
 801d9c8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d9cc:	ea4b 0b0c 	orr.w	fp, fp, ip
 801d9d0:	f824 bb02 	strh.w	fp, [r4], #2
 801d9d4:	e7ce      	b.n	801d974 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801d9d6:	429c      	cmp	r4, r3
 801d9d8:	f4bf af30 	bcs.w	801d83c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801d9dc:	f824 2b02 	strh.w	r2, [r4], #2
 801d9e0:	e7f9      	b.n	801d9d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801d9e2:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801d9e6:	4657      	mov	r7, sl
 801d9e8:	464d      	mov	r5, r9
 801d9ea:	e727      	b.n	801d83c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801d9ec:	2300      	movs	r3, #0
 801d9ee:	e716      	b.n	801d81e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801d9f0:	44bb      	add	fp, r7
 801d9f2:	4657      	mov	r7, sl
 801d9f4:	e724      	b.n	801d840 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801d9f6:	bf00      	nop
 801d9f8:	20013f60 	.word	0x20013f60
 801d9fc:	20013f5a 	.word	0x20013f5a
 801da00:	20000180 	.word	0x20000180
 801da04:	2a01      	cmp	r2, #1
 801da06:	d12a      	bne.n	801da5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801da08:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801da0c:	f003 0203 	and.w	r2, r3, #3
 801da10:	3902      	subs	r1, #2
 801da12:	4411      	add	r1, r2
 801da14:	f001 011f 	and.w	r1, r1, #31
 801da18:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801da1c:	f361 0604 	bfi	r6, r1, #0, #5
 801da20:	3802      	subs	r0, #2
 801da22:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801da26:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801da2a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801da2e:	f360 164a 	bfi	r6, r0, #5, #6
 801da32:	3b02      	subs	r3, #2
 801da34:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801da38:	f002 031f 	and.w	r3, r2, #31
 801da3c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801da40:	2203      	movs	r2, #3
 801da42:	f363 26cf 	bfi	r6, r3, #11, #5
 801da46:	fb12 0303 	smlabb	r3, r2, r3, r0
 801da4a:	2207      	movs	r2, #7
 801da4c:	fb12 3301 	smlabb	r3, r2, r1, r3
 801da50:	9a03      	ldr	r2, [sp, #12]
 801da52:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801da56:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801da5a:	809e      	strh	r6, [r3, #4]
 801da5c:	e701      	b.n	801d862 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801da5e:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801da62:	45a8      	cmp	r8, r5
 801da64:	4647      	mov	r7, r8
 801da66:	bfa8      	it	ge
 801da68:	462f      	movge	r7, r5
 801da6a:	2a02      	cmp	r2, #2
 801da6c:	d154      	bne.n	801db18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801da6e:	9b01      	ldr	r3, [sp, #4]
 801da70:	2bff      	cmp	r3, #255	@ 0xff
 801da72:	d01a      	beq.n	801daaa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801da74:	eb0b 0307 	add.w	r3, fp, r7
 801da78:	2b40      	cmp	r3, #64	@ 0x40
 801da7a:	dd16      	ble.n	801daaa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801da7c:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801da80:	4649      	mov	r1, r9
 801da82:	9800      	ldr	r0, [sp, #0]
 801da84:	f7e3 ff08 	bl	8001898 <_ZN8touchgfx5paint9flushLineEPmi>
 801da88:	465a      	mov	r2, fp
 801da8a:	9b01      	ldr	r3, [sp, #4]
 801da8c:	9900      	ldr	r1, [sp, #0]
 801da8e:	4620      	mov	r0, r4
 801da90:	f7e3 ff2c 	bl	80018ec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801da94:	9b00      	ldr	r3, [sp, #0]
 801da96:	461a      	mov	r2, r3
 801da98:	4b6c      	ldr	r3, [pc, #432]	@ (801dc4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801da9a:	429a      	cmp	r2, r3
 801da9c:	bf0c      	ite	eq
 801da9e:	4b6c      	ldreq	r3, [pc, #432]	@ (801dc50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801daa0:	4b6a      	ldrne	r3, [pc, #424]	@ (801dc4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801daa2:	9300      	str	r3, [sp, #0]
 801daa4:	444c      	add	r4, r9
 801daa6:	f04f 0b00 	mov.w	fp, #0
 801daaa:	4652      	mov	r2, sl
 801daac:	2100      	movs	r1, #0
 801daae:	42a9      	cmp	r1, r5
 801dab0:	da2c      	bge.n	801db0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801dab2:	4694      	mov	ip, r2
 801dab4:	f04f 0903 	mov.w	r9, #3
 801dab8:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801dabc:	7852      	ldrb	r2, [r2, #1]
 801dabe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801dac2:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801dac6:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801daca:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801dace:	f003 021f 	and.w	r2, r3, #31
 801dad2:	fb19 000e 	smlabb	r0, r9, lr, r0
 801dad6:	f04f 0e07 	mov.w	lr, #7
 801dada:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801dade:	9a03      	ldr	r2, [sp, #12]
 801dae0:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801dae4:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801dae8:	42b9      	cmp	r1, r7
 801daea:	461e      	mov	r6, r3
 801daec:	8083      	strh	r3, [r0, #4]
 801daee:	da0a      	bge.n	801db06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801daf0:	9a01      	ldr	r2, [sp, #4]
 801daf2:	2aff      	cmp	r2, #255	@ 0xff
 801daf4:	bf15      	itete	ne
 801daf6:	9a00      	ldrne	r2, [sp, #0]
 801daf8:	8023      	strheq	r3, [r4, #0]
 801dafa:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801dafe:	3402      	addeq	r4, #2
 801db00:	bf18      	it	ne
 801db02:	f10b 0b01 	addne.w	fp, fp, #1
 801db06:	3101      	adds	r1, #1
 801db08:	4662      	mov	r2, ip
 801db0a:	e7d0      	b.n	801daae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801db0c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801db10:	eba8 0807 	sub.w	r8, r8, r7
 801db14:	1bed      	subs	r5, r5, r7
 801db16:	e76c      	b.n	801d9f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801db18:	9b01      	ldr	r3, [sp, #4]
 801db1a:	2bff      	cmp	r3, #255	@ 0xff
 801db1c:	eba8 0807 	sub.w	r8, r8, r7
 801db20:	eba5 0507 	sub.w	r5, r5, r7
 801db24:	fa1f f986 	uxth.w	r9, r6
 801db28:	d027      	beq.n	801db7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 801db2a:	eb0b 0307 	add.w	r3, fp, r7
 801db2e:	2b40      	cmp	r3, #64	@ 0x40
 801db30:	dd18      	ble.n	801db64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 801db32:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801db36:	4619      	mov	r1, r3
 801db38:	9800      	ldr	r0, [sp, #0]
 801db3a:	930c      	str	r3, [sp, #48]	@ 0x30
 801db3c:	f7e3 feac 	bl	8001898 <_ZN8touchgfx5paint9flushLineEPmi>
 801db40:	465a      	mov	r2, fp
 801db42:	9b01      	ldr	r3, [sp, #4]
 801db44:	9900      	ldr	r1, [sp, #0]
 801db46:	4620      	mov	r0, r4
 801db48:	f7e3 fed0 	bl	80018ec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801db4c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801db4e:	441c      	add	r4, r3
 801db50:	9b00      	ldr	r3, [sp, #0]
 801db52:	461a      	mov	r2, r3
 801db54:	4b3d      	ldr	r3, [pc, #244]	@ (801dc4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801db56:	429a      	cmp	r2, r3
 801db58:	bf0c      	ite	eq
 801db5a:	4b3d      	ldreq	r3, [pc, #244]	@ (801dc50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801db5c:	4b3b      	ldrne	r3, [pc, #236]	@ (801dc4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801db5e:	9300      	str	r3, [sp, #0]
 801db60:	f04f 0b00 	mov.w	fp, #0
 801db64:	9b00      	ldr	r3, [sp, #0]
 801db66:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801db6a:	463b      	mov	r3, r7
 801db6c:	2b00      	cmp	r3, #0
 801db6e:	f43f af3f 	beq.w	801d9f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801db72:	f822 9b02 	strh.w	r9, [r2], #2
 801db76:	3b01      	subs	r3, #1
 801db78:	e7f8      	b.n	801db6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801db7a:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801db7e:	42a7      	cmp	r7, r4
 801db80:	f67f af37 	bls.w	801d9f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801db84:	f824 9b02 	strh.w	r9, [r4], #2
 801db88:	e7f9      	b.n	801db7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801db8a:	f1bb 0f00 	cmp.w	fp, #0
 801db8e:	d00c      	beq.n	801dbaa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 801db90:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801db94:	4641      	mov	r1, r8
 801db96:	9800      	ldr	r0, [sp, #0]
 801db98:	f7e3 fe7e 	bl	8001898 <_ZN8touchgfx5paint9flushLineEPmi>
 801db9c:	4620      	mov	r0, r4
 801db9e:	9b01      	ldr	r3, [sp, #4]
 801dba0:	9900      	ldr	r1, [sp, #0]
 801dba2:	465a      	mov	r2, fp
 801dba4:	f7e3 fea2 	bl	80018ec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801dba8:	4444      	add	r4, r8
 801dbaa:	4b2a      	ldr	r3, [pc, #168]	@ (801dc54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801dbac:	9a02      	ldr	r2, [sp, #8]
 801dbae:	881b      	ldrh	r3, [r3, #0]
 801dbb0:	1a9b      	subs	r3, r3, r2
 801dbb2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dbb6:	9b06      	ldr	r3, [sp, #24]
 801dbb8:	3301      	adds	r3, #1
 801dbba:	9306      	str	r3, [sp, #24]
 801dbbc:	9a06      	ldr	r2, [sp, #24]
 801dbbe:	9b04      	ldr	r3, [sp, #16]
 801dbc0:	4293      	cmp	r3, r2
 801dbc2:	d120      	bne.n	801dc06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 801dbc4:	9b05      	ldr	r3, [sp, #20]
 801dbc6:	9a05      	ldr	r2, [sp, #20]
 801dbc8:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801dbcc:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801dbd0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801dbd2:	f103 0801 	add.w	r8, r3, #1
 801dbd6:	9b08      	ldr	r3, [sp, #32]
 801dbd8:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801dbdc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dbde:	ba3f      	rev	r7, r7
 801dbe0:	2280      	movs	r2, #128	@ 0x80
 801dbe2:	2100      	movs	r1, #0
 801dbe4:	441f      	add	r7, r3
 801dbe6:	eba9 0905 	sub.w	r9, r9, r5
 801dbea:	f00c fa9e 	bl	802a12a <memset>
 801dbee:	2300      	movs	r3, #0
 801dbf0:	fa1f f989 	uxth.w	r9, r9
 801dbf4:	f04f 0600 	mov.w	r6, #0
 801dbf8:	f8cd 8014 	str.w	r8, [sp, #20]
 801dbfc:	9306      	str	r3, [sp, #24]
 801dbfe:	f7e3 fe41 	bl	8001884 <_ZN8touchgfx5paint8tearDownEv>
 801dc02:	46ba      	mov	sl, r7
 801dc04:	e58a      	b.n	801d71c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801dc06:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801dc0a:	9b02      	ldr	r3, [sp, #8]
 801dc0c:	eba9 0903 	sub.w	r9, r9, r3
 801dc10:	eba9 0505 	sub.w	r5, r9, r5
 801dc14:	fa1f f985 	uxth.w	r9, r5
 801dc18:	e7f1      	b.n	801dbfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 801dc1a:	4b0f      	ldr	r3, [pc, #60]	@ (801dc58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 801dc1c:	6818      	ldr	r0, [r3, #0]
 801dc1e:	6803      	ldr	r3, [r0, #0]
 801dc20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801dc22:	4798      	blx	r3
 801dc24:	b013      	add	sp, #76	@ 0x4c
 801dc26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc2a:	9b02      	ldr	r3, [sp, #8]
 801dc2c:	9a02      	ldr	r2, [sp, #8]
 801dc2e:	42ab      	cmp	r3, r5
 801dc30:	bfa8      	it	ge
 801dc32:	462b      	movge	r3, r5
 801dc34:	eba2 0803 	sub.w	r8, r2, r3
 801dc38:	1aed      	subs	r5, r5, r3
 801dc3a:	e626      	b.n	801d88a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801dc3c:	f108 38ff 	add.w	r8, r8, #4294967295
 801dc40:	fa1f f986 	uxth.w	r9, r6
 801dc44:	2500      	movs	r5, #0
 801dc46:	2701      	movs	r7, #1
 801dc48:	e76f      	b.n	801db2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801dc4a:	bf00      	nop
 801dc4c:	20000180 	.word	0x20000180
 801dc50:	20000280 	.word	0x20000280
 801dc54:	20013f5a 	.word	0x20013f5a
 801dc58:	20013f60 	.word	0x20013f60

0801dc5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801dc5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc60:	b08f      	sub	sp, #60	@ 0x3c
 801dc62:	461c      	mov	r4, r3
 801dc64:	9203      	str	r2, [sp, #12]
 801dc66:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801dc6a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dc6c:	9202      	str	r2, [sp, #8]
 801dc6e:	460f      	mov	r7, r1
 801dc70:	2a00      	cmp	r2, #0
 801dc72:	f000 8128 	beq.w	801dec6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801dc76:	6820      	ldr	r0, [r4, #0]
 801dc78:	6861      	ldr	r1, [r4, #4]
 801dc7a:	aa0a      	add	r2, sp, #40	@ 0x28
 801dc7c:	c203      	stmia	r2!, {r0, r1}
 801dc7e:	6818      	ldr	r0, [r3, #0]
 801dc80:	6859      	ldr	r1, [r3, #4]
 801dc82:	aa0c      	add	r2, sp, #48	@ 0x30
 801dc84:	c203      	stmia	r2!, {r0, r1}
 801dc86:	a80a      	add	r0, sp, #40	@ 0x28
 801dc88:	f7f8 f924 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc8c:	4621      	mov	r1, r4
 801dc8e:	a80c      	add	r0, sp, #48	@ 0x30
 801dc90:	f7f8 f948 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dc94:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801dc98:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801dc9c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801dca0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801dca4:	bfde      	ittt	le
 801dca6:	b2b3      	uxthle	r3, r6
 801dca8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801dcac:	fb92 f3f3 	sdivle	r3, r2, r3
 801dcb0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801dcb4:	bfc8      	it	gt
 801dcb6:	2301      	movgt	r3, #1
 801dcb8:	fb92 f1f3 	sdiv	r1, r2, r3
 801dcbc:	fa1f fc81 	uxth.w	ip, r1
 801dcc0:	fb0c 2413 	mls	r4, ip, r3, r2
 801dcc4:	fb14 f406 	smulbb	r4, r4, r6
 801dcc8:	441d      	add	r5, r3
 801dcca:	4404      	add	r4, r0
 801dccc:	4661      	mov	r1, ip
 801dcce:	3d01      	subs	r5, #1
 801dcd0:	b2a4      	uxth	r4, r4
 801dcd2:	fb95 f5f3 	sdiv	r5, r5, r3
 801dcd6:	b121      	cbz	r1, 801dce2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801dcd8:	9b03      	ldr	r3, [sp, #12]
 801dcda:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801dcde:	ba1b      	rev	r3, r3
 801dce0:	441f      	add	r7, r3
 801dce2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801dce6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801dcea:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801dcee:	4418      	add	r0, r3
 801dcf0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801dcf4:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801dcf8:	441a      	add	r2, r3
 801dcfa:	4b74      	ldr	r3, [pc, #464]	@ (801decc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801dcfc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801dd00:	6818      	ldr	r0, [r3, #0]
 801dd02:	6803      	ldr	r3, [r0, #0]
 801dd04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801dd06:	4798      	blx	r3
 801dd08:	4a71      	ldr	r2, [pc, #452]	@ (801ded0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801dd0a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801dd0e:	8813      	ldrh	r3, [r2, #0]
 801dd10:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801dd14:	9209      	str	r2, [sp, #36]	@ 0x24
 801dd16:	fb03 c101 	mla	r1, r3, r1, ip
 801dd1a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801dd1e:	4373      	muls	r3, r6
 801dd20:	b2ad      	uxth	r5, r5
 801dd22:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dd26:	00ad      	lsls	r5, r5, #2
 801dd28:	2c00      	cmp	r4, #0
 801dd2a:	9304      	str	r3, [sp, #16]
 801dd2c:	f105 0304 	add.w	r3, r5, #4
 801dd30:	9305      	str	r3, [sp, #20]
 801dd32:	bf0c      	ite	eq
 801dd34:	46c8      	moveq	r8, r9
 801dd36:	f04f 0800 	movne.w	r8, #0
 801dd3a:	2300      	movs	r3, #0
 801dd3c:	fa1f f888 	uxth.w	r8, r8
 801dd40:	9301      	str	r3, [sp, #4]
 801dd42:	9a04      	ldr	r2, [sp, #16]
 801dd44:	4282      	cmp	r2, r0
 801dd46:	f240 80b9 	bls.w	801debc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801dd4a:	b95b      	cbnz	r3, 801dd64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801dd4c:	783a      	ldrb	r2, [r7, #0]
 801dd4e:	0993      	lsrs	r3, r2, #6
 801dd50:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801dd54:	9201      	str	r2, [sp, #4]
 801dd56:	1e5a      	subs	r2, r3, #1
 801dd58:	2a02      	cmp	r2, #2
 801dd5a:	bf8d      	iteet	hi
 801dd5c:	787b      	ldrbhi	r3, [r7, #1]
 801dd5e:	3701      	addls	r7, #1
 801dd60:	b29b      	uxthls	r3, r3
 801dd62:	3702      	addhi	r7, #2
 801dd64:	b184      	cbz	r4, 801dd88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801dd66:	429c      	cmp	r4, r3
 801dd68:	bf95      	itete	ls
 801dd6a:	1b1c      	subls	r4, r3, r4
 801dd6c:	1ae4      	subhi	r4, r4, r3
 801dd6e:	fa1f fa84 	uxthls.w	sl, r4
 801dd72:	b2a4      	uxthhi	r4, r4
 801dd74:	bf87      	ittee	hi
 801dd76:	46c4      	movhi	ip, r8
 801dd78:	f04f 0a00 	movhi.w	sl, #0
 801dd7c:	fa1f fc89 	uxthls.w	ip, r9
 801dd80:	2400      	movls	r4, #0
 801dd82:	4653      	mov	r3, sl
 801dd84:	46e0      	mov	r8, ip
 801dd86:	e7dc      	b.n	801dd42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801dd88:	2204      	movs	r2, #4
 801dd8a:	4615      	mov	r5, r2
 801dd8c:	9905      	ldr	r1, [sp, #20]
 801dd8e:	9a01      	ldr	r2, [sp, #4]
 801dd90:	fb15 1202 	smlabb	r2, r5, r2, r1
 801dd94:	9903      	ldr	r1, [sp, #12]
 801dd96:	588a      	ldr	r2, [r1, r2]
 801dd98:	4543      	cmp	r3, r8
 801dd9a:	bf27      	ittee	cs
 801dd9c:	eba3 0a08 	subcs.w	sl, r3, r8
 801dda0:	46c6      	movcs	lr, r8
 801dda2:	eba8 0c03 	subcc.w	ip, r8, r3
 801dda6:	469e      	movcc	lr, r3
 801dda8:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801ddac:	bf27      	ittee	cs
 801ddae:	fa1f fa8a 	uxthcs.w	sl, sl
 801ddb2:	46a4      	movcs	ip, r4
 801ddb4:	fa1f fc8c 	uxthcc.w	ip, ip
 801ddb8:	46a2      	movcc	sl, r4
 801ddba:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801ddbe:	2900      	cmp	r1, #0
 801ddc0:	d066      	beq.n	801de90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801ddc2:	29ff      	cmp	r1, #255	@ 0xff
 801ddc4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ddc8:	d114      	bne.n	801ddf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801ddca:	9d02      	ldr	r5, [sp, #8]
 801ddcc:	2dff      	cmp	r5, #255	@ 0xff
 801ddce:	d111      	bne.n	801ddf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801ddd0:	0951      	lsrs	r1, r2, #5
 801ddd2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801ddd6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ddda:	f026 0607 	bic.w	r6, r6, #7
 801ddde:	430e      	orrs	r6, r1
 801dde0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dde4:	4316      	orrs	r6, r2
 801dde6:	b2b6      	uxth	r6, r6
 801dde8:	4486      	add	lr, r0
 801ddea:	4586      	cmp	lr, r0
 801ddec:	d051      	beq.n	801de92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ddee:	f820 6b02 	strh.w	r6, [r0], #2
 801ddf2:	e7fa      	b.n	801ddea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801ddf4:	9d02      	ldr	r5, [sp, #8]
 801ddf6:	4369      	muls	r1, r5
 801ddf8:	1c4d      	adds	r5, r1, #1
 801ddfa:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801ddfe:	122d      	asrs	r5, r5, #8
 801de00:	ea6f 0b05 	mvn.w	fp, r5
 801de04:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801de08:	b2ad      	uxth	r5, r5
 801de0a:	b2f6      	uxtb	r6, r6
 801de0c:	b2d2      	uxtb	r2, r2
 801de0e:	fb11 f105 	smulbb	r1, r1, r5
 801de12:	fb16 f605 	smulbb	r6, r6, r5
 801de16:	fb12 f205 	smulbb	r2, r2, r5
 801de1a:	b289      	uxth	r1, r1
 801de1c:	b2b6      	uxth	r6, r6
 801de1e:	b292      	uxth	r2, r2
 801de20:	9106      	str	r1, [sp, #24]
 801de22:	9607      	str	r6, [sp, #28]
 801de24:	9208      	str	r2, [sp, #32]
 801de26:	4486      	add	lr, r0
 801de28:	fa5f fb8b 	uxtb.w	fp, fp
 801de2c:	4586      	cmp	lr, r0
 801de2e:	d030      	beq.n	801de92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801de30:	8802      	ldrh	r2, [r0, #0]
 801de32:	9906      	ldr	r1, [sp, #24]
 801de34:	1216      	asrs	r6, r2, #8
 801de36:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801de3a:	10d5      	asrs	r5, r2, #3
 801de3c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801de40:	fb06 160b 	mla	r6, r6, fp, r1
 801de44:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801de48:	9907      	ldr	r1, [sp, #28]
 801de4a:	00d2      	lsls	r2, r2, #3
 801de4c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801de50:	fb05 150b 	mla	r5, r5, fp, r1
 801de54:	b2d2      	uxtb	r2, r2
 801de56:	9908      	ldr	r1, [sp, #32]
 801de58:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801de5c:	b2b6      	uxth	r6, r6
 801de5e:	fb02 120b 	mla	r2, r2, fp, r1
 801de62:	b292      	uxth	r2, r2
 801de64:	1c71      	adds	r1, r6, #1
 801de66:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801de6a:	1c51      	adds	r1, r2, #1
 801de6c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801de70:	b2ad      	uxth	r5, r5
 801de72:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801de76:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801de7a:	4316      	orrs	r6, r2
 801de7c:	1c6a      	adds	r2, r5, #1
 801de7e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801de82:	096d      	lsrs	r5, r5, #5
 801de84:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801de88:	432e      	orrs	r6, r5
 801de8a:	f820 6b02 	strh.w	r6, [r0], #2
 801de8e:	e7cd      	b.n	801de2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801de90:	4470      	add	r0, lr
 801de92:	4543      	cmp	r3, r8
 801de94:	f4ff af75 	bcc.w	801dd82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801de98:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801de9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801de9e:	fa1f fc89 	uxth.w	ip, r9
 801dea2:	eba4 040c 	sub.w	r4, r4, ip
 801dea6:	881b      	ldrh	r3, [r3, #0]
 801dea8:	b2a4      	uxth	r4, r4
 801deaa:	2c00      	cmp	r4, #0
 801deac:	eba3 0309 	sub.w	r3, r3, r9
 801deb0:	bf18      	it	ne
 801deb2:	f04f 0c00 	movne.w	ip, #0
 801deb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801deba:	e762      	b.n	801dd82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801debc:	4b03      	ldr	r3, [pc, #12]	@ (801decc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801debe:	6818      	ldr	r0, [r3, #0]
 801dec0:	6803      	ldr	r3, [r0, #0]
 801dec2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801dec4:	4798      	blx	r3
 801dec6:	b00f      	add	sp, #60	@ 0x3c
 801dec8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801decc:	20013f60 	.word	0x20013f60
 801ded0:	20013f5a 	.word	0x20013f5a

0801ded4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ded4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ded8:	b093      	sub	sp, #76	@ 0x4c
 801deda:	461c      	mov	r4, r3
 801dedc:	9205      	str	r2, [sp, #20]
 801dede:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801dee2:	9101      	str	r1, [sp, #4]
 801dee4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dee6:	9202      	str	r2, [sp, #8]
 801dee8:	2a00      	cmp	r2, #0
 801deea:	f000 812c 	beq.w	801e146 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801deee:	6820      	ldr	r0, [r4, #0]
 801def0:	6861      	ldr	r1, [r4, #4]
 801def2:	aa0e      	add	r2, sp, #56	@ 0x38
 801def4:	c203      	stmia	r2!, {r0, r1}
 801def6:	6818      	ldr	r0, [r3, #0]
 801def8:	6859      	ldr	r1, [r3, #4]
 801defa:	aa10      	add	r2, sp, #64	@ 0x40
 801defc:	c203      	stmia	r2!, {r0, r1}
 801defe:	a80e      	add	r0, sp, #56	@ 0x38
 801df00:	f7f7 ffe8 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801df04:	4621      	mov	r1, r4
 801df06:	a810      	add	r0, sp, #64	@ 0x40
 801df08:	f7f8 f80c 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801df0c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801df10:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801df14:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801df18:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801df1c:	bfde      	ittt	le
 801df1e:	b2b3      	uxthle	r3, r6
 801df20:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801df24:	fb92 f3f3 	sdivle	r3, r2, r3
 801df28:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801df2c:	bfc8      	it	gt
 801df2e:	2301      	movgt	r3, #1
 801df30:	fb92 f1f3 	sdiv	r1, r2, r3
 801df34:	fa1f fc81 	uxth.w	ip, r1
 801df38:	fb0c 2413 	mls	r4, ip, r3, r2
 801df3c:	fb14 f406 	smulbb	r4, r4, r6
 801df40:	441d      	add	r5, r3
 801df42:	4404      	add	r4, r0
 801df44:	4661      	mov	r1, ip
 801df46:	3d01      	subs	r5, #1
 801df48:	b2a4      	uxth	r4, r4
 801df4a:	fb95 f5f3 	sdiv	r5, r5, r3
 801df4e:	b131      	cbz	r1, 801df5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801df50:	9b05      	ldr	r3, [sp, #20]
 801df52:	9901      	ldr	r1, [sp, #4]
 801df54:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801df58:	ba1b      	rev	r3, r3
 801df5a:	4419      	add	r1, r3
 801df5c:	9101      	str	r1, [sp, #4]
 801df5e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801df62:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801df66:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801df6a:	4418      	add	r0, r3
 801df6c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801df70:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801df74:	441a      	add	r2, r3
 801df76:	4b75      	ldr	r3, [pc, #468]	@ (801e14c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801df78:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801df7c:	6818      	ldr	r0, [r3, #0]
 801df7e:	6803      	ldr	r3, [r0, #0]
 801df80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801df82:	4798      	blx	r3
 801df84:	4972      	ldr	r1, [pc, #456]	@ (801e150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801df86:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801df8a:	880b      	ldrh	r3, [r1, #0]
 801df8c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801df90:	910d      	str	r1, [sp, #52]	@ 0x34
 801df92:	fb03 c202 	mla	r2, r3, r2, ip
 801df96:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801df9a:	4373      	muls	r3, r6
 801df9c:	b2ad      	uxth	r5, r5
 801df9e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dfa2:	00ad      	lsls	r5, r5, #2
 801dfa4:	9308      	str	r3, [sp, #32]
 801dfa6:	1d2b      	adds	r3, r5, #4
 801dfa8:	9309      	str	r3, [sp, #36]	@ 0x24
 801dfaa:	9b02      	ldr	r3, [sp, #8]
 801dfac:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dfb0:	9106      	str	r1, [sp, #24]
 801dfb2:	43da      	mvns	r2, r3
 801dfb4:	2c00      	cmp	r4, #0
 801dfb6:	bf0c      	ite	eq
 801dfb8:	46dc      	moveq	ip, fp
 801dfba:	f04f 0c00 	movne.w	ip, #0
 801dfbe:	2300      	movs	r3, #0
 801dfc0:	b2d2      	uxtb	r2, r2
 801dfc2:	fa1f fc8c 	uxth.w	ip, ip
 801dfc6:	9303      	str	r3, [sp, #12]
 801dfc8:	9207      	str	r2, [sp, #28]
 801dfca:	9a08      	ldr	r2, [sp, #32]
 801dfcc:	4282      	cmp	r2, r0
 801dfce:	f240 80b5 	bls.w	801e13c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801dfd2:	b963      	cbnz	r3, 801dfee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801dfd4:	9b01      	ldr	r3, [sp, #4]
 801dfd6:	781a      	ldrb	r2, [r3, #0]
 801dfd8:	0993      	lsrs	r3, r2, #6
 801dfda:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801dfde:	9203      	str	r2, [sp, #12]
 801dfe0:	1e5a      	subs	r2, r3, #1
 801dfe2:	2a02      	cmp	r2, #2
 801dfe4:	d815      	bhi.n	801e012 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801dfe6:	9a01      	ldr	r2, [sp, #4]
 801dfe8:	3201      	adds	r2, #1
 801dfea:	9201      	str	r2, [sp, #4]
 801dfec:	b29b      	uxth	r3, r3
 801dfee:	b1b4      	cbz	r4, 801e01e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801dff0:	429c      	cmp	r4, r3
 801dff2:	bf95      	itete	ls
 801dff4:	1b1c      	subls	r4, r3, r4
 801dff6:	1ae4      	subhi	r4, r4, r3
 801dff8:	fa1f f884 	uxthls.w	r8, r4
 801dffc:	b2a4      	uxthhi	r4, r4
 801dffe:	bf87      	ittee	hi
 801e000:	4666      	movhi	r6, ip
 801e002:	f04f 0800 	movhi.w	r8, #0
 801e006:	fa1f f68b 	uxthls.w	r6, fp
 801e00a:	2400      	movls	r4, #0
 801e00c:	4643      	mov	r3, r8
 801e00e:	46b4      	mov	ip, r6
 801e010:	e7db      	b.n	801dfca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801e012:	9a01      	ldr	r2, [sp, #4]
 801e014:	9b01      	ldr	r3, [sp, #4]
 801e016:	3202      	adds	r2, #2
 801e018:	785b      	ldrb	r3, [r3, #1]
 801e01a:	9201      	str	r2, [sp, #4]
 801e01c:	e7e7      	b.n	801dfee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801e01e:	2203      	movs	r2, #3
 801e020:	4615      	mov	r5, r2
 801e022:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801e024:	9a03      	ldr	r2, [sp, #12]
 801e026:	fb15 1202 	smlabb	r2, r5, r2, r1
 801e02a:	9905      	ldr	r1, [sp, #20]
 801e02c:	4563      	cmp	r3, ip
 801e02e:	eb01 0502 	add.w	r5, r1, r2
 801e032:	9902      	ldr	r1, [sp, #8]
 801e034:	bf29      	itett	cs
 801e036:	eba3 080c 	subcs.w	r8, r3, ip
 801e03a:	ebac 0603 	subcc.w	r6, ip, r3
 801e03e:	fa1f f888 	uxthcs.w	r8, r8
 801e042:	46e1      	movcs	r9, ip
 801e044:	bf2f      	iteee	cs
 801e046:	4626      	movcs	r6, r4
 801e048:	b2b6      	uxthcc	r6, r6
 801e04a:	4699      	movcc	r9, r3
 801e04c:	46a0      	movcc	r8, r4
 801e04e:	29ff      	cmp	r1, #255	@ 0xff
 801e050:	d04a      	beq.n	801e0e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801e052:	9f06      	ldr	r7, [sp, #24]
 801e054:	78a9      	ldrb	r1, [r5, #2]
 801e056:	9004      	str	r0, [sp, #16]
 801e058:	4379      	muls	r1, r7
 801e05a:	910a      	str	r1, [sp, #40]	@ 0x28
 801e05c:	7869      	ldrb	r1, [r5, #1]
 801e05e:	4379      	muls	r1, r7
 801e060:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e062:	9905      	ldr	r1, [sp, #20]
 801e064:	5c8a      	ldrb	r2, [r1, r2]
 801e066:	437a      	muls	r2, r7
 801e068:	920c      	str	r2, [sp, #48]	@ 0x30
 801e06a:	46ca      	mov	sl, r9
 801e06c:	f1ba 0f00 	cmp.w	sl, #0
 801e070:	d03d      	beq.n	801e0ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801e072:	9a04      	ldr	r2, [sp, #16]
 801e074:	9f07      	ldr	r7, [sp, #28]
 801e076:	8812      	ldrh	r2, [r2, #0]
 801e078:	1215      	asrs	r5, r2, #8
 801e07a:	46be      	mov	lr, r7
 801e07c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e080:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801e082:	10d1      	asrs	r1, r2, #3
 801e084:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e088:	fb05 750e 	mla	r5, r5, lr, r7
 801e08c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e090:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801e092:	00d2      	lsls	r2, r2, #3
 801e094:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e098:	fb01 710e 	mla	r1, r1, lr, r7
 801e09c:	b2d2      	uxtb	r2, r2
 801e09e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801e0a0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e0a4:	b2ad      	uxth	r5, r5
 801e0a6:	fb02 720e 	mla	r2, r2, lr, r7
 801e0aa:	b292      	uxth	r2, r2
 801e0ac:	f105 0e01 	add.w	lr, r5, #1
 801e0b0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e0b4:	f102 0e01 	add.w	lr, r2, #1
 801e0b8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801e0bc:	b289      	uxth	r1, r1
 801e0be:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e0c2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e0c6:	4315      	orrs	r5, r2
 801e0c8:	1c4a      	adds	r2, r1, #1
 801e0ca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e0ce:	0949      	lsrs	r1, r1, #5
 801e0d0:	9a04      	ldr	r2, [sp, #16]
 801e0d2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e0d6:	430d      	orrs	r5, r1
 801e0d8:	f822 5b02 	strh.w	r5, [r2], #2
 801e0dc:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e0e0:	9204      	str	r2, [sp, #16]
 801e0e2:	fa1f fa8a 	uxth.w	sl, sl
 801e0e6:	e7c1      	b.n	801e06c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801e0e8:	4649      	mov	r1, r9
 801e0ea:	4686      	mov	lr, r0
 801e0ec:	b999      	cbnz	r1, 801e116 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801e0ee:	4563      	cmp	r3, ip
 801e0f0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801e0f4:	d38a      	bcc.n	801e00c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801e0f6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801e0fa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e0fc:	fa1f f68b 	uxth.w	r6, fp
 801e100:	1ba4      	subs	r4, r4, r6
 801e102:	881b      	ldrh	r3, [r3, #0]
 801e104:	b2a4      	uxth	r4, r4
 801e106:	2c00      	cmp	r4, #0
 801e108:	eba3 030b 	sub.w	r3, r3, fp
 801e10c:	bf18      	it	ne
 801e10e:	2600      	movne	r6, #0
 801e110:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e114:	e77a      	b.n	801e00c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801e116:	78aa      	ldrb	r2, [r5, #2]
 801e118:	4f0e      	ldr	r7, [pc, #56]	@ (801e154 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801e11a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801e11e:	786a      	ldrb	r2, [r5, #1]
 801e120:	00d2      	lsls	r2, r2, #3
 801e122:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e126:	ea4a 0202 	orr.w	r2, sl, r2
 801e12a:	f895 a000 	ldrb.w	sl, [r5]
 801e12e:	3901      	subs	r1, #1
 801e130:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801e134:	f82e 2b02 	strh.w	r2, [lr], #2
 801e138:	b289      	uxth	r1, r1
 801e13a:	e7d7      	b.n	801e0ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801e13c:	4b03      	ldr	r3, [pc, #12]	@ (801e14c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801e13e:	6818      	ldr	r0, [r3, #0]
 801e140:	6803      	ldr	r3, [r0, #0]
 801e142:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e144:	4798      	blx	r3
 801e146:	b013      	add	sp, #76	@ 0x4c
 801e148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e14c:	20013f60 	.word	0x20013f60
 801e150:	20013f5a 	.word	0x20013f5a
 801e154:	fffff800 	.word	0xfffff800

0801e158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801e158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e15c:	b09d      	sub	sp, #116	@ 0x74
 801e15e:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801e162:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801e166:	920e      	str	r2, [sp, #56]	@ 0x38
 801e168:	461c      	mov	r4, r3
 801e16a:	4683      	mov	fp, r0
 801e16c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e16e:	2a00      	cmp	r2, #0
 801e170:	f000 81e0 	beq.w	801e534 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801e174:	6820      	ldr	r0, [r4, #0]
 801e176:	6861      	ldr	r1, [r4, #4]
 801e178:	aa18      	add	r2, sp, #96	@ 0x60
 801e17a:	c203      	stmia	r2!, {r0, r1}
 801e17c:	6818      	ldr	r0, [r3, #0]
 801e17e:	6859      	ldr	r1, [r3, #4]
 801e180:	aa1a      	add	r2, sp, #104	@ 0x68
 801e182:	c203      	stmia	r2!, {r0, r1}
 801e184:	a818      	add	r0, sp, #96	@ 0x60
 801e186:	f7f7 fea5 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e18a:	4621      	mov	r1, r4
 801e18c:	a81a      	add	r0, sp, #104	@ 0x68
 801e18e:	f7f7 fec9 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e192:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801e196:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801e19a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801e19e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801e1a2:	bfd7      	itett	le
 801e1a4:	b29a      	uxthle	r2, r3
 801e1a6:	2201      	movgt	r2, #1
 801e1a8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801e1ac:	fb91 f2f2 	sdivle	r2, r1, r2
 801e1b0:	9202      	str	r2, [sp, #8]
 801e1b2:	9802      	ldr	r0, [sp, #8]
 801e1b4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801e1b8:	fb92 f0f0 	sdiv	r0, r2, r0
 801e1bc:	b280      	uxth	r0, r0
 801e1be:	900f      	str	r0, [sp, #60]	@ 0x3c
 801e1c0:	9902      	ldr	r1, [sp, #8]
 801e1c2:	9802      	ldr	r0, [sp, #8]
 801e1c4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e1c6:	440c      	add	r4, r1
 801e1c8:	fb05 2510 	mls	r5, r5, r0, r2
 801e1cc:	fb15 f503 	smulbb	r5, r5, r3
 801e1d0:	3c01      	subs	r4, #1
 801e1d2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801e1d6:	fb94 f4f1 	sdiv	r4, r4, r1
 801e1da:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801e1de:	440d      	add	r5, r1
 801e1e0:	4419      	add	r1, r3
 801e1e2:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801e1e6:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801e1ea:	441a      	add	r2, r3
 801e1ec:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801e1f0:	9306      	str	r3, [sp, #24]
 801e1f2:	4bb3      	ldr	r3, [pc, #716]	@ (801e4c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801e1f4:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801e1f8:	6818      	ldr	r0, [r3, #0]
 801e1fa:	6803      	ldr	r3, [r0, #0]
 801e1fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e1fe:	4798      	blx	r3
 801e200:	4bb0      	ldr	r3, [pc, #704]	@ (801e4c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801e202:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801e206:	881a      	ldrh	r2, [r3, #0]
 801e208:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801e20c:	9316      	str	r3, [sp, #88]	@ 0x58
 801e20e:	fb02 7101 	mla	r1, r2, r1, r7
 801e212:	3401      	adds	r4, #1
 801e214:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801e218:	b2a4      	uxth	r4, r4
 801e21a:	4356      	muls	r6, r2
 801e21c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801e220:	00a4      	lsls	r4, r4, #2
 801e222:	920a      	str	r2, [sp, #40]	@ 0x28
 801e224:	1d22      	adds	r2, r4, #4
 801e226:	b2ad      	uxth	r5, r5
 801e228:	9213      	str	r2, [sp, #76]	@ 0x4c
 801e22a:	4ba7      	ldr	r3, [pc, #668]	@ (801e4c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801e22c:	9a06      	ldr	r2, [sp, #24]
 801e22e:	2d00      	cmp	r5, #0
 801e230:	bf0c      	ite	eq
 801e232:	4611      	moveq	r1, r2
 801e234:	2100      	movne	r1, #0
 801e236:	2200      	movs	r2, #0
 801e238:	eba3 030b 	sub.w	r3, r3, fp
 801e23c:	b289      	uxth	r1, r1
 801e23e:	920d      	str	r2, [sp, #52]	@ 0x34
 801e240:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e242:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e244:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e246:	fa12 f383 	uxtah	r3, r2, r3
 801e24a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801e24c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801e250:	3304      	adds	r3, #4
 801e252:	9308      	str	r3, [sp, #32]
 801e254:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e256:	4543      	cmp	r3, r8
 801e258:	f240 8167 	bls.w	801e52a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801e25c:	9a02      	ldr	r2, [sp, #8]
 801e25e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801e262:	fbb5 f3f3 	udiv	r3, r5, r3
 801e266:	1ad3      	subs	r3, r2, r3
 801e268:	b29b      	uxth	r3, r3
 801e26a:	9314      	str	r3, [sp, #80]	@ 0x50
 801e26c:	9b08      	ldr	r3, [sp, #32]
 801e26e:	9808      	ldr	r0, [sp, #32]
 801e270:	785a      	ldrb	r2, [r3, #1]
 801e272:	789b      	ldrb	r3, [r3, #2]
 801e274:	7800      	ldrb	r0, [r0, #0]
 801e276:	9010      	str	r0, [sp, #64]	@ 0x40
 801e278:	021b      	lsls	r3, r3, #8
 801e27a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e27e:	9a08      	ldr	r2, [sp, #32]
 801e280:	78d2      	ldrb	r2, [r2, #3]
 801e282:	4313      	orrs	r3, r2
 801e284:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801e286:	3001      	adds	r0, #1
 801e288:	441a      	add	r2, r3
 801e28a:	9007      	str	r0, [sp, #28]
 801e28c:	1c50      	adds	r0, r2, #1
 801e28e:	9005      	str	r0, [sp, #20]
 801e290:	7852      	ldrb	r2, [r2, #1]
 801e292:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e294:	0212      	lsls	r2, r2, #8
 801e296:	5cc3      	ldrb	r3, [r0, r3]
 801e298:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801e29c:	431a      	orrs	r2, r3
 801e29e:	b293      	uxth	r3, r2
 801e2a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e2a2:	2300      	movs	r3, #0
 801e2a4:	9309      	str	r3, [sp, #36]	@ 0x24
 801e2a6:	2301      	movs	r3, #1
 801e2a8:	9301      	str	r3, [sp, #4]
 801e2aa:	9304      	str	r3, [sp, #16]
 801e2ac:	2300      	movs	r3, #0
 801e2ae:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801e2b2:	9303      	str	r3, [sp, #12]
 801e2b4:	f04f 0e01 	mov.w	lr, #1
 801e2b8:	2d00      	cmp	r5, #0
 801e2ba:	d07c      	beq.n	801e3b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801e2bc:	45ae      	cmp	lr, r5
 801e2be:	d26b      	bcs.n	801e398 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801e2c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e2c2:	eba5 050e 	sub.w	r5, r5, lr
 801e2c6:	4543      	cmp	r3, r8
 801e2c8:	b2ad      	uxth	r5, r5
 801e2ca:	460c      	mov	r4, r1
 801e2cc:	d802      	bhi.n	801e2d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801e2ce:	e070      	b.n	801e3b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801e2d0:	2b00      	cmp	r3, #0
 801e2d2:	d15c      	bne.n	801e38e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801e2d4:	9b05      	ldr	r3, [sp, #20]
 801e2d6:	9a04      	ldr	r2, [sp, #16]
 801e2d8:	785b      	ldrb	r3, [r3, #1]
 801e2da:	9904      	ldr	r1, [sp, #16]
 801e2dc:	f1c2 0207 	rsb	r2, r2, #7
 801e2e0:	4093      	lsls	r3, r2
 801e2e2:	005b      	lsls	r3, r3, #1
 801e2e4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801e2e8:	9b05      	ldr	r3, [sp, #20]
 801e2ea:	781b      	ldrb	r3, [r3, #0]
 801e2ec:	410b      	asrs	r3, r1
 801e2ee:	3101      	adds	r1, #1
 801e2f0:	b2c9      	uxtb	r1, r1
 801e2f2:	2908      	cmp	r1, #8
 801e2f4:	9104      	str	r1, [sp, #16]
 801e2f6:	9905      	ldr	r1, [sp, #20]
 801e2f8:	bf0a      	itet	eq
 801e2fa:	3102      	addeq	r1, #2
 801e2fc:	3101      	addne	r1, #1
 801e2fe:	9105      	streq	r1, [sp, #20]
 801e300:	b2db      	uxtb	r3, r3
 801e302:	bf0a      	itet	eq
 801e304:	2100      	moveq	r1, #0
 801e306:	9105      	strne	r1, [sp, #20]
 801e308:	9104      	streq	r1, [sp, #16]
 801e30a:	4313      	orrs	r3, r2
 801e30c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801e30e:	b29a      	uxth	r2, r3
 801e310:	4291      	cmp	r1, r2
 801e312:	d30a      	bcc.n	801e32a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801e314:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801e318:	2301      	movs	r3, #1
 801e31a:	9907      	ldr	r1, [sp, #28]
 801e31c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801e320:	d30f      	bcc.n	801e342 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801e322:	2100      	movs	r1, #0
 801e324:	9301      	str	r3, [sp, #4]
 801e326:	9103      	str	r1, [sp, #12]
 801e328:	e032      	b.n	801e390 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801e32a:	9b07      	ldr	r3, [sp, #28]
 801e32c:	429a      	cmp	r2, r3
 801e32e:	d318      	bcc.n	801e362 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801e330:	9b01      	ldr	r3, [sp, #4]
 801e332:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801e336:	445b      	add	r3, fp
 801e338:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801e33c:	9b01      	ldr	r3, [sp, #4]
 801e33e:	3301      	adds	r3, #1
 801e340:	b29b      	uxth	r3, r3
 801e342:	9907      	ldr	r1, [sp, #28]
 801e344:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801e348:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e34c:	7108      	strb	r0, [r1, #4]
 801e34e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801e350:	80c8      	strh	r0, [r1, #6]
 801e352:	9801      	ldr	r0, [sp, #4]
 801e354:	3001      	adds	r0, #1
 801e356:	7148      	strb	r0, [r1, #5]
 801e358:	9907      	ldr	r1, [sp, #28]
 801e35a:	3101      	adds	r1, #1
 801e35c:	b289      	uxth	r1, r1
 801e35e:	9107      	str	r1, [sp, #28]
 801e360:	e7df      	b.n	801e322 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801e362:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801e366:	4611      	mov	r1, r2
 801e368:	795b      	ldrb	r3, [r3, #5]
 801e36a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801e36e:	4458      	add	r0, fp
 801e370:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801e372:	4406      	add	r6, r0
 801e374:	2e00      	cmp	r6, #0
 801e376:	dd06      	ble.n	801e386 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801e378:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e37c:	790e      	ldrb	r6, [r1, #4]
 801e37e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801e382:	88c9      	ldrh	r1, [r1, #6]
 801e384:	e7f4      	b.n	801e370 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801e386:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801e38a:	b29b      	uxth	r3, r3
 801e38c:	e7c5      	b.n	801e31a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801e38e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e390:	920b      	str	r2, [sp, #44]	@ 0x2c
 801e392:	4621      	mov	r1, r4
 801e394:	469e      	mov	lr, r3
 801e396:	e78f      	b.n	801e2b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801e398:	9a03      	ldr	r2, [sp, #12]
 801e39a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e39e:	442a      	add	r2, r5
 801e3a0:	ebae 0305 	sub.w	r3, lr, r5
 801e3a4:	b292      	uxth	r2, r2
 801e3a6:	b29b      	uxth	r3, r3
 801e3a8:	9203      	str	r2, [sp, #12]
 801e3aa:	2500      	movs	r5, #0
 801e3ac:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e3ae:	4542      	cmp	r2, r8
 801e3b0:	d88e      	bhi.n	801e2d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801e3b2:	4621      	mov	r1, r4
 801e3b4:	e74e      	b.n	801e254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801e3b6:	458e      	cmp	lr, r1
 801e3b8:	bf29      	itett	cs
 801e3ba:	ebae 0301 	subcs.w	r3, lr, r1
 801e3be:	eba1 040e 	subcc.w	r4, r1, lr
 801e3c2:	b29b      	uxthcs	r3, r3
 801e3c4:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801e3c6:	bf2f      	iteee	cs
 801e3c8:	462c      	movcs	r4, r5
 801e3ca:	b2a4      	uxthcc	r4, r4
 801e3cc:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801e3d0:	462b      	movcc	r3, r5
 801e3d2:	f04f 0900 	mov.w	r9, #0
 801e3d6:	9a03      	ldr	r2, [sp, #12]
 801e3d8:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801e3da:	444a      	add	r2, r9
 801e3dc:	4548      	cmp	r0, r9
 801e3de:	b292      	uxth	r2, r2
 801e3e0:	d074      	beq.n	801e4cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801e3e2:	445a      	add	r2, fp
 801e3e4:	2004      	movs	r0, #4
 801e3e6:	4605      	mov	r5, r0
 801e3e8:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801e3ec:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e3ee:	fb15 0202 	smlabb	r2, r5, r2, r0
 801e3f2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801e3f4:	5880      	ldr	r0, [r0, r2]
 801e3f6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801e3fa:	d014      	beq.n	801e426 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e3fc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801e400:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801e404:	d112      	bne.n	801e42c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e406:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801e408:	2aff      	cmp	r2, #255	@ 0xff
 801e40a:	d10f      	bne.n	801e42c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e40c:	0942      	lsrs	r2, r0, #5
 801e40e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801e412:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e416:	f025 0507 	bic.w	r5, r5, #7
 801e41a:	4315      	orrs	r5, r2
 801e41c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e420:	4305      	orrs	r5, r0
 801e422:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801e426:	f109 0901 	add.w	r9, r9, #1
 801e42a:	e7d4      	b.n	801e3d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801e42c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801e430:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e434:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801e438:	9215      	str	r2, [sp, #84]	@ 0x54
 801e43a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801e43c:	fb02 fa0a 	mul.w	sl, r2, sl
 801e440:	f10a 0201 	add.w	r2, sl, #1
 801e444:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801e448:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e44c:	1212      	asrs	r2, r2, #8
 801e44e:	fa1f fa82 	uxth.w	sl, r2
 801e452:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801e456:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801e45a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e45e:	43d2      	mvns	r2, r2
 801e460:	b2d2      	uxtb	r2, r2
 801e462:	fb16 f60a 	smulbb	r6, r6, sl
 801e466:	fa5f fc8c 	uxtb.w	ip, ip
 801e46a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e46e:	b2c0      	uxtb	r0, r0
 801e470:	fb07 6702 	mla	r7, r7, r2, r6
 801e474:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801e478:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801e47a:	fb10 f00a 	smulbb	r0, r0, sl
 801e47e:	fb0c 0002 	mla	r0, ip, r2, r0
 801e482:	b2ed      	uxtb	r5, r5
 801e484:	b2bf      	uxth	r7, r7
 801e486:	fb15 f50a 	smulbb	r5, r5, sl
 801e48a:	b280      	uxth	r0, r0
 801e48c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e490:	fb06 5602 	mla	r6, r6, r2, r5
 801e494:	1c7a      	adds	r2, r7, #1
 801e496:	1c45      	adds	r5, r0, #1
 801e498:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e49c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e4a0:	b2b6      	uxth	r6, r6
 801e4a2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e4a6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801e4aa:	432f      	orrs	r7, r5
 801e4ac:	1c75      	adds	r5, r6, #1
 801e4ae:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e4b2:	096d      	lsrs	r5, r5, #5
 801e4b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e4b8:	432f      	orrs	r7, r5
 801e4ba:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801e4be:	e7b2      	b.n	801e426 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e4c0:	20013f60 	.word	0x20013f60
 801e4c4:	20013f5a 	.word	0x20013f5a
 801e4c8:	fffff7fb 	.word	0xfffff7fb
 801e4cc:	9203      	str	r2, [sp, #12]
 801e4ce:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e4d0:	458e      	cmp	lr, r1
 801e4d2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e4d6:	f4ff af68 	bcc.w	801e3aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801e4da:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801e4dc:	9906      	ldr	r1, [sp, #24]
 801e4de:	8812      	ldrh	r2, [r2, #0]
 801e4e0:	1a52      	subs	r2, r2, r1
 801e4e2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e4e6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e4e8:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801e4ea:	3201      	adds	r2, #1
 801e4ec:	428a      	cmp	r2, r1
 801e4ee:	9209      	str	r2, [sp, #36]	@ 0x24
 801e4f0:	d111      	bne.n	801e516 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801e4f2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801e4f6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801e4fa:	9b06      	ldr	r3, [sp, #24]
 801e4fc:	eba5 0509 	sub.w	r5, r5, r9
 801e500:	b2ad      	uxth	r5, r5
 801e502:	2d00      	cmp	r5, #0
 801e504:	bf08      	it	eq
 801e506:	4619      	moveq	r1, r3
 801e508:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e50a:	bf18      	it	ne
 801e50c:	2100      	movne	r1, #0
 801e50e:	3301      	adds	r3, #1
 801e510:	930d      	str	r3, [sp, #52]	@ 0x34
 801e512:	b289      	uxth	r1, r1
 801e514:	e695      	b.n	801e242 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801e516:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e51a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801e51e:	1b2d      	subs	r5, r5, r4
 801e520:	b2ad      	uxth	r5, r5
 801e522:	2d00      	cmp	r5, #0
 801e524:	bf18      	it	ne
 801e526:	2400      	movne	r4, #0
 801e528:	e740      	b.n	801e3ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801e52a:	4b04      	ldr	r3, [pc, #16]	@ (801e53c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801e52c:	6818      	ldr	r0, [r3, #0]
 801e52e:	6803      	ldr	r3, [r0, #0]
 801e530:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e532:	4798      	blx	r3
 801e534:	b01d      	add	sp, #116	@ 0x74
 801e536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e53a:	bf00      	nop
 801e53c:	20013f60 	.word	0x20013f60

0801e540 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e544:	b09f      	sub	sp, #124	@ 0x7c
 801e546:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801e54a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801e54e:	920a      	str	r2, [sp, #40]	@ 0x28
 801e550:	461d      	mov	r5, r3
 801e552:	4604      	mov	r4, r0
 801e554:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e556:	2a00      	cmp	r2, #0
 801e558:	f000 81fa 	beq.w	801e950 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801e55c:	6828      	ldr	r0, [r5, #0]
 801e55e:	6869      	ldr	r1, [r5, #4]
 801e560:	aa1a      	add	r2, sp, #104	@ 0x68
 801e562:	c203      	stmia	r2!, {r0, r1}
 801e564:	6818      	ldr	r0, [r3, #0]
 801e566:	6859      	ldr	r1, [r3, #4]
 801e568:	aa1c      	add	r2, sp, #112	@ 0x70
 801e56a:	c203      	stmia	r2!, {r0, r1}
 801e56c:	a81a      	add	r0, sp, #104	@ 0x68
 801e56e:	f7f7 fcb1 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e572:	4629      	mov	r1, r5
 801e574:	a81c      	add	r0, sp, #112	@ 0x70
 801e576:	f7f7 fcd5 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e57a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801e57e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801e582:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801e586:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801e58a:	bfd7      	itett	le
 801e58c:	b29a      	uxthle	r2, r3
 801e58e:	2201      	movgt	r2, #1
 801e590:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801e594:	fb91 f2f2 	sdivle	r2, r1, r2
 801e598:	9201      	str	r2, [sp, #4]
 801e59a:	9801      	ldr	r0, [sp, #4]
 801e59c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801e5a0:	fb92 f0f0 	sdiv	r0, r2, r0
 801e5a4:	b280      	uxth	r0, r0
 801e5a6:	9010      	str	r0, [sp, #64]	@ 0x40
 801e5a8:	9901      	ldr	r1, [sp, #4]
 801e5aa:	9801      	ldr	r0, [sp, #4]
 801e5ac:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e5ae:	440e      	add	r6, r1
 801e5b0:	fb05 2510 	mls	r5, r5, r0, r2
 801e5b4:	fb15 f503 	smulbb	r5, r5, r3
 801e5b8:	3e01      	subs	r6, #1
 801e5ba:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801e5be:	fb96 f6f1 	sdiv	r6, r6, r1
 801e5c2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801e5c6:	440d      	add	r5, r1
 801e5c8:	4419      	add	r1, r3
 801e5ca:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801e5ce:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801e5d2:	441a      	add	r2, r3
 801e5d4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801e5d8:	9304      	str	r3, [sp, #16]
 801e5da:	4b96      	ldr	r3, [pc, #600]	@ (801e834 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801e5dc:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801e5e0:	6818      	ldr	r0, [r3, #0]
 801e5e2:	6803      	ldr	r3, [r0, #0]
 801e5e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e5e6:	4798      	blx	r3
 801e5e8:	4b93      	ldr	r3, [pc, #588]	@ (801e838 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801e5ea:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801e5ee:	881a      	ldrh	r2, [r3, #0]
 801e5f0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801e5f4:	9318      	str	r3, [sp, #96]	@ 0x60
 801e5f6:	fb02 c101 	mla	r1, r2, r1, ip
 801e5fa:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801e5fe:	4357      	muls	r7, r2
 801e600:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801e604:	3601      	adds	r6, #1
 801e606:	920b      	str	r2, [sp, #44]	@ 0x2c
 801e608:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801e60a:	4b8c      	ldr	r3, [pc, #560]	@ (801e83c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801e60c:	b2b6      	uxth	r6, r6
 801e60e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801e612:	1d32      	adds	r2, r6, #4
 801e614:	9206      	str	r2, [sp, #24]
 801e616:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e618:	43d2      	mvns	r2, r2
 801e61a:	b2d2      	uxtb	r2, r2
 801e61c:	b2ad      	uxth	r5, r5
 801e61e:	9215      	str	r2, [sp, #84]	@ 0x54
 801e620:	9a04      	ldr	r2, [sp, #16]
 801e622:	2d00      	cmp	r5, #0
 801e624:	bf0c      	ite	eq
 801e626:	4611      	moveq	r1, r2
 801e628:	2100      	movne	r1, #0
 801e62a:	2200      	movs	r2, #0
 801e62c:	1b1b      	subs	r3, r3, r4
 801e62e:	b289      	uxth	r1, r1
 801e630:	920d      	str	r2, [sp, #52]	@ 0x34
 801e632:	9319      	str	r3, [sp, #100]	@ 0x64
 801e634:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e636:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e638:	fa12 f383 	uxtah	r3, r2, r3
 801e63c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801e63e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801e642:	3304      	adds	r3, #4
 801e644:	9307      	str	r3, [sp, #28]
 801e646:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e648:	455b      	cmp	r3, fp
 801e64a:	f240 817c 	bls.w	801e946 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801e64e:	9a01      	ldr	r2, [sp, #4]
 801e650:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801e654:	fbb5 f3f3 	udiv	r3, r5, r3
 801e658:	1ad3      	subs	r3, r2, r3
 801e65a:	b29b      	uxth	r3, r3
 801e65c:	9316      	str	r3, [sp, #88]	@ 0x58
 801e65e:	9b07      	ldr	r3, [sp, #28]
 801e660:	9807      	ldr	r0, [sp, #28]
 801e662:	785a      	ldrb	r2, [r3, #1]
 801e664:	789b      	ldrb	r3, [r3, #2]
 801e666:	7800      	ldrb	r0, [r0, #0]
 801e668:	9011      	str	r0, [sp, #68]	@ 0x44
 801e66a:	021b      	lsls	r3, r3, #8
 801e66c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e670:	9a07      	ldr	r2, [sp, #28]
 801e672:	78d2      	ldrb	r2, [r2, #3]
 801e674:	4313      	orrs	r3, r2
 801e676:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801e678:	3001      	adds	r0, #1
 801e67a:	441a      	add	r2, r3
 801e67c:	9005      	str	r0, [sp, #20]
 801e67e:	1c50      	adds	r0, r2, #1
 801e680:	9003      	str	r0, [sp, #12]
 801e682:	7852      	ldrb	r2, [r2, #1]
 801e684:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e686:	0212      	lsls	r2, r2, #8
 801e688:	5cc3      	ldrb	r3, [r0, r3]
 801e68a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801e68e:	431a      	orrs	r2, r3
 801e690:	b293      	uxth	r3, r2
 801e692:	930c      	str	r3, [sp, #48]	@ 0x30
 801e694:	2300      	movs	r3, #0
 801e696:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801e69a:	9308      	str	r3, [sp, #32]
 801e69c:	461a      	mov	r2, r3
 801e69e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801e6a2:	930e      	str	r3, [sp, #56]	@ 0x38
 801e6a4:	f04f 0801 	mov.w	r8, #1
 801e6a8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801e6ac:	f8cd 8008 	str.w	r8, [sp, #8]
 801e6b0:	46c4      	mov	ip, r8
 801e6b2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e6b4:	2d00      	cmp	r5, #0
 801e6b6:	d07c      	beq.n	801e7b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801e6b8:	45ac      	cmp	ip, r5
 801e6ba:	d26c      	bcs.n	801e796 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801e6bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e6be:	eba5 050c 	sub.w	r5, r5, ip
 801e6c2:	455b      	cmp	r3, fp
 801e6c4:	b2ad      	uxth	r5, r5
 801e6c6:	4608      	mov	r0, r1
 801e6c8:	d802      	bhi.n	801e6d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801e6ca:	e070      	b.n	801e7ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801e6cc:	2b00      	cmp	r3, #0
 801e6ce:	d15c      	bne.n	801e78a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801e6d0:	9b03      	ldr	r3, [sp, #12]
 801e6d2:	9a02      	ldr	r2, [sp, #8]
 801e6d4:	785b      	ldrb	r3, [r3, #1]
 801e6d6:	9902      	ldr	r1, [sp, #8]
 801e6d8:	f1c2 0207 	rsb	r2, r2, #7
 801e6dc:	4093      	lsls	r3, r2
 801e6de:	005b      	lsls	r3, r3, #1
 801e6e0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801e6e4:	9b03      	ldr	r3, [sp, #12]
 801e6e6:	781b      	ldrb	r3, [r3, #0]
 801e6e8:	410b      	asrs	r3, r1
 801e6ea:	3101      	adds	r1, #1
 801e6ec:	b2c9      	uxtb	r1, r1
 801e6ee:	2908      	cmp	r1, #8
 801e6f0:	9102      	str	r1, [sp, #8]
 801e6f2:	9903      	ldr	r1, [sp, #12]
 801e6f4:	bf0a      	itet	eq
 801e6f6:	3102      	addeq	r1, #2
 801e6f8:	3101      	addne	r1, #1
 801e6fa:	9103      	streq	r1, [sp, #12]
 801e6fc:	b2db      	uxtb	r3, r3
 801e6fe:	bf0a      	itet	eq
 801e700:	2100      	moveq	r1, #0
 801e702:	9103      	strne	r1, [sp, #12]
 801e704:	9102      	streq	r1, [sp, #8]
 801e706:	4313      	orrs	r3, r2
 801e708:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801e70a:	b29a      	uxth	r2, r3
 801e70c:	4291      	cmp	r1, r2
 801e70e:	d30a      	bcc.n	801e726 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801e710:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801e714:	2301      	movs	r3, #1
 801e716:	9905      	ldr	r1, [sp, #20]
 801e718:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801e71c:	d30f      	bcc.n	801e73e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801e71e:	2100      	movs	r1, #0
 801e720:	4698      	mov	r8, r3
 801e722:	9100      	str	r1, [sp, #0]
 801e724:	e032      	b.n	801e78c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801e726:	9b05      	ldr	r3, [sp, #20]
 801e728:	429a      	cmp	r2, r3
 801e72a:	d318      	bcc.n	801e75e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801e72c:	eb04 0308 	add.w	r3, r4, r8
 801e730:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801e734:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801e738:	f108 0301 	add.w	r3, r8, #1
 801e73c:	b29b      	uxth	r3, r3
 801e73e:	9905      	ldr	r1, [sp, #20]
 801e740:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801e744:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e748:	710e      	strb	r6, [r1, #4]
 801e74a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801e74c:	80ce      	strh	r6, [r1, #6]
 801e74e:	f108 0601 	add.w	r6, r8, #1
 801e752:	714e      	strb	r6, [r1, #5]
 801e754:	9905      	ldr	r1, [sp, #20]
 801e756:	3101      	adds	r1, #1
 801e758:	b289      	uxth	r1, r1
 801e75a:	9105      	str	r1, [sp, #20]
 801e75c:	e7df      	b.n	801e71e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801e75e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e762:	4611      	mov	r1, r2
 801e764:	795b      	ldrb	r3, [r3, #5]
 801e766:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801e76a:	4426      	add	r6, r4
 801e76c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801e76e:	4437      	add	r7, r6
 801e770:	2f00      	cmp	r7, #0
 801e772:	dd06      	ble.n	801e782 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801e774:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e778:	790f      	ldrb	r7, [r1, #4]
 801e77a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801e77e:	88c9      	ldrh	r1, [r1, #6]
 801e780:	e7f4      	b.n	801e76c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801e782:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801e786:	b29b      	uxth	r3, r3
 801e788:	e7c5      	b.n	801e716 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e78a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e78c:	920c      	str	r2, [sp, #48]	@ 0x30
 801e78e:	4601      	mov	r1, r0
 801e790:	9a00      	ldr	r2, [sp, #0]
 801e792:	469c      	mov	ip, r3
 801e794:	e78e      	b.n	801e6b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801e796:	1957      	adds	r7, r2, r5
 801e798:	ebac 0305 	sub.w	r3, ip, r5
 801e79c:	b2ba      	uxth	r2, r7
 801e79e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e7a2:	9200      	str	r2, [sp, #0]
 801e7a4:	b29b      	uxth	r3, r3
 801e7a6:	2500      	movs	r5, #0
 801e7a8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e7aa:	455a      	cmp	r2, fp
 801e7ac:	d88e      	bhi.n	801e6cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801e7ae:	4601      	mov	r1, r0
 801e7b0:	e749      	b.n	801e646 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801e7b2:	458c      	cmp	ip, r1
 801e7b4:	bf2c      	ite	cs
 801e7b6:	4628      	movcs	r0, r5
 801e7b8:	462b      	movcc	r3, r5
 801e7ba:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801e7bc:	bf27      	ittee	cs
 801e7be:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801e7c0:	ebac 0301 	subcs.w	r3, ip, r1
 801e7c4:	eba1 000c 	subcc.w	r0, r1, ip
 801e7c8:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801e7cc:	bf2c      	ite	cs
 801e7ce:	b29b      	uxthcs	r3, r3
 801e7d0:	b280      	uxthcc	r0, r0
 801e7d2:	2dff      	cmp	r5, #255	@ 0xff
 801e7d4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e7d6:	eb02 0705 	add.w	r7, r2, r5
 801e7da:	b2bd      	uxth	r5, r7
 801e7dc:	9500      	str	r5, [sp, #0]
 801e7de:	d12f      	bne.n	801e840 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801e7e0:	465e      	mov	r6, fp
 801e7e2:	9d00      	ldr	r5, [sp, #0]
 801e7e4:	42aa      	cmp	r2, r5
 801e7e6:	f040 8084 	bne.w	801e8f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801e7ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e7ec:	458c      	cmp	ip, r1
 801e7ee:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e7f2:	d3d8      	bcc.n	801e7a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801e7f4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801e7f6:	9904      	ldr	r1, [sp, #16]
 801e7f8:	8812      	ldrh	r2, [r2, #0]
 801e7fa:	1a52      	subs	r2, r2, r1
 801e7fc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e800:	9a08      	ldr	r2, [sp, #32]
 801e802:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801e804:	3201      	adds	r2, #1
 801e806:	428a      	cmp	r2, r1
 801e808:	9208      	str	r2, [sp, #32]
 801e80a:	f040 8092 	bne.w	801e932 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801e80e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801e812:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801e816:	9b04      	ldr	r3, [sp, #16]
 801e818:	eba5 050c 	sub.w	r5, r5, ip
 801e81c:	b2ad      	uxth	r5, r5
 801e81e:	2d00      	cmp	r5, #0
 801e820:	bf08      	it	eq
 801e822:	4619      	moveq	r1, r3
 801e824:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e826:	bf18      	it	ne
 801e828:	2100      	movne	r1, #0
 801e82a:	3301      	adds	r3, #1
 801e82c:	930d      	str	r3, [sp, #52]	@ 0x34
 801e82e:	b289      	uxth	r1, r1
 801e830:	e700      	b.n	801e634 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801e832:	bf00      	nop
 801e834:	20013f60 	.word	0x20013f60
 801e838:	20013f5a 	.word	0x20013f5a
 801e83c:	fffff7fb 	.word	0xfffff7fb
 801e840:	46d9      	mov	r9, fp
 801e842:	9d00      	ldr	r5, [sp, #0]
 801e844:	42aa      	cmp	r2, r5
 801e846:	d0d0      	beq.n	801e7ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801e848:	1c55      	adds	r5, r2, #1
 801e84a:	4422      	add	r2, r4
 801e84c:	9517      	str	r5, [sp, #92]	@ 0x5c
 801e84e:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801e852:	9a06      	ldr	r2, [sp, #24]
 801e854:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801e858:	4472      	add	r2, lr
 801e85a:	9212      	str	r2, [sp, #72]	@ 0x48
 801e85c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801e85e:	f8b9 2000 	ldrh.w	r2, [r9]
 801e862:	f897 a002 	ldrb.w	sl, [r7, #2]
 801e866:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801e868:	1216      	asrs	r6, r2, #8
 801e86a:	fb1a fa07 	smulbb	sl, sl, r7
 801e86e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801e872:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801e874:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e878:	fb06 a607 	mla	r6, r6, r7, sl
 801e87c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801e87e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801e882:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801e884:	10d5      	asrs	r5, r2, #3
 801e886:	fb1a fa07 	smulbb	sl, sl, r7
 801e88a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e88e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801e890:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e894:	fb05 a507 	mla	r5, r5, r7, sl
 801e898:	9f06      	ldr	r7, [sp, #24]
 801e89a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e89e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801e8a0:	00d2      	lsls	r2, r2, #3
 801e8a2:	fb1e fe07 	smulbb	lr, lr, r7
 801e8a6:	b2d2      	uxtb	r2, r2
 801e8a8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801e8aa:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e8ae:	b2b6      	uxth	r6, r6
 801e8b0:	fb02 e207 	mla	r2, r2, r7, lr
 801e8b4:	b292      	uxth	r2, r2
 801e8b6:	b2ad      	uxth	r5, r5
 801e8b8:	f106 0a01 	add.w	sl, r6, #1
 801e8bc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e8c0:	f102 0e01 	add.w	lr, r2, #1
 801e8c4:	f105 0a01 	add.w	sl, r5, #1
 801e8c8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801e8cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e8d0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801e8d4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e8d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e8dc:	ea4e 0606 	orr.w	r6, lr, r6
 801e8e0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801e8e4:	ea46 060a 	orr.w	r6, r6, sl
 801e8e8:	f829 6b02 	strh.w	r6, [r9], #2
 801e8ec:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801e8f0:	e7a7      	b.n	801e842 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801e8f2:	f102 0e01 	add.w	lr, r2, #1
 801e8f6:	4422      	add	r2, r4
 801e8f8:	9f06      	ldr	r7, [sp, #24]
 801e8fa:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801e8fe:	9a06      	ldr	r2, [sp, #24]
 801e900:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e904:	eb02 0a05 	add.w	sl, r2, r5
 801e908:	4a13      	ldr	r2, [pc, #76]	@ (801e958 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801e90a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e90e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801e912:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e916:	00d2      	lsls	r2, r2, #3
 801e918:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e91c:	ea49 0202 	orr.w	r2, r9, r2
 801e920:	f817 9005 	ldrb.w	r9, [r7, r5]
 801e924:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e928:	f826 2b02 	strh.w	r2, [r6], #2
 801e92c:	fa1f f28e 	uxth.w	r2, lr
 801e930:	e757      	b.n	801e7e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801e932:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e936:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801e93a:	1a2d      	subs	r5, r5, r0
 801e93c:	b2ad      	uxth	r5, r5
 801e93e:	2d00      	cmp	r5, #0
 801e940:	bf18      	it	ne
 801e942:	2000      	movne	r0, #0
 801e944:	e730      	b.n	801e7a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801e946:	4b05      	ldr	r3, [pc, #20]	@ (801e95c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801e948:	6818      	ldr	r0, [r3, #0]
 801e94a:	6803      	ldr	r3, [r0, #0]
 801e94c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e94e:	4798      	blx	r3
 801e950:	b01f      	add	sp, #124	@ 0x7c
 801e952:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e956:	bf00      	nop
 801e958:	fffff800 	.word	0xfffff800
 801e95c:	20013f60 	.word	0x20013f60

0801e960 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801e960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e964:	b091      	sub	sp, #68	@ 0x44
 801e966:	469b      	mov	fp, r3
 801e968:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801e96c:	4616      	mov	r6, r2
 801e96e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801e972:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e976:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801e97a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801e97e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801e982:	4604      	mov	r4, r0
 801e984:	460d      	mov	r5, r1
 801e986:	4640      	mov	r0, r8
 801e988:	4659      	mov	r1, fp
 801e98a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801e98e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801e992:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801e996:	f7f0 fd31 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 801e99a:	4631      	mov	r1, r6
 801e99c:	4640      	mov	r0, r8
 801e99e:	f7f0 fd2d 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 801e9a2:	4b74      	ldr	r3, [pc, #464]	@ (801eb74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801e9a4:	8818      	ldrh	r0, [r3, #0]
 801e9a6:	4b74      	ldr	r3, [pc, #464]	@ (801eb78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801e9a8:	8819      	ldrh	r1, [r3, #0]
 801e9aa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801e9ae:	2b00      	cmp	r3, #0
 801e9b0:	b202      	sxth	r2, r0
 801e9b2:	b20e      	sxth	r6, r1
 801e9b4:	da07      	bge.n	801e9c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801e9b6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801e9ba:	4463      	add	r3, ip
 801e9bc:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801e9c0:	2300      	movs	r3, #0
 801e9c2:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801e9c6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801e9ca:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801e9ce:	1ad2      	subs	r2, r2, r3
 801e9d0:	4594      	cmp	ip, r2
 801e9d2:	bfc4      	itt	gt
 801e9d4:	1ac2      	subgt	r2, r0, r3
 801e9d6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801e9da:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801e9de:	2a00      	cmp	r2, #0
 801e9e0:	da07      	bge.n	801e9f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801e9e2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801e9e6:	4462      	add	r2, ip
 801e9e8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801e9ec:	2200      	movs	r2, #0
 801e9ee:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801e9f2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801e9f6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801e9fa:	eba6 060a 	sub.w	r6, r6, sl
 801e9fe:	42b2      	cmp	r2, r6
 801ea00:	bfc4      	itt	gt
 801ea02:	eba1 020a 	subgt.w	r2, r1, sl
 801ea06:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801ea0a:	4a5c      	ldr	r2, [pc, #368]	@ (801eb7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801ea0c:	7812      	ldrb	r2, [r2, #0]
 801ea0e:	b9a2      	cbnz	r2, 801ea3a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801ea10:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801ea14:	4286      	cmp	r6, r0
 801ea16:	4640      	mov	r0, r8
 801ea18:	9303      	str	r3, [sp, #12]
 801ea1a:	bf14      	ite	ne
 801ea1c:	2600      	movne	r6, #0
 801ea1e:	2601      	moveq	r6, #1
 801ea20:	f7f0 fd2f 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ea24:	9b03      	ldr	r3, [sp, #12]
 801ea26:	b160      	cbz	r0, 801ea42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801ea28:	2300      	movs	r3, #0
 801ea2a:	8023      	strh	r3, [r4, #0]
 801ea2c:	8063      	strh	r3, [r4, #2]
 801ea2e:	80a3      	strh	r3, [r4, #4]
 801ea30:	4620      	mov	r0, r4
 801ea32:	80e3      	strh	r3, [r4, #6]
 801ea34:	b011      	add	sp, #68	@ 0x44
 801ea36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ea3a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801ea3e:	428e      	cmp	r6, r1
 801ea40:	e7e9      	b.n	801ea16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801ea42:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801ea46:	9205      	str	r2, [sp, #20]
 801ea48:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801ea4c:	9206      	str	r2, [sp, #24]
 801ea4e:	f8bb 2000 	ldrh.w	r2, [fp]
 801ea52:	900e      	str	r0, [sp, #56]	@ 0x38
 801ea54:	1a9b      	subs	r3, r3, r2
 801ea56:	b21b      	sxth	r3, r3
 801ea58:	9303      	str	r3, [sp, #12]
 801ea5a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ea5e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801ea62:	ebaa 0a03 	sub.w	sl, sl, r3
 801ea66:	fa0f f38a 	sxth.w	r3, sl
 801ea6a:	9304      	str	r3, [sp, #16]
 801ea6c:	9b03      	ldr	r3, [sp, #12]
 801ea6e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801ea72:	9b04      	ldr	r3, [sp, #16]
 801ea74:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801ea78:	9b05      	ldr	r3, [sp, #20]
 801ea7a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801ea7e:	a90e      	add	r1, sp, #56	@ 0x38
 801ea80:	9b06      	ldr	r3, [sp, #24]
 801ea82:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801ea86:	a80c      	add	r0, sp, #48	@ 0x30
 801ea88:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801ea8c:	f7f7 fa4a 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ea90:	4640      	mov	r0, r8
 801ea92:	f7f7 fa1f 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ea96:	a80e      	add	r0, sp, #56	@ 0x38
 801ea98:	f7f7 fa1c 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ea9c:	4b38      	ldr	r3, [pc, #224]	@ (801eb80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801ea9e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801eaa2:	881b      	ldrh	r3, [r3, #0]
 801eaa4:	9307      	str	r3, [sp, #28]
 801eaa6:	682b      	ldr	r3, [r5, #0]
 801eaa8:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801eb84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801eaac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801eaae:	4628      	mov	r0, r5
 801eab0:	4798      	blx	r3
 801eab2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801eab6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801eaba:	4681      	mov	r9, r0
 801eabc:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801eac0:	f8db 0000 	ldr.w	r0, [fp]
 801eac4:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801eac6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801eaca:	6803      	ldr	r3, [r0, #0]
 801eacc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801eace:	4798      	blx	r3
 801ead0:	4607      	mov	r7, r0
 801ead2:	f8db 0000 	ldr.w	r0, [fp]
 801ead6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801eada:	6803      	ldr	r3, [r0, #0]
 801eadc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801eae0:	9109      	str	r1, [sp, #36]	@ 0x24
 801eae2:	9208      	str	r2, [sp, #32]
 801eae4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801eae6:	4798      	blx	r3
 801eae8:	f010 0f01 	tst.w	r0, #1
 801eaec:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801eaf0:	d012      	beq.n	801eb18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801eaf2:	f8db 0000 	ldr.w	r0, [fp]
 801eaf6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801eafa:	6803      	ldr	r3, [r0, #0]
 801eafc:	9200      	str	r2, [sp, #0]
 801eafe:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801eb00:	e898 0006 	ldmia.w	r8, {r1, r2}
 801eb04:	462b      	mov	r3, r5
 801eb06:	47b0      	blx	r6
 801eb08:	9b03      	ldr	r3, [sp, #12]
 801eb0a:	8023      	strh	r3, [r4, #0]
 801eb0c:	9b04      	ldr	r3, [sp, #16]
 801eb0e:	8063      	strh	r3, [r4, #2]
 801eb10:	9b05      	ldr	r3, [sp, #20]
 801eb12:	80a3      	strh	r3, [r4, #4]
 801eb14:	9b06      	ldr	r3, [sp, #24]
 801eb16:	e78b      	b.n	801ea30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801eb18:	fb09 f202 	mul.w	r2, r9, r2
 801eb1c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801eb20:	440f      	add	r7, r1
 801eb22:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801eb26:	b166      	cbz	r6, 801eb42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801eb28:	9a07      	ldr	r2, [sp, #28]
 801eb2a:	4592      	cmp	sl, r2
 801eb2c:	d109      	bne.n	801eb42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801eb2e:	f8db 0000 	ldr.w	r0, [fp]
 801eb32:	6802      	ldr	r2, [r0, #0]
 801eb34:	fb09 f303 	mul.w	r3, r9, r3
 801eb38:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801eb3a:	4629      	mov	r1, r5
 801eb3c:	463a      	mov	r2, r7
 801eb3e:	47b0      	blx	r6
 801eb40:	e7e2      	b.n	801eb08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801eb42:	fb0a f303 	mul.w	r3, sl, r3
 801eb46:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801eb84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801eb4a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801eb4e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801eb52:	4545      	cmp	r5, r8
 801eb54:	d2d8      	bcs.n	801eb08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801eb56:	f8db 0000 	ldr.w	r0, [fp]
 801eb5a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801eb5e:	6802      	ldr	r2, [r0, #0]
 801eb60:	4629      	mov	r1, r5
 801eb62:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801eb66:	005b      	lsls	r3, r3, #1
 801eb68:	463a      	mov	r2, r7
 801eb6a:	47d0      	blx	sl
 801eb6c:	444f      	add	r7, r9
 801eb6e:	4435      	add	r5, r6
 801eb70:	e7ef      	b.n	801eb52 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801eb72:	bf00      	nop
 801eb74:	20013f54 	.word	0x20013f54
 801eb78:	20013f56 	.word	0x20013f56
 801eb7c:	20013f58 	.word	0x20013f58
 801eb80:	20013f5a 	.word	0x20013f5a
 801eb84:	20013f60 	.word	0x20013f60

0801eb88 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801eb88:	b5f0      	push	{r4, r5, r6, r7, lr}
 801eb8a:	4606      	mov	r6, r0
 801eb8c:	b087      	sub	sp, #28
 801eb8e:	460c      	mov	r4, r1
 801eb90:	4617      	mov	r7, r2
 801eb92:	461d      	mov	r5, r3
 801eb94:	b333      	cbz	r3, 801ebe4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801eb96:	4608      	mov	r0, r1
 801eb98:	f7f0 fc73 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 801eb9c:	bb10      	cbnz	r0, 801ebe4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801eb9e:	6820      	ldr	r0, [r4, #0]
 801eba0:	6861      	ldr	r1, [r4, #4]
 801eba2:	4c1c      	ldr	r4, [pc, #112]	@ (801ec14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801eba4:	ab04      	add	r3, sp, #16
 801eba6:	c303      	stmia	r3!, {r0, r1}
 801eba8:	a804      	add	r0, sp, #16
 801ebaa:	f7f7 f993 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ebae:	6820      	ldr	r0, [r4, #0]
 801ebb0:	6803      	ldr	r3, [r0, #0]
 801ebb2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ebb4:	4798      	blx	r3
 801ebb6:	2dff      	cmp	r5, #255	@ 0xff
 801ebb8:	d016      	beq.n	801ebe8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801ebba:	f010 0f08 	tst.w	r0, #8
 801ebbe:	6820      	ldr	r0, [r4, #0]
 801ebc0:	d015      	beq.n	801ebee <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801ebc2:	2400      	movs	r4, #0
 801ebc4:	6801      	ldr	r1, [r0, #0]
 801ebc6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801ebca:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ebce:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801ebd2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801ebd6:	9401      	str	r4, [sp, #4]
 801ebd8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801ebdc:	9400      	str	r4, [sp, #0]
 801ebde:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801ebe0:	4639      	mov	r1, r7
 801ebe2:	47a0      	blx	r4
 801ebe4:	b007      	add	sp, #28
 801ebe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ebe8:	f010 0f02 	tst.w	r0, #2
 801ebec:	e7e7      	b.n	801ebbe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801ebee:	6803      	ldr	r3, [r0, #0]
 801ebf0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ebf2:	4798      	blx	r3
 801ebf4:	4b08      	ldr	r3, [pc, #32]	@ (801ec18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801ebf6:	881a      	ldrh	r2, [r3, #0]
 801ebf8:	6833      	ldr	r3, [r6, #0]
 801ebfa:	e9cd 7500 	strd	r7, r5, [sp]
 801ebfe:	4601      	mov	r1, r0
 801ec00:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801ec02:	4630      	mov	r0, r6
 801ec04:	ab04      	add	r3, sp, #16
 801ec06:	47a8      	blx	r5
 801ec08:	6820      	ldr	r0, [r4, #0]
 801ec0a:	6803      	ldr	r3, [r0, #0]
 801ec0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ec0e:	4798      	blx	r3
 801ec10:	e7e8      	b.n	801ebe4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ec12:	bf00      	nop
 801ec14:	20013f60 	.word	0x20013f60
 801ec18:	20013f5a 	.word	0x20013f5a

0801ec1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801ec1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ec20:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801ec24:	9e08      	ldr	r6, [sp, #32]
 801ec26:	4688      	mov	r8, r1
 801ec28:	4614      	mov	r4, r2
 801ec2a:	461d      	mov	r5, r3
 801ec2c:	2f00      	cmp	r7, #0
 801ec2e:	f000 80a9 	beq.w	801ed84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ec32:	4618      	mov	r0, r3
 801ec34:	f7f0 fc25 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ec38:	2800      	cmp	r0, #0
 801ec3a:	f040 80a3 	bne.w	801ed84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ec3e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801ec42:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801ec46:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801ec4a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801ec4e:	fb04 1303 	mla	r3, r4, r3, r1
 801ec52:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801ec56:	4365      	muls	r5, r4
 801ec58:	2fff      	cmp	r7, #255	@ 0xff
 801ec5a:	eba4 0200 	sub.w	r2, r4, r0
 801ec5e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801ec62:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801ec66:	d04a      	beq.n	801ecfe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801ec68:	b2bc      	uxth	r4, r7
 801ec6a:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801ec6e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801ec72:	fa5f f788 	uxtb.w	r7, r8
 801ec76:	b2f3      	uxtb	r3, r6
 801ec78:	0040      	lsls	r0, r0, #1
 801ec7a:	fb0e fe04 	mul.w	lr, lr, r4
 801ec7e:	4367      	muls	r7, r4
 801ec80:	4363      	muls	r3, r4
 801ec82:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801ec86:	fa1f fc8c 	uxth.w	ip, ip
 801ec8a:	42a9      	cmp	r1, r5
 801ec8c:	d27a      	bcs.n	801ed84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ec8e:	eb01 0900 	add.w	r9, r1, r0
 801ec92:	4549      	cmp	r1, r9
 801ec94:	d231      	bcs.n	801ecfa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801ec96:	880a      	ldrh	r2, [r1, #0]
 801ec98:	1214      	asrs	r4, r2, #8
 801ec9a:	10d6      	asrs	r6, r2, #3
 801ec9c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801eca0:	00d2      	lsls	r2, r2, #3
 801eca2:	b2d2      	uxtb	r2, r2
 801eca4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801eca8:	fb14 f40c 	smulbb	r4, r4, ip
 801ecac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ecb0:	4474      	add	r4, lr
 801ecb2:	fb12 f20c 	smulbb	r2, r2, ip
 801ecb6:	b2a4      	uxth	r4, r4
 801ecb8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801ecbc:	441a      	add	r2, r3
 801ecbe:	b292      	uxth	r2, r2
 801ecc0:	f104 0a01 	add.w	sl, r4, #1
 801ecc4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ecc8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801eccc:	fb16 f60c 	smulbb	r6, r6, ip
 801ecd0:	f102 0a01 	add.w	sl, r2, #1
 801ecd4:	443e      	add	r6, r7
 801ecd6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801ecda:	b2b6      	uxth	r6, r6
 801ecdc:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801ece0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ece4:	4322      	orrs	r2, r4
 801ece6:	1c74      	adds	r4, r6, #1
 801ece8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801ecec:	0976      	lsrs	r6, r6, #5
 801ecee:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801ecf2:	4332      	orrs	r2, r6
 801ecf4:	f821 2b02 	strh.w	r2, [r1], #2
 801ecf8:	e7cb      	b.n	801ec92 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801ecfa:	4441      	add	r1, r8
 801ecfc:	e7c5      	b.n	801ec8a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801ecfe:	4f22      	ldr	r7, [pc, #136]	@ (801ed88 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801ed00:	0973      	lsrs	r3, r6, #5
 801ed02:	ea08 0707 	and.w	r7, r8, r7
 801ed06:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ed0a:	433b      	orrs	r3, r7
 801ed0c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ed10:	4333      	orrs	r3, r6
 801ed12:	07e7      	lsls	r7, r4, #31
 801ed14:	b29b      	uxth	r3, r3
 801ed16:	d50b      	bpl.n	801ed30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801ed18:	0040      	lsls	r0, r0, #1
 801ed1a:	0052      	lsls	r2, r2, #1
 801ed1c:	42a9      	cmp	r1, r5
 801ed1e:	d231      	bcs.n	801ed84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ed20:	180c      	adds	r4, r1, r0
 801ed22:	42a1      	cmp	r1, r4
 801ed24:	d202      	bcs.n	801ed2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801ed26:	f821 3b02 	strh.w	r3, [r1], #2
 801ed2a:	e7fa      	b.n	801ed22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801ed2c:	4411      	add	r1, r2
 801ed2e:	e7f5      	b.n	801ed1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801ed30:	078e      	lsls	r6, r1, #30
 801ed32:	d008      	beq.n	801ed46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801ed34:	0066      	lsls	r6, r4, #1
 801ed36:	460a      	mov	r2, r1
 801ed38:	42aa      	cmp	r2, r5
 801ed3a:	d202      	bcs.n	801ed42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801ed3c:	8013      	strh	r3, [r2, #0]
 801ed3e:	4432      	add	r2, r6
 801ed40:	e7fa      	b.n	801ed38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801ed42:	3102      	adds	r1, #2
 801ed44:	3801      	subs	r0, #1
 801ed46:	07c2      	lsls	r2, r0, #31
 801ed48:	d50b      	bpl.n	801ed62 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801ed4a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801ed4e:	3a01      	subs	r2, #1
 801ed50:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801ed54:	0066      	lsls	r6, r4, #1
 801ed56:	42aa      	cmp	r2, r5
 801ed58:	d202      	bcs.n	801ed60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801ed5a:	8013      	strh	r3, [r2, #0]
 801ed5c:	4432      	add	r2, r6
 801ed5e:	e7fa      	b.n	801ed56 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801ed60:	3801      	subs	r0, #1
 801ed62:	b178      	cbz	r0, 801ed84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ed64:	1040      	asrs	r0, r0, #1
 801ed66:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801ed6a:	0080      	lsls	r0, r0, #2
 801ed6c:	0064      	lsls	r4, r4, #1
 801ed6e:	42a9      	cmp	r1, r5
 801ed70:	d208      	bcs.n	801ed84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ed72:	180e      	adds	r6, r1, r0
 801ed74:	460a      	mov	r2, r1
 801ed76:	42b2      	cmp	r2, r6
 801ed78:	d202      	bcs.n	801ed80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801ed7a:	f842 3b04 	str.w	r3, [r2], #4
 801ed7e:	e7fa      	b.n	801ed76 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801ed80:	4421      	add	r1, r4
 801ed82:	e7f4      	b.n	801ed6e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801ed84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ed88:	00fff800 	.word	0x00fff800

0801ed8c <_ZN8touchgfx8LCD16bppC1Ev>:
 801ed8c:	2200      	movs	r2, #0
 801ed8e:	4912      	ldr	r1, [pc, #72]	@ (801edd8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801ed90:	6001      	str	r1, [r0, #0]
 801ed92:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801ed96:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801ed9a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801ed9e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801eda2:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801eda6:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801edaa:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801edae:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801edb2:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801edb6:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801edba:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801edbe:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801edc2:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801edc6:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801edca:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801edce:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801edd2:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801edd6:	4770      	bx	lr
 801edd8:	0802db54 	.word	0x0802db54

0801eddc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801eddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ede0:	460d      	mov	r5, r1
 801ede2:	b08d      	sub	sp, #52	@ 0x34
 801ede4:	4604      	mov	r4, r0
 801ede6:	6808      	ldr	r0, [r1, #0]
 801ede8:	6849      	ldr	r1, [r1, #4]
 801edea:	4699      	mov	r9, r3
 801edec:	ab08      	add	r3, sp, #32
 801edee:	c303      	stmia	r3!, {r0, r1}
 801edf0:	6810      	ldr	r0, [r2, #0]
 801edf2:	6851      	ldr	r1, [r2, #4]
 801edf4:	ab0a      	add	r3, sp, #40	@ 0x28
 801edf6:	c303      	stmia	r3!, {r0, r1}
 801edf8:	a808      	add	r0, sp, #32
 801edfa:	f7f7 f86b 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801edfe:	4629      	mov	r1, r5
 801ee00:	a80a      	add	r0, sp, #40	@ 0x28
 801ee02:	f7f7 f88f 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ee06:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801ee0a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801ee0e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801ee12:	4d63      	ldr	r5, [pc, #396]	@ (801efa0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ee14:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801ee18:	6828      	ldr	r0, [r5, #0]
 801ee1a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801ee1e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ee22:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ee26:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801ee2a:	440a      	add	r2, r1
 801ee2c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801ee30:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801ee34:	4413      	add	r3, r2
 801ee36:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801ee3a:	6803      	ldr	r3, [r0, #0]
 801ee3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ee3e:	4798      	blx	r3
 801ee40:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801ee44:	d119      	bne.n	801ee7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801ee46:	f010 0f20 	tst.w	r0, #32
 801ee4a:	6828      	ldr	r0, [r5, #0]
 801ee4c:	d018      	beq.n	801ee80 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801ee4e:	2500      	movs	r5, #0
 801ee50:	6801      	ldr	r1, [r0, #0]
 801ee52:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801ee56:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801ee5a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ee5e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801ee62:	9502      	str	r5, [sp, #8]
 801ee64:	b2b6      	uxth	r6, r6
 801ee66:	fa1f f588 	uxth.w	r5, r8
 801ee6a:	9601      	str	r6, [sp, #4]
 801ee6c:	9500      	str	r5, [sp, #0]
 801ee6e:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801ee70:	4621      	mov	r1, r4
 801ee72:	47a8      	blx	r5
 801ee74:	b00d      	add	sp, #52	@ 0x34
 801ee76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee7a:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801ee7e:	e7e4      	b.n	801ee4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ee80:	6803      	ldr	r3, [r0, #0]
 801ee82:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ee84:	4798      	blx	r3
 801ee86:	4947      	ldr	r1, [pc, #284]	@ (801efa4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ee88:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801ee8c:	880b      	ldrh	r3, [r1, #0]
 801ee8e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801ee92:	fb03 5202 	mla	r2, r3, r2, r5
 801ee96:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ee9a:	4373      	muls	r3, r6
 801ee9c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801eea0:	9307      	str	r3, [sp, #28]
 801eea2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801eea6:	9306      	str	r3, [sp, #24]
 801eea8:	468a      	mov	sl, r1
 801eeaa:	9b07      	ldr	r3, [sp, #28]
 801eeac:	4298      	cmp	r0, r3
 801eeae:	d270      	bcs.n	801ef92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801eeb0:	9b06      	ldr	r3, [sp, #24]
 801eeb2:	4621      	mov	r1, r4
 801eeb4:	eb00 0b03 	add.w	fp, r0, r3
 801eeb8:	4558      	cmp	r0, fp
 801eeba:	d25d      	bcs.n	801ef78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801eebc:	f851 4b04 	ldr.w	r4, [r1], #4
 801eec0:	0e23      	lsrs	r3, r4, #24
 801eec2:	d014      	beq.n	801eeee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801eec4:	2bff      	cmp	r3, #255	@ 0xff
 801eec6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801eeca:	d112      	bne.n	801eef2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801eecc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801eed0:	d10f      	bne.n	801eef2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801eed2:	0963      	lsrs	r3, r4, #5
 801eed4:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801eed8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eedc:	f02c 0c07 	bic.w	ip, ip, #7
 801eee0:	ea43 0c0c 	orr.w	ip, r3, ip
 801eee4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801eee8:	ea4c 0404 	orr.w	r4, ip, r4
 801eeec:	8004      	strh	r4, [r0, #0]
 801eeee:	3002      	adds	r0, #2
 801eef0:	e7e2      	b.n	801eeb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801eef2:	fb09 f303 	mul.w	r3, r9, r3
 801eef6:	8807      	ldrh	r7, [r0, #0]
 801eef8:	1c5a      	adds	r2, r3, #1
 801eefa:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801eefe:	1212      	asrs	r2, r2, #8
 801ef00:	123e      	asrs	r6, r7, #8
 801ef02:	b293      	uxth	r3, r2
 801ef04:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ef08:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801ef0c:	43d2      	mvns	r2, r2
 801ef0e:	b2d2      	uxtb	r2, r2
 801ef10:	10fd      	asrs	r5, r7, #3
 801ef12:	fb1e fe03 	smulbb	lr, lr, r3
 801ef16:	00ff      	lsls	r7, r7, #3
 801ef18:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ef1c:	fb06 e602 	mla	r6, r6, r2, lr
 801ef20:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ef24:	b2ff      	uxtb	r7, r7
 801ef26:	fa5f fc8c 	uxtb.w	ip, ip
 801ef2a:	b2e4      	uxtb	r4, r4
 801ef2c:	b2b6      	uxth	r6, r6
 801ef2e:	fb1c fc03 	smulbb	ip, ip, r3
 801ef32:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ef36:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ef3a:	fb14 f403 	smulbb	r4, r4, r3
 801ef3e:	fb05 c502 	mla	r5, r5, r2, ip
 801ef42:	f106 0e01 	add.w	lr, r6, #1
 801ef46:	fb07 4702 	mla	r7, r7, r2, r4
 801ef4a:	b2ad      	uxth	r5, r5
 801ef4c:	b2bf      	uxth	r7, r7
 801ef4e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ef52:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801ef56:	f105 0c01 	add.w	ip, r5, #1
 801ef5a:	1c7e      	adds	r6, r7, #1
 801ef5c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ef60:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ef64:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ef68:	096d      	lsrs	r5, r5, #5
 801ef6a:	ea46 060e 	orr.w	r6, r6, lr
 801ef6e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ef72:	432e      	orrs	r6, r5
 801ef74:	8006      	strh	r6, [r0, #0]
 801ef76:	e7ba      	b.n	801eeee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ef78:	f8ba 3000 	ldrh.w	r3, [sl]
 801ef7c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801ef80:	eba3 0308 	sub.w	r3, r3, r8
 801ef84:	eba4 0408 	sub.w	r4, r4, r8
 801ef88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ef8c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ef90:	e78b      	b.n	801eeaa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ef92:	4b03      	ldr	r3, [pc, #12]	@ (801efa0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ef94:	6818      	ldr	r0, [r3, #0]
 801ef96:	6803      	ldr	r3, [r0, #0]
 801ef98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ef9a:	4798      	blx	r3
 801ef9c:	e76a      	b.n	801ee74 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ef9e:	bf00      	nop
 801efa0:	20013f60 	.word	0x20013f60
 801efa4:	20013f5a 	.word	0x20013f5a

0801efa8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801efa8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801efac:	460c      	mov	r4, r1
 801efae:	b085      	sub	sp, #20
 801efb0:	6810      	ldr	r0, [r2, #0]
 801efb2:	6851      	ldr	r1, [r2, #4]
 801efb4:	466d      	mov	r5, sp
 801efb6:	c503      	stmia	r5!, {r0, r1}
 801efb8:	6818      	ldr	r0, [r3, #0]
 801efba:	6859      	ldr	r1, [r3, #4]
 801efbc:	4616      	mov	r6, r2
 801efbe:	c503      	stmia	r5!, {r0, r1}
 801efc0:	4668      	mov	r0, sp
 801efc2:	f7f6 ff87 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801efc6:	4631      	mov	r1, r6
 801efc8:	a802      	add	r0, sp, #8
 801efca:	f7f6 ffab 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801efce:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801efd2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801efd6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801efda:	4d28      	ldr	r5, [pc, #160]	@ (801f07c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801efdc:	4e28      	ldr	r6, [pc, #160]	@ (801f080 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801efde:	6828      	ldr	r0, [r5, #0]
 801efe0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801efe4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801efe8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801efec:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801eff0:	f8bd 1000 	ldrh.w	r1, [sp]
 801eff4:	440a      	add	r2, r1
 801eff6:	f8ad 2008 	strh.w	r2, [sp, #8]
 801effa:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801effe:	4413      	add	r3, r2
 801f000:	f8ad 300a 	strh.w	r3, [sp, #10]
 801f004:	6803      	ldr	r3, [r0, #0]
 801f006:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f008:	4798      	blx	r3
 801f00a:	8833      	ldrh	r3, [r6, #0]
 801f00c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801f010:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801f014:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801f084 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801f018:	fb03 1202 	mla	r2, r3, r2, r1
 801f01c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f020:	fb08 f303 	mul.w	r3, r8, r3
 801f024:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f028:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801f02c:	4298      	cmp	r0, r3
 801f02e:	d21d      	bcs.n	801f06c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801f030:	eb00 080c 	add.w	r8, r0, ip
 801f034:	4540      	cmp	r0, r8
 801f036:	d20f      	bcs.n	801f058 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801f038:	f854 1b04 	ldr.w	r1, [r4], #4
 801f03c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801f040:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801f044:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f048:	ea42 0209 	orr.w	r2, r2, r9
 801f04c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f050:	430a      	orrs	r2, r1
 801f052:	f820 2b02 	strh.w	r2, [r0], #2
 801f056:	e7ed      	b.n	801f034 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801f058:	8832      	ldrh	r2, [r6, #0]
 801f05a:	1bd2      	subs	r2, r2, r7
 801f05c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f060:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801f064:	1bd2      	subs	r2, r2, r7
 801f066:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801f06a:	e7df      	b.n	801f02c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801f06c:	6828      	ldr	r0, [r5, #0]
 801f06e:	6803      	ldr	r3, [r0, #0]
 801f070:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f072:	4798      	blx	r3
 801f074:	b005      	add	sp, #20
 801f076:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f07a:	bf00      	nop
 801f07c:	20013f60 	.word	0x20013f60
 801f080:	20013f5a 	.word	0x20013f5a
 801f084:	fffff800 	.word	0xfffff800

0801f088 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801f088:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f08c:	460e      	mov	r6, r1
 801f08e:	b08e      	sub	sp, #56	@ 0x38
 801f090:	4604      	mov	r4, r0
 801f092:	6808      	ldr	r0, [r1, #0]
 801f094:	6849      	ldr	r1, [r1, #4]
 801f096:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801f270 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801f09a:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801f274 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801f09e:	461d      	mov	r5, r3
 801f0a0:	ab0a      	add	r3, sp, #40	@ 0x28
 801f0a2:	c303      	stmia	r3!, {r0, r1}
 801f0a4:	6810      	ldr	r0, [r2, #0]
 801f0a6:	6851      	ldr	r1, [r2, #4]
 801f0a8:	ab0c      	add	r3, sp, #48	@ 0x30
 801f0aa:	c303      	stmia	r3!, {r0, r1}
 801f0ac:	a80a      	add	r0, sp, #40	@ 0x28
 801f0ae:	f7f6 ff11 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f0b2:	4631      	mov	r1, r6
 801f0b4:	a80c      	add	r0, sp, #48	@ 0x30
 801f0b6:	f7f6 ff35 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f0ba:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801f0be:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801f0c2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801f0c6:	f8d8 0000 	ldr.w	r0, [r8]
 801f0ca:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801f0ce:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801f0d2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f0d6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801f0da:	440c      	add	r4, r1
 801f0dc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801f0e0:	440a      	add	r2, r1
 801f0e2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801f0e6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801f0ea:	4413      	add	r3, r2
 801f0ec:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801f0f0:	6803      	ldr	r3, [r0, #0]
 801f0f2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801f0f4:	4798      	blx	r3
 801f0f6:	2dff      	cmp	r5, #255	@ 0xff
 801f0f8:	d124      	bne.n	801f144 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801f0fa:	f010 0f01 	tst.w	r0, #1
 801f0fe:	f8d8 0000 	ldr.w	r0, [r8]
 801f102:	d022      	beq.n	801f14a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801f104:	2100      	movs	r1, #0
 801f106:	f8d0 c000 	ldr.w	ip, [r0]
 801f10a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801f10e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801f112:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801f116:	f04f 0e01 	mov.w	lr, #1
 801f11a:	f8cd e018 	str.w	lr, [sp, #24]
 801f11e:	f8b9 e000 	ldrh.w	lr, [r9]
 801f122:	9503      	str	r5, [sp, #12]
 801f124:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801f128:	b2b6      	uxth	r6, r6
 801f12a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801f12e:	9102      	str	r1, [sp, #8]
 801f130:	b2bf      	uxth	r7, r7
 801f132:	9601      	str	r6, [sp, #4]
 801f134:	9700      	str	r7, [sp, #0]
 801f136:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801f13a:	4621      	mov	r1, r4
 801f13c:	47a8      	blx	r5
 801f13e:	b00e      	add	sp, #56	@ 0x38
 801f140:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f144:	f010 0f04 	tst.w	r0, #4
 801f148:	e7d9      	b.n	801f0fe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801f14a:	6803      	ldr	r3, [r0, #0]
 801f14c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f14e:	4798      	blx	r3
 801f150:	f8b9 3000 	ldrh.w	r3, [r9]
 801f154:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801f158:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801f15c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801f160:	fb03 1202 	mla	r2, r3, r2, r1
 801f164:	ebac 0c07 	sub.w	ip, ip, r7
 801f168:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f16c:	435e      	muls	r6, r3
 801f16e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801f172:	2dff      	cmp	r5, #255	@ 0xff
 801f174:	eba3 0707 	sub.w	r7, r3, r7
 801f178:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801f17c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f180:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801f184:	d049      	beq.n	801f21a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801f186:	43eb      	mvns	r3, r5
 801f188:	fa1f f985 	uxth.w	r9, r5
 801f18c:	b2db      	uxtb	r3, r3
 801f18e:	42b0      	cmp	r0, r6
 801f190:	d266      	bcs.n	801f260 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801f192:	eb00 0a0e 	add.w	sl, r0, lr
 801f196:	4550      	cmp	r0, sl
 801f198:	4621      	mov	r1, r4
 801f19a:	f104 0403 	add.w	r4, r4, #3
 801f19e:	d25b      	bcs.n	801f258 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801f1a0:	8802      	ldrh	r2, [r0, #0]
 801f1a2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801f1a6:	ea4f 2822 	mov.w	r8, r2, asr #8
 801f1aa:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801f1ae:	fb11 f109 	smulbb	r1, r1, r9
 801f1b2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801f1b6:	10d5      	asrs	r5, r2, #3
 801f1b8:	fb08 1803 	mla	r8, r8, r3, r1
 801f1bc:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801f1c0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801f1c4:	fb11 f109 	smulbb	r1, r1, r9
 801f1c8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f1cc:	fb05 1503 	mla	r5, r5, r3, r1
 801f1d0:	00d2      	lsls	r2, r2, #3
 801f1d2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801f1d6:	b2d2      	uxtb	r2, r2
 801f1d8:	fb11 f109 	smulbb	r1, r1, r9
 801f1dc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f1e0:	fa1f f888 	uxth.w	r8, r8
 801f1e4:	fb02 1203 	mla	r2, r2, r3, r1
 801f1e8:	b292      	uxth	r2, r2
 801f1ea:	f108 0101 	add.w	r1, r8, #1
 801f1ee:	b2ad      	uxth	r5, r5
 801f1f0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801f1f4:	1c51      	adds	r1, r2, #1
 801f1f6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f1fa:	1c69      	adds	r1, r5, #1
 801f1fc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801f200:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801f204:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f208:	096d      	lsrs	r5, r5, #5
 801f20a:	ea42 0208 	orr.w	r2, r2, r8
 801f20e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f212:	432a      	orrs	r2, r5
 801f214:	f820 2b02 	strh.w	r2, [r0], #2
 801f218:	e7bd      	b.n	801f196 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801f21a:	4a14      	ldr	r2, [pc, #80]	@ (801f26c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801f21c:	42b0      	cmp	r0, r6
 801f21e:	d21f      	bcs.n	801f260 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801f220:	eb00 050e 	add.w	r5, r0, lr
 801f224:	42a8      	cmp	r0, r5
 801f226:	4621      	mov	r1, r4
 801f228:	f104 0403 	add.w	r4, r4, #3
 801f22c:	d210      	bcs.n	801f250 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801f22e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801f232:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801f236:	00db      	lsls	r3, r3, #3
 801f238:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801f23c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f240:	430b      	orrs	r3, r1
 801f242:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801f246:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801f24a:	f820 3b02 	strh.w	r3, [r0], #2
 801f24e:	e7e9      	b.n	801f224 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801f250:	4438      	add	r0, r7
 801f252:	eb01 040c 	add.w	r4, r1, ip
 801f256:	e7e1      	b.n	801f21c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801f258:	4438      	add	r0, r7
 801f25a:	eb01 040c 	add.w	r4, r1, ip
 801f25e:	e796      	b.n	801f18e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801f260:	4b03      	ldr	r3, [pc, #12]	@ (801f270 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801f262:	6818      	ldr	r0, [r3, #0]
 801f264:	6803      	ldr	r3, [r0, #0]
 801f266:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f268:	4798      	blx	r3
 801f26a:	e768      	b.n	801f13e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801f26c:	fffff800 	.word	0xfffff800
 801f270:	20013f60 	.word	0x20013f60
 801f274:	20013f5a 	.word	0x20013f5a

0801f278 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801f278:	b4f0      	push	{r4, r5, r6, r7}
 801f27a:	4616      	mov	r6, r2
 801f27c:	2e01      	cmp	r6, #1
 801f27e:	461c      	mov	r4, r3
 801f280:	460d      	mov	r5, r1
 801f282:	9a04      	ldr	r2, [sp, #16]
 801f284:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801f288:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801f28c:	d012      	beq.n	801f2b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801f28e:	d303      	bcc.n	801f298 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801f290:	2e02      	cmp	r6, #2
 801f292:	d00a      	beq.n	801f2aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801f294:	bcf0      	pop	{r4, r5, r6, r7}
 801f296:	4770      	bx	lr
 801f298:	6805      	ldr	r5, [r0, #0]
 801f29a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801f29e:	68ed      	ldr	r5, [r5, #12]
 801f2a0:	4613      	mov	r3, r2
 801f2a2:	46ac      	mov	ip, r5
 801f2a4:	4622      	mov	r2, r4
 801f2a6:	bcf0      	pop	{r4, r5, r6, r7}
 801f2a8:	4760      	bx	ip
 801f2aa:	4621      	mov	r1, r4
 801f2ac:	4628      	mov	r0, r5
 801f2ae:	bcf0      	pop	{r4, r5, r6, r7}
 801f2b0:	f7ff bd94 	b.w	801eddc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f2b4:	4621      	mov	r1, r4
 801f2b6:	4628      	mov	r0, r5
 801f2b8:	bcf0      	pop	{r4, r5, r6, r7}
 801f2ba:	f7ff bee5 	b.w	801f088 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801f2c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801f2c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f2c4:	4681      	mov	r9, r0
 801f2c6:	b093      	sub	sp, #76	@ 0x4c
 801f2c8:	6810      	ldr	r0, [r2, #0]
 801f2ca:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801f2ce:	4f6d      	ldr	r7, [pc, #436]	@ (801f484 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801f2d0:	4688      	mov	r8, r1
 801f2d2:	6851      	ldr	r1, [r2, #4]
 801f2d4:	ac0e      	add	r4, sp, #56	@ 0x38
 801f2d6:	c403      	stmia	r4!, {r0, r1}
 801f2d8:	6818      	ldr	r0, [r3, #0]
 801f2da:	6859      	ldr	r1, [r3, #4]
 801f2dc:	ac10      	add	r4, sp, #64	@ 0x40
 801f2de:	4616      	mov	r6, r2
 801f2e0:	c403      	stmia	r4!, {r0, r1}
 801f2e2:	a80e      	add	r0, sp, #56	@ 0x38
 801f2e4:	f7f6 fdf6 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f2e8:	4631      	mov	r1, r6
 801f2ea:	a810      	add	r0, sp, #64	@ 0x40
 801f2ec:	f7f6 fe1a 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f2f0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801f2f4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801f2f8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801f2fc:	4e62      	ldr	r6, [pc, #392]	@ (801f488 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f2fe:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801f302:	6830      	ldr	r0, [r6, #0]
 801f304:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801f308:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f30c:	4489      	add	r9, r1
 801f30e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801f312:	440a      	add	r2, r1
 801f314:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801f318:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801f31c:	4413      	add	r3, r2
 801f31e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801f322:	6803      	ldr	r3, [r0, #0]
 801f324:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801f326:	4798      	blx	r3
 801f328:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801f32c:	6830      	ldr	r0, [r6, #0]
 801f32e:	d01d      	beq.n	801f36c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801f330:	2200      	movs	r2, #0
 801f332:	6801      	ldr	r1, [r0, #0]
 801f334:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801f338:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f33c:	220b      	movs	r2, #11
 801f33e:	9207      	str	r2, [sp, #28]
 801f340:	883a      	ldrh	r2, [r7, #0]
 801f342:	9206      	str	r2, [sp, #24]
 801f344:	2201      	movs	r2, #1
 801f346:	e9cd a204 	strd	sl, r2, [sp, #16]
 801f34a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801f34e:	9203      	str	r2, [sp, #12]
 801f350:	b2a4      	uxth	r4, r4
 801f352:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801f356:	9200      	str	r2, [sp, #0]
 801f358:	b2ad      	uxth	r5, r5
 801f35a:	9502      	str	r5, [sp, #8]
 801f35c:	9401      	str	r4, [sp, #4]
 801f35e:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801f360:	4642      	mov	r2, r8
 801f362:	4649      	mov	r1, r9
 801f364:	47a0      	blx	r4
 801f366:	b013      	add	sp, #76	@ 0x4c
 801f368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f36c:	6803      	ldr	r3, [r0, #0]
 801f36e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f370:	4798      	blx	r3
 801f372:	883b      	ldrh	r3, [r7, #0]
 801f374:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801f378:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801f37c:	fb03 1202 	mla	r2, r3, r2, r1
 801f380:	435d      	muls	r5, r3
 801f382:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f386:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801f38a:	920c      	str	r2, [sp, #48]	@ 0x30
 801f38c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801f390:	1b12      	subs	r2, r2, r4
 801f392:	920d      	str	r2, [sp, #52]	@ 0x34
 801f394:	0062      	lsls	r2, r4, #1
 801f396:	1b1c      	subs	r4, r3, r4
 801f398:	0063      	lsls	r3, r4, #1
 801f39a:	920a      	str	r2, [sp, #40]	@ 0x28
 801f39c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f39e:	f04f 0e04 	mov.w	lr, #4
 801f3a2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f3a4:	4298      	cmp	r0, r3
 801f3a6:	d266      	bcs.n	801f476 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801f3a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f3aa:	eb00 0b03 	add.w	fp, r0, r3
 801f3ae:	4558      	cmp	r0, fp
 801f3b0:	d25c      	bcs.n	801f46c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801f3b2:	f819 3b01 	ldrb.w	r3, [r9], #1
 801f3b6:	fb1e e303 	smlabb	r3, lr, r3, lr
 801f3ba:	f858 2003 	ldr.w	r2, [r8, r3]
 801f3be:	0e11      	lsrs	r1, r2, #24
 801f3c0:	d012      	beq.n	801f3e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f3c2:	29ff      	cmp	r1, #255	@ 0xff
 801f3c4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801f3c8:	d110      	bne.n	801f3ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f3ca:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801f3ce:	d10d      	bne.n	801f3ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f3d0:	0953      	lsrs	r3, r2, #5
 801f3d2:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801f3d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f3da:	f027 0707 	bic.w	r7, r7, #7
 801f3de:	431f      	orrs	r7, r3
 801f3e0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f3e4:	433a      	orrs	r2, r7
 801f3e6:	8002      	strh	r2, [r0, #0]
 801f3e8:	3002      	adds	r0, #2
 801f3ea:	e7e0      	b.n	801f3ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801f3ec:	fb0a f101 	mul.w	r1, sl, r1
 801f3f0:	8806      	ldrh	r6, [r0, #0]
 801f3f2:	1c4b      	adds	r3, r1, #1
 801f3f4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801f3f8:	1235      	asrs	r5, r6, #8
 801f3fa:	10f4      	asrs	r4, r6, #3
 801f3fc:	121b      	asrs	r3, r3, #8
 801f3fe:	00f6      	lsls	r6, r6, #3
 801f400:	b299      	uxth	r1, r3
 801f402:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801f406:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f40a:	b2f6      	uxtb	r6, r6
 801f40c:	43db      	mvns	r3, r3
 801f40e:	b2d2      	uxtb	r2, r2
 801f410:	b2db      	uxtb	r3, r3
 801f412:	fb1c fc01 	smulbb	ip, ip, r1
 801f416:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801f41a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f41e:	fb12 f201 	smulbb	r2, r2, r1
 801f422:	fb05 c503 	mla	r5, r5, r3, ip
 801f426:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801f42a:	b2ff      	uxtb	r7, r7
 801f42c:	fb06 2203 	mla	r2, r6, r3, r2
 801f430:	b2ad      	uxth	r5, r5
 801f432:	fb17 f701 	smulbb	r7, r7, r1
 801f436:	b292      	uxth	r2, r2
 801f438:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801f43c:	fb04 7403 	mla	r4, r4, r3, r7
 801f440:	f105 0c01 	add.w	ip, r5, #1
 801f444:	1c57      	adds	r7, r2, #1
 801f446:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f44a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f44e:	b2a4      	uxth	r4, r4
 801f450:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f454:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f458:	433d      	orrs	r5, r7
 801f45a:	1c67      	adds	r7, r4, #1
 801f45c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801f460:	0964      	lsrs	r4, r4, #5
 801f462:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f466:	4325      	orrs	r5, r4
 801f468:	8005      	strh	r5, [r0, #0]
 801f46a:	e7bd      	b.n	801f3e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f46c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f46e:	4418      	add	r0, r3
 801f470:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f472:	4499      	add	r9, r3
 801f474:	e795      	b.n	801f3a2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801f476:	4b04      	ldr	r3, [pc, #16]	@ (801f488 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f478:	6818      	ldr	r0, [r3, #0]
 801f47a:	6803      	ldr	r3, [r0, #0]
 801f47c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f47e:	4798      	blx	r3
 801f480:	e771      	b.n	801f366 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801f482:	bf00      	nop
 801f484:	20013f5a 	.word	0x20013f5a
 801f488:	20013f60 	.word	0x20013f60

0801f48c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801f48c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f490:	b087      	sub	sp, #28
 801f492:	4680      	mov	r8, r0
 801f494:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801f498:	460d      	mov	r5, r1
 801f49a:	4614      	mov	r4, r2
 801f49c:	2e00      	cmp	r6, #0
 801f49e:	f000 80b9 	beq.w	801f614 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801f4a2:	6810      	ldr	r0, [r2, #0]
 801f4a4:	6851      	ldr	r1, [r2, #4]
 801f4a6:	af02      	add	r7, sp, #8
 801f4a8:	c703      	stmia	r7!, {r0, r1}
 801f4aa:	6818      	ldr	r0, [r3, #0]
 801f4ac:	6859      	ldr	r1, [r3, #4]
 801f4ae:	af04      	add	r7, sp, #16
 801f4b0:	c703      	stmia	r7!, {r0, r1}
 801f4b2:	a802      	add	r0, sp, #8
 801f4b4:	f7f6 fd0e 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f4b8:	4621      	mov	r1, r4
 801f4ba:	a804      	add	r0, sp, #16
 801f4bc:	f7f6 fd32 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f4c0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f4c4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f4c8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801f4cc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801f4d0:	fb14 2103 	smlabb	r1, r4, r3, r2
 801f4d4:	eb08 0401 	add.w	r4, r8, r1
 801f4d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f4dc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f4e0:	440a      	add	r2, r1
 801f4e2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f4e6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f4ea:	4413      	add	r3, r2
 801f4ec:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f4f0:	4b4a      	ldr	r3, [pc, #296]	@ (801f61c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f4f2:	6818      	ldr	r0, [r3, #0]
 801f4f4:	6803      	ldr	r3, [r0, #0]
 801f4f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f4f8:	4798      	blx	r3
 801f4fa:	4b49      	ldr	r3, [pc, #292]	@ (801f620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801f4fc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801f500:	881a      	ldrh	r2, [r3, #0]
 801f502:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801f506:	2eff      	cmp	r6, #255	@ 0xff
 801f508:	fb02 c101 	mla	r1, r2, r1, ip
 801f50c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f510:	fb02 f207 	mul.w	r2, r2, r7
 801f514:	f105 0104 	add.w	r1, r5, #4
 801f518:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801f51c:	461d      	mov	r5, r3
 801f51e:	d05a      	beq.n	801f5d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801f520:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801f524:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f528:	b2b6      	uxth	r6, r6
 801f52a:	fa1f fe8e 	uxth.w	lr, lr
 801f52e:	9301      	str	r3, [sp, #4]
 801f530:	4282      	cmp	r2, r0
 801f532:	d96a      	bls.n	801f60a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f534:	eb00 0b0a 	add.w	fp, r0, sl
 801f538:	4583      	cmp	fp, r0
 801f53a:	d940      	bls.n	801f5be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801f53c:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f540:	8805      	ldrh	r5, [r0, #0]
 801f542:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f546:	122f      	asrs	r7, r5, #8
 801f548:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f54c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f550:	fb17 f70e 	smulbb	r7, r7, lr
 801f554:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801f558:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f55c:	00ed      	lsls	r5, r5, #3
 801f55e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801f562:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801f566:	10df      	asrs	r7, r3, #3
 801f568:	b2ed      	uxtb	r5, r5
 801f56a:	00db      	lsls	r3, r3, #3
 801f56c:	fa1f fc8c 	uxth.w	ip, ip
 801f570:	fb19 f90e 	smulbb	r9, r9, lr
 801f574:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f578:	b2db      	uxtb	r3, r3
 801f57a:	fb15 f50e 	smulbb	r5, r5, lr
 801f57e:	fb07 9706 	mla	r7, r7, r6, r9
 801f582:	fb03 5306 	mla	r3, r3, r6, r5
 801f586:	f10c 0901 	add.w	r9, ip, #1
 801f58a:	b29b      	uxth	r3, r3
 801f58c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801f590:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801f594:	f103 0c01 	add.w	ip, r3, #1
 801f598:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f59c:	b2bf      	uxth	r7, r7
 801f59e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f5a2:	ea4c 0c09 	orr.w	ip, ip, r9
 801f5a6:	f107 0901 	add.w	r9, r7, #1
 801f5aa:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801f5ae:	097f      	lsrs	r7, r7, #5
 801f5b0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f5b4:	ea4c 0c07 	orr.w	ip, ip, r7
 801f5b8:	f820 cb02 	strh.w	ip, [r0], #2
 801f5bc:	e7bc      	b.n	801f538 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801f5be:	9b01      	ldr	r3, [sp, #4]
 801f5c0:	881b      	ldrh	r3, [r3, #0]
 801f5c2:	eba3 0308 	sub.w	r3, r3, r8
 801f5c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f5ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f5ce:	eba3 0308 	sub.w	r3, r3, r8
 801f5d2:	441c      	add	r4, r3
 801f5d4:	e7ac      	b.n	801f530 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801f5d6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f5da:	4282      	cmp	r2, r0
 801f5dc:	d915      	bls.n	801f60a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f5de:	eb00 060a 	add.w	r6, r0, sl
 801f5e2:	4286      	cmp	r6, r0
 801f5e4:	d906      	bls.n	801f5f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801f5e6:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f5ea:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f5ee:	f820 3b02 	strh.w	r3, [r0], #2
 801f5f2:	e7f6      	b.n	801f5e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801f5f4:	882b      	ldrh	r3, [r5, #0]
 801f5f6:	eba3 0308 	sub.w	r3, r3, r8
 801f5fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f5fe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f602:	eba3 0308 	sub.w	r3, r3, r8
 801f606:	441c      	add	r4, r3
 801f608:	e7e7      	b.n	801f5da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801f60a:	4b04      	ldr	r3, [pc, #16]	@ (801f61c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f60c:	6818      	ldr	r0, [r3, #0]
 801f60e:	6803      	ldr	r3, [r0, #0]
 801f610:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f612:	4798      	blx	r3
 801f614:	b007      	add	sp, #28
 801f616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f61a:	bf00      	nop
 801f61c:	20013f60 	.word	0x20013f60
 801f620:	20013f5a 	.word	0x20013f5a

0801f624 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801f624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f628:	b091      	sub	sp, #68	@ 0x44
 801f62a:	4680      	mov	r8, r0
 801f62c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801f630:	460f      	mov	r7, r1
 801f632:	4614      	mov	r4, r2
 801f634:	2d00      	cmp	r5, #0
 801f636:	d051      	beq.n	801f6dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f638:	6810      	ldr	r0, [r2, #0]
 801f63a:	6851      	ldr	r1, [r2, #4]
 801f63c:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801f840 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801f640:	ae0c      	add	r6, sp, #48	@ 0x30
 801f642:	c603      	stmia	r6!, {r0, r1}
 801f644:	6818      	ldr	r0, [r3, #0]
 801f646:	6859      	ldr	r1, [r3, #4]
 801f648:	ae0e      	add	r6, sp, #56	@ 0x38
 801f64a:	c603      	stmia	r6!, {r0, r1}
 801f64c:	a80c      	add	r0, sp, #48	@ 0x30
 801f64e:	f7f6 fc41 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f652:	4621      	mov	r1, r4
 801f654:	a80e      	add	r0, sp, #56	@ 0x38
 801f656:	f7f6 fc65 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f65a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801f65e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801f662:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801f666:	f8d9 0000 	ldr.w	r0, [r9]
 801f66a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801f66e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801f672:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f676:	eb08 0401 	add.w	r4, r8, r1
 801f67a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801f67e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801f844 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801f682:	440a      	add	r2, r1
 801f684:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801f688:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801f68c:	4413      	add	r3, r2
 801f68e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801f692:	6803      	ldr	r3, [r0, #0]
 801f694:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801f696:	4798      	blx	r3
 801f698:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801f69c:	f8d9 0000 	ldr.w	r0, [r9]
 801f6a0:	d01f      	beq.n	801f6e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801f6a2:	2200      	movs	r2, #0
 801f6a4:	6801      	ldr	r1, [r0, #0]
 801f6a6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801f6aa:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f6ae:	220b      	movs	r2, #11
 801f6b0:	9207      	str	r2, [sp, #28]
 801f6b2:	f8b8 2000 	ldrh.w	r2, [r8]
 801f6b6:	9206      	str	r2, [sp, #24]
 801f6b8:	2201      	movs	r2, #1
 801f6ba:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801f6be:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801f6c2:	9203      	str	r2, [sp, #12]
 801f6c4:	fa1f f28a 	uxth.w	r2, sl
 801f6c8:	9202      	str	r2, [sp, #8]
 801f6ca:	b2b6      	uxth	r6, r6
 801f6cc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801f6d0:	9200      	str	r2, [sp, #0]
 801f6d2:	9601      	str	r6, [sp, #4]
 801f6d4:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801f6d6:	463a      	mov	r2, r7
 801f6d8:	4621      	mov	r1, r4
 801f6da:	47a8      	blx	r5
 801f6dc:	b011      	add	sp, #68	@ 0x44
 801f6de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f6e2:	6803      	ldr	r3, [r0, #0]
 801f6e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f6e6:	4798      	blx	r3
 801f6e8:	f8b8 2000 	ldrh.w	r2, [r8]
 801f6ec:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801f6f0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801f6f4:	2dff      	cmp	r5, #255	@ 0xff
 801f6f6:	fb02 1303 	mla	r3, r2, r3, r1
 801f6fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f6fe:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801f702:	fb0a fa02 	mul.w	sl, sl, r2
 801f706:	d062      	beq.n	801f7ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801f708:	ea6f 0c05 	mvn.w	ip, r5
 801f70c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801f710:	930a      	str	r3, [sp, #40]	@ 0x28
 801f712:	b2ad      	uxth	r5, r5
 801f714:	fa5f fc8c 	uxtb.w	ip, ip
 801f718:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801f71c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f71e:	4298      	cmp	r0, r3
 801f720:	f080 8085 	bcs.w	801f82e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f724:	eb00 0b09 	add.w	fp, r0, r9
 801f728:	4558      	cmp	r0, fp
 801f72a:	d246      	bcs.n	801f7ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801f72c:	f814 eb01 	ldrb.w	lr, [r4], #1
 801f730:	2303      	movs	r3, #3
 801f732:	2204      	movs	r2, #4
 801f734:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801f738:	eb07 0a0e 	add.w	sl, r7, lr
 801f73c:	8803      	ldrh	r3, [r0, #0]
 801f73e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801f742:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f746:	1219      	asrs	r1, r3, #8
 801f748:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f74c:	fb18 f805 	smulbb	r8, r8, r5
 801f750:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801f754:	10da      	asrs	r2, r3, #3
 801f756:	fb01 810c 	mla	r1, r1, ip, r8
 801f75a:	00db      	lsls	r3, r3, #3
 801f75c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f760:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f764:	b2db      	uxtb	r3, r3
 801f766:	fb18 f805 	smulbb	r8, r8, r5
 801f76a:	fb1e fe05 	smulbb	lr, lr, r5
 801f76e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801f772:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801f776:	b289      	uxth	r1, r1
 801f778:	fb02 820c 	mla	r2, r2, ip, r8
 801f77c:	fb03 e30c 	mla	r3, r3, ip, lr
 801f780:	b292      	uxth	r2, r2
 801f782:	b29b      	uxth	r3, r3
 801f784:	f101 0801 	add.w	r8, r1, #1
 801f788:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801f78c:	f103 0e01 	add.w	lr, r3, #1
 801f790:	f102 0801 	add.w	r8, r2, #1
 801f794:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801f798:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801f79c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801f7a0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f7a4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801f7a8:	ea4e 0101 	orr.w	r1, lr, r1
 801f7ac:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801f7b0:	ea41 0108 	orr.w	r1, r1, r8
 801f7b4:	f820 1b02 	strh.w	r1, [r0], #2
 801f7b8:	e7b6      	b.n	801f728 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801f7ba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f7bc:	881b      	ldrh	r3, [r3, #0]
 801f7be:	1b9b      	subs	r3, r3, r6
 801f7c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f7c4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801f7c8:	1b9b      	subs	r3, r3, r6
 801f7ca:	441c      	add	r4, r3
 801f7cc:	e7a6      	b.n	801f71c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801f7ce:	491b      	ldr	r1, [pc, #108]	@ (801f83c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801f7d0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801f7d4:	2203      	movs	r2, #3
 801f7d6:	2504      	movs	r5, #4
 801f7d8:	4550      	cmp	r0, sl
 801f7da:	d228      	bcs.n	801f82e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f7dc:	eb00 0c09 	add.w	ip, r0, r9
 801f7e0:	4560      	cmp	r0, ip
 801f7e2:	4623      	mov	r3, r4
 801f7e4:	d219      	bcs.n	801f81a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801f7e6:	f893 e000 	ldrb.w	lr, [r3]
 801f7ea:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801f7ee:	eb07 0b0e 	add.w	fp, r7, lr
 801f7f2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f7f6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801f7fa:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f7fe:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801f802:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801f806:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801f80a:	ea43 030b 	orr.w	r3, r3, fp
 801f80e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801f812:	3401      	adds	r4, #1
 801f814:	f820 3b02 	strh.w	r3, [r0], #2
 801f818:	e7e2      	b.n	801f7e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801f81a:	f8b8 3000 	ldrh.w	r3, [r8]
 801f81e:	1b9b      	subs	r3, r3, r6
 801f820:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f824:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801f828:	1b9b      	subs	r3, r3, r6
 801f82a:	441c      	add	r4, r3
 801f82c:	e7d4      	b.n	801f7d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801f82e:	4b04      	ldr	r3, [pc, #16]	@ (801f840 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801f830:	6818      	ldr	r0, [r3, #0]
 801f832:	6803      	ldr	r3, [r0, #0]
 801f834:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f836:	4798      	blx	r3
 801f838:	e750      	b.n	801f6dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f83a:	bf00      	nop
 801f83c:	fffff800 	.word	0xfffff800
 801f840:	20013f60 	.word	0x20013f60
 801f844:	20013f5a 	.word	0x20013f5a

0801f848 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801f848:	b4f0      	push	{r4, r5, r6, r7}
 801f84a:	460c      	mov	r4, r1
 801f84c:	4611      	mov	r1, r2
 801f84e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f852:	780f      	ldrb	r7, [r1, #0]
 801f854:	784e      	ldrb	r6, [r1, #1]
 801f856:	2f01      	cmp	r7, #1
 801f858:	461a      	mov	r2, r3
 801f85a:	9b04      	ldr	r3, [sp, #16]
 801f85c:	d038      	beq.n	801f8d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801f85e:	d31f      	bcc.n	801f8a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801f860:	2f02      	cmp	r7, #2
 801f862:	d14d      	bne.n	801f900 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801f864:	2e03      	cmp	r6, #3
 801f866:	d84b      	bhi.n	801f900 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801f868:	e8df f006 	tbb	[pc, r6]
 801f86c:	17140702 	.word	0x17140702
 801f870:	9504      	str	r5, [sp, #16]
 801f872:	4620      	mov	r0, r4
 801f874:	bcf0      	pop	{r4, r5, r6, r7}
 801f876:	f7ff be09 	b.w	801f48c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801f87a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801f87c:	2800      	cmp	r0, #0
 801f87e:	d03f      	beq.n	801f900 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801f880:	6806      	ldr	r6, [r0, #0]
 801f882:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f886:	68b5      	ldr	r5, [r6, #8]
 801f888:	4613      	mov	r3, r2
 801f88a:	46ac      	mov	ip, r5
 801f88c:	460a      	mov	r2, r1
 801f88e:	4621      	mov	r1, r4
 801f890:	bcf0      	pop	{r4, r5, r6, r7}
 801f892:	4760      	bx	ip
 801f894:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801f898:	e7f0      	b.n	801f87c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f89a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801f89e:	e7ed      	b.n	801f87c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f8a0:	2e03      	cmp	r6, #3
 801f8a2:	d82d      	bhi.n	801f900 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801f8a4:	e8df f006 	tbb	[pc, r6]
 801f8a8:	110e0702 	.word	0x110e0702
 801f8ac:	9504      	str	r5, [sp, #16]
 801f8ae:	4620      	mov	r0, r4
 801f8b0:	bcf0      	pop	{r4, r5, r6, r7}
 801f8b2:	f7ff bd05 	b.w	801f2c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801f8b6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801f8b8:	b310      	cbz	r0, 801f900 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801f8ba:	6806      	ldr	r6, [r0, #0]
 801f8bc:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f8c0:	68f5      	ldr	r5, [r6, #12]
 801f8c2:	e7e1      	b.n	801f888 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f8c4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801f8c8:	e7f6      	b.n	801f8b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801f8ca:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801f8ce:	e7f3      	b.n	801f8b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801f8d0:	2e03      	cmp	r6, #3
 801f8d2:	d815      	bhi.n	801f900 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801f8d4:	e8df f006 	tbb	[pc, r6]
 801f8d8:	110e0702 	.word	0x110e0702
 801f8dc:	9504      	str	r5, [sp, #16]
 801f8de:	4620      	mov	r0, r4
 801f8e0:	bcf0      	pop	{r4, r5, r6, r7}
 801f8e2:	f7ff be9f 	b.w	801f624 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801f8e6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801f8e8:	b150      	cbz	r0, 801f900 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801f8ea:	6806      	ldr	r6, [r0, #0]
 801f8ec:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f8f0:	6935      	ldr	r5, [r6, #16]
 801f8f2:	e7c9      	b.n	801f888 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f8f4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801f8f8:	e7f6      	b.n	801f8e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801f8fa:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801f8fe:	e7f3      	b.n	801f8e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801f900:	bcf0      	pop	{r4, r5, r6, r7}
 801f902:	4770      	bx	lr

0801f904 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801f904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f908:	4604      	mov	r4, r0
 801f90a:	b087      	sub	sp, #28
 801f90c:	6810      	ldr	r0, [r2, #0]
 801f90e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801f912:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801fb4c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801f916:	460e      	mov	r6, r1
 801f918:	6851      	ldr	r1, [r2, #4]
 801f91a:	ad02      	add	r5, sp, #8
 801f91c:	c503      	stmia	r5!, {r0, r1}
 801f91e:	6818      	ldr	r0, [r3, #0]
 801f920:	6859      	ldr	r1, [r3, #4]
 801f922:	ad04      	add	r5, sp, #16
 801f924:	4617      	mov	r7, r2
 801f926:	c503      	stmia	r5!, {r0, r1}
 801f928:	a802      	add	r0, sp, #8
 801f92a:	f7f6 fad3 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f92e:	4639      	mov	r1, r7
 801f930:	a804      	add	r0, sp, #16
 801f932:	f7f6 faf7 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f936:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f93a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f93e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801f942:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f946:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801f94a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f94e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801f952:	440e      	add	r6, r1
 801f954:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f958:	440a      	add	r2, r1
 801f95a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f95e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f962:	4413      	add	r3, r2
 801f964:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f968:	4b77      	ldr	r3, [pc, #476]	@ (801fb48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f96a:	6818      	ldr	r0, [r3, #0]
 801f96c:	6803      	ldr	r3, [r0, #0]
 801f96e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f970:	4798      	blx	r3
 801f972:	f8b9 b000 	ldrh.w	fp, [r9]
 801f976:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f97a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f97e:	fb0b 2303 	mla	r3, fp, r3, r2
 801f982:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f986:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801f98a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f98e:	fb05 f50b 	mul.w	r5, r5, fp
 801f992:	9300      	str	r3, [sp, #0]
 801f994:	d069      	beq.n	801fa6a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801f996:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801f99a:	4558      	cmp	r0, fp
 801f99c:	f080 80cc 	bcs.w	801fb38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f9a0:	9b00      	ldr	r3, [sp, #0]
 801f9a2:	18c3      	adds	r3, r0, r3
 801f9a4:	9301      	str	r3, [sp, #4]
 801f9a6:	4631      	mov	r1, r6
 801f9a8:	9b01      	ldr	r3, [sp, #4]
 801f9aa:	4298      	cmp	r0, r3
 801f9ac:	d24f      	bcs.n	801fa4e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801f9ae:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f9b2:	2a00      	cmp	r2, #0
 801f9b4:	d048      	beq.n	801fa48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f9b6:	fb0a f202 	mul.w	r2, sl, r2
 801f9ba:	1c53      	adds	r3, r2, #1
 801f9bc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9c0:	121b      	asrs	r3, r3, #8
 801f9c2:	d041      	beq.n	801fa48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f9c4:	8802      	ldrh	r2, [r0, #0]
 801f9c6:	f8b4 c000 	ldrh.w	ip, [r4]
 801f9ca:	b29e      	uxth	r6, r3
 801f9cc:	1215      	asrs	r5, r2, #8
 801f9ce:	43db      	mvns	r3, r3
 801f9d0:	b2db      	uxtb	r3, r3
 801f9d2:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f9d6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f9da:	fb15 f503 	smulbb	r5, r5, r3
 801f9de:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f9e2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f9e6:	00d2      	lsls	r2, r2, #3
 801f9e8:	fb07 5706 	mla	r7, r7, r6, r5
 801f9ec:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801f9f0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f9f4:	b2d2      	uxtb	r2, r2
 801f9f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f9fa:	b2bf      	uxth	r7, r7
 801f9fc:	fb1e fe03 	smulbb	lr, lr, r3
 801fa00:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801fa04:	fa5f fc8c 	uxtb.w	ip, ip
 801fa08:	fb12 f203 	smulbb	r2, r2, r3
 801fa0c:	fb05 e506 	mla	r5, r5, r6, lr
 801fa10:	fb0c 2c06 	mla	ip, ip, r6, r2
 801fa14:	f107 0e01 	add.w	lr, r7, #1
 801fa18:	fa1f fc8c 	uxth.w	ip, ip
 801fa1c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801fa20:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801fa24:	f10c 0701 	add.w	r7, ip, #1
 801fa28:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801fa2c:	b2ad      	uxth	r5, r5
 801fa2e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fa32:	ea47 070e 	orr.w	r7, r7, lr
 801fa36:	f105 0e01 	add.w	lr, r5, #1
 801fa3a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801fa3e:	096d      	lsrs	r5, r5, #5
 801fa40:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fa44:	432f      	orrs	r7, r5
 801fa46:	8007      	strh	r7, [r0, #0]
 801fa48:	3002      	adds	r0, #2
 801fa4a:	3402      	adds	r4, #2
 801fa4c:	e7ac      	b.n	801f9a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801fa4e:	f8b9 3000 	ldrh.w	r3, [r9]
 801fa52:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801fa56:	eba3 0308 	sub.w	r3, r3, r8
 801fa5a:	eba6 0608 	sub.w	r6, r6, r8
 801fa5e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801fa62:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fa66:	440e      	add	r6, r1
 801fa68:	e797      	b.n	801f99a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801fa6a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801fa6e:	42a8      	cmp	r0, r5
 801fa70:	d262      	bcs.n	801fb38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801fa72:	9b00      	ldr	r3, [sp, #0]
 801fa74:	4631      	mov	r1, r6
 801fa76:	eb00 0b03 	add.w	fp, r0, r3
 801fa7a:	4558      	cmp	r0, fp
 801fa7c:	d24e      	bcs.n	801fb1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801fa7e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801fa82:	b12b      	cbz	r3, 801fa90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801fa84:	2bff      	cmp	r3, #255	@ 0xff
 801fa86:	f8b4 e000 	ldrh.w	lr, [r4]
 801fa8a:	d104      	bne.n	801fa96 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801fa8c:	f8a0 e000 	strh.w	lr, [r0]
 801fa90:	3002      	adds	r0, #2
 801fa92:	3402      	adds	r4, #2
 801fa94:	e7f1      	b.n	801fa7a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801fa96:	8802      	ldrh	r2, [r0, #0]
 801fa98:	b29f      	uxth	r7, r3
 801fa9a:	1216      	asrs	r6, r2, #8
 801fa9c:	43db      	mvns	r3, r3
 801fa9e:	b2db      	uxtb	r3, r3
 801faa0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801faa4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801faa8:	fb16 f603 	smulbb	r6, r6, r3
 801faac:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801fab0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fab4:	00d2      	lsls	r2, r2, #3
 801fab6:	fb0c 6c07 	mla	ip, ip, r7, r6
 801faba:	b2d2      	uxtb	r2, r2
 801fabc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801fac0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801fac4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fac8:	fb1a fa03 	smulbb	sl, sl, r3
 801facc:	fa1f fc8c 	uxth.w	ip, ip
 801fad0:	fb12 f303 	smulbb	r3, r2, r3
 801fad4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801fad8:	fa5f fe8e 	uxtb.w	lr, lr
 801fadc:	fb06 a607 	mla	r6, r6, r7, sl
 801fae0:	f10c 0201 	add.w	r2, ip, #1
 801fae4:	fb0e 3307 	mla	r3, lr, r7, r3
 801fae8:	b2b6      	uxth	r6, r6
 801faea:	b29b      	uxth	r3, r3
 801faec:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801faf0:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801faf4:	f106 0a01 	add.w	sl, r6, #1
 801faf8:	f103 0c01 	add.w	ip, r3, #1
 801fafc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801fb00:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801fb04:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fb08:	0976      	lsrs	r6, r6, #5
 801fb0a:	ea4c 0c02 	orr.w	ip, ip, r2
 801fb0e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801fb12:	ea4c 0c06 	orr.w	ip, ip, r6
 801fb16:	f8a0 c000 	strh.w	ip, [r0]
 801fb1a:	e7b9      	b.n	801fa90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801fb1c:	f8b9 3000 	ldrh.w	r3, [r9]
 801fb20:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801fb24:	eba3 0308 	sub.w	r3, r3, r8
 801fb28:	eba6 0608 	sub.w	r6, r6, r8
 801fb2c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801fb30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fb34:	440e      	add	r6, r1
 801fb36:	e79a      	b.n	801fa6e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801fb38:	4b03      	ldr	r3, [pc, #12]	@ (801fb48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801fb3a:	6818      	ldr	r0, [r3, #0]
 801fb3c:	6803      	ldr	r3, [r0, #0]
 801fb3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801fb40:	4798      	blx	r3
 801fb42:	b007      	add	sp, #28
 801fb44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb48:	20013f60 	.word	0x20013f60
 801fb4c:	20013f5a 	.word	0x20013f5a

0801fb50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801fb50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb54:	b089      	sub	sp, #36	@ 0x24
 801fb56:	4607      	mov	r7, r0
 801fb58:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801fb5c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801fb5e:	4688      	mov	r8, r1
 801fb60:	4692      	mov	sl, r2
 801fb62:	4699      	mov	r9, r3
 801fb64:	2e00      	cmp	r6, #0
 801fb66:	d048      	beq.n	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fb68:	4608      	mov	r0, r1
 801fb6a:	f7fa f81d 	bl	8019ba8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801fb6e:	4605      	mov	r5, r0
 801fb70:	4640      	mov	r0, r8
 801fb72:	f7fa f84d 	bl	8019c10 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801fb76:	f8ad 000e 	strh.w	r0, [sp, #14]
 801fb7a:	4640      	mov	r0, r8
 801fb7c:	f8ad a008 	strh.w	sl, [sp, #8]
 801fb80:	f8ad 500c 	strh.w	r5, [sp, #12]
 801fb84:	f8ad 900a 	strh.w	r9, [sp, #10]
 801fb88:	f7fa f900 	bl	8019d8c <_ZNK8touchgfx6Bitmap7getDataEv>
 801fb8c:	4605      	mov	r5, r0
 801fb8e:	4640      	mov	r0, r8
 801fb90:	f7fa f92c 	bl	8019dec <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801fb94:	4682      	mov	sl, r0
 801fb96:	4640      	mov	r0, r8
 801fb98:	f7fa f97c 	bl	8019e94 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801fb9c:	2810      	cmp	r0, #16
 801fb9e:	d82c      	bhi.n	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fba0:	e8df f010 	tbh	[pc, r0, lsl #1]
 801fba4:	00ba00ca 	.word	0x00ba00ca
 801fba8:	002b0011 	.word	0x002b0011
 801fbac:	002b002b 	.word	0x002b002b
 801fbb0:	002b002b 	.word	0x002b002b
 801fbb4:	002b002b 	.word	0x002b002b
 801fbb8:	00c1002b 	.word	0x00c1002b
 801fbbc:	002b002b 	.word	0x002b002b
 801fbc0:	002b0180 	.word	0x002b0180
 801fbc4:	0173      	.short	0x0173
 801fbc6:	4bbc      	ldr	r3, [pc, #752]	@ (801feb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801fbc8:	6818      	ldr	r0, [r3, #0]
 801fbca:	6803      	ldr	r3, [r0, #0]
 801fbcc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801fbce:	4798      	blx	r3
 801fbd0:	2eff      	cmp	r6, #255	@ 0xff
 801fbd2:	d101      	bne.n	801fbd8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801fbd4:	0683      	lsls	r3, r0, #26
 801fbd6:	d506      	bpl.n	801fbe6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801fbd8:	4633      	mov	r3, r6
 801fbda:	4622      	mov	r2, r4
 801fbdc:	a902      	add	r1, sp, #8
 801fbde:	4628      	mov	r0, r5
 801fbe0:	f7ff f8fc 	bl	801eddc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fbe4:	e009      	b.n	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fbe6:	4640      	mov	r0, r8
 801fbe8:	f7fa f898 	bl	8019d1c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801fbec:	b940      	cbnz	r0, 801fc00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801fbee:	4623      	mov	r3, r4
 801fbf0:	aa02      	add	r2, sp, #8
 801fbf2:	4629      	mov	r1, r5
 801fbf4:	4638      	mov	r0, r7
 801fbf6:	f7ff f9d7 	bl	801efa8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801fbfa:	b009      	add	sp, #36	@ 0x24
 801fbfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc00:	f10d 0918 	add.w	r9, sp, #24
 801fc04:	4641      	mov	r1, r8
 801fc06:	4648      	mov	r0, r9
 801fc08:	f7fa f836 	bl	8019c78 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801fc0c:	e899 0003 	ldmia.w	r9, {r0, r1}
 801fc10:	f10d 0810 	add.w	r8, sp, #16
 801fc14:	e888 0003 	stmia.w	r8, {r0, r1}
 801fc18:	4640      	mov	r0, r8
 801fc1a:	4621      	mov	r1, r4
 801fc1c:	f7ef fbee 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 801fc20:	4640      	mov	r0, r8
 801fc22:	f7ef fc2e 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 801fc26:	2800      	cmp	r0, #0
 801fc28:	d1d6      	bne.n	801fbd8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801fc2a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801fc2e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fc32:	4293      	cmp	r3, r2
 801fc34:	dd12      	ble.n	801fc5c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801fc36:	1a9b      	subs	r3, r3, r2
 801fc38:	f9b4 0000 	ldrsh.w	r0, [r4]
 801fc3c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fc40:	f8ad 0018 	strh.w	r0, [sp, #24]
 801fc44:	f8ad 201a 	strh.w	r2, [sp, #26]
 801fc48:	f8ad 101c 	strh.w	r1, [sp, #28]
 801fc4c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fc50:	464a      	mov	r2, r9
 801fc52:	4633      	mov	r3, r6
 801fc54:	a902      	add	r1, sp, #8
 801fc56:	4628      	mov	r0, r5
 801fc58:	f7ff f8c0 	bl	801eddc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fc5c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801fc60:	f9b4 2000 	ldrsh.w	r2, [r4]
 801fc64:	4293      	cmp	r3, r2
 801fc66:	dd12      	ble.n	801fc8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801fc68:	1a9b      	subs	r3, r3, r2
 801fc6a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801fc6e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801fc72:	f8ad 2018 	strh.w	r2, [sp, #24]
 801fc76:	f8ad 001a 	strh.w	r0, [sp, #26]
 801fc7a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fc7e:	f8ad 101e 	strh.w	r1, [sp, #30]
 801fc82:	23ff      	movs	r3, #255	@ 0xff
 801fc84:	464a      	mov	r2, r9
 801fc86:	a902      	add	r1, sp, #8
 801fc88:	4628      	mov	r0, r5
 801fc8a:	f7ff f8a7 	bl	801eddc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fc8e:	4643      	mov	r3, r8
 801fc90:	aa02      	add	r2, sp, #8
 801fc92:	4629      	mov	r1, r5
 801fc94:	4638      	mov	r0, r7
 801fc96:	f7ff f987 	bl	801efa8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801fc9a:	88a2      	ldrh	r2, [r4, #4]
 801fc9c:	8823      	ldrh	r3, [r4, #0]
 801fc9e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801fca2:	4413      	add	r3, r2
 801fca4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fca8:	440a      	add	r2, r1
 801fcaa:	b29b      	uxth	r3, r3
 801fcac:	b292      	uxth	r2, r2
 801fcae:	b211      	sxth	r1, r2
 801fcb0:	b218      	sxth	r0, r3
 801fcb2:	4288      	cmp	r0, r1
 801fcb4:	dd12      	ble.n	801fcdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801fcb6:	1a9b      	subs	r3, r3, r2
 801fcb8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801fcbc:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801fcc0:	f8ad 1018 	strh.w	r1, [sp, #24]
 801fcc4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fcc8:	f8ad 001e 	strh.w	r0, [sp, #30]
 801fccc:	23ff      	movs	r3, #255	@ 0xff
 801fcce:	464a      	mov	r2, r9
 801fcd0:	a902      	add	r1, sp, #8
 801fcd2:	4628      	mov	r0, r5
 801fcd4:	f8ad 601a 	strh.w	r6, [sp, #26]
 801fcd8:	f7ff f880 	bl	801eddc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fcdc:	88e2      	ldrh	r2, [r4, #6]
 801fcde:	8863      	ldrh	r3, [r4, #2]
 801fce0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fce4:	4413      	add	r3, r2
 801fce6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fcea:	440a      	add	r2, r1
 801fcec:	b29b      	uxth	r3, r3
 801fcee:	b292      	uxth	r2, r2
 801fcf0:	b211      	sxth	r1, r2
 801fcf2:	b218      	sxth	r0, r3
 801fcf4:	4288      	cmp	r0, r1
 801fcf6:	dd80      	ble.n	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fcf8:	1a9b      	subs	r3, r3, r2
 801fcfa:	f9b4 6000 	ldrsh.w	r6, [r4]
 801fcfe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fd02:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fd06:	f8ad 6018 	strh.w	r6, [sp, #24]
 801fd0a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fd0e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fd12:	23ff      	movs	r3, #255	@ 0xff
 801fd14:	464a      	mov	r2, r9
 801fd16:	e761      	b.n	801fbdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801fd18:	4633      	mov	r3, r6
 801fd1a:	4622      	mov	r2, r4
 801fd1c:	a902      	add	r1, sp, #8
 801fd1e:	4628      	mov	r0, r5
 801fd20:	f7ff f9b2 	bl	801f088 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801fd24:	e769      	b.n	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fd26:	e9cd 4600 	strd	r4, r6, [sp]
 801fd2a:	ab02      	add	r3, sp, #8
 801fd2c:	4652      	mov	r2, sl
 801fd2e:	4629      	mov	r1, r5
 801fd30:	4638      	mov	r0, r7
 801fd32:	f7ff fd89 	bl	801f848 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801fd36:	e760      	b.n	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fd38:	4640      	mov	r0, r8
 801fd3a:	f7f9 ffef 	bl	8019d1c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801fd3e:	b948      	cbnz	r0, 801fd54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801fd40:	683b      	ldr	r3, [r7, #0]
 801fd42:	e9cd 6000 	strd	r6, r0, [sp]
 801fd46:	aa02      	add	r2, sp, #8
 801fd48:	68de      	ldr	r6, [r3, #12]
 801fd4a:	4629      	mov	r1, r5
 801fd4c:	4623      	mov	r3, r4
 801fd4e:	4638      	mov	r0, r7
 801fd50:	47b0      	blx	r6
 801fd52:	e752      	b.n	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fd54:	f10d 0918 	add.w	r9, sp, #24
 801fd58:	4641      	mov	r1, r8
 801fd5a:	4648      	mov	r0, r9
 801fd5c:	f7f9 ff8c 	bl	8019c78 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801fd60:	e899 0003 	ldmia.w	r9, {r0, r1}
 801fd64:	f10d 0810 	add.w	r8, sp, #16
 801fd68:	e888 0003 	stmia.w	r8, {r0, r1}
 801fd6c:	4640      	mov	r0, r8
 801fd6e:	4621      	mov	r1, r4
 801fd70:	f7ef fb44 	bl	800f3fc <_ZN8touchgfx4RectaNERKS0_>
 801fd74:	4640      	mov	r0, r8
 801fd76:	f7ef fb84 	bl	800f482 <_ZNK8touchgfx4Rect7isEmptyEv>
 801fd7a:	b138      	cbz	r0, 801fd8c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801fd7c:	9600      	str	r6, [sp, #0]
 801fd7e:	4623      	mov	r3, r4
 801fd80:	aa02      	add	r2, sp, #8
 801fd82:	4651      	mov	r1, sl
 801fd84:	4628      	mov	r0, r5
 801fd86:	f7ff fdbd 	bl	801f904 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fd8a:	e736      	b.n	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fd8c:	683b      	ldr	r3, [r7, #0]
 801fd8e:	e9cd 6000 	strd	r6, r0, [sp]
 801fd92:	aa02      	add	r2, sp, #8
 801fd94:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801fd98:	4629      	mov	r1, r5
 801fd9a:	4643      	mov	r3, r8
 801fd9c:	4638      	mov	r0, r7
 801fd9e:	47d8      	blx	fp
 801fda0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801fda4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fda8:	4293      	cmp	r3, r2
 801fdaa:	dd13      	ble.n	801fdd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801fdac:	f9b4 0000 	ldrsh.w	r0, [r4]
 801fdb0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fdb4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801fdb8:	1a9b      	subs	r3, r3, r2
 801fdba:	f8ad 201a 	strh.w	r2, [sp, #26]
 801fdbe:	f8ad 101c 	strh.w	r1, [sp, #28]
 801fdc2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fdc6:	9600      	str	r6, [sp, #0]
 801fdc8:	464b      	mov	r3, r9
 801fdca:	aa02      	add	r2, sp, #8
 801fdcc:	4651      	mov	r1, sl
 801fdce:	4628      	mov	r0, r5
 801fdd0:	f7ff fd98 	bl	801f904 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fdd4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801fdd8:	f9b4 2000 	ldrsh.w	r2, [r4]
 801fddc:	4293      	cmp	r3, r2
 801fdde:	dd13      	ble.n	801fe08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801fde0:	1a9b      	subs	r3, r3, r2
 801fde2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801fde6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801fdea:	f8ad 2018 	strh.w	r2, [sp, #24]
 801fdee:	f8ad 001a 	strh.w	r0, [sp, #26]
 801fdf2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fdf6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801fdfa:	9600      	str	r6, [sp, #0]
 801fdfc:	464b      	mov	r3, r9
 801fdfe:	aa02      	add	r2, sp, #8
 801fe00:	4651      	mov	r1, sl
 801fe02:	4628      	mov	r0, r5
 801fe04:	f7ff fd7e 	bl	801f904 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fe08:	88a2      	ldrh	r2, [r4, #4]
 801fe0a:	8823      	ldrh	r3, [r4, #0]
 801fe0c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801fe10:	4413      	add	r3, r2
 801fe12:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fe16:	440a      	add	r2, r1
 801fe18:	b29b      	uxth	r3, r3
 801fe1a:	b292      	uxth	r2, r2
 801fe1c:	b211      	sxth	r1, r2
 801fe1e:	b218      	sxth	r0, r3
 801fe20:	4288      	cmp	r0, r1
 801fe22:	dd13      	ble.n	801fe4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801fe24:	1a9b      	subs	r3, r3, r2
 801fe26:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801fe2a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801fe2e:	f8ad 1018 	strh.w	r1, [sp, #24]
 801fe32:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fe36:	f8ad 001e 	strh.w	r0, [sp, #30]
 801fe3a:	9600      	str	r6, [sp, #0]
 801fe3c:	464b      	mov	r3, r9
 801fe3e:	aa02      	add	r2, sp, #8
 801fe40:	4651      	mov	r1, sl
 801fe42:	4628      	mov	r0, r5
 801fe44:	f8ad 701a 	strh.w	r7, [sp, #26]
 801fe48:	f7ff fd5c 	bl	801f904 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fe4c:	88e2      	ldrh	r2, [r4, #6]
 801fe4e:	8863      	ldrh	r3, [r4, #2]
 801fe50:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fe54:	4413      	add	r3, r2
 801fe56:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fe5a:	440a      	add	r2, r1
 801fe5c:	b29b      	uxth	r3, r3
 801fe5e:	b292      	uxth	r2, r2
 801fe60:	b211      	sxth	r1, r2
 801fe62:	b218      	sxth	r0, r3
 801fe64:	4288      	cmp	r0, r1
 801fe66:	f77f aec8 	ble.w	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fe6a:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fe6e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fe72:	f8ad 7018 	strh.w	r7, [sp, #24]
 801fe76:	1a9b      	subs	r3, r3, r2
 801fe78:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fe7c:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fe80:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fe84:	9600      	str	r6, [sp, #0]
 801fe86:	464b      	mov	r3, r9
 801fe88:	e77a      	b.n	801fd80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801fe8a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801fe8e:	2800      	cmp	r0, #0
 801fe90:	f43f aeb3 	beq.w	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fe94:	6803      	ldr	r3, [r0, #0]
 801fe96:	9600      	str	r6, [sp, #0]
 801fe98:	68de      	ldr	r6, [r3, #12]
 801fe9a:	4623      	mov	r3, r4
 801fe9c:	aa02      	add	r2, sp, #8
 801fe9e:	4629      	mov	r1, r5
 801fea0:	47b0      	blx	r6
 801fea2:	e6aa      	b.n	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801fea4:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801fea8:	2800      	cmp	r0, #0
 801feaa:	f43f aea6 	beq.w	801fbfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801feae:	6803      	ldr	r3, [r0, #0]
 801feb0:	9600      	str	r6, [sp, #0]
 801feb2:	689e      	ldr	r6, [r3, #8]
 801feb4:	e7f1      	b.n	801fe9a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801feb6:	bf00      	nop
 801feb8:	20013f60 	.word	0x20013f60

0801febc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801febc:	b180      	cbz	r0, 801fee0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801febe:	2903      	cmp	r1, #3
 801fec0:	d81c      	bhi.n	801fefc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fec2:	e8df f001 	tbb	[pc, r1]
 801fec6:	1d02      	.short	0x1d02
 801fec8:	1f08      	.short	0x1f08
 801feca:	4b10      	ldr	r3, [pc, #64]	@ (801ff0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fecc:	8818      	ldrh	r0, [r3, #0]
 801fece:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fed2:	4240      	negs	r0, r0
 801fed4:	4770      	bx	lr
 801fed6:	4b0d      	ldr	r3, [pc, #52]	@ (801ff0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fed8:	8818      	ldrh	r0, [r3, #0]
 801feda:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fede:	4770      	bx	lr
 801fee0:	2903      	cmp	r1, #3
 801fee2:	d80b      	bhi.n	801fefc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fee4:	a301      	add	r3, pc, #4	@ (adr r3, 801feec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801fee6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801feea:	bf00      	nop
 801feec:	0801ff01 	.word	0x0801ff01
 801fef0:	0801fed7 	.word	0x0801fed7
 801fef4:	0801ff05 	.word	0x0801ff05
 801fef8:	0801fecb 	.word	0x0801fecb
 801fefc:	2000      	movs	r0, #0
 801fefe:	4770      	bx	lr
 801ff00:	2001      	movs	r0, #1
 801ff02:	4770      	bx	lr
 801ff04:	f04f 30ff 	mov.w	r0, #4294967295
 801ff08:	4770      	bx	lr
 801ff0a:	bf00      	nop
 801ff0c:	20013f5a 	.word	0x20013f5a

0801ff10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801ff10:	b180      	cbz	r0, 801ff34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801ff12:	2903      	cmp	r1, #3
 801ff14:	d81c      	bhi.n	801ff50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ff16:	e8df f001 	tbb	[pc, r1]
 801ff1a:	021d      	.short	0x021d
 801ff1c:	071f      	.short	0x071f
 801ff1e:	4b10      	ldr	r3, [pc, #64]	@ (801ff60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ff20:	8818      	ldrh	r0, [r3, #0]
 801ff22:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ff26:	4770      	bx	lr
 801ff28:	4b0d      	ldr	r3, [pc, #52]	@ (801ff60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ff2a:	8818      	ldrh	r0, [r3, #0]
 801ff2c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ff30:	4240      	negs	r0, r0
 801ff32:	4770      	bx	lr
 801ff34:	2903      	cmp	r1, #3
 801ff36:	d80b      	bhi.n	801ff50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ff38:	a301      	add	r3, pc, #4	@ (adr r3, 801ff40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801ff3a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ff3e:	bf00      	nop
 801ff40:	0801ff1f 	.word	0x0801ff1f
 801ff44:	0801ff59 	.word	0x0801ff59
 801ff48:	0801ff29 	.word	0x0801ff29
 801ff4c:	0801ff55 	.word	0x0801ff55
 801ff50:	2000      	movs	r0, #0
 801ff52:	4770      	bx	lr
 801ff54:	2001      	movs	r0, #1
 801ff56:	4770      	bx	lr
 801ff58:	f04f 30ff 	mov.w	r0, #4294967295
 801ff5c:	4770      	bx	lr
 801ff5e:	bf00      	nop
 801ff60:	20013f5a 	.word	0x20013f5a

0801ff64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ff64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff68:	b099      	sub	sp, #100	@ 0x64
 801ff6a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ff6c:	a914      	add	r1, sp, #80	@ 0x50
 801ff6e:	e881 000c 	stmia.w	r1, {r2, r3}
 801ff72:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801ff76:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801ff7a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ff7e:	9309      	str	r3, [sp, #36]	@ 0x24
 801ff80:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801ff84:	9310      	str	r3, [sp, #64]	@ 0x40
 801ff86:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ff8a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801ff8e:	930c      	str	r3, [sp, #48]	@ 0x30
 801ff90:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801ff94:	798f      	ldrb	r7, [r1, #6]
 801ff96:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801ff9a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801ff9e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801ffa2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801ffa6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801ffaa:	431f      	orrs	r7, r3
 801ffac:	f000 8195 	beq.w	80202da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ffb0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ffb4:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801ffb8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ffbc:	ea59 0903 	orrs.w	r9, r9, r3
 801ffc0:	f000 818b 	beq.w	80202da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ffc4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ffc8:	b29b      	uxth	r3, r3
 801ffca:	2d00      	cmp	r5, #0
 801ffcc:	f000 812e 	beq.w	802022c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801ffd0:	1aed      	subs	r5, r5, r3
 801ffd2:	b2ad      	uxth	r5, r5
 801ffd4:	042b      	lsls	r3, r5, #16
 801ffd6:	d502      	bpl.n	801ffde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ffd8:	1b64      	subs	r4, r4, r5
 801ffda:	b224      	sxth	r4, r4
 801ffdc:	2500      	movs	r5, #0
 801ffde:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ffe2:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801ffe6:	428c      	cmp	r4, r1
 801ffe8:	b28b      	uxth	r3, r1
 801ffea:	bfbf      	itttt	lt
 801ffec:	18ed      	addlt	r5, r5, r3
 801ffee:	1b2c      	sublt	r4, r5, r4
 801fff0:	b2a5      	uxthlt	r5, r4
 801fff2:	460c      	movlt	r4, r1
 801fff4:	8891      	ldrh	r1, [r2, #4]
 801fff6:	440b      	add	r3, r1
 801fff8:	b21b      	sxth	r3, r3
 801fffa:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fffc:	88d3      	ldrh	r3, [r2, #6]
 801fffe:	8852      	ldrh	r2, [r2, #2]
 8020000:	4413      	add	r3, r2
 8020002:	b21b      	sxth	r3, r3
 8020004:	930d      	str	r3, [sp, #52]	@ 0x34
 8020006:	4bbe      	ldr	r3, [pc, #760]	@ (8020300 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8020008:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802000a:	f893 b000 	ldrb.w	fp, [r3]
 802000e:	f10b 3cff 	add.w	ip, fp, #4294967295
 8020012:	f1dc 0300 	rsbs	r3, ip, #0
 8020016:	eb43 030c 	adc.w	r3, r3, ip
 802001a:	930e      	str	r3, [sp, #56]	@ 0x38
 802001c:	4621      	mov	r1, r4
 802001e:	4653      	mov	r3, sl
 8020020:	a814      	add	r0, sp, #80	@ 0x50
 8020022:	f7f5 fdcc 	bl	8015bbe <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8020026:	4621      	mov	r1, r4
 8020028:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 802002c:	4653      	mov	r3, sl
 802002e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020030:	a814      	add	r0, sp, #80	@ 0x50
 8020032:	f7f5 fde1 	bl	8015bf8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8020036:	a918      	add	r1, sp, #96	@ 0x60
 8020038:	f821 0d02 	strh.w	r0, [r1, #-2]!
 802003c:	a817      	add	r0, sp, #92	@ 0x5c
 802003e:	f7f5 ff07 	bl	8015e50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8020042:	f1ba 0f00 	cmp.w	sl, #0
 8020046:	f040 80f4 	bne.w	8020232 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 802004a:	f1bb 0f01 	cmp.w	fp, #1
 802004e:	f040 80f8 	bne.w	8020242 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8020052:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020054:	2b00      	cmp	r3, #0
 8020056:	f040 8145 	bne.w	80202e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 802005a:	b2ba      	uxth	r2, r7
 802005c:	b905      	cbnz	r5, 8020060 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 802005e:	b16e      	cbz	r6, 802007c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8020060:	fb06 5302 	mla	r3, r6, r2, r5
 8020064:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8020066:	fb08 f303 	mul.w	r3, r8, r3
 802006a:	4631      	mov	r1, r6
 802006c:	f003 0607 	and.w	r6, r3, #7
 8020070:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8020074:	9328      	str	r3, [sp, #160]	@ 0xa0
 8020076:	eba9 0301 	sub.w	r3, r9, r1
 802007a:	930a      	str	r3, [sp, #40]	@ 0x28
 802007c:	4651      	mov	r1, sl
 802007e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8020080:	f7ff ff1c 	bl	801febc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8020084:	4681      	mov	r9, r0
 8020086:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8020088:	f7ff ff42 	bl	801ff10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 802008c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802008e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8020090:	eba3 0a01 	sub.w	sl, r3, r1
 8020094:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020096:	459a      	cmp	sl, r3
 8020098:	bfa8      	it	ge
 802009a:	469a      	movge	sl, r3
 802009c:	f1ba 0f00 	cmp.w	sl, #0
 80200a0:	4683      	mov	fp, r0
 80200a2:	f340 811a 	ble.w	80202da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80200a6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80200a8:	1b64      	subs	r4, r4, r5
 80200aa:	1b1c      	subs	r4, r3, r4
 80200ac:	42bc      	cmp	r4, r7
 80200ae:	bfd4      	ite	le
 80200b0:	ebc5 0504 	rsble	r5, r5, r4
 80200b4:	ebc5 0507 	rsbgt	r5, r5, r7
 80200b8:	2d00      	cmp	r5, #0
 80200ba:	f340 810e 	ble.w	80202da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80200be:	1b52      	subs	r2, r2, r5
 80200c0:	fb08 f302 	mul.w	r3, r8, r2
 80200c4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80200c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80200c8:	2b00      	cmp	r3, #0
 80200ca:	f040 8116 	bne.w	80202fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80200ce:	4b8d      	ldr	r3, [pc, #564]	@ (8020304 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80200d0:	6818      	ldr	r0, [r3, #0]
 80200d2:	6803      	ldr	r3, [r0, #0]
 80200d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80200d6:	4798      	blx	r3
 80200d8:	2301      	movs	r3, #1
 80200da:	fa03 f308 	lsl.w	r3, r3, r8
 80200de:	4a8a      	ldr	r2, [pc, #552]	@ (8020308 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80200e0:	3b01      	subs	r3, #1
 80200e2:	b2db      	uxtb	r3, r3
 80200e4:	8811      	ldrh	r1, [r2, #0]
 80200e6:	930e      	str	r3, [sp, #56]	@ 0x38
 80200e8:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 80200ec:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 80200f0:	fb01 2303 	mla	r3, r1, r3, r2
 80200f4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80200f8:	930a      	str	r3, [sp, #40]	@ 0x28
 80200fa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80200fc:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8020100:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020102:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8020104:	0a19      	lsrs	r1, r3, #8
 8020106:	b2cb      	uxtb	r3, r1
 8020108:	9312      	str	r3, [sp, #72]	@ 0x48
 802010a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802010c:	b2db      	uxtb	r3, r3
 802010e:	9311      	str	r3, [sp, #68]	@ 0x44
 8020110:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8020112:	095a      	lsrs	r2, r3, #5
 8020114:	4b7d      	ldr	r3, [pc, #500]	@ (802030c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8020116:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802011a:	400b      	ands	r3, r1
 802011c:	4313      	orrs	r3, r2
 802011e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8020120:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020124:	4313      	orrs	r3, r2
 8020126:	b29b      	uxth	r3, r3
 8020128:	9310      	str	r3, [sp, #64]	@ 0x40
 802012a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802012c:	781a      	ldrb	r2, [r3, #0]
 802012e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8020132:	4132      	asrs	r2, r6
 8020134:	fb05 b919 	mls	r9, r5, r9, fp
 8020138:	fb03 fb05 	mul.w	fp, r3, r5
 802013c:	b2d2      	uxtb	r2, r2
 802013e:	930d      	str	r3, [sp, #52]	@ 0x34
 8020140:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8020144:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8020148:	f0c0 80f5 	bcc.w	8020336 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 802014c:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 8020150:	46ae      	mov	lr, r5
 8020152:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8020156:	f0c0 80dd 	bcc.w	8020314 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 802015a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802015c:	4013      	ands	r3, r2
 802015e:	d055      	beq.n	802020c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8020160:	20ff      	movs	r0, #255	@ 0xff
 8020162:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8020164:	fb90 f1f1 	sdiv	r1, r0, r1
 8020168:	434b      	muls	r3, r1
 802016a:	2bfe      	cmp	r3, #254	@ 0xfe
 802016c:	dd03      	ble.n	8020176 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 802016e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020170:	4281      	cmp	r1, r0
 8020172:	f000 80cd 	beq.w	8020310 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8020176:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020178:	f8bc 4000 	ldrh.w	r4, [ip]
 802017c:	fb11 f303 	smulbb	r3, r1, r3
 8020180:	b29b      	uxth	r3, r3
 8020182:	1c59      	adds	r1, r3, #1
 8020184:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020188:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802018c:	b29f      	uxth	r7, r3
 802018e:	43db      	mvns	r3, r3
 8020190:	b2db      	uxtb	r3, r3
 8020192:	9309      	str	r3, [sp, #36]	@ 0x24
 8020194:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8020196:	1220      	asrs	r0, r4, #8
 8020198:	fb13 f907 	smulbb	r9, r3, r7
 802019c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80201a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80201a2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80201a6:	fb00 9003 	mla	r0, r0, r3, r9
 80201aa:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80201ac:	10e1      	asrs	r1, r4, #3
 80201ae:	fb13 f907 	smulbb	r9, r3, r7
 80201b2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80201b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80201b8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80201bc:	fb01 9103 	mla	r1, r1, r3, r9
 80201c0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80201c2:	00e4      	lsls	r4, r4, #3
 80201c4:	fb13 f707 	smulbb	r7, r3, r7
 80201c8:	b2e4      	uxtb	r4, r4
 80201ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80201cc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80201d0:	fb04 7403 	mla	r4, r4, r3, r7
 80201d4:	b280      	uxth	r0, r0
 80201d6:	b2a4      	uxth	r4, r4
 80201d8:	1c43      	adds	r3, r0, #1
 80201da:	f104 0901 	add.w	r9, r4, #1
 80201de:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80201e2:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80201e6:	b289      	uxth	r1, r1
 80201e8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80201ec:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80201f0:	ea49 0000 	orr.w	r0, r9, r0
 80201f4:	f101 0901 	add.w	r9, r1, #1
 80201f8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80201fc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8020200:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8020204:	ea40 0009 	orr.w	r0, r0, r9
 8020208:	f8ac 0000 	strh.w	r0, [ip]
 802020c:	4446      	add	r6, r8
 802020e:	b2b6      	uxth	r6, r6
 8020210:	2e07      	cmp	r6, #7
 8020212:	bf81      	itttt	hi
 8020214:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 8020216:	785a      	ldrbhi	r2, [r3, #1]
 8020218:	3301      	addhi	r3, #1
 802021a:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 802021c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802021e:	bf9a      	itte	ls
 8020220:	fa42 f208 	asrls.w	r2, r2, r8
 8020224:	b2d2      	uxtbls	r2, r2
 8020226:	2600      	movhi	r6, #0
 8020228:	449c      	add	ip, r3
 802022a:	e792      	b.n	8020152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 802022c:	441c      	add	r4, r3
 802022e:	b224      	sxth	r4, r4
 8020230:	e6d5      	b.n	801ffde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8020232:	f1ba 0f01 	cmp.w	sl, #1
 8020236:	f47f af0c 	bne.w	8020052 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802023a:	f1bb 0f01 	cmp.w	fp, #1
 802023e:	f47f af08 	bne.w	8020052 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020242:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 8020304 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8020246:	f8db 0000 	ldr.w	r0, [fp]
 802024a:	6803      	ldr	r3, [r0, #0]
 802024c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 802024e:	4798      	blx	r3
 8020250:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8020254:	465a      	mov	r2, fp
 8020256:	d006      	beq.n	8020266 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8020258:	f1b8 0f04 	cmp.w	r8, #4
 802025c:	d140      	bne.n	80202e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 802025e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020260:	3300      	adds	r3, #0
 8020262:	bf18      	it	ne
 8020264:	2301      	movne	r3, #1
 8020266:	0580      	lsls	r0, r0, #22
 8020268:	d56e      	bpl.n	8020348 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 802026a:	f1b8 0f08 	cmp.w	r8, #8
 802026e:	d16b      	bne.n	8020348 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8020270:	2b00      	cmp	r3, #0
 8020272:	bf0c      	ite	eq
 8020274:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8020278:	f44f 7180 	movne.w	r1, #256	@ 0x100
 802027c:	2d00      	cmp	r5, #0
 802027e:	f47f aee8 	bne.w	8020052 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020282:	2e00      	cmp	r6, #0
 8020284:	f47f aee5 	bne.w	8020052 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020288:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802028a:	19e3      	adds	r3, r4, r7
 802028c:	4283      	cmp	r3, r0
 802028e:	f73f aee0 	bgt.w	8020052 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020292:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020294:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020296:	444b      	add	r3, r9
 8020298:	4283      	cmp	r3, r0
 802029a:	f73f aeda 	bgt.w	8020052 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802029e:	6810      	ldr	r0, [r2, #0]
 80202a0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 80202a4:	6804      	ldr	r4, [r0, #0]
 80202a6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80202aa:	b2bf      	uxth	r7, r7
 80202ac:	f1b8 0f08 	cmp.w	r8, #8
 80202b0:	f04f 0500 	mov.w	r5, #0
 80202b4:	bf18      	it	ne
 80202b6:	3701      	addne	r7, #1
 80202b8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80202bc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80202be:	9104      	str	r1, [sp, #16]
 80202c0:	bf18      	it	ne
 80202c2:	f027 0701 	bicne.w	r7, r7, #1
 80202c6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80202c8:	bf18      	it	ne
 80202ca:	b2bf      	uxthne	r7, r7
 80202cc:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80202d0:	e9cd 7900 	strd	r7, r9, [sp]
 80202d4:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80202d6:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 80202d8:	47a0      	blx	r4
 80202da:	b019      	add	sp, #100	@ 0x64
 80202dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80202e0:	2300      	movs	r3, #0
 80202e2:	e7c0      	b.n	8020266 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80202e4:	2208      	movs	r2, #8
 80202e6:	fb92 f3f8 	sdiv	r3, r2, r8
 80202ea:	1e5a      	subs	r2, r3, #1
 80202ec:	443a      	add	r2, r7
 80202ee:	fb92 f2f3 	sdiv	r2, r2, r3
 80202f2:	fb12 f203 	smulbb	r2, r2, r3
 80202f6:	b292      	uxth	r2, r2
 80202f8:	e6b0      	b.n	802005c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80202fa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80202fc:	e6ec      	b.n	80200d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80202fe:	bf00      	nop
 8020300:	20013f58 	.word	0x20013f58
 8020304:	20013f60 	.word	0x20013f60
 8020308:	20013f5a 	.word	0x20013f5a
 802030c:	00fff800 	.word	0x00fff800
 8020310:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8020312:	e779      	b.n	8020208 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8020314:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020316:	b153      	cbz	r3, 802032e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8020318:	441e      	add	r6, r3
 802031a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802031c:	b2b6      	uxth	r6, r6
 802031e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8020322:	f006 0607 	and.w	r6, r6, #7
 8020326:	781a      	ldrb	r2, [r3, #0]
 8020328:	9328      	str	r3, [sp, #160]	@ 0xa0
 802032a:	4132      	asrs	r2, r6
 802032c:	b2d2      	uxtb	r2, r2
 802032e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020330:	445b      	add	r3, fp
 8020332:	930a      	str	r3, [sp, #40]	@ 0x28
 8020334:	e706      	b.n	8020144 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8020336:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020338:	2b00      	cmp	r3, #0
 802033a:	d1ce      	bne.n	80202da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 802033c:	4b05      	ldr	r3, [pc, #20]	@ (8020354 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 802033e:	6818      	ldr	r0, [r3, #0]
 8020340:	6803      	ldr	r3, [r0, #0]
 8020342:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020344:	4798      	blx	r3
 8020346:	e7c8      	b.n	80202da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020348:	2b00      	cmp	r3, #0
 802034a:	f43f ae82 	beq.w	8020052 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802034e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8020352:	e793      	b.n	802027c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8020354:	20013f60 	.word	0x20013f60

08020358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8020358:	b538      	push	{r3, r4, r5, lr}
 802035a:	4c15      	ldr	r4, [pc, #84]	@ (80203b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 802035c:	7823      	ldrb	r3, [r4, #0]
 802035e:	f3bf 8f5b 	dmb	ish
 8020362:	07da      	lsls	r2, r3, #31
 8020364:	4605      	mov	r5, r0
 8020366:	d40b      	bmi.n	8020380 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020368:	4620      	mov	r0, r4
 802036a:	f008 fc67 	bl	8028c3c <__cxa_guard_acquire>
 802036e:	b138      	cbz	r0, 8020380 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020370:	4620      	mov	r0, r4
 8020372:	f008 fc6f 	bl	8028c54 <__cxa_guard_release>
 8020376:	4a0f      	ldr	r2, [pc, #60]	@ (80203b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020378:	490f      	ldr	r1, [pc, #60]	@ (80203b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 802037a:	4810      	ldr	r0, [pc, #64]	@ (80203bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 802037c:	f008 fc57 	bl	8028c2e <__aeabi_atexit>
 8020380:	4c0f      	ldr	r4, [pc, #60]	@ (80203c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8020382:	7823      	ldrb	r3, [r4, #0]
 8020384:	f3bf 8f5b 	dmb	ish
 8020388:	07db      	lsls	r3, r3, #31
 802038a:	d40b      	bmi.n	80203a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 802038c:	4620      	mov	r0, r4
 802038e:	f008 fc55 	bl	8028c3c <__cxa_guard_acquire>
 8020392:	b138      	cbz	r0, 80203a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020394:	4620      	mov	r0, r4
 8020396:	f008 fc5d 	bl	8028c54 <__cxa_guard_release>
 802039a:	4a06      	ldr	r2, [pc, #24]	@ (80203b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 802039c:	4909      	ldr	r1, [pc, #36]	@ (80203c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 802039e:	480a      	ldr	r0, [pc, #40]	@ (80203c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80203a0:	f008 fc45 	bl	8028c2e <__aeabi_atexit>
 80203a4:	4b05      	ldr	r3, [pc, #20]	@ (80203bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80203a6:	616b      	str	r3, [r5, #20]
 80203a8:	4b07      	ldr	r3, [pc, #28]	@ (80203c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80203aa:	61ab      	str	r3, [r5, #24]
 80203ac:	bd38      	pop	{r3, r4, r5, pc}
 80203ae:	bf00      	nop
 80203b0:	20014044 	.word	0x20014044
 80203b4:	20000000 	.word	0x20000000
 80203b8:	0801c50d 	.word	0x0801c50d
 80203bc:	200000d0 	.word	0x200000d0
 80203c0:	20014048 	.word	0x20014048
 80203c4:	0801c50b 	.word	0x0801c50b
 80203c8:	200000d4 	.word	0x200000d4

080203cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80203cc:	b538      	push	{r3, r4, r5, lr}
 80203ce:	4c15      	ldr	r4, [pc, #84]	@ (8020424 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80203d0:	7823      	ldrb	r3, [r4, #0]
 80203d2:	f3bf 8f5b 	dmb	ish
 80203d6:	07da      	lsls	r2, r3, #31
 80203d8:	4605      	mov	r5, r0
 80203da:	d40b      	bmi.n	80203f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80203dc:	4620      	mov	r0, r4
 80203de:	f008 fc2d 	bl	8028c3c <__cxa_guard_acquire>
 80203e2:	b138      	cbz	r0, 80203f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80203e4:	4620      	mov	r0, r4
 80203e6:	f008 fc35 	bl	8028c54 <__cxa_guard_release>
 80203ea:	4a0f      	ldr	r2, [pc, #60]	@ (8020428 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80203ec:	490f      	ldr	r1, [pc, #60]	@ (802042c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80203ee:	4810      	ldr	r0, [pc, #64]	@ (8020430 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80203f0:	f008 fc1d 	bl	8028c2e <__aeabi_atexit>
 80203f4:	4c0f      	ldr	r4, [pc, #60]	@ (8020434 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80203f6:	7823      	ldrb	r3, [r4, #0]
 80203f8:	f3bf 8f5b 	dmb	ish
 80203fc:	07db      	lsls	r3, r3, #31
 80203fe:	d40b      	bmi.n	8020418 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8020400:	4620      	mov	r0, r4
 8020402:	f008 fc1b 	bl	8028c3c <__cxa_guard_acquire>
 8020406:	b138      	cbz	r0, 8020418 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8020408:	4620      	mov	r0, r4
 802040a:	f008 fc23 	bl	8028c54 <__cxa_guard_release>
 802040e:	4a06      	ldr	r2, [pc, #24]	@ (8020428 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8020410:	4909      	ldr	r1, [pc, #36]	@ (8020438 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8020412:	480a      	ldr	r0, [pc, #40]	@ (802043c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8020414:	f008 fc0b 	bl	8028c2e <__aeabi_atexit>
 8020418:	4b05      	ldr	r3, [pc, #20]	@ (8020430 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 802041a:	60eb      	str	r3, [r5, #12]
 802041c:	4b07      	ldr	r3, [pc, #28]	@ (802043c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 802041e:	612b      	str	r3, [r5, #16]
 8020420:	bd38      	pop	{r3, r4, r5, pc}
 8020422:	bf00      	nop
 8020424:	2001401c 	.word	0x2001401c
 8020428:	20000000 	.word	0x20000000
 802042c:	0801c511 	.word	0x0801c511
 8020430:	200000a8 	.word	0x200000a8
 8020434:	20014020 	.word	0x20014020
 8020438:	0801c50f 	.word	0x0801c50f
 802043c:	200000ac 	.word	0x200000ac

08020440 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8020440:	b510      	push	{r4, lr}
 8020442:	4604      	mov	r4, r0
 8020444:	f7ff ff88 	bl	8020358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8020448:	4620      	mov	r0, r4
 802044a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802044e:	f7ff bfbd 	b.w	80203cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08020454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8020454:	b538      	push	{r3, r4, r5, lr}
 8020456:	4c15      	ldr	r4, [pc, #84]	@ (80204ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8020458:	7823      	ldrb	r3, [r4, #0]
 802045a:	f3bf 8f5b 	dmb	ish
 802045e:	07da      	lsls	r2, r3, #31
 8020460:	4605      	mov	r5, r0
 8020462:	d40b      	bmi.n	802047c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020464:	4620      	mov	r0, r4
 8020466:	f008 fbe9 	bl	8028c3c <__cxa_guard_acquire>
 802046a:	b138      	cbz	r0, 802047c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 802046c:	4620      	mov	r0, r4
 802046e:	f008 fbf1 	bl	8028c54 <__cxa_guard_release>
 8020472:	4a0f      	ldr	r2, [pc, #60]	@ (80204b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020474:	490f      	ldr	r1, [pc, #60]	@ (80204b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8020476:	4810      	ldr	r0, [pc, #64]	@ (80204b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8020478:	f008 fbd9 	bl	8028c2e <__aeabi_atexit>
 802047c:	4c0f      	ldr	r4, [pc, #60]	@ (80204bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 802047e:	7823      	ldrb	r3, [r4, #0]
 8020480:	f3bf 8f5b 	dmb	ish
 8020484:	07db      	lsls	r3, r3, #31
 8020486:	d40b      	bmi.n	80204a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020488:	4620      	mov	r0, r4
 802048a:	f008 fbd7 	bl	8028c3c <__cxa_guard_acquire>
 802048e:	b138      	cbz	r0, 80204a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020490:	4620      	mov	r0, r4
 8020492:	f008 fbdf 	bl	8028c54 <__cxa_guard_release>
 8020496:	4a06      	ldr	r2, [pc, #24]	@ (80204b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020498:	4909      	ldr	r1, [pc, #36]	@ (80204c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 802049a:	480a      	ldr	r0, [pc, #40]	@ (80204c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 802049c:	f008 fbc7 	bl	8028c2e <__aeabi_atexit>
 80204a0:	4b05      	ldr	r3, [pc, #20]	@ (80204b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80204a2:	626b      	str	r3, [r5, #36]	@ 0x24
 80204a4:	4b07      	ldr	r3, [pc, #28]	@ (80204c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80204a6:	62ab      	str	r3, [r5, #40]	@ 0x28
 80204a8:	bd38      	pop	{r3, r4, r5, pc}
 80204aa:	bf00      	nop
 80204ac:	2001404c 	.word	0x2001404c
 80204b0:	20000000 	.word	0x20000000
 80204b4:	0801c505 	.word	0x0801c505
 80204b8:	200000d8 	.word	0x200000d8
 80204bc:	20014050 	.word	0x20014050
 80204c0:	0801c503 	.word	0x0801c503
 80204c4:	200000dc 	.word	0x200000dc

080204c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80204c8:	b538      	push	{r3, r4, r5, lr}
 80204ca:	4c15      	ldr	r4, [pc, #84]	@ (8020520 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80204cc:	7823      	ldrb	r3, [r4, #0]
 80204ce:	f3bf 8f5b 	dmb	ish
 80204d2:	07da      	lsls	r2, r3, #31
 80204d4:	4605      	mov	r5, r0
 80204d6:	d40b      	bmi.n	80204f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80204d8:	4620      	mov	r0, r4
 80204da:	f008 fbaf 	bl	8028c3c <__cxa_guard_acquire>
 80204de:	b138      	cbz	r0, 80204f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80204e0:	4620      	mov	r0, r4
 80204e2:	f008 fbb7 	bl	8028c54 <__cxa_guard_release>
 80204e6:	4a0f      	ldr	r2, [pc, #60]	@ (8020524 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80204e8:	490f      	ldr	r1, [pc, #60]	@ (8020528 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80204ea:	4810      	ldr	r0, [pc, #64]	@ (802052c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80204ec:	f008 fb9f 	bl	8028c2e <__aeabi_atexit>
 80204f0:	4c0f      	ldr	r4, [pc, #60]	@ (8020530 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80204f2:	7823      	ldrb	r3, [r4, #0]
 80204f4:	f3bf 8f5b 	dmb	ish
 80204f8:	07db      	lsls	r3, r3, #31
 80204fa:	d40b      	bmi.n	8020514 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80204fc:	4620      	mov	r0, r4
 80204fe:	f008 fb9d 	bl	8028c3c <__cxa_guard_acquire>
 8020502:	b138      	cbz	r0, 8020514 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8020504:	4620      	mov	r0, r4
 8020506:	f008 fba5 	bl	8028c54 <__cxa_guard_release>
 802050a:	4a06      	ldr	r2, [pc, #24]	@ (8020524 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 802050c:	4909      	ldr	r1, [pc, #36]	@ (8020534 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 802050e:	480a      	ldr	r0, [pc, #40]	@ (8020538 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8020510:	f008 fb8d 	bl	8028c2e <__aeabi_atexit>
 8020514:	4b05      	ldr	r3, [pc, #20]	@ (802052c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8020516:	61eb      	str	r3, [r5, #28]
 8020518:	4b07      	ldr	r3, [pc, #28]	@ (8020538 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 802051a:	622b      	str	r3, [r5, #32]
 802051c:	bd38      	pop	{r3, r4, r5, pc}
 802051e:	bf00      	nop
 8020520:	20014024 	.word	0x20014024
 8020524:	20000000 	.word	0x20000000
 8020528:	0801c509 	.word	0x0801c509
 802052c:	200000b0 	.word	0x200000b0
 8020530:	20014028 	.word	0x20014028
 8020534:	0801c507 	.word	0x0801c507
 8020538:	200000b4 	.word	0x200000b4

0802053c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 802053c:	b510      	push	{r4, lr}
 802053e:	4604      	mov	r4, r0
 8020540:	f7ff ff88 	bl	8020454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8020544:	4620      	mov	r0, r4
 8020546:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802054a:	f7ff bfbd 	b.w	80204c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08020550 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8020550:	b538      	push	{r3, r4, r5, lr}
 8020552:	4c15      	ldr	r4, [pc, #84]	@ (80205a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8020554:	7823      	ldrb	r3, [r4, #0]
 8020556:	f3bf 8f5b 	dmb	ish
 802055a:	07da      	lsls	r2, r3, #31
 802055c:	4605      	mov	r5, r0
 802055e:	d40b      	bmi.n	8020578 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8020560:	4620      	mov	r0, r4
 8020562:	f008 fb6b 	bl	8028c3c <__cxa_guard_acquire>
 8020566:	b138      	cbz	r0, 8020578 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8020568:	4620      	mov	r0, r4
 802056a:	f008 fb73 	bl	8028c54 <__cxa_guard_release>
 802056e:	4a0f      	ldr	r2, [pc, #60]	@ (80205ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8020570:	490f      	ldr	r1, [pc, #60]	@ (80205b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8020572:	4810      	ldr	r0, [pc, #64]	@ (80205b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8020574:	f008 fb5b 	bl	8028c2e <__aeabi_atexit>
 8020578:	4c0f      	ldr	r4, [pc, #60]	@ (80205b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 802057a:	7823      	ldrb	r3, [r4, #0]
 802057c:	f3bf 8f5b 	dmb	ish
 8020580:	07db      	lsls	r3, r3, #31
 8020582:	d40b      	bmi.n	802059c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8020584:	4620      	mov	r0, r4
 8020586:	f008 fb59 	bl	8028c3c <__cxa_guard_acquire>
 802058a:	b138      	cbz	r0, 802059c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 802058c:	4620      	mov	r0, r4
 802058e:	f008 fb61 	bl	8028c54 <__cxa_guard_release>
 8020592:	4a06      	ldr	r2, [pc, #24]	@ (80205ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8020594:	4909      	ldr	r1, [pc, #36]	@ (80205bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8020596:	480a      	ldr	r0, [pc, #40]	@ (80205c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8020598:	f008 fb49 	bl	8028c2e <__aeabi_atexit>
 802059c:	4b05      	ldr	r3, [pc, #20]	@ (80205b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802059e:	636b      	str	r3, [r5, #52]	@ 0x34
 80205a0:	4b07      	ldr	r3, [pc, #28]	@ (80205c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80205a2:	63ab      	str	r3, [r5, #56]	@ 0x38
 80205a4:	bd38      	pop	{r3, r4, r5, pc}
 80205a6:	bf00      	nop
 80205a8:	2001405c 	.word	0x2001405c
 80205ac:	20000000 	.word	0x20000000
 80205b0:	0801c4fd 	.word	0x0801c4fd
 80205b4:	200000e8 	.word	0x200000e8
 80205b8:	20014060 	.word	0x20014060
 80205bc:	0801c4fb 	.word	0x0801c4fb
 80205c0:	200000ec 	.word	0x200000ec

080205c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80205c4:	b538      	push	{r3, r4, r5, lr}
 80205c6:	4c15      	ldr	r4, [pc, #84]	@ (802061c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80205c8:	7823      	ldrb	r3, [r4, #0]
 80205ca:	f3bf 8f5b 	dmb	ish
 80205ce:	07da      	lsls	r2, r3, #31
 80205d0:	4605      	mov	r5, r0
 80205d2:	d40b      	bmi.n	80205ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80205d4:	4620      	mov	r0, r4
 80205d6:	f008 fb31 	bl	8028c3c <__cxa_guard_acquire>
 80205da:	b138      	cbz	r0, 80205ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80205dc:	4620      	mov	r0, r4
 80205de:	f008 fb39 	bl	8028c54 <__cxa_guard_release>
 80205e2:	4a0f      	ldr	r2, [pc, #60]	@ (8020620 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80205e4:	490f      	ldr	r1, [pc, #60]	@ (8020624 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80205e6:	4810      	ldr	r0, [pc, #64]	@ (8020628 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80205e8:	f008 fb21 	bl	8028c2e <__aeabi_atexit>
 80205ec:	4c0f      	ldr	r4, [pc, #60]	@ (802062c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80205ee:	7823      	ldrb	r3, [r4, #0]
 80205f0:	f3bf 8f5b 	dmb	ish
 80205f4:	07db      	lsls	r3, r3, #31
 80205f6:	d40b      	bmi.n	8020610 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80205f8:	4620      	mov	r0, r4
 80205fa:	f008 fb1f 	bl	8028c3c <__cxa_guard_acquire>
 80205fe:	b138      	cbz	r0, 8020610 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8020600:	4620      	mov	r0, r4
 8020602:	f008 fb27 	bl	8028c54 <__cxa_guard_release>
 8020606:	4a06      	ldr	r2, [pc, #24]	@ (8020620 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8020608:	4909      	ldr	r1, [pc, #36]	@ (8020630 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 802060a:	480a      	ldr	r0, [pc, #40]	@ (8020634 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 802060c:	f008 fb0f 	bl	8028c2e <__aeabi_atexit>
 8020610:	4b05      	ldr	r3, [pc, #20]	@ (8020628 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8020612:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8020614:	4b07      	ldr	r3, [pc, #28]	@ (8020634 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8020616:	632b      	str	r3, [r5, #48]	@ 0x30
 8020618:	bd38      	pop	{r3, r4, r5, pc}
 802061a:	bf00      	nop
 802061c:	2001402c 	.word	0x2001402c
 8020620:	20000000 	.word	0x20000000
 8020624:	0801c501 	.word	0x0801c501
 8020628:	200000b8 	.word	0x200000b8
 802062c:	20014030 	.word	0x20014030
 8020630:	0801c4ff 	.word	0x0801c4ff
 8020634:	200000bc 	.word	0x200000bc

08020638 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8020638:	b510      	push	{r4, lr}
 802063a:	4604      	mov	r4, r0
 802063c:	f7ff ff88 	bl	8020550 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8020640:	4620      	mov	r0, r4
 8020642:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020646:	f7ff bfbd 	b.w	80205c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0802064c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 802064c:	b538      	push	{r3, r4, r5, lr}
 802064e:	4c15      	ldr	r4, [pc, #84]	@ (80206a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8020650:	7823      	ldrb	r3, [r4, #0]
 8020652:	f3bf 8f5b 	dmb	ish
 8020656:	07da      	lsls	r2, r3, #31
 8020658:	4605      	mov	r5, r0
 802065a:	d40b      	bmi.n	8020674 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 802065c:	4620      	mov	r0, r4
 802065e:	f008 faed 	bl	8028c3c <__cxa_guard_acquire>
 8020662:	b138      	cbz	r0, 8020674 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8020664:	4620      	mov	r0, r4
 8020666:	f008 faf5 	bl	8028c54 <__cxa_guard_release>
 802066a:	4a0f      	ldr	r2, [pc, #60]	@ (80206a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802066c:	490f      	ldr	r1, [pc, #60]	@ (80206ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802066e:	4810      	ldr	r0, [pc, #64]	@ (80206b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8020670:	f008 fadd 	bl	8028c2e <__aeabi_atexit>
 8020674:	4c0f      	ldr	r4, [pc, #60]	@ (80206b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8020676:	7823      	ldrb	r3, [r4, #0]
 8020678:	f3bf 8f5b 	dmb	ish
 802067c:	07db      	lsls	r3, r3, #31
 802067e:	d40b      	bmi.n	8020698 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8020680:	4620      	mov	r0, r4
 8020682:	f008 fadb 	bl	8028c3c <__cxa_guard_acquire>
 8020686:	b138      	cbz	r0, 8020698 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8020688:	4620      	mov	r0, r4
 802068a:	f008 fae3 	bl	8028c54 <__cxa_guard_release>
 802068e:	4a06      	ldr	r2, [pc, #24]	@ (80206a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8020690:	4909      	ldr	r1, [pc, #36]	@ (80206b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8020692:	480a      	ldr	r0, [pc, #40]	@ (80206bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8020694:	f008 facb 	bl	8028c2e <__aeabi_atexit>
 8020698:	4b05      	ldr	r3, [pc, #20]	@ (80206b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802069a:	656b      	str	r3, [r5, #84]	@ 0x54
 802069c:	4b07      	ldr	r3, [pc, #28]	@ (80206bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802069e:	65ab      	str	r3, [r5, #88]	@ 0x58
 80206a0:	bd38      	pop	{r3, r4, r5, pc}
 80206a2:	bf00      	nop
 80206a4:	20014064 	.word	0x20014064
 80206a8:	20000000 	.word	0x20000000
 80206ac:	0801c4ed 	.word	0x0801c4ed
 80206b0:	200000f0 	.word	0x200000f0
 80206b4:	20014068 	.word	0x20014068
 80206b8:	0801c4eb 	.word	0x0801c4eb
 80206bc:	200000f4 	.word	0x200000f4

080206c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80206c0:	b538      	push	{r3, r4, r5, lr}
 80206c2:	4c15      	ldr	r4, [pc, #84]	@ (8020718 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80206c4:	7823      	ldrb	r3, [r4, #0]
 80206c6:	f3bf 8f5b 	dmb	ish
 80206ca:	07da      	lsls	r2, r3, #31
 80206cc:	4605      	mov	r5, r0
 80206ce:	d40b      	bmi.n	80206e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80206d0:	4620      	mov	r0, r4
 80206d2:	f008 fab3 	bl	8028c3c <__cxa_guard_acquire>
 80206d6:	b138      	cbz	r0, 80206e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80206d8:	4620      	mov	r0, r4
 80206da:	f008 fabb 	bl	8028c54 <__cxa_guard_release>
 80206de:	4a0f      	ldr	r2, [pc, #60]	@ (802071c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80206e0:	490f      	ldr	r1, [pc, #60]	@ (8020720 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80206e2:	4810      	ldr	r0, [pc, #64]	@ (8020724 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80206e4:	f008 faa3 	bl	8028c2e <__aeabi_atexit>
 80206e8:	4c0f      	ldr	r4, [pc, #60]	@ (8020728 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80206ea:	7823      	ldrb	r3, [r4, #0]
 80206ec:	f3bf 8f5b 	dmb	ish
 80206f0:	07db      	lsls	r3, r3, #31
 80206f2:	d40b      	bmi.n	802070c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80206f4:	4620      	mov	r0, r4
 80206f6:	f008 faa1 	bl	8028c3c <__cxa_guard_acquire>
 80206fa:	b138      	cbz	r0, 802070c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80206fc:	4620      	mov	r0, r4
 80206fe:	f008 faa9 	bl	8028c54 <__cxa_guard_release>
 8020702:	4a06      	ldr	r2, [pc, #24]	@ (802071c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8020704:	4909      	ldr	r1, [pc, #36]	@ (802072c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8020706:	480a      	ldr	r0, [pc, #40]	@ (8020730 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8020708:	f008 fa91 	bl	8028c2e <__aeabi_atexit>
 802070c:	4b05      	ldr	r3, [pc, #20]	@ (8020724 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802070e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8020710:	4b07      	ldr	r3, [pc, #28]	@ (8020730 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8020712:	652b      	str	r3, [r5, #80]	@ 0x50
 8020714:	bd38      	pop	{r3, r4, r5, pc}
 8020716:	bf00      	nop
 8020718:	2001406c 	.word	0x2001406c
 802071c:	20000000 	.word	0x20000000
 8020720:	0801c4f1 	.word	0x0801c4f1
 8020724:	200000f8 	.word	0x200000f8
 8020728:	20014070 	.word	0x20014070
 802072c:	0801c4ef 	.word	0x0801c4ef
 8020730:	200000fc 	.word	0x200000fc

08020734 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8020734:	b538      	push	{r3, r4, r5, lr}
 8020736:	4c15      	ldr	r4, [pc, #84]	@ (802078c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8020738:	7823      	ldrb	r3, [r4, #0]
 802073a:	f3bf 8f5b 	dmb	ish
 802073e:	07da      	lsls	r2, r3, #31
 8020740:	4605      	mov	r5, r0
 8020742:	d40b      	bmi.n	802075c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8020744:	4620      	mov	r0, r4
 8020746:	f008 fa79 	bl	8028c3c <__cxa_guard_acquire>
 802074a:	b138      	cbz	r0, 802075c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 802074c:	4620      	mov	r0, r4
 802074e:	f008 fa81 	bl	8028c54 <__cxa_guard_release>
 8020752:	4a0f      	ldr	r2, [pc, #60]	@ (8020790 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020754:	490f      	ldr	r1, [pc, #60]	@ (8020794 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8020756:	4810      	ldr	r0, [pc, #64]	@ (8020798 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8020758:	f008 fa69 	bl	8028c2e <__aeabi_atexit>
 802075c:	4c0f      	ldr	r4, [pc, #60]	@ (802079c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802075e:	7823      	ldrb	r3, [r4, #0]
 8020760:	f3bf 8f5b 	dmb	ish
 8020764:	07db      	lsls	r3, r3, #31
 8020766:	d40b      	bmi.n	8020780 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8020768:	4620      	mov	r0, r4
 802076a:	f008 fa67 	bl	8028c3c <__cxa_guard_acquire>
 802076e:	b138      	cbz	r0, 8020780 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8020770:	4620      	mov	r0, r4
 8020772:	f008 fa6f 	bl	8028c54 <__cxa_guard_release>
 8020776:	4a06      	ldr	r2, [pc, #24]	@ (8020790 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020778:	4909      	ldr	r1, [pc, #36]	@ (80207a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 802077a:	480a      	ldr	r0, [pc, #40]	@ (80207a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 802077c:	f008 fa57 	bl	8028c2e <__aeabi_atexit>
 8020780:	4b05      	ldr	r3, [pc, #20]	@ (8020798 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8020782:	646b      	str	r3, [r5, #68]	@ 0x44
 8020784:	4b07      	ldr	r3, [pc, #28]	@ (80207a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020786:	64ab      	str	r3, [r5, #72]	@ 0x48
 8020788:	bd38      	pop	{r3, r4, r5, pc}
 802078a:	bf00      	nop
 802078c:	20014034 	.word	0x20014034
 8020790:	20000000 	.word	0x20000000
 8020794:	0801c4f5 	.word	0x0801c4f5
 8020798:	200000c0 	.word	0x200000c0
 802079c:	20014038 	.word	0x20014038
 80207a0:	0801c4f3 	.word	0x0801c4f3
 80207a4:	200000c4 	.word	0x200000c4

080207a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80207a8:	b538      	push	{r3, r4, r5, lr}
 80207aa:	4c15      	ldr	r4, [pc, #84]	@ (8020800 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80207ac:	7823      	ldrb	r3, [r4, #0]
 80207ae:	f3bf 8f5b 	dmb	ish
 80207b2:	07da      	lsls	r2, r3, #31
 80207b4:	4605      	mov	r5, r0
 80207b6:	d40b      	bmi.n	80207d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80207b8:	4620      	mov	r0, r4
 80207ba:	f008 fa3f 	bl	8028c3c <__cxa_guard_acquire>
 80207be:	b138      	cbz	r0, 80207d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80207c0:	4620      	mov	r0, r4
 80207c2:	f008 fa47 	bl	8028c54 <__cxa_guard_release>
 80207c6:	4a0f      	ldr	r2, [pc, #60]	@ (8020804 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80207c8:	490f      	ldr	r1, [pc, #60]	@ (8020808 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80207ca:	4810      	ldr	r0, [pc, #64]	@ (802080c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80207cc:	f008 fa2f 	bl	8028c2e <__aeabi_atexit>
 80207d0:	4c0f      	ldr	r4, [pc, #60]	@ (8020810 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80207d2:	7823      	ldrb	r3, [r4, #0]
 80207d4:	f3bf 8f5b 	dmb	ish
 80207d8:	07db      	lsls	r3, r3, #31
 80207da:	d40b      	bmi.n	80207f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80207dc:	4620      	mov	r0, r4
 80207de:	f008 fa2d 	bl	8028c3c <__cxa_guard_acquire>
 80207e2:	b138      	cbz	r0, 80207f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80207e4:	4620      	mov	r0, r4
 80207e6:	f008 fa35 	bl	8028c54 <__cxa_guard_release>
 80207ea:	4a06      	ldr	r2, [pc, #24]	@ (8020804 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80207ec:	4909      	ldr	r1, [pc, #36]	@ (8020814 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80207ee:	480a      	ldr	r0, [pc, #40]	@ (8020818 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80207f0:	f008 fa1d 	bl	8028c2e <__aeabi_atexit>
 80207f4:	4b05      	ldr	r3, [pc, #20]	@ (802080c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80207f6:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80207f8:	4b07      	ldr	r3, [pc, #28]	@ (8020818 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80207fa:	642b      	str	r3, [r5, #64]	@ 0x40
 80207fc:	bd38      	pop	{r3, r4, r5, pc}
 80207fe:	bf00      	nop
 8020800:	20014054 	.word	0x20014054
 8020804:	20000000 	.word	0x20000000
 8020808:	0801c4f9 	.word	0x0801c4f9
 802080c:	200000e0 	.word	0x200000e0
 8020810:	20014058 	.word	0x20014058
 8020814:	0801c4f7 	.word	0x0801c4f7
 8020818:	200000e4 	.word	0x200000e4

0802081c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 802081c:	b510      	push	{r4, lr}
 802081e:	4604      	mov	r4, r0
 8020820:	f7ff ff14 	bl	802064c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8020824:	4620      	mov	r0, r4
 8020826:	f7ff ff85 	bl	8020734 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 802082a:	4620      	mov	r0, r4
 802082c:	f7ff ff48 	bl	80206c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8020830:	4620      	mov	r0, r4
 8020832:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020836:	f7ff bfb7 	b.w	80207a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0802083c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 802083c:	b538      	push	{r3, r4, r5, lr}
 802083e:	4c15      	ldr	r4, [pc, #84]	@ (8020894 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8020840:	7823      	ldrb	r3, [r4, #0]
 8020842:	f3bf 8f5b 	dmb	ish
 8020846:	07da      	lsls	r2, r3, #31
 8020848:	4605      	mov	r5, r0
 802084a:	d40b      	bmi.n	8020864 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 802084c:	4620      	mov	r0, r4
 802084e:	f008 f9f5 	bl	8028c3c <__cxa_guard_acquire>
 8020852:	b138      	cbz	r0, 8020864 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020854:	4620      	mov	r0, r4
 8020856:	f008 f9fd 	bl	8028c54 <__cxa_guard_release>
 802085a:	4a0f      	ldr	r2, [pc, #60]	@ (8020898 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802085c:	490f      	ldr	r1, [pc, #60]	@ (802089c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802085e:	4810      	ldr	r0, [pc, #64]	@ (80208a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8020860:	f008 f9e5 	bl	8028c2e <__aeabi_atexit>
 8020864:	4c0f      	ldr	r4, [pc, #60]	@ (80208a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8020866:	7823      	ldrb	r3, [r4, #0]
 8020868:	f3bf 8f5b 	dmb	ish
 802086c:	07db      	lsls	r3, r3, #31
 802086e:	d40b      	bmi.n	8020888 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8020870:	4620      	mov	r0, r4
 8020872:	f008 f9e3 	bl	8028c3c <__cxa_guard_acquire>
 8020876:	b138      	cbz	r0, 8020888 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8020878:	4620      	mov	r0, r4
 802087a:	f008 f9eb 	bl	8028c54 <__cxa_guard_release>
 802087e:	4a06      	ldr	r2, [pc, #24]	@ (8020898 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8020880:	4909      	ldr	r1, [pc, #36]	@ (80208a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8020882:	480a      	ldr	r0, [pc, #40]	@ (80208ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8020884:	f008 f9d3 	bl	8028c2e <__aeabi_atexit>
 8020888:	4b05      	ldr	r3, [pc, #20]	@ (80208a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802088a:	666b      	str	r3, [r5, #100]	@ 0x64
 802088c:	4b07      	ldr	r3, [pc, #28]	@ (80208ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802088e:	66ab      	str	r3, [r5, #104]	@ 0x68
 8020890:	bd38      	pop	{r3, r4, r5, pc}
 8020892:	bf00      	nop
 8020894:	2001403c 	.word	0x2001403c
 8020898:	20000000 	.word	0x20000000
 802089c:	0801c4e5 	.word	0x0801c4e5
 80208a0:	200000c8 	.word	0x200000c8
 80208a4:	20014040 	.word	0x20014040
 80208a8:	0801c4e3 	.word	0x0801c4e3
 80208ac:	200000cc 	.word	0x200000cc

080208b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80208b0:	b538      	push	{r3, r4, r5, lr}
 80208b2:	4c15      	ldr	r4, [pc, #84]	@ (8020908 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80208b4:	7823      	ldrb	r3, [r4, #0]
 80208b6:	f3bf 8f5b 	dmb	ish
 80208ba:	07da      	lsls	r2, r3, #31
 80208bc:	4605      	mov	r5, r0
 80208be:	d40b      	bmi.n	80208d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80208c0:	4620      	mov	r0, r4
 80208c2:	f008 f9bb 	bl	8028c3c <__cxa_guard_acquire>
 80208c6:	b138      	cbz	r0, 80208d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80208c8:	4620      	mov	r0, r4
 80208ca:	f008 f9c3 	bl	8028c54 <__cxa_guard_release>
 80208ce:	4a0f      	ldr	r2, [pc, #60]	@ (802090c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80208d0:	490f      	ldr	r1, [pc, #60]	@ (8020910 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80208d2:	4810      	ldr	r0, [pc, #64]	@ (8020914 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80208d4:	f008 f9ab 	bl	8028c2e <__aeabi_atexit>
 80208d8:	4c0f      	ldr	r4, [pc, #60]	@ (8020918 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80208da:	7823      	ldrb	r3, [r4, #0]
 80208dc:	f3bf 8f5b 	dmb	ish
 80208e0:	07db      	lsls	r3, r3, #31
 80208e2:	d40b      	bmi.n	80208fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80208e4:	4620      	mov	r0, r4
 80208e6:	f008 f9a9 	bl	8028c3c <__cxa_guard_acquire>
 80208ea:	b138      	cbz	r0, 80208fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80208ec:	4620      	mov	r0, r4
 80208ee:	f008 f9b1 	bl	8028c54 <__cxa_guard_release>
 80208f2:	4a06      	ldr	r2, [pc, #24]	@ (802090c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80208f4:	4909      	ldr	r1, [pc, #36]	@ (802091c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80208f6:	480a      	ldr	r0, [pc, #40]	@ (8020920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80208f8:	f008 f999 	bl	8028c2e <__aeabi_atexit>
 80208fc:	4b05      	ldr	r3, [pc, #20]	@ (8020914 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80208fe:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8020900:	4b07      	ldr	r3, [pc, #28]	@ (8020920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8020902:	662b      	str	r3, [r5, #96]	@ 0x60
 8020904:	bd38      	pop	{r3, r4, r5, pc}
 8020906:	bf00      	nop
 8020908:	20014014 	.word	0x20014014
 802090c:	20000000 	.word	0x20000000
 8020910:	0801c4e9 	.word	0x0801c4e9
 8020914:	200000a0 	.word	0x200000a0
 8020918:	20014018 	.word	0x20014018
 802091c:	0801c4e7 	.word	0x0801c4e7
 8020920:	200000a4 	.word	0x200000a4

08020924 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8020924:	b510      	push	{r4, lr}
 8020926:	4604      	mov	r4, r0
 8020928:	f7ff ff88 	bl	802083c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 802092c:	4620      	mov	r0, r4
 802092e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020932:	f7ff bfbd 	b.w	80208b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08020938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8020938:	b538      	push	{r3, r4, r5, lr}
 802093a:	4c15      	ldr	r4, [pc, #84]	@ (8020990 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 802093c:	7823      	ldrb	r3, [r4, #0]
 802093e:	f3bf 8f5b 	dmb	ish
 8020942:	07da      	lsls	r2, r3, #31
 8020944:	4605      	mov	r5, r0
 8020946:	d40b      	bmi.n	8020960 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8020948:	4620      	mov	r0, r4
 802094a:	f008 f977 	bl	8028c3c <__cxa_guard_acquire>
 802094e:	b138      	cbz	r0, 8020960 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8020950:	4620      	mov	r0, r4
 8020952:	f008 f97f 	bl	8028c54 <__cxa_guard_release>
 8020956:	4a0f      	ldr	r2, [pc, #60]	@ (8020994 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020958:	490f      	ldr	r1, [pc, #60]	@ (8020998 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 802095a:	4810      	ldr	r0, [pc, #64]	@ (802099c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 802095c:	f008 f967 	bl	8028c2e <__aeabi_atexit>
 8020960:	4c0f      	ldr	r4, [pc, #60]	@ (80209a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8020962:	7823      	ldrb	r3, [r4, #0]
 8020964:	f3bf 8f5b 	dmb	ish
 8020968:	07db      	lsls	r3, r3, #31
 802096a:	d40b      	bmi.n	8020984 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 802096c:	4620      	mov	r0, r4
 802096e:	f008 f965 	bl	8028c3c <__cxa_guard_acquire>
 8020972:	b138      	cbz	r0, 8020984 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020974:	4620      	mov	r0, r4
 8020976:	f008 f96d 	bl	8028c54 <__cxa_guard_release>
 802097a:	4a06      	ldr	r2, [pc, #24]	@ (8020994 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 802097c:	4909      	ldr	r1, [pc, #36]	@ (80209a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802097e:	480a      	ldr	r0, [pc, #40]	@ (80209a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8020980:	f008 f955 	bl	8028c2e <__aeabi_atexit>
 8020984:	4b05      	ldr	r3, [pc, #20]	@ (802099c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020986:	676b      	str	r3, [r5, #116]	@ 0x74
 8020988:	4b07      	ldr	r3, [pc, #28]	@ (80209a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802098a:	67ab      	str	r3, [r5, #120]	@ 0x78
 802098c:	bd38      	pop	{r3, r4, r5, pc}
 802098e:	bf00      	nop
 8020990:	2001400c 	.word	0x2001400c
 8020994:	20000000 	.word	0x20000000
 8020998:	0801c4dd 	.word	0x0801c4dd
 802099c:	20000098 	.word	0x20000098
 80209a0:	20014010 	.word	0x20014010
 80209a4:	0801c4db 	.word	0x0801c4db
 80209a8:	2000009c 	.word	0x2000009c

080209ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80209ac:	b538      	push	{r3, r4, r5, lr}
 80209ae:	4c15      	ldr	r4, [pc, #84]	@ (8020a04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80209b0:	7823      	ldrb	r3, [r4, #0]
 80209b2:	f3bf 8f5b 	dmb	ish
 80209b6:	07da      	lsls	r2, r3, #31
 80209b8:	4605      	mov	r5, r0
 80209ba:	d40b      	bmi.n	80209d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80209bc:	4620      	mov	r0, r4
 80209be:	f008 f93d 	bl	8028c3c <__cxa_guard_acquire>
 80209c2:	b138      	cbz	r0, 80209d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80209c4:	4620      	mov	r0, r4
 80209c6:	f008 f945 	bl	8028c54 <__cxa_guard_release>
 80209ca:	4a0f      	ldr	r2, [pc, #60]	@ (8020a08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80209cc:	490f      	ldr	r1, [pc, #60]	@ (8020a0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80209ce:	4810      	ldr	r0, [pc, #64]	@ (8020a10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80209d0:	f008 f92d 	bl	8028c2e <__aeabi_atexit>
 80209d4:	4c0f      	ldr	r4, [pc, #60]	@ (8020a14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80209d6:	7823      	ldrb	r3, [r4, #0]
 80209d8:	f3bf 8f5b 	dmb	ish
 80209dc:	07db      	lsls	r3, r3, #31
 80209de:	d40b      	bmi.n	80209f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80209e0:	4620      	mov	r0, r4
 80209e2:	f008 f92b 	bl	8028c3c <__cxa_guard_acquire>
 80209e6:	b138      	cbz	r0, 80209f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80209e8:	4620      	mov	r0, r4
 80209ea:	f008 f933 	bl	8028c54 <__cxa_guard_release>
 80209ee:	4a06      	ldr	r2, [pc, #24]	@ (8020a08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80209f0:	4909      	ldr	r1, [pc, #36]	@ (8020a18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80209f2:	480a      	ldr	r0, [pc, #40]	@ (8020a1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80209f4:	f008 f91b 	bl	8028c2e <__aeabi_atexit>
 80209f8:	4b05      	ldr	r3, [pc, #20]	@ (8020a10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80209fa:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80209fc:	4b07      	ldr	r3, [pc, #28]	@ (8020a1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80209fe:	672b      	str	r3, [r5, #112]	@ 0x70
 8020a00:	bd38      	pop	{r3, r4, r5, pc}
 8020a02:	bf00      	nop
 8020a04:	20014004 	.word	0x20014004
 8020a08:	20000000 	.word	0x20000000
 8020a0c:	0801c4e1 	.word	0x0801c4e1
 8020a10:	20000090 	.word	0x20000090
 8020a14:	20014008 	.word	0x20014008
 8020a18:	0801c4df 	.word	0x0801c4df
 8020a1c:	20000094 	.word	0x20000094

08020a20 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8020a20:	b510      	push	{r4, lr}
 8020a22:	4604      	mov	r4, r0
 8020a24:	f7ff ff88 	bl	8020938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8020a28:	4620      	mov	r0, r4
 8020a2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020a2e:	f7ff bfbd 	b.w	80209ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08020a32 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8020a32:	b510      	push	{r4, lr}
 8020a34:	4604      	mov	r4, r0
 8020a36:	f7ff fff3 	bl	8020a20 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8020a3a:	4620      	mov	r0, r4
 8020a3c:	f7ff ff72 	bl	8020924 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8020a40:	4620      	mov	r0, r4
 8020a42:	f7ff fdf9 	bl	8020638 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8020a46:	4620      	mov	r0, r4
 8020a48:	f7ff fcfa 	bl	8020440 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8020a4c:	4620      	mov	r0, r4
 8020a4e:	f7ff fd75 	bl	802053c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8020a52:	4620      	mov	r0, r4
 8020a54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020a58:	f7ff bee0 	b.w	802081c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08020a5c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8020a5c:	b538      	push	{r3, r4, r5, lr}
 8020a5e:	4c0b      	ldr	r4, [pc, #44]	@ (8020a8c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8020a60:	7823      	ldrb	r3, [r4, #0]
 8020a62:	f3bf 8f5b 	dmb	ish
 8020a66:	07db      	lsls	r3, r3, #31
 8020a68:	4605      	mov	r5, r0
 8020a6a:	d40b      	bmi.n	8020a84 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020a6c:	4620      	mov	r0, r4
 8020a6e:	f008 f8e5 	bl	8028c3c <__cxa_guard_acquire>
 8020a72:	b138      	cbz	r0, 8020a84 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020a74:	4620      	mov	r0, r4
 8020a76:	f008 f8ed 	bl	8028c54 <__cxa_guard_release>
 8020a7a:	4a05      	ldr	r2, [pc, #20]	@ (8020a90 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8020a7c:	4905      	ldr	r1, [pc, #20]	@ (8020a94 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8020a7e:	4806      	ldr	r0, [pc, #24]	@ (8020a98 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020a80:	f008 f8d5 	bl	8028c2e <__aeabi_atexit>
 8020a84:	4b04      	ldr	r3, [pc, #16]	@ (8020a98 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020a86:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8020a88:	bd38      	pop	{r3, r4, r5, pc}
 8020a8a:	bf00      	nop
 8020a8c:	20013ff8 	.word	0x20013ff8
 8020a90:	20000000 	.word	0x20000000
 8020a94:	0801c4d9 	.word	0x0801c4d9
 8020a98:	20000088 	.word	0x20000088

08020a9c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8020a9c:	b538      	push	{r3, r4, r5, lr}
 8020a9e:	4c0b      	ldr	r4, [pc, #44]	@ (8020acc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8020aa0:	7823      	ldrb	r3, [r4, #0]
 8020aa2:	f3bf 8f5b 	dmb	ish
 8020aa6:	07db      	lsls	r3, r3, #31
 8020aa8:	4605      	mov	r5, r0
 8020aaa:	d40b      	bmi.n	8020ac4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8020aac:	4620      	mov	r0, r4
 8020aae:	f008 f8c5 	bl	8028c3c <__cxa_guard_acquire>
 8020ab2:	b138      	cbz	r0, 8020ac4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8020ab4:	4620      	mov	r0, r4
 8020ab6:	f008 f8cd 	bl	8028c54 <__cxa_guard_release>
 8020aba:	4a05      	ldr	r2, [pc, #20]	@ (8020ad0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8020abc:	4905      	ldr	r1, [pc, #20]	@ (8020ad4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8020abe:	4806      	ldr	r0, [pc, #24]	@ (8020ad8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8020ac0:	f008 f8b5 	bl	8028c2e <__aeabi_atexit>
 8020ac4:	4b04      	ldr	r3, [pc, #16]	@ (8020ad8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8020ac6:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 8020aca:	bd38      	pop	{r3, r4, r5, pc}
 8020acc:	20013ffc 	.word	0x20013ffc
 8020ad0:	20000000 	.word	0x20000000
 8020ad4:	0801c4d7 	.word	0x0801c4d7
 8020ad8:	2000008c 	.word	0x2000008c

08020adc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8020adc:	b570      	push	{r4, r5, r6, lr}
 8020ade:	4d0d      	ldr	r5, [pc, #52]	@ (8020b14 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8020ae0:	4c0d      	ldr	r4, [pc, #52]	@ (8020b18 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8020ae2:	782b      	ldrb	r3, [r5, #0]
 8020ae4:	f3bf 8f5b 	dmb	ish
 8020ae8:	f013 0f01 	tst.w	r3, #1
 8020aec:	4606      	mov	r6, r0
 8020aee:	d10d      	bne.n	8020b0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8020af0:	4628      	mov	r0, r5
 8020af2:	f008 f8a3 	bl	8028c3c <__cxa_guard_acquire>
 8020af6:	b148      	cbz	r0, 8020b0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8020af8:	4b08      	ldr	r3, [pc, #32]	@ (8020b1c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8020afa:	6023      	str	r3, [r4, #0]
 8020afc:	4628      	mov	r0, r5
 8020afe:	f008 f8a9 	bl	8028c54 <__cxa_guard_release>
 8020b02:	4a07      	ldr	r2, [pc, #28]	@ (8020b20 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8020b04:	4907      	ldr	r1, [pc, #28]	@ (8020b24 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8020b06:	4620      	mov	r0, r4
 8020b08:	f008 f891 	bl	8028c2e <__aeabi_atexit>
 8020b0c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8020b10:	bd70      	pop	{r4, r5, r6, pc}
 8020b12:	bf00      	nop
 8020b14:	20014000 	.word	0x20014000
 8020b18:	20014178 	.word	0x20014178
 8020b1c:	0802d8f0 	.word	0x0802d8f0
 8020b20:	20000000 	.word	0x20000000
 8020b24:	0801c4d5 	.word	0x0801c4d5

08020b28 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8020b28:	b510      	push	{r4, lr}
 8020b2a:	4604      	mov	r4, r0
 8020b2c:	f7ff ff96 	bl	8020a5c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8020b30:	4620      	mov	r0, r4
 8020b32:	f7ff ffb3 	bl	8020a9c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8020b36:	4620      	mov	r0, r4
 8020b38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020b3c:	f7ff bfce 	b.w	8020adc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08020b40 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 8020b40:	b570      	push	{r4, r5, r6, lr}
 8020b42:	4d0d      	ldr	r5, [pc, #52]	@ (8020b78 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8020b44:	4c0d      	ldr	r4, [pc, #52]	@ (8020b7c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 8020b46:	782b      	ldrb	r3, [r5, #0]
 8020b48:	f3bf 8f5b 	dmb	ish
 8020b4c:	f013 0f01 	tst.w	r3, #1
 8020b50:	4606      	mov	r6, r0
 8020b52:	d10d      	bne.n	8020b70 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8020b54:	4628      	mov	r0, r5
 8020b56:	f008 f871 	bl	8028c3c <__cxa_guard_acquire>
 8020b5a:	b148      	cbz	r0, 8020b70 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8020b5c:	4b08      	ldr	r3, [pc, #32]	@ (8020b80 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 8020b5e:	6023      	str	r3, [r4, #0]
 8020b60:	4628      	mov	r0, r5
 8020b62:	f008 f877 	bl	8028c54 <__cxa_guard_release>
 8020b66:	4a07      	ldr	r2, [pc, #28]	@ (8020b84 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 8020b68:	4907      	ldr	r1, [pc, #28]	@ (8020b88 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 8020b6a:	4620      	mov	r0, r4
 8020b6c:	f008 f85f 	bl	8028c2e <__aeabi_atexit>
 8020b70:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8020b74:	bd70      	pop	{r4, r5, r6, pc}
 8020b76:	bf00      	nop
 8020b78:	20013ff4 	.word	0x20013ff4
 8020b7c:	20014074 	.word	0x20014074
 8020b80:	0802d90c 	.word	0x0802d90c
 8020b84:	20000000 	.word	0x20000000
 8020b88:	0801c4d3 	.word	0x0801c4d3

08020b8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8020b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b90:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8020b94:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8020b98:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8020b9c:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8020ba0:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8020ba4:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8020ba8:	8808      	ldrh	r0, [r1, #0]
 8020baa:	fb05 4c0e 	mla	ip, r5, lr, r4
 8020bae:	2d00      	cmp	r5, #0
 8020bb0:	eb02 0a0c 	add.w	sl, r2, ip
 8020bb4:	f2c0 80b0 	blt.w	8020d18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020bb8:	45ab      	cmp	fp, r5
 8020bba:	f340 80ad 	ble.w	8020d18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020bbe:	2c00      	cmp	r4, #0
 8020bc0:	f2c0 80a8 	blt.w	8020d14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020bc4:	45a6      	cmp	lr, r4
 8020bc6:	f340 80a5 	ble.w	8020d14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020bca:	f812 200c 	ldrb.w	r2, [r2, ip]
 8020bce:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8020bd2:	1c62      	adds	r2, r4, #1
 8020bd4:	f100 80a3 	bmi.w	8020d1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020bd8:	4596      	cmp	lr, r2
 8020bda:	f340 80a0 	ble.w	8020d1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020bde:	f1b9 0f00 	cmp.w	r9, #0
 8020be2:	f000 809c 	beq.w	8020d1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020be6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020bea:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8020bee:	3501      	adds	r5, #1
 8020bf0:	f100 8099 	bmi.w	8020d26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020bf4:	45ab      	cmp	fp, r5
 8020bf6:	f340 8096 	ble.w	8020d26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020bfa:	2f00      	cmp	r7, #0
 8020bfc:	f000 8093 	beq.w	8020d26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020c00:	2c00      	cmp	r4, #0
 8020c02:	f2c0 808e 	blt.w	8020d22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8020c06:	45a6      	cmp	lr, r4
 8020c08:	f340 808b 	ble.w	8020d22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8020c0c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8020c10:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8020c14:	3401      	adds	r4, #1
 8020c16:	f100 8089 	bmi.w	8020d2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020c1a:	45a6      	cmp	lr, r4
 8020c1c:	f340 8086 	ble.w	8020d2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020c20:	f1b9 0f00 	cmp.w	r9, #0
 8020c24:	f000 8082 	beq.w	8020d2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020c28:	44d6      	add	lr, sl
 8020c2a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020c2e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8020c32:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8020c36:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8020c3a:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8020c3e:	fb19 fe07 	smulbb	lr, r9, r7
 8020c42:	ea44 0808 	orr.w	r8, r4, r8
 8020c46:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8020c4a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8020c4e:	f1c7 0210 	rsb	r2, r7, #16
 8020c52:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8020c56:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020c5a:	ea44 0c0c 	orr.w	ip, r4, ip
 8020c5e:	eba2 0209 	sub.w	r2, r2, r9
 8020c62:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8020c66:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8020c6a:	fb04 f40c 	mul.w	r4, r4, ip
 8020c6e:	fb02 4808 	mla	r8, r2, r8, r4
 8020c72:	041a      	lsls	r2, r3, #16
 8020c74:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020c78:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020c7c:	4313      	orrs	r3, r2
 8020c7e:	042a      	lsls	r2, r5, #16
 8020c80:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020c84:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8020c88:	fb0e 8303 	mla	r3, lr, r3, r8
 8020c8c:	432a      	orrs	r2, r5
 8020c8e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8020c92:	fb07 3202 	mla	r2, r7, r2, r3
 8020c96:	0d53      	lsrs	r3, r2, #21
 8020c98:	0952      	lsrs	r2, r2, #5
 8020c9a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020c9e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020ca2:	431a      	orrs	r2, r3
 8020ca4:	b293      	uxth	r3, r2
 8020ca6:	b2b4      	uxth	r4, r6
 8020ca8:	1202      	asrs	r2, r0, #8
 8020caa:	43f6      	mvns	r6, r6
 8020cac:	b2f6      	uxtb	r6, r6
 8020cae:	121d      	asrs	r5, r3, #8
 8020cb0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020cb4:	fb12 f206 	smulbb	r2, r2, r6
 8020cb8:	10c7      	asrs	r7, r0, #3
 8020cba:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8020cbe:	00c0      	lsls	r0, r0, #3
 8020cc0:	fb05 2504 	mla	r5, r5, r4, r2
 8020cc4:	b2c0      	uxtb	r0, r0
 8020cc6:	10da      	asrs	r2, r3, #3
 8020cc8:	00db      	lsls	r3, r3, #3
 8020cca:	b2db      	uxtb	r3, r3
 8020ccc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8020cd0:	fb10 f006 	smulbb	r0, r0, r6
 8020cd4:	b2ad      	uxth	r5, r5
 8020cd6:	fb03 0004 	mla	r0, r3, r4, r0
 8020cda:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020cde:	fb17 f706 	smulbb	r7, r7, r6
 8020ce2:	b280      	uxth	r0, r0
 8020ce4:	1c6b      	adds	r3, r5, #1
 8020ce6:	fb02 7204 	mla	r2, r2, r4, r7
 8020cea:	b292      	uxth	r2, r2
 8020cec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020cf0:	1c43      	adds	r3, r0, #1
 8020cf2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020cf6:	1c50      	adds	r0, r2, #1
 8020cf8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8020cfc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020d00:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020d04:	0952      	lsrs	r2, r2, #5
 8020d06:	432b      	orrs	r3, r5
 8020d08:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020d0c:	4313      	orrs	r3, r2
 8020d0e:	800b      	strh	r3, [r1, #0]
 8020d10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d14:	4680      	mov	r8, r0
 8020d16:	e75c      	b.n	8020bd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8020d18:	4684      	mov	ip, r0
 8020d1a:	4680      	mov	r8, r0
 8020d1c:	e767      	b.n	8020bee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8020d1e:	4684      	mov	ip, r0
 8020d20:	e765      	b.n	8020bee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8020d22:	4605      	mov	r5, r0
 8020d24:	e776      	b.n	8020c14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8020d26:	4603      	mov	r3, r0
 8020d28:	4605      	mov	r5, r0
 8020d2a:	e782      	b.n	8020c32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8020d2c:	4603      	mov	r3, r0
 8020d2e:	e780      	b.n	8020c32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08020d30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020d30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d34:	b099      	sub	sp, #100	@ 0x64
 8020d36:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8020d3a:	9215      	str	r2, [sp, #84]	@ 0x54
 8020d3c:	9309      	str	r3, [sp, #36]	@ 0x24
 8020d3e:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8020d40:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8020d44:	930d      	str	r3, [sp, #52]	@ 0x34
 8020d46:	910c      	str	r1, [sp, #48]	@ 0x30
 8020d48:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8020d4c:	9016      	str	r0, [sp, #88]	@ 0x58
 8020d4e:	6850      	ldr	r0, [r2, #4]
 8020d50:	6812      	ldr	r2, [r2, #0]
 8020d52:	fb00 1303 	mla	r3, r0, r3, r1
 8020d56:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8020d5a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8020d5c:	681b      	ldr	r3, [r3, #0]
 8020d5e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020d60:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8020d62:	685e      	ldr	r6, [r3, #4]
 8020d64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020d66:	43db      	mvns	r3, r3
 8020d68:	b2db      	uxtb	r3, r3
 8020d6a:	3604      	adds	r6, #4
 8020d6c:	930a      	str	r3, [sp, #40]	@ 0x28
 8020d6e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020d70:	2b00      	cmp	r3, #0
 8020d72:	dc03      	bgt.n	8020d7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020d74:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8020d76:	2b00      	cmp	r3, #0
 8020d78:	f340 8225 	ble.w	80211c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020d7c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8020d7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d82:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020d86:	1e48      	subs	r0, r1, #1
 8020d88:	1e57      	subs	r7, r2, #1
 8020d8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020d8c:	2b00      	cmp	r3, #0
 8020d8e:	f340 80e3 	ble.w	8020f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020d92:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8020d96:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020d9a:	d406      	bmi.n	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020d9c:	4584      	cmp	ip, r0
 8020d9e:	da04      	bge.n	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020da0:	2b00      	cmp	r3, #0
 8020da2:	db02      	blt.n	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020da4:	42bb      	cmp	r3, r7
 8020da6:	f2c0 80d8 	blt.w	8020f5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020daa:	f11c 0c01 	adds.w	ip, ip, #1
 8020dae:	f100 80c9 	bmi.w	8020f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020db2:	4561      	cmp	r1, ip
 8020db4:	f2c0 80c6 	blt.w	8020f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020db8:	3301      	adds	r3, #1
 8020dba:	f100 80c3 	bmi.w	8020f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020dbe:	429a      	cmp	r2, r3
 8020dc0:	f2c0 80c0 	blt.w	8020f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020dc4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8020dc8:	4647      	mov	r7, r8
 8020dca:	f1bb 0f00 	cmp.w	fp, #0
 8020dce:	f340 80e3 	ble.w	8020f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8020dd2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8020dd4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8020dd6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020dda:	689b      	ldr	r3, [r3, #8]
 8020ddc:	ea5f 422a 	movs.w	r2, sl, asr #16
 8020de0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020de4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8020de8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020dec:	f100 8121 	bmi.w	8021032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020df0:	f103 39ff 	add.w	r9, r3, #4294967295
 8020df4:	454a      	cmp	r2, r9
 8020df6:	f280 811c 	bge.w	8021032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020dfa:	f1bc 0f00 	cmp.w	ip, #0
 8020dfe:	f2c0 8118 	blt.w	8021032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020e02:	f10e 39ff 	add.w	r9, lr, #4294967295
 8020e06:	45cc      	cmp	ip, r9
 8020e08:	f280 8113 	bge.w	8021032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020e0c:	b21b      	sxth	r3, r3
 8020e0e:	fb0c 2203 	mla	r2, ip, r3, r2
 8020e12:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020e14:	eb04 0902 	add.w	r9, r4, r2
 8020e18:	5ca2      	ldrb	r2, [r4, r2]
 8020e1a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8020e1e:	2800      	cmp	r0, #0
 8020e20:	f000 80fe 	beq.w	8021020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020e24:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020e28:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020e2c:	9211      	str	r2, [sp, #68]	@ 0x44
 8020e2e:	b151      	cbz	r1, 8020e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020e30:	eb09 0203 	add.w	r2, r9, r3
 8020e34:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020e38:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020e3c:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020e3e:	7853      	ldrb	r3, [r2, #1]
 8020e40:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020e44:	9312      	str	r3, [sp, #72]	@ 0x48
 8020e46:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8020e48:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020e4a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020e4e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8020e52:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020e56:	ea4c 0c03 	orr.w	ip, ip, r3
 8020e5a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8020e5c:	041b      	lsls	r3, r3, #16
 8020e5e:	fb10 f201 	smulbb	r2, r0, r1
 8020e62:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8020e66:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020e6a:	10d2      	asrs	r2, r2, #3
 8020e6c:	4323      	orrs	r3, r4
 8020e6e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8020e72:	4353      	muls	r3, r2
 8020e74:	fb09 330c 	mla	r3, r9, ip, r3
 8020e78:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020e7c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8020e80:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8020e84:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020e88:	f1c1 0c10 	rsb	ip, r1, #16
 8020e8c:	ebac 0c00 	sub.w	ip, ip, r0
 8020e90:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020e94:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020e98:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020e9a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020e9c:	0418      	lsls	r0, r3, #16
 8020e9e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020ea2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020ea6:	4318      	orrs	r0, r3
 8020ea8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020eac:	fb02 c200 	mla	r2, r2, r0, ip
 8020eb0:	0d53      	lsrs	r3, r2, #21
 8020eb2:	0952      	lsrs	r2, r2, #5
 8020eb4:	8838      	ldrh	r0, [r7, #0]
 8020eb6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020eba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020ebe:	431a      	orrs	r2, r3
 8020ec0:	b292      	uxth	r2, r2
 8020ec2:	1201      	asrs	r1, r0, #8
 8020ec4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8020ec8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8020ecc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020ed0:	fb11 f104 	smulbb	r1, r1, r4
 8020ed4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020ed8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020edc:	00c0      	lsls	r0, r0, #3
 8020ede:	fb0c 1c03 	mla	ip, ip, r3, r1
 8020ee2:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8020ee6:	10d1      	asrs	r1, r2, #3
 8020ee8:	b2c0      	uxtb	r0, r0
 8020eea:	00d2      	lsls	r2, r2, #3
 8020eec:	b2d2      	uxtb	r2, r2
 8020eee:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020ef2:	fb1e fe04 	smulbb	lr, lr, r4
 8020ef6:	fb10 f004 	smulbb	r0, r0, r4
 8020efa:	fa1f fc8c 	uxth.w	ip, ip
 8020efe:	fb01 e103 	mla	r1, r1, r3, lr
 8020f02:	fb02 0303 	mla	r3, r2, r3, r0
 8020f06:	b29a      	uxth	r2, r3
 8020f08:	f10c 0301 	add.w	r3, ip, #1
 8020f0c:	b289      	uxth	r1, r1
 8020f0e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020f12:	1c53      	adds	r3, r2, #1
 8020f14:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020f18:	1c4a      	adds	r2, r1, #1
 8020f1a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020f1e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020f22:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020f26:	0949      	lsrs	r1, r1, #5
 8020f28:	ea43 030c 	orr.w	r3, r3, ip
 8020f2c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020f30:	430b      	orrs	r3, r1
 8020f32:	803b      	strh	r3, [r7, #0]
 8020f34:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020f36:	449a      	add	sl, r3
 8020f38:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8020f3a:	3702      	adds	r7, #2
 8020f3c:	441d      	add	r5, r3
 8020f3e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020f42:	e742      	b.n	8020dca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020f44:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020f46:	449a      	add	sl, r3
 8020f48:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8020f4a:	441d      	add	r5, r3
 8020f4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020f4e:	3b01      	subs	r3, #1
 8020f50:	9309      	str	r3, [sp, #36]	@ 0x24
 8020f52:	f108 0802 	add.w	r8, r8, #2
 8020f56:	e718      	b.n	8020d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020f58:	d023      	beq.n	8020fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020f5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020f5c:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8020f5e:	3b01      	subs	r3, #1
 8020f60:	fb00 a003 	mla	r0, r0, r3, sl
 8020f64:	1400      	asrs	r0, r0, #16
 8020f66:	f53f af2d 	bmi.w	8020dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020f6a:	3901      	subs	r1, #1
 8020f6c:	4288      	cmp	r0, r1
 8020f6e:	f6bf af29 	bge.w	8020dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020f72:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8020f74:	fb01 5303 	mla	r3, r1, r3, r5
 8020f78:	141b      	asrs	r3, r3, #16
 8020f7a:	f53f af23 	bmi.w	8020dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020f7e:	3a01      	subs	r2, #1
 8020f80:	4293      	cmp	r3, r2
 8020f82:	f6bf af1f 	bge.w	8020dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020f86:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8020f8a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8020f8e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8020f92:	f1be 0f00 	cmp.w	lr, #0
 8020f96:	dc6c      	bgt.n	8021072 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020f98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020f9a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020f9e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8020fa2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020fa4:	2b00      	cmp	r3, #0
 8020fa6:	f340 810e 	ble.w	80211c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020faa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020fae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020fb2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020fb6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8020fb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020fbc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020fc0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020fc4:	eef0 6a62 	vmov.f32	s13, s5
 8020fc8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020fcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020fd0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020fd4:	ee16 aa90 	vmov	sl, s13
 8020fd8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020fdc:	eef0 6a43 	vmov.f32	s13, s6
 8020fe0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020fe4:	ee12 2a90 	vmov	r2, s5
 8020fe8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020fec:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ff0:	ee13 2a10 	vmov	r2, s6
 8020ff4:	9325      	str	r3, [sp, #148]	@ 0x94
 8020ff6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8020ff8:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ffc:	9326      	str	r3, [sp, #152]	@ 0x98
 8020ffe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021000:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8021002:	3b01      	subs	r3, #1
 8021004:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021008:	930c      	str	r3, [sp, #48]	@ 0x30
 802100a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802100c:	bf08      	it	eq
 802100e:	4613      	moveq	r3, r2
 8021010:	ee16 5a90 	vmov	r5, s13
 8021014:	9309      	str	r3, [sp, #36]	@ 0x24
 8021016:	eeb0 3a67 	vmov.f32	s6, s15
 802101a:	eef0 2a47 	vmov.f32	s5, s14
 802101e:	e6a6      	b.n	8020d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021020:	2900      	cmp	r1, #0
 8021022:	f43f af10 	beq.w	8020e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021026:	f819 3003 	ldrb.w	r3, [r9, r3]
 802102a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802102e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021030:	e709      	b.n	8020e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021032:	f112 0901 	adds.w	r9, r2, #1
 8021036:	f53f af7d 	bmi.w	8020f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802103a:	454b      	cmp	r3, r9
 802103c:	f6ff af7a 	blt.w	8020f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021040:	f11c 0901 	adds.w	r9, ip, #1
 8021044:	f53f af76 	bmi.w	8020f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021048:	45ce      	cmp	lr, r9
 802104a:	f6ff af73 	blt.w	8020f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802104e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021050:	9202      	str	r2, [sp, #8]
 8021052:	b21b      	sxth	r3, r3
 8021054:	fa0f f28e 	sxth.w	r2, lr
 8021058:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802105c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8021060:	9201      	str	r2, [sp, #4]
 8021062:	9300      	str	r3, [sp, #0]
 8021064:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021066:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8021068:	4633      	mov	r3, r6
 802106a:	4639      	mov	r1, r7
 802106c:	f7ff fd8e 	bl	8020b8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8021070:	e760      	b.n	8020f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021072:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021074:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021076:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802107a:	ea4f 422a 	mov.w	r2, sl, asr #16
 802107e:	1429      	asrs	r1, r5, #16
 8021080:	fb03 2101 	mla	r1, r3, r1, r2
 8021084:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021086:	440a      	add	r2, r1
 8021088:	5c61      	ldrb	r1, [r4, r1]
 802108a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 802108e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021092:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8021096:	f1bc 0f00 	cmp.w	ip, #0
 802109a:	f000 808c 	beq.w	80211b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 802109e:	7857      	ldrb	r7, [r2, #1]
 80210a0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80210a4:	9413      	str	r4, [sp, #76]	@ 0x4c
 80210a6:	b140      	cbz	r0, 80210ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80210a8:	18d7      	adds	r7, r2, r3
 80210aa:	5cd3      	ldrb	r3, [r2, r3]
 80210ac:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80210b0:	9310      	str	r3, [sp, #64]	@ 0x40
 80210b2:	787b      	ldrb	r3, [r7, #1]
 80210b4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80210b8:	9314      	str	r3, [sp, #80]	@ 0x50
 80210ba:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80210bc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80210be:	fb1c f200 	smulbb	r2, ip, r0
 80210c2:	041f      	lsls	r7, r3, #16
 80210c4:	10d2      	asrs	r2, r2, #3
 80210c6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80210ca:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 80210ce:	431f      	orrs	r7, r3
 80210d0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80210d4:	9317      	str	r3, [sp, #92]	@ 0x5c
 80210d6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80210d8:	041b      	lsls	r3, r3, #16
 80210da:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 80210de:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80210e2:	ea43 030b 	orr.w	r3, r3, fp
 80210e6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80210e8:	4353      	muls	r3, r2
 80210ea:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80210ee:	fb04 3707 	mla	r7, r4, r7, r3
 80210f2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80210f6:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 80210fa:	ea43 0b01 	orr.w	fp, r3, r1
 80210fe:	f1c0 0110 	rsb	r1, r0, #16
 8021102:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021104:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021106:	eba1 0c0c 	sub.w	ip, r1, ip
 802110a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802110e:	fb0c 770b 	mla	r7, ip, fp, r7
 8021112:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021116:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 802111a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802111e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8021122:	ea4c 0c0b 	orr.w	ip, ip, fp
 8021126:	fb02 770c 	mla	r7, r2, ip, r7
 802112a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802112c:	0d79      	lsrs	r1, r7, #21
 802112e:	097f      	lsrs	r7, r7, #5
 8021130:	8812      	ldrh	r2, [r2, #0]
 8021132:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021136:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 802113a:	430f      	orrs	r7, r1
 802113c:	b2bb      	uxth	r3, r7
 802113e:	1211      	asrs	r1, r2, #8
 8021140:	1218      	asrs	r0, r3, #8
 8021142:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021146:	fb11 f104 	smulbb	r1, r1, r4
 802114a:	10d7      	asrs	r7, r2, #3
 802114c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021150:	00d2      	lsls	r2, r2, #3
 8021152:	fb00 1009 	mla	r0, r0, r9, r1
 8021156:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 802115a:	10d9      	asrs	r1, r3, #3
 802115c:	b2d2      	uxtb	r2, r2
 802115e:	00db      	lsls	r3, r3, #3
 8021160:	fb17 f704 	smulbb	r7, r7, r4
 8021164:	fb12 f204 	smulbb	r2, r2, r4
 8021168:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802116c:	b2db      	uxtb	r3, r3
 802116e:	b280      	uxth	r0, r0
 8021170:	fb01 7109 	mla	r1, r1, r9, r7
 8021174:	fb03 2309 	mla	r3, r3, r9, r2
 8021178:	b29b      	uxth	r3, r3
 802117a:	b289      	uxth	r1, r1
 802117c:	1c42      	adds	r2, r0, #1
 802117e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021182:	1c4f      	adds	r7, r1, #1
 8021184:	1c5a      	adds	r2, r3, #1
 8021186:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802118a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802118e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8021192:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021196:	0949      	lsrs	r1, r1, #5
 8021198:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802119a:	4310      	orrs	r0, r2
 802119c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80211a0:	4308      	orrs	r0, r1
 80211a2:	f823 0b02 	strh.w	r0, [r3], #2
 80211a6:	930e      	str	r3, [sp, #56]	@ 0x38
 80211a8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80211aa:	449a      	add	sl, r3
 80211ac:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80211ae:	f10e 3eff 	add.w	lr, lr, #4294967295
 80211b2:	441d      	add	r5, r3
 80211b4:	e6ed      	b.n	8020f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80211b6:	2800      	cmp	r0, #0
 80211b8:	f43f af7f 	beq.w	80210ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80211bc:	5cd3      	ldrb	r3, [r2, r3]
 80211be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80211c2:	9310      	str	r3, [sp, #64]	@ 0x40
 80211c4:	e779      	b.n	80210ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80211c6:	b019      	add	sp, #100	@ 0x64
 80211c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080211cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80211cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80211d0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 80211d4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80211d8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 80211dc:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 80211e0:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 80211e4:	8808      	ldrh	r0, [r1, #0]
 80211e6:	fb08 470e 	mla	r7, r8, lr, r4
 80211ea:	f1b8 0f00 	cmp.w	r8, #0
 80211ee:	eb02 0907 	add.w	r9, r2, r7
 80211f2:	db67      	blt.n	80212c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80211f4:	45c2      	cmp	sl, r8
 80211f6:	dd65      	ble.n	80212c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80211f8:	2c00      	cmp	r4, #0
 80211fa:	db61      	blt.n	80212c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80211fc:	45a6      	cmp	lr, r4
 80211fe:	dd5f      	ble.n	80212c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8021200:	5dd2      	ldrb	r2, [r2, r7]
 8021202:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8021206:	1c62      	adds	r2, r4, #1
 8021208:	d45f      	bmi.n	80212ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802120a:	4596      	cmp	lr, r2
 802120c:	dd5d      	ble.n	80212ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802120e:	2d00      	cmp	r5, #0
 8021210:	d05b      	beq.n	80212ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8021212:	f899 2001 	ldrb.w	r2, [r9, #1]
 8021216:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 802121a:	f118 0801 	adds.w	r8, r8, #1
 802121e:	d458      	bmi.n	80212d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021220:	45c2      	cmp	sl, r8
 8021222:	dd56      	ble.n	80212d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021224:	2e00      	cmp	r6, #0
 8021226:	d054      	beq.n	80212d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021228:	2c00      	cmp	r4, #0
 802122a:	db50      	blt.n	80212ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 802122c:	45a6      	cmp	lr, r4
 802122e:	dd4e      	ble.n	80212ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8021230:	f819 200e 	ldrb.w	r2, [r9, lr]
 8021234:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8021238:	3401      	adds	r4, #1
 802123a:	d407      	bmi.n	802124c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802123c:	45a6      	cmp	lr, r4
 802123e:	dd05      	ble.n	802124c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021240:	b125      	cbz	r5, 802124c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021242:	44ce      	add	lr, r9
 8021244:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8021248:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 802124c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8021250:	fb15 f406 	smulbb	r4, r5, r6
 8021254:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8021258:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802125c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8021260:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8021264:	ea43 0c0c 	orr.w	ip, r3, ip
 8021268:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802126c:	f1c6 0310 	rsb	r3, r6, #16
 8021270:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8021274:	1b5b      	subs	r3, r3, r5
 8021276:	ea4e 0707 	orr.w	r7, lr, r7
 802127a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802127e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021282:	437d      	muls	r5, r7
 8021284:	fb03 5c0c 	mla	ip, r3, ip, r5
 8021288:	0403      	lsls	r3, r0, #16
 802128a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802128e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021292:	4318      	orrs	r0, r3
 8021294:	0413      	lsls	r3, r2, #16
 8021296:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802129a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802129e:	4313      	orrs	r3, r2
 80212a0:	fb04 c000 	mla	r0, r4, r0, ip
 80212a4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80212a8:	fb06 0003 	mla	r0, r6, r3, r0
 80212ac:	0d43      	lsrs	r3, r0, #21
 80212ae:	0940      	lsrs	r0, r0, #5
 80212b0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80212b4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80212b8:	4318      	orrs	r0, r3
 80212ba:	8008      	strh	r0, [r1, #0]
 80212bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80212c0:	4684      	mov	ip, r0
 80212c2:	e7a0      	b.n	8021206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80212c4:	4607      	mov	r7, r0
 80212c6:	4684      	mov	ip, r0
 80212c8:	e7a7      	b.n	802121a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80212ca:	4607      	mov	r7, r0
 80212cc:	e7a5      	b.n	802121a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80212ce:	4602      	mov	r2, r0
 80212d0:	e7b2      	b.n	8021238 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80212d2:	4602      	mov	r2, r0
 80212d4:	e7ba      	b.n	802124c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080212d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80212d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212da:	b093      	sub	sp, #76	@ 0x4c
 80212dc:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 80212e0:	920f      	str	r2, [sp, #60]	@ 0x3c
 80212e2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80212e4:	9108      	str	r1, [sp, #32]
 80212e6:	9306      	str	r3, [sp, #24]
 80212e8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80212ec:	9010      	str	r0, [sp, #64]	@ 0x40
 80212ee:	6850      	ldr	r0, [r2, #4]
 80212f0:	6812      	ldr	r2, [r2, #0]
 80212f2:	fb00 1303 	mla	r3, r0, r3, r1
 80212f6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80212fa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80212fc:	681b      	ldr	r3, [r3, #0]
 80212fe:	9307      	str	r3, [sp, #28]
 8021300:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021302:	685f      	ldr	r7, [r3, #4]
 8021304:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8021308:	3704      	adds	r7, #4
 802130a:	9b08      	ldr	r3, [sp, #32]
 802130c:	2b00      	cmp	r3, #0
 802130e:	dc03      	bgt.n	8021318 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021310:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021312:	2b00      	cmp	r3, #0
 8021314:	f340 81b2 	ble.w	802167c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021318:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802131a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802131e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021322:	1e48      	subs	r0, r1, #1
 8021324:	f102 3cff 	add.w	ip, r2, #4294967295
 8021328:	9b06      	ldr	r3, [sp, #24]
 802132a:	2b00      	cmp	r3, #0
 802132c:	f340 80a9 	ble.w	8021482 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8021330:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021334:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021338:	d406      	bmi.n	8021348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802133a:	4586      	cmp	lr, r0
 802133c:	da04      	bge.n	8021348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802133e:	2b00      	cmp	r3, #0
 8021340:	db02      	blt.n	8021348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021342:	4563      	cmp	r3, ip
 8021344:	f2c0 809e 	blt.w	8021484 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021348:	f11e 0e01 	adds.w	lr, lr, #1
 802134c:	f100 808f 	bmi.w	802146e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021350:	4571      	cmp	r1, lr
 8021352:	f2c0 808c 	blt.w	802146e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021356:	3301      	adds	r3, #1
 8021358:	f100 8089 	bmi.w	802146e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802135c:	429a      	cmp	r2, r3
 802135e:	f2c0 8086 	blt.w	802146e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021362:	f8dd b018 	ldr.w	fp, [sp, #24]
 8021366:	46c8      	mov	r8, r9
 8021368:	f1bb 0f00 	cmp.w	fp, #0
 802136c:	f340 80a6 	ble.w	80214bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8021370:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8021372:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021374:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021378:	689b      	ldr	r3, [r3, #8]
 802137a:	1422      	asrs	r2, r4, #16
 802137c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021380:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021384:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021388:	f100 80e3 	bmi.w	8021552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802138c:	f103 3aff 	add.w	sl, r3, #4294967295
 8021390:	4552      	cmp	r2, sl
 8021392:	f280 80de 	bge.w	8021552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021396:	f1bc 0f00 	cmp.w	ip, #0
 802139a:	f2c0 80da 	blt.w	8021552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802139e:	f10e 3aff 	add.w	sl, lr, #4294967295
 80213a2:	45d4      	cmp	ip, sl
 80213a4:	f280 80d5 	bge.w	8021552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80213a8:	b21b      	sxth	r3, r3
 80213aa:	fb0c 2203 	mla	r2, ip, r3, r2
 80213ae:	9d07      	ldr	r5, [sp, #28]
 80213b0:	eb05 0a02 	add.w	sl, r5, r2
 80213b4:	5caa      	ldrb	r2, [r5, r2]
 80213b6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80213ba:	2800      	cmp	r0, #0
 80213bc:	f000 80c0 	beq.w	8021540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80213c0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80213c4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80213c8:	920b      	str	r2, [sp, #44]	@ 0x2c
 80213ca:	b151      	cbz	r1, 80213e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80213cc:	eb0a 0203 	add.w	r2, sl, r3
 80213d0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80213d4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80213d8:	9309      	str	r3, [sp, #36]	@ 0x24
 80213da:	7853      	ldrb	r3, [r2, #1]
 80213dc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80213e0:	930c      	str	r3, [sp, #48]	@ 0x30
 80213e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80213e4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80213e6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80213ea:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80213ee:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80213f2:	ea4c 0c03 	orr.w	ip, ip, r3
 80213f6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80213f8:	041b      	lsls	r3, r3, #16
 80213fa:	fb10 f201 	smulbb	r2, r0, r1
 80213fe:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8021402:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8021406:	10d2      	asrs	r2, r2, #3
 8021408:	432b      	orrs	r3, r5
 802140a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802140e:	4353      	muls	r3, r2
 8021410:	fb0a 330c 	mla	r3, sl, ip, r3
 8021414:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8021418:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802141c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021420:	ea4c 0e0e 	orr.w	lr, ip, lr
 8021424:	f1c1 0c10 	rsb	ip, r1, #16
 8021428:	ebac 0c00 	sub.w	ip, ip, r0
 802142c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021430:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8021434:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021436:	0418      	lsls	r0, r3, #16
 8021438:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802143c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021440:	4318      	orrs	r0, r3
 8021442:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8021446:	fb02 c200 	mla	r2, r2, r0, ip
 802144a:	0d53      	lsrs	r3, r2, #21
 802144c:	0952      	lsrs	r2, r2, #5
 802144e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021452:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021456:	431a      	orrs	r2, r3
 8021458:	f8a8 2000 	strh.w	r2, [r8]
 802145c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802145e:	441c      	add	r4, r3
 8021460:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021462:	f108 0802 	add.w	r8, r8, #2
 8021466:	441e      	add	r6, r3
 8021468:	f10b 3bff 	add.w	fp, fp, #4294967295
 802146c:	e77c      	b.n	8021368 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802146e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021470:	441c      	add	r4, r3
 8021472:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021474:	441e      	add	r6, r3
 8021476:	9b06      	ldr	r3, [sp, #24]
 8021478:	3b01      	subs	r3, #1
 802147a:	9306      	str	r3, [sp, #24]
 802147c:	f109 0902 	add.w	r9, r9, #2
 8021480:	e752      	b.n	8021328 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021482:	d020      	beq.n	80214c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8021484:	9b06      	ldr	r3, [sp, #24]
 8021486:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8021488:	3b01      	subs	r3, #1
 802148a:	fb00 4003 	mla	r0, r0, r3, r4
 802148e:	1400      	asrs	r0, r0, #16
 8021490:	f53f af67 	bmi.w	8021362 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021494:	3901      	subs	r1, #1
 8021496:	4288      	cmp	r0, r1
 8021498:	f6bf af63 	bge.w	8021362 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802149c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802149e:	fb01 6303 	mla	r3, r1, r3, r6
 80214a2:	141b      	asrs	r3, r3, #16
 80214a4:	f53f af5d 	bmi.w	8021362 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80214a8:	3a01      	subs	r2, #1
 80214aa:	4293      	cmp	r3, r2
 80214ac:	f6bf af59 	bge.w	8021362 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80214b0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80214b4:	46ca      	mov	sl, r9
 80214b6:	f1b8 0f00 	cmp.w	r8, #0
 80214ba:	dc67      	bgt.n	802158c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80214bc:	9b06      	ldr	r3, [sp, #24]
 80214be:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80214c2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80214c6:	9b08      	ldr	r3, [sp, #32]
 80214c8:	2b00      	cmp	r3, #0
 80214ca:	f340 80d7 	ble.w	802167c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80214ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 80214d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80214d6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80214da:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80214dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80214e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80214e4:	eeb0 6a62 	vmov.f32	s12, s5
 80214e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80214ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80214f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80214f4:	ee16 4a10 	vmov	r4, s12
 80214f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80214fc:	eeb0 6a43 	vmov.f32	s12, s6
 8021500:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021504:	ee12 2a90 	vmov	r2, s5
 8021508:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802150c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021510:	ee13 2a10 	vmov	r2, s6
 8021514:	931f      	str	r3, [sp, #124]	@ 0x7c
 8021516:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021518:	fb92 f3f3 	sdiv	r3, r2, r3
 802151c:	9320      	str	r3, [sp, #128]	@ 0x80
 802151e:	9b08      	ldr	r3, [sp, #32]
 8021520:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8021522:	3b01      	subs	r3, #1
 8021524:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8021528:	9308      	str	r3, [sp, #32]
 802152a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802152c:	bf08      	it	eq
 802152e:	4613      	moveq	r3, r2
 8021530:	ee16 6a10 	vmov	r6, s12
 8021534:	9306      	str	r3, [sp, #24]
 8021536:	eeb0 3a67 	vmov.f32	s6, s15
 802153a:	eef0 2a47 	vmov.f32	s5, s14
 802153e:	e6e4      	b.n	802130a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021540:	2900      	cmp	r1, #0
 8021542:	f43f af4e 	beq.w	80213e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021546:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802154a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802154e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021550:	e747      	b.n	80213e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021552:	f112 0a01 	adds.w	sl, r2, #1
 8021556:	d481      	bmi.n	802145c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021558:	4553      	cmp	r3, sl
 802155a:	f6ff af7f 	blt.w	802145c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802155e:	f11c 0a01 	adds.w	sl, ip, #1
 8021562:	f53f af7b 	bmi.w	802145c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021566:	45d6      	cmp	lr, sl
 8021568:	f6ff af78 	blt.w	802145c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802156c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8021570:	b21b      	sxth	r3, r3
 8021572:	fa0f f28e 	sxth.w	r2, lr
 8021576:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802157a:	9201      	str	r2, [sp, #4]
 802157c:	9300      	str	r3, [sp, #0]
 802157e:	9a07      	ldr	r2, [sp, #28]
 8021580:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8021582:	463b      	mov	r3, r7
 8021584:	4641      	mov	r1, r8
 8021586:	f7ff fe21 	bl	80211cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802158a:	e767      	b.n	802145c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802158c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802158e:	9d07      	ldr	r5, [sp, #28]
 8021590:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021594:	1422      	asrs	r2, r4, #16
 8021596:	1431      	asrs	r1, r6, #16
 8021598:	fb03 2101 	mla	r1, r3, r1, r2
 802159c:	9a07      	ldr	r2, [sp, #28]
 802159e:	440a      	add	r2, r1
 80215a0:	5c69      	ldrb	r1, [r5, r1]
 80215a2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80215a6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80215aa:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80215ae:	f1be 0f00 	cmp.w	lr, #0
 80215b2:	d05c      	beq.n	802166e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80215b4:	f892 c001 	ldrb.w	ip, [r2, #1]
 80215b8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80215bc:	950d      	str	r5, [sp, #52]	@ 0x34
 80215be:	b150      	cbz	r0, 80215d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80215c0:	eb02 0c03 	add.w	ip, r2, r3
 80215c4:	5cd3      	ldrb	r3, [r2, r3]
 80215c6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80215ca:	930a      	str	r3, [sp, #40]	@ 0x28
 80215cc:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80215d0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80215d4:	930e      	str	r3, [sp, #56]	@ 0x38
 80215d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80215d8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80215da:	fb1e f200 	smulbb	r2, lr, r0
 80215de:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80215e2:	10d2      	asrs	r2, r2, #3
 80215e4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80215e8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80215ec:	ea4c 0c03 	orr.w	ip, ip, r3
 80215f0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80215f4:	9311      	str	r3, [sp, #68]	@ 0x44
 80215f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80215f8:	041b      	lsls	r3, r3, #16
 80215fa:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 80215fe:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8021602:	ea43 030b 	orr.w	r3, r3, fp
 8021606:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021608:	4353      	muls	r3, r2
 802160a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802160e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8021612:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8021616:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 802161a:	ea43 0b01 	orr.w	fp, r3, r1
 802161e:	f1c0 0110 	rsb	r1, r0, #16
 8021622:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021624:	eba1 0e0e 	sub.w	lr, r1, lr
 8021628:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 802162c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8021630:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8021634:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8021638:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802163c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8021640:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8021644:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021648:	ea4f 535c 	mov.w	r3, ip, lsr #21
 802164c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021650:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021654:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8021658:	ea43 0c0c 	orr.w	ip, r3, ip
 802165c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802165e:	f82a cb02 	strh.w	ip, [sl], #2
 8021662:	441c      	add	r4, r3
 8021664:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021666:	f108 38ff 	add.w	r8, r8, #4294967295
 802166a:	441e      	add	r6, r3
 802166c:	e723      	b.n	80214b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802166e:	2800      	cmp	r0, #0
 8021670:	d0b1      	beq.n	80215d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8021672:	5cd3      	ldrb	r3, [r2, r3]
 8021674:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021678:	930a      	str	r3, [sp, #40]	@ 0x28
 802167a:	e7ac      	b.n	80215d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802167c:	b013      	add	sp, #76	@ 0x4c
 802167e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8021682:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021686:	880d      	ldrh	r5, [r1, #0]
 8021688:	b087      	sub	sp, #28
 802168a:	10ef      	asrs	r7, r5, #3
 802168c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8021690:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8021694:	00ed      	lsls	r5, r5, #3
 8021696:	9701      	str	r7, [sp, #4]
 8021698:	b2ed      	uxtb	r5, r5
 802169a:	9502      	str	r5, [sp, #8]
 802169c:	9d01      	ldr	r5, [sp, #4]
 802169e:	9103      	str	r1, [sp, #12]
 80216a0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 80216a4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 80216a8:	9902      	ldr	r1, [sp, #8]
 80216aa:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 80216ae:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 80216b2:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 80216b6:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 80216ba:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 80216be:	022d      	lsls	r5, r5, #8
 80216c0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80216c4:	fb06 0709 	mla	r7, r6, r9, r0
 80216c8:	430d      	orrs	r5, r1
 80216ca:	2e00      	cmp	r6, #0
 80216cc:	eb02 0c07 	add.w	ip, r2, r7
 80216d0:	9505      	str	r5, [sp, #20]
 80216d2:	f2c0 80b6 	blt.w	8021842 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80216d6:	45b3      	cmp	fp, r6
 80216d8:	f340 80b3 	ble.w	8021842 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80216dc:	2800      	cmp	r0, #0
 80216de:	f2c0 80ae 	blt.w	802183e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80216e2:	4581      	cmp	r9, r0
 80216e4:	f340 80ab 	ble.w	802183e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80216e8:	5dd7      	ldrb	r7, [r2, r7]
 80216ea:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80216ee:	441f      	add	r7, r3
 80216f0:	1c42      	adds	r2, r0, #1
 80216f2:	f100 80a9 	bmi.w	8021848 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80216f6:	4591      	cmp	r9, r2
 80216f8:	f340 80a6 	ble.w	8021848 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80216fc:	2c00      	cmp	r4, #0
 80216fe:	f000 80a3 	beq.w	8021848 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8021702:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8021706:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802170a:	441d      	add	r5, r3
 802170c:	3601      	adds	r6, #1
 802170e:	f100 809f 	bmi.w	8021850 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8021712:	45b3      	cmp	fp, r6
 8021714:	f340 809c 	ble.w	8021850 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8021718:	f1be 0f00 	cmp.w	lr, #0
 802171c:	f000 8098 	beq.w	8021850 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8021720:	2800      	cmp	r0, #0
 8021722:	f2c0 8093 	blt.w	802184c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8021726:	4581      	cmp	r9, r0
 8021728:	f340 8090 	ble.w	802184c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802172c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8021730:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021734:	441e      	add	r6, r3
 8021736:	3001      	adds	r0, #1
 8021738:	f100 808d 	bmi.w	8021856 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802173c:	4581      	cmp	r9, r0
 802173e:	f340 808a 	ble.w	8021856 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8021742:	2c00      	cmp	r4, #0
 8021744:	f000 8087 	beq.w	8021856 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8021748:	44e1      	add	r9, ip
 802174a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802174e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021752:	4413      	add	r3, r2
 8021754:	b2a4      	uxth	r4, r4
 8021756:	fa1f fe8e 	uxth.w	lr, lr
 802175a:	fb04 fb0e 	mul.w	fp, r4, lr
 802175e:	0124      	lsls	r4, r4, #4
 8021760:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8021764:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8021768:	eba4 040b 	sub.w	r4, r4, fp
 802176c:	fa1f f08e 	uxth.w	r0, lr
 8021770:	b2a2      	uxth	r2, r4
 8021772:	78ac      	ldrb	r4, [r5, #2]
 8021774:	f897 c002 	ldrb.w	ip, [r7, #2]
 8021778:	9901      	ldr	r1, [sp, #4]
 802177a:	eba9 0900 	sub.w	r9, r9, r0
 802177e:	fa1f f989 	uxth.w	r9, r9
 8021782:	4354      	muls	r4, r2
 8021784:	fb09 440c 	mla	r4, r9, ip, r4
 8021788:	f896 c002 	ldrb.w	ip, [r6, #2]
 802178c:	fb00 440c 	mla	r4, r0, ip, r4
 8021790:	f893 c002 	ldrb.w	ip, [r3, #2]
 8021794:	fa1f fe88 	uxth.w	lr, r8
 8021798:	ea6f 0808 	mvn.w	r8, r8
 802179c:	fa5f f888 	uxtb.w	r8, r8
 80217a0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80217a4:	fb1a fa08 	smulbb	sl, sl, r8
 80217a8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80217ac:	fb0c ac0e 	mla	ip, ip, lr, sl
 80217b0:	f895 a001 	ldrb.w	sl, [r5, #1]
 80217b4:	787c      	ldrb	r4, [r7, #1]
 80217b6:	782d      	ldrb	r5, [r5, #0]
 80217b8:	783f      	ldrb	r7, [r7, #0]
 80217ba:	fb02 fa0a 	mul.w	sl, r2, sl
 80217be:	fb09 aa04 	mla	sl, r9, r4, sl
 80217c2:	7874      	ldrb	r4, [r6, #1]
 80217c4:	436a      	muls	r2, r5
 80217c6:	7835      	ldrb	r5, [r6, #0]
 80217c8:	fb00 aa04 	mla	sl, r0, r4, sl
 80217cc:	fb09 2207 	mla	r2, r9, r7, r2
 80217d0:	785c      	ldrb	r4, [r3, #1]
 80217d2:	781b      	ldrb	r3, [r3, #0]
 80217d4:	fb00 2005 	mla	r0, r0, r5, r2
 80217d8:	fb0b a404 	mla	r4, fp, r4, sl
 80217dc:	fb0b 0b03 	mla	fp, fp, r3, r0
 80217e0:	9b02      	ldr	r3, [sp, #8]
 80217e2:	fb11 fa08 	smulbb	sl, r1, r8
 80217e6:	fa1f fc8c 	uxth.w	ip, ip
 80217ea:	fb13 f808 	smulbb	r8, r3, r8
 80217ee:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80217f2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80217f6:	fb04 a40e 	mla	r4, r4, lr, sl
 80217fa:	f10c 0301 	add.w	r3, ip, #1
 80217fe:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8021802:	fa1f fe8e 	uxth.w	lr, lr
 8021806:	b2a4      	uxth	r4, r4
 8021808:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802180c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8021810:	f104 0a01 	add.w	sl, r4, #1
 8021814:	f10e 0c01 	add.w	ip, lr, #1
 8021818:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802181c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8021820:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021824:	0964      	lsrs	r4, r4, #5
 8021826:	ea4c 0c03 	orr.w	ip, ip, r3
 802182a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802182e:	9b03      	ldr	r3, [sp, #12]
 8021830:	ea4c 0c04 	orr.w	ip, ip, r4
 8021834:	f8a3 c000 	strh.w	ip, [r3]
 8021838:	b007      	add	sp, #28
 802183a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802183e:	af05      	add	r7, sp, #20
 8021840:	e756      	b.n	80216f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8021842:	ad05      	add	r5, sp, #20
 8021844:	462f      	mov	r7, r5
 8021846:	e761      	b.n	802170c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8021848:	ad05      	add	r5, sp, #20
 802184a:	e75f      	b.n	802170c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802184c:	ae05      	add	r6, sp, #20
 802184e:	e772      	b.n	8021736 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8021850:	ab05      	add	r3, sp, #20
 8021852:	461e      	mov	r6, r3
 8021854:	e77e      	b.n	8021754 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8021856:	ab05      	add	r3, sp, #20
 8021858:	e77c      	b.n	8021754 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802185a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802185a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802185e:	b095      	sub	sp, #84	@ 0x54
 8021860:	9212      	str	r2, [sp, #72]	@ 0x48
 8021862:	9309      	str	r3, [sp, #36]	@ 0x24
 8021864:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8021866:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 802186a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802186c:	910e      	str	r1, [sp, #56]	@ 0x38
 802186e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8021872:	9013      	str	r0, [sp, #76]	@ 0x4c
 8021874:	6850      	ldr	r0, [r2, #4]
 8021876:	6812      	ldr	r2, [r2, #0]
 8021878:	fb00 1303 	mla	r3, r0, r3, r1
 802187c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021880:	930a      	str	r3, [sp, #40]	@ 0x28
 8021882:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021884:	681b      	ldr	r3, [r3, #0]
 8021886:	930d      	str	r3, [sp, #52]	@ 0x34
 8021888:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802188a:	685c      	ldr	r4, [r3, #4]
 802188c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802188e:	43db      	mvns	r3, r3
 8021890:	b2db      	uxtb	r3, r3
 8021892:	3404      	adds	r4, #4
 8021894:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021896:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021898:	2b00      	cmp	r3, #0
 802189a:	dc03      	bgt.n	80218a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802189c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802189e:	2b00      	cmp	r3, #0
 80218a0:	f340 8255 	ble.w	8021d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80218a4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80218a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80218aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80218ae:	1e48      	subs	r0, r1, #1
 80218b0:	1e55      	subs	r5, r2, #1
 80218b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80218b4:	2b00      	cmp	r3, #0
 80218b6:	f340 80f9 	ble.w	8021aac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80218ba:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80218bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80218be:	1436      	asrs	r6, r6, #16
 80218c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80218c4:	d406      	bmi.n	80218d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80218c6:	4286      	cmp	r6, r0
 80218c8:	da04      	bge.n	80218d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80218ca:	2b00      	cmp	r3, #0
 80218cc:	db02      	blt.n	80218d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80218ce:	42ab      	cmp	r3, r5
 80218d0:	f2c0 80ed 	blt.w	8021aae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80218d4:	3601      	adds	r6, #1
 80218d6:	f100 80da 	bmi.w	8021a8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80218da:	42b1      	cmp	r1, r6
 80218dc:	f2c0 80d7 	blt.w	8021a8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80218e0:	3301      	adds	r3, #1
 80218e2:	f100 80d4 	bmi.w	8021a8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80218e6:	429a      	cmp	r2, r3
 80218e8:	f2c0 80d1 	blt.w	8021a8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80218ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80218ee:	9311      	str	r3, [sp, #68]	@ 0x44
 80218f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80218f2:	930c      	str	r3, [sp, #48]	@ 0x30
 80218f4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80218f6:	2b00      	cmp	r3, #0
 80218f8:	f340 80fa 	ble.w	8021af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80218fc:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80218fe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021900:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8021902:	68c6      	ldr	r6, [r0, #12]
 8021904:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8021906:	141d      	asrs	r5, r3, #16
 8021908:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802190c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802190e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8021910:	1400      	asrs	r0, r0, #16
 8021912:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8021916:	6892      	ldr	r2, [r2, #8]
 8021918:	f100 813e 	bmi.w	8021b98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802191c:	1e57      	subs	r7, r2, #1
 802191e:	42b8      	cmp	r0, r7
 8021920:	f280 813a 	bge.w	8021b98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8021924:	2d00      	cmp	r5, #0
 8021926:	f2c0 8137 	blt.w	8021b98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802192a:	1e77      	subs	r7, r6, #1
 802192c:	42bd      	cmp	r5, r7
 802192e:	f280 8133 	bge.w	8021b98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8021932:	b212      	sxth	r2, r2
 8021934:	fb05 0002 	mla	r0, r5, r2, r0
 8021938:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802193a:	f815 a000 	ldrb.w	sl, [r5, r0]
 802193e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8021942:	182e      	adds	r6, r5, r0
 8021944:	eb04 050a 	add.w	r5, r4, sl
 8021948:	2b00      	cmp	r3, #0
 802194a:	f000 8117 	beq.w	8021b7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802194e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8021952:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8021956:	44a4      	add	ip, r4
 8021958:	2900      	cmp	r1, #0
 802195a:	f000 8117 	beq.w	8021b8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802195e:	18b0      	adds	r0, r6, r2
 8021960:	5cb2      	ldrb	r2, [r6, r2]
 8021962:	7840      	ldrb	r0, [r0, #1]
 8021964:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021968:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802196c:	4422      	add	r2, r4
 802196e:	4420      	add	r0, r4
 8021970:	b29b      	uxth	r3, r3
 8021972:	b289      	uxth	r1, r1
 8021974:	fb03 f901 	mul.w	r9, r3, r1
 8021978:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802197c:	011b      	lsls	r3, r3, #4
 802197e:	b289      	uxth	r1, r1
 8021980:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8021984:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021988:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802198a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802198e:	f8b6 e000 	ldrh.w	lr, [r6]
 8021992:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 8021996:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 802199a:	eba3 0309 	sub.w	r3, r3, r9
 802199e:	b29b      	uxth	r3, r3
 80219a0:	eba8 0801 	sub.w	r8, r8, r1
 80219a4:	fa1f f888 	uxth.w	r8, r8
 80219a8:	435f      	muls	r7, r3
 80219aa:	fb08 770b 	mla	r7, r8, fp, r7
 80219ae:	f892 b002 	ldrb.w	fp, [r2, #2]
 80219b2:	9310      	str	r3, [sp, #64]	@ 0x40
 80219b4:	fb01 770b 	mla	r7, r1, fp, r7
 80219b8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80219bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80219be:	fb09 770b 	mla	r7, r9, fp, r7
 80219c2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80219c6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80219ca:	fb1b fb03 	smulbb	fp, fp, r3
 80219ce:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80219d2:	fb07 b706 	mla	r7, r7, r6, fp
 80219d6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80219d8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80219dc:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80219e0:	f89c c000 	ldrb.w	ip, [ip]
 80219e4:	435d      	muls	r5, r3
 80219e6:	fb08 550b 	mla	r5, r8, fp, r5
 80219ea:	f892 b001 	ldrb.w	fp, [r2, #1]
 80219ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80219f0:	fb01 550b 	mla	r5, r1, fp, r5
 80219f4:	f890 b001 	ldrb.w	fp, [r0, #1]
 80219f8:	fb09 550b 	mla	r5, r9, fp, r5
 80219fc:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8021a00:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8021a04:	fb1b fb03 	smulbb	fp, fp, r3
 8021a08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021a0a:	fb03 f30c 	mul.w	r3, r3, ip
 8021a0e:	f892 c000 	ldrb.w	ip, [r2]
 8021a12:	fb08 330a 	mla	r3, r8, sl, r3
 8021a16:	fb01 330c 	mla	r3, r1, ip, r3
 8021a1a:	f890 c000 	ldrb.w	ip, [r0]
 8021a1e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021a22:	fb09 3c0c 	mla	ip, r9, ip, r3
 8021a26:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021a28:	fa5f fe8e 	uxtb.w	lr, lr
 8021a2c:	b2bf      	uxth	r7, r7
 8021a2e:	fb1e fe03 	smulbb	lr, lr, r3
 8021a32:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8021a36:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8021a3a:	fb05 b506 	mla	r5, r5, r6, fp
 8021a3e:	1c7b      	adds	r3, r7, #1
 8021a40:	fb0c e606 	mla	r6, ip, r6, lr
 8021a44:	b2ad      	uxth	r5, r5
 8021a46:	b2b6      	uxth	r6, r6
 8021a48:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021a4c:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 8021a50:	f105 0b01 	add.w	fp, r5, #1
 8021a54:	1c77      	adds	r7, r6, #1
 8021a56:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8021a5a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8021a5e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021a62:	096d      	lsrs	r5, r5, #5
 8021a64:	431f      	orrs	r7, r3
 8021a66:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021a6a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021a6c:	433d      	orrs	r5, r7
 8021a6e:	801d      	strh	r5, [r3, #0]
 8021a70:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021a72:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8021a74:	3302      	adds	r3, #2
 8021a76:	930c      	str	r3, [sp, #48]	@ 0x30
 8021a78:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021a7a:	4413      	add	r3, r2
 8021a7c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8021a7e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8021a80:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021a82:	4413      	add	r3, r2
 8021a84:	9320      	str	r3, [sp, #128]	@ 0x80
 8021a86:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021a88:	3b01      	subs	r3, #1
 8021a8a:	9311      	str	r3, [sp, #68]	@ 0x44
 8021a8c:	e732      	b.n	80218f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021a8e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021a90:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8021a92:	4433      	add	r3, r6
 8021a94:	931f      	str	r3, [sp, #124]	@ 0x7c
 8021a96:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8021a98:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021a9a:	4433      	add	r3, r6
 8021a9c:	9320      	str	r3, [sp, #128]	@ 0x80
 8021a9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021aa0:	3b01      	subs	r3, #1
 8021aa2:	9309      	str	r3, [sp, #36]	@ 0x24
 8021aa4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021aa6:	3302      	adds	r3, #2
 8021aa8:	930a      	str	r3, [sp, #40]	@ 0x28
 8021aaa:	e702      	b.n	80218b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021aac:	d027      	beq.n	8021afe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8021aae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021ab0:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8021ab2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8021ab4:	3b01      	subs	r3, #1
 8021ab6:	fb00 5003 	mla	r0, r0, r3, r5
 8021aba:	1400      	asrs	r0, r0, #16
 8021abc:	f53f af16 	bmi.w	80218ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021ac0:	3901      	subs	r1, #1
 8021ac2:	4288      	cmp	r0, r1
 8021ac4:	f6bf af12 	bge.w	80218ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021ac8:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8021aca:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8021acc:	fb01 0303 	mla	r3, r1, r3, r0
 8021ad0:	141b      	asrs	r3, r3, #16
 8021ad2:	f53f af0b 	bmi.w	80218ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021ad6:	3a01      	subs	r2, #1
 8021ad8:	4293      	cmp	r3, r2
 8021ada:	f6bf af07 	bge.w	80218ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021ade:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021ae0:	9311      	str	r3, [sp, #68]	@ 0x44
 8021ae2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 8021ae6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021ae8:	930c      	str	r3, [sp, #48]	@ 0x30
 8021aea:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021aec:	2b00      	cmp	r3, #0
 8021aee:	dc70      	bgt.n	8021bd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8021af0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021af2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8021af4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021af8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021afc:	930a      	str	r3, [sp, #40]	@ 0x28
 8021afe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021b00:	2b00      	cmp	r3, #0
 8021b02:	f340 8124 	ble.w	8021d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8021b06:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021b0a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021b0e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021b12:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021b14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021b18:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021b1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021b20:	eef0 6a62 	vmov.f32	s13, s5
 8021b24:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021b28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b2c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021b30:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8021b34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021b38:	eef0 6a43 	vmov.f32	s13, s6
 8021b3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021b40:	ee12 2a90 	vmov	r2, s5
 8021b44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021b48:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b4c:	ee13 2a10 	vmov	r2, s6
 8021b50:	9321      	str	r3, [sp, #132]	@ 0x84
 8021b52:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021b54:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b58:	9322      	str	r3, [sp, #136]	@ 0x88
 8021b5a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021b5c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8021b5e:	3b01      	subs	r3, #1
 8021b60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b64:	930e      	str	r3, [sp, #56]	@ 0x38
 8021b66:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021b68:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8021b6c:	bf08      	it	eq
 8021b6e:	4613      	moveq	r3, r2
 8021b70:	9309      	str	r3, [sp, #36]	@ 0x24
 8021b72:	eeb0 3a67 	vmov.f32	s6, s15
 8021b76:	eef0 2a47 	vmov.f32	s5, s14
 8021b7a:	e68c      	b.n	8021896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021b7c:	b149      	cbz	r1, 8021b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8021b7e:	5cb2      	ldrb	r2, [r6, r2]
 8021b80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021b84:	4422      	add	r2, r4
 8021b86:	4628      	mov	r0, r5
 8021b88:	46ac      	mov	ip, r5
 8021b8a:	e6f1      	b.n	8021970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021b8c:	4628      	mov	r0, r5
 8021b8e:	462a      	mov	r2, r5
 8021b90:	e6ee      	b.n	8021970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021b92:	4628      	mov	r0, r5
 8021b94:	462a      	mov	r2, r5
 8021b96:	e7f7      	b.n	8021b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021b98:	1c47      	adds	r7, r0, #1
 8021b9a:	f53f af69 	bmi.w	8021a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021b9e:	42ba      	cmp	r2, r7
 8021ba0:	f6ff af66 	blt.w	8021a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021ba4:	1c6f      	adds	r7, r5, #1
 8021ba6:	f53f af63 	bmi.w	8021a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021baa:	42be      	cmp	r6, r7
 8021bac:	f6ff af60 	blt.w	8021a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021bb0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8021bb2:	9002      	str	r0, [sp, #8]
 8021bb4:	b236      	sxth	r6, r6
 8021bb6:	b212      	sxth	r2, r2
 8021bb8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8021bbc:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8021bc0:	9200      	str	r2, [sp, #0]
 8021bc2:	9601      	str	r6, [sp, #4]
 8021bc4:	4623      	mov	r3, r4
 8021bc6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 8021bca:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8021bcc:	f7ff fd59 	bl	8021682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021bd0:	e74e      	b.n	8021a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021bd2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8021bd4:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8021bd6:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8021bd8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021bda:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8021bde:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8021be0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021be4:	142d      	asrs	r5, r5, #16
 8021be6:	1400      	asrs	r0, r0, #16
 8021be8:	fb02 5000 	mla	r0, r2, r0, r5
 8021bec:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8021bee:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021bf2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8021bf6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8021bfa:	182e      	adds	r6, r5, r0
 8021bfc:	eb04 0509 	add.w	r5, r4, r9
 8021c00:	2b00      	cmp	r3, #0
 8021c02:	f000 8096 	beq.w	8021d32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8021c06:	7877      	ldrb	r7, [r6, #1]
 8021c08:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021c0c:	4427      	add	r7, r4
 8021c0e:	2900      	cmp	r1, #0
 8021c10:	f000 8097 	beq.w	8021d42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8021c14:	18b0      	adds	r0, r6, r2
 8021c16:	5cb2      	ldrb	r2, [r6, r2]
 8021c18:	7840      	ldrb	r0, [r0, #1]
 8021c1a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021c1e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021c22:	4422      	add	r2, r4
 8021c24:	4420      	add	r0, r4
 8021c26:	b29b      	uxth	r3, r3
 8021c28:	b289      	uxth	r1, r1
 8021c2a:	fb03 f801 	mul.w	r8, r3, r1
 8021c2e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8021c30:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021c34:	f8b6 c000 	ldrh.w	ip, [r6]
 8021c38:	78be      	ldrb	r6, [r7, #2]
 8021c3a:	f814 9009 	ldrb.w	r9, [r4, r9]
 8021c3e:	011b      	lsls	r3, r3, #4
 8021c40:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8021c44:	b289      	uxth	r1, r1
 8021c46:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8021c4a:	eba3 0308 	sub.w	r3, r3, r8
 8021c4e:	b29b      	uxth	r3, r3
 8021c50:	ebae 0e01 	sub.w	lr, lr, r1
 8021c54:	fa1f fe8e 	uxth.w	lr, lr
 8021c58:	435e      	muls	r6, r3
 8021c5a:	fb0e 660b 	mla	r6, lr, fp, r6
 8021c5e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021c62:	9310      	str	r3, [sp, #64]	@ 0x40
 8021c64:	fb01 660b 	mla	r6, r1, fp, r6
 8021c68:	f890 b002 	ldrb.w	fp, [r0, #2]
 8021c6c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021c6e:	fb08 660b 	mla	r6, r8, fp, r6
 8021c72:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8021c76:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8021c7a:	fb1b fb03 	smulbb	fp, fp, r3
 8021c7e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021c82:	fb06 b60a 	mla	r6, r6, sl, fp
 8021c86:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021c88:	f895 b001 	ldrb.w	fp, [r5, #1]
 8021c8c:	787d      	ldrb	r5, [r7, #1]
 8021c8e:	783f      	ldrb	r7, [r7, #0]
 8021c90:	435d      	muls	r5, r3
 8021c92:	fb0e 550b 	mla	r5, lr, fp, r5
 8021c96:	f892 b001 	ldrb.w	fp, [r2, #1]
 8021c9a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021c9c:	fb01 550b 	mla	r5, r1, fp, r5
 8021ca0:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021ca4:	fb08 550b 	mla	r5, r8, fp, r5
 8021ca8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8021cac:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8021cb0:	fb1b fb03 	smulbb	fp, fp, r3
 8021cb4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021cb6:	437b      	muls	r3, r7
 8021cb8:	7817      	ldrb	r7, [r2, #0]
 8021cba:	fb0e 3309 	mla	r3, lr, r9, r3
 8021cbe:	fb01 3307 	mla	r3, r1, r7, r3
 8021cc2:	7807      	ldrb	r7, [r0, #0]
 8021cc4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021cc8:	fb08 3707 	mla	r7, r8, r7, r3
 8021ccc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021cce:	fa5f fc8c 	uxtb.w	ip, ip
 8021cd2:	fb1c fc03 	smulbb	ip, ip, r3
 8021cd6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8021cda:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021cde:	fb05 b50a 	mla	r5, r5, sl, fp
 8021ce2:	fb07 c70a 	mla	r7, r7, sl, ip
 8021ce6:	b2b6      	uxth	r6, r6
 8021ce8:	b2ad      	uxth	r5, r5
 8021cea:	b2bf      	uxth	r7, r7
 8021cec:	1c73      	adds	r3, r6, #1
 8021cee:	1c7a      	adds	r2, r7, #1
 8021cf0:	f105 0b01 	add.w	fp, r5, #1
 8021cf4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021cf8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021cfc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8021d00:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021d04:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8021d08:	096d      	lsrs	r5, r5, #5
 8021d0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021d0c:	4316      	orrs	r6, r2
 8021d0e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021d12:	432e      	orrs	r6, r5
 8021d14:	f823 6b02 	strh.w	r6, [r3], #2
 8021d18:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8021d1a:	930c      	str	r3, [sp, #48]	@ 0x30
 8021d1c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021d1e:	4413      	add	r3, r2
 8021d20:	931f      	str	r3, [sp, #124]	@ 0x7c
 8021d22:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8021d24:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021d26:	4413      	add	r3, r2
 8021d28:	9320      	str	r3, [sp, #128]	@ 0x80
 8021d2a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021d2c:	3b01      	subs	r3, #1
 8021d2e:	9311      	str	r3, [sp, #68]	@ 0x44
 8021d30:	e6db      	b.n	8021aea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8021d32:	b149      	cbz	r1, 8021d48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021d34:	5cb2      	ldrb	r2, [r6, r2]
 8021d36:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021d3a:	4422      	add	r2, r4
 8021d3c:	4628      	mov	r0, r5
 8021d3e:	462f      	mov	r7, r5
 8021d40:	e771      	b.n	8021c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021d42:	4628      	mov	r0, r5
 8021d44:	462a      	mov	r2, r5
 8021d46:	e76e      	b.n	8021c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021d48:	4628      	mov	r0, r5
 8021d4a:	462a      	mov	r2, r5
 8021d4c:	e7f7      	b.n	8021d3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021d4e:	b015      	add	sp, #84	@ 0x54
 8021d50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021d54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8021d54:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021d58:	880f      	ldrh	r7, [r1, #0]
 8021d5a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 8021d5e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8021d62:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8021d66:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8021d6a:	023c      	lsls	r4, r7, #8
 8021d6c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 8021d70:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8021d74:	017c      	lsls	r4, r7, #5
 8021d76:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8021d7a:	00ff      	lsls	r7, r7, #3
 8021d7c:	ea4b 0404 	orr.w	r4, fp, r4
 8021d80:	b2ff      	uxtb	r7, r7
 8021d82:	fb05 ca0e 	mla	sl, r5, lr, ip
 8021d86:	4327      	orrs	r7, r4
 8021d88:	2d00      	cmp	r5, #0
 8021d8a:	eb02 080a 	add.w	r8, r2, sl
 8021d8e:	9701      	str	r7, [sp, #4]
 8021d90:	db7e      	blt.n	8021e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021d92:	45a9      	cmp	r9, r5
 8021d94:	dd7c      	ble.n	8021e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021d96:	f1bc 0f00 	cmp.w	ip, #0
 8021d9a:	db77      	blt.n	8021e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021d9c:	45e6      	cmp	lr, ip
 8021d9e:	dd75      	ble.n	8021e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021da0:	f812 700a 	ldrb.w	r7, [r2, sl]
 8021da4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021da8:	441f      	add	r7, r3
 8021daa:	f11c 0201 	adds.w	r2, ip, #1
 8021dae:	d472      	bmi.n	8021e96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021db0:	4596      	cmp	lr, r2
 8021db2:	dd70      	ble.n	8021e96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021db4:	2800      	cmp	r0, #0
 8021db6:	d06e      	beq.n	8021e96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021db8:	f898 4001 	ldrb.w	r4, [r8, #1]
 8021dbc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021dc0:	441c      	add	r4, r3
 8021dc2:	3501      	adds	r5, #1
 8021dc4:	d46b      	bmi.n	8021e9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021dc6:	45a9      	cmp	r9, r5
 8021dc8:	dd69      	ble.n	8021e9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021dca:	2e00      	cmp	r6, #0
 8021dcc:	d067      	beq.n	8021e9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021dce:	f1bc 0f00 	cmp.w	ip, #0
 8021dd2:	db62      	blt.n	8021e9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021dd4:	45e6      	cmp	lr, ip
 8021dd6:	dd60      	ble.n	8021e9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021dd8:	f818 500e 	ldrb.w	r5, [r8, lr]
 8021ddc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021de0:	441d      	add	r5, r3
 8021de2:	f11c 0201 	adds.w	r2, ip, #1
 8021de6:	d45d      	bmi.n	8021ea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021de8:	4596      	cmp	lr, r2
 8021dea:	dd5b      	ble.n	8021ea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021dec:	2800      	cmp	r0, #0
 8021dee:	d059      	beq.n	8021ea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021df0:	44c6      	add	lr, r8
 8021df2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021df6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021dfa:	4413      	add	r3, r2
 8021dfc:	b280      	uxth	r0, r0
 8021dfe:	b2b2      	uxth	r2, r6
 8021e00:	fb00 f602 	mul.w	r6, r0, r2
 8021e04:	0100      	lsls	r0, r0, #4
 8021e06:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8021e0a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8021e0e:	1b80      	subs	r0, r0, r6
 8021e10:	fa1f fc82 	uxth.w	ip, r2
 8021e14:	b282      	uxth	r2, r0
 8021e16:	78a0      	ldrb	r0, [r4, #2]
 8021e18:	f897 e002 	ldrb.w	lr, [r7, #2]
 8021e1c:	f897 9000 	ldrb.w	r9, [r7]
 8021e20:	787f      	ldrb	r7, [r7, #1]
 8021e22:	eba8 080c 	sub.w	r8, r8, ip
 8021e26:	fa1f f888 	uxth.w	r8, r8
 8021e2a:	4350      	muls	r0, r2
 8021e2c:	fb08 0e0e 	mla	lr, r8, lr, r0
 8021e30:	78a8      	ldrb	r0, [r5, #2]
 8021e32:	fb0c e000 	mla	r0, ip, r0, lr
 8021e36:	f893 e002 	ldrb.w	lr, [r3, #2]
 8021e3a:	fb06 0e0e 	mla	lr, r6, lr, r0
 8021e3e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 8021e42:	f894 e000 	ldrb.w	lr, [r4]
 8021e46:	fb02 fe0e 	mul.w	lr, r2, lr
 8021e4a:	fb08 e909 	mla	r9, r8, r9, lr
 8021e4e:	f895 e000 	ldrb.w	lr, [r5]
 8021e52:	fb0c 990e 	mla	r9, ip, lr, r9
 8021e56:	f893 e000 	ldrb.w	lr, [r3]
 8021e5a:	785b      	ldrb	r3, [r3, #1]
 8021e5c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8021e60:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021e64:	ea4e 0e00 	orr.w	lr, lr, r0
 8021e68:	7860      	ldrb	r0, [r4, #1]
 8021e6a:	4350      	muls	r0, r2
 8021e6c:	786a      	ldrb	r2, [r5, #1]
 8021e6e:	fb08 0007 	mla	r0, r8, r7, r0
 8021e72:	fb0c 0202 	mla	r2, ip, r2, r0
 8021e76:	fb06 2303 	mla	r3, r6, r3, r2
 8021e7a:	095b      	lsrs	r3, r3, #5
 8021e7c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021e80:	ea4e 0303 	orr.w	r3, lr, r3
 8021e84:	800b      	strh	r3, [r1, #0]
 8021e86:	b003      	add	sp, #12
 8021e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021e8c:	af01      	add	r7, sp, #4
 8021e8e:	e78c      	b.n	8021daa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8021e90:	ac01      	add	r4, sp, #4
 8021e92:	4627      	mov	r7, r4
 8021e94:	e795      	b.n	8021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021e96:	ac01      	add	r4, sp, #4
 8021e98:	e793      	b.n	8021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021e9a:	ad01      	add	r5, sp, #4
 8021e9c:	e7a1      	b.n	8021de2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8021e9e:	ab01      	add	r3, sp, #4
 8021ea0:	461d      	mov	r5, r3
 8021ea2:	e7ab      	b.n	8021dfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8021ea4:	ab01      	add	r3, sp, #4
 8021ea6:	e7a9      	b.n	8021dfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08021ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021eac:	b08f      	sub	sp, #60	@ 0x3c
 8021eae:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 8021eb2:	920c      	str	r2, [sp, #48]	@ 0x30
 8021eb4:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8021eb6:	910a      	str	r1, [sp, #40]	@ 0x28
 8021eb8:	9306      	str	r3, [sp, #24]
 8021eba:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 8021ebe:	900d      	str	r0, [sp, #52]	@ 0x34
 8021ec0:	6850      	ldr	r0, [r2, #4]
 8021ec2:	6812      	ldr	r2, [r2, #0]
 8021ec4:	fb00 1303 	mla	r3, r0, r3, r1
 8021ec8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021ecc:	9307      	str	r3, [sp, #28]
 8021ece:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021ed0:	681b      	ldr	r3, [r3, #0]
 8021ed2:	9308      	str	r3, [sp, #32]
 8021ed4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021ed6:	685c      	ldr	r4, [r3, #4]
 8021ed8:	3404      	adds	r4, #4
 8021eda:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021edc:	2b00      	cmp	r3, #0
 8021ede:	dc03      	bgt.n	8021ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8021ee0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021ee2:	2b00      	cmp	r3, #0
 8021ee4:	f340 81d6 	ble.w	8022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021ee8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021eea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021eee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021ef2:	1e48      	subs	r0, r1, #1
 8021ef4:	1e56      	subs	r6, r2, #1
 8021ef6:	9b06      	ldr	r3, [sp, #24]
 8021ef8:	2b00      	cmp	r3, #0
 8021efa:	f340 80b7 	ble.w	802206c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021efe:	ea5f 472b 	movs.w	r7, fp, asr #16
 8021f02:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021f06:	d406      	bmi.n	8021f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021f08:	4287      	cmp	r7, r0
 8021f0a:	da04      	bge.n	8021f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021f0c:	2b00      	cmp	r3, #0
 8021f0e:	db02      	blt.n	8021f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021f10:	42b3      	cmp	r3, r6
 8021f12:	f2c0 80ac 	blt.w	802206e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021f16:	3701      	adds	r7, #1
 8021f18:	f100 809d 	bmi.w	8022056 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021f1c:	42b9      	cmp	r1, r7
 8021f1e:	f2c0 809a 	blt.w	8022056 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021f22:	3301      	adds	r3, #1
 8021f24:	f100 8097 	bmi.w	8022056 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021f28:	429a      	cmp	r2, r3
 8021f2a:	f2c0 8094 	blt.w	8022056 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021f2e:	9b06      	ldr	r3, [sp, #24]
 8021f30:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021f32:	9b07      	ldr	r3, [sp, #28]
 8021f34:	9309      	str	r3, [sp, #36]	@ 0x24
 8021f36:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021f38:	2b00      	cmp	r3, #0
 8021f3a:	f340 80b5 	ble.w	80220a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021f3e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8021f40:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8021f42:	68c7      	ldr	r7, [r0, #12]
 8021f44:	6892      	ldr	r2, [r2, #8]
 8021f46:	ea5f 402b 	movs.w	r0, fp, asr #16
 8021f4a:	ea4f 4625 	mov.w	r6, r5, asr #16
 8021f4e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021f52:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021f56:	f100 80fb 	bmi.w	8022150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021f5a:	f102 3cff 	add.w	ip, r2, #4294967295
 8021f5e:	4560      	cmp	r0, ip
 8021f60:	f280 80f6 	bge.w	8022150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021f64:	2e00      	cmp	r6, #0
 8021f66:	f2c0 80f3 	blt.w	8022150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021f6a:	f107 3cff 	add.w	ip, r7, #4294967295
 8021f6e:	4566      	cmp	r6, ip
 8021f70:	f280 80ee 	bge.w	8022150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021f74:	b212      	sxth	r2, r2
 8021f76:	fb06 0002 	mla	r0, r6, r2, r0
 8021f7a:	9e08      	ldr	r6, [sp, #32]
 8021f7c:	1837      	adds	r7, r6, r0
 8021f7e:	5c30      	ldrb	r0, [r6, r0]
 8021f80:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8021f84:	eb04 0c08 	add.w	ip, r4, r8
 8021f88:	2b00      	cmp	r3, #0
 8021f8a:	f000 80d3 	beq.w	8022134 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021f8e:	787e      	ldrb	r6, [r7, #1]
 8021f90:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021f94:	4426      	add	r6, r4
 8021f96:	2900      	cmp	r1, #0
 8021f98:	f000 80d4 	beq.w	8022144 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8021f9c:	18b8      	adds	r0, r7, r2
 8021f9e:	5cba      	ldrb	r2, [r7, r2]
 8021fa0:	7840      	ldrb	r0, [r0, #1]
 8021fa2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021fa6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021faa:	4422      	add	r2, r4
 8021fac:	4420      	add	r0, r4
 8021fae:	b29b      	uxth	r3, r3
 8021fb0:	b289      	uxth	r1, r1
 8021fb2:	fb03 f901 	mul.w	r9, r3, r1
 8021fb6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021fba:	011b      	lsls	r3, r3, #4
 8021fbc:	b289      	uxth	r1, r1
 8021fbe:	78b7      	ldrb	r7, [r6, #2]
 8021fc0:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021fc4:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021fc8:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8021fcc:	eba3 0309 	sub.w	r3, r3, r9
 8021fd0:	b29b      	uxth	r3, r3
 8021fd2:	ebae 0e01 	sub.w	lr, lr, r1
 8021fd6:	fa1f fe8e 	uxth.w	lr, lr
 8021fda:	435f      	muls	r7, r3
 8021fdc:	fb0e 770a 	mla	r7, lr, sl, r7
 8021fe0:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021fe4:	fb01 770a 	mla	r7, r1, sl, r7
 8021fe8:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021fec:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021ff0:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021ff4:	f896 8000 	ldrb.w	r8, [r6]
 8021ff8:	7876      	ldrb	r6, [r6, #1]
 8021ffa:	fb03 f808 	mul.w	r8, r3, r8
 8021ffe:	fb0e 8807 	mla	r8, lr, r7, r8
 8022002:	7817      	ldrb	r7, [r2, #0]
 8022004:	fb01 8807 	mla	r8, r1, r7, r8
 8022008:	7807      	ldrb	r7, [r0, #0]
 802200a:	fb09 8707 	mla	r7, r9, r7, r8
 802200e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8022012:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022016:	ea47 070a 	orr.w	r7, r7, sl
 802201a:	4373      	muls	r3, r6
 802201c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8022020:	fb0e 330c 	mla	r3, lr, ip, r3
 8022024:	fb01 310a 	mla	r1, r1, sl, r3
 8022028:	f890 a001 	ldrb.w	sl, [r0, #1]
 802202c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802202e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8022032:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022036:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 802203a:	ea47 070a 	orr.w	r7, r7, sl
 802203e:	801f      	strh	r7, [r3, #0]
 8022040:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022042:	3302      	adds	r3, #2
 8022044:	9309      	str	r3, [sp, #36]	@ 0x24
 8022046:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022048:	449b      	add	fp, r3
 802204a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802204c:	441d      	add	r5, r3
 802204e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022050:	3b01      	subs	r3, #1
 8022052:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022054:	e76f      	b.n	8021f36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022056:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022058:	449b      	add	fp, r3
 802205a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802205c:	441d      	add	r5, r3
 802205e:	9b06      	ldr	r3, [sp, #24]
 8022060:	3b01      	subs	r3, #1
 8022062:	9306      	str	r3, [sp, #24]
 8022064:	9b07      	ldr	r3, [sp, #28]
 8022066:	3302      	adds	r3, #2
 8022068:	9307      	str	r3, [sp, #28]
 802206a:	e744      	b.n	8021ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 802206c:	d023      	beq.n	80220b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802206e:	9b06      	ldr	r3, [sp, #24]
 8022070:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8022072:	3b01      	subs	r3, #1
 8022074:	fb00 b003 	mla	r0, r0, r3, fp
 8022078:	1400      	asrs	r0, r0, #16
 802207a:	f53f af58 	bmi.w	8021f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802207e:	3901      	subs	r1, #1
 8022080:	4288      	cmp	r0, r1
 8022082:	f6bf af54 	bge.w	8021f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022086:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8022088:	fb01 5303 	mla	r3, r1, r3, r5
 802208c:	141b      	asrs	r3, r3, #16
 802208e:	f53f af4e 	bmi.w	8021f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022092:	3a01      	subs	r2, #1
 8022094:	4293      	cmp	r3, r2
 8022096:	f6bf af4a 	bge.w	8021f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802209a:	9b06      	ldr	r3, [sp, #24]
 802209c:	9309      	str	r3, [sp, #36]	@ 0x24
 802209e:	9b07      	ldr	r3, [sp, #28]
 80220a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80220a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80220a4:	2b00      	cmp	r3, #0
 80220a6:	dc70      	bgt.n	802218a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80220a8:	9b06      	ldr	r3, [sp, #24]
 80220aa:	9a07      	ldr	r2, [sp, #28]
 80220ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80220b0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80220b4:	9307      	str	r3, [sp, #28]
 80220b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80220b8:	2b00      	cmp	r3, #0
 80220ba:	f340 80eb 	ble.w	8022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80220be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80220c2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80220c6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80220ca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80220cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80220d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80220d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80220d8:	eef0 6a62 	vmov.f32	s13, s5
 80220dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80220e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80220e8:	ee16 ba90 	vmov	fp, s13
 80220ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80220f0:	eef0 6a43 	vmov.f32	s13, s6
 80220f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80220f8:	ee12 2a90 	vmov	r2, s5
 80220fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022100:	fb92 f3f3 	sdiv	r3, r2, r3
 8022104:	ee13 2a10 	vmov	r2, s6
 8022108:	931b      	str	r3, [sp, #108]	@ 0x6c
 802210a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802210c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022110:	931c      	str	r3, [sp, #112]	@ 0x70
 8022112:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022114:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022116:	3b01      	subs	r3, #1
 8022118:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802211c:	930a      	str	r3, [sp, #40]	@ 0x28
 802211e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022120:	bf08      	it	eq
 8022122:	4613      	moveq	r3, r2
 8022124:	ee16 5a90 	vmov	r5, s13
 8022128:	9306      	str	r3, [sp, #24]
 802212a:	eeb0 3a67 	vmov.f32	s6, s15
 802212e:	eef0 2a47 	vmov.f32	s5, s14
 8022132:	e6d2      	b.n	8021eda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8022134:	b149      	cbz	r1, 802214a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8022136:	5cba      	ldrb	r2, [r7, r2]
 8022138:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802213c:	4422      	add	r2, r4
 802213e:	4660      	mov	r0, ip
 8022140:	4666      	mov	r6, ip
 8022142:	e734      	b.n	8021fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8022144:	4660      	mov	r0, ip
 8022146:	4662      	mov	r2, ip
 8022148:	e731      	b.n	8021fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802214a:	4660      	mov	r0, ip
 802214c:	4662      	mov	r2, ip
 802214e:	e7f7      	b.n	8022140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8022150:	f110 0c01 	adds.w	ip, r0, #1
 8022154:	f53f af74 	bmi.w	8022040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022158:	4562      	cmp	r2, ip
 802215a:	f6ff af71 	blt.w	8022040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802215e:	f116 0c01 	adds.w	ip, r6, #1
 8022162:	f53f af6d 	bmi.w	8022040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022166:	4567      	cmp	r7, ip
 8022168:	f6ff af6a 	blt.w	8022040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802216c:	b23f      	sxth	r7, r7
 802216e:	b212      	sxth	r2, r2
 8022170:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8022174:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8022178:	9200      	str	r2, [sp, #0]
 802217a:	9701      	str	r7, [sp, #4]
 802217c:	4623      	mov	r3, r4
 802217e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8022182:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8022184:	f7ff fde6 	bl	8021d54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8022188:	e75a      	b.n	8022040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802218a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802218c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8022190:	ea4f 462b 	mov.w	r6, fp, asr #16
 8022194:	1428      	asrs	r0, r5, #16
 8022196:	fb02 6000 	mla	r0, r2, r0, r6
 802219a:	9e08      	ldr	r6, [sp, #32]
 802219c:	f816 8000 	ldrb.w	r8, [r6, r0]
 80221a0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80221a4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80221a8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80221ac:	1837      	adds	r7, r6, r0
 80221ae:	eb04 0c08 	add.w	ip, r4, r8
 80221b2:	2b00      	cmp	r3, #0
 80221b4:	d060      	beq.n	8022278 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80221b6:	787e      	ldrb	r6, [r7, #1]
 80221b8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80221bc:	4426      	add	r6, r4
 80221be:	2900      	cmp	r1, #0
 80221c0:	d062      	beq.n	8022288 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80221c2:	18b8      	adds	r0, r7, r2
 80221c4:	5cba      	ldrb	r2, [r7, r2]
 80221c6:	7840      	ldrb	r0, [r0, #1]
 80221c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80221cc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80221d0:	4422      	add	r2, r4
 80221d2:	4420      	add	r0, r4
 80221d4:	b29b      	uxth	r3, r3
 80221d6:	b289      	uxth	r1, r1
 80221d8:	fb03 f901 	mul.w	r9, r3, r1
 80221dc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80221e0:	011b      	lsls	r3, r3, #4
 80221e2:	b289      	uxth	r1, r1
 80221e4:	78b7      	ldrb	r7, [r6, #2]
 80221e6:	f89c a002 	ldrb.w	sl, [ip, #2]
 80221ea:	f89c c001 	ldrb.w	ip, [ip, #1]
 80221ee:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80221f2:	eba3 0309 	sub.w	r3, r3, r9
 80221f6:	b29b      	uxth	r3, r3
 80221f8:	ebae 0e01 	sub.w	lr, lr, r1
 80221fc:	fa1f fe8e 	uxth.w	lr, lr
 8022200:	435f      	muls	r7, r3
 8022202:	fb0e 770a 	mla	r7, lr, sl, r7
 8022206:	f892 a002 	ldrb.w	sl, [r2, #2]
 802220a:	fb01 770a 	mla	r7, r1, sl, r7
 802220e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8022212:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022216:	f814 7008 	ldrb.w	r7, [r4, r8]
 802221a:	f896 8000 	ldrb.w	r8, [r6]
 802221e:	7876      	ldrb	r6, [r6, #1]
 8022220:	fb03 f808 	mul.w	r8, r3, r8
 8022224:	fb0e 8807 	mla	r8, lr, r7, r8
 8022228:	7817      	ldrb	r7, [r2, #0]
 802222a:	fb01 8807 	mla	r8, r1, r7, r8
 802222e:	7807      	ldrb	r7, [r0, #0]
 8022230:	fb09 8707 	mla	r7, r9, r7, r8
 8022234:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8022238:	4373      	muls	r3, r6
 802223a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802223e:	7856      	ldrb	r6, [r2, #1]
 8022240:	ea47 070a 	orr.w	r7, r7, sl
 8022244:	fb0e 330c 	mla	r3, lr, ip, r3
 8022248:	f890 a001 	ldrb.w	sl, [r0, #1]
 802224c:	fb01 3306 	mla	r3, r1, r6, r3
 8022250:	fb09 3a0a 	mla	sl, r9, sl, r3
 8022254:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022258:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802225a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 802225e:	ea47 070a 	orr.w	r7, r7, sl
 8022262:	f823 7b02 	strh.w	r7, [r3], #2
 8022266:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022268:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802226a:	449b      	add	fp, r3
 802226c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802226e:	441d      	add	r5, r3
 8022270:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022272:	3b01      	subs	r3, #1
 8022274:	9309      	str	r3, [sp, #36]	@ 0x24
 8022276:	e714      	b.n	80220a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8022278:	b149      	cbz	r1, 802228e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802227a:	5cba      	ldrb	r2, [r7, r2]
 802227c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022280:	4422      	add	r2, r4
 8022282:	4660      	mov	r0, ip
 8022284:	4666      	mov	r6, ip
 8022286:	e7a5      	b.n	80221d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8022288:	4660      	mov	r0, ip
 802228a:	4662      	mov	r2, ip
 802228c:	e7a2      	b.n	80221d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802228e:	4660      	mov	r0, ip
 8022290:	4662      	mov	r2, ip
 8022292:	e7f7      	b.n	8022284 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8022294:	b00f      	add	sp, #60	@ 0x3c
 8022296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802229a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802229a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802229e:	b085      	sub	sp, #20
 80222a0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 80222a4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 80222a8:	9102      	str	r1, [sp, #8]
 80222aa:	2c00      	cmp	r4, #0
 80222ac:	fb04 710c 	mla	r1, r4, ip, r7
 80222b0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 80222b4:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 80222b8:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 80222bc:	eb02 0e01 	add.w	lr, r2, r1
 80222c0:	f2c0 8122 	blt.w	8022508 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80222c4:	45a0      	cmp	r8, r4
 80222c6:	f340 811f 	ble.w	8022508 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80222ca:	2f00      	cmp	r7, #0
 80222cc:	f2c0 811a 	blt.w	8022504 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80222d0:	45bc      	cmp	ip, r7
 80222d2:	f340 8117 	ble.w	8022504 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80222d6:	5c52      	ldrb	r2, [r2, r1]
 80222d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80222dc:	1c7a      	adds	r2, r7, #1
 80222de:	f100 8116 	bmi.w	802250e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80222e2:	4594      	cmp	ip, r2
 80222e4:	f340 8113 	ble.w	802250e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80222e8:	2e00      	cmp	r6, #0
 80222ea:	f000 8112 	beq.w	8022512 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80222ee:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80222f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80222f6:	3401      	adds	r4, #1
 80222f8:	f100 810f 	bmi.w	802251a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80222fc:	45a0      	cmp	r8, r4
 80222fe:	f340 810c 	ble.w	802251a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8022302:	2800      	cmp	r0, #0
 8022304:	f000 810c 	beq.w	8022520 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8022308:	2f00      	cmp	r7, #0
 802230a:	f2c0 8104 	blt.w	8022516 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802230e:	45bc      	cmp	ip, r7
 8022310:	f340 8101 	ble.w	8022516 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8022314:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8022318:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802231c:	3701      	adds	r7, #1
 802231e:	f100 8102 	bmi.w	8022526 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8022322:	45bc      	cmp	ip, r7
 8022324:	f340 80ff 	ble.w	8022526 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8022328:	2e00      	cmp	r6, #0
 802232a:	f000 80fe 	beq.w	802252a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802232e:	44f4      	add	ip, lr
 8022330:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8022334:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8022338:	b2b6      	uxth	r6, r6
 802233a:	b280      	uxth	r0, r0
 802233c:	fb00 fe06 	mul.w	lr, r0, r6
 8022340:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022344:	0136      	lsls	r6, r6, #4
 8022346:	eba6 070e 	sub.w	r7, r6, lr
 802234a:	b280      	uxth	r0, r0
 802234c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8022350:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022354:	b2bf      	uxth	r7, r7
 8022356:	1a1b      	subs	r3, r3, r0
 8022358:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802235c:	b29b      	uxth	r3, r3
 802235e:	fb0a f607 	mul.w	r6, sl, r7
 8022362:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022366:	fb0b 6603 	mla	r6, fp, r3, r6
 802236a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802236e:	fb00 6609 	mla	r6, r0, r9, r6
 8022372:	fb0e 6608 	mla	r6, lr, r8, r6
 8022376:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802237a:	9600      	str	r6, [sp, #0]
 802237c:	2e00      	cmp	r6, #0
 802237e:	f000 80be 	beq.w	80224fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8022382:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8022386:	fb0b fc0c 	mul.w	ip, fp, ip
 802238a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802238e:	fb0b f505 	mul.w	r5, fp, r5
 8022392:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022396:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802239a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802239e:	44dc      	add	ip, fp
 80223a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223a4:	9501      	str	r5, [sp, #4]
 80223a6:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80223aa:	9503      	str	r5, [sp, #12]
 80223ac:	9d01      	ldr	r5, [sp, #4]
 80223ae:	9e02      	ldr	r6, [sp, #8]
 80223b0:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80223b4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80223b8:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80223bc:	fb0a fc0c 	mul.w	ip, sl, ip
 80223c0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80223c4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80223c8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80223cc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80223d0:	4465      	add	r5, ip
 80223d2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80223d6:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80223da:	fb09 fc0c 	mul.w	ip, r9, ip
 80223de:	fb09 f904 	mul.w	r9, r9, r4
 80223e2:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80223e6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80223ea:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80223ee:	fb08 f404 	mul.w	r4, r8, r4
 80223f2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80223f6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80223fa:	fb08 f802 	mul.w	r8, r8, r2
 80223fe:	fb0a fa01 	mul.w	sl, sl, r1
 8022402:	0a22      	lsrs	r2, r4, #8
 8022404:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8022408:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802240c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8022410:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022414:	4414      	add	r4, r2
 8022416:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802241a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 802241e:	0a2d      	lsrs	r5, r5, #8
 8022420:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022424:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022428:	9a03      	ldr	r2, [sp, #12]
 802242a:	8836      	ldrh	r6, [r6, #0]
 802242c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8022430:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8022434:	437d      	muls	r5, r7
 8022436:	4461      	add	r1, ip
 8022438:	0a24      	lsrs	r4, r4, #8
 802243a:	fb02 5503 	mla	r5, r2, r3, r5
 802243e:	0a09      	lsrs	r1, r1, #8
 8022440:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8022444:	fb04 540e 	mla	r4, r4, lr, r5
 8022448:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802244c:	fb01 4100 	mla	r1, r1, r0, r4
 8022450:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022454:	0a09      	lsrs	r1, r1, #8
 8022456:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802245a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802245e:	fb07 f70a 	mul.w	r7, r7, sl
 8022462:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022466:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 802246a:	fb03 7101 	mla	r1, r3, r1, r7
 802246e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022472:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8022476:	fb0e 1e08 	mla	lr, lr, r8, r1
 802247a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802247e:	fb00 e101 	mla	r1, r0, r1, lr
 8022482:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8022486:	9a00      	ldr	r2, [sp, #0]
 8022488:	b287      	uxth	r7, r0
 802248a:	437a      	muls	r2, r7
 802248c:	0a09      	lsrs	r1, r1, #8
 802248e:	1c53      	adds	r3, r2, #1
 8022490:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8022494:	4321      	orrs	r1, r4
 8022496:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802249a:	1235      	asrs	r5, r6, #8
 802249c:	0c0a      	lsrs	r2, r1, #16
 802249e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80224a2:	b2db      	uxtb	r3, r3
 80224a4:	fb12 f207 	smulbb	r2, r2, r7
 80224a8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80224ac:	fb05 2503 	mla	r5, r5, r3, r2
 80224b0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80224b4:	10f2      	asrs	r2, r6, #3
 80224b6:	b2c8      	uxtb	r0, r1
 80224b8:	00f6      	lsls	r6, r6, #3
 80224ba:	fb14 f407 	smulbb	r4, r4, r7
 80224be:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80224c2:	b2f6      	uxtb	r6, r6
 80224c4:	fb10 f007 	smulbb	r0, r0, r7
 80224c8:	fb02 4203 	mla	r2, r2, r3, r4
 80224cc:	b2ad      	uxth	r5, r5
 80224ce:	fb06 0303 	mla	r3, r6, r3, r0
 80224d2:	b299      	uxth	r1, r3
 80224d4:	b294      	uxth	r4, r2
 80224d6:	1c6b      	adds	r3, r5, #1
 80224d8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80224dc:	1c62      	adds	r2, r4, #1
 80224de:	1c4b      	adds	r3, r1, #1
 80224e0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80224e4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80224e8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80224ec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80224f0:	0952      	lsrs	r2, r2, #5
 80224f2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80224f6:	432b      	orrs	r3, r5
 80224f8:	4313      	orrs	r3, r2
 80224fa:	9a02      	ldr	r2, [sp, #8]
 80224fc:	8013      	strh	r3, [r2, #0]
 80224fe:	b005      	add	sp, #20
 8022500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022504:	2500      	movs	r5, #0
 8022506:	e6e9      	b.n	80222dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8022508:	2100      	movs	r1, #0
 802250a:	460d      	mov	r5, r1
 802250c:	e6f3      	b.n	80222f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802250e:	2100      	movs	r1, #0
 8022510:	e6f1      	b.n	80222f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022512:	4631      	mov	r1, r6
 8022514:	e6ef      	b.n	80222f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022516:	2400      	movs	r4, #0
 8022518:	e700      	b.n	802231c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802251a:	2200      	movs	r2, #0
 802251c:	4614      	mov	r4, r2
 802251e:	e70b      	b.n	8022338 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8022520:	4602      	mov	r2, r0
 8022522:	4604      	mov	r4, r0
 8022524:	e708      	b.n	8022338 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8022526:	2200      	movs	r2, #0
 8022528:	e706      	b.n	8022338 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802252a:	4632      	mov	r2, r6
 802252c:	e704      	b.n	8022338 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802252e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802252e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022532:	b09f      	sub	sp, #124	@ 0x7c
 8022534:	921b      	str	r2, [sp, #108]	@ 0x6c
 8022536:	9309      	str	r3, [sp, #36]	@ 0x24
 8022538:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 802253a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 802253e:	931c      	str	r3, [sp, #112]	@ 0x70
 8022540:	9119      	str	r1, [sp, #100]	@ 0x64
 8022542:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8022546:	901d      	str	r0, [sp, #116]	@ 0x74
 8022548:	6850      	ldr	r0, [r2, #4]
 802254a:	6812      	ldr	r2, [r2, #0]
 802254c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 802254e:	fb00 1303 	mla	r3, r0, r3, r1
 8022552:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022556:	930c      	str	r3, [sp, #48]	@ 0x30
 8022558:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802255a:	681b      	ldr	r3, [r3, #0]
 802255c:	9312      	str	r3, [sp, #72]	@ 0x48
 802255e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8022560:	685e      	ldr	r6, [r3, #4]
 8022562:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8022566:	930d      	str	r3, [sp, #52]	@ 0x34
 8022568:	3604      	adds	r6, #4
 802256a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 802256c:	2b00      	cmp	r3, #0
 802256e:	dc03      	bgt.n	8022578 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022570:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022572:	2b00      	cmp	r3, #0
 8022574:	f340 8388 	ble.w	8022c88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8022578:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802257a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802257e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022582:	1e48      	subs	r0, r1, #1
 8022584:	1e57      	subs	r7, r2, #1
 8022586:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022588:	2b00      	cmp	r3, #0
 802258a:	f340 8195 	ble.w	80228b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802258e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8022590:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022594:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022598:	d406      	bmi.n	80225a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802259a:	4584      	cmp	ip, r0
 802259c:	da04      	bge.n	80225a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802259e:	2b00      	cmp	r3, #0
 80225a0:	db02      	blt.n	80225a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80225a2:	42bb      	cmp	r3, r7
 80225a4:	f2c0 8189 	blt.w	80228ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80225a8:	f11c 0c01 	adds.w	ip, ip, #1
 80225ac:	f100 8177 	bmi.w	802289e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80225b0:	4561      	cmp	r1, ip
 80225b2:	f2c0 8174 	blt.w	802289e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80225b6:	3301      	adds	r3, #1
 80225b8:	f100 8171 	bmi.w	802289e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80225bc:	429a      	cmp	r2, r3
 80225be:	f2c0 816e 	blt.w	802289e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80225c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80225c4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80225c6:	931a      	str	r3, [sp, #104]	@ 0x68
 80225c8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80225ca:	2b00      	cmp	r3, #0
 80225cc:	f340 8193 	ble.w	80228f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80225d0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80225d2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80225d6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80225d8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80225dc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80225de:	141b      	asrs	r3, r3, #16
 80225e0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80225e4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80225e8:	f100 81d6 	bmi.w	8022998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80225ec:	f100 38ff 	add.w	r8, r0, #4294967295
 80225f0:	4543      	cmp	r3, r8
 80225f2:	f280 81d1 	bge.w	8022998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80225f6:	f1bc 0f00 	cmp.w	ip, #0
 80225fa:	f2c0 81cd 	blt.w	8022998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80225fe:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022602:	45c4      	cmp	ip, r8
 8022604:	f280 81c8 	bge.w	8022998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8022608:	b200      	sxth	r0, r0
 802260a:	fb0c 3300 	mla	r3, ip, r0, r3
 802260e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8022610:	eb04 0803 	add.w	r8, r4, r3
 8022614:	5ce3      	ldrb	r3, [r4, r3]
 8022616:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802261a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802261e:	2a00      	cmp	r2, #0
 8022620:	f000 81af 	beq.w	8022982 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022624:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022628:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802262c:	940e      	str	r4, [sp, #56]	@ 0x38
 802262e:	0e24      	lsrs	r4, r4, #24
 8022630:	9415      	str	r4, [sp, #84]	@ 0x54
 8022632:	b179      	cbz	r1, 8022654 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022634:	eb08 0c00 	add.w	ip, r8, r0
 8022638:	f818 0000 	ldrb.w	r0, [r8, r0]
 802263c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022640:	900a      	str	r0, [sp, #40]	@ 0x28
 8022642:	0e00      	lsrs	r0, r0, #24
 8022644:	9013      	str	r0, [sp, #76]	@ 0x4c
 8022646:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802264a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802264e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8022650:	0e00      	lsrs	r0, r0, #24
 8022652:	9016      	str	r0, [sp, #88]	@ 0x58
 8022654:	b292      	uxth	r2, r2
 8022656:	b289      	uxth	r1, r1
 8022658:	fb02 f901 	mul.w	r9, r2, r1
 802265c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022660:	0112      	lsls	r2, r2, #4
 8022662:	eba2 0809 	sub.w	r8, r2, r9
 8022666:	b289      	uxth	r1, r1
 8022668:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802266c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802266e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8022670:	fa1f f888 	uxth.w	r8, r8
 8022674:	1a52      	subs	r2, r2, r1
 8022676:	b292      	uxth	r2, r2
 8022678:	fb08 f000 	mul.w	r0, r8, r0
 802267c:	fb02 000e 	mla	r0, r2, lr, r0
 8022680:	fb01 0004 	mla	r0, r1, r4, r0
 8022684:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8022686:	fb09 0004 	mla	r0, r9, r4, r0
 802268a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802268e:	2800      	cmp	r0, #0
 8022690:	f000 80fa 	beq.w	8022888 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022694:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8022698:	d01b      	beq.n	80226d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802269a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802269e:	fb0e fa0a 	mul.w	sl, lr, sl
 80226a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80226a6:	fb0e fe03 	mul.w	lr, lr, r3
 80226aa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80226ae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80226b2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80226b6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80226ba:	4453      	add	r3, sl
 80226bc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80226c0:	0a1b      	lsrs	r3, r3, #8
 80226c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80226c6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80226ca:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80226ce:	ea43 030c 	orr.w	r3, r3, ip
 80226d2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80226d4:	2cff      	cmp	r4, #255	@ 0xff
 80226d6:	d021      	beq.n	802271c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80226d8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80226da:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80226de:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80226e0:	fb04 fb0b 	mul.w	fp, r4, fp
 80226e4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80226e6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80226ea:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80226ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80226f0:	fb04 fa0a 	mul.w	sl, r4, sl
 80226f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80226f8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80226fc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8022700:	44de      	add	lr, fp
 8022702:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022706:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802270a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802270e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8022712:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022716:	ea4e 040a 	orr.w	r4, lr, sl
 802271a:	940e      	str	r4, [sp, #56]	@ 0x38
 802271c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802271e:	2cff      	cmp	r4, #255	@ 0xff
 8022720:	d021      	beq.n	8022766 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8022722:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8022724:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8022728:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802272a:	fb04 fb0b 	mul.w	fp, r4, fp
 802272e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8022730:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8022734:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8022736:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802273a:	fb04 fa0a 	mul.w	sl, r4, sl
 802273e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8022742:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8022746:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802274a:	44de      	add	lr, fp
 802274c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022750:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022754:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022758:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802275c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022760:	ea4e 040a 	orr.w	r4, lr, sl
 8022764:	940a      	str	r4, [sp, #40]	@ 0x28
 8022766:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8022768:	2cff      	cmp	r4, #255	@ 0xff
 802276a:	d021      	beq.n	80227b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802276c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802276e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8022772:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8022774:	fb04 fb0b 	mul.w	fp, r4, fp
 8022778:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802277a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802277e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8022780:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022784:	fb04 fa0a 	mul.w	sl, r4, sl
 8022788:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802278c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8022790:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8022794:	44de      	add	lr, fp
 8022796:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802279a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802279e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80227a2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80227a6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80227aa:	ea4e 040a 	orr.w	r4, lr, sl
 80227ae:	940f      	str	r4, [sp, #60]	@ 0x3c
 80227b0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80227b2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80227b6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80227b8:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 80227bc:	fb08 fc0c 	mul.w	ip, r8, ip
 80227c0:	fb02 cc0e 	mla	ip, r2, lr, ip
 80227c4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80227c8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80227ca:	fb01 cc0e 	mla	ip, r1, lr, ip
 80227ce:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80227d2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80227d4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80227d8:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 80227dc:	fb08 f80e 	mul.w	r8, r8, lr
 80227e0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80227e4:	fb02 8303 	mla	r3, r2, r3, r8
 80227e8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80227ea:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80227ec:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80227f0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80227f2:	fb01 330a 	mla	r3, r1, sl, r3
 80227f6:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 80227fa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80227fc:	fb09 3901 	mla	r9, r9, r1, r3
 8022800:	4342      	muls	r2, r0
 8022802:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022806:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802280a:	883b      	ldrh	r3, [r7, #0]
 802280c:	1c50      	adds	r0, r2, #1
 802280e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022812:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8022816:	ea4c 0c09 	orr.w	ip, ip, r9
 802281a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802281e:	1219      	asrs	r1, r3, #8
 8022820:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8022824:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8022828:	b2c0      	uxtb	r0, r0
 802282a:	fb12 f204 	smulbb	r2, r2, r4
 802282e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022832:	fb01 2100 	mla	r1, r1, r0, r2
 8022836:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802283a:	10da      	asrs	r2, r3, #3
 802283c:	fa5f fc8c 	uxtb.w	ip, ip
 8022840:	00db      	lsls	r3, r3, #3
 8022842:	fb1c fc04 	smulbb	ip, ip, r4
 8022846:	b2db      	uxtb	r3, r3
 8022848:	b289      	uxth	r1, r1
 802284a:	fb03 c300 	mla	r3, r3, r0, ip
 802284e:	fa1f fc83 	uxth.w	ip, r3
 8022852:	1c4b      	adds	r3, r1, #1
 8022854:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022858:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802285c:	fb1e fe04 	smulbb	lr, lr, r4
 8022860:	f10c 0301 	add.w	r3, ip, #1
 8022864:	fb02 e200 	mla	r2, r2, r0, lr
 8022868:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802286c:	b292      	uxth	r2, r2
 802286e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8022872:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022876:	430b      	orrs	r3, r1
 8022878:	1c51      	adds	r1, r2, #1
 802287a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802287e:	0952      	lsrs	r2, r2, #5
 8022880:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022884:	4313      	orrs	r3, r2
 8022886:	803b      	strh	r3, [r7, #0]
 8022888:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802288a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802288c:	441a      	add	r2, r3
 802288e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022890:	9229      	str	r2, [sp, #164]	@ 0xa4
 8022892:	441d      	add	r5, r3
 8022894:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8022896:	3b01      	subs	r3, #1
 8022898:	3702      	adds	r7, #2
 802289a:	931a      	str	r3, [sp, #104]	@ 0x68
 802289c:	e694      	b.n	80225c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802289e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80228a0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80228a2:	441c      	add	r4, r3
 80228a4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80228a6:	9429      	str	r4, [sp, #164]	@ 0xa4
 80228a8:	441d      	add	r5, r3
 80228aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80228ac:	3b01      	subs	r3, #1
 80228ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80228b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80228b2:	3302      	adds	r3, #2
 80228b4:	930c      	str	r3, [sp, #48]	@ 0x30
 80228b6:	e666      	b.n	8022586 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80228b8:	d024      	beq.n	8022904 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80228ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80228bc:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80228be:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80228c0:	3b01      	subs	r3, #1
 80228c2:	fb00 4003 	mla	r0, r0, r3, r4
 80228c6:	1400      	asrs	r0, r0, #16
 80228c8:	f53f ae7b 	bmi.w	80225c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80228cc:	3901      	subs	r1, #1
 80228ce:	4288      	cmp	r0, r1
 80228d0:	f6bf ae77 	bge.w	80225c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80228d4:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 80228d6:	fb01 5303 	mla	r3, r1, r3, r5
 80228da:	141b      	asrs	r3, r3, #16
 80228dc:	f53f ae71 	bmi.w	80225c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80228e0:	3a01      	subs	r2, #1
 80228e2:	4293      	cmp	r3, r2
 80228e4:	f6bf ae6d 	bge.w	80225c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80228e8:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80228ec:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 80228f0:	f1bb 0f00 	cmp.w	fp, #0
 80228f4:	dc70      	bgt.n	80229d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80228f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80228f8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80228fc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80228fe:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022902:	930c      	str	r3, [sp, #48]	@ 0x30
 8022904:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8022906:	2b00      	cmp	r3, #0
 8022908:	f340 81be 	ble.w	8022c88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802290c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022910:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022914:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022918:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802291a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802291e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022922:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022926:	eef0 6a62 	vmov.f32	s13, s5
 802292a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802292e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022932:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022936:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 802293a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802293e:	eef0 6a43 	vmov.f32	s13, s6
 8022942:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022946:	ee12 2a90 	vmov	r2, s5
 802294a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802294e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022952:	ee13 2a10 	vmov	r2, s6
 8022956:	932b      	str	r3, [sp, #172]	@ 0xac
 8022958:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802295a:	fb92 f3f3 	sdiv	r3, r2, r3
 802295e:	932c      	str	r3, [sp, #176]	@ 0xb0
 8022960:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8022962:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8022964:	3b01      	subs	r3, #1
 8022966:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802296a:	9319      	str	r3, [sp, #100]	@ 0x64
 802296c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802296e:	bf08      	it	eq
 8022970:	4613      	moveq	r3, r2
 8022972:	ee16 5a90 	vmov	r5, s13
 8022976:	9309      	str	r3, [sp, #36]	@ 0x24
 8022978:	eeb0 3a67 	vmov.f32	s6, s15
 802297c:	eef0 2a47 	vmov.f32	s5, s14
 8022980:	e5f3      	b.n	802256a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022982:	2900      	cmp	r1, #0
 8022984:	f43f ae66 	beq.w	8022654 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022988:	f818 0000 	ldrb.w	r0, [r8, r0]
 802298c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022990:	900a      	str	r0, [sp, #40]	@ 0x28
 8022992:	0e00      	lsrs	r0, r0, #24
 8022994:	9013      	str	r0, [sp, #76]	@ 0x4c
 8022996:	e65d      	b.n	8022654 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022998:	f113 0801 	adds.w	r8, r3, #1
 802299c:	f53f af74 	bmi.w	8022888 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80229a0:	4540      	cmp	r0, r8
 80229a2:	f6ff af71 	blt.w	8022888 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80229a6:	f11c 0801 	adds.w	r8, ip, #1
 80229aa:	f53f af6d 	bmi.w	8022888 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80229ae:	45c6      	cmp	lr, r8
 80229b0:	f6ff af6a 	blt.w	8022888 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80229b4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 80229b6:	9302      	str	r3, [sp, #8]
 80229b8:	b200      	sxth	r0, r0
 80229ba:	fa0f f38e 	sxth.w	r3, lr
 80229be:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80229c2:	e9cd c203 	strd	ip, r2, [sp, #12]
 80229c6:	9301      	str	r3, [sp, #4]
 80229c8:	9000      	str	r0, [sp, #0]
 80229ca:	4633      	mov	r3, r6
 80229cc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80229ce:	981d      	ldr	r0, [sp, #116]	@ 0x74
 80229d0:	4639      	mov	r1, r7
 80229d2:	f7ff fc62 	bl	802229a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80229d6:	e757      	b.n	8022888 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80229d8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80229da:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80229dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80229e0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80229e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80229e6:	1427      	asrs	r7, r4, #16
 80229e8:	142b      	asrs	r3, r5, #16
 80229ea:	fb01 7303 	mla	r3, r1, r3, r7
 80229ee:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80229f0:	18e7      	adds	r7, r4, r3
 80229f2:	5ce3      	ldrb	r3, [r4, r3]
 80229f4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80229f8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80229fc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022a00:	2a00      	cmp	r2, #0
 8022a02:	f000 8137 	beq.w	8022c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022a06:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022a0a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8022a0e:	9410      	str	r4, [sp, #64]	@ 0x40
 8022a10:	0e24      	lsrs	r4, r4, #24
 8022a12:	9417      	str	r4, [sp, #92]	@ 0x5c
 8022a14:	b170      	cbz	r0, 8022a34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022a16:	eb07 0e01 	add.w	lr, r7, r1
 8022a1a:	5c79      	ldrb	r1, [r7, r1]
 8022a1c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022a20:	910b      	str	r1, [sp, #44]	@ 0x2c
 8022a22:	0e09      	lsrs	r1, r1, #24
 8022a24:	9114      	str	r1, [sp, #80]	@ 0x50
 8022a26:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022a2a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022a2e:	9111      	str	r1, [sp, #68]	@ 0x44
 8022a30:	0e09      	lsrs	r1, r1, #24
 8022a32:	9118      	str	r1, [sp, #96]	@ 0x60
 8022a34:	b292      	uxth	r2, r2
 8022a36:	b280      	uxth	r0, r0
 8022a38:	fb02 f800 	mul.w	r8, r2, r0
 8022a3c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022a40:	0112      	lsls	r2, r2, #4
 8022a42:	eba2 0e08 	sub.w	lr, r2, r8
 8022a46:	b280      	uxth	r0, r0
 8022a48:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8022a4c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8022a4e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8022a50:	fa1f fe8e 	uxth.w	lr, lr
 8022a54:	1a12      	subs	r2, r2, r0
 8022a56:	b292      	uxth	r2, r2
 8022a58:	fb0e f101 	mul.w	r1, lr, r1
 8022a5c:	fb02 110c 	mla	r1, r2, ip, r1
 8022a60:	fb00 1104 	mla	r1, r0, r4, r1
 8022a64:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8022a66:	fb08 1104 	mla	r1, r8, r4, r1
 8022a6a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022a6e:	2900      	cmp	r1, #0
 8022a70:	f000 80f5 	beq.w	8022c5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022a74:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8022a78:	d019      	beq.n	8022aae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8022a7a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8022a7e:	fb0c fa0a 	mul.w	sl, ip, sl
 8022a82:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022a86:	fb0c fc03 	mul.w	ip, ip, r3
 8022a8a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022a8e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8022a92:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8022a96:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8022a9a:	4453      	add	r3, sl
 8022a9c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022aa0:	0a1b      	lsrs	r3, r3, #8
 8022aa2:	0a3f      	lsrs	r7, r7, #8
 8022aa4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8022aa8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8022aac:	433b      	orrs	r3, r7
 8022aae:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8022ab0:	2cff      	cmp	r4, #255	@ 0xff
 8022ab2:	d020      	beq.n	8022af6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8022ab4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8022ab6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8022aba:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8022abc:	4367      	muls	r7, r4
 8022abe:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8022ac0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8022ac4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8022ac6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022aca:	fb04 fa0a 	mul.w	sl, r4, sl
 8022ace:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022ad2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022ad6:	44bc      	add	ip, r7
 8022ad8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022adc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022ae0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ae4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022ae8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022aec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022af0:	ea4c 040a 	orr.w	r4, ip, sl
 8022af4:	9410      	str	r4, [sp, #64]	@ 0x40
 8022af6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8022af8:	2cff      	cmp	r4, #255	@ 0xff
 8022afa:	d020      	beq.n	8022b3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8022afc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8022afe:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8022b02:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8022b04:	4367      	muls	r7, r4
 8022b06:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8022b08:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8022b0c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8022b0e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022b12:	fb04 fa0a 	mul.w	sl, r4, sl
 8022b16:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022b1a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022b1e:	44bc      	add	ip, r7
 8022b20:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022b24:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022b28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022b2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022b30:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022b34:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022b38:	ea4c 040a 	orr.w	r4, ip, sl
 8022b3c:	940b      	str	r4, [sp, #44]	@ 0x2c
 8022b3e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8022b40:	2cff      	cmp	r4, #255	@ 0xff
 8022b42:	d020      	beq.n	8022b86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8022b44:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8022b46:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8022b4a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8022b4c:	4367      	muls	r7, r4
 8022b4e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8022b50:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8022b54:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8022b56:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022b5a:	fb04 fa0a 	mul.w	sl, r4, sl
 8022b5e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022b62:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022b66:	44bc      	add	ip, r7
 8022b68:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022b6c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022b70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022b74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022b78:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022b7c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022b80:	ea4c 040a 	orr.w	r4, ip, sl
 8022b84:	9411      	str	r4, [sp, #68]	@ 0x44
 8022b86:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8022b88:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8022b8c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8022b8e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8022b92:	fb0e f707 	mul.w	r7, lr, r7
 8022b96:	fb02 770c 	mla	r7, r2, ip, r7
 8022b9a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8022b9e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8022ba0:	fb00 770c 	mla	r7, r0, ip, r7
 8022ba4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8022ba8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8022baa:	fb08 770c 	mla	r7, r8, ip, r7
 8022bae:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8022bb2:	fb0e fe0c 	mul.w	lr, lr, ip
 8022bb6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022bba:	fb02 e303 	mla	r3, r2, r3, lr
 8022bbe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022bc0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022bc2:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8022bc6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8022bc8:	fb00 330a 	mla	r3, r0, sl, r3
 8022bcc:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8022bd0:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022bd4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022bd6:	f8b9 0000 	ldrh.w	r0, [r9]
 8022bda:	434b      	muls	r3, r1
 8022bdc:	0a3f      	lsrs	r7, r7, #8
 8022bde:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022be2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8022be6:	1c59      	adds	r1, r3, #1
 8022be8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8022bec:	ea47 070c 	orr.w	r7, r7, ip
 8022bf0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022bf4:	1202      	asrs	r2, r0, #8
 8022bf6:	0c3b      	lsrs	r3, r7, #16
 8022bf8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8022bfc:	b2c9      	uxtb	r1, r1
 8022bfe:	fb13 f304 	smulbb	r3, r3, r4
 8022c02:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8022c06:	fb02 3201 	mla	r2, r2, r1, r3
 8022c0a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8022c0e:	10c3      	asrs	r3, r0, #3
 8022c10:	b2ff      	uxtb	r7, r7
 8022c12:	00c0      	lsls	r0, r0, #3
 8022c14:	b292      	uxth	r2, r2
 8022c16:	fb1c fc04 	smulbb	ip, ip, r4
 8022c1a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8022c1e:	b2c0      	uxtb	r0, r0
 8022c20:	fb17 f704 	smulbb	r7, r7, r4
 8022c24:	fb03 c301 	mla	r3, r3, r1, ip
 8022c28:	fb00 7001 	mla	r0, r0, r1, r7
 8022c2c:	f102 0c01 	add.w	ip, r2, #1
 8022c30:	b280      	uxth	r0, r0
 8022c32:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8022c36:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8022c3a:	1c42      	adds	r2, r0, #1
 8022c3c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022c40:	b29b      	uxth	r3, r3
 8022c42:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022c46:	ea42 020c 	orr.w	r2, r2, ip
 8022c4a:	f103 0c01 	add.w	ip, r3, #1
 8022c4e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8022c52:	095b      	lsrs	r3, r3, #5
 8022c54:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022c58:	431a      	orrs	r2, r3
 8022c5a:	f8a9 2000 	strh.w	r2, [r9]
 8022c5e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8022c60:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8022c62:	441a      	add	r2, r3
 8022c64:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022c66:	9229      	str	r2, [sp, #164]	@ 0xa4
 8022c68:	f109 0902 	add.w	r9, r9, #2
 8022c6c:	441d      	add	r5, r3
 8022c6e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022c72:	e63d      	b.n	80228f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022c74:	2800      	cmp	r0, #0
 8022c76:	f43f aedd 	beq.w	8022a34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022c7a:	5c79      	ldrb	r1, [r7, r1]
 8022c7c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022c80:	910b      	str	r1, [sp, #44]	@ 0x2c
 8022c82:	0e09      	lsrs	r1, r1, #24
 8022c84:	9114      	str	r1, [sp, #80]	@ 0x50
 8022c86:	e6d5      	b.n	8022a34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022c88:	b01f      	add	sp, #124	@ 0x7c
 8022c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022c8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8022c8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c92:	b089      	sub	sp, #36	@ 0x24
 8022c94:	9101      	str	r1, [sp, #4]
 8022c96:	9801      	ldr	r0, [sp, #4]
 8022c98:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8022c9c:	8800      	ldrh	r0, [r0, #0]
 8022c9e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8022ca2:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8022ca6:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8022caa:	1206      	asrs	r6, r0, #8
 8022cac:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8022cb0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8022cb4:	9602      	str	r6, [sp, #8]
 8022cb6:	10c6      	asrs	r6, r0, #3
 8022cb8:	00c0      	lsls	r0, r0, #3
 8022cba:	b2c0      	uxtb	r0, r0
 8022cbc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8022cc0:	9004      	str	r0, [sp, #16]
 8022cc2:	2f00      	cmp	r7, #0
 8022cc4:	fb07 100c 	mla	r0, r7, ip, r1
 8022cc8:	9603      	str	r6, [sp, #12]
 8022cca:	eb02 0e00 	add.w	lr, r2, r0
 8022cce:	f2c0 810a 	blt.w	8022ee6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022cd2:	45b8      	cmp	r8, r7
 8022cd4:	f340 8107 	ble.w	8022ee6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022cd8:	2900      	cmp	r1, #0
 8022cda:	f2c0 8102 	blt.w	8022ee2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8022cde:	458c      	cmp	ip, r1
 8022ce0:	f340 80ff 	ble.w	8022ee2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8022ce4:	5c12      	ldrb	r2, [r2, r0]
 8022ce6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8022cea:	1c4a      	adds	r2, r1, #1
 8022cec:	f100 80fe 	bmi.w	8022eec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022cf0:	4594      	cmp	ip, r2
 8022cf2:	f340 80fb 	ble.w	8022eec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022cf6:	2d00      	cmp	r5, #0
 8022cf8:	f000 80fa 	beq.w	8022ef0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8022cfc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022d00:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8022d04:	3701      	adds	r7, #1
 8022d06:	f100 80f7 	bmi.w	8022ef8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022d0a:	45b8      	cmp	r8, r7
 8022d0c:	f340 80f4 	ble.w	8022ef8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022d10:	2c00      	cmp	r4, #0
 8022d12:	f000 80f4 	beq.w	8022efe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8022d16:	2900      	cmp	r1, #0
 8022d18:	eb0e 020c 	add.w	r2, lr, ip
 8022d1c:	f2c0 80ea 	blt.w	8022ef4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8022d20:	458c      	cmp	ip, r1
 8022d22:	f340 80e7 	ble.w	8022ef4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8022d26:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8022d2a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8022d2e:	3101      	adds	r1, #1
 8022d30:	f100 80e8 	bmi.w	8022f04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8022d34:	458c      	cmp	ip, r1
 8022d36:	f340 80e5 	ble.w	8022f04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8022d3a:	2d00      	cmp	r5, #0
 8022d3c:	f000 80e4 	beq.w	8022f08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8022d40:	7852      	ldrb	r2, [r2, #1]
 8022d42:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022d46:	0e0b      	lsrs	r3, r1, #24
 8022d48:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8022d4c:	9300      	str	r3, [sp, #0]
 8022d4e:	b2a4      	uxth	r4, r4
 8022d50:	b2ab      	uxth	r3, r5
 8022d52:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8022d56:	fb03 f904 	mul.w	r9, r3, r4
 8022d5a:	fb0a f505 	mul.w	r5, sl, r5
 8022d5e:	011b      	lsls	r3, r3, #4
 8022d60:	eba3 0e09 	sub.w	lr, r3, r9
 8022d64:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8022d68:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8022d6c:	0a28      	lsrs	r0, r5, #8
 8022d6e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8022d72:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8022d76:	4405      	add	r5, r0
 8022d78:	0a2d      	lsrs	r5, r5, #8
 8022d7a:	fb0a f303 	mul.w	r3, sl, r3
 8022d7e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 8022d82:	9005      	str	r0, [sp, #20]
 8022d84:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8022d88:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022d8c:	0a1b      	lsrs	r3, r3, #8
 8022d8e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8022d92:	9306      	str	r3, [sp, #24]
 8022d94:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8022d98:	fb0b f303 	mul.w	r3, fp, r3
 8022d9c:	0a1d      	lsrs	r5, r3, #8
 8022d9e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8022da2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8022da6:	fb0b f606 	mul.w	r6, fp, r6
 8022daa:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8022dae:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8022db2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022db6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8022dba:	fb08 f707 	mul.w	r7, r8, r7
 8022dbe:	441d      	add	r5, r3
 8022dc0:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8022dc4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022dc8:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8022dcc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022dd0:	fb08 fc0c 	mul.w	ip, r8, ip
 8022dd4:	0a1b      	lsrs	r3, r3, #8
 8022dd6:	9307      	str	r3, [sp, #28]
 8022dd8:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8022ddc:	0e0b      	lsrs	r3, r1, #24
 8022dde:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8022de2:	435f      	muls	r7, r3
 8022de4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8022de8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8022dec:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8022df0:	4460      	add	r0, ip
 8022df2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022df6:	b2a4      	uxth	r4, r4
 8022df8:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022dfc:	0a2d      	lsrs	r5, r5, #8
 8022dfe:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8022e02:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022e06:	fa1f fe8e 	uxth.w	lr, lr
 8022e0a:	4359      	muls	r1, r3
 8022e0c:	1b12      	subs	r2, r2, r4
 8022e0e:	9b05      	ldr	r3, [sp, #20]
 8022e10:	44bc      	add	ip, r7
 8022e12:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022e16:	b292      	uxth	r2, r2
 8022e18:	fb05 f50e 	mul.w	r5, r5, lr
 8022e1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022e20:	fb03 5502 	mla	r5, r3, r2, r5
 8022e24:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022e28:	9b06      	ldr	r3, [sp, #24]
 8022e2a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 8022e2e:	0a36      	lsrs	r6, r6, #8
 8022e30:	0a00      	lsrs	r0, r0, #8
 8022e32:	fb0c 5509 	mla	r5, ip, r9, r5
 8022e36:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8022e3a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022e3e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8022e42:	fb00 5504 	mla	r5, r0, r4, r5
 8022e46:	fb0e f606 	mul.w	r6, lr, r6
 8022e4a:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 8022e4e:	0a09      	lsrs	r1, r1, #8
 8022e50:	9b07      	ldr	r3, [sp, #28]
 8022e52:	fb02 6000 	mla	r0, r2, r0, r6
 8022e56:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8022e5a:	fb09 0001 	mla	r0, r9, r1, r0
 8022e5e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022e62:	fb0e fe0b 	mul.w	lr, lr, fp
 8022e66:	fb04 0003 	mla	r0, r4, r3, r0
 8022e6a:	fb02 e20a 	mla	r2, r2, sl, lr
 8022e6e:	9b00      	ldr	r3, [sp, #0]
 8022e70:	fb04 2408 	mla	r4, r4, r8, r2
 8022e74:	fb09 4903 	mla	r9, r9, r3, r4
 8022e78:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8022e7c:	9b02      	ldr	r3, [sp, #8]
 8022e7e:	9a04      	ldr	r2, [sp, #16]
 8022e80:	fa5f f989 	uxtb.w	r9, r9
 8022e84:	fb03 f109 	mul.w	r1, r3, r9
 8022e88:	9b03      	ldr	r3, [sp, #12]
 8022e8a:	0a2d      	lsrs	r5, r5, #8
 8022e8c:	0a00      	lsrs	r0, r0, #8
 8022e8e:	fb03 f309 	mul.w	r3, r3, r9
 8022e92:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8022e96:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022e9a:	4305      	orrs	r5, r0
 8022e9c:	fb02 f909 	mul.w	r9, r2, r9
 8022ea0:	1c58      	adds	r0, r3, #1
 8022ea2:	1c4a      	adds	r2, r1, #1
 8022ea4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022ea8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022eac:	0a2b      	lsrs	r3, r5, #8
 8022eae:	0c2a      	lsrs	r2, r5, #16
 8022eb0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022eb4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022eb8:	00db      	lsls	r3, r3, #3
 8022eba:	0212      	lsls	r2, r2, #8
 8022ebc:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8022ec0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022ec4:	4313      	orrs	r3, r2
 8022ec6:	f109 0201 	add.w	r2, r9, #1
 8022eca:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8022ece:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022ed2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022ed6:	431d      	orrs	r5, r3
 8022ed8:	9b01      	ldr	r3, [sp, #4]
 8022eda:	801d      	strh	r5, [r3, #0]
 8022edc:	b009      	add	sp, #36	@ 0x24
 8022ede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022ee2:	2000      	movs	r0, #0
 8022ee4:	e701      	b.n	8022cea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8022ee6:	2600      	movs	r6, #0
 8022ee8:	4630      	mov	r0, r6
 8022eea:	e70b      	b.n	8022d04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022eec:	2600      	movs	r6, #0
 8022eee:	e709      	b.n	8022d04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022ef0:	462e      	mov	r6, r5
 8022ef2:	e707      	b.n	8022d04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022ef4:	2700      	movs	r7, #0
 8022ef6:	e71a      	b.n	8022d2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8022ef8:	2100      	movs	r1, #0
 8022efa:	460f      	mov	r7, r1
 8022efc:	e723      	b.n	8022d46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022efe:	4621      	mov	r1, r4
 8022f00:	4627      	mov	r7, r4
 8022f02:	e720      	b.n	8022d46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022f04:	2100      	movs	r1, #0
 8022f06:	e71e      	b.n	8022d46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022f08:	4629      	mov	r1, r5
 8022f0a:	e71c      	b.n	8022d46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08022f0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f10:	b09b      	sub	sp, #108	@ 0x6c
 8022f12:	9218      	str	r2, [sp, #96]	@ 0x60
 8022f14:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8022f16:	9116      	str	r1, [sp, #88]	@ 0x58
 8022f18:	9307      	str	r3, [sp, #28]
 8022f1a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8022f1e:	9019      	str	r0, [sp, #100]	@ 0x64
 8022f20:	6850      	ldr	r0, [r2, #4]
 8022f22:	6812      	ldr	r2, [r2, #0]
 8022f24:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8022f26:	fb00 1303 	mla	r3, r0, r3, r1
 8022f2a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022f2e:	930a      	str	r3, [sp, #40]	@ 0x28
 8022f30:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022f32:	681b      	ldr	r3, [r3, #0]
 8022f34:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022f36:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022f38:	685e      	ldr	r6, [r3, #4]
 8022f3a:	3604      	adds	r6, #4
 8022f3c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8022f3e:	2b00      	cmp	r3, #0
 8022f40:	dc03      	bgt.n	8022f4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022f42:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022f44:	2b00      	cmp	r3, #0
 8022f46:	f340 8373 	ble.w	8023630 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022f4a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022f4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f50:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022f54:	1e48      	subs	r0, r1, #1
 8022f56:	1e57      	subs	r7, r2, #1
 8022f58:	9b07      	ldr	r3, [sp, #28]
 8022f5a:	2b00      	cmp	r3, #0
 8022f5c:	f340 8190 	ble.w	8023280 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022f60:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8022f62:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022f66:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022f6a:	d406      	bmi.n	8022f7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022f6c:	4584      	cmp	ip, r0
 8022f6e:	da04      	bge.n	8022f7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022f70:	2b00      	cmp	r3, #0
 8022f72:	db02      	blt.n	8022f7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022f74:	42bb      	cmp	r3, r7
 8022f76:	f2c0 8184 	blt.w	8023282 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8022f7a:	f11c 0c01 	adds.w	ip, ip, #1
 8022f7e:	f100 8172 	bmi.w	8023266 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022f82:	4561      	cmp	r1, ip
 8022f84:	f2c0 816f 	blt.w	8023266 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022f88:	3301      	adds	r3, #1
 8022f8a:	f100 816c 	bmi.w	8023266 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022f8e:	429a      	cmp	r2, r3
 8022f90:	f2c0 8169 	blt.w	8023266 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022f94:	9b07      	ldr	r3, [sp, #28]
 8022f96:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8022f98:	9317      	str	r3, [sp, #92]	@ 0x5c
 8022f9a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8022f9c:	2b00      	cmp	r3, #0
 8022f9e:	f340 818e 	ble.w	80232be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8022fa2:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8022fa4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022fa8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022faa:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8022fae:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8022fb0:	141b      	asrs	r3, r3, #16
 8022fb2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022fb6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022fba:	f100 81d1 	bmi.w	8023360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022fbe:	f101 38ff 	add.w	r8, r1, #4294967295
 8022fc2:	4543      	cmp	r3, r8
 8022fc4:	f280 81cc 	bge.w	8023360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022fc8:	f1bc 0f00 	cmp.w	ip, #0
 8022fcc:	f2c0 81c8 	blt.w	8023360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022fd0:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022fd4:	45c4      	cmp	ip, r8
 8022fd6:	f280 81c3 	bge.w	8023360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022fda:	b209      	sxth	r1, r1
 8022fdc:	fb0c 3301 	mla	r3, ip, r1, r3
 8022fe0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8022fe2:	eb04 0803 	add.w	r8, r4, r3
 8022fe6:	5ce3      	ldrb	r3, [r4, r3]
 8022fe8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022fec:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022ff0:	2a00      	cmp	r2, #0
 8022ff2:	f000 81aa 	beq.w	802334a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8022ff6:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022ffa:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8022ffe:	940b      	str	r4, [sp, #44]	@ 0x2c
 8023000:	0e24      	lsrs	r4, r4, #24
 8023002:	9412      	str	r4, [sp, #72]	@ 0x48
 8023004:	b178      	cbz	r0, 8023026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023006:	eb08 0c01 	add.w	ip, r8, r1
 802300a:	f818 1001 	ldrb.w	r1, [r8, r1]
 802300e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023012:	9108      	str	r1, [sp, #32]
 8023014:	0e09      	lsrs	r1, r1, #24
 8023016:	9110      	str	r1, [sp, #64]	@ 0x40
 8023018:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802301c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023020:	910c      	str	r1, [sp, #48]	@ 0x30
 8023022:	0e09      	lsrs	r1, r1, #24
 8023024:	9113      	str	r1, [sp, #76]	@ 0x4c
 8023026:	b292      	uxth	r2, r2
 8023028:	b280      	uxth	r0, r0
 802302a:	fb02 f900 	mul.w	r9, r2, r0
 802302e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023032:	0112      	lsls	r2, r2, #4
 8023034:	eba2 0809 	sub.w	r8, r2, r9
 8023038:	b280      	uxth	r0, r0
 802303a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802303e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8023040:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023042:	fa1f f888 	uxth.w	r8, r8
 8023046:	1a12      	subs	r2, r2, r0
 8023048:	b292      	uxth	r2, r2
 802304a:	fb08 f101 	mul.w	r1, r8, r1
 802304e:	fb02 110e 	mla	r1, r2, lr, r1
 8023052:	fb00 1104 	mla	r1, r0, r4, r1
 8023056:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8023058:	fb09 1104 	mla	r1, r9, r4, r1
 802305c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023060:	2900      	cmp	r1, #0
 8023062:	f000 80f5 	beq.w	8023250 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023066:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802306a:	d01b      	beq.n	80230a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802306c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8023070:	fb0e fa0a 	mul.w	sl, lr, sl
 8023074:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023078:	fb0e fe03 	mul.w	lr, lr, r3
 802307c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023080:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023084:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023088:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802308c:	4453      	add	r3, sl
 802308e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023092:	0a1b      	lsrs	r3, r3, #8
 8023094:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023098:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802309c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80230a0:	ea43 030c 	orr.w	r3, r3, ip
 80230a4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80230a6:	2cff      	cmp	r4, #255	@ 0xff
 80230a8:	d021      	beq.n	80230ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80230aa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80230ac:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80230b0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80230b2:	fb04 fb0b 	mul.w	fp, r4, fp
 80230b6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80230b8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80230bc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80230be:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80230c2:	fb04 fa0a 	mul.w	sl, r4, sl
 80230c6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80230ca:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80230ce:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80230d2:	44de      	add	lr, fp
 80230d4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80230d8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80230dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230e0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80230e4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80230e8:	ea4e 040a 	orr.w	r4, lr, sl
 80230ec:	940b      	str	r4, [sp, #44]	@ 0x2c
 80230ee:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80230f0:	2cff      	cmp	r4, #255	@ 0xff
 80230f2:	d021      	beq.n	8023138 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80230f4:	9c08      	ldr	r4, [sp, #32]
 80230f6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80230fa:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80230fc:	fb04 fb0b 	mul.w	fp, r4, fp
 8023100:	9c08      	ldr	r4, [sp, #32]
 8023102:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023106:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023108:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802310c:	fb04 fa0a 	mul.w	sl, r4, sl
 8023110:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023114:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023118:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802311c:	44de      	add	lr, fp
 802311e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023122:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023126:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802312a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802312e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023132:	ea4e 040a 	orr.w	r4, lr, sl
 8023136:	9408      	str	r4, [sp, #32]
 8023138:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802313a:	2cff      	cmp	r4, #255	@ 0xff
 802313c:	d021      	beq.n	8023182 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802313e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8023140:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8023144:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8023146:	fb04 fb0b 	mul.w	fp, r4, fp
 802314a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802314c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023150:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8023152:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023156:	fb04 fa0a 	mul.w	sl, r4, sl
 802315a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802315e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023162:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023166:	44de      	add	lr, fp
 8023168:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802316c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023170:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023174:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023178:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802317c:	ea4e 040a 	orr.w	r4, lr, sl
 8023180:	940c      	str	r4, [sp, #48]	@ 0x30
 8023182:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023184:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023188:	9c08      	ldr	r4, [sp, #32]
 802318a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802318e:	fb08 fc0c 	mul.w	ip, r8, ip
 8023192:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023196:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802319a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802319c:	fb00 cc0e 	mla	ip, r0, lr, ip
 80231a0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80231a4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80231a6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80231aa:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 80231ae:	fb08 f80e 	mul.w	r8, r8, lr
 80231b2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80231b6:	fb02 8303 	mla	r3, r2, r3, r8
 80231ba:	9a08      	ldr	r2, [sp, #32]
 80231bc:	f8b7 8000 	ldrh.w	r8, [r7]
 80231c0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80231c4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80231c6:	fb00 330a 	mla	r3, r0, sl, r3
 80231ca:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 80231ce:	fb09 3900 	mla	r9, r9, r0, r3
 80231d2:	43c9      	mvns	r1, r1
 80231d4:	ea4f 2228 	mov.w	r2, r8, asr #8
 80231d8:	fa5f fe81 	uxtb.w	lr, r1
 80231dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231e0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80231e4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80231e8:	fb02 f20e 	mul.w	r2, r2, lr
 80231ec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80231f0:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80231f4:	ea4c 0c09 	orr.w	ip, ip, r9
 80231f8:	1c53      	adds	r3, r2, #1
 80231fa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80231fe:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8023202:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8023206:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802320a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802320e:	4a63      	ldr	r2, [pc, #396]	@ (802339c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8023210:	fb00 f00e 	mul.w	r0, r0, lr
 8023214:	b2db      	uxtb	r3, r3
 8023216:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 802321a:	1c43      	adds	r3, r0, #1
 802321c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023220:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8023224:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8023228:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802322c:	b2c9      	uxtb	r1, r1
 802322e:	00db      	lsls	r3, r3, #3
 8023230:	fb01 f10e 	mul.w	r1, r1, lr
 8023234:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023238:	4313      	orrs	r3, r2
 802323a:	1c4a      	adds	r2, r1, #1
 802323c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023240:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023244:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023248:	ea4c 0c03 	orr.w	ip, ip, r3
 802324c:	f8a7 c000 	strh.w	ip, [r7]
 8023250:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023252:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8023254:	441a      	add	r2, r3
 8023256:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023258:	9225      	str	r2, [sp, #148]	@ 0x94
 802325a:	441d      	add	r5, r3
 802325c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802325e:	3b01      	subs	r3, #1
 8023260:	3702      	adds	r7, #2
 8023262:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023264:	e699      	b.n	8022f9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023266:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023268:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 802326a:	441c      	add	r4, r3
 802326c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802326e:	9425      	str	r4, [sp, #148]	@ 0x94
 8023270:	441d      	add	r5, r3
 8023272:	9b07      	ldr	r3, [sp, #28]
 8023274:	3b01      	subs	r3, #1
 8023276:	9307      	str	r3, [sp, #28]
 8023278:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802327a:	3302      	adds	r3, #2
 802327c:	930a      	str	r3, [sp, #40]	@ 0x28
 802327e:	e66b      	b.n	8022f58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8023280:	d024      	beq.n	80232cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8023282:	9b07      	ldr	r3, [sp, #28]
 8023284:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8023286:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8023288:	3b01      	subs	r3, #1
 802328a:	fb00 4003 	mla	r0, r0, r3, r4
 802328e:	1400      	asrs	r0, r0, #16
 8023290:	f53f ae80 	bmi.w	8022f94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023294:	3901      	subs	r1, #1
 8023296:	4288      	cmp	r0, r1
 8023298:	f6bf ae7c 	bge.w	8022f94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802329c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802329e:	fb01 5303 	mla	r3, r1, r3, r5
 80232a2:	141b      	asrs	r3, r3, #16
 80232a4:	f53f ae76 	bmi.w	8022f94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80232a8:	3a01      	subs	r2, #1
 80232aa:	4293      	cmp	r3, r2
 80232ac:	f6bf ae72 	bge.w	8022f94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80232b0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80232b4:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80232b8:	f1bb 0f00 	cmp.w	fp, #0
 80232bc:	dc70      	bgt.n	80233a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80232be:	9b07      	ldr	r3, [sp, #28]
 80232c0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80232c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80232c6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80232ca:	930a      	str	r3, [sp, #40]	@ 0x28
 80232cc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80232ce:	2b00      	cmp	r3, #0
 80232d0:	f340 81ae 	ble.w	8023630 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80232d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80232d8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80232dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80232e0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80232e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80232e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80232ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80232ee:	eef0 6a62 	vmov.f32	s13, s5
 80232f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80232f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80232fe:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8023302:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023306:	eef0 6a43 	vmov.f32	s13, s6
 802330a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802330e:	ee12 2a90 	vmov	r2, s5
 8023312:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023316:	fb92 f3f3 	sdiv	r3, r2, r3
 802331a:	ee13 2a10 	vmov	r2, s6
 802331e:	9327      	str	r3, [sp, #156]	@ 0x9c
 8023320:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023322:	fb92 f3f3 	sdiv	r3, r2, r3
 8023326:	9328      	str	r3, [sp, #160]	@ 0xa0
 8023328:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802332a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802332c:	3b01      	subs	r3, #1
 802332e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023332:	9316      	str	r3, [sp, #88]	@ 0x58
 8023334:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023336:	bf08      	it	eq
 8023338:	4613      	moveq	r3, r2
 802333a:	ee16 5a90 	vmov	r5, s13
 802333e:	9307      	str	r3, [sp, #28]
 8023340:	eeb0 3a67 	vmov.f32	s6, s15
 8023344:	eef0 2a47 	vmov.f32	s5, s14
 8023348:	e5f8      	b.n	8022f3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802334a:	2800      	cmp	r0, #0
 802334c:	f43f ae6b 	beq.w	8023026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023350:	f818 1001 	ldrb.w	r1, [r8, r1]
 8023354:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023358:	9108      	str	r1, [sp, #32]
 802335a:	0e09      	lsrs	r1, r1, #24
 802335c:	9110      	str	r1, [sp, #64]	@ 0x40
 802335e:	e662      	b.n	8023026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023360:	f113 0801 	adds.w	r8, r3, #1
 8023364:	f53f af74 	bmi.w	8023250 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023368:	4541      	cmp	r1, r8
 802336a:	f6ff af71 	blt.w	8023250 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802336e:	f11c 0801 	adds.w	r8, ip, #1
 8023372:	f53f af6d 	bmi.w	8023250 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023376:	45c6      	cmp	lr, r8
 8023378:	f6ff af6a 	blt.w	8023250 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802337c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8023380:	b209      	sxth	r1, r1
 8023382:	fa0f f38e 	sxth.w	r3, lr
 8023386:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802338a:	9301      	str	r3, [sp, #4]
 802338c:	9100      	str	r1, [sp, #0]
 802338e:	4633      	mov	r3, r6
 8023390:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8023392:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8023394:	4639      	mov	r1, r7
 8023396:	f7ff fc7a 	bl	8022c8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802339a:	e759      	b.n	8023250 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802339c:	fffff800 	.word	0xfffff800
 80233a0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80233a2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80233a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80233a8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80233aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80233ae:	1427      	asrs	r7, r4, #16
 80233b0:	142b      	asrs	r3, r5, #16
 80233b2:	fb01 7303 	mla	r3, r1, r3, r7
 80233b6:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80233b8:	18e7      	adds	r7, r4, r3
 80233ba:	5ce3      	ldrb	r3, [r4, r3]
 80233bc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80233c0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80233c4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80233c8:	2a00      	cmp	r2, #0
 80233ca:	f000 8127 	beq.w	802361c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80233ce:	f897 e001 	ldrb.w	lr, [r7, #1]
 80233d2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80233d6:	940d      	str	r4, [sp, #52]	@ 0x34
 80233d8:	0e24      	lsrs	r4, r4, #24
 80233da:	9414      	str	r4, [sp, #80]	@ 0x50
 80233dc:	b170      	cbz	r0, 80233fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80233de:	eb07 0e01 	add.w	lr, r7, r1
 80233e2:	5c79      	ldrb	r1, [r7, r1]
 80233e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80233e8:	9109      	str	r1, [sp, #36]	@ 0x24
 80233ea:	0e09      	lsrs	r1, r1, #24
 80233ec:	9111      	str	r1, [sp, #68]	@ 0x44
 80233ee:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80233f2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80233f6:	910e      	str	r1, [sp, #56]	@ 0x38
 80233f8:	0e09      	lsrs	r1, r1, #24
 80233fa:	9115      	str	r1, [sp, #84]	@ 0x54
 80233fc:	b292      	uxth	r2, r2
 80233fe:	b280      	uxth	r0, r0
 8023400:	fb02 f800 	mul.w	r8, r2, r0
 8023404:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023408:	0112      	lsls	r2, r2, #4
 802340a:	eba2 0e08 	sub.w	lr, r2, r8
 802340e:	b280      	uxth	r0, r0
 8023410:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8023414:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8023416:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8023418:	fa1f fe8e 	uxth.w	lr, lr
 802341c:	1a09      	subs	r1, r1, r0
 802341e:	b289      	uxth	r1, r1
 8023420:	fb0e f202 	mul.w	r2, lr, r2
 8023424:	fb01 220c 	mla	r2, r1, ip, r2
 8023428:	fb00 2204 	mla	r2, r0, r4, r2
 802342c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802342e:	fb08 2204 	mla	r2, r8, r4, r2
 8023432:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023436:	2a00      	cmp	r2, #0
 8023438:	f000 80e5 	beq.w	8023606 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802343c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8023440:	d019      	beq.n	8023476 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8023442:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8023446:	fb0c fa0a 	mul.w	sl, ip, sl
 802344a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802344e:	fb0c fc03 	mul.w	ip, ip, r3
 8023452:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023456:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802345a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802345e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8023462:	4453      	add	r3, sl
 8023464:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023468:	0a1b      	lsrs	r3, r3, #8
 802346a:	0a3f      	lsrs	r7, r7, #8
 802346c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023470:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023474:	433b      	orrs	r3, r7
 8023476:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8023478:	2cff      	cmp	r4, #255	@ 0xff
 802347a:	d020      	beq.n	80234be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 802347c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802347e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023482:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8023484:	4367      	muls	r7, r4
 8023486:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8023488:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802348c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802348e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023492:	fb04 fa0a 	mul.w	sl, r4, sl
 8023496:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802349a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802349e:	44bc      	add	ip, r7
 80234a0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80234a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80234a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234b0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80234b4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80234b8:	ea4c 040a 	orr.w	r4, ip, sl
 80234bc:	940d      	str	r4, [sp, #52]	@ 0x34
 80234be:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80234c0:	2cff      	cmp	r4, #255	@ 0xff
 80234c2:	d020      	beq.n	8023506 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80234c4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80234c6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80234ca:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80234cc:	4367      	muls	r7, r4
 80234ce:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80234d0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80234d4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80234d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80234da:	fb04 fa0a 	mul.w	sl, r4, sl
 80234de:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80234e2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80234e6:	44bc      	add	ip, r7
 80234e8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80234ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80234f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234f8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80234fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023500:	ea4c 040a 	orr.w	r4, ip, sl
 8023504:	9409      	str	r4, [sp, #36]	@ 0x24
 8023506:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8023508:	2cff      	cmp	r4, #255	@ 0xff
 802350a:	d020      	beq.n	802354e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 802350c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802350e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023512:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8023514:	4367      	muls	r7, r4
 8023516:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8023518:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802351c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802351e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023522:	fb04 fa0a 	mul.w	sl, r4, sl
 8023526:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802352a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802352e:	44bc      	add	ip, r7
 8023530:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023534:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023538:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802353c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023540:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023544:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023548:	ea4c 040a 	orr.w	r4, ip, sl
 802354c:	940e      	str	r4, [sp, #56]	@ 0x38
 802354e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8023550:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023554:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8023556:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802355a:	fb0e f707 	mul.w	r7, lr, r7
 802355e:	fb01 770c 	mla	r7, r1, ip, r7
 8023562:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023566:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8023568:	fb00 770c 	mla	r7, r0, ip, r7
 802356c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023570:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8023572:	fb08 770c 	mla	r7, r8, ip, r7
 8023576:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 802357a:	fb0e fe0c 	mul.w	lr, lr, ip
 802357e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023582:	fb01 e303 	mla	r3, r1, r3, lr
 8023586:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8023588:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802358c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802358e:	fb00 330a 	mla	r3, r0, sl, r3
 8023592:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8023596:	fb08 3c0c 	mla	ip, r8, ip, r3
 802359a:	f8b9 3000 	ldrh.w	r3, [r9]
 802359e:	43d2      	mvns	r2, r2
 80235a0:	1218      	asrs	r0, r3, #8
 80235a2:	b2d2      	uxtb	r2, r2
 80235a4:	10d9      	asrs	r1, r3, #3
 80235a6:	0a3f      	lsrs	r7, r7, #8
 80235a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80235ac:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80235b0:	00db      	lsls	r3, r3, #3
 80235b2:	4350      	muls	r0, r2
 80235b4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80235b8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80235bc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80235c0:	b2db      	uxtb	r3, r3
 80235c2:	ea47 070c 	orr.w	r7, r7, ip
 80235c6:	4351      	muls	r1, r2
 80235c8:	4353      	muls	r3, r2
 80235ca:	1c42      	adds	r2, r0, #1
 80235cc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80235d0:	0c3a      	lsrs	r2, r7, #16
 80235d2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80235d6:	4a18      	ldr	r2, [pc, #96]	@ (8023638 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80235d8:	b2c0      	uxtb	r0, r0
 80235da:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80235de:	1c4a      	adds	r2, r1, #1
 80235e0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80235e4:	0a3a      	lsrs	r2, r7, #8
 80235e6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80235ea:	00c9      	lsls	r1, r1, #3
 80235ec:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80235f0:	4301      	orrs	r1, r0
 80235f2:	1c58      	adds	r0, r3, #1
 80235f4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80235f8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80235fc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8023600:	4308      	orrs	r0, r1
 8023602:	f8a9 0000 	strh.w	r0, [r9]
 8023606:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023608:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 802360a:	441a      	add	r2, r3
 802360c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802360e:	9225      	str	r2, [sp, #148]	@ 0x94
 8023610:	f109 0902 	add.w	r9, r9, #2
 8023614:	441d      	add	r5, r3
 8023616:	f10b 3bff 	add.w	fp, fp, #4294967295
 802361a:	e64d      	b.n	80232b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 802361c:	2800      	cmp	r0, #0
 802361e:	f43f aeed 	beq.w	80233fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8023622:	5c79      	ldrb	r1, [r7, r1]
 8023624:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023628:	9109      	str	r1, [sp, #36]	@ 0x24
 802362a:	0e09      	lsrs	r1, r1, #24
 802362c:	9111      	str	r1, [sp, #68]	@ 0x44
 802362e:	e6e5      	b.n	80233fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8023630:	b01b      	add	sp, #108	@ 0x6c
 8023632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023636:	bf00      	nop
 8023638:	fffff800 	.word	0xfffff800

0802363c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 802363c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023640:	b085      	sub	sp, #20
 8023642:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8023646:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 802364a:	9103      	str	r1, [sp, #12]
 802364c:	fb00 7406 	mla	r4, r0, r6, r7
 8023650:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8023654:	2800      	cmp	r0, #0
 8023656:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 802365a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 802365e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8023662:	9501      	str	r5, [sp, #4]
 8023664:	eb03 0904 	add.w	r9, r3, r4
 8023668:	f2c0 8150 	blt.w	802390c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802366c:	4583      	cmp	fp, r0
 802366e:	f340 814d 	ble.w	802390c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8023672:	2f00      	cmp	r7, #0
 8023674:	f2c0 8146 	blt.w	8023904 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8023678:	42be      	cmp	r6, r7
 802367a:	f340 8143 	ble.w	8023904 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802367e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8023682:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8023686:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802368a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802368e:	4355      	muls	r5, r2
 8023690:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023694:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8023698:	fb0c f203 	mul.w	r2, ip, r3
 802369c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80236a0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 80236a4:	441d      	add	r5, r3
 80236a6:	f102 0320 	add.w	r3, r2, #32
 80236aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80236ae:	0a1b      	lsrs	r3, r3, #8
 80236b0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80236b4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80236b8:	431c      	orrs	r4, r3
 80236ba:	1c7b      	adds	r3, r7, #1
 80236bc:	f100 812b 	bmi.w	8023916 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80236c0:	429e      	cmp	r6, r3
 80236c2:	f340 8128 	ble.w	8023916 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80236c6:	2900      	cmp	r1, #0
 80236c8:	f000 8128 	beq.w	802391c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80236cc:	9a01      	ldr	r2, [sp, #4]
 80236ce:	f899 3001 	ldrb.w	r3, [r9, #1]
 80236d2:	8855      	ldrh	r5, [r2, #2]
 80236d4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80236d8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 80236dc:	fb08 f802 	mul.w	r8, r8, r2
 80236e0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80236e4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 80236e8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80236ec:	435d      	muls	r5, r3
 80236ee:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80236f2:	44d0      	add	r8, sl
 80236f4:	f105 0a20 	add.w	sl, r5, #32
 80236f8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80236fc:	0a2d      	lsrs	r5, r5, #8
 80236fe:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8023702:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023706:	432a      	orrs	r2, r5
 8023708:	3001      	adds	r0, #1
 802370a:	f100 810d 	bmi.w	8023928 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802370e:	4583      	cmp	fp, r0
 8023710:	f340 810a 	ble.w	8023928 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8023714:	f1be 0f00 	cmp.w	lr, #0
 8023718:	f000 810b 	beq.w	8023932 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802371c:	2f00      	cmp	r7, #0
 802371e:	f2c0 8100 	blt.w	8023922 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8023722:	42be      	cmp	r6, r7
 8023724:	f340 80fd 	ble.w	8023922 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8023728:	9801      	ldr	r0, [sp, #4]
 802372a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802372e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8023732:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023736:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 802373a:	fb0a fa00 	mul.w	sl, sl, r0
 802373e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8023742:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8023746:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802374a:	fb05 f808 	mul.w	r8, r5, r8
 802374e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8023752:	4482      	add	sl, r0
 8023754:	f108 0020 	add.w	r0, r8, #32
 8023758:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802375c:	0a00      	lsrs	r0, r0, #8
 802375e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023762:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023766:	ea4b 0b00 	orr.w	fp, fp, r0
 802376a:	3701      	adds	r7, #1
 802376c:	f100 80e6 	bmi.w	802393c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8023770:	42be      	cmp	r6, r7
 8023772:	f340 80e3 	ble.w	802393c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8023776:	2900      	cmp	r1, #0
 8023778:	f000 80e3 	beq.w	8023942 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802377c:	3601      	adds	r6, #1
 802377e:	9801      	ldr	r0, [sp, #4]
 8023780:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023784:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023788:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802378c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8023790:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023794:	fb09 f906 	mul.w	r9, r9, r6
 8023798:	fb07 f800 	mul.w	r8, r7, r0
 802379c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 80237a0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80237a4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 80237a8:	44d1      	add	r9, sl
 80237aa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80237ae:	f108 0020 	add.w	r0, r8, #32
 80237b2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80237b6:	0a00      	lsrs	r0, r0, #8
 80237b8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80237bc:	4330      	orrs	r0, r6
 80237be:	b28e      	uxth	r6, r1
 80237c0:	fa1f f98e 	uxth.w	r9, lr
 80237c4:	fb06 f809 	mul.w	r8, r6, r9
 80237c8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80237cc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80237d0:	0136      	lsls	r6, r6, #4
 80237d2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80237d6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80237da:	9601      	str	r6, [sp, #4]
 80237dc:	ea4a 0404 	orr.w	r4, sl, r4
 80237e0:	fa1f f689 	uxth.w	r6, r9
 80237e4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80237e8:	fb11 f90e 	smulbb	r9, r1, lr
 80237ec:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80237f0:	9602      	str	r6, [sp, #8]
 80237f2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80237f6:	4626      	mov	r6, r4
 80237f8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80237fc:	f1ce 0410 	rsb	r4, lr, #16
 8023800:	1a64      	subs	r4, r4, r1
 8023802:	ea4a 0202 	orr.w	r2, sl, r2
 8023806:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802380a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802380e:	434a      	muls	r2, r1
 8023810:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023814:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023818:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802381c:	fb04 2406 	mla	r4, r4, r6, r2
 8023820:	ea4a 0000 	orr.w	r0, sl, r0
 8023824:	fb09 4200 	mla	r2, r9, r0, r4
 8023828:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802382c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8023830:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8023834:	ea44 0b0b 	orr.w	fp, r4, fp
 8023838:	9c01      	ldr	r4, [sp, #4]
 802383a:	9e02      	ldr	r6, [sp, #8]
 802383c:	9903      	ldr	r1, [sp, #12]
 802383e:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8023842:	1ba4      	subs	r4, r4, r6
 8023844:	9e01      	ldr	r6, [sp, #4]
 8023846:	8808      	ldrh	r0, [r1, #0]
 8023848:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 802384c:	eba6 0608 	sub.w	r6, r6, r8
 8023850:	b2b6      	uxth	r6, r6
 8023852:	b2a4      	uxth	r4, r4
 8023854:	4373      	muls	r3, r6
 8023856:	fb0c 3304 	mla	r3, ip, r4, r3
 802385a:	9c02      	ldr	r4, [sp, #8]
 802385c:	fb04 3505 	mla	r5, r4, r5, r3
 8023860:	fb08 5707 	mla	r7, r8, r7, r5
 8023864:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023868:	b289      	uxth	r1, r1
 802386a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802386e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023872:	434f      	muls	r7, r1
 8023874:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023878:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802387c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023880:	1c7b      	adds	r3, r7, #1
 8023882:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8023886:	ea42 0e0e 	orr.w	lr, r2, lr
 802388a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802388e:	fa1f f28e 	uxth.w	r2, lr
 8023892:	1203      	asrs	r3, r0, #8
 8023894:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8023898:	b2ff      	uxtb	r7, r7
 802389a:	1215      	asrs	r5, r2, #8
 802389c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80238a0:	fb13 f307 	smulbb	r3, r3, r7
 80238a4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80238a8:	fb05 3501 	mla	r5, r5, r1, r3
 80238ac:	10c3      	asrs	r3, r0, #3
 80238ae:	10d4      	asrs	r4, r2, #3
 80238b0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80238b4:	fb13 f307 	smulbb	r3, r3, r7
 80238b8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80238bc:	fb04 3401 	mla	r4, r4, r1, r3
 80238c0:	00c3      	lsls	r3, r0, #3
 80238c2:	00d2      	lsls	r2, r2, #3
 80238c4:	b2db      	uxtb	r3, r3
 80238c6:	fb13 f307 	smulbb	r3, r3, r7
 80238ca:	b2d2      	uxtb	r2, r2
 80238cc:	fb02 3101 	mla	r1, r2, r1, r3
 80238d0:	b2ad      	uxth	r5, r5
 80238d2:	b289      	uxth	r1, r1
 80238d4:	b2a4      	uxth	r4, r4
 80238d6:	1c6b      	adds	r3, r5, #1
 80238d8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80238dc:	1c62      	adds	r2, r4, #1
 80238de:	1c4b      	adds	r3, r1, #1
 80238e0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80238e4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80238e8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80238ec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80238f0:	0964      	lsrs	r4, r4, #5
 80238f2:	432b      	orrs	r3, r5
 80238f4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80238f8:	9a03      	ldr	r2, [sp, #12]
 80238fa:	4323      	orrs	r3, r4
 80238fc:	8013      	strh	r3, [r2, #0]
 80238fe:	b005      	add	sp, #20
 8023900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023904:	f04f 0c00 	mov.w	ip, #0
 8023908:	4664      	mov	r4, ip
 802390a:	e6d6      	b.n	80236ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802390c:	2300      	movs	r3, #0
 802390e:	469c      	mov	ip, r3
 8023910:	461a      	mov	r2, r3
 8023912:	461c      	mov	r4, r3
 8023914:	e6f8      	b.n	8023708 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8023916:	2300      	movs	r3, #0
 8023918:	461a      	mov	r2, r3
 802391a:	e6f5      	b.n	8023708 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802391c:	460b      	mov	r3, r1
 802391e:	460a      	mov	r2, r1
 8023920:	e6f2      	b.n	8023708 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8023922:	2500      	movs	r5, #0
 8023924:	46ab      	mov	fp, r5
 8023926:	e720      	b.n	802376a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8023928:	2700      	movs	r7, #0
 802392a:	463d      	mov	r5, r7
 802392c:	4638      	mov	r0, r7
 802392e:	46bb      	mov	fp, r7
 8023930:	e745      	b.n	80237be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8023932:	4677      	mov	r7, lr
 8023934:	4675      	mov	r5, lr
 8023936:	4670      	mov	r0, lr
 8023938:	46f3      	mov	fp, lr
 802393a:	e740      	b.n	80237be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802393c:	2700      	movs	r7, #0
 802393e:	4638      	mov	r0, r7
 8023940:	e73d      	b.n	80237be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8023942:	460f      	mov	r7, r1
 8023944:	4608      	mov	r0, r1
 8023946:	e73a      	b.n	80237be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08023948 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802394c:	b097      	sub	sp, #92	@ 0x5c
 802394e:	9214      	str	r2, [sp, #80]	@ 0x50
 8023950:	9308      	str	r3, [sp, #32]
 8023952:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8023954:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8023958:	9312      	str	r3, [sp, #72]	@ 0x48
 802395a:	9111      	str	r1, [sp, #68]	@ 0x44
 802395c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8023960:	9015      	str	r0, [sp, #84]	@ 0x54
 8023962:	6850      	ldr	r0, [r2, #4]
 8023964:	6812      	ldr	r2, [r2, #0]
 8023966:	fb00 1303 	mla	r3, r0, r3, r1
 802396a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802396e:	9309      	str	r3, [sp, #36]	@ 0x24
 8023970:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023972:	681b      	ldr	r3, [r3, #0]
 8023974:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023976:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023978:	685b      	ldr	r3, [r3, #4]
 802397a:	930c      	str	r3, [sp, #48]	@ 0x30
 802397c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8023980:	930a      	str	r3, [sp, #40]	@ 0x28
 8023982:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8023984:	2b00      	cmp	r3, #0
 8023986:	dc03      	bgt.n	8023990 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023988:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802398a:	2b00      	cmp	r3, #0
 802398c:	f340 83cb 	ble.w	8024126 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023990:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023992:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023996:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802399a:	1e48      	subs	r0, r1, #1
 802399c:	1e55      	subs	r5, r2, #1
 802399e:	9b08      	ldr	r3, [sp, #32]
 80239a0:	2b00      	cmp	r3, #0
 80239a2:	f340 81a3 	ble.w	8023cec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80239a6:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 80239a8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80239aa:	1436      	asrs	r6, r6, #16
 80239ac:	ea4f 4323 	mov.w	r3, r3, asr #16
 80239b0:	d406      	bmi.n	80239c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80239b2:	4286      	cmp	r6, r0
 80239b4:	da04      	bge.n	80239c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80239b6:	2b00      	cmp	r3, #0
 80239b8:	db02      	blt.n	80239c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80239ba:	42ab      	cmp	r3, r5
 80239bc:	f2c0 8197 	blt.w	8023cee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80239c0:	3601      	adds	r6, #1
 80239c2:	f100 8184 	bmi.w	8023cce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80239c6:	42b1      	cmp	r1, r6
 80239c8:	f2c0 8181 	blt.w	8023cce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80239cc:	3301      	adds	r3, #1
 80239ce:	f100 817e 	bmi.w	8023cce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80239d2:	429a      	cmp	r2, r3
 80239d4:	f2c0 817b 	blt.w	8023cce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80239d8:	9b08      	ldr	r3, [sp, #32]
 80239da:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80239dc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80239de:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80239e2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80239e4:	2b00      	cmp	r3, #0
 80239e6:	f340 81a4 	ble.w	8023d32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80239ea:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80239ec:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 80239ee:	1418      	asrs	r0, r3, #16
 80239f0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80239f2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80239f6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80239f8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80239fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80239fe:	142d      	asrs	r5, r5, #16
 8023a00:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023a04:	f100 81f8 	bmi.w	8023df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023a08:	f102 3eff 	add.w	lr, r2, #4294967295
 8023a0c:	4575      	cmp	r5, lr
 8023a0e:	f280 81f3 	bge.w	8023df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023a12:	2800      	cmp	r0, #0
 8023a14:	f2c0 81f0 	blt.w	8023df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023a18:	f103 3eff 	add.w	lr, r3, #4294967295
 8023a1c:	4570      	cmp	r0, lr
 8023a1e:	f280 81eb 	bge.w	8023df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023a22:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8023a24:	b212      	sxth	r2, r2
 8023a26:	fb00 5002 	mla	r0, r0, r2, r5
 8023a2a:	fa1f fe81 	uxth.w	lr, r1
 8023a2e:	eb03 0a00 	add.w	sl, r3, r0
 8023a32:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023a36:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023a3a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023a3e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8023a42:	b29b      	uxth	r3, r3
 8023a44:	f1bc 0f00 	cmp.w	ip, #0
 8023a48:	f000 81b9 	beq.w	8023dbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8023a4c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023a50:	940d      	str	r4, [sp, #52]	@ 0x34
 8023a52:	eb0a 0b02 	add.w	fp, sl, r2
 8023a56:	fa1f fa8c 	uxth.w	sl, ip
 8023a5a:	fb0a fe0e 	mul.w	lr, sl, lr
 8023a5e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023a62:	fa1f fa8a 	uxth.w	sl, sl
 8023a66:	eba5 050e 	sub.w	r5, r5, lr
 8023a6a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023a6e:	940e      	str	r4, [sp, #56]	@ 0x38
 8023a70:	eba3 030a 	sub.w	r3, r3, sl
 8023a74:	b2ad      	uxth	r5, r5
 8023a76:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8023a78:	b29b      	uxth	r3, r3
 8023a7a:	fb08 f505 	mul.w	r5, r8, r5
 8023a7e:	fb09 5303 	mla	r3, r9, r3, r5
 8023a82:	fb0a 3304 	mla	r3, sl, r4, r3
 8023a86:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8023a88:	fb0e 3304 	mla	r3, lr, r4, r3
 8023a8c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023a90:	2b00      	cmp	r3, #0
 8023a92:	f000 810f 	beq.w	8023cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023a96:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023a98:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8023a9c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023aa0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023aa4:	f000 8190 	beq.w	8023dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8023aa8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8023aac:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023ab0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023ab4:	fb09 f000 	mul.w	r0, r9, r0
 8023ab8:	fb0a fe0e 	mul.w	lr, sl, lr
 8023abc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023ac0:	f100 0b20 	add.w	fp, r0, #32
 8023ac4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8023ac8:	44ce      	add	lr, r9
 8023aca:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8023ace:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023ad2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023ad6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8023ada:	ea4e 0909 	orr.w	r9, lr, r9
 8023ade:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8023ae2:	8868      	ldrh	r0, [r5, #2]
 8023ae4:	d019      	beq.n	8023b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8023ae6:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8023aea:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023aee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023af2:	fb08 f800 	mul.w	r8, r8, r0
 8023af6:	fb0a fe0e 	mul.w	lr, sl, lr
 8023afa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8023afe:	f108 0b20 	add.w	fp, r8, #32
 8023b02:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8023b06:	4486      	add	lr, r0
 8023b08:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023b0c:	0a00      	lsrs	r0, r0, #8
 8023b0e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023b12:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023b16:	ea4e 0000 	orr.w	r0, lr, r0
 8023b1a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023b1e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023b22:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8023b26:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8023b2a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023b2e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8023b32:	ea4e 0909 	orr.w	r9, lr, r9
 8023b36:	ea4a 0000 	orr.w	r0, sl, r0
 8023b3a:	f1bc 0f00 	cmp.w	ip, #0
 8023b3e:	f000 8145 	beq.w	8023dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8023b42:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8023b46:	3a01      	subs	r2, #1
 8023b48:	0052      	lsls	r2, r2, #1
 8023b4a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8023b4c:	3202      	adds	r2, #2
 8023b4e:	2cff      	cmp	r4, #255	@ 0xff
 8023b50:	eb05 0e02 	add.w	lr, r5, r2
 8023b54:	5aaa      	ldrh	r2, [r5, r2]
 8023b56:	d018      	beq.n	8023b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023b58:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8023b5c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023b60:	fb04 fa02 	mul.w	sl, r4, r2
 8023b64:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023b68:	fb08 f805 	mul.w	r8, r8, r5
 8023b6c:	f10a 0520 	add.w	r5, sl, #32
 8023b70:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023b74:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023b78:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8023b7c:	4442      	add	r2, r8
 8023b7e:	0a2d      	lsrs	r5, r5, #8
 8023b80:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023b84:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023b88:	432a      	orrs	r2, r5
 8023b8a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8023b8c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023b90:	2cff      	cmp	r4, #255	@ 0xff
 8023b92:	d01a      	beq.n	8023bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8023b94:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8023b98:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023b9c:	fb04 fa05 	mul.w	sl, r4, r5
 8023ba0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023ba4:	fb08 f80e 	mul.w	r8, r8, lr
 8023ba8:	f10a 0e20 	add.w	lr, sl, #32
 8023bac:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023bb0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023bb4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8023bb8:	4445      	add	r5, r8
 8023bba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023bbe:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023bc2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8023bc6:	ea45 050e 	orr.w	r5, r5, lr
 8023bca:	fb1c fe01 	smulbb	lr, ip, r1
 8023bce:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023bd2:	f1cc 0810 	rsb	r8, ip, #16
 8023bd6:	eba8 0801 	sub.w	r8, r8, r1
 8023bda:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023bde:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023be2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023be6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023bea:	4341      	muls	r1, r0
 8023bec:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023bf0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8023bf4:	ea4a 0202 	orr.w	r2, sl, r2
 8023bf8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023bfc:	fb09 1108 	mla	r1, r9, r8, r1
 8023c00:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8023c04:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8023c08:	fb0c 1102 	mla	r1, ip, r2, r1
 8023c0c:	ea4b 0505 	orr.w	r5, fp, r5
 8023c10:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023c14:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023c18:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023c1c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023c20:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8023c24:	ea42 0e0e 	orr.w	lr, r2, lr
 8023c28:	fa1f f28e 	uxth.w	r2, lr
 8023c2c:	2bff      	cmp	r3, #255	@ 0xff
 8023c2e:	d103      	bne.n	8023c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8023c30:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8023c32:	29ff      	cmp	r1, #255	@ 0xff
 8023c34:	f000 80de 	beq.w	8023df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8023c38:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8023c3a:	8838      	ldrh	r0, [r7, #0]
 8023c3c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8023c3e:	434b      	muls	r3, r1
 8023c40:	f103 0c01 	add.w	ip, r3, #1
 8023c44:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8023c48:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023c4c:	fa5f fc83 	uxtb.w	ip, r3
 8023c50:	1203      	asrs	r3, r0, #8
 8023c52:	1215      	asrs	r5, r2, #8
 8023c54:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8023c58:	fb13 f30c 	smulbb	r3, r3, ip
 8023c5c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8023c60:	fb05 3501 	mla	r5, r5, r1, r3
 8023c64:	10c3      	asrs	r3, r0, #3
 8023c66:	10d1      	asrs	r1, r2, #3
 8023c68:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8023c6c:	fb13 f30c 	smulbb	r3, r3, ip
 8023c70:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8023c74:	fb01 3104 	mla	r1, r1, r4, r3
 8023c78:	00c3      	lsls	r3, r0, #3
 8023c7a:	00d2      	lsls	r2, r2, #3
 8023c7c:	b2db      	uxtb	r3, r3
 8023c7e:	b2d2      	uxtb	r2, r2
 8023c80:	fb13 f30c 	smulbb	r3, r3, ip
 8023c84:	b2ad      	uxth	r5, r5
 8023c86:	fb02 3304 	mla	r3, r2, r4, r3
 8023c8a:	b29a      	uxth	r2, r3
 8023c8c:	1c6b      	adds	r3, r5, #1
 8023c8e:	b289      	uxth	r1, r1
 8023c90:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023c94:	1c53      	adds	r3, r2, #1
 8023c96:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023c9a:	1c4a      	adds	r2, r1, #1
 8023c9c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023ca0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8023ca4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023ca8:	0949      	lsrs	r1, r1, #5
 8023caa:	432b      	orrs	r3, r5
 8023cac:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8023cb0:	430b      	orrs	r3, r1
 8023cb2:	803b      	strh	r3, [r7, #0]
 8023cb4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8023cb6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8023cb8:	4413      	add	r3, r2
 8023cba:	9321      	str	r3, [sp, #132]	@ 0x84
 8023cbc:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8023cbe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023cc0:	441a      	add	r2, r3
 8023cc2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8023cc4:	9222      	str	r2, [sp, #136]	@ 0x88
 8023cc6:	3b01      	subs	r3, #1
 8023cc8:	3702      	adds	r7, #2
 8023cca:	9313      	str	r3, [sp, #76]	@ 0x4c
 8023ccc:	e689      	b.n	80239e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8023cce:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8023cd0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8023cd2:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8023cd4:	4433      	add	r3, r6
 8023cd6:	9321      	str	r3, [sp, #132]	@ 0x84
 8023cd8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023cda:	441c      	add	r4, r3
 8023cdc:	9b08      	ldr	r3, [sp, #32]
 8023cde:	9422      	str	r4, [sp, #136]	@ 0x88
 8023ce0:	3b01      	subs	r3, #1
 8023ce2:	9308      	str	r3, [sp, #32]
 8023ce4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023ce6:	3302      	adds	r3, #2
 8023ce8:	9309      	str	r3, [sp, #36]	@ 0x24
 8023cea:	e658      	b.n	802399e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8023cec:	d028      	beq.n	8023d40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023cee:	9b08      	ldr	r3, [sp, #32]
 8023cf0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8023cf2:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8023cf4:	3b01      	subs	r3, #1
 8023cf6:	fb00 5003 	mla	r0, r0, r3, r5
 8023cfa:	1400      	asrs	r0, r0, #16
 8023cfc:	f53f ae6c 	bmi.w	80239d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023d00:	3901      	subs	r1, #1
 8023d02:	4288      	cmp	r0, r1
 8023d04:	f6bf ae68 	bge.w	80239d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023d08:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8023d0a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8023d0c:	fb01 0303 	mla	r3, r1, r3, r0
 8023d10:	141b      	asrs	r3, r3, #16
 8023d12:	f53f ae61 	bmi.w	80239d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023d16:	3a01      	subs	r2, #1
 8023d18:	4293      	cmp	r3, r2
 8023d1a:	f6bf ae5d 	bge.w	80239d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023d1e:	9b08      	ldr	r3, [sp, #32]
 8023d20:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8023d24:	9313      	str	r3, [sp, #76]	@ 0x4c
 8023d26:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8023d2a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8023d2c:	2b00      	cmp	r3, #0
 8023d2e:	f300 8082 	bgt.w	8023e36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8023d32:	9b08      	ldr	r3, [sp, #32]
 8023d34:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023d38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023d3a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023d3e:	9309      	str	r3, [sp, #36]	@ 0x24
 8023d40:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8023d42:	2b00      	cmp	r3, #0
 8023d44:	f340 81ef 	ble.w	8024126 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023d48:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023d4c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023d50:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023d54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023d56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023d5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023d5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023d62:	eef0 6a62 	vmov.f32	s13, s5
 8023d66:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023d6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023d72:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8023d76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023d7a:	eef0 6a43 	vmov.f32	s13, s6
 8023d7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023d82:	ee12 2a90 	vmov	r2, s5
 8023d86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023d8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d8e:	ee13 2a10 	vmov	r2, s6
 8023d92:	9323      	str	r3, [sp, #140]	@ 0x8c
 8023d94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023d96:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d9a:	9324      	str	r3, [sp, #144]	@ 0x90
 8023d9c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8023d9e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8023da0:	3b01      	subs	r3, #1
 8023da2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023da6:	9311      	str	r3, [sp, #68]	@ 0x44
 8023da8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023daa:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 8023dae:	bf08      	it	eq
 8023db0:	4613      	moveq	r3, r2
 8023db2:	9308      	str	r3, [sp, #32]
 8023db4:	eeb0 3a67 	vmov.f32	s6, s15
 8023db8:	eef0 2a47 	vmov.f32	s5, s14
 8023dbc:	e5e1      	b.n	8023982 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023dbe:	fb08 f505 	mul.w	r5, r8, r5
 8023dc2:	fb09 5303 	mla	r3, r9, r3, r5
 8023dc6:	e661      	b.n	8023a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8023dc8:	4681      	mov	r9, r0
 8023dca:	e688      	b.n	8023ade <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8023dcc:	f1c1 0210 	rsb	r2, r1, #16
 8023dd0:	4341      	muls	r1, r0
 8023dd2:	fb09 1902 	mla	r9, r9, r2, r1
 8023dd6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023dda:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023dde:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023de2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023de6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8023dea:	ea42 0909 	orr.w	r9, r2, r9
 8023dee:	fa1f f289 	uxth.w	r2, r9
 8023df2:	e71b      	b.n	8023c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023df4:	803a      	strh	r2, [r7, #0]
 8023df6:	e75d      	b.n	8023cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023df8:	f115 0e01 	adds.w	lr, r5, #1
 8023dfc:	f53f af5a 	bmi.w	8023cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023e00:	4572      	cmp	r2, lr
 8023e02:	f6ff af57 	blt.w	8023cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023e06:	f110 0e01 	adds.w	lr, r0, #1
 8023e0a:	f53f af53 	bmi.w	8023cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023e0e:	4573      	cmp	r3, lr
 8023e10:	f6ff af50 	blt.w	8023cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023e14:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8023e16:	9502      	str	r5, [sp, #8]
 8023e18:	b21b      	sxth	r3, r3
 8023e1a:	b212      	sxth	r2, r2
 8023e1c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8023e20:	9301      	str	r3, [sp, #4]
 8023e22:	9200      	str	r2, [sp, #0]
 8023e24:	e9cd c405 	strd	ip, r4, [sp, #20]
 8023e28:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8023e2c:	4639      	mov	r1, r7
 8023e2e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8023e30:	f7ff fc04 	bl	802363c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8023e34:	e73e      	b.n	8023cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023e36:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8023e38:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023e3c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8023e3e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023e42:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023e44:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023e48:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8023e4a:	141f      	asrs	r7, r3, #16
 8023e4c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8023e4e:	141b      	asrs	r3, r3, #16
 8023e50:	fb01 3707 	mla	r7, r1, r7, r3
 8023e54:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8023e56:	fa1f fc82 	uxth.w	ip, r2
 8023e5a:	eb03 0a07 	add.w	sl, r3, r7
 8023e5e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023e62:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023e66:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023e6a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8023e6e:	b29b      	uxth	r3, r3
 8023e70:	2d00      	cmp	r5, #0
 8023e72:	f000 813d 	beq.w	80240f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023e76:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023e7a:	940f      	str	r4, [sp, #60]	@ 0x3c
 8023e7c:	eb0a 0b01 	add.w	fp, sl, r1
 8023e80:	fa1f fa85 	uxth.w	sl, r5
 8023e84:	fb0a fc0c 	mul.w	ip, sl, ip
 8023e88:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023e8c:	fa1f fa8a 	uxth.w	sl, sl
 8023e90:	eba0 000c 	sub.w	r0, r0, ip
 8023e94:	eba3 030a 	sub.w	r3, r3, sl
 8023e98:	b280      	uxth	r0, r0
 8023e9a:	fb08 f000 	mul.w	r0, r8, r0
 8023e9e:	b29b      	uxth	r3, r3
 8023ea0:	fb09 0303 	mla	r3, r9, r3, r0
 8023ea4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8023ea6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023eaa:	9410      	str	r4, [sp, #64]	@ 0x40
 8023eac:	fb0a 3300 	mla	r3, sl, r0, r3
 8023eb0:	fb0c 3304 	mla	r3, ip, r4, r3
 8023eb4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023eb8:	2b00      	cmp	r3, #0
 8023eba:	f000 810b 	beq.w	80240d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023ebe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8023ec0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023ec2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8023ec6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023eca:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023ece:	f000 8114 	beq.w	80240fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8023ed2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8023ed6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023eda:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8023ede:	fb09 f707 	mul.w	r7, r9, r7
 8023ee2:	fb0a fc0c 	mul.w	ip, sl, ip
 8023ee6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023eea:	f107 0b20 	add.w	fp, r7, #32
 8023eee:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8023ef2:	44cc      	add	ip, r9
 8023ef4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023ef8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023efc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023f00:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8023f04:	ea4c 0909 	orr.w	r9, ip, r9
 8023f08:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8023f0c:	8847      	ldrh	r7, [r0, #2]
 8023f0e:	d019      	beq.n	8023f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8023f10:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8023f14:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023f18:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8023f1c:	fb08 f807 	mul.w	r8, r8, r7
 8023f20:	fb0a fc0c 	mul.w	ip, sl, ip
 8023f24:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023f28:	f108 0b20 	add.w	fp, r8, #32
 8023f2c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8023f30:	44bc      	add	ip, r7
 8023f32:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023f36:	0a3f      	lsrs	r7, r7, #8
 8023f38:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023f3c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8023f40:	ea4c 0707 	orr.w	r7, ip, r7
 8023f44:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023f48:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023f4c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8023f50:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8023f54:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023f58:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8023f5c:	ea4c 0909 	orr.w	r9, ip, r9
 8023f60:	ea4a 0707 	orr.w	r7, sl, r7
 8023f64:	2d00      	cmp	r5, #0
 8023f66:	f000 80ca 	beq.w	80240fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8023f6a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8023f6e:	3901      	subs	r1, #1
 8023f70:	0049      	lsls	r1, r1, #1
 8023f72:	3102      	adds	r1, #2
 8023f74:	eb00 0c01 	add.w	ip, r0, r1
 8023f78:	5a41      	ldrh	r1, [r0, r1]
 8023f7a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8023f7c:	28ff      	cmp	r0, #255	@ 0xff
 8023f7e:	d019      	beq.n	8023fb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8023f80:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8023f82:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8023f86:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8023f8a:	fb04 fa01 	mul.w	sl, r4, r1
 8023f8e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023f92:	fb08 f800 	mul.w	r8, r8, r0
 8023f96:	f10a 0020 	add.w	r0, sl, #32
 8023f9a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023f9e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023fa2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8023fa6:	4441      	add	r1, r8
 8023fa8:	0a00      	lsrs	r0, r0, #8
 8023faa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023fae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023fb2:	4301      	orrs	r1, r0
 8023fb4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023fb6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8023fba:	2cff      	cmp	r4, #255	@ 0xff
 8023fbc:	d01a      	beq.n	8023ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8023fbe:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8023fc2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023fc6:	fb04 fa00 	mul.w	sl, r4, r0
 8023fca:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023fce:	fb08 f80c 	mul.w	r8, r8, ip
 8023fd2:	f10a 0c20 	add.w	ip, sl, #32
 8023fd6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8023fda:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023fde:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8023fe2:	4440      	add	r0, r8
 8023fe4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023fe8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023fec:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8023ff0:	ea40 000c 	orr.w	r0, r0, ip
 8023ff4:	fb15 fc02 	smulbb	ip, r5, r2
 8023ff8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023ffc:	f1c5 0810 	rsb	r8, r5, #16
 8024000:	eba8 0802 	sub.w	r8, r8, r2
 8024004:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024008:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802400c:	437a      	muls	r2, r7
 802400e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024012:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024016:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802401a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802401e:	fb09 2208 	mla	r2, r9, r8, r2
 8024022:	ea4a 0101 	orr.w	r1, sl, r1
 8024026:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802402a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802402e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8024032:	fb05 2201 	mla	r2, r5, r1, r2
 8024036:	ea4b 0000 	orr.w	r0, fp, r0
 802403a:	fb0c 2200 	mla	r2, ip, r0, r2
 802403e:	0d57      	lsrs	r7, r2, #21
 8024040:	0952      	lsrs	r2, r2, #5
 8024042:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8024046:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802404a:	433a      	orrs	r2, r7
 802404c:	2bff      	cmp	r3, #255	@ 0xff
 802404e:	b292      	uxth	r2, r2
 8024050:	d102      	bne.n	8024058 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024052:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8024054:	29ff      	cmp	r1, #255	@ 0xff
 8024056:	d063      	beq.n	8024120 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8024058:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802405a:	f8be 1000 	ldrh.w	r1, [lr]
 802405e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8024060:	4343      	muls	r3, r0
 8024062:	1c58      	adds	r0, r3, #1
 8024064:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8024068:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802406c:	1208      	asrs	r0, r1, #8
 802406e:	b2db      	uxtb	r3, r3
 8024070:	1215      	asrs	r5, r2, #8
 8024072:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024076:	fb10 f003 	smulbb	r0, r0, r3
 802407a:	10cf      	asrs	r7, r1, #3
 802407c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8024080:	00c9      	lsls	r1, r1, #3
 8024082:	fb05 0504 	mla	r5, r5, r4, r0
 8024086:	b2c9      	uxtb	r1, r1
 8024088:	10d0      	asrs	r0, r2, #3
 802408a:	00d2      	lsls	r2, r2, #3
 802408c:	fb11 f103 	smulbb	r1, r1, r3
 8024090:	b2d2      	uxtb	r2, r2
 8024092:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8024096:	fb02 1204 	mla	r2, r2, r4, r1
 802409a:	fb17 f703 	smulbb	r7, r7, r3
 802409e:	b2ad      	uxth	r5, r5
 80240a0:	b292      	uxth	r2, r2
 80240a2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80240a6:	fb00 7004 	mla	r0, r0, r4, r7
 80240aa:	1c6b      	adds	r3, r5, #1
 80240ac:	1c57      	adds	r7, r2, #1
 80240ae:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80240b2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80240b6:	b280      	uxth	r0, r0
 80240b8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80240bc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80240c0:	433d      	orrs	r5, r7
 80240c2:	1c47      	adds	r7, r0, #1
 80240c4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80240c8:	097f      	lsrs	r7, r7, #5
 80240ca:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80240ce:	433d      	orrs	r5, r7
 80240d0:	f8ae 5000 	strh.w	r5, [lr]
 80240d4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80240d6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80240d8:	4413      	add	r3, r2
 80240da:	9321      	str	r3, [sp, #132]	@ 0x84
 80240dc:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80240de:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80240e0:	441a      	add	r2, r3
 80240e2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80240e4:	9222      	str	r2, [sp, #136]	@ 0x88
 80240e6:	3b01      	subs	r3, #1
 80240e8:	f10e 0e02 	add.w	lr, lr, #2
 80240ec:	9313      	str	r3, [sp, #76]	@ 0x4c
 80240ee:	e61c      	b.n	8023d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80240f0:	fb08 f000 	mul.w	r0, r8, r0
 80240f4:	fb09 0303 	mla	r3, r9, r3, r0
 80240f8:	e6dc      	b.n	8023eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80240fa:	46b9      	mov	r9, r7
 80240fc:	e704      	b.n	8023f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80240fe:	f1c2 0110 	rsb	r1, r2, #16
 8024102:	437a      	muls	r2, r7
 8024104:	fb09 2901 	mla	r9, r9, r1, r2
 8024108:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802410c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024110:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024114:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024118:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802411c:	4302      	orrs	r2, r0
 802411e:	e795      	b.n	802404c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8024120:	f8ae 2000 	strh.w	r2, [lr]
 8024124:	e7d6      	b.n	80240d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8024126:	b017      	add	sp, #92	@ 0x5c
 8024128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802412c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 802412c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024130:	b085      	sub	sp, #20
 8024132:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8024136:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 802413a:	9103      	str	r1, [sp, #12]
 802413c:	fb00 7406 	mla	r4, r0, r6, r7
 8024140:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8024144:	2800      	cmp	r0, #0
 8024146:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 802414a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 802414e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8024152:	9501      	str	r5, [sp, #4]
 8024154:	eb02 0904 	add.w	r9, r2, r4
 8024158:	f2c0 8141 	blt.w	80243de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802415c:	4583      	cmp	fp, r0
 802415e:	f340 813e 	ble.w	80243de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8024162:	2f00      	cmp	r7, #0
 8024164:	f2c0 8137 	blt.w	80243d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8024168:	42be      	cmp	r6, r7
 802416a:	f340 8134 	ble.w	80243d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802416e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8024172:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8024176:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802417a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802417e:	4355      	muls	r5, r2
 8024180:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024184:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8024188:	fb0c f203 	mul.w	r2, ip, r3
 802418c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8024190:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8024194:	441d      	add	r5, r3
 8024196:	f102 0320 	add.w	r3, r2, #32
 802419a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802419e:	0a1b      	lsrs	r3, r3, #8
 80241a0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80241a4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80241a8:	431c      	orrs	r4, r3
 80241aa:	1c7b      	adds	r3, r7, #1
 80241ac:	f100 811c 	bmi.w	80243e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80241b0:	429e      	cmp	r6, r3
 80241b2:	f340 8119 	ble.w	80243e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80241b6:	2900      	cmp	r1, #0
 80241b8:	f000 8119 	beq.w	80243ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80241bc:	9a01      	ldr	r2, [sp, #4]
 80241be:	f899 3001 	ldrb.w	r3, [r9, #1]
 80241c2:	8855      	ldrh	r5, [r2, #2]
 80241c4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80241c8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 80241cc:	fb08 f802 	mul.w	r8, r8, r2
 80241d0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80241d4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 80241d8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80241dc:	435d      	muls	r5, r3
 80241de:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80241e2:	44d0      	add	r8, sl
 80241e4:	f105 0a20 	add.w	sl, r5, #32
 80241e8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80241ec:	0a2d      	lsrs	r5, r5, #8
 80241ee:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80241f2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80241f6:	432a      	orrs	r2, r5
 80241f8:	3001      	adds	r0, #1
 80241fa:	f100 80fe 	bmi.w	80243fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80241fe:	4583      	cmp	fp, r0
 8024200:	f340 80fb 	ble.w	80243fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8024204:	f1be 0f00 	cmp.w	lr, #0
 8024208:	f000 80fc 	beq.w	8024404 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 802420c:	2f00      	cmp	r7, #0
 802420e:	f2c0 80f1 	blt.w	80243f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8024212:	42be      	cmp	r6, r7
 8024214:	f340 80ee 	ble.w	80243f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8024218:	9801      	ldr	r0, [sp, #4]
 802421a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802421e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8024222:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8024226:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 802422a:	fb0a fa00 	mul.w	sl, sl, r0
 802422e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8024232:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8024236:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802423a:	fb05 f808 	mul.w	r8, r5, r8
 802423e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8024242:	4482      	add	sl, r0
 8024244:	f108 0020 	add.w	r0, r8, #32
 8024248:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802424c:	0a00      	lsrs	r0, r0, #8
 802424e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8024252:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024256:	ea4b 0b00 	orr.w	fp, fp, r0
 802425a:	3701      	adds	r7, #1
 802425c:	f100 80d7 	bmi.w	802440e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8024260:	42be      	cmp	r6, r7
 8024262:	f340 80d4 	ble.w	802440e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8024266:	2900      	cmp	r1, #0
 8024268:	f000 80d4 	beq.w	8024414 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 802426c:	3601      	adds	r6, #1
 802426e:	9801      	ldr	r0, [sp, #4]
 8024270:	f819 7006 	ldrb.w	r7, [r9, r6]
 8024274:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8024278:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802427c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8024280:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024284:	fb09 f906 	mul.w	r9, r9, r6
 8024288:	fb07 f800 	mul.w	r8, r7, r0
 802428c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8024290:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8024294:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8024298:	44d1      	add	r9, sl
 802429a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802429e:	f108 0020 	add.w	r0, r8, #32
 80242a2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80242a6:	0a00      	lsrs	r0, r0, #8
 80242a8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80242ac:	4330      	orrs	r0, r6
 80242ae:	b28e      	uxth	r6, r1
 80242b0:	fa1f f98e 	uxth.w	r9, lr
 80242b4:	fb06 f809 	mul.w	r8, r6, r9
 80242b8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80242bc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80242c0:	0136      	lsls	r6, r6, #4
 80242c2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80242c6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80242ca:	9601      	str	r6, [sp, #4]
 80242cc:	ea4a 0404 	orr.w	r4, sl, r4
 80242d0:	fa1f f689 	uxth.w	r6, r9
 80242d4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80242d8:	fb11 f90e 	smulbb	r9, r1, lr
 80242dc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80242e0:	9602      	str	r6, [sp, #8]
 80242e2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80242e6:	4626      	mov	r6, r4
 80242e8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80242ec:	f1ce 0410 	rsb	r4, lr, #16
 80242f0:	1a64      	subs	r4, r4, r1
 80242f2:	ea4a 0202 	orr.w	r2, sl, r2
 80242f6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80242fa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80242fe:	434a      	muls	r2, r1
 8024300:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8024304:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024308:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802430c:	fb04 2406 	mla	r4, r4, r6, r2
 8024310:	ea4a 0000 	orr.w	r0, sl, r0
 8024314:	fb09 4200 	mla	r2, r9, r0, r4
 8024318:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802431c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8024320:	9801      	ldr	r0, [sp, #4]
 8024322:	9903      	ldr	r1, [sp, #12]
 8024324:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8024328:	ea44 0b0b 	orr.w	fp, r4, fp
 802432c:	9c02      	ldr	r4, [sp, #8]
 802432e:	8809      	ldrh	r1, [r1, #0]
 8024330:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8024334:	1b00      	subs	r0, r0, r4
 8024336:	9c01      	ldr	r4, [sp, #4]
 8024338:	eba4 0608 	sub.w	r6, r4, r8
 802433c:	b2b6      	uxth	r6, r6
 802433e:	b280      	uxth	r0, r0
 8024340:	4373      	muls	r3, r6
 8024342:	fb0c 3300 	mla	r3, ip, r0, r3
 8024346:	9802      	ldr	r0, [sp, #8]
 8024348:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802434c:	fb00 3505 	mla	r5, r0, r5, r3
 8024350:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8024354:	fb08 5707 	mla	r7, r8, r7, r5
 8024358:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802435c:	120b      	asrs	r3, r1, #8
 802435e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024362:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8024366:	b2ff      	uxtb	r7, r7
 8024368:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802436c:	10c8      	asrs	r0, r1, #3
 802436e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8024372:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8024376:	00c9      	lsls	r1, r1, #3
 8024378:	437b      	muls	r3, r7
 802437a:	ea42 0e0e 	orr.w	lr, r2, lr
 802437e:	b2c9      	uxtb	r1, r1
 8024380:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024384:	fa1f f28e 	uxth.w	r2, lr
 8024388:	4378      	muls	r0, r7
 802438a:	434f      	muls	r7, r1
 802438c:	1c59      	adds	r1, r3, #1
 802438e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024392:	1213      	asrs	r3, r2, #8
 8024394:	f023 0307 	bic.w	r3, r3, #7
 8024398:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802439c:	1c41      	adds	r1, r0, #1
 802439e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80243a2:	10d1      	asrs	r1, r2, #3
 80243a4:	f021 0103 	bic.w	r1, r1, #3
 80243a8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80243ac:	021b      	lsls	r3, r3, #8
 80243ae:	00c9      	lsls	r1, r1, #3
 80243b0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80243b4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80243b8:	430b      	orrs	r3, r1
 80243ba:	1c79      	adds	r1, r7, #1
 80243bc:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80243c0:	00d2      	lsls	r2, r2, #3
 80243c2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80243c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80243ca:	431a      	orrs	r2, r3
 80243cc:	9b03      	ldr	r3, [sp, #12]
 80243ce:	801a      	strh	r2, [r3, #0]
 80243d0:	b005      	add	sp, #20
 80243d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80243d6:	f04f 0c00 	mov.w	ip, #0
 80243da:	4664      	mov	r4, ip
 80243dc:	e6e5      	b.n	80241aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80243de:	2300      	movs	r3, #0
 80243e0:	469c      	mov	ip, r3
 80243e2:	461a      	mov	r2, r3
 80243e4:	461c      	mov	r4, r3
 80243e6:	e707      	b.n	80241f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80243e8:	2300      	movs	r3, #0
 80243ea:	461a      	mov	r2, r3
 80243ec:	e704      	b.n	80241f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80243ee:	460b      	mov	r3, r1
 80243f0:	460a      	mov	r2, r1
 80243f2:	e701      	b.n	80241f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80243f4:	2500      	movs	r5, #0
 80243f6:	46ab      	mov	fp, r5
 80243f8:	e72f      	b.n	802425a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80243fa:	2700      	movs	r7, #0
 80243fc:	463d      	mov	r5, r7
 80243fe:	4638      	mov	r0, r7
 8024400:	46bb      	mov	fp, r7
 8024402:	e754      	b.n	80242ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024404:	4677      	mov	r7, lr
 8024406:	4675      	mov	r5, lr
 8024408:	4670      	mov	r0, lr
 802440a:	46f3      	mov	fp, lr
 802440c:	e74f      	b.n	80242ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802440e:	2700      	movs	r7, #0
 8024410:	4638      	mov	r0, r7
 8024412:	e74c      	b.n	80242ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024414:	460f      	mov	r7, r1
 8024416:	4608      	mov	r0, r1
 8024418:	e749      	b.n	80242ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0802441c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802441c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024420:	b093      	sub	sp, #76	@ 0x4c
 8024422:	9210      	str	r2, [sp, #64]	@ 0x40
 8024424:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8024426:	910e      	str	r1, [sp, #56]	@ 0x38
 8024428:	9306      	str	r3, [sp, #24]
 802442a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802442e:	9011      	str	r0, [sp, #68]	@ 0x44
 8024430:	6850      	ldr	r0, [r2, #4]
 8024432:	6812      	ldr	r2, [r2, #0]
 8024434:	fb00 1303 	mla	r3, r0, r3, r1
 8024438:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802443c:	9307      	str	r3, [sp, #28]
 802443e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024440:	681b      	ldr	r3, [r3, #0]
 8024442:	9308      	str	r3, [sp, #32]
 8024444:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024446:	685b      	ldr	r3, [r3, #4]
 8024448:	9309      	str	r3, [sp, #36]	@ 0x24
 802444a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802444c:	2b00      	cmp	r3, #0
 802444e:	dc03      	bgt.n	8024458 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024450:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8024452:	2b00      	cmp	r3, #0
 8024454:	f340 83b4 	ble.w	8024bc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024458:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802445a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802445e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024462:	1e48      	subs	r0, r1, #1
 8024464:	1e55      	subs	r5, r2, #1
 8024466:	9b06      	ldr	r3, [sp, #24]
 8024468:	2b00      	cmp	r3, #0
 802446a:	f340 8163 	ble.w	8024734 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802446e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8024470:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8024472:	1436      	asrs	r6, r6, #16
 8024474:	ea4f 4323 	mov.w	r3, r3, asr #16
 8024478:	d406      	bmi.n	8024488 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802447a:	4286      	cmp	r6, r0
 802447c:	da04      	bge.n	8024488 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802447e:	2b00      	cmp	r3, #0
 8024480:	db02      	blt.n	8024488 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024482:	42ab      	cmp	r3, r5
 8024484:	f2c0 8157 	blt.w	8024736 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8024488:	3601      	adds	r6, #1
 802448a:	f100 8144 	bmi.w	8024716 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802448e:	42b1      	cmp	r1, r6
 8024490:	f2c0 8141 	blt.w	8024716 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024494:	3301      	adds	r3, #1
 8024496:	f100 813e 	bmi.w	8024716 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802449a:	429a      	cmp	r2, r3
 802449c:	f2c0 813b 	blt.w	8024716 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80244a0:	9b06      	ldr	r3, [sp, #24]
 80244a2:	9f07      	ldr	r7, [sp, #28]
 80244a4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80244a6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80244aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80244ac:	2b00      	cmp	r3, #0
 80244ae:	f340 8164 	ble.w	802477a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80244b2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80244b4:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80244b6:	1418      	asrs	r0, r3, #16
 80244b8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80244ba:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80244be:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80244c0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80244c4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80244c6:	142d      	asrs	r5, r5, #16
 80244c8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80244cc:	f100 81ee 	bmi.w	80248ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80244d0:	f102 3eff 	add.w	lr, r2, #4294967295
 80244d4:	4575      	cmp	r5, lr
 80244d6:	f280 81e9 	bge.w	80248ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80244da:	2800      	cmp	r0, #0
 80244dc:	f2c0 81e6 	blt.w	80248ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80244e0:	f103 3eff 	add.w	lr, r3, #4294967295
 80244e4:	4570      	cmp	r0, lr
 80244e6:	f280 81e1 	bge.w	80248ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80244ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80244ec:	b212      	sxth	r2, r2
 80244ee:	fb00 5002 	mla	r0, r0, r2, r5
 80244f2:	fa1f fe81 	uxth.w	lr, r1
 80244f6:	eb03 0a00 	add.w	sl, r3, r0
 80244fa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80244fe:	f813 9000 	ldrb.w	r9, [r3, r0]
 8024502:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024506:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 802450a:	b29b      	uxth	r3, r3
 802450c:	f1bc 0f00 	cmp.w	ip, #0
 8024510:	f000 8179 	beq.w	8024806 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8024514:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8024518:	940a      	str	r4, [sp, #40]	@ 0x28
 802451a:	eb0a 0b02 	add.w	fp, sl, r2
 802451e:	fa1f fa8c 	uxth.w	sl, ip
 8024522:	fb0a fe0e 	mul.w	lr, sl, lr
 8024526:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802452a:	fa1f fa8a 	uxth.w	sl, sl
 802452e:	eba5 050e 	sub.w	r5, r5, lr
 8024532:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8024536:	940b      	str	r4, [sp, #44]	@ 0x2c
 8024538:	eba3 030a 	sub.w	r3, r3, sl
 802453c:	b2ad      	uxth	r5, r5
 802453e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8024540:	b29b      	uxth	r3, r3
 8024542:	fb08 f505 	mul.w	r5, r8, r5
 8024546:	fb09 5303 	mla	r3, r9, r3, r5
 802454a:	fb0a 3304 	mla	r3, sl, r4, r3
 802454e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8024550:	fb0e 3304 	mla	r3, lr, r4, r3
 8024554:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024558:	2b00      	cmp	r3, #0
 802455a:	f000 80cf 	beq.w	80246fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802455e:	9c08      	ldr	r4, [sp, #32]
 8024560:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8024564:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8024568:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802456c:	f000 8150 	beq.w	8024810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024570:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8024574:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024578:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802457c:	fb09 f000 	mul.w	r0, r9, r0
 8024580:	fb0a fe0e 	mul.w	lr, sl, lr
 8024584:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8024588:	f100 0b20 	add.w	fp, r0, #32
 802458c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8024590:	44ce      	add	lr, r9
 8024592:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8024596:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802459a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802459e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80245a2:	ea4e 0909 	orr.w	r9, lr, r9
 80245a6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80245aa:	8868      	ldrh	r0, [r5, #2]
 80245ac:	d019      	beq.n	80245e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80245ae:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80245b2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80245b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80245ba:	fb08 f800 	mul.w	r8, r8, r0
 80245be:	fb0a fe0e 	mul.w	lr, sl, lr
 80245c2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80245c6:	f108 0b20 	add.w	fp, r8, #32
 80245ca:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80245ce:	4486      	add	lr, r0
 80245d0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80245d4:	0a00      	lsrs	r0, r0, #8
 80245d6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80245da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80245de:	ea4e 0000 	orr.w	r0, lr, r0
 80245e2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80245e6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80245ea:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80245ee:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80245f2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80245f6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80245fa:	ea4e 0909 	orr.w	r9, lr, r9
 80245fe:	ea4a 0000 	orr.w	r0, sl, r0
 8024602:	f1bc 0f00 	cmp.w	ip, #0
 8024606:	f000 8105 	beq.w	8024814 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802460a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 802460e:	3a01      	subs	r2, #1
 8024610:	0052      	lsls	r2, r2, #1
 8024612:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8024614:	3202      	adds	r2, #2
 8024616:	2cff      	cmp	r4, #255	@ 0xff
 8024618:	eb05 0e02 	add.w	lr, r5, r2
 802461c:	5aaa      	ldrh	r2, [r5, r2]
 802461e:	d018      	beq.n	8024652 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8024620:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8024624:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024628:	fb04 fa02 	mul.w	sl, r4, r2
 802462c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024630:	fb08 f805 	mul.w	r8, r8, r5
 8024634:	f10a 0520 	add.w	r5, sl, #32
 8024638:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802463c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8024640:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024644:	4442      	add	r2, r8
 8024646:	0a2d      	lsrs	r5, r5, #8
 8024648:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802464c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8024650:	432a      	orrs	r2, r5
 8024652:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8024654:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8024658:	2cff      	cmp	r4, #255	@ 0xff
 802465a:	d01a      	beq.n	8024692 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802465c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8024660:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8024664:	fb04 fa05 	mul.w	sl, r4, r5
 8024668:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802466c:	fb08 f80e 	mul.w	r8, r8, lr
 8024670:	f10a 0e20 	add.w	lr, sl, #32
 8024674:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8024678:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802467c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024680:	4445      	add	r5, r8
 8024682:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024686:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802468a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802468e:	ea45 050e 	orr.w	r5, r5, lr
 8024692:	fb1c fe01 	smulbb	lr, ip, r1
 8024696:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802469a:	f1cc 0810 	rsb	r8, ip, #16
 802469e:	eba8 0801 	sub.w	r8, r8, r1
 80246a2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80246a6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80246aa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80246ae:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80246b2:	4341      	muls	r1, r0
 80246b4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80246b8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80246bc:	ea4a 0202 	orr.w	r2, sl, r2
 80246c0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80246c4:	fb09 1108 	mla	r1, r9, r8, r1
 80246c8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80246cc:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80246d0:	fb0c 1102 	mla	r1, ip, r2, r1
 80246d4:	ea4b 0505 	orr.w	r5, fp, r5
 80246d8:	fb0e 1e05 	mla	lr, lr, r5, r1
 80246dc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80246e0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80246e4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80246e8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80246ec:	ea42 0e0e 	orr.w	lr, r2, lr
 80246f0:	fa1f f28e 	uxth.w	r2, lr
 80246f4:	2bff      	cmp	r3, #255	@ 0xff
 80246f6:	f040 80a1 	bne.w	802483c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80246fa:	803a      	strh	r2, [r7, #0]
 80246fc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80246fe:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8024700:	4413      	add	r3, r2
 8024702:	931d      	str	r3, [sp, #116]	@ 0x74
 8024704:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8024706:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024708:	441a      	add	r2, r3
 802470a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802470c:	921e      	str	r2, [sp, #120]	@ 0x78
 802470e:	3b01      	subs	r3, #1
 8024710:	3702      	adds	r7, #2
 8024712:	930f      	str	r3, [sp, #60]	@ 0x3c
 8024714:	e6c9      	b.n	80244aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024716:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8024718:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 802471a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 802471c:	4433      	add	r3, r6
 802471e:	931d      	str	r3, [sp, #116]	@ 0x74
 8024720:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024722:	441c      	add	r4, r3
 8024724:	9b06      	ldr	r3, [sp, #24]
 8024726:	941e      	str	r4, [sp, #120]	@ 0x78
 8024728:	3b01      	subs	r3, #1
 802472a:	9306      	str	r3, [sp, #24]
 802472c:	9b07      	ldr	r3, [sp, #28]
 802472e:	3302      	adds	r3, #2
 8024730:	9307      	str	r3, [sp, #28]
 8024732:	e698      	b.n	8024466 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8024734:	d028      	beq.n	8024788 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024736:	9b06      	ldr	r3, [sp, #24]
 8024738:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802473a:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 802473c:	3b01      	subs	r3, #1
 802473e:	fb00 5003 	mla	r0, r0, r3, r5
 8024742:	1400      	asrs	r0, r0, #16
 8024744:	f53f aeac 	bmi.w	80244a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024748:	3901      	subs	r1, #1
 802474a:	4288      	cmp	r0, r1
 802474c:	f6bf aea8 	bge.w	80244a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024750:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8024752:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8024754:	fb01 0303 	mla	r3, r1, r3, r0
 8024758:	141b      	asrs	r3, r3, #16
 802475a:	f53f aea1 	bmi.w	80244a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802475e:	3a01      	subs	r2, #1
 8024760:	4293      	cmp	r3, r2
 8024762:	f6bf ae9d 	bge.w	80244a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024766:	9b06      	ldr	r3, [sp, #24]
 8024768:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802476c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802476e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8024772:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8024774:	2b00      	cmp	r3, #0
 8024776:	f300 80b6 	bgt.w	80248e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802477a:	9b06      	ldr	r3, [sp, #24]
 802477c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024780:	9b07      	ldr	r3, [sp, #28]
 8024782:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024786:	9307      	str	r3, [sp, #28]
 8024788:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802478a:	2b00      	cmp	r3, #0
 802478c:	f340 8218 	ble.w	8024bc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024790:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024794:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024798:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802479c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802479e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80247a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80247a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80247aa:	eef0 6a62 	vmov.f32	s13, s5
 80247ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80247b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80247ba:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 80247be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80247c2:	eef0 6a43 	vmov.f32	s13, s6
 80247c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80247ca:	ee12 2a90 	vmov	r2, s5
 80247ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80247d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80247d6:	ee13 2a10 	vmov	r2, s6
 80247da:	931f      	str	r3, [sp, #124]	@ 0x7c
 80247dc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80247de:	fb92 f3f3 	sdiv	r3, r2, r3
 80247e2:	9320      	str	r3, [sp, #128]	@ 0x80
 80247e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80247e6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80247e8:	3b01      	subs	r3, #1
 80247ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247ee:	930e      	str	r3, [sp, #56]	@ 0x38
 80247f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80247f2:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 80247f6:	bf08      	it	eq
 80247f8:	4613      	moveq	r3, r2
 80247fa:	9306      	str	r3, [sp, #24]
 80247fc:	eeb0 3a67 	vmov.f32	s6, s15
 8024800:	eef0 2a47 	vmov.f32	s5, s14
 8024804:	e621      	b.n	802444a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8024806:	fb08 f505 	mul.w	r5, r8, r5
 802480a:	fb09 5303 	mla	r3, r9, r3, r5
 802480e:	e6a1      	b.n	8024554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8024810:	4681      	mov	r9, r0
 8024812:	e6c8      	b.n	80245a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8024814:	f1c1 0210 	rsb	r2, r1, #16
 8024818:	4341      	muls	r1, r0
 802481a:	fb09 1902 	mla	r9, r9, r2, r1
 802481e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024822:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8024826:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802482a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802482e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8024832:	ea42 0909 	orr.w	r9, r2, r9
 8024836:	fa1f f289 	uxth.w	r2, r9
 802483a:	e75b      	b.n	80246f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802483c:	f8b7 c000 	ldrh.w	ip, [r7]
 8024840:	43db      	mvns	r3, r3
 8024842:	ea4f 202c 	mov.w	r0, ip, asr #8
 8024846:	fa5f fe83 	uxtb.w	lr, r3
 802484a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802484e:	fb00 f00e 	mul.w	r0, r0, lr
 8024852:	1c41      	adds	r1, r0, #1
 8024854:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024858:	1211      	asrs	r1, r2, #8
 802485a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802485e:	f021 0107 	bic.w	r1, r1, #7
 8024862:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024866:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802486a:	48d7      	ldr	r0, [pc, #860]	@ (8024bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802486c:	fb05 f50e 	mul.w	r5, r5, lr
 8024870:	b2c9      	uxtb	r1, r1
 8024872:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8024876:	1c69      	adds	r1, r5, #1
 8024878:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802487c:	10d1      	asrs	r1, r2, #3
 802487e:	f021 0103 	bic.w	r1, r1, #3
 8024882:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8024886:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802488a:	b2db      	uxtb	r3, r3
 802488c:	00c9      	lsls	r1, r1, #3
 802488e:	fb03 f30e 	mul.w	r3, r3, lr
 8024892:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024896:	4301      	orrs	r1, r0
 8024898:	1c58      	adds	r0, r3, #1
 802489a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802489e:	00d2      	lsls	r2, r2, #3
 80248a0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80248a4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80248a8:	430a      	orrs	r2, r1
 80248aa:	e726      	b.n	80246fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80248ac:	f115 0e01 	adds.w	lr, r5, #1
 80248b0:	f53f af24 	bmi.w	80246fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80248b4:	4572      	cmp	r2, lr
 80248b6:	f6ff af21 	blt.w	80246fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80248ba:	f110 0e01 	adds.w	lr, r0, #1
 80248be:	f53f af1d 	bmi.w	80246fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80248c2:	4573      	cmp	r3, lr
 80248c4:	f6ff af1a 	blt.w	80246fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80248c8:	b21b      	sxth	r3, r3
 80248ca:	b212      	sxth	r2, r2
 80248cc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80248d0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80248d4:	9301      	str	r3, [sp, #4]
 80248d6:	9200      	str	r2, [sp, #0]
 80248d8:	4639      	mov	r1, r7
 80248da:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80248de:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80248e0:	f7ff fc24 	bl	802412c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80248e4:	e70a      	b.n	80246fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80248e6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80248e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80248ec:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80248ee:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80248f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80248f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80248f8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80248fa:	141f      	asrs	r7, r3, #16
 80248fc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80248fe:	141b      	asrs	r3, r3, #16
 8024900:	fb01 3707 	mla	r7, r1, r7, r3
 8024904:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024906:	fa1f fc82 	uxth.w	ip, r2
 802490a:	eb03 0a07 	add.w	sl, r3, r7
 802490e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8024912:	f813 9007 	ldrb.w	r9, [r3, r7]
 8024916:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802491a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802491e:	b29b      	uxth	r3, r3
 8024920:	2d00      	cmp	r5, #0
 8024922:	f000 80fe 	beq.w	8024b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8024926:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802492a:	940c      	str	r4, [sp, #48]	@ 0x30
 802492c:	eb0a 0b01 	add.w	fp, sl, r1
 8024930:	fa1f fa85 	uxth.w	sl, r5
 8024934:	fb0a fc0c 	mul.w	ip, sl, ip
 8024938:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802493c:	fa1f fa8a 	uxth.w	sl, sl
 8024940:	eba0 000c 	sub.w	r0, r0, ip
 8024944:	eba3 030a 	sub.w	r3, r3, sl
 8024948:	b280      	uxth	r0, r0
 802494a:	fb08 f000 	mul.w	r0, r8, r0
 802494e:	b29b      	uxth	r3, r3
 8024950:	fb09 0303 	mla	r3, r9, r3, r0
 8024954:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8024956:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802495a:	940d      	str	r4, [sp, #52]	@ 0x34
 802495c:	fb0a 3300 	mla	r3, sl, r0, r3
 8024960:	fb0c 3304 	mla	r3, ip, r4, r3
 8024964:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024968:	2b00      	cmp	r3, #0
 802496a:	f000 80cc 	beq.w	8024b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802496e:	9808      	ldr	r0, [sp, #32]
 8024970:	9c08      	ldr	r4, [sp, #32]
 8024972:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8024976:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802497a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802497e:	f000 80d5 	beq.w	8024b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024982:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8024986:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802498a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802498e:	fb09 f707 	mul.w	r7, r9, r7
 8024992:	fb0a fc0c 	mul.w	ip, sl, ip
 8024996:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802499a:	f107 0b20 	add.w	fp, r7, #32
 802499e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80249a2:	44cc      	add	ip, r9
 80249a4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80249a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80249ac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80249b0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80249b4:	ea4c 0909 	orr.w	r9, ip, r9
 80249b8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80249bc:	8847      	ldrh	r7, [r0, #2]
 80249be:	d019      	beq.n	80249f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80249c0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80249c4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80249c8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80249cc:	fb08 f807 	mul.w	r8, r8, r7
 80249d0:	fb0a fc0c 	mul.w	ip, sl, ip
 80249d4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80249d8:	f108 0b20 	add.w	fp, r8, #32
 80249dc:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80249e0:	44bc      	add	ip, r7
 80249e2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80249e6:	0a3f      	lsrs	r7, r7, #8
 80249e8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80249ec:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80249f0:	ea4c 0707 	orr.w	r7, ip, r7
 80249f4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80249f8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80249fc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8024a00:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8024a04:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024a08:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8024a0c:	ea4c 0909 	orr.w	r9, ip, r9
 8024a10:	ea4a 0707 	orr.w	r7, sl, r7
 8024a14:	2d00      	cmp	r5, #0
 8024a16:	f000 808b 	beq.w	8024b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8024a1a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8024a1e:	3901      	subs	r1, #1
 8024a20:	0049      	lsls	r1, r1, #1
 8024a22:	3102      	adds	r1, #2
 8024a24:	eb00 0c01 	add.w	ip, r0, r1
 8024a28:	5a41      	ldrh	r1, [r0, r1]
 8024a2a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8024a2c:	28ff      	cmp	r0, #255	@ 0xff
 8024a2e:	d019      	beq.n	8024a64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8024a30:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8024a32:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8024a36:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024a3a:	fb04 fa01 	mul.w	sl, r4, r1
 8024a3e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024a42:	fb08 f800 	mul.w	r8, r8, r0
 8024a46:	f10a 0020 	add.w	r0, sl, #32
 8024a4a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8024a4e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8024a52:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024a56:	4441      	add	r1, r8
 8024a58:	0a00      	lsrs	r0, r0, #8
 8024a5a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8024a5e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024a62:	4301      	orrs	r1, r0
 8024a64:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8024a66:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8024a6a:	2cff      	cmp	r4, #255	@ 0xff
 8024a6c:	d01a      	beq.n	8024aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8024a6e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8024a72:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024a76:	fb04 fa00 	mul.w	sl, r4, r0
 8024a7a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024a7e:	fb08 f80c 	mul.w	r8, r8, ip
 8024a82:	f10a 0c20 	add.w	ip, sl, #32
 8024a86:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8024a8a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8024a8e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024a92:	4440      	add	r0, r8
 8024a94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a98:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8024a9c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8024aa0:	ea40 000c 	orr.w	r0, r0, ip
 8024aa4:	fb15 fc02 	smulbb	ip, r5, r2
 8024aa8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8024aac:	f1c5 0810 	rsb	r8, r5, #16
 8024ab0:	eba8 0802 	sub.w	r8, r8, r2
 8024ab4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024ab8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8024abc:	437a      	muls	r2, r7
 8024abe:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024ac2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024ac6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024aca:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8024ace:	fb09 2208 	mla	r2, r9, r8, r2
 8024ad2:	ea4a 0101 	orr.w	r1, sl, r1
 8024ad6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8024ada:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8024ade:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8024ae2:	fb05 2201 	mla	r2, r5, r1, r2
 8024ae6:	ea4b 0000 	orr.w	r0, fp, r0
 8024aea:	fb0c 2200 	mla	r2, ip, r0, r2
 8024aee:	0d57      	lsrs	r7, r2, #21
 8024af0:	0952      	lsrs	r2, r2, #5
 8024af2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8024af6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8024afa:	433a      	orrs	r2, r7
 8024afc:	2bff      	cmp	r3, #255	@ 0xff
 8024afe:	b292      	uxth	r2, r2
 8024b00:	d127      	bne.n	8024b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8024b02:	f8ae 2000 	strh.w	r2, [lr]
 8024b06:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8024b08:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8024b0a:	4413      	add	r3, r2
 8024b0c:	931d      	str	r3, [sp, #116]	@ 0x74
 8024b0e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8024b10:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024b12:	441a      	add	r2, r3
 8024b14:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8024b16:	921e      	str	r2, [sp, #120]	@ 0x78
 8024b18:	3b01      	subs	r3, #1
 8024b1a:	f10e 0e02 	add.w	lr, lr, #2
 8024b1e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8024b20:	e627      	b.n	8024772 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024b22:	fb08 f000 	mul.w	r0, r8, r0
 8024b26:	fb09 0303 	mla	r3, r9, r3, r0
 8024b2a:	e71b      	b.n	8024964 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8024b2c:	46b9      	mov	r9, r7
 8024b2e:	e743      	b.n	80249b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8024b30:	f1c2 0110 	rsb	r1, r2, #16
 8024b34:	437a      	muls	r2, r7
 8024b36:	fb09 2901 	mla	r9, r9, r1, r2
 8024b3a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024b3e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024b42:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024b46:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024b4a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8024b4e:	4302      	orrs	r2, r0
 8024b50:	e7d4      	b.n	8024afc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8024b52:	f8be 7000 	ldrh.w	r7, [lr]
 8024b56:	4c1c      	ldr	r4, [pc, #112]	@ (8024bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8024b58:	43db      	mvns	r3, r3
 8024b5a:	1238      	asrs	r0, r7, #8
 8024b5c:	fa5f fc83 	uxtb.w	ip, r3
 8024b60:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024b64:	10fd      	asrs	r5, r7, #3
 8024b66:	fb00 f00c 	mul.w	r0, r0, ip
 8024b6a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8024b6e:	fb05 f10c 	mul.w	r1, r5, ip
 8024b72:	1c45      	adds	r5, r0, #1
 8024b74:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024b78:	1215      	asrs	r5, r2, #8
 8024b7a:	f025 0507 	bic.w	r5, r5, #7
 8024b7e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024b82:	1c4d      	adds	r5, r1, #1
 8024b84:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024b88:	10d1      	asrs	r1, r2, #3
 8024b8a:	f021 0103 	bic.w	r1, r1, #3
 8024b8e:	00fb      	lsls	r3, r7, #3
 8024b90:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8024b94:	b2db      	uxtb	r3, r3
 8024b96:	b2c0      	uxtb	r0, r0
 8024b98:	00c9      	lsls	r1, r1, #3
 8024b9a:	fb03 f30c 	mul.w	r3, r3, ip
 8024b9e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024ba2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8024ba6:	4308      	orrs	r0, r1
 8024ba8:	1c59      	adds	r1, r3, #1
 8024baa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024bae:	00d2      	lsls	r2, r2, #3
 8024bb0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024bb4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8024bb8:	4318      	orrs	r0, r3
 8024bba:	f8ae 0000 	strh.w	r0, [lr]
 8024bbe:	e7a2      	b.n	8024b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8024bc0:	b013      	add	sp, #76	@ 0x4c
 8024bc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024bc6:	bf00      	nop
 8024bc8:	fffff800 	.word	0xfffff800

08024bcc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8024bcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024bd0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8024bd4:	fb05 4c03 	mla	ip, r5, r3, r4
 8024bd8:	2d00      	cmp	r5, #0
 8024bda:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8024bde:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8024be2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8024be6:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8024bea:	8808      	ldrh	r0, [r1, #0]
 8024bec:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8024bf0:	f2c0 80a7 	blt.w	8024d42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8024bf4:	45aa      	cmp	sl, r5
 8024bf6:	f340 80a4 	ble.w	8024d42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8024bfa:	2c00      	cmp	r4, #0
 8024bfc:	f2c0 809f 	blt.w	8024d3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8024c00:	42a3      	cmp	r3, r4
 8024c02:	f340 809c 	ble.w	8024d3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8024c06:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8024c0a:	1c62      	adds	r2, r4, #1
 8024c0c:	f100 809c 	bmi.w	8024d48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024c10:	4293      	cmp	r3, r2
 8024c12:	f340 8099 	ble.w	8024d48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024c16:	f1b9 0f00 	cmp.w	r9, #0
 8024c1a:	f000 8095 	beq.w	8024d48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024c1e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8024c22:	3501      	adds	r5, #1
 8024c24:	f100 8094 	bmi.w	8024d50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024c28:	45aa      	cmp	sl, r5
 8024c2a:	f340 8091 	ble.w	8024d50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024c2e:	2f00      	cmp	r7, #0
 8024c30:	f000 808e 	beq.w	8024d50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024c34:	2c00      	cmp	r4, #0
 8024c36:	f2c0 8089 	blt.w	8024d4c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024c3a:	42a3      	cmp	r3, r4
 8024c3c:	f340 8086 	ble.w	8024d4c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024c40:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8024c44:	3401      	adds	r4, #1
 8024c46:	f100 8086 	bmi.w	8024d56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024c4a:	42a3      	cmp	r3, r4
 8024c4c:	f340 8083 	ble.w	8024d56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024c50:	f1b9 0f00 	cmp.w	r9, #0
 8024c54:	d07f      	beq.n	8024d56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024c56:	3301      	adds	r3, #1
 8024c58:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8024c5c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8024c60:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8024c64:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8024c68:	fb19 fe07 	smulbb	lr, r9, r7
 8024c6c:	ea44 0808 	orr.w	r8, r4, r8
 8024c70:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8024c74:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8024c78:	f1c7 0210 	rsb	r2, r7, #16
 8024c7c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8024c80:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8024c84:	ea44 0c0c 	orr.w	ip, r4, ip
 8024c88:	eba2 0209 	sub.w	r2, r2, r9
 8024c8c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8024c90:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8024c94:	fb04 f40c 	mul.w	r4, r4, ip
 8024c98:	fb02 4808 	mla	r8, r2, r8, r4
 8024c9c:	041a      	lsls	r2, r3, #16
 8024c9e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8024ca2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8024ca6:	4313      	orrs	r3, r2
 8024ca8:	042a      	lsls	r2, r5, #16
 8024caa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8024cae:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8024cb2:	fb0e 8303 	mla	r3, lr, r3, r8
 8024cb6:	432a      	orrs	r2, r5
 8024cb8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8024cbc:	fb07 3202 	mla	r2, r7, r2, r3
 8024cc0:	0d53      	lsrs	r3, r2, #21
 8024cc2:	0952      	lsrs	r2, r2, #5
 8024cc4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024cc8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8024ccc:	431a      	orrs	r2, r3
 8024cce:	b293      	uxth	r3, r2
 8024cd0:	b2b4      	uxth	r4, r6
 8024cd2:	1202      	asrs	r2, r0, #8
 8024cd4:	43f6      	mvns	r6, r6
 8024cd6:	b2f6      	uxtb	r6, r6
 8024cd8:	121d      	asrs	r5, r3, #8
 8024cda:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8024cde:	fb12 f206 	smulbb	r2, r2, r6
 8024ce2:	10c7      	asrs	r7, r0, #3
 8024ce4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8024ce8:	00c0      	lsls	r0, r0, #3
 8024cea:	fb05 2504 	mla	r5, r5, r4, r2
 8024cee:	b2c0      	uxtb	r0, r0
 8024cf0:	10da      	asrs	r2, r3, #3
 8024cf2:	00db      	lsls	r3, r3, #3
 8024cf4:	b2db      	uxtb	r3, r3
 8024cf6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8024cfa:	fb10 f006 	smulbb	r0, r0, r6
 8024cfe:	b2ad      	uxth	r5, r5
 8024d00:	fb03 0004 	mla	r0, r3, r4, r0
 8024d04:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8024d08:	fb17 f706 	smulbb	r7, r7, r6
 8024d0c:	b280      	uxth	r0, r0
 8024d0e:	1c6b      	adds	r3, r5, #1
 8024d10:	fb02 7204 	mla	r2, r2, r4, r7
 8024d14:	b292      	uxth	r2, r2
 8024d16:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024d1a:	1c43      	adds	r3, r0, #1
 8024d1c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024d20:	1c50      	adds	r0, r2, #1
 8024d22:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8024d26:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8024d2a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024d2e:	0952      	lsrs	r2, r2, #5
 8024d30:	432b      	orrs	r3, r5
 8024d32:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024d36:	4313      	orrs	r3, r2
 8024d38:	800b      	strh	r3, [r1, #0]
 8024d3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024d3e:	4680      	mov	r8, r0
 8024d40:	e763      	b.n	8024c0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8024d42:	4684      	mov	ip, r0
 8024d44:	4680      	mov	r8, r0
 8024d46:	e76c      	b.n	8024c22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024d48:	4684      	mov	ip, r0
 8024d4a:	e76a      	b.n	8024c22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024d4c:	4605      	mov	r5, r0
 8024d4e:	e779      	b.n	8024c44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8024d50:	4603      	mov	r3, r0
 8024d52:	4605      	mov	r5, r0
 8024d54:	e782      	b.n	8024c5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8024d56:	4603      	mov	r3, r0
 8024d58:	e780      	b.n	8024c5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08024d5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024d5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d5e:	b093      	sub	sp, #76	@ 0x4c
 8024d60:	461d      	mov	r5, r3
 8024d62:	9210      	str	r2, [sp, #64]	@ 0x40
 8024d64:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024d66:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8024d6a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8024d6c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8024d70:	910a      	str	r1, [sp, #40]	@ 0x28
 8024d72:	6859      	ldr	r1, [r3, #4]
 8024d74:	681b      	ldr	r3, [r3, #0]
 8024d76:	9011      	str	r0, [sp, #68]	@ 0x44
 8024d78:	fb01 2707 	mla	r7, r1, r7, r2
 8024d7c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024d80:	9307      	str	r3, [sp, #28]
 8024d82:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024d84:	681b      	ldr	r3, [r3, #0]
 8024d86:	9309      	str	r3, [sp, #36]	@ 0x24
 8024d88:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024d8a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8024d8e:	43db      	mvns	r3, r3
 8024d90:	b2db      	uxtb	r3, r3
 8024d92:	9308      	str	r3, [sp, #32]
 8024d94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024d96:	2b00      	cmp	r3, #0
 8024d98:	dc03      	bgt.n	8024da2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024d9a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8024d9c:	2b00      	cmp	r3, #0
 8024d9e:	f340 8203 	ble.w	80251a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024da2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024da4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024da8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024dac:	1e48      	subs	r0, r1, #1
 8024dae:	f102 3cff 	add.w	ip, r2, #4294967295
 8024db2:	2d00      	cmp	r5, #0
 8024db4:	f340 80da 	ble.w	8024f6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024db8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024dbc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024dc0:	d406      	bmi.n	8024dd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024dc2:	4586      	cmp	lr, r0
 8024dc4:	da04      	bge.n	8024dd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024dc6:	2b00      	cmp	r3, #0
 8024dc8:	db02      	blt.n	8024dd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024dca:	4563      	cmp	r3, ip
 8024dcc:	f2c0 80cf 	blt.w	8024f6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8024dd0:	f11e 0e01 	adds.w	lr, lr, #1
 8024dd4:	f100 80c1 	bmi.w	8024f5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024dd8:	4571      	cmp	r1, lr
 8024dda:	f2c0 80be 	blt.w	8024f5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024dde:	3301      	adds	r3, #1
 8024de0:	f100 80bb 	bmi.w	8024f5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024de4:	429a      	cmp	r2, r3
 8024de6:	f2c0 80b8 	blt.w	8024f5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024dea:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8024dee:	46a9      	mov	r9, r5
 8024df0:	f1b9 0f00 	cmp.w	r9, #0
 8024df4:	f340 80d8 	ble.w	8024fa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8024df8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024dfa:	1421      	asrs	r1, r4, #16
 8024dfc:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024e00:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024e04:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024e08:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024e0c:	f100 8111 	bmi.w	8025032 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024e10:	f10e 3aff 	add.w	sl, lr, #4294967295
 8024e14:	4551      	cmp	r1, sl
 8024e16:	f280 810c 	bge.w	8025032 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024e1a:	2800      	cmp	r0, #0
 8024e1c:	f2c0 8109 	blt.w	8025032 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024e20:	f103 3aff 	add.w	sl, r3, #4294967295
 8024e24:	4550      	cmp	r0, sl
 8024e26:	f280 8104 	bge.w	8025032 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024e2a:	fa0f f38e 	sxth.w	r3, lr
 8024e2e:	fb00 1103 	mla	r1, r0, r3, r1
 8024e32:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8024e34:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8024e38:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8024e3c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024e40:	f1bc 0f00 	cmp.w	ip, #0
 8024e44:	d007      	beq.n	8024e56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8024e46:	005b      	lsls	r3, r3, #1
 8024e48:	eb0a 0003 	add.w	r0, sl, r3
 8024e4c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024e50:	930c      	str	r3, [sp, #48]	@ 0x30
 8024e52:	8843      	ldrh	r3, [r0, #2]
 8024e54:	930d      	str	r3, [sp, #52]	@ 0x34
 8024e56:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8024e5a:	fb12 f30c 	smulbb	r3, r2, ip
 8024e5e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8024e62:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024e66:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8024e6a:	10db      	asrs	r3, r3, #3
 8024e6c:	ea40 000e 	orr.w	r0, r0, lr
 8024e70:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024e74:	f1cc 0e10 	rsb	lr, ip, #16
 8024e78:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8024e7c:	ebae 0e02 	sub.w	lr, lr, r2
 8024e80:	ea4a 0101 	orr.w	r1, sl, r1
 8024e84:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024e88:	4351      	muls	r1, r2
 8024e8a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8024e8c:	9f08      	ldr	r7, [sp, #32]
 8024e8e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024e92:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024e96:	0410      	lsls	r0, r2, #16
 8024e98:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8024e9c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8024ea0:	4310      	orrs	r0, r2
 8024ea2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8024ea4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8024ea6:	0412      	lsls	r2, r2, #16
 8024ea8:	fb03 e000 	mla	r0, r3, r0, lr
 8024eac:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8024eb0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8024eb4:	ea42 020e 	orr.w	r2, r2, lr
 8024eb8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024ebc:	fb03 0302 	mla	r3, r3, r2, r0
 8024ec0:	0d5a      	lsrs	r2, r3, #21
 8024ec2:	095b      	lsrs	r3, r3, #5
 8024ec4:	f8b8 0000 	ldrh.w	r0, [r8]
 8024ec8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024ecc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8024ed0:	4313      	orrs	r3, r2
 8024ed2:	b29b      	uxth	r3, r3
 8024ed4:	1201      	asrs	r1, r0, #8
 8024ed6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8024eda:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8024ede:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8024ee2:	fb11 f107 	smulbb	r1, r1, r7
 8024ee6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8024eea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8024eee:	00c0      	lsls	r0, r0, #3
 8024ef0:	fb0c 1c02 	mla	ip, ip, r2, r1
 8024ef4:	b2c0      	uxtb	r0, r0
 8024ef6:	10d9      	asrs	r1, r3, #3
 8024ef8:	00db      	lsls	r3, r3, #3
 8024efa:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8024efe:	b2db      	uxtb	r3, r3
 8024f00:	fb10 f007 	smulbb	r0, r0, r7
 8024f04:	fa1f fc8c 	uxth.w	ip, ip
 8024f08:	fb03 0302 	mla	r3, r3, r2, r0
 8024f0c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8024f10:	fb1e fe07 	smulbb	lr, lr, r7
 8024f14:	fb01 e102 	mla	r1, r1, r2, lr
 8024f18:	b29a      	uxth	r2, r3
 8024f1a:	f10c 0301 	add.w	r3, ip, #1
 8024f1e:	b289      	uxth	r1, r1
 8024f20:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8024f24:	1c53      	adds	r3, r2, #1
 8024f26:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024f2a:	1c4a      	adds	r2, r1, #1
 8024f2c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024f30:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8024f34:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024f38:	0949      	lsrs	r1, r1, #5
 8024f3a:	ea43 030c 	orr.w	r3, r3, ip
 8024f3e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024f42:	430b      	orrs	r3, r1
 8024f44:	f8a8 3000 	strh.w	r3, [r8]
 8024f48:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024f4a:	441c      	add	r4, r3
 8024f4c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024f4e:	f108 0802 	add.w	r8, r8, #2
 8024f52:	441e      	add	r6, r3
 8024f54:	f109 39ff 	add.w	r9, r9, #4294967295
 8024f58:	e74a      	b.n	8024df0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8024f5a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024f5c:	441c      	add	r4, r3
 8024f5e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024f60:	441e      	add	r6, r3
 8024f62:	9b07      	ldr	r3, [sp, #28]
 8024f64:	3302      	adds	r3, #2
 8024f66:	3d01      	subs	r5, #1
 8024f68:	9307      	str	r3, [sp, #28]
 8024f6a:	e722      	b.n	8024db2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024f6c:	d022      	beq.n	8024fb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8024f6e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8024f70:	1e6b      	subs	r3, r5, #1
 8024f72:	fb00 4003 	mla	r0, r0, r3, r4
 8024f76:	1400      	asrs	r0, r0, #16
 8024f78:	f53f af37 	bmi.w	8024dea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024f7c:	3901      	subs	r1, #1
 8024f7e:	4288      	cmp	r0, r1
 8024f80:	f6bf af33 	bge.w	8024dea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024f84:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8024f86:	fb01 6303 	mla	r3, r1, r3, r6
 8024f8a:	141b      	asrs	r3, r3, #16
 8024f8c:	f53f af2d 	bmi.w	8024dea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024f90:	3a01      	subs	r2, #1
 8024f92:	4293      	cmp	r3, r2
 8024f94:	f6bf af29 	bge.w	8024dea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024f98:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8024f9c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8024fa0:	46a8      	mov	r8, r5
 8024fa2:	f1b8 0f00 	cmp.w	r8, #0
 8024fa6:	dc5e      	bgt.n	8025066 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024fa8:	9b07      	ldr	r3, [sp, #28]
 8024faa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024fae:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024fb2:	9307      	str	r3, [sp, #28]
 8024fb4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024fb6:	2b00      	cmp	r3, #0
 8024fb8:	f340 80f6 	ble.w	80251a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024fbc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024fc0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024fc4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024fc8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024fca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024fce:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024fd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024fd6:	eef0 6a62 	vmov.f32	s13, s5
 8024fda:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024fde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024fe2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024fe6:	ee16 4a90 	vmov	r4, s13
 8024fea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024fee:	eef0 6a43 	vmov.f32	s13, s6
 8024ff2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024ff6:	ee12 2a90 	vmov	r2, s5
 8024ffa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024ffe:	fb92 f3f3 	sdiv	r3, r2, r3
 8025002:	ee13 2a10 	vmov	r2, s6
 8025006:	931f      	str	r3, [sp, #124]	@ 0x7c
 8025008:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802500a:	fb92 f3f3 	sdiv	r3, r2, r3
 802500e:	9320      	str	r3, [sp, #128]	@ 0x80
 8025010:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025012:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8025014:	3b01      	subs	r3, #1
 8025016:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802501a:	930a      	str	r3, [sp, #40]	@ 0x28
 802501c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802501e:	ee16 6a90 	vmov	r6, s13
 8025022:	bf14      	ite	ne
 8025024:	461d      	movne	r5, r3
 8025026:	4615      	moveq	r5, r2
 8025028:	eeb0 3a67 	vmov.f32	s6, s15
 802502c:	eef0 2a47 	vmov.f32	s5, s14
 8025030:	e6b0      	b.n	8024d94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025032:	f111 0a01 	adds.w	sl, r1, #1
 8025036:	d487      	bmi.n	8024f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025038:	45d6      	cmp	lr, sl
 802503a:	db85      	blt.n	8024f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802503c:	f110 0a01 	adds.w	sl, r0, #1
 8025040:	d482      	bmi.n	8024f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025042:	4553      	cmp	r3, sl
 8025044:	db80      	blt.n	8024f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025046:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8025048:	9101      	str	r1, [sp, #4]
 802504a:	b21b      	sxth	r3, r3
 802504c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8025050:	9300      	str	r3, [sp, #0]
 8025052:	e9cd c704 	strd	ip, r7, [sp, #16]
 8025056:	fa0f f38e 	sxth.w	r3, lr
 802505a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802505c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802505e:	4641      	mov	r1, r8
 8025060:	f7ff fdb4 	bl	8024bcc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8025064:	e770      	b.n	8024f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025066:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025068:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802506a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802506e:	1430      	asrs	r0, r6, #16
 8025070:	1423      	asrs	r3, r4, #16
 8025072:	fb01 3000 	mla	r0, r1, r0, r3
 8025076:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025078:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 802507c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8025080:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8025084:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025088:	8858      	ldrh	r0, [r3, #2]
 802508a:	f1be 0f00 	cmp.w	lr, #0
 802508e:	d00b      	beq.n	80250a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8025090:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8025094:	3901      	subs	r1, #1
 8025096:	0049      	lsls	r1, r1, #1
 8025098:	3102      	adds	r1, #2
 802509a:	eb03 0b01 	add.w	fp, r3, r1
 802509e:	5a5b      	ldrh	r3, [r3, r1]
 80250a0:	930e      	str	r3, [sp, #56]	@ 0x38
 80250a2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80250a6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80250a8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80250ac:	fb12 f30e 	smulbb	r3, r2, lr
 80250b0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80250b4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80250b8:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 80250bc:	10db      	asrs	r3, r3, #3
 80250be:	ea41 010c 	orr.w	r1, r1, ip
 80250c2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80250c6:	f1ce 0c10 	rsb	ip, lr, #16
 80250ca:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80250ce:	ebac 0c02 	sub.w	ip, ip, r2
 80250d2:	ea4b 0000 	orr.w	r0, fp, r0
 80250d6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80250da:	4350      	muls	r0, r2
 80250dc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80250de:	9f08      	ldr	r7, [sp, #32]
 80250e0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80250e4:	fb0c 0c01 	mla	ip, ip, r1, r0
 80250e8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80250ec:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 80250f0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80250f2:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80250f4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80250f8:	0412      	lsls	r2, r2, #16
 80250fa:	ea4b 0101 	orr.w	r1, fp, r1
 80250fe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025102:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8025106:	fb03 c101 	mla	r1, r3, r1, ip
 802510a:	4302      	orrs	r2, r0
 802510c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8025110:	fb03 1202 	mla	r2, r3, r2, r1
 8025114:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8025118:	0952      	lsrs	r2, r2, #5
 802511a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 802511e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8025122:	f8b9 2000 	ldrh.w	r2, [r9]
 8025126:	ea4b 0303 	orr.w	r3, fp, r3
 802512a:	b29b      	uxth	r3, r3
 802512c:	1211      	asrs	r1, r2, #8
 802512e:	1218      	asrs	r0, r3, #8
 8025130:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025134:	fb11 f107 	smulbb	r1, r1, r7
 8025138:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 802513c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025140:	00d2      	lsls	r2, r2, #3
 8025142:	fb00 100a 	mla	r0, r0, sl, r1
 8025146:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 802514a:	10d9      	asrs	r1, r3, #3
 802514c:	b2d2      	uxtb	r2, r2
 802514e:	00db      	lsls	r3, r3, #3
 8025150:	fb1c fc07 	smulbb	ip, ip, r7
 8025154:	fb12 f207 	smulbb	r2, r2, r7
 8025158:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802515c:	b2db      	uxtb	r3, r3
 802515e:	b280      	uxth	r0, r0
 8025160:	fb01 c10a 	mla	r1, r1, sl, ip
 8025164:	fb03 230a 	mla	r3, r3, sl, r2
 8025168:	b29b      	uxth	r3, r3
 802516a:	b289      	uxth	r1, r1
 802516c:	1c42      	adds	r2, r0, #1
 802516e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025172:	f101 0c01 	add.w	ip, r1, #1
 8025176:	1c5a      	adds	r2, r3, #1
 8025178:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802517c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8025180:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025182:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8025186:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802518a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802518e:	4310      	orrs	r0, r2
 8025190:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8025194:	441c      	add	r4, r3
 8025196:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025198:	ea40 000c 	orr.w	r0, r0, ip
 802519c:	f829 0b02 	strh.w	r0, [r9], #2
 80251a0:	441e      	add	r6, r3
 80251a2:	f108 38ff 	add.w	r8, r8, #4294967295
 80251a6:	e6fc      	b.n	8024fa2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80251a8:	b013      	add	sp, #76	@ 0x4c
 80251aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080251ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80251ae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80251b2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80251b6:	fb0e 4703 	mla	r7, lr, r3, r4
 80251ba:	f1be 0f00 	cmp.w	lr, #0
 80251be:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80251c2:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 80251c6:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 80251ca:	8808      	ldrh	r0, [r1, #0]
 80251cc:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80251d0:	db60      	blt.n	8025294 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80251d2:	45f1      	cmp	r9, lr
 80251d4:	dd5e      	ble.n	8025294 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80251d6:	2c00      	cmp	r4, #0
 80251d8:	db5a      	blt.n	8025290 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80251da:	42a3      	cmp	r3, r4
 80251dc:	dd58      	ble.n	8025290 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80251de:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80251e2:	1c62      	adds	r2, r4, #1
 80251e4:	d459      	bmi.n	802529a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80251e6:	4293      	cmp	r3, r2
 80251e8:	dd57      	ble.n	802529a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80251ea:	2d00      	cmp	r5, #0
 80251ec:	d055      	beq.n	802529a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80251ee:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80251f2:	f11e 0e01 	adds.w	lr, lr, #1
 80251f6:	d454      	bmi.n	80252a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80251f8:	45f1      	cmp	r9, lr
 80251fa:	dd52      	ble.n	80252a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80251fc:	2e00      	cmp	r6, #0
 80251fe:	d050      	beq.n	80252a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025200:	2c00      	cmp	r4, #0
 8025202:	db4c      	blt.n	802529e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8025204:	42a3      	cmp	r3, r4
 8025206:	dd4a      	ble.n	802529e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8025208:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 802520c:	3401      	adds	r4, #1
 802520e:	d405      	bmi.n	802521c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025210:	42a3      	cmp	r3, r4
 8025212:	dd03      	ble.n	802521c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025214:	b115      	cbz	r5, 802521c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025216:	3301      	adds	r3, #1
 8025218:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 802521c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8025220:	fb15 f406 	smulbb	r4, r5, r6
 8025224:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025228:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802522c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025230:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8025234:	ea43 0c0c 	orr.w	ip, r3, ip
 8025238:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802523c:	f1c6 0310 	rsb	r3, r6, #16
 8025240:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8025244:	1b5b      	subs	r3, r3, r5
 8025246:	ea4e 0707 	orr.w	r7, lr, r7
 802524a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802524e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025252:	437d      	muls	r5, r7
 8025254:	fb03 5c0c 	mla	ip, r3, ip, r5
 8025258:	0403      	lsls	r3, r0, #16
 802525a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802525e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025262:	4318      	orrs	r0, r3
 8025264:	0413      	lsls	r3, r2, #16
 8025266:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802526a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802526e:	4313      	orrs	r3, r2
 8025270:	fb04 c000 	mla	r0, r4, r0, ip
 8025274:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8025278:	fb06 0003 	mla	r0, r6, r3, r0
 802527c:	0d43      	lsrs	r3, r0, #21
 802527e:	0940      	lsrs	r0, r0, #5
 8025280:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025284:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025288:	4318      	orrs	r0, r3
 802528a:	8008      	strh	r0, [r1, #0]
 802528c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8025290:	4684      	mov	ip, r0
 8025292:	e7a6      	b.n	80251e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8025294:	4607      	mov	r7, r0
 8025296:	4684      	mov	ip, r0
 8025298:	e7ab      	b.n	80251f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802529a:	4607      	mov	r7, r0
 802529c:	e7a9      	b.n	80251f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802529e:	4602      	mov	r2, r0
 80252a0:	e7b4      	b.n	802520c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80252a2:	4602      	mov	r2, r0
 80252a4:	e7ba      	b.n	802521c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080252a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80252a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252aa:	b08f      	sub	sp, #60	@ 0x3c
 80252ac:	461d      	mov	r5, r3
 80252ae:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80252b0:	920c      	str	r2, [sp, #48]	@ 0x30
 80252b2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 80252b6:	9107      	str	r1, [sp, #28]
 80252b8:	6859      	ldr	r1, [r3, #4]
 80252ba:	681b      	ldr	r3, [r3, #0]
 80252bc:	900d      	str	r0, [sp, #52]	@ 0x34
 80252be:	fb01 2707 	mla	r7, r1, r7, r2
 80252c2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80252c6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80252c8:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 80252cc:	f8d3 8000 	ldr.w	r8, [r3]
 80252d0:	9b07      	ldr	r3, [sp, #28]
 80252d2:	2b00      	cmp	r3, #0
 80252d4:	dc03      	bgt.n	80252de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80252d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80252d8:	2b00      	cmp	r3, #0
 80252da:	f340 8181 	ble.w	80255e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80252de:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80252e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80252e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80252e8:	1e48      	subs	r0, r1, #1
 80252ea:	f102 3cff 	add.w	ip, r2, #4294967295
 80252ee:	2d00      	cmp	r5, #0
 80252f0:	f340 809b 	ble.w	802542a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80252f4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80252f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80252fc:	d406      	bmi.n	802530c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80252fe:	4586      	cmp	lr, r0
 8025300:	da04      	bge.n	802530c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025302:	2b00      	cmp	r3, #0
 8025304:	db02      	blt.n	802530c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025306:	4563      	cmp	r3, ip
 8025308:	f2c0 8090 	blt.w	802542c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802530c:	f11e 0e01 	adds.w	lr, lr, #1
 8025310:	f100 8084 	bmi.w	802541c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025314:	4571      	cmp	r1, lr
 8025316:	f2c0 8081 	blt.w	802541c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802531a:	3301      	adds	r3, #1
 802531c:	d47e      	bmi.n	802541c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802531e:	429a      	cmp	r2, r3
 8025320:	db7c      	blt.n	802541c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025322:	46aa      	mov	sl, r5
 8025324:	46b9      	mov	r9, r7
 8025326:	f1ba 0f00 	cmp.w	sl, #0
 802532a:	f340 8099 	ble.w	8025460 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802532e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025330:	1421      	asrs	r1, r4, #16
 8025332:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025336:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802533a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802533e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8025342:	f100 80d0 	bmi.w	80254e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025346:	f10e 3bff 	add.w	fp, lr, #4294967295
 802534a:	4559      	cmp	r1, fp
 802534c:	f280 80cb 	bge.w	80254e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025350:	2800      	cmp	r0, #0
 8025352:	f2c0 80c8 	blt.w	80254e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025356:	f103 3bff 	add.w	fp, r3, #4294967295
 802535a:	4558      	cmp	r0, fp
 802535c:	f280 80c3 	bge.w	80254e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025360:	fa0f fe8e 	sxth.w	lr, lr
 8025364:	fb00 110e 	mla	r1, r0, lr, r1
 8025368:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802536c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8025370:	8841      	ldrh	r1, [r0, #2]
 8025372:	f1bc 0f00 	cmp.w	ip, #0
 8025376:	d00b      	beq.n	8025390 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8025378:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 802537c:	3b01      	subs	r3, #1
 802537e:	005b      	lsls	r3, r3, #1
 8025380:	3302      	adds	r3, #2
 8025382:	eb00 0e03 	add.w	lr, r0, r3
 8025386:	5ac3      	ldrh	r3, [r0, r3]
 8025388:	9308      	str	r3, [sp, #32]
 802538a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802538e:	9309      	str	r3, [sp, #36]	@ 0x24
 8025390:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8025394:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025398:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 802539c:	ea40 000b 	orr.w	r0, r0, fp
 80253a0:	fb12 f30c 	smulbb	r3, r2, ip
 80253a4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80253a8:	10db      	asrs	r3, r3, #3
 80253aa:	f1cc 0e10 	rsb	lr, ip, #16
 80253ae:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80253b2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80253b6:	ebae 0e02 	sub.w	lr, lr, r2
 80253ba:	ea4b 0101 	orr.w	r1, fp, r1
 80253be:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80253c2:	4351      	muls	r1, r2
 80253c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80253c6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80253ca:	fb0e 1e00 	mla	lr, lr, r0, r1
 80253ce:	0410      	lsls	r0, r2, #16
 80253d0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80253d4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80253d8:	4310      	orrs	r0, r2
 80253da:	9a08      	ldr	r2, [sp, #32]
 80253dc:	9908      	ldr	r1, [sp, #32]
 80253de:	0412      	lsls	r2, r2, #16
 80253e0:	fb03 e000 	mla	r0, r3, r0, lr
 80253e4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80253e8:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 80253ec:	ea42 020e 	orr.w	r2, r2, lr
 80253f0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80253f4:	fb03 0302 	mla	r3, r3, r2, r0
 80253f8:	0d5a      	lsrs	r2, r3, #21
 80253fa:	095b      	lsrs	r3, r3, #5
 80253fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025400:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025404:	4313      	orrs	r3, r2
 8025406:	f8a9 3000 	strh.w	r3, [r9]
 802540a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802540c:	441c      	add	r4, r3
 802540e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025410:	f109 0902 	add.w	r9, r9, #2
 8025414:	441e      	add	r6, r3
 8025416:	f10a 3aff 	add.w	sl, sl, #4294967295
 802541a:	e784      	b.n	8025326 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802541c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802541e:	441c      	add	r4, r3
 8025420:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025422:	3d01      	subs	r5, #1
 8025424:	441e      	add	r6, r3
 8025426:	3702      	adds	r7, #2
 8025428:	e761      	b.n	80252ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802542a:	d01d      	beq.n	8025468 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802542c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802542e:	1e6b      	subs	r3, r5, #1
 8025430:	fb00 4003 	mla	r0, r0, r3, r4
 8025434:	1400      	asrs	r0, r0, #16
 8025436:	f53f af74 	bmi.w	8025322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802543a:	3901      	subs	r1, #1
 802543c:	4288      	cmp	r0, r1
 802543e:	f6bf af70 	bge.w	8025322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025442:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8025444:	fb01 6303 	mla	r3, r1, r3, r6
 8025448:	141b      	asrs	r3, r3, #16
 802544a:	f53f af6a 	bmi.w	8025322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802544e:	3a01      	subs	r2, #1
 8025450:	4293      	cmp	r3, r2
 8025452:	f6bf af66 	bge.w	8025322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025456:	46a9      	mov	r9, r5
 8025458:	46ba      	mov	sl, r7
 802545a:	f1b9 0f00 	cmp.w	r9, #0
 802545e:	dc5a      	bgt.n	8025516 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8025460:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025464:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8025468:	9b07      	ldr	r3, [sp, #28]
 802546a:	2b00      	cmp	r3, #0
 802546c:	f340 80b8 	ble.w	80255e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8025470:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025474:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8025478:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802547c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802547e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025482:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025486:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802548a:	eef0 6a62 	vmov.f32	s13, s5
 802548e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025492:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025496:	ee77 2a62 	vsub.f32	s5, s14, s5
 802549a:	ee16 4a90 	vmov	r4, s13
 802549e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80254a2:	eef0 6a43 	vmov.f32	s13, s6
 80254a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80254aa:	ee12 2a90 	vmov	r2, s5
 80254ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80254b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80254b6:	ee13 2a10 	vmov	r2, s6
 80254ba:	931b      	str	r3, [sp, #108]	@ 0x6c
 80254bc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80254be:	fb92 f3f3 	sdiv	r3, r2, r3
 80254c2:	931c      	str	r3, [sp, #112]	@ 0x70
 80254c4:	9b07      	ldr	r3, [sp, #28]
 80254c6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80254c8:	3b01      	subs	r3, #1
 80254ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80254ce:	9307      	str	r3, [sp, #28]
 80254d0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80254d2:	ee16 6a90 	vmov	r6, s13
 80254d6:	bf14      	ite	ne
 80254d8:	461d      	movne	r5, r3
 80254da:	4615      	moveq	r5, r2
 80254dc:	eeb0 3a67 	vmov.f32	s6, s15
 80254e0:	eef0 2a47 	vmov.f32	s5, s14
 80254e4:	e6f4      	b.n	80252d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80254e6:	f111 0b01 	adds.w	fp, r1, #1
 80254ea:	d48e      	bmi.n	802540a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80254ec:	45de      	cmp	lr, fp
 80254ee:	db8c      	blt.n	802540a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80254f0:	f110 0b01 	adds.w	fp, r0, #1
 80254f4:	d489      	bmi.n	802540a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80254f6:	455b      	cmp	r3, fp
 80254f8:	db87      	blt.n	802540a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80254fa:	b21b      	sxth	r3, r3
 80254fc:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8025500:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8025504:	9300      	str	r3, [sp, #0]
 8025506:	4642      	mov	r2, r8
 8025508:	fa0f f38e 	sxth.w	r3, lr
 802550c:	4649      	mov	r1, r9
 802550e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8025510:	f7ff fe4d 	bl	80251ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8025514:	e779      	b.n	802540a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025516:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025518:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802551c:	1420      	asrs	r0, r4, #16
 802551e:	1431      	asrs	r1, r6, #16
 8025520:	fb03 0101 	mla	r1, r3, r1, r0
 8025524:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8025528:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802552c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8025530:	8841      	ldrh	r1, [r0, #2]
 8025532:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025536:	f1be 0f00 	cmp.w	lr, #0
 802553a:	d00b      	beq.n	8025554 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802553c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8025540:	3b01      	subs	r3, #1
 8025542:	005b      	lsls	r3, r3, #1
 8025544:	3302      	adds	r3, #2
 8025546:	eb00 0b03 	add.w	fp, r0, r3
 802554a:	5ac3      	ldrh	r3, [r0, r3]
 802554c:	930a      	str	r3, [sp, #40]	@ 0x28
 802554e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8025552:	930b      	str	r3, [sp, #44]	@ 0x2c
 8025554:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8025558:	fb12 f30e 	smulbb	r3, r2, lr
 802555c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025560:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025564:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025568:	10db      	asrs	r3, r3, #3
 802556a:	ea40 000c 	orr.w	r0, r0, ip
 802556e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8025572:	f1ce 0c10 	rsb	ip, lr, #16
 8025576:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802557a:	ebac 0c02 	sub.w	ip, ip, r2
 802557e:	ea4b 0101 	orr.w	r1, fp, r1
 8025582:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025586:	4351      	muls	r1, r2
 8025588:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802558a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802558e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8025592:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8025596:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 802559a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802559c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802559e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80255a2:	0412      	lsls	r2, r2, #16
 80255a4:	ea4b 0000 	orr.w	r0, fp, r0
 80255a8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80255ac:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 80255b0:	fb03 c000 	mla	r0, r3, r0, ip
 80255b4:	ea42 0b0b 	orr.w	fp, r2, fp
 80255b8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80255bc:	fb03 000b 	mla	r0, r3, fp, r0
 80255c0:	0d43      	lsrs	r3, r0, #21
 80255c2:	0940      	lsrs	r0, r0, #5
 80255c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80255c8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80255cc:	4318      	orrs	r0, r3
 80255ce:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80255d0:	f82a 0b02 	strh.w	r0, [sl], #2
 80255d4:	441c      	add	r4, r3
 80255d6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80255d8:	f109 39ff 	add.w	r9, r9, #4294967295
 80255dc:	441e      	add	r6, r3
 80255de:	e73c      	b.n	802545a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80255e0:	b00f      	add	sp, #60	@ 0x3c
 80255e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080255e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80255e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255ea:	b085      	sub	sp, #20
 80255ec:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 80255f0:	9102      	str	r1, [sp, #8]
 80255f2:	2c00      	cmp	r4, #0
 80255f4:	fb04 7103 	mla	r1, r4, r3, r7
 80255f8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 80255fc:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8025600:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8025604:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025608:	f2c0 811b 	blt.w	8025842 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802560c:	45a6      	cmp	lr, r4
 802560e:	f340 8118 	ble.w	8025842 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8025612:	2f00      	cmp	r7, #0
 8025614:	f2c0 8113 	blt.w	802583e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8025618:	42bb      	cmp	r3, r7
 802561a:	f340 8110 	ble.w	802583e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802561e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8025622:	1c7a      	adds	r2, r7, #1
 8025624:	f100 8110 	bmi.w	8025848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8025628:	4293      	cmp	r3, r2
 802562a:	f340 810d 	ble.w	8025848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802562e:	2e00      	cmp	r6, #0
 8025630:	f000 810c 	beq.w	802584c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8025634:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025638:	3401      	adds	r4, #1
 802563a:	f100 810b 	bmi.w	8025854 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802563e:	45a6      	cmp	lr, r4
 8025640:	f340 8108 	ble.w	8025854 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8025644:	2800      	cmp	r0, #0
 8025646:	f000 8108 	beq.w	802585a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802564a:	2f00      	cmp	r7, #0
 802564c:	f2c0 8100 	blt.w	8025850 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8025650:	42bb      	cmp	r3, r7
 8025652:	f340 80fd 	ble.w	8025850 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8025656:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802565a:	3701      	adds	r7, #1
 802565c:	f100 8100 	bmi.w	8025860 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8025660:	42bb      	cmp	r3, r7
 8025662:	f340 80fd 	ble.w	8025860 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8025666:	2e00      	cmp	r6, #0
 8025668:	f000 80fc 	beq.w	8025864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802566c:	3301      	adds	r3, #1
 802566e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8025672:	b2b6      	uxth	r6, r6
 8025674:	b280      	uxth	r0, r0
 8025676:	fb00 fe06 	mul.w	lr, r0, r6
 802567a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802567e:	0136      	lsls	r6, r6, #4
 8025680:	eba6 070e 	sub.w	r7, r6, lr
 8025684:	b280      	uxth	r0, r0
 8025686:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802568a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802568e:	b2bf      	uxth	r7, r7
 8025690:	1a1b      	subs	r3, r3, r0
 8025692:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025696:	b29b      	uxth	r3, r3
 8025698:	fb0a f607 	mul.w	r6, sl, r7
 802569c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80256a0:	fb0b 6603 	mla	r6, fp, r3, r6
 80256a4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80256a8:	fb00 6609 	mla	r6, r0, r9, r6
 80256ac:	fb0e 6608 	mla	r6, lr, r8, r6
 80256b0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80256b4:	9600      	str	r6, [sp, #0]
 80256b6:	2e00      	cmp	r6, #0
 80256b8:	f000 80be 	beq.w	8025838 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80256bc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80256c0:	fb0b fc0c 	mul.w	ip, fp, ip
 80256c4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80256c8:	fb0b f505 	mul.w	r5, fp, r5
 80256cc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80256d0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80256d4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80256d8:	44dc      	add	ip, fp
 80256da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80256de:	9501      	str	r5, [sp, #4]
 80256e0:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80256e4:	9503      	str	r5, [sp, #12]
 80256e6:	9d01      	ldr	r5, [sp, #4]
 80256e8:	9e02      	ldr	r6, [sp, #8]
 80256ea:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80256ee:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80256f2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80256f6:	fb0a fc0c 	mul.w	ip, sl, ip
 80256fa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80256fe:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8025702:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8025706:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802570a:	4465      	add	r5, ip
 802570c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8025710:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8025714:	fb09 fc0c 	mul.w	ip, r9, ip
 8025718:	fb09 f904 	mul.w	r9, r9, r4
 802571c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8025720:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8025724:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8025728:	fb08 f404 	mul.w	r4, r8, r4
 802572c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8025730:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8025734:	fb08 f802 	mul.w	r8, r8, r2
 8025738:	fb0a fa01 	mul.w	sl, sl, r1
 802573c:	0a22      	lsrs	r2, r4, #8
 802573e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8025742:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8025746:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802574a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802574e:	4414      	add	r4, r2
 8025750:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8025754:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8025758:	0a2d      	lsrs	r5, r5, #8
 802575a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802575e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8025762:	9a03      	ldr	r2, [sp, #12]
 8025764:	8836      	ldrh	r6, [r6, #0]
 8025766:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802576a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802576e:	437d      	muls	r5, r7
 8025770:	4461      	add	r1, ip
 8025772:	0a24      	lsrs	r4, r4, #8
 8025774:	fb02 5503 	mla	r5, r2, r3, r5
 8025778:	0a09      	lsrs	r1, r1, #8
 802577a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802577e:	fb04 540e 	mla	r4, r4, lr, r5
 8025782:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8025786:	fb01 4100 	mla	r1, r1, r0, r4
 802578a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802578e:	0a09      	lsrs	r1, r1, #8
 8025790:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025794:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8025798:	fb07 f70a 	mul.w	r7, r7, sl
 802579c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80257a0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 80257a4:	fb03 7101 	mla	r1, r3, r1, r7
 80257a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80257ac:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80257b0:	fb0e 1e08 	mla	lr, lr, r8, r1
 80257b4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80257b8:	fb00 e101 	mla	r1, r0, r1, lr
 80257bc:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 80257c0:	9a00      	ldr	r2, [sp, #0]
 80257c2:	b287      	uxth	r7, r0
 80257c4:	437a      	muls	r2, r7
 80257c6:	0a09      	lsrs	r1, r1, #8
 80257c8:	1c53      	adds	r3, r2, #1
 80257ca:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80257ce:	4321      	orrs	r1, r4
 80257d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80257d4:	1235      	asrs	r5, r6, #8
 80257d6:	0c0a      	lsrs	r2, r1, #16
 80257d8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80257dc:	b2db      	uxtb	r3, r3
 80257de:	fb12 f207 	smulbb	r2, r2, r7
 80257e2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80257e6:	fb05 2503 	mla	r5, r5, r3, r2
 80257ea:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80257ee:	10f2      	asrs	r2, r6, #3
 80257f0:	b2c8      	uxtb	r0, r1
 80257f2:	00f6      	lsls	r6, r6, #3
 80257f4:	fb14 f407 	smulbb	r4, r4, r7
 80257f8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80257fc:	b2f6      	uxtb	r6, r6
 80257fe:	fb10 f007 	smulbb	r0, r0, r7
 8025802:	fb02 4203 	mla	r2, r2, r3, r4
 8025806:	b2ad      	uxth	r5, r5
 8025808:	fb06 0303 	mla	r3, r6, r3, r0
 802580c:	b299      	uxth	r1, r3
 802580e:	b294      	uxth	r4, r2
 8025810:	1c6b      	adds	r3, r5, #1
 8025812:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025816:	1c62      	adds	r2, r4, #1
 8025818:	1c4b      	adds	r3, r1, #1
 802581a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802581e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8025822:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8025826:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802582a:	0952      	lsrs	r2, r2, #5
 802582c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025830:	432b      	orrs	r3, r5
 8025832:	4313      	orrs	r3, r2
 8025834:	9a02      	ldr	r2, [sp, #8]
 8025836:	8013      	strh	r3, [r2, #0]
 8025838:	b005      	add	sp, #20
 802583a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802583e:	2500      	movs	r5, #0
 8025840:	e6ef      	b.n	8025622 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8025842:	2100      	movs	r1, #0
 8025844:	460d      	mov	r5, r1
 8025846:	e6f7      	b.n	8025638 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8025848:	2100      	movs	r1, #0
 802584a:	e6f5      	b.n	8025638 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802584c:	4631      	mov	r1, r6
 802584e:	e6f3      	b.n	8025638 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8025850:	2400      	movs	r4, #0
 8025852:	e702      	b.n	802565a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8025854:	2200      	movs	r2, #0
 8025856:	4614      	mov	r4, r2
 8025858:	e70b      	b.n	8025672 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802585a:	4602      	mov	r2, r0
 802585c:	4604      	mov	r4, r0
 802585e:	e708      	b.n	8025672 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025860:	2200      	movs	r2, #0
 8025862:	e706      	b.n	8025672 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025864:	4632      	mov	r2, r6
 8025866:	e704      	b.n	8025672 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08025868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802586c:	b09d      	sub	sp, #116	@ 0x74
 802586e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8025872:	9219      	str	r2, [sp, #100]	@ 0x64
 8025874:	9307      	str	r3, [sp, #28]
 8025876:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8025878:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 802587c:	931a      	str	r3, [sp, #104]	@ 0x68
 802587e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8025880:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8025884:	901b      	str	r0, [sp, #108]	@ 0x6c
 8025886:	6850      	ldr	r0, [r2, #4]
 8025888:	6812      	ldr	r2, [r2, #0]
 802588a:	fb00 1303 	mla	r3, r0, r3, r1
 802588e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025892:	930a      	str	r3, [sp, #40]	@ 0x28
 8025894:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8025896:	681b      	ldr	r3, [r3, #0]
 8025898:	9310      	str	r3, [sp, #64]	@ 0x40
 802589a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 802589e:	930b      	str	r3, [sp, #44]	@ 0x2c
 80258a0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80258a2:	2b00      	cmp	r3, #0
 80258a4:	dc03      	bgt.n	80258ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80258a6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80258a8:	2b00      	cmp	r3, #0
 80258aa:	f340 8375 	ble.w	8025f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80258ae:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80258b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80258b4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80258b8:	1e48      	subs	r0, r1, #1
 80258ba:	1e57      	subs	r7, r2, #1
 80258bc:	9b07      	ldr	r3, [sp, #28]
 80258be:	2b00      	cmp	r3, #0
 80258c0:	f340 818e 	ble.w	8025be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80258c4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80258c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80258cc:	d406      	bmi.n	80258dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80258ce:	4584      	cmp	ip, r0
 80258d0:	da04      	bge.n	80258dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80258d2:	2b00      	cmp	r3, #0
 80258d4:	db02      	blt.n	80258dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80258d6:	42bb      	cmp	r3, r7
 80258d8:	f2c0 8183 	blt.w	8025be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80258dc:	f11c 0c01 	adds.w	ip, ip, #1
 80258e0:	f100 8173 	bmi.w	8025bca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80258e4:	4561      	cmp	r1, ip
 80258e6:	f2c0 8170 	blt.w	8025bca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80258ea:	3301      	adds	r3, #1
 80258ec:	f100 816d 	bmi.w	8025bca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80258f0:	429a      	cmp	r2, r3
 80258f2:	f2c0 816a 	blt.w	8025bca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80258f6:	9b07      	ldr	r3, [sp, #28]
 80258f8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80258fa:	9318      	str	r3, [sp, #96]	@ 0x60
 80258fc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80258fe:	2b00      	cmp	r3, #0
 8025900:	f340 818c 	ble.w	8025c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8025904:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8025906:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8025908:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802590c:	689b      	ldr	r3, [r3, #8]
 802590e:	1422      	asrs	r2, r4, #16
 8025910:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8025914:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025918:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802591c:	f100 81cd 	bmi.w	8025cba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8025920:	f103 38ff 	add.w	r8, r3, #4294967295
 8025924:	4542      	cmp	r2, r8
 8025926:	f280 81c8 	bge.w	8025cba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802592a:	f1bc 0f00 	cmp.w	ip, #0
 802592e:	f2c0 81c4 	blt.w	8025cba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8025932:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025936:	45c4      	cmp	ip, r8
 8025938:	f280 81bf 	bge.w	8025cba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802593c:	b21b      	sxth	r3, r3
 802593e:	fb0c 2203 	mla	r2, ip, r3, r2
 8025942:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8025944:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025948:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802594c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025950:	2800      	cmp	r0, #0
 8025952:	f000 81a9 	beq.w	8025ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8025956:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802595a:	950c      	str	r5, [sp, #48]	@ 0x30
 802595c:	0e2d      	lsrs	r5, r5, #24
 802595e:	9513      	str	r5, [sp, #76]	@ 0x4c
 8025960:	b181      	cbz	r1, 8025984 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025962:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8025966:	3b01      	subs	r3, #1
 8025968:	009b      	lsls	r3, r3, #2
 802596a:	3304      	adds	r3, #4
 802596c:	eb08 0c03 	add.w	ip, r8, r3
 8025970:	f858 3003 	ldr.w	r3, [r8, r3]
 8025974:	9308      	str	r3, [sp, #32]
 8025976:	0e1b      	lsrs	r3, r3, #24
 8025978:	9311      	str	r3, [sp, #68]	@ 0x44
 802597a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802597e:	930d      	str	r3, [sp, #52]	@ 0x34
 8025980:	0e1b      	lsrs	r3, r3, #24
 8025982:	9314      	str	r3, [sp, #80]	@ 0x50
 8025984:	b280      	uxth	r0, r0
 8025986:	b289      	uxth	r1, r1
 8025988:	fb00 f901 	mul.w	r9, r0, r1
 802598c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8025990:	0100      	lsls	r0, r0, #4
 8025992:	eba0 0809 	sub.w	r8, r0, r9
 8025996:	b289      	uxth	r1, r1
 8025998:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802599c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802599e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80259a0:	fa1f f888 	uxth.w	r8, r8
 80259a4:	1a5b      	subs	r3, r3, r1
 80259a6:	b29b      	uxth	r3, r3
 80259a8:	fb08 f000 	mul.w	r0, r8, r0
 80259ac:	fb03 000e 	mla	r0, r3, lr, r0
 80259b0:	fb01 0005 	mla	r0, r1, r5, r0
 80259b4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80259b6:	fb09 0005 	mla	r0, r9, r5, r0
 80259ba:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80259be:	2800      	cmp	r0, #0
 80259c0:	f000 80fa 	beq.w	8025bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80259c4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80259c8:	d01b      	beq.n	8025a02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80259ca:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 80259ce:	fb0e fa0a 	mul.w	sl, lr, sl
 80259d2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80259d6:	fb0e fe02 	mul.w	lr, lr, r2
 80259da:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80259de:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80259e2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80259e6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80259ea:	4452      	add	r2, sl
 80259ec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80259f0:	0a12      	lsrs	r2, r2, #8
 80259f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80259f6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80259fa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80259fe:	ea42 020c 	orr.w	r2, r2, ip
 8025a02:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8025a04:	2dff      	cmp	r5, #255	@ 0xff
 8025a06:	d021      	beq.n	8025a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8025a08:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8025a0a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8025a0e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8025a10:	fb05 fb0b 	mul.w	fp, r5, fp
 8025a14:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8025a16:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025a1a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8025a1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025a20:	fb05 fa0a 	mul.w	sl, r5, sl
 8025a24:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8025a28:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8025a2c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8025a30:	44de      	add	lr, fp
 8025a32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025a36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025a3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025a3e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8025a42:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025a46:	ea4e 050a 	orr.w	r5, lr, sl
 8025a4a:	950c      	str	r5, [sp, #48]	@ 0x30
 8025a4c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8025a4e:	2dff      	cmp	r5, #255	@ 0xff
 8025a50:	d021      	beq.n	8025a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8025a52:	9d08      	ldr	r5, [sp, #32]
 8025a54:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8025a58:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8025a5a:	fb05 fb0b 	mul.w	fp, r5, fp
 8025a5e:	9d08      	ldr	r5, [sp, #32]
 8025a60:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025a64:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8025a66:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025a6a:	fb05 fa0a 	mul.w	sl, r5, sl
 8025a6e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8025a72:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8025a76:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8025a7a:	44de      	add	lr, fp
 8025a7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025a80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025a84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025a88:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8025a8c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025a90:	ea4e 050a 	orr.w	r5, lr, sl
 8025a94:	9508      	str	r5, [sp, #32]
 8025a96:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8025a98:	2dff      	cmp	r5, #255	@ 0xff
 8025a9a:	d021      	beq.n	8025ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8025a9c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8025a9e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8025aa2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8025aa4:	fb05 fb0b 	mul.w	fp, r5, fp
 8025aa8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8025aaa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025aae:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8025ab0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025ab4:	fb05 fa0a 	mul.w	sl, r5, sl
 8025ab8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8025abc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8025ac0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8025ac4:	44de      	add	lr, fp
 8025ac6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025aca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025ace:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025ad2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8025ad6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025ada:	ea4e 050a 	orr.w	r5, lr, sl
 8025ade:	950d      	str	r5, [sp, #52]	@ 0x34
 8025ae0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8025ae2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8025ae6:	9d08      	ldr	r5, [sp, #32]
 8025ae8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8025aec:	fb08 fc0c 	mul.w	ip, r8, ip
 8025af0:	fb03 cc0e 	mla	ip, r3, lr, ip
 8025af4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8025af8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8025afa:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025afe:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8025b02:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8025b04:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025b08:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8025b0c:	fb08 f80e 	mul.w	r8, r8, lr
 8025b10:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8025b14:	fb03 8202 	mla	r2, r3, r2, r8
 8025b18:	9b08      	ldr	r3, [sp, #32]
 8025b1a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8025b1c:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8025b20:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025b22:	fb01 220a 	mla	r2, r1, sl, r2
 8025b26:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 8025b2a:	fb09 2901 	mla	r9, r9, r1, r2
 8025b2e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025b30:	883b      	ldrh	r3, [r7, #0]
 8025b32:	4342      	muls	r2, r0
 8025b34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b38:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025b3c:	1c50      	adds	r0, r2, #1
 8025b3e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025b42:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8025b46:	ea4c 0c09 	orr.w	ip, ip, r9
 8025b4a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8025b4e:	1219      	asrs	r1, r3, #8
 8025b50:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8025b54:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8025b58:	b2c0      	uxtb	r0, r0
 8025b5a:	fb12 f205 	smulbb	r2, r2, r5
 8025b5e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025b62:	fb01 2100 	mla	r1, r1, r0, r2
 8025b66:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8025b6a:	10da      	asrs	r2, r3, #3
 8025b6c:	fa5f fc8c 	uxtb.w	ip, ip
 8025b70:	00db      	lsls	r3, r3, #3
 8025b72:	fb1c fc05 	smulbb	ip, ip, r5
 8025b76:	b2db      	uxtb	r3, r3
 8025b78:	b289      	uxth	r1, r1
 8025b7a:	fb03 c300 	mla	r3, r3, r0, ip
 8025b7e:	fa1f fc83 	uxth.w	ip, r3
 8025b82:	1c4b      	adds	r3, r1, #1
 8025b84:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025b88:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025b8c:	fb1e fe05 	smulbb	lr, lr, r5
 8025b90:	f10c 0301 	add.w	r3, ip, #1
 8025b94:	fb02 e200 	mla	r2, r2, r0, lr
 8025b98:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8025b9c:	b292      	uxth	r2, r2
 8025b9e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025ba2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025ba6:	430b      	orrs	r3, r1
 8025ba8:	1c51      	adds	r1, r2, #1
 8025baa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025bae:	0952      	lsrs	r2, r2, #5
 8025bb0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025bb4:	4313      	orrs	r3, r2
 8025bb6:	803b      	strh	r3, [r7, #0]
 8025bb8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8025bba:	441c      	add	r4, r3
 8025bbc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025bbe:	441e      	add	r6, r3
 8025bc0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025bc2:	3b01      	subs	r3, #1
 8025bc4:	3702      	adds	r7, #2
 8025bc6:	9318      	str	r3, [sp, #96]	@ 0x60
 8025bc8:	e698      	b.n	80258fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025bca:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8025bcc:	441c      	add	r4, r3
 8025bce:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025bd0:	441e      	add	r6, r3
 8025bd2:	9b07      	ldr	r3, [sp, #28]
 8025bd4:	3b01      	subs	r3, #1
 8025bd6:	9307      	str	r3, [sp, #28]
 8025bd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025bda:	3302      	adds	r3, #2
 8025bdc:	930a      	str	r3, [sp, #40]	@ 0x28
 8025bde:	e66d      	b.n	80258bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8025be0:	d023      	beq.n	8025c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8025be2:	9b07      	ldr	r3, [sp, #28]
 8025be4:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8025be6:	3b01      	subs	r3, #1
 8025be8:	fb00 4003 	mla	r0, r0, r3, r4
 8025bec:	1400      	asrs	r0, r0, #16
 8025bee:	f53f ae82 	bmi.w	80258f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025bf2:	3901      	subs	r1, #1
 8025bf4:	4288      	cmp	r0, r1
 8025bf6:	f6bf ae7e 	bge.w	80258f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025bfa:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8025bfc:	fb01 6303 	mla	r3, r1, r3, r6
 8025c00:	141b      	asrs	r3, r3, #16
 8025c02:	f53f ae78 	bmi.w	80258f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025c06:	3a01      	subs	r2, #1
 8025c08:	4293      	cmp	r3, r2
 8025c0a:	f6bf ae74 	bge.w	80258f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025c0e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025c12:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8025c16:	f1bb 0f00 	cmp.w	fp, #0
 8025c1a:	dc6c      	bgt.n	8025cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025c1c:	9b07      	ldr	r3, [sp, #28]
 8025c1e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025c22:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025c24:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025c28:	930a      	str	r3, [sp, #40]	@ 0x28
 8025c2a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8025c2c:	2b00      	cmp	r3, #0
 8025c2e:	f340 81b3 	ble.w	8025f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8025c32:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025c36:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8025c3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025c3e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025c40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025c44:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025c48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025c4c:	eef0 6a62 	vmov.f32	s13, s5
 8025c50:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025c54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025c58:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025c5c:	ee16 4a90 	vmov	r4, s13
 8025c60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025c64:	eef0 6a43 	vmov.f32	s13, s6
 8025c68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025c6c:	ee12 2a90 	vmov	r2, s5
 8025c70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025c74:	fb92 f3f3 	sdiv	r3, r2, r3
 8025c78:	ee13 2a10 	vmov	r2, s6
 8025c7c:	9329      	str	r3, [sp, #164]	@ 0xa4
 8025c7e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025c80:	fb92 f3f3 	sdiv	r3, r2, r3
 8025c84:	932a      	str	r3, [sp, #168]	@ 0xa8
 8025c86:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8025c88:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8025c8a:	3b01      	subs	r3, #1
 8025c8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025c90:	9317      	str	r3, [sp, #92]	@ 0x5c
 8025c92:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025c94:	bf08      	it	eq
 8025c96:	4613      	moveq	r3, r2
 8025c98:	ee16 6a90 	vmov	r6, s13
 8025c9c:	9307      	str	r3, [sp, #28]
 8025c9e:	eeb0 3a67 	vmov.f32	s6, s15
 8025ca2:	eef0 2a47 	vmov.f32	s5, s14
 8025ca6:	e5fb      	b.n	80258a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025ca8:	2900      	cmp	r1, #0
 8025caa:	f43f ae6b 	beq.w	8025984 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025cae:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025cb2:	9308      	str	r3, [sp, #32]
 8025cb4:	0e1b      	lsrs	r3, r3, #24
 8025cb6:	9311      	str	r3, [sp, #68]	@ 0x44
 8025cb8:	e664      	b.n	8025984 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025cba:	f112 0801 	adds.w	r8, r2, #1
 8025cbe:	f53f af7b 	bmi.w	8025bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025cc2:	4543      	cmp	r3, r8
 8025cc4:	f6ff af78 	blt.w	8025bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025cc8:	f11c 0801 	adds.w	r8, ip, #1
 8025ccc:	f53f af74 	bmi.w	8025bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025cd0:	45c6      	cmp	lr, r8
 8025cd2:	f6ff af71 	blt.w	8025bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025cd6:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8025cd8:	9201      	str	r2, [sp, #4]
 8025cda:	fa0f f28e 	sxth.w	r2, lr
 8025cde:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8025ce2:	e9cd c002 	strd	ip, r0, [sp, #8]
 8025ce6:	9200      	str	r2, [sp, #0]
 8025ce8:	b21b      	sxth	r3, r3
 8025cea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8025cec:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8025cee:	4639      	mov	r1, r7
 8025cf0:	f7ff fc79 	bl	80255e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8025cf4:	e760      	b.n	8025bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025cf6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8025cf8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8025cfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025cfe:	1427      	asrs	r7, r4, #16
 8025d00:	1433      	asrs	r3, r6, #16
 8025d02:	fb01 7303 	mla	r3, r1, r3, r7
 8025d06:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8025d0a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025d0e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025d12:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025d16:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025d1a:	2a00      	cmp	r2, #0
 8025d1c:	f000 8133 	beq.w	8025f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8025d20:	687d      	ldr	r5, [r7, #4]
 8025d22:	950e      	str	r5, [sp, #56]	@ 0x38
 8025d24:	0e2d      	lsrs	r5, r5, #24
 8025d26:	9515      	str	r5, [sp, #84]	@ 0x54
 8025d28:	b178      	cbz	r0, 8025d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025d2a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8025d2e:	3901      	subs	r1, #1
 8025d30:	0089      	lsls	r1, r1, #2
 8025d32:	3104      	adds	r1, #4
 8025d34:	eb07 0e01 	add.w	lr, r7, r1
 8025d38:	5879      	ldr	r1, [r7, r1]
 8025d3a:	9109      	str	r1, [sp, #36]	@ 0x24
 8025d3c:	0e09      	lsrs	r1, r1, #24
 8025d3e:	9112      	str	r1, [sp, #72]	@ 0x48
 8025d40:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025d44:	910f      	str	r1, [sp, #60]	@ 0x3c
 8025d46:	0e09      	lsrs	r1, r1, #24
 8025d48:	9116      	str	r1, [sp, #88]	@ 0x58
 8025d4a:	b292      	uxth	r2, r2
 8025d4c:	b280      	uxth	r0, r0
 8025d4e:	fb02 f800 	mul.w	r8, r2, r0
 8025d52:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025d56:	0112      	lsls	r2, r2, #4
 8025d58:	eba2 0e08 	sub.w	lr, r2, r8
 8025d5c:	b280      	uxth	r0, r0
 8025d5e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8025d62:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8025d64:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8025d66:	fa1f fe8e 	uxth.w	lr, lr
 8025d6a:	1a12      	subs	r2, r2, r0
 8025d6c:	b292      	uxth	r2, r2
 8025d6e:	fb0e f101 	mul.w	r1, lr, r1
 8025d72:	fb02 110c 	mla	r1, r2, ip, r1
 8025d76:	fb00 1105 	mla	r1, r0, r5, r1
 8025d7a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025d7c:	fb08 1105 	mla	r1, r8, r5, r1
 8025d80:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025d84:	2900      	cmp	r1, #0
 8025d86:	f000 80f5 	beq.w	8025f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8025d8a:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8025d8e:	d019      	beq.n	8025dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8025d90:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8025d94:	fb0c fa0a 	mul.w	sl, ip, sl
 8025d98:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025d9c:	fb0c fc03 	mul.w	ip, ip, r3
 8025da0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025da4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8025da8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8025dac:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8025db0:	4453      	add	r3, sl
 8025db2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025db6:	0a1b      	lsrs	r3, r3, #8
 8025db8:	0a3f      	lsrs	r7, r7, #8
 8025dba:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8025dbe:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8025dc2:	433b      	orrs	r3, r7
 8025dc4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8025dc6:	2dff      	cmp	r5, #255	@ 0xff
 8025dc8:	d020      	beq.n	8025e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8025dca:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8025dcc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8025dd0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8025dd2:	436f      	muls	r7, r5
 8025dd4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8025dd6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025dda:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8025ddc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025de0:	fb05 fa0a 	mul.w	sl, r5, sl
 8025de4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8025de8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025dec:	44bc      	add	ip, r7
 8025dee:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8025df2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025df6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025dfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025dfe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025e02:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025e06:	ea4c 050a 	orr.w	r5, ip, sl
 8025e0a:	950e      	str	r5, [sp, #56]	@ 0x38
 8025e0c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8025e0e:	2dff      	cmp	r5, #255	@ 0xff
 8025e10:	d020      	beq.n	8025e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8025e12:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025e14:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8025e18:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8025e1a:	436f      	muls	r7, r5
 8025e1c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025e1e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025e22:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8025e24:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025e28:	fb05 fa0a 	mul.w	sl, r5, sl
 8025e2c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8025e30:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025e34:	44bc      	add	ip, r7
 8025e36:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8025e3a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025e3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025e42:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025e46:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025e4a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025e4e:	ea4c 050a 	orr.w	r5, ip, sl
 8025e52:	9509      	str	r5, [sp, #36]	@ 0x24
 8025e54:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025e56:	2dff      	cmp	r5, #255	@ 0xff
 8025e58:	d020      	beq.n	8025e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8025e5a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8025e5c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8025e60:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025e62:	436f      	muls	r7, r5
 8025e64:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8025e66:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025e6a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025e6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025e70:	fb05 fa0a 	mul.w	sl, r5, sl
 8025e74:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8025e78:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025e7c:	44bc      	add	ip, r7
 8025e7e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8025e82:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025e86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025e8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025e8e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025e92:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025e96:	ea4c 050a 	orr.w	r5, ip, sl
 8025e9a:	950f      	str	r5, [sp, #60]	@ 0x3c
 8025e9c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8025e9e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8025ea2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025ea4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8025ea8:	fb0e f707 	mul.w	r7, lr, r7
 8025eac:	fb02 770c 	mla	r7, r2, ip, r7
 8025eb0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8025eb4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8025eb6:	fb00 770c 	mla	r7, r0, ip, r7
 8025eba:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8025ebe:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8025ec0:	fb08 770c 	mla	r7, r8, ip, r7
 8025ec4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8025ec8:	fb0e fe0c 	mul.w	lr, lr, ip
 8025ecc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025ed0:	fb02 e303 	mla	r3, r2, r3, lr
 8025ed4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025ed6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8025ed8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8025edc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8025ede:	fb00 330a 	mla	r3, r0, sl, r3
 8025ee2:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8025ee6:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025eea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025eec:	f8b9 0000 	ldrh.w	r0, [r9]
 8025ef0:	4359      	muls	r1, r3
 8025ef2:	0a3f      	lsrs	r7, r7, #8
 8025ef4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025ef8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8025efc:	1c4b      	adds	r3, r1, #1
 8025efe:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8025f02:	ea47 070c 	orr.w	r7, r7, ip
 8025f06:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025f0a:	1202      	asrs	r2, r0, #8
 8025f0c:	0c3b      	lsrs	r3, r7, #16
 8025f0e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8025f12:	b2c9      	uxtb	r1, r1
 8025f14:	fb13 f305 	smulbb	r3, r3, r5
 8025f18:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8025f1c:	fb02 3201 	mla	r2, r2, r1, r3
 8025f20:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8025f24:	10c3      	asrs	r3, r0, #3
 8025f26:	b2ff      	uxtb	r7, r7
 8025f28:	00c0      	lsls	r0, r0, #3
 8025f2a:	b2c0      	uxtb	r0, r0
 8025f2c:	fb17 f705 	smulbb	r7, r7, r5
 8025f30:	fb00 7001 	mla	r0, r0, r1, r7
 8025f34:	b292      	uxth	r2, r2
 8025f36:	fb1c fc05 	smulbb	ip, ip, r5
 8025f3a:	b280      	uxth	r0, r0
 8025f3c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8025f40:	fb03 c301 	mla	r3, r3, r1, ip
 8025f44:	1c51      	adds	r1, r2, #1
 8025f46:	f100 0c01 	add.w	ip, r0, #1
 8025f4a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025f4e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8025f52:	b29b      	uxth	r3, r3
 8025f54:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025f58:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8025f5c:	ea4c 0202 	orr.w	r2, ip, r2
 8025f60:	f103 0c01 	add.w	ip, r3, #1
 8025f64:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025f68:	095b      	lsrs	r3, r3, #5
 8025f6a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025f6e:	431a      	orrs	r2, r3
 8025f70:	f8a9 2000 	strh.w	r2, [r9]
 8025f74:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8025f76:	441c      	add	r4, r3
 8025f78:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025f7a:	f109 0902 	add.w	r9, r9, #2
 8025f7e:	441e      	add	r6, r3
 8025f80:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025f84:	e647      	b.n	8025c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8025f86:	2800      	cmp	r0, #0
 8025f88:	f43f aedf 	beq.w	8025d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025f8c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025f90:	9109      	str	r1, [sp, #36]	@ 0x24
 8025f92:	0e09      	lsrs	r1, r1, #24
 8025f94:	9112      	str	r1, [sp, #72]	@ 0x48
 8025f96:	e6d8      	b.n	8025d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025f98:	b01d      	add	sp, #116	@ 0x74
 8025f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025f9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8025f9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025fa2:	b085      	sub	sp, #20
 8025fa4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8025fa8:	9102      	str	r1, [sp, #8]
 8025faa:	2c00      	cmp	r4, #0
 8025fac:	fb04 7103 	mla	r1, r4, r3, r7
 8025fb0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8025fb4:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8025fb8:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8025fbc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025fc0:	f2c0 810c 	blt.w	80261dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025fc4:	45a6      	cmp	lr, r4
 8025fc6:	f340 8109 	ble.w	80261dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025fca:	2f00      	cmp	r7, #0
 8025fcc:	f2c0 8104 	blt.w	80261d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025fd0:	42bb      	cmp	r3, r7
 8025fd2:	f340 8101 	ble.w	80261d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025fd6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8025fda:	1c7a      	adds	r2, r7, #1
 8025fdc:	f100 8101 	bmi.w	80261e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025fe0:	4293      	cmp	r3, r2
 8025fe2:	f340 80fe 	ble.w	80261e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025fe6:	2e00      	cmp	r6, #0
 8025fe8:	f000 80fd 	beq.w	80261e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8025fec:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025ff0:	3401      	adds	r4, #1
 8025ff2:	f100 80fc 	bmi.w	80261ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025ff6:	45a6      	cmp	lr, r4
 8025ff8:	f340 80f9 	ble.w	80261ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025ffc:	2800      	cmp	r0, #0
 8025ffe:	f000 80f9 	beq.w	80261f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8026002:	2f00      	cmp	r7, #0
 8026004:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8026008:	f2c0 80ef 	blt.w	80261ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802600c:	42bb      	cmp	r3, r7
 802600e:	f340 80ec 	ble.w	80261ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8026012:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026016:	3701      	adds	r7, #1
 8026018:	f100 80ef 	bmi.w	80261fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802601c:	42bb      	cmp	r3, r7
 802601e:	f340 80ec 	ble.w	80261fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8026022:	2e00      	cmp	r6, #0
 8026024:	f000 80eb 	beq.w	80261fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8026028:	6852      	ldr	r2, [r2, #4]
 802602a:	b2b6      	uxth	r6, r6
 802602c:	b280      	uxth	r0, r0
 802602e:	fb00 fe06 	mul.w	lr, r0, r6
 8026032:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8026036:	0136      	lsls	r6, r6, #4
 8026038:	eba6 070e 	sub.w	r7, r6, lr
 802603c:	b280      	uxth	r0, r0
 802603e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8026042:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8026046:	b2bf      	uxth	r7, r7
 8026048:	1a1b      	subs	r3, r3, r0
 802604a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802604e:	b29b      	uxth	r3, r3
 8026050:	fb07 f60a 	mul.w	r6, r7, sl
 8026054:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8026058:	fb0b 6603 	mla	r6, fp, r3, r6
 802605c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8026060:	fb00 6609 	mla	r6, r0, r9, r6
 8026064:	fb0e 6608 	mla	r6, lr, r8, r6
 8026068:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802606c:	9600      	str	r6, [sp, #0]
 802606e:	2e00      	cmp	r6, #0
 8026070:	f000 80af 	beq.w	80261d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8026074:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026078:	fb0b fc0c 	mul.w	ip, fp, ip
 802607c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8026080:	fb0b f505 	mul.w	r5, fp, r5
 8026084:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8026088:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802608c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8026090:	44dc      	add	ip, fp
 8026092:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026096:	9501      	str	r5, [sp, #4]
 8026098:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 802609c:	9503      	str	r5, [sp, #12]
 802609e:	9d01      	ldr	r5, [sp, #4]
 80260a0:	9e02      	ldr	r6, [sp, #8]
 80260a2:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80260a6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80260aa:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80260ae:	fb0a fc0c 	mul.w	ip, sl, ip
 80260b2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80260b6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80260ba:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80260be:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80260c2:	4465      	add	r5, ip
 80260c4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80260c8:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80260cc:	fb09 fc0c 	mul.w	ip, r9, ip
 80260d0:	fb09 f904 	mul.w	r9, r9, r4
 80260d4:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80260d8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80260dc:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80260e0:	fb08 f404 	mul.w	r4, r8, r4
 80260e4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80260e8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80260ec:	fb08 f802 	mul.w	r8, r8, r2
 80260f0:	fb0a fa01 	mul.w	sl, sl, r1
 80260f4:	0a22      	lsrs	r2, r4, #8
 80260f6:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80260fa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80260fe:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8026102:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8026106:	4414      	add	r4, r2
 8026108:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802610c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8026110:	0a2d      	lsrs	r5, r5, #8
 8026112:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8026116:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802611a:	9a03      	ldr	r2, [sp, #12]
 802611c:	8836      	ldrh	r6, [r6, #0]
 802611e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8026122:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8026126:	437d      	muls	r5, r7
 8026128:	4461      	add	r1, ip
 802612a:	0a24      	lsrs	r4, r4, #8
 802612c:	fb02 5503 	mla	r5, r2, r3, r5
 8026130:	0a09      	lsrs	r1, r1, #8
 8026132:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8026136:	fb04 540e 	mla	r4, r4, lr, r5
 802613a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802613e:	fb01 4100 	mla	r1, r1, r0, r4
 8026142:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026146:	0a09      	lsrs	r1, r1, #8
 8026148:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802614c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8026150:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8026154:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8026158:	fb07 f70a 	mul.w	r7, r7, sl
 802615c:	fb03 7101 	mla	r1, r3, r1, r7
 8026160:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026164:	9b00      	ldr	r3, [sp, #0]
 8026166:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802616a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802616e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8026172:	fb00 e101 	mla	r1, r0, r1, lr
 8026176:	43da      	mvns	r2, r3
 8026178:	1233      	asrs	r3, r6, #8
 802617a:	b2d2      	uxtb	r2, r2
 802617c:	10f0      	asrs	r0, r6, #3
 802617e:	0a09      	lsrs	r1, r1, #8
 8026180:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8026184:	00f6      	lsls	r6, r6, #3
 8026186:	4353      	muls	r3, r2
 8026188:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802618c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8026190:	b2f6      	uxtb	r6, r6
 8026192:	4321      	orrs	r1, r4
 8026194:	4350      	muls	r0, r2
 8026196:	4356      	muls	r6, r2
 8026198:	1c5a      	adds	r2, r3, #1
 802619a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802619e:	0c0b      	lsrs	r3, r1, #16
 80261a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80261a4:	1c42      	adds	r2, r0, #1
 80261a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80261aa:	0a0a      	lsrs	r2, r1, #8
 80261ac:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80261b0:	021b      	lsls	r3, r3, #8
 80261b2:	00d2      	lsls	r2, r2, #3
 80261b4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80261b8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80261bc:	4313      	orrs	r3, r2
 80261be:	1c72      	adds	r2, r6, #1
 80261c0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80261c4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80261c8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80261cc:	4319      	orrs	r1, r3
 80261ce:	9b02      	ldr	r3, [sp, #8]
 80261d0:	8019      	strh	r1, [r3, #0]
 80261d2:	b005      	add	sp, #20
 80261d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80261d8:	2500      	movs	r5, #0
 80261da:	e6fe      	b.n	8025fda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80261dc:	2100      	movs	r1, #0
 80261de:	460d      	mov	r5, r1
 80261e0:	e706      	b.n	8025ff0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80261e2:	2100      	movs	r1, #0
 80261e4:	e704      	b.n	8025ff0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80261e6:	4631      	mov	r1, r6
 80261e8:	e702      	b.n	8025ff0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80261ea:	2400      	movs	r4, #0
 80261ec:	e713      	b.n	8026016 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80261ee:	2200      	movs	r2, #0
 80261f0:	4614      	mov	r4, r2
 80261f2:	e71a      	b.n	802602a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80261f4:	4602      	mov	r2, r0
 80261f6:	4604      	mov	r4, r0
 80261f8:	e717      	b.n	802602a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80261fa:	2200      	movs	r2, #0
 80261fc:	e715      	b.n	802602a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80261fe:	4632      	mov	r2, r6
 8026200:	e713      	b.n	802602a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08026204 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026208:	b09b      	sub	sp, #108	@ 0x6c
 802620a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 802620e:	9218      	str	r2, [sp, #96]	@ 0x60
 8026210:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8026212:	9116      	str	r1, [sp, #88]	@ 0x58
 8026214:	9307      	str	r3, [sp, #28]
 8026216:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 802621a:	9019      	str	r0, [sp, #100]	@ 0x64
 802621c:	6850      	ldr	r0, [r2, #4]
 802621e:	6812      	ldr	r2, [r2, #0]
 8026220:	fb00 1303 	mla	r3, r0, r3, r1
 8026224:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026228:	930a      	str	r3, [sp, #40]	@ 0x28
 802622a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802622c:	681b      	ldr	r3, [r3, #0]
 802622e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8026230:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8026232:	2b00      	cmp	r3, #0
 8026234:	dc03      	bgt.n	802623e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026236:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026238:	2b00      	cmp	r3, #0
 802623a:	f340 8386 	ble.w	802694a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802623e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8026240:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026244:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026248:	1e48      	subs	r0, r1, #1
 802624a:	1e57      	subs	r7, r2, #1
 802624c:	9b07      	ldr	r3, [sp, #28]
 802624e:	2b00      	cmp	r3, #0
 8026250:	f340 8166 	ble.w	8026520 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8026254:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8026258:	ea4f 4326 	mov.w	r3, r6, asr #16
 802625c:	d406      	bmi.n	802626c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802625e:	4584      	cmp	ip, r0
 8026260:	da04      	bge.n	802626c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8026262:	2b00      	cmp	r3, #0
 8026264:	db02      	blt.n	802626c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8026266:	42bb      	cmp	r3, r7
 8026268:	f2c0 815b 	blt.w	8026522 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802626c:	f11c 0c01 	adds.w	ip, ip, #1
 8026270:	f100 814b 	bmi.w	802650a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026274:	4561      	cmp	r1, ip
 8026276:	f2c0 8148 	blt.w	802650a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802627a:	3301      	adds	r3, #1
 802627c:	f100 8145 	bmi.w	802650a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026280:	429a      	cmp	r2, r3
 8026282:	f2c0 8142 	blt.w	802650a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026286:	9b07      	ldr	r3, [sp, #28]
 8026288:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802628a:	9317      	str	r3, [sp, #92]	@ 0x5c
 802628c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802628e:	2b00      	cmp	r3, #0
 8026290:	f340 8165 	ble.w	802655e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026294:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8026296:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8026298:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802629c:	689b      	ldr	r3, [r3, #8]
 802629e:	1422      	asrs	r2, r4, #16
 80262a0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80262a4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80262a8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80262ac:	f100 81d5 	bmi.w	802665a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80262b0:	f103 38ff 	add.w	r8, r3, #4294967295
 80262b4:	4542      	cmp	r2, r8
 80262b6:	f280 81d0 	bge.w	802665a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80262ba:	f1bc 0f00 	cmp.w	ip, #0
 80262be:	f2c0 81cc 	blt.w	802665a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80262c2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80262c6:	45c4      	cmp	ip, r8
 80262c8:	f280 81c7 	bge.w	802665a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80262cc:	b21b      	sxth	r3, r3
 80262ce:	fb0c 2203 	mla	r2, ip, r3, r2
 80262d2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80262d4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80262d8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80262dc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80262e0:	2900      	cmp	r1, #0
 80262e2:	f000 8182 	beq.w	80265ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80262e6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80262ea:	950b      	str	r5, [sp, #44]	@ 0x2c
 80262ec:	0e2d      	lsrs	r5, r5, #24
 80262ee:	9512      	str	r5, [sp, #72]	@ 0x48
 80262f0:	b180      	cbz	r0, 8026314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80262f2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80262f6:	3b01      	subs	r3, #1
 80262f8:	009b      	lsls	r3, r3, #2
 80262fa:	3304      	adds	r3, #4
 80262fc:	eb08 0c03 	add.w	ip, r8, r3
 8026300:	f858 3003 	ldr.w	r3, [r8, r3]
 8026304:	9308      	str	r3, [sp, #32]
 8026306:	0e1b      	lsrs	r3, r3, #24
 8026308:	9310      	str	r3, [sp, #64]	@ 0x40
 802630a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802630e:	930c      	str	r3, [sp, #48]	@ 0x30
 8026310:	0e1b      	lsrs	r3, r3, #24
 8026312:	9313      	str	r3, [sp, #76]	@ 0x4c
 8026314:	b289      	uxth	r1, r1
 8026316:	b280      	uxth	r0, r0
 8026318:	fb01 f900 	mul.w	r9, r1, r0
 802631c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8026320:	0109      	lsls	r1, r1, #4
 8026322:	eba1 0809 	sub.w	r8, r1, r9
 8026326:	b280      	uxth	r0, r0
 8026328:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802632c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802632e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8026330:	fa1f f888 	uxth.w	r8, r8
 8026334:	1a09      	subs	r1, r1, r0
 8026336:	b289      	uxth	r1, r1
 8026338:	fb08 f303 	mul.w	r3, r8, r3
 802633c:	fb01 330e 	mla	r3, r1, lr, r3
 8026340:	fb00 3305 	mla	r3, r0, r5, r3
 8026344:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026346:	fb09 3305 	mla	r3, r9, r5, r3
 802634a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802634e:	2b00      	cmp	r3, #0
 8026350:	f000 80d2 	beq.w	80264f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026354:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8026358:	d01b      	beq.n	8026392 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802635a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802635e:	fb0e fa0a 	mul.w	sl, lr, sl
 8026362:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8026366:	fb0e fe02 	mul.w	lr, lr, r2
 802636a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802636e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8026372:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8026376:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802637a:	4452      	add	r2, sl
 802637c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026380:	0a12      	lsrs	r2, r2, #8
 8026382:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026386:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802638a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802638e:	ea42 020c 	orr.w	r2, r2, ip
 8026392:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026394:	2dff      	cmp	r5, #255	@ 0xff
 8026396:	d021      	beq.n	80263dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8026398:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802639a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802639e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80263a0:	fb05 fb0b 	mul.w	fp, r5, fp
 80263a4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80263a6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80263aa:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80263ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80263b0:	fb05 fa0a 	mul.w	sl, r5, sl
 80263b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80263b8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80263bc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80263c0:	44de      	add	lr, fp
 80263c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80263c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80263ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80263ce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80263d2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80263d6:	ea4e 050a 	orr.w	r5, lr, sl
 80263da:	950b      	str	r5, [sp, #44]	@ 0x2c
 80263dc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80263de:	2dff      	cmp	r5, #255	@ 0xff
 80263e0:	d021      	beq.n	8026426 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80263e2:	9d08      	ldr	r5, [sp, #32]
 80263e4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80263e8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80263ea:	fb05 fb0b 	mul.w	fp, r5, fp
 80263ee:	9d08      	ldr	r5, [sp, #32]
 80263f0:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 80263f4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80263f6:	fb05 fa0e 	mul.w	sl, r5, lr
 80263fa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80263fe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026402:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026406:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802640a:	44de      	add	lr, fp
 802640c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026410:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026414:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026418:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802641c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026420:	ea4e 050a 	orr.w	r5, lr, sl
 8026424:	9508      	str	r5, [sp, #32]
 8026426:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026428:	2dff      	cmp	r5, #255	@ 0xff
 802642a:	d021      	beq.n	8026470 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 802642c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802642e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8026432:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026434:	fb05 fb0b 	mul.w	fp, r5, fp
 8026438:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802643a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802643e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026440:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026444:	fb05 fa0a 	mul.w	sl, r5, sl
 8026448:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802644c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026450:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026454:	44de      	add	lr, fp
 8026456:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802645a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802645e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026462:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026466:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802646a:	ea4e 050a 	orr.w	r5, lr, sl
 802646e:	950c      	str	r5, [sp, #48]	@ 0x30
 8026470:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8026472:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026476:	9d08      	ldr	r5, [sp, #32]
 8026478:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802647c:	fb08 fc0c 	mul.w	ip, r8, ip
 8026480:	fb01 cc0e 	mla	ip, r1, lr, ip
 8026484:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8026488:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802648a:	fb00 cc0e 	mla	ip, r0, lr, ip
 802648e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8026492:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8026494:	fb09 cc0e 	mla	ip, r9, lr, ip
 8026498:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802649c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80264a0:	fb08 f80e 	mul.w	r8, r8, lr
 80264a4:	fb01 8202 	mla	r2, r1, r2, r8
 80264a8:	9908      	ldr	r1, [sp, #32]
 80264aa:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80264ae:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80264b0:	fb00 220a 	mla	r2, r0, sl, r2
 80264b4:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 80264b8:	fb09 2900 	mla	r9, r9, r0, r2
 80264bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80264c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80264c4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80264c8:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80264cc:	ea4c 0c09 	orr.w	ip, ip, r9
 80264d0:	2bff      	cmp	r3, #255	@ 0xff
 80264d2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80264d6:	f040 8091 	bne.w	80265fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80264da:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80264de:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 80264e2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80264e6:	f022 0207 	bic.w	r2, r2, #7
 80264ea:	431a      	orrs	r2, r3
 80264ec:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80264f0:	ea4c 0c02 	orr.w	ip, ip, r2
 80264f4:	f8a7 c000 	strh.w	ip, [r7]
 80264f8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80264fa:	441c      	add	r4, r3
 80264fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80264fe:	441e      	add	r6, r3
 8026500:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026502:	3b01      	subs	r3, #1
 8026504:	3702      	adds	r7, #2
 8026506:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026508:	e6c0      	b.n	802628c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802650a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802650c:	441c      	add	r4, r3
 802650e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8026510:	441e      	add	r6, r3
 8026512:	9b07      	ldr	r3, [sp, #28]
 8026514:	3b01      	subs	r3, #1
 8026516:	9307      	str	r3, [sp, #28]
 8026518:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802651a:	3302      	adds	r3, #2
 802651c:	930a      	str	r3, [sp, #40]	@ 0x28
 802651e:	e695      	b.n	802624c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026520:	d024      	beq.n	802656c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8026522:	9b07      	ldr	r3, [sp, #28]
 8026524:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8026526:	3b01      	subs	r3, #1
 8026528:	fb00 4003 	mla	r0, r0, r3, r4
 802652c:	1400      	asrs	r0, r0, #16
 802652e:	f53f aeaa 	bmi.w	8026286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8026532:	3901      	subs	r1, #1
 8026534:	4288      	cmp	r0, r1
 8026536:	f6bf aea6 	bge.w	8026286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802653a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802653c:	fb01 6303 	mla	r3, r1, r3, r6
 8026540:	141b      	asrs	r3, r3, #16
 8026542:	f53f aea0 	bmi.w	8026286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8026546:	3a01      	subs	r2, #1
 8026548:	4293      	cmp	r3, r2
 802654a:	f6bf ae9c 	bge.w	8026286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802654e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8026552:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8026556:	f1bb 0f00 	cmp.w	fp, #0
 802655a:	f300 809a 	bgt.w	8026692 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802655e:	9b07      	ldr	r3, [sp, #28]
 8026560:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026564:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026566:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802656a:	930a      	str	r3, [sp, #40]	@ 0x28
 802656c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802656e:	2b00      	cmp	r3, #0
 8026570:	f340 81eb 	ble.w	802694a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8026574:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026578:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802657c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026580:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026582:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026586:	ee31 1a05 	vadd.f32	s2, s2, s10
 802658a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802658e:	eef0 6a62 	vmov.f32	s13, s5
 8026592:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026596:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802659a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802659e:	ee16 4a90 	vmov	r4, s13
 80265a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80265a6:	eef0 6a43 	vmov.f32	s13, s6
 80265aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80265ae:	ee12 2a90 	vmov	r2, s5
 80265b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80265b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80265ba:	ee13 2a10 	vmov	r2, s6
 80265be:	9327      	str	r3, [sp, #156]	@ 0x9c
 80265c0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80265c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80265c6:	9328      	str	r3, [sp, #160]	@ 0xa0
 80265c8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80265ca:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80265cc:	3b01      	subs	r3, #1
 80265ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80265d2:	9316      	str	r3, [sp, #88]	@ 0x58
 80265d4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80265d6:	bf08      	it	eq
 80265d8:	4613      	moveq	r3, r2
 80265da:	ee16 6a90 	vmov	r6, s13
 80265de:	9307      	str	r3, [sp, #28]
 80265e0:	eeb0 3a67 	vmov.f32	s6, s15
 80265e4:	eef0 2a47 	vmov.f32	s5, s14
 80265e8:	e622      	b.n	8026230 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80265ea:	2800      	cmp	r0, #0
 80265ec:	f43f ae92 	beq.w	8026314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80265f0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80265f4:	9308      	str	r3, [sp, #32]
 80265f6:	0e1b      	lsrs	r3, r3, #24
 80265f8:	9310      	str	r3, [sp, #64]	@ 0x40
 80265fa:	e68b      	b.n	8026314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80265fc:	8839      	ldrh	r1, [r7, #0]
 80265fe:	4dd4      	ldr	r5, [pc, #848]	@ (8026950 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8026600:	43db      	mvns	r3, r3
 8026602:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8026606:	fa5f f883 	uxtb.w	r8, r3
 802660a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 802660e:	fb0e fe08 	mul.w	lr, lr, r8
 8026612:	10c8      	asrs	r0, r1, #3
 8026614:	00cb      	lsls	r3, r1, #3
 8026616:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802661a:	f10e 0101 	add.w	r1, lr, #1
 802661e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8026622:	fb00 f008 	mul.w	r0, r0, r8
 8026626:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802662a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802662e:	f100 0e01 	add.w	lr, r0, #1
 8026632:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8026636:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802663a:	b2db      	uxtb	r3, r3
 802663c:	b2c9      	uxtb	r1, r1
 802663e:	00d2      	lsls	r2, r2, #3
 8026640:	fb03 f308 	mul.w	r3, r3, r8
 8026644:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8026648:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802664c:	430a      	orrs	r2, r1
 802664e:	1c59      	adds	r1, r3, #1
 8026650:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8026654:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8026658:	e748      	b.n	80264ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802665a:	f112 0801 	adds.w	r8, r2, #1
 802665e:	f53f af4b 	bmi.w	80264f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026662:	4543      	cmp	r3, r8
 8026664:	f6ff af48 	blt.w	80264f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026668:	f11c 0801 	adds.w	r8, ip, #1
 802666c:	f53f af44 	bmi.w	80264f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026670:	45c6      	cmp	lr, r8
 8026672:	f6ff af41 	blt.w	80264f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026676:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802667a:	fa0f f28e 	sxth.w	r2, lr
 802667e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8026682:	9200      	str	r2, [sp, #0]
 8026684:	b21b      	sxth	r3, r3
 8026686:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8026688:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802668a:	4639      	mov	r1, r7
 802668c:	f7ff fc87 	bl	8025f9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8026690:	e732      	b.n	80264f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026692:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8026694:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8026696:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802669a:	1421      	asrs	r1, r4, #16
 802669c:	1433      	asrs	r3, r6, #16
 802669e:	fb07 1303 	mla	r3, r7, r3, r1
 80266a2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80266a4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80266a8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80266ac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80266b0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80266b4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80266b8:	2a00      	cmp	r2, #0
 80266ba:	f000 8107 	beq.w	80268cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80266be:	684d      	ldr	r5, [r1, #4]
 80266c0:	950d      	str	r5, [sp, #52]	@ 0x34
 80266c2:	0e2d      	lsrs	r5, r5, #24
 80266c4:	9514      	str	r5, [sp, #80]	@ 0x50
 80266c6:	b178      	cbz	r0, 80266e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80266c8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80266cc:	3f01      	subs	r7, #1
 80266ce:	00bf      	lsls	r7, r7, #2
 80266d0:	3704      	adds	r7, #4
 80266d2:	eb01 0e07 	add.w	lr, r1, r7
 80266d6:	59c9      	ldr	r1, [r1, r7]
 80266d8:	9109      	str	r1, [sp, #36]	@ 0x24
 80266da:	0e09      	lsrs	r1, r1, #24
 80266dc:	9111      	str	r1, [sp, #68]	@ 0x44
 80266de:	f8de 1004 	ldr.w	r1, [lr, #4]
 80266e2:	910e      	str	r1, [sp, #56]	@ 0x38
 80266e4:	0e09      	lsrs	r1, r1, #24
 80266e6:	9115      	str	r1, [sp, #84]	@ 0x54
 80266e8:	b292      	uxth	r2, r2
 80266ea:	b280      	uxth	r0, r0
 80266ec:	fb02 f900 	mul.w	r9, r2, r0
 80266f0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80266f4:	0112      	lsls	r2, r2, #4
 80266f6:	eba2 0e09 	sub.w	lr, r2, r9
 80266fa:	b280      	uxth	r0, r0
 80266fc:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8026700:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8026702:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026704:	fa1f fe8e 	uxth.w	lr, lr
 8026708:	1a09      	subs	r1, r1, r0
 802670a:	b289      	uxth	r1, r1
 802670c:	fb0e f202 	mul.w	r2, lr, r2
 8026710:	fb01 220c 	mla	r2, r1, ip, r2
 8026714:	fb00 2205 	mla	r2, r0, r5, r2
 8026718:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802671a:	fb09 2205 	mla	r2, r9, r5, r2
 802671e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8026722:	2a00      	cmp	r2, #0
 8026724:	f000 80c9 	beq.w	80268ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8026728:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802672c:	d019      	beq.n	8026762 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802672e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8026732:	fb0c fa0a 	mul.w	sl, ip, sl
 8026736:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802673a:	fb0c fc03 	mul.w	ip, ip, r3
 802673e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8026742:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8026746:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802674a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802674e:	4453      	add	r3, sl
 8026750:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8026754:	0a1b      	lsrs	r3, r3, #8
 8026756:	0a3f      	lsrs	r7, r7, #8
 8026758:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802675c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8026760:	433b      	orrs	r3, r7
 8026762:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8026764:	2dff      	cmp	r5, #255	@ 0xff
 8026766:	d020      	beq.n	80267aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8026768:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802676a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802676e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8026770:	436f      	muls	r7, r5
 8026772:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8026774:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026778:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802677a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802677e:	fb05 fa0a 	mul.w	sl, r5, sl
 8026782:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8026786:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802678a:	44bc      	add	ip, r7
 802678c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8026790:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026794:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026798:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802679c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80267a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80267a4:	ea4c 050a 	orr.w	r5, ip, sl
 80267a8:	950d      	str	r5, [sp, #52]	@ 0x34
 80267aa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80267ac:	2dff      	cmp	r5, #255	@ 0xff
 80267ae:	d020      	beq.n	80267f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80267b0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80267b2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80267b6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80267b8:	436f      	muls	r7, r5
 80267ba:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80267bc:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80267c0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80267c2:	fb05 fa0c 	mul.w	sl, r5, ip
 80267c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80267ca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80267ce:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80267d2:	44bc      	add	ip, r7
 80267d4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80267d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80267dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80267e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80267e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80267e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80267ec:	ea4c 050a 	orr.w	r5, ip, sl
 80267f0:	9509      	str	r5, [sp, #36]	@ 0x24
 80267f2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80267f4:	2dff      	cmp	r5, #255	@ 0xff
 80267f6:	d020      	beq.n	802683a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80267f8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80267fa:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80267fe:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8026800:	436f      	muls	r7, r5
 8026802:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026804:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026808:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802680a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802680e:	fb05 fa0a 	mul.w	sl, r5, sl
 8026812:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8026816:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802681a:	44bc      	add	ip, r7
 802681c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8026820:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026824:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026828:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802682c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026830:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026834:	ea4c 050a 	orr.w	r5, ip, sl
 8026838:	950e      	str	r5, [sp, #56]	@ 0x38
 802683a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802683c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8026840:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8026842:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8026846:	fb0e f707 	mul.w	r7, lr, r7
 802684a:	fb01 770c 	mla	r7, r1, ip, r7
 802684e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026852:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026854:	fb00 770c 	mla	r7, r0, ip, r7
 8026858:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802685c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802685e:	fb09 770c 	mla	r7, r9, ip, r7
 8026862:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8026866:	fb0e fe0c 	mul.w	lr, lr, ip
 802686a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802686e:	fb01 e303 	mla	r3, r1, r3, lr
 8026872:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8026874:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8026878:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802687a:	fb00 330a 	mla	r3, r0, sl, r3
 802687e:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8026882:	fb09 3c0c 	mla	ip, r9, ip, r3
 8026886:	0a3f      	lsrs	r7, r7, #8
 8026888:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802688c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8026890:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8026894:	ea47 070c 	orr.w	r7, r7, ip
 8026898:	2aff      	cmp	r2, #255	@ 0xff
 802689a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802689e:	d11e      	bne.n	80268de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80268a0:	097a      	lsrs	r2, r7, #5
 80268a2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80268a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80268aa:	f023 0307 	bic.w	r3, r3, #7
 80268ae:	4313      	orrs	r3, r2
 80268b0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80268b4:	431f      	orrs	r7, r3
 80268b6:	f8a8 7000 	strh.w	r7, [r8]
 80268ba:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80268bc:	441c      	add	r4, r3
 80268be:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80268c0:	f108 0802 	add.w	r8, r8, #2
 80268c4:	441e      	add	r6, r3
 80268c6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80268ca:	e644      	b.n	8026556 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80268cc:	2800      	cmp	r0, #0
 80268ce:	f43f af0b 	beq.w	80266e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80268d2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80268d6:	9109      	str	r1, [sp, #36]	@ 0x24
 80268d8:	0e09      	lsrs	r1, r1, #24
 80268da:	9111      	str	r1, [sp, #68]	@ 0x44
 80268dc:	e704      	b.n	80266e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80268de:	f8b8 1000 	ldrh.w	r1, [r8]
 80268e2:	43d2      	mvns	r2, r2
 80268e4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80268e8:	fa5f fe82 	uxtb.w	lr, r2
 80268ec:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80268f0:	fb0c fc0e 	mul.w	ip, ip, lr
 80268f4:	10c8      	asrs	r0, r1, #3
 80268f6:	00ca      	lsls	r2, r1, #3
 80268f8:	f10c 0101 	add.w	r1, ip, #1
 80268fc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026900:	0c39      	lsrs	r1, r7, #16
 8026902:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026906:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802690a:	4911      	ldr	r1, [pc, #68]	@ (8026950 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802690c:	fb00 f00e 	mul.w	r0, r0, lr
 8026910:	fa5f fc8c 	uxtb.w	ip, ip
 8026914:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8026918:	b2d2      	uxtb	r2, r2
 802691a:	1c41      	adds	r1, r0, #1
 802691c:	fb02 f20e 	mul.w	r2, r2, lr
 8026920:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8026924:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026928:	1c51      	adds	r1, r2, #1
 802692a:	00c0      	lsls	r0, r0, #3
 802692c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026930:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8026934:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8026938:	ea4c 0c00 	orr.w	ip, ip, r0
 802693c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026940:	ea47 0c0c 	orr.w	ip, r7, ip
 8026944:	f8a8 c000 	strh.w	ip, [r8]
 8026948:	e7b7      	b.n	80268ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802694a:	b01b      	add	sp, #108	@ 0x6c
 802694c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026950:	fffff800 	.word	0xfffff800

08026954 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8026954:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026958:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802695c:	2d00      	cmp	r5, #0
 802695e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026962:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8026966:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802696a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802696e:	fb05 0e03 	mla	lr, r5, r3, r0
 8026972:	f2c0 808c 	blt.w	8026a8e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8026976:	45a9      	cmp	r9, r5
 8026978:	f340 8089 	ble.w	8026a8e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802697c:	2800      	cmp	r0, #0
 802697e:	f2c0 8084 	blt.w	8026a8a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026982:	4580      	cmp	r8, r0
 8026984:	f340 8081 	ble.w	8026a8a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026988:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802698c:	f01e 0f01 	tst.w	lr, #1
 8026990:	5d16      	ldrb	r6, [r2, r4]
 8026992:	bf0c      	ite	eq
 8026994:	f006 060f 	andeq.w	r6, r6, #15
 8026998:	1136      	asrne	r6, r6, #4
 802699a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802699e:	b2f6      	uxtb	r6, r6
 80269a0:	1c44      	adds	r4, r0, #1
 80269a2:	d477      	bmi.n	8026a94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80269a4:	45a0      	cmp	r8, r4
 80269a6:	dd75      	ble.n	8026a94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80269a8:	2f00      	cmp	r7, #0
 80269aa:	d075      	beq.n	8026a98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80269ac:	f10e 0a01 	add.w	sl, lr, #1
 80269b0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80269b4:	f01a 0f01 	tst.w	sl, #1
 80269b8:	5d14      	ldrb	r4, [r2, r4]
 80269ba:	bf0c      	ite	eq
 80269bc:	f004 040f 	andeq.w	r4, r4, #15
 80269c0:	1124      	asrne	r4, r4, #4
 80269c2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80269c6:	b2e4      	uxtb	r4, r4
 80269c8:	3501      	adds	r5, #1
 80269ca:	d469      	bmi.n	8026aa0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80269cc:	45a9      	cmp	r9, r5
 80269ce:	dd67      	ble.n	8026aa0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80269d0:	f1bc 0f00 	cmp.w	ip, #0
 80269d4:	d067      	beq.n	8026aa6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80269d6:	2800      	cmp	r0, #0
 80269d8:	db60      	blt.n	8026a9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80269da:	4580      	cmp	r8, r0
 80269dc:	dd5e      	ble.n	8026a9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80269de:	eb03 090e 	add.w	r9, r3, lr
 80269e2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80269e6:	f019 0f01 	tst.w	r9, #1
 80269ea:	5d55      	ldrb	r5, [r2, r5]
 80269ec:	bf0c      	ite	eq
 80269ee:	f005 050f 	andeq.w	r5, r5, #15
 80269f2:	112d      	asrne	r5, r5, #4
 80269f4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80269f8:	b2ed      	uxtb	r5, r5
 80269fa:	3001      	adds	r0, #1
 80269fc:	d456      	bmi.n	8026aac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80269fe:	4580      	cmp	r8, r0
 8026a00:	dd54      	ble.n	8026aac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8026a02:	2f00      	cmp	r7, #0
 8026a04:	d054      	beq.n	8026ab0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8026a06:	3301      	adds	r3, #1
 8026a08:	449e      	add	lr, r3
 8026a0a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026a0e:	f01e 0f01 	tst.w	lr, #1
 8026a12:	5cd0      	ldrb	r0, [r2, r3]
 8026a14:	bf0c      	ite	eq
 8026a16:	f000 000f 	andeq.w	r0, r0, #15
 8026a1a:	1100      	asrne	r0, r0, #4
 8026a1c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026a20:	b2c3      	uxtb	r3, r0
 8026a22:	b2ba      	uxth	r2, r7
 8026a24:	fa1f fc8c 	uxth.w	ip, ip
 8026a28:	fb02 f00c 	mul.w	r0, r2, ip
 8026a2c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026a30:	0112      	lsls	r2, r2, #4
 8026a32:	fa1f fc8c 	uxth.w	ip, ip
 8026a36:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8026a3a:	1a12      	subs	r2, r2, r0
 8026a3c:	eba7 070c 	sub.w	r7, r7, ip
 8026a40:	b292      	uxth	r2, r2
 8026a42:	b2bf      	uxth	r7, r7
 8026a44:	4362      	muls	r2, r4
 8026a46:	fb06 2207 	mla	r2, r6, r7, r2
 8026a4a:	fb0c 2505 	mla	r5, ip, r5, r2
 8026a4e:	fb00 5303 	mla	r3, r0, r3, r5
 8026a52:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026a56:	b1b3      	cbz	r3, 8026a86 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8026a58:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8026a5c:	435a      	muls	r2, r3
 8026a5e:	1c53      	adds	r3, r2, #1
 8026a60:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026a64:	4a2d      	ldr	r2, [pc, #180]	@ (8026b1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8026a66:	121b      	asrs	r3, r3, #8
 8026a68:	6812      	ldr	r2, [r2, #0]
 8026a6a:	2bff      	cmp	r3, #255	@ 0xff
 8026a6c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8026a70:	d120      	bne.n	8026ab4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8026a72:	4b2b      	ldr	r3, [pc, #172]	@ (8026b20 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8026a74:	0950      	lsrs	r0, r2, #5
 8026a76:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8026a7a:	4033      	ands	r3, r6
 8026a7c:	4318      	orrs	r0, r3
 8026a7e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026a82:	4302      	orrs	r2, r0
 8026a84:	800a      	strh	r2, [r1, #0]
 8026a86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026a8a:	2600      	movs	r6, #0
 8026a8c:	e788      	b.n	80269a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8026a8e:	2400      	movs	r4, #0
 8026a90:	4626      	mov	r6, r4
 8026a92:	e799      	b.n	80269c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026a94:	2400      	movs	r4, #0
 8026a96:	e797      	b.n	80269c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026a98:	463c      	mov	r4, r7
 8026a9a:	e795      	b.n	80269c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026a9c:	2500      	movs	r5, #0
 8026a9e:	e7ac      	b.n	80269fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8026aa0:	2300      	movs	r3, #0
 8026aa2:	461d      	mov	r5, r3
 8026aa4:	e7bd      	b.n	8026a22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026aa6:	4663      	mov	r3, ip
 8026aa8:	4665      	mov	r5, ip
 8026aaa:	e7ba      	b.n	8026a22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026aac:	2300      	movs	r3, #0
 8026aae:	e7b8      	b.n	8026a22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026ab0:	463b      	mov	r3, r7
 8026ab2:	e7b6      	b.n	8026a22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026ab4:	880d      	ldrh	r5, [r1, #0]
 8026ab6:	b29f      	uxth	r7, r3
 8026ab8:	122c      	asrs	r4, r5, #8
 8026aba:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8026abe:	43db      	mvns	r3, r3
 8026ac0:	b2db      	uxtb	r3, r3
 8026ac2:	fb10 f007 	smulbb	r0, r0, r7
 8026ac6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8026aca:	fb04 0403 	mla	r4, r4, r3, r0
 8026ace:	b2f6      	uxtb	r6, r6
 8026ad0:	10e8      	asrs	r0, r5, #3
 8026ad2:	b2d2      	uxtb	r2, r2
 8026ad4:	00ed      	lsls	r5, r5, #3
 8026ad6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8026ada:	fb12 f207 	smulbb	r2, r2, r7
 8026ade:	fb16 f607 	smulbb	r6, r6, r7
 8026ae2:	b2ed      	uxtb	r5, r5
 8026ae4:	b2a4      	uxth	r4, r4
 8026ae6:	fb00 6603 	mla	r6, r0, r3, r6
 8026aea:	fb05 2303 	mla	r3, r5, r3, r2
 8026aee:	b29a      	uxth	r2, r3
 8026af0:	1c63      	adds	r3, r4, #1
 8026af2:	b2b0      	uxth	r0, r6
 8026af4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026af8:	1c53      	adds	r3, r2, #1
 8026afa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026afe:	1c42      	adds	r2, r0, #1
 8026b00:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026b04:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8026b08:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026b0c:	0940      	lsrs	r0, r0, #5
 8026b0e:	4323      	orrs	r3, r4
 8026b10:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8026b14:	4303      	orrs	r3, r0
 8026b16:	800b      	strh	r3, [r1, #0]
 8026b18:	e7b5      	b.n	8026a86 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8026b1a:	bf00      	nop
 8026b1c:	20013f70 	.word	0x20013f70
 8026b20:	00fff800 	.word	0x00fff800

08026b24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026b24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026b28:	b097      	sub	sp, #92	@ 0x5c
 8026b2a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 8026b2e:	9214      	str	r2, [sp, #80]	@ 0x50
 8026b30:	9309      	str	r3, [sp, #36]	@ 0x24
 8026b32:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8026b34:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8026b38:	910d      	str	r1, [sp, #52]	@ 0x34
 8026b3a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8026b3c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8026b40:	9015      	str	r0, [sp, #84]	@ 0x54
 8026b42:	6850      	ldr	r0, [r2, #4]
 8026b44:	6812      	ldr	r2, [r2, #0]
 8026b46:	fb00 1303 	mla	r3, r0, r3, r1
 8026b4a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026b4e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8026b50:	689b      	ldr	r3, [r3, #8]
 8026b52:	3301      	adds	r3, #1
 8026b54:	f023 0301 	bic.w	r3, r3, #1
 8026b58:	930a      	str	r3, [sp, #40]	@ 0x28
 8026b5a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8026b5c:	681f      	ldr	r7, [r3, #0]
 8026b5e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8026b60:	2b00      	cmp	r3, #0
 8026b62:	dc03      	bgt.n	8026b6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026b64:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8026b66:	2b00      	cmp	r3, #0
 8026b68:	f340 8287 	ble.w	802707a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026b6c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8026b6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026b72:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026b76:	1e48      	subs	r0, r1, #1
 8026b78:	f102 3cff 	add.w	ip, r2, #4294967295
 8026b7c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026b7e:	2b00      	cmp	r3, #0
 8026b80:	f340 80c4 	ble.w	8026d0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8026b84:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026b88:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026b8c:	d406      	bmi.n	8026b9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026b8e:	4586      	cmp	lr, r0
 8026b90:	da04      	bge.n	8026b9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026b92:	2b00      	cmp	r3, #0
 8026b94:	db02      	blt.n	8026b9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026b96:	4563      	cmp	r3, ip
 8026b98:	f2c0 80b9 	blt.w	8026d0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8026b9c:	f11e 0e01 	adds.w	lr, lr, #1
 8026ba0:	f100 80aa 	bmi.w	8026cf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026ba4:	4571      	cmp	r1, lr
 8026ba6:	f2c0 80a7 	blt.w	8026cf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026baa:	3301      	adds	r3, #1
 8026bac:	f100 80a4 	bmi.w	8026cf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026bb0:	429a      	cmp	r2, r3
 8026bb2:	f2c0 80a1 	blt.w	8026cf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026bb6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026bb8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 8026bbc:	930e      	str	r3, [sp, #56]	@ 0x38
 8026bbe:	46c8      	mov	r8, r9
 8026bc0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8026bc2:	2b00      	cmp	r3, #0
 8026bc4:	f340 80c3 	ble.w	8026d4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8026bc8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8026bca:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026bce:	1423      	asrs	r3, r4, #16
 8026bd0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026bd4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026bd8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8026bdc:	f100 814d 	bmi.w	8026e7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026be0:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026be4:	455b      	cmp	r3, fp
 8026be6:	f280 8148 	bge.w	8026e7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026bea:	2800      	cmp	r0, #0
 8026bec:	f2c0 8145 	blt.w	8026e7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026bf0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026bf4:	4558      	cmp	r0, fp
 8026bf6:	f280 8140 	bge.w	8026e7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026bfa:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8026bfc:	fb00 3305 	mla	r3, r0, r5, r3
 8026c00:	0858      	lsrs	r0, r3, #1
 8026c02:	07dd      	lsls	r5, r3, #31
 8026c04:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026c08:	bf54      	ite	pl
 8026c0a:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026c0e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026c12:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026c16:	fa5f fc8c 	uxtb.w	ip, ip
 8026c1a:	2a00      	cmp	r2, #0
 8026c1c:	f000 80db 	beq.w	8026dd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8026c20:	1c58      	adds	r0, r3, #1
 8026c22:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026c26:	07c0      	lsls	r0, r0, #31
 8026c28:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026c2c:	bf54      	ite	pl
 8026c2e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026c32:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026c36:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026c3a:	fa5f f08e 	uxtb.w	r0, lr
 8026c3e:	9010      	str	r0, [sp, #64]	@ 0x40
 8026c40:	b1c9      	cbz	r1, 8026c76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026c42:	4453      	add	r3, sl
 8026c44:	0858      	lsrs	r0, r3, #1
 8026c46:	07dd      	lsls	r5, r3, #31
 8026c48:	5c38      	ldrb	r0, [r7, r0]
 8026c4a:	bf54      	ite	pl
 8026c4c:	f000 000f 	andpl.w	r0, r0, #15
 8026c50:	1100      	asrmi	r0, r0, #4
 8026c52:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026c56:	3301      	adds	r3, #1
 8026c58:	b2c0      	uxtb	r0, r0
 8026c5a:	900b      	str	r0, [sp, #44]	@ 0x2c
 8026c5c:	0858      	lsrs	r0, r3, #1
 8026c5e:	07dd      	lsls	r5, r3, #31
 8026c60:	f817 e000 	ldrb.w	lr, [r7, r0]
 8026c64:	bf54      	ite	pl
 8026c66:	f00e 030f 	andpl.w	r3, lr, #15
 8026c6a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8026c6e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026c72:	b2db      	uxtb	r3, r3
 8026c74:	9311      	str	r3, [sp, #68]	@ 0x44
 8026c76:	b292      	uxth	r2, r2
 8026c78:	b289      	uxth	r1, r1
 8026c7a:	fb02 f301 	mul.w	r3, r2, r1
 8026c7e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026c82:	0112      	lsls	r2, r2, #4
 8026c84:	b289      	uxth	r1, r1
 8026c86:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8026c8a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8026c8c:	1ad2      	subs	r2, r2, r3
 8026c8e:	1a40      	subs	r0, r0, r1
 8026c90:	b292      	uxth	r2, r2
 8026c92:	436a      	muls	r2, r5
 8026c94:	b280      	uxth	r0, r0
 8026c96:	fb0c 2c00 	mla	ip, ip, r0, r2
 8026c9a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8026c9c:	fb01 c102 	mla	r1, r1, r2, ip
 8026ca0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8026ca2:	fb03 1302 	mla	r3, r3, r2, r1
 8026ca6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026caa:	b1db      	cbz	r3, 8026ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026cac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8026cae:	4353      	muls	r3, r2
 8026cb0:	1c5a      	adds	r2, r3, #1
 8026cb2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026cb6:	4ac6      	ldr	r2, [pc, #792]	@ (8026fd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026cb8:	121b      	asrs	r3, r3, #8
 8026cba:	6812      	ldr	r2, [r2, #0]
 8026cbc:	2bff      	cmp	r3, #255	@ 0xff
 8026cbe:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026cc2:	f040 8099 	bne.w	8026df8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8026cc6:	0953      	lsrs	r3, r2, #5
 8026cc8:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8026ccc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026cd0:	f02c 0c07 	bic.w	ip, ip, #7
 8026cd4:	ea43 0c0c 	orr.w	ip, r3, ip
 8026cd8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026cdc:	ea4c 0202 	orr.w	r2, ip, r2
 8026ce0:	f8a8 2000 	strh.w	r2, [r8]
 8026ce4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8026ce6:	441c      	add	r4, r3
 8026ce8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026cea:	441e      	add	r6, r3
 8026cec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8026cee:	3b01      	subs	r3, #1
 8026cf0:	f108 0802 	add.w	r8, r8, #2
 8026cf4:	930e      	str	r3, [sp, #56]	@ 0x38
 8026cf6:	e763      	b.n	8026bc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8026cf8:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8026cfa:	441c      	add	r4, r3
 8026cfc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026cfe:	441e      	add	r6, r3
 8026d00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026d02:	3b01      	subs	r3, #1
 8026d04:	9309      	str	r3, [sp, #36]	@ 0x24
 8026d06:	f109 0902 	add.w	r9, r9, #2
 8026d0a:	e737      	b.n	8026b7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026d0c:	d024      	beq.n	8026d58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8026d0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026d10:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8026d12:	3b01      	subs	r3, #1
 8026d14:	fb00 4003 	mla	r0, r0, r3, r4
 8026d18:	1400      	asrs	r0, r0, #16
 8026d1a:	f53f af4c 	bmi.w	8026bb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026d1e:	3901      	subs	r1, #1
 8026d20:	4288      	cmp	r0, r1
 8026d22:	f6bf af48 	bge.w	8026bb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026d26:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8026d28:	fb01 6303 	mla	r3, r1, r3, r6
 8026d2c:	141b      	asrs	r3, r3, #16
 8026d2e:	f53f af42 	bmi.w	8026bb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026d32:	3a01      	subs	r2, #1
 8026d34:	4293      	cmp	r3, r2
 8026d36:	f6bf af3e 	bge.w	8026bb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026d3a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8026d3e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8026d42:	930e      	str	r3, [sp, #56]	@ 0x38
 8026d44:	46c8      	mov	r8, r9
 8026d46:	f1bb 0f00 	cmp.w	fp, #0
 8026d4a:	f300 80b7 	bgt.w	8026ebc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8026d4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026d50:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026d54:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026d58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8026d5a:	2b00      	cmp	r3, #0
 8026d5c:	f340 818d 	ble.w	802707a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026d60:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026d64:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8026d68:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026d6c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026d6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026d72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026d76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026d7a:	eef0 6a62 	vmov.f32	s13, s5
 8026d7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026d82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026d86:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026d8a:	ee16 4a90 	vmov	r4, s13
 8026d8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026d92:	eef0 6a43 	vmov.f32	s13, s6
 8026d96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026d9a:	ee12 2a90 	vmov	r2, s5
 8026d9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026da2:	fb92 f3f3 	sdiv	r3, r2, r3
 8026da6:	ee13 2a10 	vmov	r2, s6
 8026daa:	9323      	str	r3, [sp, #140]	@ 0x8c
 8026dac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026dae:	fb92 f3f3 	sdiv	r3, r2, r3
 8026db2:	9324      	str	r3, [sp, #144]	@ 0x90
 8026db4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8026db6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8026db8:	3b01      	subs	r3, #1
 8026dba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026dbe:	930d      	str	r3, [sp, #52]	@ 0x34
 8026dc0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026dc2:	bf08      	it	eq
 8026dc4:	4613      	moveq	r3, r2
 8026dc6:	ee16 6a90 	vmov	r6, s13
 8026dca:	9309      	str	r3, [sp, #36]	@ 0x24
 8026dcc:	eeb0 3a67 	vmov.f32	s6, s15
 8026dd0:	eef0 2a47 	vmov.f32	s5, s14
 8026dd4:	e6c3      	b.n	8026b5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026dd6:	2900      	cmp	r1, #0
 8026dd8:	f43f af4d 	beq.w	8026c76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026ddc:	eb0a 0003 	add.w	r0, sl, r3
 8026de0:	0843      	lsrs	r3, r0, #1
 8026de2:	07c0      	lsls	r0, r0, #31
 8026de4:	5cfb      	ldrb	r3, [r7, r3]
 8026de6:	bf54      	ite	pl
 8026de8:	f003 030f 	andpl.w	r3, r3, #15
 8026dec:	111b      	asrmi	r3, r3, #4
 8026dee:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026df2:	b2db      	uxtb	r3, r3
 8026df4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026df6:	e73e      	b.n	8026c76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026df8:	f8b8 e000 	ldrh.w	lr, [r8]
 8026dfc:	fa1f fb83 	uxth.w	fp, r3
 8026e00:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026e04:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026e08:	43db      	mvns	r3, r3
 8026e0a:	b2db      	uxtb	r3, r3
 8026e0c:	fb11 f10b 	smulbb	r1, r1, fp
 8026e10:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8026e14:	fb00 1003 	mla	r0, r0, r3, r1
 8026e18:	fa5f fc8c 	uxtb.w	ip, ip
 8026e1c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026e20:	b2d2      	uxtb	r2, r2
 8026e22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026e26:	b280      	uxth	r0, r0
 8026e28:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8026e2c:	fb1c fc0b 	smulbb	ip, ip, fp
 8026e30:	fa5f fe8e 	uxtb.w	lr, lr
 8026e34:	fb12 fb0b 	smulbb	fp, r2, fp
 8026e38:	fb01 cc03 	mla	ip, r1, r3, ip
 8026e3c:	fb0e bb03 	mla	fp, lr, r3, fp
 8026e40:	1c43      	adds	r3, r0, #1
 8026e42:	fa1f fc8c 	uxth.w	ip, ip
 8026e46:	fa1f fb8b 	uxth.w	fp, fp
 8026e4a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026e4e:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8026e52:	f10c 0101 	add.w	r1, ip, #1
 8026e56:	f10b 0001 	add.w	r0, fp, #1
 8026e5a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026e5e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026e62:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026e66:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026e6a:	4318      	orrs	r0, r3
 8026e6c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8026e70:	ea40 000c 	orr.w	r0, r0, ip
 8026e74:	f8a8 0000 	strh.w	r0, [r8]
 8026e78:	e734      	b.n	8026ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026e7a:	f113 0b01 	adds.w	fp, r3, #1
 8026e7e:	f53f af31 	bmi.w	8026ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026e82:	45dc      	cmp	ip, fp
 8026e84:	f6ff af2e 	blt.w	8026ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026e88:	f110 0b01 	adds.w	fp, r0, #1
 8026e8c:	f53f af2a 	bmi.w	8026ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026e90:	45de      	cmp	lr, fp
 8026e92:	f6ff af27 	blt.w	8026ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026e96:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8026e98:	9302      	str	r3, [sp, #8]
 8026e9a:	fa0f f38e 	sxth.w	r3, lr
 8026e9e:	9301      	str	r3, [sp, #4]
 8026ea0:	fa0f f38c 	sxth.w	r3, ip
 8026ea4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026ea8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8026eac:	9300      	str	r3, [sp, #0]
 8026eae:	463a      	mov	r2, r7
 8026eb0:	4653      	mov	r3, sl
 8026eb2:	4641      	mov	r1, r8
 8026eb4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8026eb6:	f7ff fd4d 	bl	8026954 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8026eba:	e713      	b.n	8026ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026ebc:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8026ebe:	1422      	asrs	r2, r4, #16
 8026ec0:	1433      	asrs	r3, r6, #16
 8026ec2:	fb05 2303 	mla	r3, r5, r3, r2
 8026ec6:	085a      	lsrs	r2, r3, #1
 8026ec8:	07dd      	lsls	r5, r3, #31
 8026eca:	5cba      	ldrb	r2, [r7, r2]
 8026ecc:	bf54      	ite	pl
 8026ece:	f002 020f 	andpl.w	r2, r2, #15
 8026ed2:	1112      	asrmi	r2, r2, #4
 8026ed4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026ed8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8026edc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026ee0:	b2d2      	uxtb	r2, r2
 8026ee2:	2900      	cmp	r1, #0
 8026ee4:	d076      	beq.n	8026fd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8026ee6:	f103 0e01 	add.w	lr, r3, #1
 8026eea:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8026eee:	f01e 0f01 	tst.w	lr, #1
 8026ef2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026ef6:	bf0c      	ite	eq
 8026ef8:	f00c 0c0f 	andeq.w	ip, ip, #15
 8026efc:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8026f00:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026f04:	fa5f f58c 	uxtb.w	r5, ip
 8026f08:	9512      	str	r5, [sp, #72]	@ 0x48
 8026f0a:	b300      	cbz	r0, 8026f4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026f0c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026f0e:	442b      	add	r3, r5
 8026f10:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026f14:	07dd      	lsls	r5, r3, #31
 8026f16:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026f1a:	bf54      	ite	pl
 8026f1c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026f20:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026f24:	3301      	adds	r3, #1
 8026f26:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026f2a:	fa5f f58c 	uxtb.w	r5, ip
 8026f2e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026f32:	950c      	str	r5, [sp, #48]	@ 0x30
 8026f34:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026f38:	07dd      	lsls	r5, r3, #31
 8026f3a:	bf54      	ite	pl
 8026f3c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026f40:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026f44:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026f48:	fa5f f38c 	uxtb.w	r3, ip
 8026f4c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8026f4e:	b289      	uxth	r1, r1
 8026f50:	b280      	uxth	r0, r0
 8026f52:	fb01 f300 	mul.w	r3, r1, r0
 8026f56:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8026f5a:	0109      	lsls	r1, r1, #4
 8026f5c:	b280      	uxth	r0, r0
 8026f5e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8026f62:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026f64:	1ac9      	subs	r1, r1, r3
 8026f66:	ebac 0c00 	sub.w	ip, ip, r0
 8026f6a:	b289      	uxth	r1, r1
 8026f6c:	4369      	muls	r1, r5
 8026f6e:	fa1f fc8c 	uxth.w	ip, ip
 8026f72:	fb02 120c 	mla	r2, r2, ip, r1
 8026f76:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8026f78:	fb00 2001 	mla	r0, r0, r1, r2
 8026f7c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8026f7e:	fb03 0302 	mla	r3, r3, r2, r0
 8026f82:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026f86:	b1d3      	cbz	r3, 8026fbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026f88:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8026f8a:	4353      	muls	r3, r2
 8026f8c:	1c5a      	adds	r2, r3, #1
 8026f8e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026f92:	4a0f      	ldr	r2, [pc, #60]	@ (8026fd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026f94:	121b      	asrs	r3, r3, #8
 8026f96:	6812      	ldr	r2, [r2, #0]
 8026f98:	2bff      	cmp	r3, #255	@ 0xff
 8026f9a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026f9e:	d12d      	bne.n	8026ffc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026fa0:	0953      	lsrs	r3, r2, #5
 8026fa2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8026fa6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026faa:	f02c 0c07 	bic.w	ip, ip, #7
 8026fae:	ea43 0c0c 	orr.w	ip, r3, ip
 8026fb2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026fb6:	ea4c 0202 	orr.w	r2, ip, r2
 8026fba:	f8a8 2000 	strh.w	r2, [r8]
 8026fbe:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8026fc0:	441c      	add	r4, r3
 8026fc2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026fc4:	f108 0802 	add.w	r8, r8, #2
 8026fc8:	441e      	add	r6, r3
 8026fca:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026fce:	e6ba      	b.n	8026d46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026fd0:	20013f70 	.word	0x20013f70
 8026fd4:	2800      	cmp	r0, #0
 8026fd6:	d0ba      	beq.n	8026f4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026fd8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026fda:	442b      	add	r3, r5
 8026fdc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026fe0:	07db      	lsls	r3, r3, #31
 8026fe2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026fe6:	bf54      	ite	pl
 8026fe8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026fec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026ff0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026ff4:	fa5f f38c 	uxtb.w	r3, ip
 8026ff8:	930c      	str	r3, [sp, #48]	@ 0x30
 8026ffa:	e7a8      	b.n	8026f4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026ffc:	f8b8 e000 	ldrh.w	lr, [r8]
 8027000:	fa1f fa83 	uxth.w	sl, r3
 8027004:	ea4f 202e 	mov.w	r0, lr, asr #8
 8027008:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802700c:	43db      	mvns	r3, r3
 802700e:	b2db      	uxtb	r3, r3
 8027010:	fb11 f10a 	smulbb	r1, r1, sl
 8027014:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8027018:	fb00 1003 	mla	r0, r0, r3, r1
 802701c:	b2d2      	uxtb	r2, r2
 802701e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8027022:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027026:	fa5f fe8e 	uxtb.w	lr, lr
 802702a:	fb12 f20a 	smulbb	r2, r2, sl
 802702e:	fb0e 2203 	mla	r2, lr, r3, r2
 8027032:	fa5f fc8c 	uxtb.w	ip, ip
 8027036:	b280      	uxth	r0, r0
 8027038:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802703c:	b292      	uxth	r2, r2
 802703e:	fb1c fc0a 	smulbb	ip, ip, sl
 8027042:	fb01 cc03 	mla	ip, r1, r3, ip
 8027046:	1c43      	adds	r3, r0, #1
 8027048:	1c51      	adds	r1, r2, #1
 802704a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802704e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8027052:	fa1f fc8c 	uxth.w	ip, ip
 8027056:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802705a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802705e:	4308      	orrs	r0, r1
 8027060:	f10c 0101 	add.w	r1, ip, #1
 8027064:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027068:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802706c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8027070:	ea40 000c 	orr.w	r0, r0, ip
 8027074:	f8a8 0000 	strh.w	r0, [r8]
 8027078:	e7a1      	b.n	8026fbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802707a:	b017      	add	sp, #92	@ 0x5c
 802707c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027080 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8027080:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027084:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8027088:	2d00      	cmp	r5, #0
 802708a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802708e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8027092:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8027096:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802709a:	fb05 0e03 	mla	lr, r5, r3, r0
 802709e:	f2c0 80b0 	blt.w	8027202 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80270a2:	45a9      	cmp	r9, r5
 80270a4:	f340 80ad 	ble.w	8027202 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80270a8:	2800      	cmp	r0, #0
 80270aa:	f2c0 80a8 	blt.w	80271fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80270ae:	4580      	cmp	r8, r0
 80270b0:	f340 80a5 	ble.w	80271fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80270b4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80270b8:	f01e 0f01 	tst.w	lr, #1
 80270bc:	5d16      	ldrb	r6, [r2, r4]
 80270be:	bf0c      	ite	eq
 80270c0:	f006 060f 	andeq.w	r6, r6, #15
 80270c4:	1136      	asrne	r6, r6, #4
 80270c6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80270ca:	b2f6      	uxtb	r6, r6
 80270cc:	1c44      	adds	r4, r0, #1
 80270ce:	f100 809b 	bmi.w	8027208 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80270d2:	45a0      	cmp	r8, r4
 80270d4:	f340 8098 	ble.w	8027208 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80270d8:	2f00      	cmp	r7, #0
 80270da:	f000 8097 	beq.w	802720c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80270de:	f10e 0a01 	add.w	sl, lr, #1
 80270e2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80270e6:	f01a 0f01 	tst.w	sl, #1
 80270ea:	5d14      	ldrb	r4, [r2, r4]
 80270ec:	bf0c      	ite	eq
 80270ee:	f004 040f 	andeq.w	r4, r4, #15
 80270f2:	1124      	asrne	r4, r4, #4
 80270f4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80270f8:	b2e4      	uxtb	r4, r4
 80270fa:	3501      	adds	r5, #1
 80270fc:	f100 808a 	bmi.w	8027214 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8027100:	45a9      	cmp	r9, r5
 8027102:	f340 8087 	ble.w	8027214 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8027106:	f1bc 0f00 	cmp.w	ip, #0
 802710a:	f000 8086 	beq.w	802721a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802710e:	2800      	cmp	r0, #0
 8027110:	db7e      	blt.n	8027210 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8027112:	4580      	cmp	r8, r0
 8027114:	dd7c      	ble.n	8027210 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8027116:	eb03 090e 	add.w	r9, r3, lr
 802711a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802711e:	f019 0f01 	tst.w	r9, #1
 8027122:	5d55      	ldrb	r5, [r2, r5]
 8027124:	bf0c      	ite	eq
 8027126:	f005 050f 	andeq.w	r5, r5, #15
 802712a:	112d      	asrne	r5, r5, #4
 802712c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8027130:	b2ed      	uxtb	r5, r5
 8027132:	3001      	adds	r0, #1
 8027134:	d474      	bmi.n	8027220 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8027136:	4580      	cmp	r8, r0
 8027138:	dd72      	ble.n	8027220 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802713a:	2f00      	cmp	r7, #0
 802713c:	d072      	beq.n	8027224 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802713e:	3301      	adds	r3, #1
 8027140:	449e      	add	lr, r3
 8027142:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8027146:	f01e 0f01 	tst.w	lr, #1
 802714a:	5cd0      	ldrb	r0, [r2, r3]
 802714c:	bf0c      	ite	eq
 802714e:	f000 000f 	andeq.w	r0, r0, #15
 8027152:	1100      	asrne	r0, r0, #4
 8027154:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027158:	b2c3      	uxtb	r3, r0
 802715a:	b2ba      	uxth	r2, r7
 802715c:	fa1f fc8c 	uxth.w	ip, ip
 8027160:	fb02 f00c 	mul.w	r0, r2, ip
 8027164:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8027168:	0112      	lsls	r2, r2, #4
 802716a:	fa1f fc8c 	uxth.w	ip, ip
 802716e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8027172:	1a12      	subs	r2, r2, r0
 8027174:	eba7 070c 	sub.w	r7, r7, ip
 8027178:	b292      	uxth	r2, r2
 802717a:	b2bf      	uxth	r7, r7
 802717c:	4362      	muls	r2, r4
 802717e:	fb06 2207 	mla	r2, r6, r7, r2
 8027182:	fb0c 2505 	mla	r5, ip, r5, r2
 8027186:	fb00 5303 	mla	r3, r0, r3, r5
 802718a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802718e:	b3a3      	cbz	r3, 80271fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8027190:	4a25      	ldr	r2, [pc, #148]	@ (8027228 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8027192:	880e      	ldrh	r6, [r1, #0]
 8027194:	6815      	ldr	r5, [r2, #0]
 8027196:	1234      	asrs	r4, r6, #8
 8027198:	b29a      	uxth	r2, r3
 802719a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802719e:	43db      	mvns	r3, r3
 80271a0:	b2db      	uxtb	r3, r3
 80271a2:	fb10 f002 	smulbb	r0, r0, r2
 80271a6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80271aa:	fb04 0403 	mla	r4, r4, r3, r0
 80271ae:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80271b2:	10f0      	asrs	r0, r6, #3
 80271b4:	b2ed      	uxtb	r5, r5
 80271b6:	00f6      	lsls	r6, r6, #3
 80271b8:	fb17 f702 	smulbb	r7, r7, r2
 80271bc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80271c0:	fb15 f202 	smulbb	r2, r5, r2
 80271c4:	b2f6      	uxtb	r6, r6
 80271c6:	b2a4      	uxth	r4, r4
 80271c8:	fb00 7003 	mla	r0, r0, r3, r7
 80271cc:	fb06 2303 	mla	r3, r6, r3, r2
 80271d0:	b29a      	uxth	r2, r3
 80271d2:	1c63      	adds	r3, r4, #1
 80271d4:	b280      	uxth	r0, r0
 80271d6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80271da:	1c53      	adds	r3, r2, #1
 80271dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80271e0:	1c42      	adds	r2, r0, #1
 80271e2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80271e6:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80271ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80271ee:	0940      	lsrs	r0, r0, #5
 80271f0:	4323      	orrs	r3, r4
 80271f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80271f6:	4303      	orrs	r3, r0
 80271f8:	800b      	strh	r3, [r1, #0]
 80271fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80271fe:	2600      	movs	r6, #0
 8027200:	e764      	b.n	80270cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8027202:	2400      	movs	r4, #0
 8027204:	4626      	mov	r6, r4
 8027206:	e778      	b.n	80270fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027208:	2400      	movs	r4, #0
 802720a:	e776      	b.n	80270fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802720c:	463c      	mov	r4, r7
 802720e:	e774      	b.n	80270fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027210:	2500      	movs	r5, #0
 8027212:	e78e      	b.n	8027132 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8027214:	2300      	movs	r3, #0
 8027216:	461d      	mov	r5, r3
 8027218:	e79f      	b.n	802715a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802721a:	4663      	mov	r3, ip
 802721c:	4665      	mov	r5, ip
 802721e:	e79c      	b.n	802715a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027220:	2300      	movs	r3, #0
 8027222:	e79a      	b.n	802715a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027224:	463b      	mov	r3, r7
 8027226:	e798      	b.n	802715a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027228:	20013f70 	.word	0x20013f70

0802722c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802722c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027230:	b093      	sub	sp, #76	@ 0x4c
 8027232:	461d      	mov	r5, r3
 8027234:	920c      	str	r2, [sp, #48]	@ 0x30
 8027236:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8027238:	9107      	str	r1, [sp, #28]
 802723a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802723e:	9011      	str	r0, [sp, #68]	@ 0x44
 8027240:	6850      	ldr	r0, [r2, #4]
 8027242:	6812      	ldr	r2, [r2, #0]
 8027244:	fb00 1303 	mla	r3, r0, r3, r1
 8027248:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802724c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802724e:	689b      	ldr	r3, [r3, #8]
 8027250:	3301      	adds	r3, #1
 8027252:	f023 0301 	bic.w	r3, r3, #1
 8027256:	9306      	str	r3, [sp, #24]
 8027258:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802725a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802725e:	681f      	ldr	r7, [r3, #0]
 8027260:	9b07      	ldr	r3, [sp, #28]
 8027262:	2b00      	cmp	r3, #0
 8027264:	dc03      	bgt.n	802726e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8027266:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027268:	2b00      	cmp	r3, #0
 802726a:	f340 8267 	ble.w	802773c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802726e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027270:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027274:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027278:	1e48      	subs	r0, r1, #1
 802727a:	f102 3cff 	add.w	ip, r2, #4294967295
 802727e:	2d00      	cmp	r5, #0
 8027280:	f340 80b8 	ble.w	80273f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8027284:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027288:	ea4f 4326 	mov.w	r3, r6, asr #16
 802728c:	d406      	bmi.n	802729c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802728e:	4586      	cmp	lr, r0
 8027290:	da04      	bge.n	802729c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8027292:	2b00      	cmp	r3, #0
 8027294:	db02      	blt.n	802729c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8027296:	4563      	cmp	r3, ip
 8027298:	f2c0 80ad 	blt.w	80273f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 802729c:	f11e 0e01 	adds.w	lr, lr, #1
 80272a0:	f100 80a0 	bmi.w	80273e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80272a4:	4571      	cmp	r1, lr
 80272a6:	f2c0 809d 	blt.w	80273e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80272aa:	3301      	adds	r3, #1
 80272ac:	f100 809a 	bmi.w	80273e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80272b0:	429a      	cmp	r2, r3
 80272b2:	f2c0 8097 	blt.w	80273e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80272b6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80272ba:	9509      	str	r5, [sp, #36]	@ 0x24
 80272bc:	46c8      	mov	r8, r9
 80272be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80272c0:	2b00      	cmp	r3, #0
 80272c2:	f340 80b6 	ble.w	8027432 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80272c6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80272ca:	9308      	str	r3, [sp, #32]
 80272cc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80272ce:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80272d2:	1423      	asrs	r3, r4, #16
 80272d4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80272d8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80272dc:	f100 813e 	bmi.w	802755c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80272e0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80272e4:	455b      	cmp	r3, fp
 80272e6:	f280 8139 	bge.w	802755c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80272ea:	2800      	cmp	r0, #0
 80272ec:	f2c0 8136 	blt.w	802755c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80272f0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80272f4:	4558      	cmp	r0, fp
 80272f6:	f280 8131 	bge.w	802755c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80272fa:	9a06      	ldr	r2, [sp, #24]
 80272fc:	fb00 3302 	mla	r3, r0, r2, r3
 8027300:	0858      	lsrs	r0, r3, #1
 8027302:	07da      	lsls	r2, r3, #31
 8027304:	f817 c000 	ldrb.w	ip, [r7, r0]
 8027308:	9a08      	ldr	r2, [sp, #32]
 802730a:	bf54      	ite	pl
 802730c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027310:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027314:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027318:	fa5f fc8c 	uxtb.w	ip, ip
 802731c:	2a00      	cmp	r2, #0
 802731e:	f000 80cb 	beq.w	80274b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8027322:	1c58      	adds	r0, r3, #1
 8027324:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8027328:	07c0      	lsls	r0, r0, #31
 802732a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802732e:	bf54      	ite	pl
 8027330:	f00e 0e0f 	andpl.w	lr, lr, #15
 8027334:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8027338:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802733c:	fa5f fe8e 	uxtb.w	lr, lr
 8027340:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8027344:	b1b9      	cbz	r1, 8027376 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8027346:	4453      	add	r3, sl
 8027348:	0858      	lsrs	r0, r3, #1
 802734a:	07da      	lsls	r2, r3, #31
 802734c:	5c38      	ldrb	r0, [r7, r0]
 802734e:	bf54      	ite	pl
 8027350:	f000 000f 	andpl.w	r0, r0, #15
 8027354:	1100      	asrmi	r0, r0, #4
 8027356:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802735a:	b2c0      	uxtb	r0, r0
 802735c:	900a      	str	r0, [sp, #40]	@ 0x28
 802735e:	1c58      	adds	r0, r3, #1
 8027360:	0843      	lsrs	r3, r0, #1
 8027362:	07c2      	lsls	r2, r0, #31
 8027364:	5cfb      	ldrb	r3, [r7, r3]
 8027366:	bf54      	ite	pl
 8027368:	f003 030f 	andpl.w	r3, r3, #15
 802736c:	111b      	asrmi	r3, r3, #4
 802736e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027372:	b2db      	uxtb	r3, r3
 8027374:	930e      	str	r3, [sp, #56]	@ 0x38
 8027376:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802737a:	b289      	uxth	r1, r1
 802737c:	fb02 f301 	mul.w	r3, r2, r1
 8027380:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8027384:	0112      	lsls	r2, r2, #4
 8027386:	b289      	uxth	r1, r1
 8027388:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802738c:	1a40      	subs	r0, r0, r1
 802738e:	fa1f fe80 	uxth.w	lr, r0
 8027392:	1ad2      	subs	r2, r2, r3
 8027394:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8027396:	b292      	uxth	r2, r2
 8027398:	4342      	muls	r2, r0
 802739a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802739e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80273a0:	fb01 c102 	mla	r1, r1, r2, ip
 80273a4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80273a6:	fb03 1302 	mla	r3, r3, r2, r1
 80273aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80273ae:	2bff      	cmp	r3, #255	@ 0xff
 80273b0:	f040 8093 	bne.w	80274da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80273b4:	4bbe      	ldr	r3, [pc, #760]	@ (80276b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80273b6:	681a      	ldr	r2, [r3, #0]
 80273b8:	4bbe      	ldr	r3, [pc, #760]	@ (80276b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80273ba:	0951      	lsrs	r1, r2, #5
 80273bc:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80273c0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80273c4:	430b      	orrs	r3, r1
 80273c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80273ca:	4313      	orrs	r3, r2
 80273cc:	f8a8 3000 	strh.w	r3, [r8]
 80273d0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80273d2:	441c      	add	r4, r3
 80273d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80273d6:	441e      	add	r6, r3
 80273d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80273da:	3b01      	subs	r3, #1
 80273dc:	f108 0802 	add.w	r8, r8, #2
 80273e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80273e2:	e76c      	b.n	80272be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80273e4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80273e6:	441c      	add	r4, r3
 80273e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80273ea:	3d01      	subs	r5, #1
 80273ec:	441e      	add	r6, r3
 80273ee:	f109 0902 	add.w	r9, r9, #2
 80273f2:	e744      	b.n	802727e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80273f4:	d021      	beq.n	802743a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80273f6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80273f8:	1e6b      	subs	r3, r5, #1
 80273fa:	fb00 4003 	mla	r0, r0, r3, r4
 80273fe:	1400      	asrs	r0, r0, #16
 8027400:	f53f af59 	bmi.w	80272b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027404:	3901      	subs	r1, #1
 8027406:	4288      	cmp	r0, r1
 8027408:	f6bf af55 	bge.w	80272b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802740c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802740e:	fb01 6303 	mla	r3, r1, r3, r6
 8027412:	141b      	asrs	r3, r3, #16
 8027414:	f53f af4f 	bmi.w	80272b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027418:	3a01      	subs	r2, #1
 802741a:	4293      	cmp	r3, r2
 802741c:	f6bf af4b 	bge.w	80272b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027420:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8027424:	9308      	str	r3, [sp, #32]
 8027426:	46a8      	mov	r8, r5
 8027428:	46ce      	mov	lr, r9
 802742a:	f1b8 0f00 	cmp.w	r8, #0
 802742e:	f300 80b5 	bgt.w	802759c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8027432:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027436:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802743a:	9b07      	ldr	r3, [sp, #28]
 802743c:	2b00      	cmp	r3, #0
 802743e:	f340 817d 	ble.w	802773c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8027442:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027446:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802744a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802744e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8027450:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027454:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027458:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802745c:	eef0 6a62 	vmov.f32	s13, s5
 8027460:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027464:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027468:	ee77 2a62 	vsub.f32	s5, s14, s5
 802746c:	ee16 4a90 	vmov	r4, s13
 8027470:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027474:	eef0 6a43 	vmov.f32	s13, s6
 8027478:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802747c:	ee12 2a90 	vmov	r2, s5
 8027480:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027484:	fb92 f3f3 	sdiv	r3, r2, r3
 8027488:	ee13 2a10 	vmov	r2, s6
 802748c:	931f      	str	r3, [sp, #124]	@ 0x7c
 802748e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8027490:	fb92 f3f3 	sdiv	r3, r2, r3
 8027494:	9320      	str	r3, [sp, #128]	@ 0x80
 8027496:	9b07      	ldr	r3, [sp, #28]
 8027498:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802749a:	3b01      	subs	r3, #1
 802749c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80274a0:	9307      	str	r3, [sp, #28]
 80274a2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80274a4:	ee16 6a90 	vmov	r6, s13
 80274a8:	bf14      	ite	ne
 80274aa:	461d      	movne	r5, r3
 80274ac:	4615      	moveq	r5, r2
 80274ae:	eeb0 3a67 	vmov.f32	s6, s15
 80274b2:	eef0 2a47 	vmov.f32	s5, s14
 80274b6:	e6d3      	b.n	8027260 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80274b8:	2900      	cmp	r1, #0
 80274ba:	f43f af5c 	beq.w	8027376 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80274be:	eb0a 0003 	add.w	r0, sl, r3
 80274c2:	0843      	lsrs	r3, r0, #1
 80274c4:	07c0      	lsls	r0, r0, #31
 80274c6:	5cfb      	ldrb	r3, [r7, r3]
 80274c8:	bf54      	ite	pl
 80274ca:	f003 030f 	andpl.w	r3, r3, #15
 80274ce:	111b      	asrmi	r3, r3, #4
 80274d0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80274d4:	b2db      	uxtb	r3, r3
 80274d6:	930a      	str	r3, [sp, #40]	@ 0x28
 80274d8:	e74d      	b.n	8027376 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80274da:	2b00      	cmp	r3, #0
 80274dc:	f43f af78 	beq.w	80273d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80274e0:	4a73      	ldr	r2, [pc, #460]	@ (80276b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80274e2:	f8b8 c000 	ldrh.w	ip, [r8]
 80274e6:	6810      	ldr	r0, [r2, #0]
 80274e8:	fa1f fe83 	uxth.w	lr, r3
 80274ec:	ea4f 212c 	mov.w	r1, ip, asr #8
 80274f0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80274f4:	43db      	mvns	r3, r3
 80274f6:	b2db      	uxtb	r3, r3
 80274f8:	fb12 f20e 	smulbb	r2, r2, lr
 80274fc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8027500:	fb01 2103 	mla	r1, r1, r3, r2
 8027504:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027508:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802750c:	b2c0      	uxtb	r0, r0
 802750e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8027512:	fb1b fb0e 	smulbb	fp, fp, lr
 8027516:	b289      	uxth	r1, r1
 8027518:	fb10 fe0e 	smulbb	lr, r0, lr
 802751c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8027520:	fa5f fc8c 	uxtb.w	ip, ip
 8027524:	fb02 b203 	mla	r2, r2, r3, fp
 8027528:	1c48      	adds	r0, r1, #1
 802752a:	fb0c e303 	mla	r3, ip, r3, lr
 802752e:	b292      	uxth	r2, r2
 8027530:	b29b      	uxth	r3, r3
 8027532:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8027536:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 802753a:	f102 0b01 	add.w	fp, r2, #1
 802753e:	1c59      	adds	r1, r3, #1
 8027540:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8027544:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8027548:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802754c:	0952      	lsrs	r2, r2, #5
 802754e:	4301      	orrs	r1, r0
 8027550:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027554:	4311      	orrs	r1, r2
 8027556:	f8a8 1000 	strh.w	r1, [r8]
 802755a:	e739      	b.n	80273d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802755c:	f113 0b01 	adds.w	fp, r3, #1
 8027560:	f53f af36 	bmi.w	80273d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027564:	45dc      	cmp	ip, fp
 8027566:	f6ff af33 	blt.w	80273d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802756a:	f110 0b01 	adds.w	fp, r0, #1
 802756e:	f53f af2f 	bmi.w	80273d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027572:	45de      	cmp	lr, fp
 8027574:	f6ff af2c 	blt.w	80273d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027578:	9a08      	ldr	r2, [sp, #32]
 802757a:	9302      	str	r3, [sp, #8]
 802757c:	fa0f f38e 	sxth.w	r3, lr
 8027580:	9301      	str	r3, [sp, #4]
 8027582:	fa0f f38c 	sxth.w	r3, ip
 8027586:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802758a:	9105      	str	r1, [sp, #20]
 802758c:	9300      	str	r3, [sp, #0]
 802758e:	463a      	mov	r2, r7
 8027590:	4653      	mov	r3, sl
 8027592:	4641      	mov	r1, r8
 8027594:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8027596:	f7ff fd73 	bl	8027080 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802759a:	e719      	b.n	80273d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802759c:	9906      	ldr	r1, [sp, #24]
 802759e:	1422      	asrs	r2, r4, #16
 80275a0:	1433      	asrs	r3, r6, #16
 80275a2:	fb01 2303 	mla	r3, r1, r3, r2
 80275a6:	085a      	lsrs	r2, r3, #1
 80275a8:	07d9      	lsls	r1, r3, #31
 80275aa:	5cba      	ldrb	r2, [r7, r2]
 80275ac:	bf54      	ite	pl
 80275ae:	f002 020f 	andpl.w	r2, r2, #15
 80275b2:	1112      	asrmi	r2, r2, #4
 80275b4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80275b8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80275bc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80275c0:	b2d2      	uxtb	r2, r2
 80275c2:	2800      	cmp	r0, #0
 80275c4:	d062      	beq.n	802768c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80275c6:	f103 0a01 	add.w	sl, r3, #1
 80275ca:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80275ce:	f01a 0f01 	tst.w	sl, #1
 80275d2:	5c79      	ldrb	r1, [r7, r1]
 80275d4:	bf0c      	ite	eq
 80275d6:	f001 010f 	andeq.w	r1, r1, #15
 80275da:	1109      	asrne	r1, r1, #4
 80275dc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80275e0:	b2c9      	uxtb	r1, r1
 80275e2:	910f      	str	r1, [sp, #60]	@ 0x3c
 80275e4:	f1bc 0f00 	cmp.w	ip, #0
 80275e8:	d019      	beq.n	802761e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80275ea:	9908      	ldr	r1, [sp, #32]
 80275ec:	440b      	add	r3, r1
 80275ee:	0859      	lsrs	r1, r3, #1
 80275f0:	f013 0f01 	tst.w	r3, #1
 80275f4:	5c79      	ldrb	r1, [r7, r1]
 80275f6:	bf0c      	ite	eq
 80275f8:	f001 010f 	andeq.w	r1, r1, #15
 80275fc:	1109      	asrne	r1, r1, #4
 80275fe:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027602:	b2c9      	uxtb	r1, r1
 8027604:	3301      	adds	r3, #1
 8027606:	910b      	str	r1, [sp, #44]	@ 0x2c
 8027608:	0859      	lsrs	r1, r3, #1
 802760a:	07db      	lsls	r3, r3, #31
 802760c:	5c79      	ldrb	r1, [r7, r1]
 802760e:	bf54      	ite	pl
 8027610:	f001 010f 	andpl.w	r1, r1, #15
 8027614:	1109      	asrmi	r1, r1, #4
 8027616:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802761a:	b2c9      	uxtb	r1, r1
 802761c:	9110      	str	r1, [sp, #64]	@ 0x40
 802761e:	b280      	uxth	r0, r0
 8027620:	fa1f fc8c 	uxth.w	ip, ip
 8027624:	fb00 f30c 	mul.w	r3, r0, ip
 8027628:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802762c:	0100      	lsls	r0, r0, #4
 802762e:	fa1f fc8c 	uxth.w	ip, ip
 8027632:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8027636:	eba1 010c 	sub.w	r1, r1, ip
 802763a:	fa1f fa81 	uxth.w	sl, r1
 802763e:	1ac0      	subs	r0, r0, r3
 8027640:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8027642:	b280      	uxth	r0, r0
 8027644:	4348      	muls	r0, r1
 8027646:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8027648:	fb02 020a 	mla	r2, r2, sl, r0
 802764c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8027650:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8027652:	fb03 c302 	mla	r3, r3, r2, ip
 8027656:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802765a:	2bff      	cmp	r3, #255	@ 0xff
 802765c:	d12c      	bne.n	80276b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802765e:	4b14      	ldr	r3, [pc, #80]	@ (80276b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027660:	681a      	ldr	r2, [r3, #0]
 8027662:	4b14      	ldr	r3, [pc, #80]	@ (80276b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8027664:	0951      	lsrs	r1, r2, #5
 8027666:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802766a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802766e:	430b      	orrs	r3, r1
 8027670:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027674:	4313      	orrs	r3, r2
 8027676:	f8ae 3000 	strh.w	r3, [lr]
 802767a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802767c:	441c      	add	r4, r3
 802767e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8027680:	f10e 0e02 	add.w	lr, lr, #2
 8027684:	441e      	add	r6, r3
 8027686:	f108 38ff 	add.w	r8, r8, #4294967295
 802768a:	e6ce      	b.n	802742a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802768c:	f1bc 0f00 	cmp.w	ip, #0
 8027690:	d0c5      	beq.n	802761e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8027692:	9908      	ldr	r1, [sp, #32]
 8027694:	440b      	add	r3, r1
 8027696:	0859      	lsrs	r1, r3, #1
 8027698:	07db      	lsls	r3, r3, #31
 802769a:	5c79      	ldrb	r1, [r7, r1]
 802769c:	bf54      	ite	pl
 802769e:	f001 010f 	andpl.w	r1, r1, #15
 80276a2:	1109      	asrmi	r1, r1, #4
 80276a4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80276a8:	b2c9      	uxtb	r1, r1
 80276aa:	910b      	str	r1, [sp, #44]	@ 0x2c
 80276ac:	e7b7      	b.n	802761e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80276ae:	bf00      	nop
 80276b0:	20013f70 	.word	0x20013f70
 80276b4:	fffff800 	.word	0xfffff800
 80276b8:	2b00      	cmp	r3, #0
 80276ba:	d0de      	beq.n	802767a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80276bc:	4a21      	ldr	r2, [pc, #132]	@ (8027744 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80276be:	f8be c000 	ldrh.w	ip, [lr]
 80276c2:	6810      	ldr	r0, [r2, #0]
 80276c4:	fa1f fa83 	uxth.w	sl, r3
 80276c8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80276cc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80276d0:	43db      	mvns	r3, r3
 80276d2:	b2db      	uxtb	r3, r3
 80276d4:	fb12 f20a 	smulbb	r2, r2, sl
 80276d8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80276dc:	fb01 2103 	mla	r1, r1, r3, r2
 80276e0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80276e4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80276e8:	b2c0      	uxtb	r0, r0
 80276ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80276ee:	fa5f fc8c 	uxtb.w	ip, ip
 80276f2:	fb10 f00a 	smulbb	r0, r0, sl
 80276f6:	fb0c 0003 	mla	r0, ip, r3, r0
 80276fa:	b289      	uxth	r1, r1
 80276fc:	fb1b fb0a 	smulbb	fp, fp, sl
 8027700:	b280      	uxth	r0, r0
 8027702:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8027706:	fb02 b203 	mla	r2, r2, r3, fp
 802770a:	1c4b      	adds	r3, r1, #1
 802770c:	f100 0b01 	add.w	fp, r0, #1
 8027710:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027714:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8027718:	b292      	uxth	r2, r2
 802771a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802771e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8027722:	ea4b 0101 	orr.w	r1, fp, r1
 8027726:	f102 0b01 	add.w	fp, r2, #1
 802772a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802772e:	0952      	lsrs	r2, r2, #5
 8027730:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027734:	4311      	orrs	r1, r2
 8027736:	f8ae 1000 	strh.w	r1, [lr]
 802773a:	e79e      	b.n	802767a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802773c:	b013      	add	sp, #76	@ 0x4c
 802773e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027742:	bf00      	nop
 8027744:	20013f70 	.word	0x20013f70

08027748 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8027748:	b570      	push	{r4, r5, r6, lr}
 802774a:	1208      	asrs	r0, r1, #8
 802774c:	b29e      	uxth	r6, r3
 802774e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8027752:	1213      	asrs	r3, r2, #8
 8027754:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8027758:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802775c:	fb13 f305 	smulbb	r3, r3, r5
 8027760:	fb10 f006 	smulbb	r0, r0, r6
 8027764:	4418      	add	r0, r3
 8027766:	10cc      	asrs	r4, r1, #3
 8027768:	10d3      	asrs	r3, r2, #3
 802776a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802776e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8027772:	fb13 f305 	smulbb	r3, r3, r5
 8027776:	fb14 f406 	smulbb	r4, r4, r6
 802777a:	00c9      	lsls	r1, r1, #3
 802777c:	00d2      	lsls	r2, r2, #3
 802777e:	441c      	add	r4, r3
 8027780:	b2d2      	uxtb	r2, r2
 8027782:	b2cb      	uxtb	r3, r1
 8027784:	fb12 f205 	smulbb	r2, r2, r5
 8027788:	b280      	uxth	r0, r0
 802778a:	fb13 f306 	smulbb	r3, r3, r6
 802778e:	4413      	add	r3, r2
 8027790:	1c42      	adds	r2, r0, #1
 8027792:	b29b      	uxth	r3, r3
 8027794:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027798:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 802779c:	1c58      	adds	r0, r3, #1
 802779e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80277a2:	b2a4      	uxth	r4, r4
 80277a4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80277a8:	4310      	orrs	r0, r2
 80277aa:	1c62      	adds	r2, r4, #1
 80277ac:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80277b0:	0964      	lsrs	r4, r4, #5
 80277b2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80277b6:	4320      	orrs	r0, r4
 80277b8:	bd70      	pop	{r4, r5, r6, pc}
	...

080277bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80277bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80277c0:	b08f      	sub	sp, #60	@ 0x3c
 80277c2:	461c      	mov	r4, r3
 80277c4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80277c8:	9004      	str	r0, [sp, #16]
 80277ca:	460d      	mov	r5, r1
 80277cc:	4616      	mov	r6, r2
 80277ce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80277d0:	2f00      	cmp	r7, #0
 80277d2:	f000 80f6 	beq.w	80279c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80277d6:	6820      	ldr	r0, [r4, #0]
 80277d8:	6861      	ldr	r1, [r4, #4]
 80277da:	aa0a      	add	r2, sp, #40	@ 0x28
 80277dc:	c203      	stmia	r2!, {r0, r1}
 80277de:	6818      	ldr	r0, [r3, #0]
 80277e0:	6859      	ldr	r1, [r3, #4]
 80277e2:	aa0c      	add	r2, sp, #48	@ 0x30
 80277e4:	c203      	stmia	r2!, {r0, r1}
 80277e6:	a80a      	add	r0, sp, #40	@ 0x28
 80277e8:	f7ee fb74 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80277ec:	4621      	mov	r1, r4
 80277ee:	a80c      	add	r0, sp, #48	@ 0x30
 80277f0:	f7ee fb98 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80277f4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80277f8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80277fc:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8027800:	f002 0301 	and.w	r3, r2, #1
 8027804:	9306      	str	r3, [sp, #24]
 8027806:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802780a:	f003 0101 	and.w	r1, r3, #1
 802780e:	9105      	str	r1, [sp, #20]
 8027810:	9805      	ldr	r0, [sp, #20]
 8027812:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8027816:	4403      	add	r3, r0
 8027818:	fb01 2303 	mla	r3, r1, r3, r2
 802781c:	f04f 0802 	mov.w	r8, #2
 8027820:	fb93 f3f8 	sdiv	r3, r3, r8
 8027824:	441d      	add	r5, r3
 8027826:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802782a:	441a      	add	r2, r3
 802782c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8027830:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8027834:	4419      	add	r1, r3
 8027836:	4b64      	ldr	r3, [pc, #400]	@ (80279c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8027838:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802783c:	6818      	ldr	r0, [r3, #0]
 802783e:	6803      	ldr	r3, [r0, #0]
 8027840:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8027842:	4798      	blx	r3
 8027844:	4a61      	ldr	r2, [pc, #388]	@ (80279cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8027846:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802784a:	8813      	ldrh	r3, [r2, #0]
 802784c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8027850:	2fff      	cmp	r7, #255	@ 0xff
 8027852:	fb03 a404 	mla	r4, r3, r4, sl
 8027856:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802785a:	f106 0604 	add.w	r6, r6, #4
 802785e:	4611      	mov	r1, r2
 8027860:	fb03 fb0b 	mul.w	fp, r3, fp
 8027864:	d06b      	beq.n	802793e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8027866:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802786a:	9303      	str	r3, [sp, #12]
 802786c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8027870:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027874:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8027878:	9b07      	ldr	r3, [sp, #28]
 802787a:	42a3      	cmp	r3, r4
 802787c:	f240 809c 	bls.w	80279b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8027880:	9b06      	ldr	r3, [sp, #24]
 8027882:	2b00      	cmp	r3, #0
 8027884:	d039      	beq.n	80278fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8027886:	782b      	ldrb	r3, [r5, #0]
 8027888:	8822      	ldrh	r2, [r4, #0]
 802788a:	9804      	ldr	r0, [sp, #16]
 802788c:	f003 030f 	and.w	r3, r3, #15
 8027890:	f105 0801 	add.w	r8, r5, #1
 8027894:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8027898:	9b03      	ldr	r3, [sp, #12]
 802789a:	9300      	str	r3, [sp, #0]
 802789c:	463b      	mov	r3, r7
 802789e:	f7ff ff53 	bl	8027748 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80278a2:	f824 0b02 	strh.w	r0, [r4], #2
 80278a6:	f109 3bff 	add.w	fp, r9, #4294967295
 80278aa:	f1bb 0f01 	cmp.w	fp, #1
 80278ae:	46a2      	mov	sl, r4
 80278b0:	f104 0404 	add.w	r4, r4, #4
 80278b4:	dd24      	ble.n	8027900 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80278b6:	f898 3000 	ldrb.w	r3, [r8]
 80278ba:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80278be:	9804      	ldr	r0, [sp, #16]
 80278c0:	091b      	lsrs	r3, r3, #4
 80278c2:	f1ab 0b02 	sub.w	fp, fp, #2
 80278c6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80278ca:	9b03      	ldr	r3, [sp, #12]
 80278cc:	9300      	str	r3, [sp, #0]
 80278ce:	463b      	mov	r3, r7
 80278d0:	f7ff ff3a 	bl	8027748 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80278d4:	f824 0c04 	strh.w	r0, [r4, #-4]
 80278d8:	f818 3b01 	ldrb.w	r3, [r8], #1
 80278dc:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80278e0:	9804      	ldr	r0, [sp, #16]
 80278e2:	f003 030f 	and.w	r3, r3, #15
 80278e6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80278ea:	9b03      	ldr	r3, [sp, #12]
 80278ec:	9300      	str	r3, [sp, #0]
 80278ee:	463b      	mov	r3, r7
 80278f0:	f7ff ff2a 	bl	8027748 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80278f4:	f824 0c02 	strh.w	r0, [r4, #-2]
 80278f8:	e7d7      	b.n	80278aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80278fa:	46a8      	mov	r8, r5
 80278fc:	46cb      	mov	fp, r9
 80278fe:	e7d4      	b.n	80278aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8027900:	d10e      	bne.n	8027920 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8027902:	f898 3000 	ldrb.w	r3, [r8]
 8027906:	f8ba 2000 	ldrh.w	r2, [sl]
 802790a:	9804      	ldr	r0, [sp, #16]
 802790c:	091b      	lsrs	r3, r3, #4
 802790e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8027912:	9b03      	ldr	r3, [sp, #12]
 8027914:	9300      	str	r3, [sp, #0]
 8027916:	463b      	mov	r3, r7
 8027918:	f7ff ff16 	bl	8027748 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802791c:	f82a 0b02 	strh.w	r0, [sl], #2
 8027920:	9b08      	ldr	r3, [sp, #32]
 8027922:	9a05      	ldr	r2, [sp, #20]
 8027924:	881c      	ldrh	r4, [r3, #0]
 8027926:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802792a:	eba4 0409 	sub.w	r4, r4, r9
 802792e:	4413      	add	r3, r2
 8027930:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8027934:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8027936:	fb93 f3f2 	sdiv	r3, r3, r2
 802793a:	441d      	add	r5, r3
 802793c:	e79c      	b.n	8027878 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802793e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8027942:	45a3      	cmp	fp, r4
 8027944:	d938      	bls.n	80279b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8027946:	9b06      	ldr	r3, [sp, #24]
 8027948:	b1f3      	cbz	r3, 8027988 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802794a:	782b      	ldrb	r3, [r5, #0]
 802794c:	f003 030f 	and.w	r3, r3, #15
 8027950:	1c6a      	adds	r2, r5, #1
 8027952:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027956:	8023      	strh	r3, [r4, #0]
 8027958:	f109 30ff 	add.w	r0, r9, #4294967295
 802795c:	3402      	adds	r4, #2
 802795e:	2801      	cmp	r0, #1
 8027960:	4623      	mov	r3, r4
 8027962:	f104 0404 	add.w	r4, r4, #4
 8027966:	dd12      	ble.n	802798e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8027968:	7813      	ldrb	r3, [r2, #0]
 802796a:	091b      	lsrs	r3, r3, #4
 802796c:	3802      	subs	r0, #2
 802796e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027972:	f824 3c04 	strh.w	r3, [r4, #-4]
 8027976:	f812 3b01 	ldrb.w	r3, [r2], #1
 802797a:	f003 030f 	and.w	r3, r3, #15
 802797e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027982:	f824 3c02 	strh.w	r3, [r4, #-2]
 8027986:	e7ea      	b.n	802795e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8027988:	462a      	mov	r2, r5
 802798a:	4648      	mov	r0, r9
 802798c:	e7e7      	b.n	802795e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802798e:	d106      	bne.n	802799e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8027990:	7812      	ldrb	r2, [r2, #0]
 8027992:	0912      	lsrs	r2, r2, #4
 8027994:	3302      	adds	r3, #2
 8027996:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802799a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802799e:	880c      	ldrh	r4, [r1, #0]
 80279a0:	9a05      	ldr	r2, [sp, #20]
 80279a2:	eba4 0409 	sub.w	r4, r4, r9
 80279a6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80279aa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80279ae:	4413      	add	r3, r2
 80279b0:	fb93 f3f8 	sdiv	r3, r3, r8
 80279b4:	441d      	add	r5, r3
 80279b6:	e7c4      	b.n	8027942 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80279b8:	4b03      	ldr	r3, [pc, #12]	@ (80279c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80279ba:	6818      	ldr	r0, [r3, #0]
 80279bc:	6803      	ldr	r3, [r0, #0]
 80279be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80279c0:	4798      	blx	r3
 80279c2:	b00f      	add	sp, #60	@ 0x3c
 80279c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80279c8:	20013f60 	.word	0x20013f60
 80279cc:	20013f5a 	.word	0x20013f5a

080279d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80279d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80279d2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80279d6:	2dff      	cmp	r5, #255	@ 0xff
 80279d8:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80279dc:	d10c      	bne.n	80279f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80279de:	2bff      	cmp	r3, #255	@ 0xff
 80279e0:	d10a      	bne.n	80279f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80279e2:	4b25      	ldr	r3, [pc, #148]	@ (8027a78 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80279e4:	0948      	lsrs	r0, r1, #5
 80279e6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80279ea:	403b      	ands	r3, r7
 80279ec:	4318      	orrs	r0, r3
 80279ee:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80279f2:	4308      	orrs	r0, r1
 80279f4:	b280      	uxth	r0, r0
 80279f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80279f8:	fb15 f503 	smulbb	r5, r5, r3
 80279fc:	b2ab      	uxth	r3, r5
 80279fe:	1c5d      	adds	r5, r3, #1
 8027a00:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8027a04:	1214      	asrs	r4, r2, #8
 8027a06:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8027a0a:	fa1f fc85 	uxth.w	ip, r5
 8027a0e:	10d6      	asrs	r6, r2, #3
 8027a10:	00d0      	lsls	r0, r2, #3
 8027a12:	43ed      	mvns	r5, r5
 8027a14:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8027a18:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8027a1c:	b2eb      	uxtb	r3, r5
 8027a1e:	b2c0      	uxtb	r0, r0
 8027a20:	fb12 f20c 	smulbb	r2, r2, ip
 8027a24:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8027a28:	fb04 2403 	mla	r4, r4, r3, r2
 8027a2c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8027a30:	b2c8      	uxtb	r0, r1
 8027a32:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8027a36:	b2fd      	uxtb	r5, r7
 8027a38:	fb10 f00c 	smulbb	r0, r0, ip
 8027a3c:	b2a4      	uxth	r4, r4
 8027a3e:	fb02 0003 	mla	r0, r2, r3, r0
 8027a42:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8027a46:	fb15 f50c 	smulbb	r5, r5, ip
 8027a4a:	fb06 5503 	mla	r5, r6, r3, r5
 8027a4e:	b283      	uxth	r3, r0
 8027a50:	1c60      	adds	r0, r4, #1
 8027a52:	b2ad      	uxth	r5, r5
 8027a54:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8027a58:	1c58      	adds	r0, r3, #1
 8027a5a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027a5e:	1c6b      	adds	r3, r5, #1
 8027a60:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027a64:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8027a68:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027a6c:	096d      	lsrs	r5, r5, #5
 8027a6e:	4320      	orrs	r0, r4
 8027a70:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8027a74:	4328      	orrs	r0, r5
 8027a76:	e7be      	b.n	80279f6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8027a78:	00fff800 	.word	0x00fff800

08027a7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8027a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a80:	461c      	mov	r4, r3
 8027a82:	b08d      	sub	sp, #52	@ 0x34
 8027a84:	460d      	mov	r5, r1
 8027a86:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8027a88:	6861      	ldr	r1, [r4, #4]
 8027a8a:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8027a8e:	4680      	mov	r8, r0
 8027a90:	6820      	ldr	r0, [r4, #0]
 8027a92:	4616      	mov	r6, r2
 8027a94:	aa08      	add	r2, sp, #32
 8027a96:	c203      	stmia	r2!, {r0, r1}
 8027a98:	6818      	ldr	r0, [r3, #0]
 8027a9a:	6859      	ldr	r1, [r3, #4]
 8027a9c:	aa0a      	add	r2, sp, #40	@ 0x28
 8027a9e:	c203      	stmia	r2!, {r0, r1}
 8027aa0:	a808      	add	r0, sp, #32
 8027aa2:	f7ee fa17 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027aa6:	4621      	mov	r1, r4
 8027aa8:	a80a      	add	r0, sp, #40	@ 0x28
 8027aaa:	f7ee fa3b 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027aae:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8027ab2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8027ab6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8027aba:	f002 0301 	and.w	r3, r2, #1
 8027abe:	9303      	str	r3, [sp, #12]
 8027ac0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8027ac4:	f003 0101 	and.w	r1, r3, #1
 8027ac8:	9102      	str	r1, [sp, #8]
 8027aca:	9802      	ldr	r0, [sp, #8]
 8027acc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8027ad0:	4403      	add	r3, r0
 8027ad2:	fb01 2303 	mla	r3, r1, r3, r2
 8027ad6:	f04f 0a02 	mov.w	sl, #2
 8027ada:	fb93 f3fa 	sdiv	r3, r3, sl
 8027ade:	441d      	add	r5, r3
 8027ae0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8027ae4:	441a      	add	r2, r3
 8027ae6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8027aea:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8027aee:	4a3f      	ldr	r2, [pc, #252]	@ (8027bec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8027af0:	9205      	str	r2, [sp, #20]
 8027af2:	4419      	add	r1, r3
 8027af4:	6810      	ldr	r0, [r2, #0]
 8027af6:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8027afa:	6803      	ldr	r3, [r0, #0]
 8027afc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8027afe:	4798      	blx	r3
 8027b00:	4b3b      	ldr	r3, [pc, #236]	@ (8027bf0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8027b02:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8027b06:	8819      	ldrh	r1, [r3, #0]
 8027b08:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8027b0c:	fb01 c404 	mla	r4, r1, r4, ip
 8027b10:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027b14:	434f      	muls	r7, r1
 8027b16:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8027b1a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8027b1e:	3604      	adds	r6, #4
 8027b20:	9204      	str	r2, [sp, #16]
 8027b22:	9b04      	ldr	r3, [sp, #16]
 8027b24:	429c      	cmp	r4, r3
 8027b26:	d258      	bcs.n	8027bda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8027b28:	9b03      	ldr	r3, [sp, #12]
 8027b2a:	2b00      	cmp	r3, #0
 8027b2c:	d034      	beq.n	8027b98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8027b2e:	782b      	ldrb	r3, [r5, #0]
 8027b30:	f003 030f 	and.w	r3, r3, #15
 8027b34:	1c6f      	adds	r7, r5, #1
 8027b36:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027b3a:	0e0b      	lsrs	r3, r1, #24
 8027b3c:	d006      	beq.n	8027b4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8027b3e:	8822      	ldrh	r2, [r4, #0]
 8027b40:	9300      	str	r3, [sp, #0]
 8027b42:	4640      	mov	r0, r8
 8027b44:	464b      	mov	r3, r9
 8027b46:	f7ff ff43 	bl	80279d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027b4a:	8020      	strh	r0, [r4, #0]
 8027b4c:	3402      	adds	r4, #2
 8027b4e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8027b52:	f1ba 0f01 	cmp.w	sl, #1
 8027b56:	dd22      	ble.n	8027b9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8027b58:	783b      	ldrb	r3, [r7, #0]
 8027b5a:	091b      	lsrs	r3, r3, #4
 8027b5c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027b60:	0e0b      	lsrs	r3, r1, #24
 8027b62:	d006      	beq.n	8027b72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8027b64:	8822      	ldrh	r2, [r4, #0]
 8027b66:	9300      	str	r3, [sp, #0]
 8027b68:	4640      	mov	r0, r8
 8027b6a:	464b      	mov	r3, r9
 8027b6c:	f7ff ff30 	bl	80279d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027b70:	8020      	strh	r0, [r4, #0]
 8027b72:	f817 3b01 	ldrb.w	r3, [r7], #1
 8027b76:	f003 030f 	and.w	r3, r3, #15
 8027b7a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027b7e:	0e0b      	lsrs	r3, r1, #24
 8027b80:	d006      	beq.n	8027b90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8027b82:	8862      	ldrh	r2, [r4, #2]
 8027b84:	9300      	str	r3, [sp, #0]
 8027b86:	4640      	mov	r0, r8
 8027b88:	464b      	mov	r3, r9
 8027b8a:	f7ff ff21 	bl	80279d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027b8e:	8060      	strh	r0, [r4, #2]
 8027b90:	3404      	adds	r4, #4
 8027b92:	f1aa 0a02 	sub.w	sl, sl, #2
 8027b96:	e7dc      	b.n	8027b52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027b98:	462f      	mov	r7, r5
 8027b9a:	46da      	mov	sl, fp
 8027b9c:	e7d9      	b.n	8027b52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027b9e:	d10d      	bne.n	8027bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8027ba0:	783b      	ldrb	r3, [r7, #0]
 8027ba2:	091b      	lsrs	r3, r3, #4
 8027ba4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027ba8:	0e0b      	lsrs	r3, r1, #24
 8027baa:	d006      	beq.n	8027bba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8027bac:	8822      	ldrh	r2, [r4, #0]
 8027bae:	9300      	str	r3, [sp, #0]
 8027bb0:	4640      	mov	r0, r8
 8027bb2:	464b      	mov	r3, r9
 8027bb4:	f7ff ff0c 	bl	80279d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027bb8:	8020      	strh	r0, [r4, #0]
 8027bba:	3402      	adds	r4, #2
 8027bbc:	9b06      	ldr	r3, [sp, #24]
 8027bbe:	9a02      	ldr	r2, [sp, #8]
 8027bc0:	881b      	ldrh	r3, [r3, #0]
 8027bc2:	eba3 030b 	sub.w	r3, r3, fp
 8027bc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8027bca:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8027bce:	4413      	add	r3, r2
 8027bd0:	9a07      	ldr	r2, [sp, #28]
 8027bd2:	fb93 f3f2 	sdiv	r3, r3, r2
 8027bd6:	441d      	add	r5, r3
 8027bd8:	e7a3      	b.n	8027b22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8027bda:	9b05      	ldr	r3, [sp, #20]
 8027bdc:	6818      	ldr	r0, [r3, #0]
 8027bde:	6803      	ldr	r3, [r0, #0]
 8027be0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027be2:	4798      	blx	r3
 8027be4:	b00d      	add	sp, #52	@ 0x34
 8027be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027bea:	bf00      	nop
 8027bec:	20013f60 	.word	0x20013f60
 8027bf0:	20013f5a 	.word	0x20013f5a

08027bf4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8027bf4:	b570      	push	{r4, r5, r6, lr}
 8027bf6:	1214      	asrs	r4, r2, #8
 8027bf8:	788d      	ldrb	r5, [r1, #2]
 8027bfa:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8027bfe:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8027c02:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8027c06:	fb15 f503 	smulbb	r5, r5, r3
 8027c0a:	fb04 5506 	mla	r5, r4, r6, r5
 8027c0e:	10d0      	asrs	r0, r2, #3
 8027c10:	784c      	ldrb	r4, [r1, #1]
 8027c12:	7809      	ldrb	r1, [r1, #0]
 8027c14:	00d2      	lsls	r2, r2, #3
 8027c16:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8027c1a:	b2d2      	uxtb	r2, r2
 8027c1c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8027c20:	fb14 f403 	smulbb	r4, r4, r3
 8027c24:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8027c28:	fb11 f303 	smulbb	r3, r1, r3
 8027c2c:	fb00 4406 	mla	r4, r0, r6, r4
 8027c30:	fb02 3306 	mla	r3, r2, r6, r3
 8027c34:	b2ad      	uxth	r5, r5
 8027c36:	b29b      	uxth	r3, r3
 8027c38:	b2a4      	uxth	r4, r4
 8027c3a:	1c68      	adds	r0, r5, #1
 8027c3c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8027c40:	1c62      	adds	r2, r4, #1
 8027c42:	1c58      	adds	r0, r3, #1
 8027c44:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027c48:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8027c4c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8027c50:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027c54:	0964      	lsrs	r4, r4, #5
 8027c56:	4328      	orrs	r0, r5
 8027c58:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8027c5c:	4320      	orrs	r0, r4
 8027c5e:	bd70      	pop	{r4, r5, r6, pc}

08027c60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8027c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c64:	b08f      	sub	sp, #60	@ 0x3c
 8027c66:	461c      	mov	r4, r3
 8027c68:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8027c6c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8027c6e:	4682      	mov	sl, r0
 8027c70:	460e      	mov	r6, r1
 8027c72:	4615      	mov	r5, r2
 8027c74:	2f00      	cmp	r7, #0
 8027c76:	f000 8142 	beq.w	8027efe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8027c7a:	6820      	ldr	r0, [r4, #0]
 8027c7c:	6861      	ldr	r1, [r4, #4]
 8027c7e:	aa0a      	add	r2, sp, #40	@ 0x28
 8027c80:	c203      	stmia	r2!, {r0, r1}
 8027c82:	6818      	ldr	r0, [r3, #0]
 8027c84:	6859      	ldr	r1, [r3, #4]
 8027c86:	aa0c      	add	r2, sp, #48	@ 0x30
 8027c88:	c203      	stmia	r2!, {r0, r1}
 8027c8a:	a80a      	add	r0, sp, #40	@ 0x28
 8027c8c:	f7ee f922 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027c90:	4621      	mov	r1, r4
 8027c92:	a80c      	add	r0, sp, #48	@ 0x30
 8027c94:	f7ee f946 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027c98:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8027c9c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8027ca0:	f002 0301 	and.w	r3, r2, #1
 8027ca4:	9306      	str	r3, [sp, #24]
 8027ca6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8027caa:	f003 0101 	and.w	r1, r3, #1
 8027cae:	9105      	str	r1, [sp, #20]
 8027cb0:	9805      	ldr	r0, [sp, #20]
 8027cb2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8027cb6:	4403      	add	r3, r0
 8027cb8:	fb01 2303 	mla	r3, r1, r3, r2
 8027cbc:	f04f 0802 	mov.w	r8, #2
 8027cc0:	fb93 f3f8 	sdiv	r3, r3, r8
 8027cc4:	441e      	add	r6, r3
 8027cc6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8027cca:	441a      	add	r2, r3
 8027ccc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8027cd0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8027cd4:	4419      	add	r1, r3
 8027cd6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8027cda:	9303      	str	r3, [sp, #12]
 8027cdc:	4b89      	ldr	r3, [pc, #548]	@ (8027f04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027cde:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8027ce2:	6818      	ldr	r0, [r3, #0]
 8027ce4:	6803      	ldr	r3, [r0, #0]
 8027ce6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8027ce8:	4798      	blx	r3
 8027cea:	4a87      	ldr	r2, [pc, #540]	@ (8027f08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8027cec:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8027cf0:	8813      	ldrh	r3, [r2, #0]
 8027cf2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8027cf6:	2fff      	cmp	r7, #255	@ 0xff
 8027cf8:	fb03 9404 	mla	r4, r3, r4, r9
 8027cfc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027d00:	f105 0504 	add.w	r5, r5, #4
 8027d04:	4694      	mov	ip, r2
 8027d06:	fb03 f30b 	mul.w	r3, r3, fp
 8027d0a:	d071      	beq.n	8027df0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8027d0c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027d10:	43f9      	mvns	r1, r7
 8027d12:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027d16:	b2c9      	uxtb	r1, r1
 8027d18:	9104      	str	r1, [sp, #16]
 8027d1a:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8027d1e:	9b07      	ldr	r3, [sp, #28]
 8027d20:	42a3      	cmp	r3, r4
 8027d22:	f240 80e7 	bls.w	8027ef4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8027d26:	9b06      	ldr	r3, [sp, #24]
 8027d28:	2b00      	cmp	r3, #0
 8027d2a:	d03d      	beq.n	8027da8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8027d2c:	7831      	ldrb	r1, [r6, #0]
 8027d2e:	9b04      	ldr	r3, [sp, #16]
 8027d30:	8822      	ldrh	r2, [r4, #0]
 8027d32:	9300      	str	r3, [sp, #0]
 8027d34:	f001 010f 	and.w	r1, r1, #15
 8027d38:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027d3c:	463b      	mov	r3, r7
 8027d3e:	4429      	add	r1, r5
 8027d40:	4650      	mov	r0, sl
 8027d42:	f7ff ff57 	bl	8027bf4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027d46:	9b03      	ldr	r3, [sp, #12]
 8027d48:	f824 0b02 	strh.w	r0, [r4], #2
 8027d4c:	f106 0801 	add.w	r8, r6, #1
 8027d50:	f103 3bff 	add.w	fp, r3, #4294967295
 8027d54:	f1bb 0f01 	cmp.w	fp, #1
 8027d58:	46a1      	mov	r9, r4
 8027d5a:	f104 0404 	add.w	r4, r4, #4
 8027d5e:	dd27      	ble.n	8027db0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8027d60:	f898 1000 	ldrb.w	r1, [r8]
 8027d64:	9b04      	ldr	r3, [sp, #16]
 8027d66:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8027d6a:	9300      	str	r3, [sp, #0]
 8027d6c:	0909      	lsrs	r1, r1, #4
 8027d6e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027d72:	463b      	mov	r3, r7
 8027d74:	4429      	add	r1, r5
 8027d76:	4650      	mov	r0, sl
 8027d78:	f7ff ff3c 	bl	8027bf4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027d7c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027d80:	f818 1b01 	ldrb.w	r1, [r8], #1
 8027d84:	9b04      	ldr	r3, [sp, #16]
 8027d86:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027d8a:	9300      	str	r3, [sp, #0]
 8027d8c:	f001 010f 	and.w	r1, r1, #15
 8027d90:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027d94:	463b      	mov	r3, r7
 8027d96:	4429      	add	r1, r5
 8027d98:	4650      	mov	r0, sl
 8027d9a:	f7ff ff2b 	bl	8027bf4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027d9e:	f1ab 0b02 	sub.w	fp, fp, #2
 8027da2:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027da6:	e7d5      	b.n	8027d54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027da8:	46b0      	mov	r8, r6
 8027daa:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8027dae:	e7d1      	b.n	8027d54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027db0:	d10f      	bne.n	8027dd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8027db2:	f898 1000 	ldrb.w	r1, [r8]
 8027db6:	9b04      	ldr	r3, [sp, #16]
 8027db8:	f8b9 2000 	ldrh.w	r2, [r9]
 8027dbc:	9300      	str	r3, [sp, #0]
 8027dbe:	0909      	lsrs	r1, r1, #4
 8027dc0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027dc4:	463b      	mov	r3, r7
 8027dc6:	4429      	add	r1, r5
 8027dc8:	4650      	mov	r0, sl
 8027dca:	f7ff ff13 	bl	8027bf4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027dce:	f829 0b02 	strh.w	r0, [r9], #2
 8027dd2:	9b08      	ldr	r3, [sp, #32]
 8027dd4:	9a05      	ldr	r2, [sp, #20]
 8027dd6:	881c      	ldrh	r4, [r3, #0]
 8027dd8:	9b03      	ldr	r3, [sp, #12]
 8027dda:	1ae4      	subs	r4, r4, r3
 8027ddc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8027de0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8027de4:	4413      	add	r3, r2
 8027de6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8027de8:	fb93 f3f2 	sdiv	r3, r3, r2
 8027dec:	441e      	add	r6, r3
 8027dee:	e796      	b.n	8027d1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8027df0:	4f46      	ldr	r7, [pc, #280]	@ (8027f0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8027df2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027df6:	42a3      	cmp	r3, r4
 8027df8:	d97c      	bls.n	8027ef4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8027dfa:	9a06      	ldr	r2, [sp, #24]
 8027dfc:	2a00      	cmp	r2, #0
 8027dfe:	d054      	beq.n	8027eaa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8027e00:	7830      	ldrb	r0, [r6, #0]
 8027e02:	f000 000f 	and.w	r0, r0, #15
 8027e06:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027e0a:	eb05 0e00 	add.w	lr, r5, r0
 8027e0e:	5c28      	ldrb	r0, [r5, r0]
 8027e10:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8027e14:	f89e e001 	ldrb.w	lr, [lr, #1]
 8027e18:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027e1c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8027e20:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027e24:	ea42 020e 	orr.w	r2, r2, lr
 8027e28:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8027e2c:	f824 2b02 	strh.w	r2, [r4], #2
 8027e30:	9a03      	ldr	r2, [sp, #12]
 8027e32:	1c71      	adds	r1, r6, #1
 8027e34:	f102 3eff 	add.w	lr, r2, #4294967295
 8027e38:	f1be 0f01 	cmp.w	lr, #1
 8027e3c:	4620      	mov	r0, r4
 8027e3e:	f104 0404 	add.w	r4, r4, #4
 8027e42:	dd36      	ble.n	8027eb2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8027e44:	7808      	ldrb	r0, [r1, #0]
 8027e46:	0900      	lsrs	r0, r0, #4
 8027e48:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027e4c:	eb05 0a00 	add.w	sl, r5, r0
 8027e50:	f1ae 0e02 	sub.w	lr, lr, #2
 8027e54:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027e58:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027e5c:	00d2      	lsls	r2, r2, #3
 8027e5e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027e62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027e66:	ea49 0202 	orr.w	r2, r9, r2
 8027e6a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027e6e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027e72:	f824 2c04 	strh.w	r2, [r4, #-4]
 8027e76:	f811 0b01 	ldrb.w	r0, [r1], #1
 8027e7a:	f000 000f 	and.w	r0, r0, #15
 8027e7e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027e82:	eb05 0a00 	add.w	sl, r5, r0
 8027e86:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027e8a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027e8e:	00d2      	lsls	r2, r2, #3
 8027e90:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027e94:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027e98:	ea49 0202 	orr.w	r2, r9, r2
 8027e9c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027ea0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027ea4:	f824 2c02 	strh.w	r2, [r4, #-2]
 8027ea8:	e7c6      	b.n	8027e38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027eaa:	4631      	mov	r1, r6
 8027eac:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8027eb0:	e7c2      	b.n	8027e38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027eb2:	d111      	bne.n	8027ed8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8027eb4:	7809      	ldrb	r1, [r1, #0]
 8027eb6:	0909      	lsrs	r1, r1, #4
 8027eb8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027ebc:	186c      	adds	r4, r5, r1
 8027ebe:	5c69      	ldrb	r1, [r5, r1]
 8027ec0:	78a2      	ldrb	r2, [r4, #2]
 8027ec2:	7864      	ldrb	r4, [r4, #1]
 8027ec4:	00e4      	lsls	r4, r4, #3
 8027ec6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027eca:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8027ece:	4322      	orrs	r2, r4
 8027ed0:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8027ed4:	f820 2b02 	strh.w	r2, [r0], #2
 8027ed8:	9a03      	ldr	r2, [sp, #12]
 8027eda:	f8bc 4000 	ldrh.w	r4, [ip]
 8027ede:	9905      	ldr	r1, [sp, #20]
 8027ee0:	1aa4      	subs	r4, r4, r2
 8027ee2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8027ee6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027eea:	440a      	add	r2, r1
 8027eec:	fb92 f2f8 	sdiv	r2, r2, r8
 8027ef0:	4416      	add	r6, r2
 8027ef2:	e780      	b.n	8027df6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8027ef4:	4b03      	ldr	r3, [pc, #12]	@ (8027f04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027ef6:	6818      	ldr	r0, [r3, #0]
 8027ef8:	6803      	ldr	r3, [r0, #0]
 8027efa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027efc:	4798      	blx	r3
 8027efe:	b00f      	add	sp, #60	@ 0x3c
 8027f00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027f04:	20013f60 	.word	0x20013f60
 8027f08:	20013f5a 	.word	0x20013f5a
 8027f0c:	fffff800 	.word	0xfffff800

08027f10 <CRC_Lock>:
 8027f10:	b530      	push	{r4, r5, lr}
 8027f12:	4a2d      	ldr	r2, [pc, #180]	@ (8027fc8 <CRC_Lock+0xb8>)
 8027f14:	6813      	ldr	r3, [r2, #0]
 8027f16:	f023 0301 	bic.w	r3, r3, #1
 8027f1a:	6013      	str	r3, [r2, #0]
 8027f1c:	4b2b      	ldr	r3, [pc, #172]	@ (8027fcc <CRC_Lock+0xbc>)
 8027f1e:	681c      	ldr	r4, [r3, #0]
 8027f20:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8027f24:	4014      	ands	r4, r2
 8027f26:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8027f2a:	42ac      	cmp	r4, r5
 8027f2c:	d005      	beq.n	8027f3a <CRC_Lock+0x2a>
 8027f2e:	681c      	ldr	r4, [r3, #0]
 8027f30:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8027f34:	4014      	ands	r4, r2
 8027f36:	42ac      	cmp	r4, r5
 8027f38:	d125      	bne.n	8027f86 <CRC_Lock+0x76>
 8027f3a:	4b25      	ldr	r3, [pc, #148]	@ (8027fd0 <CRC_Lock+0xc0>)
 8027f3c:	681b      	ldr	r3, [r3, #0]
 8027f3e:	2b00      	cmp	r3, #0
 8027f40:	d139      	bne.n	8027fb6 <CRC_Lock+0xa6>
 8027f42:	4b24      	ldr	r3, [pc, #144]	@ (8027fd4 <CRC_Lock+0xc4>)
 8027f44:	681a      	ldr	r2, [r3, #0]
 8027f46:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027f4a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8027f4e:	d00d      	beq.n	8027f6c <CRC_Lock+0x5c>
 8027f50:	681a      	ldr	r2, [r3, #0]
 8027f52:	f240 4483 	movw	r4, #1155	@ 0x483
 8027f56:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027f5a:	42a2      	cmp	r2, r4
 8027f5c:	d006      	beq.n	8027f6c <CRC_Lock+0x5c>
 8027f5e:	681b      	ldr	r3, [r3, #0]
 8027f60:	f240 4285 	movw	r2, #1157	@ 0x485
 8027f64:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027f68:	4293      	cmp	r3, r2
 8027f6a:	d124      	bne.n	8027fb6 <CRC_Lock+0xa6>
 8027f6c:	4b1a      	ldr	r3, [pc, #104]	@ (8027fd8 <CRC_Lock+0xc8>)
 8027f6e:	2201      	movs	r2, #1
 8027f70:	601a      	str	r2, [r3, #0]
 8027f72:	681a      	ldr	r2, [r3, #0]
 8027f74:	2a00      	cmp	r2, #0
 8027f76:	d1fc      	bne.n	8027f72 <CRC_Lock+0x62>
 8027f78:	4b18      	ldr	r3, [pc, #96]	@ (8027fdc <CRC_Lock+0xcc>)
 8027f7a:	6018      	str	r0, [r3, #0]
 8027f7c:	6818      	ldr	r0, [r3, #0]
 8027f7e:	1a43      	subs	r3, r0, r1
 8027f80:	4258      	negs	r0, r3
 8027f82:	4158      	adcs	r0, r3
 8027f84:	e00e      	b.n	8027fa4 <CRC_Lock+0x94>
 8027f86:	681b      	ldr	r3, [r3, #0]
 8027f88:	4013      	ands	r3, r2
 8027f8a:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8027f8e:	4293      	cmp	r3, r2
 8027f90:	d111      	bne.n	8027fb6 <CRC_Lock+0xa6>
 8027f92:	4b13      	ldr	r3, [pc, #76]	@ (8027fe0 <CRC_Lock+0xd0>)
 8027f94:	681b      	ldr	r3, [r3, #0]
 8027f96:	f240 4286 	movw	r2, #1158	@ 0x486
 8027f9a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027f9e:	4293      	cmp	r3, r2
 8027fa0:	d001      	beq.n	8027fa6 <CRC_Lock+0x96>
 8027fa2:	2000      	movs	r0, #0
 8027fa4:	bd30      	pop	{r4, r5, pc}
 8027fa6:	4b0f      	ldr	r3, [pc, #60]	@ (8027fe4 <CRC_Lock+0xd4>)
 8027fa8:	2201      	movs	r2, #1
 8027faa:	601a      	str	r2, [r3, #0]
 8027fac:	681a      	ldr	r2, [r3, #0]
 8027fae:	2a00      	cmp	r2, #0
 8027fb0:	d1fc      	bne.n	8027fac <CRC_Lock+0x9c>
 8027fb2:	4b0d      	ldr	r3, [pc, #52]	@ (8027fe8 <CRC_Lock+0xd8>)
 8027fb4:	e7e1      	b.n	8027f7a <CRC_Lock+0x6a>
 8027fb6:	4b0d      	ldr	r3, [pc, #52]	@ (8027fec <CRC_Lock+0xdc>)
 8027fb8:	2201      	movs	r2, #1
 8027fba:	601a      	str	r2, [r3, #0]
 8027fbc:	681a      	ldr	r2, [r3, #0]
 8027fbe:	2a00      	cmp	r2, #0
 8027fc0:	d1fc      	bne.n	8027fbc <CRC_Lock+0xac>
 8027fc2:	4b0b      	ldr	r3, [pc, #44]	@ (8027ff0 <CRC_Lock+0xe0>)
 8027fc4:	e7d9      	b.n	8027f7a <CRC_Lock+0x6a>
 8027fc6:	bf00      	nop
 8027fc8:	e0002000 	.word	0xe0002000
 8027fcc:	e000ed00 	.word	0xe000ed00
 8027fd0:	e0042000 	.word	0xe0042000
 8027fd4:	5c001000 	.word	0x5c001000
 8027fd8:	58024c08 	.word	0x58024c08
 8027fdc:	58024c00 	.word	0x58024c00
 8027fe0:	46008ff0 	.word	0x46008ff0
 8027fe4:	46024c08 	.word	0x46024c08
 8027fe8:	46024c00 	.word	0x46024c00
 8027fec:	40023008 	.word	0x40023008
 8027ff0:	40023000 	.word	0x40023000

08027ff4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027ff4:	6101      	str	r1, [r0, #16]
 8027ff6:	4770      	bx	lr

08027ff8 <_ZN8touchgfx8Gestures4tickEv>:
 8027ff8:	7b83      	ldrb	r3, [r0, #14]
 8027ffa:	b14b      	cbz	r3, 8028010 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8027ffc:	8903      	ldrh	r3, [r0, #8]
 8027ffe:	3301      	adds	r3, #1
 8028000:	b29b      	uxth	r3, r3
 8028002:	2b07      	cmp	r3, #7
 8028004:	8103      	strh	r3, [r0, #8]
 8028006:	bf81      	itttt	hi
 8028008:	2300      	movhi	r3, #0
 802800a:	8143      	strhhi	r3, [r0, #10]
 802800c:	8183      	strhhi	r3, [r0, #12]
 802800e:	7383      	strbhi	r3, [r0, #14]
 8028010:	4770      	bx	lr
	...

08028014 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8028014:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8028018:	4698      	mov	r8, r3
 802801a:	8883      	ldrh	r3, [r0, #4]
 802801c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8028020:	eba8 0303 	sub.w	r3, r8, r3
 8028024:	b21b      	sxth	r3, r3
 8028026:	4604      	mov	r4, r0
 8028028:	2b00      	cmp	r3, #0
 802802a:	4617      	mov	r7, r2
 802802c:	4a18      	ldr	r2, [pc, #96]	@ (8028090 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802802e:	9200      	str	r2, [sp, #0]
 8028030:	bfb8      	it	lt
 8028032:	425b      	neglt	r3, r3
 8028034:	8aa2      	ldrh	r2, [r4, #20]
 8028036:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 802803a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802803e:	b21b      	sxth	r3, r3
 8028040:	460e      	mov	r6, r1
 8028042:	4293      	cmp	r3, r2
 8028044:	88c1      	ldrh	r1, [r0, #6]
 8028046:	f8ad 1008 	strh.w	r1, [sp, #8]
 802804a:	f04f 0000 	mov.w	r0, #0
 802804e:	f88d 0004 	strb.w	r0, [sp, #4]
 8028052:	f8ad 500c 	strh.w	r5, [sp, #12]
 8028056:	dc07      	bgt.n	8028068 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8028058:	1a69      	subs	r1, r5, r1
 802805a:	b209      	sxth	r1, r1
 802805c:	2900      	cmp	r1, #0
 802805e:	bfb8      	it	lt
 8028060:	4249      	neglt	r1, r1
 8028062:	b209      	sxth	r1, r1
 8028064:	428a      	cmp	r2, r1
 8028066:	da10      	bge.n	802808a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8028068:	6920      	ldr	r0, [r4, #16]
 802806a:	6803      	ldr	r3, [r0, #0]
 802806c:	4669      	mov	r1, sp
 802806e:	685b      	ldr	r3, [r3, #4]
 8028070:	4798      	blx	r3
 8028072:	eba8 0606 	sub.w	r6, r8, r6
 8028076:	2300      	movs	r3, #0
 8028078:	1bef      	subs	r7, r5, r7
 802807a:	2001      	movs	r0, #1
 802807c:	8123      	strh	r3, [r4, #8]
 802807e:	8166      	strh	r6, [r4, #10]
 8028080:	81a7      	strh	r7, [r4, #12]
 8028082:	f8a4 8004 	strh.w	r8, [r4, #4]
 8028086:	80e5      	strh	r5, [r4, #6]
 8028088:	73a0      	strb	r0, [r4, #14]
 802808a:	b004      	add	sp, #16
 802808c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028090:	0802d85c 	.word	0x0802d85c

08028094 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8028094:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028096:	461e      	mov	r6, r3
 8028098:	1e4b      	subs	r3, r1, #1
 802809a:	2b01      	cmp	r3, #1
 802809c:	b085      	sub	sp, #20
 802809e:	4604      	mov	r4, r0
 80280a0:	460d      	mov	r5, r1
 80280a2:	4617      	mov	r7, r2
 80280a4:	d84b      	bhi.n	802813e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80280a6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80280aa:	1cd3      	adds	r3, r2, #3
 80280ac:	b29b      	uxth	r3, r3
 80280ae:	2b06      	cmp	r3, #6
 80280b0:	d916      	bls.n	80280e0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80280b2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8028154 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80280b6:	f8cd c004 	str.w	ip, [sp, #4]
 80280ba:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80280be:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80280c2:	6900      	ldr	r0, [r0, #16]
 80280c4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80280c8:	f04f 0c00 	mov.w	ip, #0
 80280cc:	f88d c008 	strb.w	ip, [sp, #8]
 80280d0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80280d4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80280d8:	6803      	ldr	r3, [r0, #0]
 80280da:	a901      	add	r1, sp, #4
 80280dc:	689b      	ldr	r3, [r3, #8]
 80280de:	4798      	blx	r3
 80280e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80280e4:	1cd3      	adds	r3, r2, #3
 80280e6:	b29b      	uxth	r3, r3
 80280e8:	2b06      	cmp	r3, #6
 80280ea:	d916      	bls.n	802811a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80280ec:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8028154 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80280f0:	f8cd c004 	str.w	ip, [sp, #4]
 80280f4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80280f8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80280fc:	6920      	ldr	r0, [r4, #16]
 80280fe:	f8ad 100c 	strh.w	r1, [sp, #12]
 8028102:	f04f 0c01 	mov.w	ip, #1
 8028106:	f88d c008 	strb.w	ip, [sp, #8]
 802810a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802810e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028112:	6803      	ldr	r3, [r0, #0]
 8028114:	a901      	add	r1, sp, #4
 8028116:	689b      	ldr	r3, [r3, #8]
 8028118:	4798      	blx	r3
 802811a:	4b0d      	ldr	r3, [pc, #52]	@ (8028150 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802811c:	9301      	str	r3, [sp, #4]
 802811e:	6920      	ldr	r0, [r4, #16]
 8028120:	f88d 5008 	strb.w	r5, [sp, #8]
 8028124:	2300      	movs	r3, #0
 8028126:	f8ad 700a 	strh.w	r7, [sp, #10]
 802812a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802812e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028132:	6803      	ldr	r3, [r0, #0]
 8028134:	a901      	add	r1, sp, #4
 8028136:	681b      	ldr	r3, [r3, #0]
 8028138:	4798      	blx	r3
 802813a:	b005      	add	sp, #20
 802813c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802813e:	2900      	cmp	r1, #0
 8028140:	d1eb      	bne.n	802811a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8028142:	80a2      	strh	r2, [r4, #4]
 8028144:	80c6      	strh	r6, [r0, #6]
 8028146:	60a1      	str	r1, [r4, #8]
 8028148:	81a1      	strh	r1, [r4, #12]
 802814a:	73a1      	strb	r1, [r4, #14]
 802814c:	e7e5      	b.n	802811a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802814e:	bf00      	nop
 8028150:	0802d848 	.word	0x0802d848
 8028154:	0802d870 	.word	0x0802d870

08028158 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8028158:	10c9      	asrs	r1, r1, #3
 802815a:	2900      	cmp	r1, #0
 802815c:	bfb8      	it	lt
 802815e:	4249      	neglt	r1, r1
 8028160:	2801      	cmp	r0, #1
 8028162:	d108      	bne.n	8028176 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8028164:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8028168:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 802816c:	4601      	mov	r1, r0
 802816e:	dd02      	ble.n	8028176 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8028170:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8028174:	4770      	bx	lr
 8028176:	29ff      	cmp	r1, #255	@ 0xff
 8028178:	bfa8      	it	ge
 802817a:	21ff      	movge	r1, #255	@ 0xff
 802817c:	4608      	mov	r0, r1
 802817e:	4770      	bx	lr

08028180 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8028180:	b410      	push	{r4}
 8028182:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8028186:	429c      	cmp	r4, r3
 8028188:	d803      	bhi.n	8028192 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802818a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802818e:	f7ec b993 	b.w	80144b8 <_ZN8touchgfx7Outline6lineToEii>
 8028192:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028196:	4770      	bx	lr

08028198 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8028198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802819c:	b08b      	sub	sp, #44	@ 0x2c
 802819e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80281a2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80281a6:	9308      	str	r3, [sp, #32]
 80281a8:	4606      	mov	r6, r0
 80281aa:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 80281ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80281b0:	468a      	mov	sl, r1
 80281b2:	f7ec faee 	bl	8014792 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80281b6:	68b5      	ldr	r5, [r6, #8]
 80281b8:	4604      	mov	r4, r0
 80281ba:	2d00      	cmp	r5, #0
 80281bc:	d044      	beq.n	8028248 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80281be:	6873      	ldr	r3, [r6, #4]
 80281c0:	42ab      	cmp	r3, r5
 80281c2:	d33d      	bcc.n	8028240 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80281c4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80281c8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 80281cc:	eb02 0b03 	add.w	fp, r2, r3
 80281d0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80281d4:	fb02 1203 	mla	r2, r2, r3, r1
 80281d8:	9205      	str	r2, [sp, #20]
 80281da:	1e6a      	subs	r2, r5, #1
 80281dc:	9204      	str	r2, [sp, #16]
 80281de:	f04f 0800 	mov.w	r8, #0
 80281e2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80281e6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80281ea:	454b      	cmp	r3, r9
 80281ec:	463a      	mov	r2, r7
 80281ee:	d008      	beq.n	8028202 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80281f0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 80281f4:	eb03 0b09 	add.w	fp, r3, r9
 80281f8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80281fc:	fb03 1309 	mla	r3, r3, r9, r1
 8028200:	9305      	str	r3, [sp, #20]
 8028202:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8028206:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802820a:	4498      	add	r8, r3
 802820c:	9b04      	ldr	r3, [sp, #16]
 802820e:	3b01      	subs	r3, #1
 8028210:	9304      	str	r3, [sp, #16]
 8028212:	9b04      	ldr	r3, [sp, #16]
 8028214:	3301      	adds	r3, #1
 8028216:	d015      	beq.n	8028244 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8028218:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802821c:	42bb      	cmp	r3, r7
 802821e:	d117      	bne.n	8028250 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8028220:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8028224:	9b04      	ldr	r3, [sp, #16]
 8028226:	4548      	cmp	r0, r9
 8028228:	f103 33ff 	add.w	r3, r3, #4294967295
 802822c:	d17f      	bne.n	802832e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802822e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8028232:	4401      	add	r1, r0
 8028234:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8028238:	4480      	add	r8, r0
 802823a:	e7e9      	b.n	8028210 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802823c:	461f      	mov	r7, r3
 802823e:	e044      	b.n	80282ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8028240:	2000      	movs	r0, #0
 8028242:	e002      	b.n	802824a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8028244:	2900      	cmp	r1, #0
 8028246:	d16f      	bne.n	8028328 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8028248:	2001      	movs	r0, #1
 802824a:	b00b      	add	sp, #44	@ 0x2c
 802824c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028250:	2900      	cmp	r1, #0
 8028252:	d030      	beq.n	80282b6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8028254:	2f00      	cmp	r7, #0
 8028256:	db29      	blt.n	80282ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028258:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802825c:	42bb      	cmp	r3, r7
 802825e:	dd25      	ble.n	80282ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028260:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8028264:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8028268:	f7ff ff76 	bl	8028158 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802826c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802826e:	fb10 f003 	smulbb	r0, r0, r3
 8028272:	b280      	uxth	r0, r0
 8028274:	1c41      	adds	r1, r0, #1
 8028276:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802827a:	1209      	asrs	r1, r1, #8
 802827c:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8028280:	d014      	beq.n	80282ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028282:	9808      	ldr	r0, [sp, #32]
 8028284:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8028286:	b2c9      	uxtb	r1, r1
 8028288:	b2ba      	uxth	r2, r7
 802828a:	9102      	str	r1, [sp, #8]
 802828c:	2101      	movs	r1, #1
 802828e:	4413      	add	r3, r2
 8028290:	9101      	str	r1, [sp, #4]
 8028292:	4402      	add	r2, r0
 8028294:	fa0f f18b 	sxth.w	r1, fp
 8028298:	f8da 0000 	ldr.w	r0, [sl]
 802829c:	9100      	str	r1, [sp, #0]
 802829e:	6941      	ldr	r1, [r0, #20]
 80282a0:	b21b      	sxth	r3, r3
 80282a2:	460d      	mov	r5, r1
 80282a4:	b212      	sxth	r2, r2
 80282a6:	9905      	ldr	r1, [sp, #20]
 80282a8:	4650      	mov	r0, sl
 80282aa:	47a8      	blx	r5
 80282ac:	9b04      	ldr	r3, [sp, #16]
 80282ae:	3301      	adds	r3, #1
 80282b0:	f107 0201 	add.w	r2, r7, #1
 80282b4:	d0c8      	beq.n	8028248 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80282b6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80282ba:	1abb      	subs	r3, r7, r2
 80282bc:	2b00      	cmp	r3, #0
 80282be:	dd31      	ble.n	8028324 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80282c0:	2a00      	cmp	r2, #0
 80282c2:	dabb      	bge.n	802823c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80282c4:	2f00      	cmp	r7, #0
 80282c6:	dd2d      	ble.n	8028324 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80282c8:	2200      	movs	r2, #0
 80282ca:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 80282ce:	19d1      	adds	r1, r2, r7
 80282d0:	4299      	cmp	r1, r3
 80282d2:	db02      	blt.n	80282da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80282d4:	1a9f      	subs	r7, r3, r2
 80282d6:	2f00      	cmp	r7, #0
 80282d8:	dd24      	ble.n	8028324 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80282da:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80282de:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 80282e2:	f7ff ff39 	bl	8028158 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 80282e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80282e8:	fb10 f003 	smulbb	r0, r0, r3
 80282ec:	b280      	uxth	r0, r0
 80282ee:	1c41      	adds	r1, r0, #1
 80282f0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80282f4:	1209      	asrs	r1, r1, #8
 80282f6:	f011 0fff 	tst.w	r1, #255	@ 0xff
 80282fa:	d013      	beq.n	8028324 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80282fc:	9808      	ldr	r0, [sp, #32]
 80282fe:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8028300:	b292      	uxth	r2, r2
 8028302:	b2c9      	uxtb	r1, r1
 8028304:	4413      	add	r3, r2
 8028306:	9102      	str	r1, [sp, #8]
 8028308:	4402      	add	r2, r0
 802830a:	b23f      	sxth	r7, r7
 802830c:	f8da 0000 	ldr.w	r0, [sl]
 8028310:	9701      	str	r7, [sp, #4]
 8028312:	fa0f f18b 	sxth.w	r1, fp
 8028316:	9100      	str	r1, [sp, #0]
 8028318:	6947      	ldr	r7, [r0, #20]
 802831a:	9905      	ldr	r1, [sp, #20]
 802831c:	b21b      	sxth	r3, r3
 802831e:	b212      	sxth	r2, r2
 8028320:	4650      	mov	r0, sl
 8028322:	47b8      	blx	r7
 8028324:	464b      	mov	r3, r9
 8028326:	e75c      	b.n	80281e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8028328:	2f00      	cmp	r7, #0
 802832a:	da95      	bge.n	8028258 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802832c:	e78c      	b.n	8028248 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802832e:	2900      	cmp	r1, #0
 8028330:	d0f8      	beq.n	8028324 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028332:	e78f      	b.n	8028254 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08028334 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8028334:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8028338:	461e      	mov	r6, r3
 802833a:	4b36      	ldr	r3, [pc, #216]	@ (8028414 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 802833c:	e9c0 3100 	strd	r3, r1, [r0]
 8028340:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8028344:	8103      	strh	r3, [r0, #8]
 8028346:	2500      	movs	r5, #0
 8028348:	f89d 3020 	ldrb.w	r3, [sp, #32]
 802834c:	7283      	strb	r3, [r0, #10]
 802834e:	f100 0814 	add.w	r8, r0, #20
 8028352:	4604      	mov	r4, r0
 8028354:	8185      	strh	r5, [r0, #12]
 8028356:	81c5      	strh	r5, [r0, #14]
 8028358:	8205      	strh	r5, [r0, #16]
 802835a:	8245      	strh	r5, [r0, #18]
 802835c:	4640      	mov	r0, r8
 802835e:	4617      	mov	r7, r2
 8028360:	f7eb fbe2 	bl	8013b28 <_ZN8touchgfx7OutlineC1Ev>
 8028364:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8028368:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 802836c:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8028370:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8028374:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8028378:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 802837c:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8028380:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8028384:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8028388:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 802838c:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8028390:	6830      	ldr	r0, [r6, #0]
 8028392:	6871      	ldr	r1, [r6, #4]
 8028394:	8872      	ldrh	r2, [r6, #2]
 8028396:	8835      	ldrh	r5, [r6, #0]
 8028398:	466b      	mov	r3, sp
 802839a:	c303      	stmia	r3!, {r0, r1}
 802839c:	887b      	ldrh	r3, [r7, #2]
 802839e:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 80283a2:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 80283a6:	4413      	add	r3, r2
 80283a8:	883a      	ldrh	r2, [r7, #0]
 80283aa:	81e3      	strh	r3, [r4, #14]
 80283ac:	442a      	add	r2, r5
 80283ae:	81a2      	strh	r2, [r4, #12]
 80283b0:	8220      	strh	r0, [r4, #16]
 80283b2:	8261      	strh	r1, [r4, #18]
 80283b4:	4668      	mov	r0, sp
 80283b6:	4639      	mov	r1, r7
 80283b8:	f7ed fdb4 	bl	8015f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80283bc:	f104 000c 	add.w	r0, r4, #12
 80283c0:	f7ed fd88 	bl	8015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80283c4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80283c8:	f8bd 2000 	ldrh.w	r2, [sp]
 80283cc:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 80283d0:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 80283d4:	4640      	mov	r0, r8
 80283d6:	f7eb fb8b 	bl	8013af0 <_ZN8touchgfx7Outline5resetEv>
 80283da:	f9bd 3000 	ldrsh.w	r3, [sp]
 80283de:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 80283e2:	015b      	lsls	r3, r3, #5
 80283e4:	64e3      	str	r3, [r4, #76]	@ 0x4c
 80283e6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80283ea:	015b      	lsls	r3, r3, #5
 80283ec:	6523      	str	r3, [r4, #80]	@ 0x50
 80283ee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80283f2:	015b      	lsls	r3, r3, #5
 80283f4:	6563      	str	r3, [r4, #84]	@ 0x54
 80283f6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80283fa:	015b      	lsls	r3, r3, #5
 80283fc:	65a3      	str	r3, [r4, #88]	@ 0x58
 80283fe:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8028402:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8028406:	4620      	mov	r0, r4
 8028408:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 802840c:	b002      	add	sp, #8
 802840e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028412:	bf00      	nop
 8028414:	0802dbac 	.word	0x0802dbac

08028418 <_ZN8touchgfx6Canvas5closeEv>:
 8028418:	b538      	push	{r3, r4, r5, lr}
 802841a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802841e:	4604      	mov	r4, r0
 8028420:	b193      	cbz	r3, 8028448 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8028422:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8028426:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 802842a:	4213      	tst	r3, r2
 802842c:	d10c      	bne.n	8028448 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802842e:	f100 0514 	add.w	r5, r0, #20
 8028432:	b123      	cbz	r3, 802843e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8028434:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8028438:	4628      	mov	r0, r5
 802843a:	f7ff fea1 	bl	8028180 <_ZN8touchgfx10Rasterizer6lineToEii>
 802843e:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8028442:	4628      	mov	r0, r5
 8028444:	f7ff fe9c 	bl	8028180 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028448:	2300      	movs	r3, #0
 802844a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802844e:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8028452:	4298      	cmp	r0, r3
 8028454:	bf34      	ite	cc
 8028456:	2000      	movcc	r0, #0
 8028458:	2001      	movcs	r0, #1
 802845a:	bd38      	pop	{r3, r4, r5, pc}

0802845c <_ZN8touchgfx6Canvas6renderEh>:
 802845c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8028460:	7a85      	ldrb	r5, [r0, #10]
 8028462:	4369      	muls	r1, r5
 8028464:	1c4d      	adds	r5, r1, #1
 8028466:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802846a:	122d      	asrs	r5, r5, #8
 802846c:	4604      	mov	r4, r0
 802846e:	f000 8099 	beq.w	80285a4 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8028472:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8028476:	2b00      	cmp	r3, #0
 8028478:	f000 8094 	beq.w	80285a4 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802847c:	f7ff ffcc 	bl	8028418 <_ZN8touchgfx6Canvas5closeEv>
 8028480:	4607      	mov	r7, r0
 8028482:	2800      	cmp	r0, #0
 8028484:	d045      	beq.n	8028512 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8028486:	6860      	ldr	r0, [r4, #4]
 8028488:	4e47      	ldr	r6, [pc, #284]	@ (80285a8 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 802848a:	6803      	ldr	r3, [r0, #0]
 802848c:	6837      	ldr	r7, [r6, #0]
 802848e:	689b      	ldr	r3, [r3, #8]
 8028490:	4798      	blx	r3
 8028492:	4601      	mov	r1, r0
 8028494:	4638      	mov	r0, r7
 8028496:	f7e7 fe9f 	bl	80101d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802849a:	4607      	mov	r7, r0
 802849c:	f7db fe26 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 80284a0:	6803      	ldr	r3, [r0, #0]
 80284a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80284a4:	4798      	blx	r3
 80284a6:	4680      	mov	r8, r0
 80284a8:	f7db fe20 	bl	80040ec <_ZN8touchgfx3HAL3lcdEv>
 80284ac:	6803      	ldr	r3, [r0, #0]
 80284ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80284b0:	4798      	blx	r3
 80284b2:	280b      	cmp	r0, #11
 80284b4:	d85b      	bhi.n	802856e <_ZN8touchgfx6Canvas6renderEh+0x112>
 80284b6:	e8df f000 	tbb	[pc, r0]
 80284ba:	5c51      	.short	0x5c51
 80284bc:	305a066c 	.word	0x305a066c
 80284c0:	65656540 	.word	0x65656540
 80284c4:	6565      	.short	0x6565
 80284c6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80284ca:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80284ce:	2208      	movs	r2, #8
 80284d0:	fb91 f2f2 	sdiv	r2, r1, r2
 80284d4:	fb08 2303 	mla	r3, r8, r3, r2
 80284d8:	441f      	add	r7, r3
 80284da:	424b      	negs	r3, r1
 80284dc:	f003 0307 	and.w	r3, r3, #7
 80284e0:	f001 0107 	and.w	r1, r1, #7
 80284e4:	bf58      	it	pl
 80284e6:	4259      	negpl	r1, r3
 80284e8:	b2c9      	uxtb	r1, r1
 80284ea:	b2ed      	uxtb	r5, r5
 80284ec:	463a      	mov	r2, r7
 80284ee:	e9cd 1500 	strd	r1, r5, [sp]
 80284f2:	fa0f f388 	sxth.w	r3, r8
 80284f6:	6861      	ldr	r1, [r4, #4]
 80284f8:	f104 0014 	add.w	r0, r4, #20
 80284fc:	f7ff fe4c 	bl	8028198 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8028500:	4607      	mov	r7, r0
 8028502:	6860      	ldr	r0, [r4, #4]
 8028504:	6803      	ldr	r3, [r0, #0]
 8028506:	691b      	ldr	r3, [r3, #16]
 8028508:	4798      	blx	r3
 802850a:	6830      	ldr	r0, [r6, #0]
 802850c:	6803      	ldr	r3, [r0, #0]
 802850e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028510:	4798      	blx	r3
 8028512:	4638      	mov	r0, r7
 8028514:	b002      	add	sp, #8
 8028516:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802851a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802851e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8028522:	2204      	movs	r2, #4
 8028524:	fb91 f2f2 	sdiv	r2, r1, r2
 8028528:	fb08 2303 	mla	r3, r8, r3, r2
 802852c:	441f      	add	r7, r3
 802852e:	424b      	negs	r3, r1
 8028530:	f003 0303 	and.w	r3, r3, #3
 8028534:	f001 0103 	and.w	r1, r1, #3
 8028538:	e7d4      	b.n	80284e4 <_ZN8touchgfx6Canvas6renderEh+0x88>
 802853a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802853e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8028542:	2900      	cmp	r1, #0
 8028544:	f04f 0202 	mov.w	r2, #2
 8028548:	fb91 f2f2 	sdiv	r2, r1, r2
 802854c:	f001 0101 	and.w	r1, r1, #1
 8028550:	fb08 2303 	mla	r3, r8, r3, r2
 8028554:	441f      	add	r7, r3
 8028556:	bfb8      	it	lt
 8028558:	4249      	neglt	r1, r1
 802855a:	e7c5      	b.n	80284e8 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 802855c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8028560:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028564:	fb08 f303 	mul.w	r3, r8, r3
 8028568:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802856c:	441f      	add	r7, r3
 802856e:	2100      	movs	r1, #0
 8028570:	e7bb      	b.n	80284ea <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8028572:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8028576:	fb08 f203 	mul.w	r2, r8, r3
 802857a:	89a3      	ldrh	r3, [r4, #12]
 802857c:	2103      	movs	r1, #3
 802857e:	fb13 2301 	smlabb	r3, r3, r1, r2
 8028582:	e7f3      	b.n	802856c <_ZN8touchgfx6Canvas6renderEh+0x110>
 8028584:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8028588:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802858c:	fb08 2303 	mla	r3, r8, r3, r2
 8028590:	e7ec      	b.n	802856c <_ZN8touchgfx6Canvas6renderEh+0x110>
 8028592:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8028596:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802859a:	fb08 f303 	mul.w	r3, r8, r3
 802859e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80285a2:	e7e3      	b.n	802856c <_ZN8touchgfx6Canvas6renderEh+0x110>
 80285a4:	2701      	movs	r7, #1
 80285a6:	e7b4      	b.n	8028512 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80285a8:	20013f60 	.word	0x20013f60

080285ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80285ac:	b510      	push	{r4, lr}
 80285ae:	4b06      	ldr	r3, [pc, #24]	@ (80285c8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 80285b0:	781b      	ldrb	r3, [r3, #0]
 80285b2:	2b01      	cmp	r3, #1
 80285b4:	d107      	bne.n	80285c6 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 80285b6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 80285ba:	680b      	ldr	r3, [r1, #0]
 80285bc:	6814      	ldr	r4, [r2, #0]
 80285be:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80285c2:	6013      	str	r3, [r2, #0]
 80285c4:	600c      	str	r4, [r1, #0]
 80285c6:	bd10      	pop	{r4, pc}
 80285c8:	20013f58 	.word	0x20013f58

080285cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80285cc:	b513      	push	{r0, r1, r4, lr}
 80285ce:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80285d2:	4604      	mov	r4, r0
 80285d4:	e9cd 2100 	strd	r2, r1, [sp]
 80285d8:	b9a3      	cbnz	r3, 8028604 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80285da:	466a      	mov	r2, sp
 80285dc:	a901      	add	r1, sp, #4
 80285de:	4620      	mov	r0, r4
 80285e0:	f7ff ffe4 	bl	80285ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80285e4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80285e6:	9901      	ldr	r1, [sp, #4]
 80285e8:	9a00      	ldr	r2, [sp, #0]
 80285ea:	1ac9      	subs	r1, r1, r3
 80285ec:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80285ee:	9101      	str	r1, [sp, #4]
 80285f0:	1ad2      	subs	r2, r2, r3
 80285f2:	2a00      	cmp	r2, #0
 80285f4:	9200      	str	r2, [sp, #0]
 80285f6:	da0b      	bge.n	8028610 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80285f8:	2301      	movs	r3, #1
 80285fa:	2900      	cmp	r1, #0
 80285fc:	da0e      	bge.n	802861c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80285fe:	f043 0304 	orr.w	r3, r3, #4
 8028602:	e013      	b.n	802862c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8028604:	f7ff ff08 	bl	8028418 <_ZN8touchgfx6Canvas5closeEv>
 8028608:	2800      	cmp	r0, #0
 802860a:	d1e6      	bne.n	80285da <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802860c:	b002      	add	sp, #8
 802860e:	bd10      	pop	{r4, pc}
 8028610:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8028612:	429a      	cmp	r2, r3
 8028614:	bfac      	ite	ge
 8028616:	2302      	movge	r3, #2
 8028618:	2300      	movlt	r3, #0
 802861a:	e7ee      	b.n	80285fa <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802861c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802861e:	4281      	cmp	r1, r0
 8028620:	bfac      	ite	ge
 8028622:	2008      	movge	r0, #8
 8028624:	2000      	movlt	r0, #0
 8028626:	4318      	orrs	r0, r3
 8028628:	b2c3      	uxtb	r3, r0
 802862a:	b158      	cbz	r0, 8028644 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802862c:	2200      	movs	r2, #0
 802862e:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8028632:	9901      	ldr	r1, [sp, #4]
 8028634:	9a00      	ldr	r2, [sp, #0]
 8028636:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8028638:	6722      	str	r2, [r4, #112]	@ 0x70
 802863a:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802863e:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8028642:	e7e3      	b.n	802860c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8028644:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8028648:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802864c:	4298      	cmp	r0, r3
 802864e:	d803      	bhi.n	8028658 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8028650:	f104 0014 	add.w	r0, r4, #20
 8028654:	f7eb ff4a 	bl	80144ec <_ZN8touchgfx7Outline6moveToEii>
 8028658:	2301      	movs	r3, #1
 802865a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802865e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8028662:	2300      	movs	r3, #0
 8028664:	e7e5      	b.n	8028632 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08028666 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8028666:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8028668:	ab02      	add	r3, sp, #8
 802866a:	4604      	mov	r4, r0
 802866c:	f843 2d08 	str.w	r2, [r3, #-8]!
 8028670:	9101      	str	r1, [sp, #4]
 8028672:	461a      	mov	r2, r3
 8028674:	a901      	add	r1, sp, #4
 8028676:	f7ff ff99 	bl	80285ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802867a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802867c:	9901      	ldr	r1, [sp, #4]
 802867e:	9a00      	ldr	r2, [sp, #0]
 8028680:	1ac9      	subs	r1, r1, r3
 8028682:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8028684:	9101      	str	r1, [sp, #4]
 8028686:	1ad2      	subs	r2, r2, r3
 8028688:	2a00      	cmp	r2, #0
 802868a:	9200      	str	r2, [sp, #0]
 802868c:	db1c      	blt.n	80286c8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802868e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8028690:	429a      	cmp	r2, r3
 8028692:	bfac      	ite	ge
 8028694:	2002      	movge	r0, #2
 8028696:	2000      	movlt	r0, #0
 8028698:	2900      	cmp	r1, #0
 802869a:	db17      	blt.n	80286cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802869c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 802869e:	4299      	cmp	r1, r3
 80286a0:	bfac      	ite	ge
 80286a2:	2308      	movge	r3, #8
 80286a4:	2300      	movlt	r3, #0
 80286a6:	4303      	orrs	r3, r0
 80286a8:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 80286ac:	b2dd      	uxtb	r5, r3
 80286ae:	b978      	cbnz	r0, 80286d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80286b0:	f104 0014 	add.w	r0, r4, #20
 80286b4:	f7ff fd64 	bl	8028180 <_ZN8touchgfx10Rasterizer6lineToEii>
 80286b8:	9b01      	ldr	r3, [sp, #4]
 80286ba:	6623      	str	r3, [r4, #96]	@ 0x60
 80286bc:	9b00      	ldr	r3, [sp, #0]
 80286be:	6663      	str	r3, [r4, #100]	@ 0x64
 80286c0:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 80286c4:	b002      	add	sp, #8
 80286c6:	bd70      	pop	{r4, r5, r6, pc}
 80286c8:	2001      	movs	r0, #1
 80286ca:	e7e5      	b.n	8028698 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80286cc:	2304      	movs	r3, #4
 80286ce:	e7ea      	b.n	80286a6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80286d0:	b113      	cbz	r3, 80286d8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80286d2:	ea10 0305 	ands.w	r3, r0, r5
 80286d6:	d11c      	bne.n	8028712 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80286d8:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 80286dc:	f104 0614 	add.w	r6, r4, #20
 80286e0:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 80286e4:	b98b      	cbnz	r3, 802870a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80286e6:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80286ea:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80286ee:	4298      	cmp	r0, r3
 80286f0:	d802      	bhi.n	80286f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80286f2:	4630      	mov	r0, r6
 80286f4:	f7eb fefa 	bl	80144ec <_ZN8touchgfx7Outline6moveToEii>
 80286f8:	2301      	movs	r3, #1
 80286fa:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80286fe:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8028702:	e9dd 2100 	ldrd	r2, r1, [sp]
 8028706:	4630      	mov	r0, r6
 8028708:	e7d4      	b.n	80286b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802870a:	4630      	mov	r0, r6
 802870c:	f7ff fd38 	bl	8028180 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028710:	e7f7      	b.n	8028702 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8028712:	461d      	mov	r5, r3
 8028714:	e7d0      	b.n	80286b8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08028718 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8028718:	b538      	push	{r3, r4, r5, lr}
 802871a:	ed2d 8b10 	vpush	{d8-d15}
 802871e:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 8028722:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 802888c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8028726:	4605      	mov	r5, r0
 8028728:	eeb0 ca40 	vmov.f32	s24, s0
 802872c:	eef0 ca60 	vmov.f32	s25, s1
 8028730:	eeb0 da41 	vmov.f32	s26, s2
 8028734:	eef0 da61 	vmov.f32	s27, s3
 8028738:	eeb0 ea42 	vmov.f32	s28, s4
 802873c:	eef0 ea62 	vmov.f32	s29, s5
 8028740:	460c      	mov	r4, r1
 8028742:	eef0 aa6b 	vmov.f32	s21, s23
 8028746:	2c08      	cmp	r4, #8
 8028748:	d86e      	bhi.n	8028828 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 802874a:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 802874e:	ee7d 7aee 	vsub.f32	s15, s27, s29
 8028752:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8028756:	ee3e 7aec 	vsub.f32	s14, s29, s25
 802875a:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802875e:	ee3c fa0d 	vadd.f32	s30, s24, s26
 8028762:	eee6 7a07 	vfma.f32	s15, s12, s14
 8028766:	ee7c faad 	vadd.f32	s31, s25, s27
 802876a:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 802876e:	ee3d aaae 	vadd.f32	s20, s27, s29
 8028772:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802877a:	ee2f fa2b 	vmul.f32	s30, s30, s23
 802877e:	ee6f faab 	vmul.f32	s31, s31, s23
 8028782:	ee69 9aab 	vmul.f32	s19, s19, s23
 8028786:	ee2a aa2b 	vmul.f32	s20, s20, s23
 802878a:	bf48      	it	mi
 802878c:	eef1 7a67 	vnegmi.f32	s15, s15
 8028790:	ee7f 8a29 	vadd.f32	s17, s30, s19
 8028794:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8028798:	eef4 7acb 	vcmpe.f32	s15, s22
 802879c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80287a0:	ee68 8aab 	vmul.f32	s17, s17, s23
 80287a4:	ee29 9a2b 	vmul.f32	s18, s18, s23
 80287a8:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 80287ac:	dd3f      	ble.n	802882e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 80287ae:	ee27 7a07 	vmul.f32	s14, s14, s14
 80287b2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80287b6:	eea6 7aa6 	vfma.f32	s14, s13, s13
 80287ba:	ee27 7a06 	vmul.f32	s14, s14, s12
 80287be:	eef4 7ac7 	vcmpe.f32	s15, s14
 80287c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80287c6:	d847      	bhi.n	8028858 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80287c8:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 80287cc:	ee3e 0aed 	vsub.f32	s0, s29, s27
 80287d0:	f000 fa85 	bl	8028cde <atan2f>
 80287d4:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 80287d8:	eeb0 8a40 	vmov.f32	s16, s0
 80287dc:	ee3d 0aec 	vsub.f32	s0, s27, s25
 80287e0:	f000 fa7d 	bl	8028cde <atan2f>
 80287e4:	ee38 0a40 	vsub.f32	s0, s16, s0
 80287e8:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8028890 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 80287ec:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80287f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80287f4:	bf48      	it	mi
 80287f6:	eeb1 0a40 	vnegmi.f32	s0, s0
 80287fa:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80287fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028802:	bfa4      	itt	ge
 8028804:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 8028894 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8028808:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802880c:	eddf 7a22 	vldr	s15, [pc, #136]	@ 8028898 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 8028810:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028814:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028818:	d51e      	bpl.n	8028858 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802881a:	eef0 0a49 	vmov.f32	s1, s18
 802881e:	eeb0 0a68 	vmov.f32	s0, s17
 8028822:	4628      	mov	r0, r5
 8028824:	f7e8 fe5a 	bl	80114dc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8028828:	ecbd 8b10 	vpop	{d8-d15}
 802882c:	bd38      	pop	{r3, r4, r5, pc}
 802882e:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 8028832:	eeb0 7a68 	vmov.f32	s14, s17
 8028836:	eea7 7aea 	vfms.f32	s14, s15, s21
 802883a:	ee7c 7aae 	vadd.f32	s15, s25, s29
 802883e:	eef0 6a49 	vmov.f32	s13, s18
 8028842:	eee7 6aea 	vfms.f32	s13, s15, s21
 8028846:	ee66 7aa6 	vmul.f32	s15, s13, s13
 802884a:	eee7 7a07 	vfma.f32	s15, s14, s14
 802884e:	eef4 7ac6 	vcmpe.f32	s15, s12
 8028852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028856:	d9e0      	bls.n	802881a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8028858:	3401      	adds	r4, #1
 802885a:	eef0 0a6c 	vmov.f32	s1, s25
 802885e:	eeb0 0a4c 	vmov.f32	s0, s24
 8028862:	4621      	mov	r1, r4
 8028864:	eef0 2a49 	vmov.f32	s5, s18
 8028868:	eeb0 2a68 	vmov.f32	s4, s17
 802886c:	eef0 1a6f 	vmov.f32	s3, s31
 8028870:	eeb0 1a4f 	vmov.f32	s2, s30
 8028874:	4628      	mov	r0, r5
 8028876:	f7ff ff4f 	bl	8028718 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 802887a:	eef0 da4a 	vmov.f32	s27, s20
 802887e:	eeb0 da69 	vmov.f32	s26, s19
 8028882:	eef0 ca49 	vmov.f32	s25, s18
 8028886:	eeb0 ca68 	vmov.f32	s24, s17
 802888a:	e75c      	b.n	8028746 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 802888c:	2edbe6ff 	.word	0x2edbe6ff
 8028890:	40490fdb 	.word	0x40490fdb
 8028894:	40c90fdb 	.word	0x40c90fdb
 8028898:	3dcccccd 	.word	0x3dcccccd

0802889c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 802889c:	b530      	push	{r4, r5, lr}
 802889e:	ed2d 8b10 	vpush	{d8-d15}
 80288a2:	4604      	mov	r4, r0
 80288a4:	b085      	sub	sp, #20
 80288a6:	eef0 8a40 	vmov.f32	s17, s0
 80288aa:	eef0 9a60 	vmov.f32	s19, s1
 80288ae:	eef0 fa41 	vmov.f32	s31, s2
 80288b2:	eeb0 fa61 	vmov.f32	s30, s3
 80288b6:	eef0 ba42 	vmov.f32	s23, s4
 80288ba:	eeb0 ca62 	vmov.f32	s24, s5
 80288be:	eef0 aa43 	vmov.f32	s21, s6
 80288c2:	eeb0 ba63 	vmov.f32	s22, s7
 80288c6:	460d      	mov	r5, r1
 80288c8:	2d08      	cmp	r5, #8
 80288ca:	f200 8115 	bhi.w	8028af8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 80288ce:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 80288d2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80288d6:	ee7f 6aab 	vadd.f32	s13, s31, s23
 80288da:	ee26 6a27 	vmul.f32	s12, s12, s15
 80288de:	ee38 daaf 	vadd.f32	s26, s17, s31
 80288e2:	ed8d 6a01 	vstr	s12, [sp, #4]
 80288e6:	eea6 6aa7 	vfma.f32	s12, s13, s15
 80288ea:	ee2d da27 	vmul.f32	s26, s26, s15
 80288ee:	ee7c ca0b 	vadd.f32	s25, s24, s22
 80288f2:	eeb0 ea4d 	vmov.f32	s28, s26
 80288f6:	eea6 eaa7 	vfma.f32	s28, s13, s15
 80288fa:	ee6c caa7 	vmul.f32	s25, s25, s15
 80288fe:	ee66 6a27 	vmul.f32	s13, s12, s15
 8028902:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8028906:	edcd 6a03 	vstr	s13, [sp, #12]
 802890a:	ee79 da8f 	vadd.f32	s27, s19, s30
 802890e:	eef0 6a6c 	vmov.f32	s13, s25
 8028912:	eee7 6a27 	vfma.f32	s13, s14, s15
 8028916:	ee6d daa7 	vmul.f32	s27, s27, s15
 802891a:	ee2e ea27 	vmul.f32	s28, s28, s15
 802891e:	eef0 ea6d 	vmov.f32	s29, s27
 8028922:	eee7 ea27 	vfma.f32	s29, s14, s15
 8028926:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802892a:	ee6e eaa7 	vmul.f32	s29, s29, s15
 802892e:	ed8d 7a02 	vstr	s14, [sp, #8]
 8028932:	ed9d 7a03 	vldr	s14, [sp, #12]
 8028936:	ee3e 9a07 	vadd.f32	s18, s28, s14
 802893a:	ed9d 7a02 	vldr	s14, [sp, #8]
 802893e:	ee3e aa87 	vadd.f32	s20, s29, s14
 8028942:	ee29 9a27 	vmul.f32	s18, s18, s15
 8028946:	ee2a aa27 	vmul.f32	s20, s20, s15
 802894a:	eef0 6a67 	vmov.f32	s13, s15
 802894e:	2d00      	cmp	r5, #0
 8028950:	f000 810d 	beq.w	8028b6e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8028954:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8028958:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 802895c:	ee7b 7a69 	vsub.f32	s15, s22, s19
 8028960:	ee3f 6aea 	vsub.f32	s12, s31, s21
 8028964:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8028968:	ee3b 5aea 	vsub.f32	s10, s23, s21
 802896c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8028970:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 8028974:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8028978:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 802897c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028980:	eea5 6a27 	vfma.f32	s12, s10, s15
 8028984:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8028bb4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8028988:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 802898c:	bf48      	it	mi
 802898e:	eeb1 7a47 	vnegmi.f32	s14, s14
 8028992:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028996:	eeb4 7ae4 	vcmpe.f32	s14, s9
 802899a:	bf48      	it	mi
 802899c:	eeb1 6a46 	vnegmi.f32	s12, s12
 80289a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80289a4:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 80289a8:	f340 80aa 	ble.w	8028b00 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 80289ac:	eeb4 6ae4 	vcmpe.f32	s12, s9
 80289b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80289b4:	dd5c      	ble.n	8028a70 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 80289b6:	ee65 5aa5 	vmul.f32	s11, s11, s11
 80289ba:	ee37 7a06 	vadd.f32	s14, s14, s12
 80289be:	eee7 5aa7 	vfma.f32	s11, s15, s15
 80289c2:	ee27 7a07 	vmul.f32	s14, s14, s14
 80289c6:	ee65 7a85 	vmul.f32	s15, s11, s10
 80289ca:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80289ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80289d2:	f200 80cc 	bhi.w	8028b6e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80289d6:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80289da:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80289de:	f000 f97e 	bl	8028cde <atan2f>
 80289e2:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 80289e6:	eeb0 8a40 	vmov.f32	s16, s0
 80289ea:	ee3f 0a69 	vsub.f32	s0, s30, s19
 80289ee:	f000 f976 	bl	8028cde <atan2f>
 80289f2:	ee38 fa40 	vsub.f32	s30, s16, s0
 80289f6:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 80289fa:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 80289fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a02:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8028a06:	bf48      	it	mi
 8028a08:	eeb1 fa4f 	vnegmi.f32	s30, s30
 8028a0c:	f000 f967 	bl	8028cde <atan2f>
 8028a10:	ee30 0a48 	vsub.f32	s0, s0, s16
 8028a14:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8028bb8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8028a18:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028a1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a20:	eeb4 fae7 	vcmpe.f32	s30, s15
 8028a24:	bf48      	it	mi
 8028a26:	eeb1 0a40 	vnegmi.f32	s0, s0
 8028a2a:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8028bb8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8028a2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a32:	bfa8      	it	ge
 8028a34:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8028bbc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8028a38:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028a3c:	bfa8      	it	ge
 8028a3e:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 8028a42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a46:	bfa8      	it	ge
 8028a48:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8028bbc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8028a4c:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8028bc0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8028a50:	bfa8      	it	ge
 8028a52:	ee37 0a40 	vsubge.f32	s0, s14, s0
 8028a56:	ee3f 0a00 	vadd.f32	s0, s30, s0
 8028a5a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028a5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a62:	f140 8084 	bpl.w	8028b6e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8028a66:	eef0 0a4a 	vmov.f32	s1, s20
 8028a6a:	eeb0 0a49 	vmov.f32	s0, s18
 8028a6e:	e040      	b.n	8028af2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 8028a70:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028a74:	ee27 7a07 	vmul.f32	s14, s14, s14
 8028a78:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8028a7c:	ee67 7a85 	vmul.f32	s15, s15, s10
 8028a80:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028a84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a88:	d871      	bhi.n	8028b6e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8028a8a:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8028a8e:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8028a92:	f000 f924 	bl	8028cde <atan2f>
 8028a96:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8028a9a:	eeb0 8a40 	vmov.f32	s16, s0
 8028a9e:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8028aa2:	f000 f91c 	bl	8028cde <atan2f>
 8028aa6:	ee38 0a40 	vsub.f32	s0, s16, s0
 8028aaa:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8028bb8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8028aae:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028ab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ab6:	bf48      	it	mi
 8028ab8:	eeb1 0a40 	vnegmi.f32	s0, s0
 8028abc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028ac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ac4:	bfa4      	itt	ge
 8028ac6:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8028bbc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8028aca:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8028ace:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8028bc0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8028ad2:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028ad6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ada:	d548      	bpl.n	8028b6e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8028adc:	eef0 0a4f 	vmov.f32	s1, s30
 8028ae0:	eeb0 0a6f 	vmov.f32	s0, s31
 8028ae4:	4620      	mov	r0, r4
 8028ae6:	f7e8 fcf9 	bl	80114dc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8028aea:	eef0 0a4c 	vmov.f32	s1, s24
 8028aee:	eeb0 0a6b 	vmov.f32	s0, s23
 8028af2:	4620      	mov	r0, r4
 8028af4:	f7e8 fcf2 	bl	80114dc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8028af8:	b005      	add	sp, #20
 8028afa:	ecbd 8b10 	vpop	{d8-d15}
 8028afe:	bd30      	pop	{r4, r5, pc}
 8028b00:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8028bb4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8028b04:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8028b08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b0c:	dd19      	ble.n	8028b42 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 8028b0e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028b12:	ee26 7a06 	vmul.f32	s14, s12, s12
 8028b16:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8028b1a:	ee67 7a85 	vmul.f32	s15, s15, s10
 8028b1e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028b22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b26:	d822      	bhi.n	8028b6e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8028b28:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8028b2c:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8028b30:	f000 f8d5 	bl	8028cde <atan2f>
 8028b34:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8028b38:	eeb0 8a40 	vmov.f32	s16, s0
 8028b3c:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8028b40:	e7af      	b.n	8028aa2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 8028b42:	ee78 7aaa 	vadd.f32	s15, s17, s21
 8028b46:	eeb0 7a49 	vmov.f32	s14, s18
 8028b4a:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8028b4e:	ee79 7a8b 	vadd.f32	s15, s19, s22
 8028b52:	eeb0 6a4a 	vmov.f32	s12, s20
 8028b56:	eea7 6ae6 	vfms.f32	s12, s15, s13
 8028b5a:	ee66 7a06 	vmul.f32	s15, s12, s12
 8028b5e:	eee7 7a07 	vfma.f32	s15, s14, s14
 8028b62:	eef4 7ac5 	vcmpe.f32	s15, s10
 8028b66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b6a:	f67f af7c 	bls.w	8028a66 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 8028b6e:	3501      	adds	r5, #1
 8028b70:	eef0 0a69 	vmov.f32	s1, s19
 8028b74:	eeb0 0a68 	vmov.f32	s0, s17
 8028b78:	4629      	mov	r1, r5
 8028b7a:	eef0 3a4a 	vmov.f32	s7, s20
 8028b7e:	eeb0 3a49 	vmov.f32	s6, s18
 8028b82:	eef0 2a6e 	vmov.f32	s5, s29
 8028b86:	eeb0 2a4e 	vmov.f32	s4, s28
 8028b8a:	eef0 1a6d 	vmov.f32	s3, s27
 8028b8e:	eeb0 1a4d 	vmov.f32	s2, s26
 8028b92:	4620      	mov	r0, r4
 8028b94:	f7ff fe82 	bl	802889c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8028b98:	eeb0 ca6c 	vmov.f32	s24, s25
 8028b9c:	eddd ba01 	vldr	s23, [sp, #4]
 8028ba0:	ed9d fa02 	vldr	s30, [sp, #8]
 8028ba4:	eddd fa03 	vldr	s31, [sp, #12]
 8028ba8:	eef0 9a4a 	vmov.f32	s19, s20
 8028bac:	eef0 8a49 	vmov.f32	s17, s18
 8028bb0:	e68a      	b.n	80288c8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8028bb2:	bf00      	nop
 8028bb4:	2edbe6ff 	.word	0x2edbe6ff
 8028bb8:	40490fdb 	.word	0x40490fdb
 8028bbc:	40c90fdb 	.word	0x40c90fdb
 8028bc0:	3dcccccd 	.word	0x3dcccccd

08028bc4 <_ZN8touchgfx6CanvasD1Ev>:
 8028bc4:	b510      	push	{r4, lr}
 8028bc6:	4b04      	ldr	r3, [pc, #16]	@ (8028bd8 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8028bc8:	4604      	mov	r4, r0
 8028bca:	f840 3b14 	str.w	r3, [r0], #20
 8028bce:	f7ea ff87 	bl	8013ae0 <_ZN8touchgfx7OutlineD1Ev>
 8028bd2:	4620      	mov	r0, r4
 8028bd4:	bd10      	pop	{r4, pc}
 8028bd6:	bf00      	nop
 8028bd8:	0802dbac 	.word	0x0802dbac

08028bdc <_ZN8touchgfx6CanvasD0Ev>:
 8028bdc:	b510      	push	{r4, lr}
 8028bde:	4604      	mov	r4, r0
 8028be0:	f7ff fff0 	bl	8028bc4 <_ZN8touchgfx6CanvasD1Ev>
 8028be4:	4620      	mov	r0, r4
 8028be6:	2174      	movs	r1, #116	@ 0x74
 8028be8:	f000 f826 	bl	8028c38 <_ZdlPvj>
 8028bec:	4620      	mov	r0, r4
 8028bee:	bd10      	pop	{r4, pc}

08028bf0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8028bf0:	b570      	push	{r4, r5, r6, lr}
 8028bf2:	790b      	ldrb	r3, [r1, #4]
 8028bf4:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8028bf8:	2b00      	cmp	r3, #0
 8028bfa:	bf0c      	ite	eq
 8028bfc:	2301      	moveq	r3, #1
 8028bfe:	2300      	movne	r3, #0
 8028c00:	4604      	mov	r4, r0
 8028c02:	460e      	mov	r6, r1
 8028c04:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8028c08:	d109      	bne.n	8028c1e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8028c0a:	b14d      	cbz	r5, 8028c20 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8028c0c:	7933      	ldrb	r3, [r6, #4]
 8028c0e:	2b01      	cmp	r3, #1
 8028c10:	d10c      	bne.n	8028c2c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028c12:	6823      	ldr	r3, [r4, #0]
 8028c14:	4620      	mov	r0, r4
 8028c16:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8028c18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028c1c:	4718      	bx	r3
 8028c1e:	b12d      	cbz	r5, 8028c2c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028c20:	6823      	ldr	r3, [r4, #0]
 8028c22:	4620      	mov	r0, r4
 8028c24:	695b      	ldr	r3, [r3, #20]
 8028c26:	4798      	blx	r3
 8028c28:	2d00      	cmp	r5, #0
 8028c2a:	d1ef      	bne.n	8028c0c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8028c2c:	bd70      	pop	{r4, r5, r6, pc}

08028c2e <__aeabi_atexit>:
 8028c2e:	460b      	mov	r3, r1
 8028c30:	4601      	mov	r1, r0
 8028c32:	4618      	mov	r0, r3
 8028c34:	f001 b920 	b.w	8029e78 <__cxa_atexit>

08028c38 <_ZdlPvj>:
 8028c38:	f000 b812 	b.w	8028c60 <_ZdlPv>

08028c3c <__cxa_guard_acquire>:
 8028c3c:	6802      	ldr	r2, [r0, #0]
 8028c3e:	07d2      	lsls	r2, r2, #31
 8028c40:	4603      	mov	r3, r0
 8028c42:	d405      	bmi.n	8028c50 <__cxa_guard_acquire+0x14>
 8028c44:	7842      	ldrb	r2, [r0, #1]
 8028c46:	b102      	cbz	r2, 8028c4a <__cxa_guard_acquire+0xe>
 8028c48:	deff      	udf	#255	@ 0xff
 8028c4a:	2001      	movs	r0, #1
 8028c4c:	7058      	strb	r0, [r3, #1]
 8028c4e:	4770      	bx	lr
 8028c50:	2000      	movs	r0, #0
 8028c52:	4770      	bx	lr

08028c54 <__cxa_guard_release>:
 8028c54:	2301      	movs	r3, #1
 8028c56:	6003      	str	r3, [r0, #0]
 8028c58:	4770      	bx	lr

08028c5a <__cxa_pure_virtual>:
 8028c5a:	b508      	push	{r3, lr}
 8028c5c:	f000 f80e 	bl	8028c7c <_ZSt9terminatev>

08028c60 <_ZdlPv>:
 8028c60:	f001 b854 	b.w	8029d0c <free>

08028c64 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8028c64:	b508      	push	{r3, lr}
 8028c66:	4780      	blx	r0
 8028c68:	f001 f81c 	bl	8029ca4 <abort>

08028c6c <_ZSt13get_terminatev>:
 8028c6c:	4b02      	ldr	r3, [pc, #8]	@ (8028c78 <_ZSt13get_terminatev+0xc>)
 8028c6e:	6818      	ldr	r0, [r3, #0]
 8028c70:	f3bf 8f5b 	dmb	ish
 8028c74:	4770      	bx	lr
 8028c76:	bf00      	nop
 8028c78:	20000100 	.word	0x20000100

08028c7c <_ZSt9terminatev>:
 8028c7c:	b508      	push	{r3, lr}
 8028c7e:	f7ff fff5 	bl	8028c6c <_ZSt13get_terminatev>
 8028c82:	f7ff ffef 	bl	8028c64 <_ZN10__cxxabiv111__terminateEPFvvE>

08028c86 <sqrt>:
 8028c86:	b538      	push	{r3, r4, r5, lr}
 8028c88:	ed2d 8b02 	vpush	{d8}
 8028c8c:	ec55 4b10 	vmov	r4, r5, d0
 8028c90:	f000 f8d0 	bl	8028e34 <__ieee754_sqrt>
 8028c94:	4622      	mov	r2, r4
 8028c96:	462b      	mov	r3, r5
 8028c98:	4620      	mov	r0, r4
 8028c9a:	4629      	mov	r1, r5
 8028c9c:	eeb0 8a40 	vmov.f32	s16, s0
 8028ca0:	eef0 8a60 	vmov.f32	s17, s1
 8028ca4:	f7d7 ff52 	bl	8000b4c <__aeabi_dcmpun>
 8028ca8:	b990      	cbnz	r0, 8028cd0 <sqrt+0x4a>
 8028caa:	2200      	movs	r2, #0
 8028cac:	2300      	movs	r3, #0
 8028cae:	4620      	mov	r0, r4
 8028cb0:	4629      	mov	r1, r5
 8028cb2:	f7d7 ff23 	bl	8000afc <__aeabi_dcmplt>
 8028cb6:	b158      	cbz	r0, 8028cd0 <sqrt+0x4a>
 8028cb8:	f001 fada 	bl	802a270 <__errno>
 8028cbc:	2321      	movs	r3, #33	@ 0x21
 8028cbe:	6003      	str	r3, [r0, #0]
 8028cc0:	2200      	movs	r2, #0
 8028cc2:	2300      	movs	r3, #0
 8028cc4:	4610      	mov	r0, r2
 8028cc6:	4619      	mov	r1, r3
 8028cc8:	f7d7 fdd0 	bl	800086c <__aeabi_ddiv>
 8028ccc:	ec41 0b18 	vmov	d8, r0, r1
 8028cd0:	eeb0 0a48 	vmov.f32	s0, s16
 8028cd4:	eef0 0a68 	vmov.f32	s1, s17
 8028cd8:	ecbd 8b02 	vpop	{d8}
 8028cdc:	bd38      	pop	{r3, r4, r5, pc}

08028cde <atan2f>:
 8028cde:	f000 ba23 	b.w	8029128 <__ieee754_atan2f>
	...

08028ce4 <sqrtf>:
 8028ce4:	b508      	push	{r3, lr}
 8028ce6:	ed2d 8b02 	vpush	{d8}
 8028cea:	eeb0 8a40 	vmov.f32	s16, s0
 8028cee:	f000 f977 	bl	8028fe0 <__ieee754_sqrtf>
 8028cf2:	eeb4 8a48 	vcmp.f32	s16, s16
 8028cf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cfa:	d60c      	bvs.n	8028d16 <sqrtf+0x32>
 8028cfc:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8028d1c <sqrtf+0x38>
 8028d00:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8028d04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d08:	d505      	bpl.n	8028d16 <sqrtf+0x32>
 8028d0a:	f001 fab1 	bl	802a270 <__errno>
 8028d0e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8028d12:	2321      	movs	r3, #33	@ 0x21
 8028d14:	6003      	str	r3, [r0, #0]
 8028d16:	ecbd 8b02 	vpop	{d8}
 8028d1a:	bd08      	pop	{r3, pc}
 8028d1c:	00000000 	.word	0x00000000

08028d20 <cosf>:
 8028d20:	ee10 3a10 	vmov	r3, s0
 8028d24:	b507      	push	{r0, r1, r2, lr}
 8028d26:	4a1e      	ldr	r2, [pc, #120]	@ (8028da0 <cosf+0x80>)
 8028d28:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8028d2c:	4293      	cmp	r3, r2
 8028d2e:	d806      	bhi.n	8028d3e <cosf+0x1e>
 8028d30:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8028da4 <cosf+0x84>
 8028d34:	b003      	add	sp, #12
 8028d36:	f85d eb04 	ldr.w	lr, [sp], #4
 8028d3a:	f000 b955 	b.w	8028fe8 <__kernel_cosf>
 8028d3e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8028d42:	d304      	bcc.n	8028d4e <cosf+0x2e>
 8028d44:	ee30 0a40 	vsub.f32	s0, s0, s0
 8028d48:	b003      	add	sp, #12
 8028d4a:	f85d fb04 	ldr.w	pc, [sp], #4
 8028d4e:	4668      	mov	r0, sp
 8028d50:	f000 fa8a 	bl	8029268 <__ieee754_rem_pio2f>
 8028d54:	f000 0003 	and.w	r0, r0, #3
 8028d58:	2801      	cmp	r0, #1
 8028d5a:	d009      	beq.n	8028d70 <cosf+0x50>
 8028d5c:	2802      	cmp	r0, #2
 8028d5e:	d010      	beq.n	8028d82 <cosf+0x62>
 8028d60:	b9b0      	cbnz	r0, 8028d90 <cosf+0x70>
 8028d62:	eddd 0a01 	vldr	s1, [sp, #4]
 8028d66:	ed9d 0a00 	vldr	s0, [sp]
 8028d6a:	f000 f93d 	bl	8028fe8 <__kernel_cosf>
 8028d6e:	e7eb      	b.n	8028d48 <cosf+0x28>
 8028d70:	eddd 0a01 	vldr	s1, [sp, #4]
 8028d74:	ed9d 0a00 	vldr	s0, [sp]
 8028d78:	f000 f98e 	bl	8029098 <__kernel_sinf>
 8028d7c:	eeb1 0a40 	vneg.f32	s0, s0
 8028d80:	e7e2      	b.n	8028d48 <cosf+0x28>
 8028d82:	eddd 0a01 	vldr	s1, [sp, #4]
 8028d86:	ed9d 0a00 	vldr	s0, [sp]
 8028d8a:	f000 f92d 	bl	8028fe8 <__kernel_cosf>
 8028d8e:	e7f5      	b.n	8028d7c <cosf+0x5c>
 8028d90:	eddd 0a01 	vldr	s1, [sp, #4]
 8028d94:	ed9d 0a00 	vldr	s0, [sp]
 8028d98:	2001      	movs	r0, #1
 8028d9a:	f000 f97d 	bl	8029098 <__kernel_sinf>
 8028d9e:	e7d3      	b.n	8028d48 <cosf+0x28>
 8028da0:	3f490fd8 	.word	0x3f490fd8
 8028da4:	00000000 	.word	0x00000000

08028da8 <sinf>:
 8028da8:	ee10 3a10 	vmov	r3, s0
 8028dac:	b507      	push	{r0, r1, r2, lr}
 8028dae:	4a1f      	ldr	r2, [pc, #124]	@ (8028e2c <sinf+0x84>)
 8028db0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8028db4:	4293      	cmp	r3, r2
 8028db6:	d807      	bhi.n	8028dc8 <sinf+0x20>
 8028db8:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8028e30 <sinf+0x88>
 8028dbc:	2000      	movs	r0, #0
 8028dbe:	b003      	add	sp, #12
 8028dc0:	f85d eb04 	ldr.w	lr, [sp], #4
 8028dc4:	f000 b968 	b.w	8029098 <__kernel_sinf>
 8028dc8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8028dcc:	d304      	bcc.n	8028dd8 <sinf+0x30>
 8028dce:	ee30 0a40 	vsub.f32	s0, s0, s0
 8028dd2:	b003      	add	sp, #12
 8028dd4:	f85d fb04 	ldr.w	pc, [sp], #4
 8028dd8:	4668      	mov	r0, sp
 8028dda:	f000 fa45 	bl	8029268 <__ieee754_rem_pio2f>
 8028dde:	f000 0003 	and.w	r0, r0, #3
 8028de2:	2801      	cmp	r0, #1
 8028de4:	d00a      	beq.n	8028dfc <sinf+0x54>
 8028de6:	2802      	cmp	r0, #2
 8028de8:	d00f      	beq.n	8028e0a <sinf+0x62>
 8028dea:	b9c0      	cbnz	r0, 8028e1e <sinf+0x76>
 8028dec:	eddd 0a01 	vldr	s1, [sp, #4]
 8028df0:	ed9d 0a00 	vldr	s0, [sp]
 8028df4:	2001      	movs	r0, #1
 8028df6:	f000 f94f 	bl	8029098 <__kernel_sinf>
 8028dfa:	e7ea      	b.n	8028dd2 <sinf+0x2a>
 8028dfc:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e00:	ed9d 0a00 	vldr	s0, [sp]
 8028e04:	f000 f8f0 	bl	8028fe8 <__kernel_cosf>
 8028e08:	e7e3      	b.n	8028dd2 <sinf+0x2a>
 8028e0a:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e0e:	ed9d 0a00 	vldr	s0, [sp]
 8028e12:	2001      	movs	r0, #1
 8028e14:	f000 f940 	bl	8029098 <__kernel_sinf>
 8028e18:	eeb1 0a40 	vneg.f32	s0, s0
 8028e1c:	e7d9      	b.n	8028dd2 <sinf+0x2a>
 8028e1e:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e22:	ed9d 0a00 	vldr	s0, [sp]
 8028e26:	f000 f8df 	bl	8028fe8 <__kernel_cosf>
 8028e2a:	e7f5      	b.n	8028e18 <sinf+0x70>
 8028e2c:	3f490fd8 	.word	0x3f490fd8
 8028e30:	00000000 	.word	0x00000000

08028e34 <__ieee754_sqrt>:
 8028e34:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028e38:	4a66      	ldr	r2, [pc, #408]	@ (8028fd4 <__ieee754_sqrt+0x1a0>)
 8028e3a:	ec55 4b10 	vmov	r4, r5, d0
 8028e3e:	43aa      	bics	r2, r5
 8028e40:	462b      	mov	r3, r5
 8028e42:	4621      	mov	r1, r4
 8028e44:	d110      	bne.n	8028e68 <__ieee754_sqrt+0x34>
 8028e46:	4622      	mov	r2, r4
 8028e48:	4620      	mov	r0, r4
 8028e4a:	4629      	mov	r1, r5
 8028e4c:	f7d7 fbe4 	bl	8000618 <__aeabi_dmul>
 8028e50:	4602      	mov	r2, r0
 8028e52:	460b      	mov	r3, r1
 8028e54:	4620      	mov	r0, r4
 8028e56:	4629      	mov	r1, r5
 8028e58:	f7d7 fa28 	bl	80002ac <__adddf3>
 8028e5c:	4604      	mov	r4, r0
 8028e5e:	460d      	mov	r5, r1
 8028e60:	ec45 4b10 	vmov	d0, r4, r5
 8028e64:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028e68:	2d00      	cmp	r5, #0
 8028e6a:	dc0e      	bgt.n	8028e8a <__ieee754_sqrt+0x56>
 8028e6c:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 8028e70:	4322      	orrs	r2, r4
 8028e72:	d0f5      	beq.n	8028e60 <__ieee754_sqrt+0x2c>
 8028e74:	b19d      	cbz	r5, 8028e9e <__ieee754_sqrt+0x6a>
 8028e76:	4622      	mov	r2, r4
 8028e78:	4620      	mov	r0, r4
 8028e7a:	4629      	mov	r1, r5
 8028e7c:	f7d7 fa14 	bl	80002a8 <__aeabi_dsub>
 8028e80:	4602      	mov	r2, r0
 8028e82:	460b      	mov	r3, r1
 8028e84:	f7d7 fcf2 	bl	800086c <__aeabi_ddiv>
 8028e88:	e7e8      	b.n	8028e5c <__ieee754_sqrt+0x28>
 8028e8a:	152a      	asrs	r2, r5, #20
 8028e8c:	d115      	bne.n	8028eba <__ieee754_sqrt+0x86>
 8028e8e:	2000      	movs	r0, #0
 8028e90:	e009      	b.n	8028ea6 <__ieee754_sqrt+0x72>
 8028e92:	0acb      	lsrs	r3, r1, #11
 8028e94:	3a15      	subs	r2, #21
 8028e96:	0549      	lsls	r1, r1, #21
 8028e98:	2b00      	cmp	r3, #0
 8028e9a:	d0fa      	beq.n	8028e92 <__ieee754_sqrt+0x5e>
 8028e9c:	e7f7      	b.n	8028e8e <__ieee754_sqrt+0x5a>
 8028e9e:	462a      	mov	r2, r5
 8028ea0:	e7fa      	b.n	8028e98 <__ieee754_sqrt+0x64>
 8028ea2:	005b      	lsls	r3, r3, #1
 8028ea4:	3001      	adds	r0, #1
 8028ea6:	02dc      	lsls	r4, r3, #11
 8028ea8:	d5fb      	bpl.n	8028ea2 <__ieee754_sqrt+0x6e>
 8028eaa:	1e44      	subs	r4, r0, #1
 8028eac:	1b12      	subs	r2, r2, r4
 8028eae:	f1c0 0420 	rsb	r4, r0, #32
 8028eb2:	fa21 f404 	lsr.w	r4, r1, r4
 8028eb6:	4323      	orrs	r3, r4
 8028eb8:	4081      	lsls	r1, r0
 8028eba:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8028ebe:	f2a2 37ff 	subw	r7, r2, #1023	@ 0x3ff
 8028ec2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8028ec6:	07d2      	lsls	r2, r2, #31
 8028ec8:	bf5c      	itt	pl
 8028eca:	005b      	lslpl	r3, r3, #1
 8028ecc:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 8028ed0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8028ed4:	bf58      	it	pl
 8028ed6:	0049      	lslpl	r1, r1, #1
 8028ed8:	2600      	movs	r6, #0
 8028eda:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 8028ede:	107f      	asrs	r7, r7, #1
 8028ee0:	0049      	lsls	r1, r1, #1
 8028ee2:	2016      	movs	r0, #22
 8028ee4:	4632      	mov	r2, r6
 8028ee6:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 8028eea:	1915      	adds	r5, r2, r4
 8028eec:	429d      	cmp	r5, r3
 8028eee:	bfde      	ittt	le
 8028ef0:	192a      	addle	r2, r5, r4
 8028ef2:	1b5b      	suble	r3, r3, r5
 8028ef4:	1936      	addle	r6, r6, r4
 8028ef6:	0fcd      	lsrs	r5, r1, #31
 8028ef8:	3801      	subs	r0, #1
 8028efa:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8028efe:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8028f02:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8028f06:	d1f0      	bne.n	8028eea <__ieee754_sqrt+0xb6>
 8028f08:	4605      	mov	r5, r0
 8028f0a:	2420      	movs	r4, #32
 8028f0c:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8028f10:	4293      	cmp	r3, r2
 8028f12:	eb0c 0e00 	add.w	lr, ip, r0
 8028f16:	dc02      	bgt.n	8028f1e <__ieee754_sqrt+0xea>
 8028f18:	d113      	bne.n	8028f42 <__ieee754_sqrt+0x10e>
 8028f1a:	458e      	cmp	lr, r1
 8028f1c:	d811      	bhi.n	8028f42 <__ieee754_sqrt+0x10e>
 8028f1e:	f1be 0f00 	cmp.w	lr, #0
 8028f22:	eb0e 000c 	add.w	r0, lr, ip
 8028f26:	da3f      	bge.n	8028fa8 <__ieee754_sqrt+0x174>
 8028f28:	2800      	cmp	r0, #0
 8028f2a:	db3d      	blt.n	8028fa8 <__ieee754_sqrt+0x174>
 8028f2c:	f102 0801 	add.w	r8, r2, #1
 8028f30:	1a9b      	subs	r3, r3, r2
 8028f32:	458e      	cmp	lr, r1
 8028f34:	bf88      	it	hi
 8028f36:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8028f3a:	eba1 010e 	sub.w	r1, r1, lr
 8028f3e:	4465      	add	r5, ip
 8028f40:	4642      	mov	r2, r8
 8028f42:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 8028f46:	3c01      	subs	r4, #1
 8028f48:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8028f4c:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8028f50:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8028f54:	d1dc      	bne.n	8028f10 <__ieee754_sqrt+0xdc>
 8028f56:	4319      	orrs	r1, r3
 8028f58:	d01b      	beq.n	8028f92 <__ieee754_sqrt+0x15e>
 8028f5a:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 8028fd8 <__ieee754_sqrt+0x1a4>
 8028f5e:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 8028fdc <__ieee754_sqrt+0x1a8>
 8028f62:	e9da 0100 	ldrd	r0, r1, [sl]
 8028f66:	e9db 2300 	ldrd	r2, r3, [fp]
 8028f6a:	f7d7 f99d 	bl	80002a8 <__aeabi_dsub>
 8028f6e:	e9da 8900 	ldrd	r8, r9, [sl]
 8028f72:	4602      	mov	r2, r0
 8028f74:	460b      	mov	r3, r1
 8028f76:	4640      	mov	r0, r8
 8028f78:	4649      	mov	r1, r9
 8028f7a:	f7d7 fdc9 	bl	8000b10 <__aeabi_dcmple>
 8028f7e:	b140      	cbz	r0, 8028f92 <__ieee754_sqrt+0x15e>
 8028f80:	f1b5 3fff 	cmp.w	r5, #4294967295
 8028f84:	e9da 0100 	ldrd	r0, r1, [sl]
 8028f88:	e9db 2300 	ldrd	r2, r3, [fp]
 8028f8c:	d10e      	bne.n	8028fac <__ieee754_sqrt+0x178>
 8028f8e:	3601      	adds	r6, #1
 8028f90:	4625      	mov	r5, r4
 8028f92:	1073      	asrs	r3, r6, #1
 8028f94:	f103 537f 	add.w	r3, r3, #1069547520	@ 0x3fc00000
 8028f98:	f503 1300 	add.w	r3, r3, #2097152	@ 0x200000
 8028f9c:	eb03 5107 	add.w	r1, r3, r7, lsl #20
 8028fa0:	086b      	lsrs	r3, r5, #1
 8028fa2:	ea43 70c6 	orr.w	r0, r3, r6, lsl #31
 8028fa6:	e759      	b.n	8028e5c <__ieee754_sqrt+0x28>
 8028fa8:	4690      	mov	r8, r2
 8028faa:	e7c1      	b.n	8028f30 <__ieee754_sqrt+0xfc>
 8028fac:	f7d7 f97e 	bl	80002ac <__adddf3>
 8028fb0:	e9da 8900 	ldrd	r8, r9, [sl]
 8028fb4:	4602      	mov	r2, r0
 8028fb6:	460b      	mov	r3, r1
 8028fb8:	4640      	mov	r0, r8
 8028fba:	4649      	mov	r1, r9
 8028fbc:	f7d7 fd9e 	bl	8000afc <__aeabi_dcmplt>
 8028fc0:	b120      	cbz	r0, 8028fcc <__ieee754_sqrt+0x198>
 8028fc2:	1cab      	adds	r3, r5, #2
 8028fc4:	bf08      	it	eq
 8028fc6:	3601      	addeq	r6, #1
 8028fc8:	3502      	adds	r5, #2
 8028fca:	e7e2      	b.n	8028f92 <__ieee754_sqrt+0x15e>
 8028fcc:	1c6b      	adds	r3, r5, #1
 8028fce:	f023 0501 	bic.w	r5, r3, #1
 8028fd2:	e7de      	b.n	8028f92 <__ieee754_sqrt+0x15e>
 8028fd4:	7ff00000 	.word	0x7ff00000
 8028fd8:	0802dbc0 	.word	0x0802dbc0
 8028fdc:	0802dbb8 	.word	0x0802dbb8

08028fe0 <__ieee754_sqrtf>:
 8028fe0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8028fe4:	4770      	bx	lr
	...

08028fe8 <__kernel_cosf>:
 8028fe8:	ee10 3a10 	vmov	r3, s0
 8028fec:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8028ff0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8028ff4:	eef0 6a40 	vmov.f32	s13, s0
 8028ff8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8028ffc:	d204      	bcs.n	8029008 <__kernel_cosf+0x20>
 8028ffe:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8029002:	ee17 2a90 	vmov	r2, s15
 8029006:	b342      	cbz	r2, 802905a <__kernel_cosf+0x72>
 8029008:	ee26 7aa6 	vmul.f32	s14, s13, s13
 802900c:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8029078 <__kernel_cosf+0x90>
 8029010:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 802907c <__kernel_cosf+0x94>
 8029014:	4a1a      	ldr	r2, [pc, #104]	@ (8029080 <__kernel_cosf+0x98>)
 8029016:	eea7 6a27 	vfma.f32	s12, s14, s15
 802901a:	4293      	cmp	r3, r2
 802901c:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8029084 <__kernel_cosf+0x9c>
 8029020:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029024:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8029088 <__kernel_cosf+0xa0>
 8029028:	eea7 6a87 	vfma.f32	s12, s15, s14
 802902c:	eddf 7a17 	vldr	s15, [pc, #92]	@ 802908c <__kernel_cosf+0xa4>
 8029030:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029034:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8029090 <__kernel_cosf+0xa8>
 8029038:	eea7 6a87 	vfma.f32	s12, s15, s14
 802903c:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8029040:	ee26 6a07 	vmul.f32	s12, s12, s14
 8029044:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8029048:	eee7 0a06 	vfma.f32	s1, s14, s12
 802904c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029050:	d804      	bhi.n	802905c <__kernel_cosf+0x74>
 8029052:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8029056:	ee30 0a67 	vsub.f32	s0, s0, s15
 802905a:	4770      	bx	lr
 802905c:	4a0d      	ldr	r2, [pc, #52]	@ (8029094 <__kernel_cosf+0xac>)
 802905e:	4293      	cmp	r3, r2
 8029060:	bf9a      	itte	ls
 8029062:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8029066:	ee07 3a10 	vmovls	s14, r3
 802906a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802906e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8029072:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029076:	e7ec      	b.n	8029052 <__kernel_cosf+0x6a>
 8029078:	ad47d74e 	.word	0xad47d74e
 802907c:	310f74f6 	.word	0x310f74f6
 8029080:	3e999999 	.word	0x3e999999
 8029084:	b493f27c 	.word	0xb493f27c
 8029088:	37d00d01 	.word	0x37d00d01
 802908c:	bab60b61 	.word	0xbab60b61
 8029090:	3d2aaaab 	.word	0x3d2aaaab
 8029094:	3f480000 	.word	0x3f480000

08029098 <__kernel_sinf>:
 8029098:	ee10 3a10 	vmov	r3, s0
 802909c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80290a0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80290a4:	d204      	bcs.n	80290b0 <__kernel_sinf+0x18>
 80290a6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80290aa:	ee17 3a90 	vmov	r3, s15
 80290ae:	b35b      	cbz	r3, 8029108 <__kernel_sinf+0x70>
 80290b0:	ee20 7a00 	vmul.f32	s14, s0, s0
 80290b4:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802910c <__kernel_sinf+0x74>
 80290b8:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8029110 <__kernel_sinf+0x78>
 80290bc:	eea7 6a27 	vfma.f32	s12, s14, s15
 80290c0:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8029114 <__kernel_sinf+0x7c>
 80290c4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80290c8:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8029118 <__kernel_sinf+0x80>
 80290cc:	eea7 6a87 	vfma.f32	s12, s15, s14
 80290d0:	eddf 7a12 	vldr	s15, [pc, #72]	@ 802911c <__kernel_sinf+0x84>
 80290d4:	ee60 6a07 	vmul.f32	s13, s0, s14
 80290d8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80290dc:	b930      	cbnz	r0, 80290ec <__kernel_sinf+0x54>
 80290de:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8029120 <__kernel_sinf+0x88>
 80290e2:	eea7 6a27 	vfma.f32	s12, s14, s15
 80290e6:	eea6 0a26 	vfma.f32	s0, s12, s13
 80290ea:	4770      	bx	lr
 80290ec:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80290f0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80290f4:	eee0 7a86 	vfma.f32	s15, s1, s12
 80290f8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80290fc:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8029124 <__kernel_sinf+0x8c>
 8029100:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8029104:	ee30 0a60 	vsub.f32	s0, s0, s1
 8029108:	4770      	bx	lr
 802910a:	bf00      	nop
 802910c:	2f2ec9d3 	.word	0x2f2ec9d3
 8029110:	b2d72f34 	.word	0xb2d72f34
 8029114:	3638ef1b 	.word	0x3638ef1b
 8029118:	b9500d01 	.word	0xb9500d01
 802911c:	3c088889 	.word	0x3c088889
 8029120:	be2aaaab 	.word	0xbe2aaaab
 8029124:	3e2aaaab 	.word	0x3e2aaaab

08029128 <__ieee754_atan2f>:
 8029128:	ee10 2a90 	vmov	r2, s1
 802912c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8029130:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8029134:	b510      	push	{r4, lr}
 8029136:	eef0 7a40 	vmov.f32	s15, s0
 802913a:	d806      	bhi.n	802914a <__ieee754_atan2f+0x22>
 802913c:	ee10 0a10 	vmov	r0, s0
 8029140:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8029144:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8029148:	d904      	bls.n	8029154 <__ieee754_atan2f+0x2c>
 802914a:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802914e:	eeb0 0a67 	vmov.f32	s0, s15
 8029152:	bd10      	pop	{r4, pc}
 8029154:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8029158:	d103      	bne.n	8029162 <__ieee754_atan2f+0x3a>
 802915a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802915e:	f000 b9b3 	b.w	80294c8 <atanf>
 8029162:	1794      	asrs	r4, r2, #30
 8029164:	f004 0402 	and.w	r4, r4, #2
 8029168:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 802916c:	b943      	cbnz	r3, 8029180 <__ieee754_atan2f+0x58>
 802916e:	2c02      	cmp	r4, #2
 8029170:	d05e      	beq.n	8029230 <__ieee754_atan2f+0x108>
 8029172:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8029244 <__ieee754_atan2f+0x11c>
 8029176:	2c03      	cmp	r4, #3
 8029178:	bf08      	it	eq
 802917a:	eef0 7a47 	vmoveq.f32	s15, s14
 802917e:	e7e6      	b.n	802914e <__ieee754_atan2f+0x26>
 8029180:	b941      	cbnz	r1, 8029194 <__ieee754_atan2f+0x6c>
 8029182:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8029248 <__ieee754_atan2f+0x120>
 8029186:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802924c <__ieee754_atan2f+0x124>
 802918a:	2800      	cmp	r0, #0
 802918c:	bfa8      	it	ge
 802918e:	eef0 7a47 	vmovge.f32	s15, s14
 8029192:	e7dc      	b.n	802914e <__ieee754_atan2f+0x26>
 8029194:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8029198:	d110      	bne.n	80291bc <__ieee754_atan2f+0x94>
 802919a:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802919e:	f104 34ff 	add.w	r4, r4, #4294967295
 80291a2:	d107      	bne.n	80291b4 <__ieee754_atan2f+0x8c>
 80291a4:	2c02      	cmp	r4, #2
 80291a6:	d846      	bhi.n	8029236 <__ieee754_atan2f+0x10e>
 80291a8:	4b29      	ldr	r3, [pc, #164]	@ (8029250 <__ieee754_atan2f+0x128>)
 80291aa:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80291ae:	edd3 7a00 	vldr	s15, [r3]
 80291b2:	e7cc      	b.n	802914e <__ieee754_atan2f+0x26>
 80291b4:	2c02      	cmp	r4, #2
 80291b6:	d841      	bhi.n	802923c <__ieee754_atan2f+0x114>
 80291b8:	4b26      	ldr	r3, [pc, #152]	@ (8029254 <__ieee754_atan2f+0x12c>)
 80291ba:	e7f6      	b.n	80291aa <__ieee754_atan2f+0x82>
 80291bc:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80291c0:	d0df      	beq.n	8029182 <__ieee754_atan2f+0x5a>
 80291c2:	1a5b      	subs	r3, r3, r1
 80291c4:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 80291c8:	ea4f 51e3 	mov.w	r1, r3, asr #23
 80291cc:	da1a      	bge.n	8029204 <__ieee754_atan2f+0xdc>
 80291ce:	2a00      	cmp	r2, #0
 80291d0:	da01      	bge.n	80291d6 <__ieee754_atan2f+0xae>
 80291d2:	313c      	adds	r1, #60	@ 0x3c
 80291d4:	db19      	blt.n	802920a <__ieee754_atan2f+0xe2>
 80291d6:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 80291da:	f000 fa49 	bl	8029670 <fabsf>
 80291de:	f000 f973 	bl	80294c8 <atanf>
 80291e2:	eef0 7a40 	vmov.f32	s15, s0
 80291e6:	2c01      	cmp	r4, #1
 80291e8:	d012      	beq.n	8029210 <__ieee754_atan2f+0xe8>
 80291ea:	2c02      	cmp	r4, #2
 80291ec:	d017      	beq.n	802921e <__ieee754_atan2f+0xf6>
 80291ee:	2c00      	cmp	r4, #0
 80291f0:	d0ad      	beq.n	802914e <__ieee754_atan2f+0x26>
 80291f2:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8029258 <__ieee754_atan2f+0x130>
 80291f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80291fa:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 802925c <__ieee754_atan2f+0x134>
 80291fe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029202:	e7a4      	b.n	802914e <__ieee754_atan2f+0x26>
 8029204:	eddf 7a11 	vldr	s15, [pc, #68]	@ 802924c <__ieee754_atan2f+0x124>
 8029208:	e7ed      	b.n	80291e6 <__ieee754_atan2f+0xbe>
 802920a:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8029260 <__ieee754_atan2f+0x138>
 802920e:	e7ea      	b.n	80291e6 <__ieee754_atan2f+0xbe>
 8029210:	ee17 3a90 	vmov	r3, s15
 8029214:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8029218:	ee07 3a90 	vmov	s15, r3
 802921c:	e797      	b.n	802914e <__ieee754_atan2f+0x26>
 802921e:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8029258 <__ieee754_atan2f+0x130>
 8029222:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029226:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 802925c <__ieee754_atan2f+0x134>
 802922a:	ee77 7a67 	vsub.f32	s15, s14, s15
 802922e:	e78e      	b.n	802914e <__ieee754_atan2f+0x26>
 8029230:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 802925c <__ieee754_atan2f+0x134>
 8029234:	e78b      	b.n	802914e <__ieee754_atan2f+0x26>
 8029236:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8029264 <__ieee754_atan2f+0x13c>
 802923a:	e788      	b.n	802914e <__ieee754_atan2f+0x26>
 802923c:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8029260 <__ieee754_atan2f+0x138>
 8029240:	e785      	b.n	802914e <__ieee754_atan2f+0x26>
 8029242:	bf00      	nop
 8029244:	c0490fdb 	.word	0xc0490fdb
 8029248:	bfc90fdb 	.word	0xbfc90fdb
 802924c:	3fc90fdb 	.word	0x3fc90fdb
 8029250:	0802dbd4 	.word	0x0802dbd4
 8029254:	0802dbc8 	.word	0x0802dbc8
 8029258:	33bbbd2e 	.word	0x33bbbd2e
 802925c:	40490fdb 	.word	0x40490fdb
 8029260:	00000000 	.word	0x00000000
 8029264:	3f490fdb 	.word	0x3f490fdb

08029268 <__ieee754_rem_pio2f>:
 8029268:	b5f0      	push	{r4, r5, r6, r7, lr}
 802926a:	ee10 6a10 	vmov	r6, s0
 802926e:	4b88      	ldr	r3, [pc, #544]	@ (8029490 <__ieee754_rem_pio2f+0x228>)
 8029270:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8029274:	429d      	cmp	r5, r3
 8029276:	b087      	sub	sp, #28
 8029278:	4604      	mov	r4, r0
 802927a:	d805      	bhi.n	8029288 <__ieee754_rem_pio2f+0x20>
 802927c:	2300      	movs	r3, #0
 802927e:	ed80 0a00 	vstr	s0, [r0]
 8029282:	6043      	str	r3, [r0, #4]
 8029284:	2000      	movs	r0, #0
 8029286:	e022      	b.n	80292ce <__ieee754_rem_pio2f+0x66>
 8029288:	4b82      	ldr	r3, [pc, #520]	@ (8029494 <__ieee754_rem_pio2f+0x22c>)
 802928a:	429d      	cmp	r5, r3
 802928c:	d83a      	bhi.n	8029304 <__ieee754_rem_pio2f+0x9c>
 802928e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8029292:	2e00      	cmp	r6, #0
 8029294:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8029498 <__ieee754_rem_pio2f+0x230>
 8029298:	4a80      	ldr	r2, [pc, #512]	@ (802949c <__ieee754_rem_pio2f+0x234>)
 802929a:	f023 030f 	bic.w	r3, r3, #15
 802929e:	dd18      	ble.n	80292d2 <__ieee754_rem_pio2f+0x6a>
 80292a0:	4293      	cmp	r3, r2
 80292a2:	ee70 7a47 	vsub.f32	s15, s0, s14
 80292a6:	bf09      	itett	eq
 80292a8:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 80294a0 <__ieee754_rem_pio2f+0x238>
 80292ac:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 80294a4 <__ieee754_rem_pio2f+0x23c>
 80292b0:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 80294a8 <__ieee754_rem_pio2f+0x240>
 80292b4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80292b8:	ee37 7ae6 	vsub.f32	s14, s15, s13
 80292bc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80292c0:	ed80 7a00 	vstr	s14, [r0]
 80292c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80292c8:	edc0 7a01 	vstr	s15, [r0, #4]
 80292cc:	2001      	movs	r0, #1
 80292ce:	b007      	add	sp, #28
 80292d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80292d2:	4293      	cmp	r3, r2
 80292d4:	ee70 7a07 	vadd.f32	s15, s0, s14
 80292d8:	bf09      	itett	eq
 80292da:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 80294a0 <__ieee754_rem_pio2f+0x238>
 80292de:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 80294a4 <__ieee754_rem_pio2f+0x23c>
 80292e2:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 80294a8 <__ieee754_rem_pio2f+0x240>
 80292e6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80292ea:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80292ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80292f2:	ed80 7a00 	vstr	s14, [r0]
 80292f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80292fa:	edc0 7a01 	vstr	s15, [r0, #4]
 80292fe:	f04f 30ff 	mov.w	r0, #4294967295
 8029302:	e7e4      	b.n	80292ce <__ieee754_rem_pio2f+0x66>
 8029304:	4b69      	ldr	r3, [pc, #420]	@ (80294ac <__ieee754_rem_pio2f+0x244>)
 8029306:	429d      	cmp	r5, r3
 8029308:	d873      	bhi.n	80293f2 <__ieee754_rem_pio2f+0x18a>
 802930a:	f000 f9b1 	bl	8029670 <fabsf>
 802930e:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 80294b0 <__ieee754_rem_pio2f+0x248>
 8029312:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8029316:	eee0 7a07 	vfma.f32	s15, s0, s14
 802931a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802931e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8029322:	ee17 0a90 	vmov	r0, s15
 8029326:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8029498 <__ieee754_rem_pio2f+0x230>
 802932a:	eea7 0a67 	vfms.f32	s0, s14, s15
 802932e:	281f      	cmp	r0, #31
 8029330:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80294a4 <__ieee754_rem_pio2f+0x23c>
 8029334:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029338:	eeb1 6a47 	vneg.f32	s12, s14
 802933c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029340:	ee16 1a90 	vmov	r1, s13
 8029344:	dc09      	bgt.n	802935a <__ieee754_rem_pio2f+0xf2>
 8029346:	4a5b      	ldr	r2, [pc, #364]	@ (80294b4 <__ieee754_rem_pio2f+0x24c>)
 8029348:	1e47      	subs	r7, r0, #1
 802934a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802934e:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8029352:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8029356:	4293      	cmp	r3, r2
 8029358:	d107      	bne.n	802936a <__ieee754_rem_pio2f+0x102>
 802935a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 802935e:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8029362:	2a08      	cmp	r2, #8
 8029364:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8029368:	dc14      	bgt.n	8029394 <__ieee754_rem_pio2f+0x12c>
 802936a:	6021      	str	r1, [r4, #0]
 802936c:	ed94 7a00 	vldr	s14, [r4]
 8029370:	ee30 0a47 	vsub.f32	s0, s0, s14
 8029374:	2e00      	cmp	r6, #0
 8029376:	ee30 0a67 	vsub.f32	s0, s0, s15
 802937a:	ed84 0a01 	vstr	s0, [r4, #4]
 802937e:	daa6      	bge.n	80292ce <__ieee754_rem_pio2f+0x66>
 8029380:	eeb1 7a47 	vneg.f32	s14, s14
 8029384:	eeb1 0a40 	vneg.f32	s0, s0
 8029388:	ed84 7a00 	vstr	s14, [r4]
 802938c:	ed84 0a01 	vstr	s0, [r4, #4]
 8029390:	4240      	negs	r0, r0
 8029392:	e79c      	b.n	80292ce <__ieee754_rem_pio2f+0x66>
 8029394:	eddf 5a42 	vldr	s11, [pc, #264]	@ 80294a0 <__ieee754_rem_pio2f+0x238>
 8029398:	eef0 6a40 	vmov.f32	s13, s0
 802939c:	eee6 6a25 	vfma.f32	s13, s12, s11
 80293a0:	ee70 7a66 	vsub.f32	s15, s0, s13
 80293a4:	eee6 7a25 	vfma.f32	s15, s12, s11
 80293a8:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 80294a8 <__ieee754_rem_pio2f+0x240>
 80293ac:	eed7 7a25 	vfnms.f32	s15, s14, s11
 80293b0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80293b4:	ee15 2a90 	vmov	r2, s11
 80293b8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80293bc:	1a5b      	subs	r3, r3, r1
 80293be:	2b19      	cmp	r3, #25
 80293c0:	dc04      	bgt.n	80293cc <__ieee754_rem_pio2f+0x164>
 80293c2:	edc4 5a00 	vstr	s11, [r4]
 80293c6:	eeb0 0a66 	vmov.f32	s0, s13
 80293ca:	e7cf      	b.n	802936c <__ieee754_rem_pio2f+0x104>
 80293cc:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80294b8 <__ieee754_rem_pio2f+0x250>
 80293d0:	eeb0 0a66 	vmov.f32	s0, s13
 80293d4:	eea6 0a25 	vfma.f32	s0, s12, s11
 80293d8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80293dc:	eddf 6a37 	vldr	s13, [pc, #220]	@ 80294bc <__ieee754_rem_pio2f+0x254>
 80293e0:	eee6 7a25 	vfma.f32	s15, s12, s11
 80293e4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80293e8:	ee30 7a67 	vsub.f32	s14, s0, s15
 80293ec:	ed84 7a00 	vstr	s14, [r4]
 80293f0:	e7bc      	b.n	802936c <__ieee754_rem_pio2f+0x104>
 80293f2:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 80293f6:	d306      	bcc.n	8029406 <__ieee754_rem_pio2f+0x19e>
 80293f8:	ee70 7a40 	vsub.f32	s15, s0, s0
 80293fc:	edc0 7a01 	vstr	s15, [r0, #4]
 8029400:	edc0 7a00 	vstr	s15, [r0]
 8029404:	e73e      	b.n	8029284 <__ieee754_rem_pio2f+0x1c>
 8029406:	15ea      	asrs	r2, r5, #23
 8029408:	3a86      	subs	r2, #134	@ 0x86
 802940a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802940e:	ee07 3a90 	vmov	s15, r3
 8029412:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8029416:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 80294c0 <__ieee754_rem_pio2f+0x258>
 802941a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802941e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029422:	ed8d 7a03 	vstr	s14, [sp, #12]
 8029426:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802942a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802942e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8029432:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029436:	ed8d 7a04 	vstr	s14, [sp, #16]
 802943a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802943e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8029442:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029446:	edcd 7a05 	vstr	s15, [sp, #20]
 802944a:	d11e      	bne.n	802948a <__ieee754_rem_pio2f+0x222>
 802944c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8029450:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029454:	bf0c      	ite	eq
 8029456:	2301      	moveq	r3, #1
 8029458:	2302      	movne	r3, #2
 802945a:	491a      	ldr	r1, [pc, #104]	@ (80294c4 <__ieee754_rem_pio2f+0x25c>)
 802945c:	9101      	str	r1, [sp, #4]
 802945e:	2102      	movs	r1, #2
 8029460:	9100      	str	r1, [sp, #0]
 8029462:	a803      	add	r0, sp, #12
 8029464:	4621      	mov	r1, r4
 8029466:	f000 f971 	bl	802974c <__kernel_rem_pio2f>
 802946a:	2e00      	cmp	r6, #0
 802946c:	f6bf af2f 	bge.w	80292ce <__ieee754_rem_pio2f+0x66>
 8029470:	edd4 7a00 	vldr	s15, [r4]
 8029474:	eef1 7a67 	vneg.f32	s15, s15
 8029478:	edc4 7a00 	vstr	s15, [r4]
 802947c:	edd4 7a01 	vldr	s15, [r4, #4]
 8029480:	eef1 7a67 	vneg.f32	s15, s15
 8029484:	edc4 7a01 	vstr	s15, [r4, #4]
 8029488:	e782      	b.n	8029390 <__ieee754_rem_pio2f+0x128>
 802948a:	2303      	movs	r3, #3
 802948c:	e7e5      	b.n	802945a <__ieee754_rem_pio2f+0x1f2>
 802948e:	bf00      	nop
 8029490:	3f490fd8 	.word	0x3f490fd8
 8029494:	4016cbe3 	.word	0x4016cbe3
 8029498:	3fc90f80 	.word	0x3fc90f80
 802949c:	3fc90fd0 	.word	0x3fc90fd0
 80294a0:	37354400 	.word	0x37354400
 80294a4:	37354443 	.word	0x37354443
 80294a8:	2e85a308 	.word	0x2e85a308
 80294ac:	43490f80 	.word	0x43490f80
 80294b0:	3f22f984 	.word	0x3f22f984
 80294b4:	0802dbe0 	.word	0x0802dbe0
 80294b8:	2e85a300 	.word	0x2e85a300
 80294bc:	248d3132 	.word	0x248d3132
 80294c0:	43800000 	.word	0x43800000
 80294c4:	0802dc60 	.word	0x0802dc60

080294c8 <atanf>:
 80294c8:	b538      	push	{r3, r4, r5, lr}
 80294ca:	ee10 5a10 	vmov	r5, s0
 80294ce:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 80294d2:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 80294d6:	eef0 7a40 	vmov.f32	s15, s0
 80294da:	d310      	bcc.n	80294fe <atanf+0x36>
 80294dc:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 80294e0:	d904      	bls.n	80294ec <atanf+0x24>
 80294e2:	ee70 7a00 	vadd.f32	s15, s0, s0
 80294e6:	eeb0 0a67 	vmov.f32	s0, s15
 80294ea:	bd38      	pop	{r3, r4, r5, pc}
 80294ec:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8029624 <atanf+0x15c>
 80294f0:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8029628 <atanf+0x160>
 80294f4:	2d00      	cmp	r5, #0
 80294f6:	bfc8      	it	gt
 80294f8:	eef0 7a47 	vmovgt.f32	s15, s14
 80294fc:	e7f3      	b.n	80294e6 <atanf+0x1e>
 80294fe:	4b4b      	ldr	r3, [pc, #300]	@ (802962c <atanf+0x164>)
 8029500:	429c      	cmp	r4, r3
 8029502:	d810      	bhi.n	8029526 <atanf+0x5e>
 8029504:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8029508:	d20a      	bcs.n	8029520 <atanf+0x58>
 802950a:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8029630 <atanf+0x168>
 802950e:	ee30 7a07 	vadd.f32	s14, s0, s14
 8029512:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8029516:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802951a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802951e:	dce2      	bgt.n	80294e6 <atanf+0x1e>
 8029520:	f04f 33ff 	mov.w	r3, #4294967295
 8029524:	e013      	b.n	802954e <atanf+0x86>
 8029526:	f000 f8a3 	bl	8029670 <fabsf>
 802952a:	4b42      	ldr	r3, [pc, #264]	@ (8029634 <atanf+0x16c>)
 802952c:	429c      	cmp	r4, r3
 802952e:	d84f      	bhi.n	80295d0 <atanf+0x108>
 8029530:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8029534:	429c      	cmp	r4, r3
 8029536:	d841      	bhi.n	80295bc <atanf+0xf4>
 8029538:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 802953c:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8029540:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029544:	2300      	movs	r3, #0
 8029546:	ee30 0a27 	vadd.f32	s0, s0, s15
 802954a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802954e:	1c5a      	adds	r2, r3, #1
 8029550:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8029554:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8029638 <atanf+0x170>
 8029558:	eddf 5a38 	vldr	s11, [pc, #224]	@ 802963c <atanf+0x174>
 802955c:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8029640 <atanf+0x178>
 8029560:	ee66 6a06 	vmul.f32	s13, s12, s12
 8029564:	eee6 5a87 	vfma.f32	s11, s13, s14
 8029568:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8029644 <atanf+0x17c>
 802956c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029570:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8029648 <atanf+0x180>
 8029574:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029578:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802964c <atanf+0x184>
 802957c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029580:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8029650 <atanf+0x188>
 8029584:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029588:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8029654 <atanf+0x18c>
 802958c:	eea6 5a87 	vfma.f32	s10, s13, s14
 8029590:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8029658 <atanf+0x190>
 8029594:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029598:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 802965c <atanf+0x194>
 802959c:	eea7 5a26 	vfma.f32	s10, s14, s13
 80295a0:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8029660 <atanf+0x198>
 80295a4:	eea5 7a26 	vfma.f32	s14, s10, s13
 80295a8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80295ac:	eea5 7a86 	vfma.f32	s14, s11, s12
 80295b0:	ee27 7a87 	vmul.f32	s14, s15, s14
 80295b4:	d121      	bne.n	80295fa <atanf+0x132>
 80295b6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80295ba:	e794      	b.n	80294e6 <atanf+0x1e>
 80295bc:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80295c0:	ee30 7a67 	vsub.f32	s14, s0, s15
 80295c4:	ee30 0a27 	vadd.f32	s0, s0, s15
 80295c8:	2301      	movs	r3, #1
 80295ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80295ce:	e7be      	b.n	802954e <atanf+0x86>
 80295d0:	4b24      	ldr	r3, [pc, #144]	@ (8029664 <atanf+0x19c>)
 80295d2:	429c      	cmp	r4, r3
 80295d4:	d80b      	bhi.n	80295ee <atanf+0x126>
 80295d6:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 80295da:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80295de:	eea0 7a27 	vfma.f32	s14, s0, s15
 80295e2:	2302      	movs	r3, #2
 80295e4:	ee70 6a67 	vsub.f32	s13, s0, s15
 80295e8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80295ec:	e7af      	b.n	802954e <atanf+0x86>
 80295ee:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80295f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80295f6:	2303      	movs	r3, #3
 80295f8:	e7a9      	b.n	802954e <atanf+0x86>
 80295fa:	4a1b      	ldr	r2, [pc, #108]	@ (8029668 <atanf+0x1a0>)
 80295fc:	491b      	ldr	r1, [pc, #108]	@ (802966c <atanf+0x1a4>)
 80295fe:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029602:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8029606:	edd3 6a00 	vldr	s13, [r3]
 802960a:	ee37 7a66 	vsub.f32	s14, s14, s13
 802960e:	2d00      	cmp	r5, #0
 8029610:	ee37 7a67 	vsub.f32	s14, s14, s15
 8029614:	edd2 7a00 	vldr	s15, [r2]
 8029618:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802961c:	bfb8      	it	lt
 802961e:	eef1 7a67 	vneglt.f32	s15, s15
 8029622:	e760      	b.n	80294e6 <atanf+0x1e>
 8029624:	bfc90fdb 	.word	0xbfc90fdb
 8029628:	3fc90fdb 	.word	0x3fc90fdb
 802962c:	3edfffff 	.word	0x3edfffff
 8029630:	7149f2ca 	.word	0x7149f2ca
 8029634:	3f97ffff 	.word	0x3f97ffff
 8029638:	3c8569d7 	.word	0x3c8569d7
 802963c:	3d4bda59 	.word	0x3d4bda59
 8029640:	bd6ef16b 	.word	0xbd6ef16b
 8029644:	3d886b35 	.word	0x3d886b35
 8029648:	3dba2e6e 	.word	0x3dba2e6e
 802964c:	3e124925 	.word	0x3e124925
 8029650:	3eaaaaab 	.word	0x3eaaaaab
 8029654:	bd15a221 	.word	0xbd15a221
 8029658:	bd9d8795 	.word	0xbd9d8795
 802965c:	bde38e38 	.word	0xbde38e38
 8029660:	be4ccccd 	.word	0xbe4ccccd
 8029664:	401bffff 	.word	0x401bffff
 8029668:	0802df88 	.word	0x0802df88
 802966c:	0802df78 	.word	0x0802df78

08029670 <fabsf>:
 8029670:	ee10 3a10 	vmov	r3, s0
 8029674:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8029678:	ee00 3a10 	vmov	s0, r3
 802967c:	4770      	bx	lr
	...

08029680 <scalbnf>:
 8029680:	ee10 3a10 	vmov	r3, s0
 8029684:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8029688:	d02b      	beq.n	80296e2 <scalbnf+0x62>
 802968a:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802968e:	d302      	bcc.n	8029696 <scalbnf+0x16>
 8029690:	ee30 0a00 	vadd.f32	s0, s0, s0
 8029694:	4770      	bx	lr
 8029696:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 802969a:	d123      	bne.n	80296e4 <scalbnf+0x64>
 802969c:	4b24      	ldr	r3, [pc, #144]	@ (8029730 <scalbnf+0xb0>)
 802969e:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8029734 <scalbnf+0xb4>
 80296a2:	4298      	cmp	r0, r3
 80296a4:	ee20 0a27 	vmul.f32	s0, s0, s15
 80296a8:	db17      	blt.n	80296da <scalbnf+0x5a>
 80296aa:	ee10 3a10 	vmov	r3, s0
 80296ae:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80296b2:	3a19      	subs	r2, #25
 80296b4:	f24c 3150 	movw	r1, #50000	@ 0xc350
 80296b8:	4288      	cmp	r0, r1
 80296ba:	dd15      	ble.n	80296e8 <scalbnf+0x68>
 80296bc:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8029738 <scalbnf+0xb8>
 80296c0:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 802973c <scalbnf+0xbc>
 80296c4:	ee10 3a10 	vmov	r3, s0
 80296c8:	eeb0 7a67 	vmov.f32	s14, s15
 80296cc:	2b00      	cmp	r3, #0
 80296ce:	bfb8      	it	lt
 80296d0:	eef0 7a66 	vmovlt.f32	s15, s13
 80296d4:	ee27 0a87 	vmul.f32	s0, s15, s14
 80296d8:	4770      	bx	lr
 80296da:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8029740 <scalbnf+0xc0>
 80296de:	ee27 0a80 	vmul.f32	s0, s15, s0
 80296e2:	4770      	bx	lr
 80296e4:	0dd2      	lsrs	r2, r2, #23
 80296e6:	e7e5      	b.n	80296b4 <scalbnf+0x34>
 80296e8:	4410      	add	r0, r2
 80296ea:	28fe      	cmp	r0, #254	@ 0xfe
 80296ec:	dce6      	bgt.n	80296bc <scalbnf+0x3c>
 80296ee:	2800      	cmp	r0, #0
 80296f0:	dd06      	ble.n	8029700 <scalbnf+0x80>
 80296f2:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80296f6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80296fa:	ee00 3a10 	vmov	s0, r3
 80296fe:	4770      	bx	lr
 8029700:	f110 0f16 	cmn.w	r0, #22
 8029704:	da09      	bge.n	802971a <scalbnf+0x9a>
 8029706:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8029740 <scalbnf+0xc0>
 802970a:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8029744 <scalbnf+0xc4>
 802970e:	ee10 3a10 	vmov	r3, s0
 8029712:	eeb0 7a67 	vmov.f32	s14, s15
 8029716:	2b00      	cmp	r3, #0
 8029718:	e7d9      	b.n	80296ce <scalbnf+0x4e>
 802971a:	3019      	adds	r0, #25
 802971c:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8029720:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029724:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8029748 <scalbnf+0xc8>
 8029728:	ee07 3a90 	vmov	s15, r3
 802972c:	e7d7      	b.n	80296de <scalbnf+0x5e>
 802972e:	bf00      	nop
 8029730:	ffff3cb0 	.word	0xffff3cb0
 8029734:	4c000000 	.word	0x4c000000
 8029738:	7149f2ca 	.word	0x7149f2ca
 802973c:	f149f2ca 	.word	0xf149f2ca
 8029740:	0da24260 	.word	0x0da24260
 8029744:	8da24260 	.word	0x8da24260
 8029748:	33000000 	.word	0x33000000

0802974c <__kernel_rem_pio2f>:
 802974c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029750:	ed2d 8b04 	vpush	{d8-d9}
 8029754:	b0d9      	sub	sp, #356	@ 0x164
 8029756:	4690      	mov	r8, r2
 8029758:	9001      	str	r0, [sp, #4]
 802975a:	4ab6      	ldr	r2, [pc, #728]	@ (8029a34 <__kernel_rem_pio2f+0x2e8>)
 802975c:	9866      	ldr	r0, [sp, #408]	@ 0x198
 802975e:	f118 0f04 	cmn.w	r8, #4
 8029762:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8029766:	460f      	mov	r7, r1
 8029768:	f103 3bff 	add.w	fp, r3, #4294967295
 802976c:	db26      	blt.n	80297bc <__kernel_rem_pio2f+0x70>
 802976e:	f1b8 0203 	subs.w	r2, r8, #3
 8029772:	bf48      	it	mi
 8029774:	f108 0204 	addmi.w	r2, r8, #4
 8029778:	10d2      	asrs	r2, r2, #3
 802977a:	1c55      	adds	r5, r2, #1
 802977c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802977e:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8029a44 <__kernel_rem_pio2f+0x2f8>
 8029782:	00e8      	lsls	r0, r5, #3
 8029784:	eba2 060b 	sub.w	r6, r2, fp
 8029788:	9002      	str	r0, [sp, #8]
 802978a:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 802978e:	eb0a 0c0b 	add.w	ip, sl, fp
 8029792:	ac1c      	add	r4, sp, #112	@ 0x70
 8029794:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8029798:	2000      	movs	r0, #0
 802979a:	4560      	cmp	r0, ip
 802979c:	dd10      	ble.n	80297c0 <__kernel_rem_pio2f+0x74>
 802979e:	a91c      	add	r1, sp, #112	@ 0x70
 80297a0:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80297a4:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 80297a8:	2600      	movs	r6, #0
 80297aa:	4556      	cmp	r6, sl
 80297ac:	dc24      	bgt.n	80297f8 <__kernel_rem_pio2f+0xac>
 80297ae:	f8dd e004 	ldr.w	lr, [sp, #4]
 80297b2:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8029a44 <__kernel_rem_pio2f+0x2f8>
 80297b6:	4684      	mov	ip, r0
 80297b8:	2400      	movs	r4, #0
 80297ba:	e016      	b.n	80297ea <__kernel_rem_pio2f+0x9e>
 80297bc:	2200      	movs	r2, #0
 80297be:	e7dc      	b.n	802977a <__kernel_rem_pio2f+0x2e>
 80297c0:	42c6      	cmn	r6, r0
 80297c2:	bf5d      	ittte	pl
 80297c4:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80297c8:	ee07 1a90 	vmovpl	s15, r1
 80297cc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80297d0:	eef0 7a47 	vmovmi.f32	s15, s14
 80297d4:	ece4 7a01 	vstmia	r4!, {s15}
 80297d8:	3001      	adds	r0, #1
 80297da:	e7de      	b.n	802979a <__kernel_rem_pio2f+0x4e>
 80297dc:	ecfe 6a01 	vldmia	lr!, {s13}
 80297e0:	ed3c 7a01 	vldmdb	ip!, {s14}
 80297e4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80297e8:	3401      	adds	r4, #1
 80297ea:	455c      	cmp	r4, fp
 80297ec:	ddf6      	ble.n	80297dc <__kernel_rem_pio2f+0x90>
 80297ee:	ece9 7a01 	vstmia	r9!, {s15}
 80297f2:	3601      	adds	r6, #1
 80297f4:	3004      	adds	r0, #4
 80297f6:	e7d8      	b.n	80297aa <__kernel_rem_pio2f+0x5e>
 80297f8:	a908      	add	r1, sp, #32
 80297fa:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80297fe:	9104      	str	r1, [sp, #16]
 8029800:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8029802:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8029a40 <__kernel_rem_pio2f+0x2f4>
 8029806:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8029a3c <__kernel_rem_pio2f+0x2f0>
 802980a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 802980e:	9203      	str	r2, [sp, #12]
 8029810:	4654      	mov	r4, sl
 8029812:	00a2      	lsls	r2, r4, #2
 8029814:	9205      	str	r2, [sp, #20]
 8029816:	aa58      	add	r2, sp, #352	@ 0x160
 8029818:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 802981c:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8029820:	a944      	add	r1, sp, #272	@ 0x110
 8029822:	aa08      	add	r2, sp, #32
 8029824:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8029828:	4694      	mov	ip, r2
 802982a:	4626      	mov	r6, r4
 802982c:	2e00      	cmp	r6, #0
 802982e:	dc4c      	bgt.n	80298ca <__kernel_rem_pio2f+0x17e>
 8029830:	4628      	mov	r0, r5
 8029832:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029836:	f7ff ff23 	bl	8029680 <scalbnf>
 802983a:	eeb0 8a40 	vmov.f32	s16, s0
 802983e:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8029842:	ee28 0a00 	vmul.f32	s0, s16, s0
 8029846:	f000 f9e9 	bl	8029c1c <floorf>
 802984a:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 802984e:	eea0 8a67 	vfms.f32	s16, s0, s15
 8029852:	2d00      	cmp	r5, #0
 8029854:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8029858:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802985c:	ee17 9a90 	vmov	r9, s15
 8029860:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029864:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029868:	dd41      	ble.n	80298ee <__kernel_rem_pio2f+0x1a2>
 802986a:	f104 3cff 	add.w	ip, r4, #4294967295
 802986e:	a908      	add	r1, sp, #32
 8029870:	f1c5 0e08 	rsb	lr, r5, #8
 8029874:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8029878:	fa46 f00e 	asr.w	r0, r6, lr
 802987c:	4481      	add	r9, r0
 802987e:	fa00 f00e 	lsl.w	r0, r0, lr
 8029882:	1a36      	subs	r6, r6, r0
 8029884:	f1c5 0007 	rsb	r0, r5, #7
 8029888:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 802988c:	4106      	asrs	r6, r0
 802988e:	2e00      	cmp	r6, #0
 8029890:	dd3c      	ble.n	802990c <__kernel_rem_pio2f+0x1c0>
 8029892:	f04f 0e00 	mov.w	lr, #0
 8029896:	f109 0901 	add.w	r9, r9, #1
 802989a:	4670      	mov	r0, lr
 802989c:	4574      	cmp	r4, lr
 802989e:	dc68      	bgt.n	8029972 <__kernel_rem_pio2f+0x226>
 80298a0:	2d00      	cmp	r5, #0
 80298a2:	dd03      	ble.n	80298ac <__kernel_rem_pio2f+0x160>
 80298a4:	2d01      	cmp	r5, #1
 80298a6:	d074      	beq.n	8029992 <__kernel_rem_pio2f+0x246>
 80298a8:	2d02      	cmp	r5, #2
 80298aa:	d07d      	beq.n	80299a8 <__kernel_rem_pio2f+0x25c>
 80298ac:	2e02      	cmp	r6, #2
 80298ae:	d12d      	bne.n	802990c <__kernel_rem_pio2f+0x1c0>
 80298b0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80298b4:	ee30 8a48 	vsub.f32	s16, s0, s16
 80298b8:	b340      	cbz	r0, 802990c <__kernel_rem_pio2f+0x1c0>
 80298ba:	4628      	mov	r0, r5
 80298bc:	9306      	str	r3, [sp, #24]
 80298be:	f7ff fedf 	bl	8029680 <scalbnf>
 80298c2:	9b06      	ldr	r3, [sp, #24]
 80298c4:	ee38 8a40 	vsub.f32	s16, s16, s0
 80298c8:	e020      	b.n	802990c <__kernel_rem_pio2f+0x1c0>
 80298ca:	ee60 7a28 	vmul.f32	s15, s0, s17
 80298ce:	3e01      	subs	r6, #1
 80298d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80298d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80298d8:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80298dc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80298e0:	ecac 0a01 	vstmia	ip!, {s0}
 80298e4:	ed30 0a01 	vldmdb	r0!, {s0}
 80298e8:	ee37 0a80 	vadd.f32	s0, s15, s0
 80298ec:	e79e      	b.n	802982c <__kernel_rem_pio2f+0xe0>
 80298ee:	d105      	bne.n	80298fc <__kernel_rem_pio2f+0x1b0>
 80298f0:	1e60      	subs	r0, r4, #1
 80298f2:	a908      	add	r1, sp, #32
 80298f4:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 80298f8:	11f6      	asrs	r6, r6, #7
 80298fa:	e7c8      	b.n	802988e <__kernel_rem_pio2f+0x142>
 80298fc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8029900:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8029904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029908:	da31      	bge.n	802996e <__kernel_rem_pio2f+0x222>
 802990a:	2600      	movs	r6, #0
 802990c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8029910:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029914:	f040 8098 	bne.w	8029a48 <__kernel_rem_pio2f+0x2fc>
 8029918:	1e60      	subs	r0, r4, #1
 802991a:	2200      	movs	r2, #0
 802991c:	4550      	cmp	r0, sl
 802991e:	da4b      	bge.n	80299b8 <__kernel_rem_pio2f+0x26c>
 8029920:	2a00      	cmp	r2, #0
 8029922:	d065      	beq.n	80299f0 <__kernel_rem_pio2f+0x2a4>
 8029924:	3c01      	subs	r4, #1
 8029926:	ab08      	add	r3, sp, #32
 8029928:	3d08      	subs	r5, #8
 802992a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802992e:	2b00      	cmp	r3, #0
 8029930:	d0f8      	beq.n	8029924 <__kernel_rem_pio2f+0x1d8>
 8029932:	4628      	mov	r0, r5
 8029934:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8029938:	f7ff fea2 	bl	8029680 <scalbnf>
 802993c:	1c63      	adds	r3, r4, #1
 802993e:	aa44      	add	r2, sp, #272	@ 0x110
 8029940:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8029a40 <__kernel_rem_pio2f+0x2f4>
 8029944:	0099      	lsls	r1, r3, #2
 8029946:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802994a:	4623      	mov	r3, r4
 802994c:	2b00      	cmp	r3, #0
 802994e:	f280 80a9 	bge.w	8029aa4 <__kernel_rem_pio2f+0x358>
 8029952:	4623      	mov	r3, r4
 8029954:	2b00      	cmp	r3, #0
 8029956:	f2c0 80c7 	blt.w	8029ae8 <__kernel_rem_pio2f+0x39c>
 802995a:	aa44      	add	r2, sp, #272	@ 0x110
 802995c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8029960:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8029a38 <__kernel_rem_pio2f+0x2ec>
 8029964:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8029a44 <__kernel_rem_pio2f+0x2f8>
 8029968:	2000      	movs	r0, #0
 802996a:	1ae2      	subs	r2, r4, r3
 802996c:	e0b1      	b.n	8029ad2 <__kernel_rem_pio2f+0x386>
 802996e:	2602      	movs	r6, #2
 8029970:	e78f      	b.n	8029892 <__kernel_rem_pio2f+0x146>
 8029972:	f852 1b04 	ldr.w	r1, [r2], #4
 8029976:	b948      	cbnz	r0, 802998c <__kernel_rem_pio2f+0x240>
 8029978:	b121      	cbz	r1, 8029984 <__kernel_rem_pio2f+0x238>
 802997a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802997e:	f842 1c04 	str.w	r1, [r2, #-4]
 8029982:	2101      	movs	r1, #1
 8029984:	f10e 0e01 	add.w	lr, lr, #1
 8029988:	4608      	mov	r0, r1
 802998a:	e787      	b.n	802989c <__kernel_rem_pio2f+0x150>
 802998c:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8029990:	e7f5      	b.n	802997e <__kernel_rem_pio2f+0x232>
 8029992:	f104 3cff 	add.w	ip, r4, #4294967295
 8029996:	aa08      	add	r2, sp, #32
 8029998:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802999c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80299a0:	a908      	add	r1, sp, #32
 80299a2:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80299a6:	e781      	b.n	80298ac <__kernel_rem_pio2f+0x160>
 80299a8:	f104 3cff 	add.w	ip, r4, #4294967295
 80299ac:	aa08      	add	r2, sp, #32
 80299ae:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80299b2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80299b6:	e7f3      	b.n	80299a0 <__kernel_rem_pio2f+0x254>
 80299b8:	a908      	add	r1, sp, #32
 80299ba:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80299be:	3801      	subs	r0, #1
 80299c0:	430a      	orrs	r2, r1
 80299c2:	e7ab      	b.n	802991c <__kernel_rem_pio2f+0x1d0>
 80299c4:	3201      	adds	r2, #1
 80299c6:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80299ca:	2e00      	cmp	r6, #0
 80299cc:	d0fa      	beq.n	80299c4 <__kernel_rem_pio2f+0x278>
 80299ce:	9905      	ldr	r1, [sp, #20]
 80299d0:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80299d4:	eb0d 0001 	add.w	r0, sp, r1
 80299d8:	18e6      	adds	r6, r4, r3
 80299da:	a91c      	add	r1, sp, #112	@ 0x70
 80299dc:	f104 0c01 	add.w	ip, r4, #1
 80299e0:	384c      	subs	r0, #76	@ 0x4c
 80299e2:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80299e6:	4422      	add	r2, r4
 80299e8:	4562      	cmp	r2, ip
 80299ea:	da04      	bge.n	80299f6 <__kernel_rem_pio2f+0x2aa>
 80299ec:	4614      	mov	r4, r2
 80299ee:	e710      	b.n	8029812 <__kernel_rem_pio2f+0xc6>
 80299f0:	9804      	ldr	r0, [sp, #16]
 80299f2:	2201      	movs	r2, #1
 80299f4:	e7e7      	b.n	80299c6 <__kernel_rem_pio2f+0x27a>
 80299f6:	9903      	ldr	r1, [sp, #12]
 80299f8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80299fc:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8029a00:	9105      	str	r1, [sp, #20]
 8029a02:	ee07 1a90 	vmov	s15, r1
 8029a06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029a0a:	2400      	movs	r4, #0
 8029a0c:	ece6 7a01 	vstmia	r6!, {s15}
 8029a10:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8029a44 <__kernel_rem_pio2f+0x2f8>
 8029a14:	46b1      	mov	r9, r6
 8029a16:	455c      	cmp	r4, fp
 8029a18:	dd04      	ble.n	8029a24 <__kernel_rem_pio2f+0x2d8>
 8029a1a:	ece0 7a01 	vstmia	r0!, {s15}
 8029a1e:	f10c 0c01 	add.w	ip, ip, #1
 8029a22:	e7e1      	b.n	80299e8 <__kernel_rem_pio2f+0x29c>
 8029a24:	ecfe 6a01 	vldmia	lr!, {s13}
 8029a28:	ed39 7a01 	vldmdb	r9!, {s14}
 8029a2c:	3401      	adds	r4, #1
 8029a2e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029a32:	e7f0      	b.n	8029a16 <__kernel_rem_pio2f+0x2ca>
 8029a34:	0802dfc4 	.word	0x0802dfc4
 8029a38:	0802df98 	.word	0x0802df98
 8029a3c:	43800000 	.word	0x43800000
 8029a40:	3b800000 	.word	0x3b800000
 8029a44:	00000000 	.word	0x00000000
 8029a48:	9b02      	ldr	r3, [sp, #8]
 8029a4a:	eeb0 0a48 	vmov.f32	s0, s16
 8029a4e:	eba3 0008 	sub.w	r0, r3, r8
 8029a52:	f7ff fe15 	bl	8029680 <scalbnf>
 8029a56:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8029a3c <__kernel_rem_pio2f+0x2f0>
 8029a5a:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8029a5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a62:	db19      	blt.n	8029a98 <__kernel_rem_pio2f+0x34c>
 8029a64:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8029a40 <__kernel_rem_pio2f+0x2f4>
 8029a68:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029a6c:	aa08      	add	r2, sp, #32
 8029a6e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029a72:	3508      	adds	r5, #8
 8029a74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029a78:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8029a7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029a80:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029a84:	ee10 3a10 	vmov	r3, s0
 8029a88:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8029a8c:	ee17 3a90 	vmov	r3, s15
 8029a90:	3401      	adds	r4, #1
 8029a92:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8029a96:	e74c      	b.n	8029932 <__kernel_rem_pio2f+0x1e6>
 8029a98:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029a9c:	aa08      	add	r2, sp, #32
 8029a9e:	ee10 3a10 	vmov	r3, s0
 8029aa2:	e7f6      	b.n	8029a92 <__kernel_rem_pio2f+0x346>
 8029aa4:	a808      	add	r0, sp, #32
 8029aa6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8029aaa:	9001      	str	r0, [sp, #4]
 8029aac:	ee07 0a90 	vmov	s15, r0
 8029ab0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029ab4:	3b01      	subs	r3, #1
 8029ab6:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029aba:	ee20 0a07 	vmul.f32	s0, s0, s14
 8029abe:	ed62 7a01 	vstmdb	r2!, {s15}
 8029ac2:	e743      	b.n	802994c <__kernel_rem_pio2f+0x200>
 8029ac4:	ecfc 6a01 	vldmia	ip!, {s13}
 8029ac8:	ecb5 7a01 	vldmia	r5!, {s14}
 8029acc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029ad0:	3001      	adds	r0, #1
 8029ad2:	4550      	cmp	r0, sl
 8029ad4:	dc01      	bgt.n	8029ada <__kernel_rem_pio2f+0x38e>
 8029ad6:	4290      	cmp	r0, r2
 8029ad8:	ddf4      	ble.n	8029ac4 <__kernel_rem_pio2f+0x378>
 8029ada:	a858      	add	r0, sp, #352	@ 0x160
 8029adc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8029ae0:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8029ae4:	3b01      	subs	r3, #1
 8029ae6:	e735      	b.n	8029954 <__kernel_rem_pio2f+0x208>
 8029ae8:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8029aea:	2b02      	cmp	r3, #2
 8029aec:	dc09      	bgt.n	8029b02 <__kernel_rem_pio2f+0x3b6>
 8029aee:	2b00      	cmp	r3, #0
 8029af0:	dc27      	bgt.n	8029b42 <__kernel_rem_pio2f+0x3f6>
 8029af2:	d040      	beq.n	8029b76 <__kernel_rem_pio2f+0x42a>
 8029af4:	f009 0007 	and.w	r0, r9, #7
 8029af8:	b059      	add	sp, #356	@ 0x164
 8029afa:	ecbd 8b04 	vpop	{d8-d9}
 8029afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029b02:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8029b04:	2b03      	cmp	r3, #3
 8029b06:	d1f5      	bne.n	8029af4 <__kernel_rem_pio2f+0x3a8>
 8029b08:	aa30      	add	r2, sp, #192	@ 0xc0
 8029b0a:	1f0b      	subs	r3, r1, #4
 8029b0c:	4413      	add	r3, r2
 8029b0e:	461a      	mov	r2, r3
 8029b10:	4620      	mov	r0, r4
 8029b12:	2800      	cmp	r0, #0
 8029b14:	dc50      	bgt.n	8029bb8 <__kernel_rem_pio2f+0x46c>
 8029b16:	4622      	mov	r2, r4
 8029b18:	2a01      	cmp	r2, #1
 8029b1a:	dc5d      	bgt.n	8029bd8 <__kernel_rem_pio2f+0x48c>
 8029b1c:	ab30      	add	r3, sp, #192	@ 0xc0
 8029b1e:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8029a44 <__kernel_rem_pio2f+0x2f8>
 8029b22:	440b      	add	r3, r1
 8029b24:	2c01      	cmp	r4, #1
 8029b26:	dc67      	bgt.n	8029bf8 <__kernel_rem_pio2f+0x4ac>
 8029b28:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8029b2c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8029b30:	2e00      	cmp	r6, #0
 8029b32:	d167      	bne.n	8029c04 <__kernel_rem_pio2f+0x4b8>
 8029b34:	edc7 6a00 	vstr	s13, [r7]
 8029b38:	ed87 7a01 	vstr	s14, [r7, #4]
 8029b3c:	edc7 7a02 	vstr	s15, [r7, #8]
 8029b40:	e7d8      	b.n	8029af4 <__kernel_rem_pio2f+0x3a8>
 8029b42:	ab30      	add	r3, sp, #192	@ 0xc0
 8029b44:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8029a44 <__kernel_rem_pio2f+0x2f8>
 8029b48:	440b      	add	r3, r1
 8029b4a:	4622      	mov	r2, r4
 8029b4c:	2a00      	cmp	r2, #0
 8029b4e:	da24      	bge.n	8029b9a <__kernel_rem_pio2f+0x44e>
 8029b50:	b34e      	cbz	r6, 8029ba6 <__kernel_rem_pio2f+0x45a>
 8029b52:	eef1 7a47 	vneg.f32	s15, s14
 8029b56:	edc7 7a00 	vstr	s15, [r7]
 8029b5a:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8029b5e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029b62:	aa31      	add	r2, sp, #196	@ 0xc4
 8029b64:	2301      	movs	r3, #1
 8029b66:	429c      	cmp	r4, r3
 8029b68:	da20      	bge.n	8029bac <__kernel_rem_pio2f+0x460>
 8029b6a:	b10e      	cbz	r6, 8029b70 <__kernel_rem_pio2f+0x424>
 8029b6c:	eef1 7a67 	vneg.f32	s15, s15
 8029b70:	edc7 7a01 	vstr	s15, [r7, #4]
 8029b74:	e7be      	b.n	8029af4 <__kernel_rem_pio2f+0x3a8>
 8029b76:	ab30      	add	r3, sp, #192	@ 0xc0
 8029b78:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8029a44 <__kernel_rem_pio2f+0x2f8>
 8029b7c:	440b      	add	r3, r1
 8029b7e:	2c00      	cmp	r4, #0
 8029b80:	da05      	bge.n	8029b8e <__kernel_rem_pio2f+0x442>
 8029b82:	b10e      	cbz	r6, 8029b88 <__kernel_rem_pio2f+0x43c>
 8029b84:	eef1 7a67 	vneg.f32	s15, s15
 8029b88:	edc7 7a00 	vstr	s15, [r7]
 8029b8c:	e7b2      	b.n	8029af4 <__kernel_rem_pio2f+0x3a8>
 8029b8e:	ed33 7a01 	vldmdb	r3!, {s14}
 8029b92:	3c01      	subs	r4, #1
 8029b94:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029b98:	e7f1      	b.n	8029b7e <__kernel_rem_pio2f+0x432>
 8029b9a:	ed73 7a01 	vldmdb	r3!, {s15}
 8029b9e:	3a01      	subs	r2, #1
 8029ba0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029ba4:	e7d2      	b.n	8029b4c <__kernel_rem_pio2f+0x400>
 8029ba6:	eef0 7a47 	vmov.f32	s15, s14
 8029baa:	e7d4      	b.n	8029b56 <__kernel_rem_pio2f+0x40a>
 8029bac:	ecb2 7a01 	vldmia	r2!, {s14}
 8029bb0:	3301      	adds	r3, #1
 8029bb2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029bb6:	e7d6      	b.n	8029b66 <__kernel_rem_pio2f+0x41a>
 8029bb8:	ed72 7a01 	vldmdb	r2!, {s15}
 8029bbc:	edd2 6a01 	vldr	s13, [r2, #4]
 8029bc0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029bc4:	3801      	subs	r0, #1
 8029bc6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029bca:	ed82 7a00 	vstr	s14, [r2]
 8029bce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8029bd2:	edc2 7a01 	vstr	s15, [r2, #4]
 8029bd6:	e79c      	b.n	8029b12 <__kernel_rem_pio2f+0x3c6>
 8029bd8:	ed73 7a01 	vldmdb	r3!, {s15}
 8029bdc:	edd3 6a01 	vldr	s13, [r3, #4]
 8029be0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029be4:	3a01      	subs	r2, #1
 8029be6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029bea:	ed83 7a00 	vstr	s14, [r3]
 8029bee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8029bf2:	edc3 7a01 	vstr	s15, [r3, #4]
 8029bf6:	e78f      	b.n	8029b18 <__kernel_rem_pio2f+0x3cc>
 8029bf8:	ed33 7a01 	vldmdb	r3!, {s14}
 8029bfc:	3c01      	subs	r4, #1
 8029bfe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029c02:	e78f      	b.n	8029b24 <__kernel_rem_pio2f+0x3d8>
 8029c04:	eef1 6a66 	vneg.f32	s13, s13
 8029c08:	eeb1 7a47 	vneg.f32	s14, s14
 8029c0c:	edc7 6a00 	vstr	s13, [r7]
 8029c10:	ed87 7a01 	vstr	s14, [r7, #4]
 8029c14:	eef1 7a67 	vneg.f32	s15, s15
 8029c18:	e790      	b.n	8029b3c <__kernel_rem_pio2f+0x3f0>
 8029c1a:	bf00      	nop

08029c1c <floorf>:
 8029c1c:	ee10 3a10 	vmov	r3, s0
 8029c20:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029c24:	3a7f      	subs	r2, #127	@ 0x7f
 8029c26:	2a16      	cmp	r2, #22
 8029c28:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8029c2c:	dc2b      	bgt.n	8029c86 <floorf+0x6a>
 8029c2e:	2a00      	cmp	r2, #0
 8029c30:	da12      	bge.n	8029c58 <floorf+0x3c>
 8029c32:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8029c98 <floorf+0x7c>
 8029c36:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029c3a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029c3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c42:	dd06      	ble.n	8029c52 <floorf+0x36>
 8029c44:	2b00      	cmp	r3, #0
 8029c46:	da24      	bge.n	8029c92 <floorf+0x76>
 8029c48:	2900      	cmp	r1, #0
 8029c4a:	4b14      	ldr	r3, [pc, #80]	@ (8029c9c <floorf+0x80>)
 8029c4c:	bf08      	it	eq
 8029c4e:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8029c52:	ee00 3a10 	vmov	s0, r3
 8029c56:	4770      	bx	lr
 8029c58:	4911      	ldr	r1, [pc, #68]	@ (8029ca0 <floorf+0x84>)
 8029c5a:	4111      	asrs	r1, r2
 8029c5c:	420b      	tst	r3, r1
 8029c5e:	d0fa      	beq.n	8029c56 <floorf+0x3a>
 8029c60:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8029c98 <floorf+0x7c>
 8029c64:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029c68:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029c6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c70:	ddef      	ble.n	8029c52 <floorf+0x36>
 8029c72:	2b00      	cmp	r3, #0
 8029c74:	bfbe      	ittt	lt
 8029c76:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8029c7a:	fa40 f202 	asrlt.w	r2, r0, r2
 8029c7e:	189b      	addlt	r3, r3, r2
 8029c80:	ea23 0301 	bic.w	r3, r3, r1
 8029c84:	e7e5      	b.n	8029c52 <floorf+0x36>
 8029c86:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8029c8a:	d3e4      	bcc.n	8029c56 <floorf+0x3a>
 8029c8c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8029c90:	4770      	bx	lr
 8029c92:	2300      	movs	r3, #0
 8029c94:	e7dd      	b.n	8029c52 <floorf+0x36>
 8029c96:	bf00      	nop
 8029c98:	7149f2ca 	.word	0x7149f2ca
 8029c9c:	bf800000 	.word	0xbf800000
 8029ca0:	007fffff 	.word	0x007fffff

08029ca4 <abort>:
 8029ca4:	b508      	push	{r3, lr}
 8029ca6:	2006      	movs	r0, #6
 8029ca8:	f000 fa70 	bl	802a18c <raise>
 8029cac:	2001      	movs	r0, #1
 8029cae:	f7d9 f8bd 	bl	8002e2c <_exit>
	...

08029cb4 <__assert_func>:
 8029cb4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8029cb6:	4614      	mov	r4, r2
 8029cb8:	461a      	mov	r2, r3
 8029cba:	4b09      	ldr	r3, [pc, #36]	@ (8029ce0 <__assert_func+0x2c>)
 8029cbc:	681b      	ldr	r3, [r3, #0]
 8029cbe:	4605      	mov	r5, r0
 8029cc0:	68d8      	ldr	r0, [r3, #12]
 8029cc2:	b14c      	cbz	r4, 8029cd8 <__assert_func+0x24>
 8029cc4:	4b07      	ldr	r3, [pc, #28]	@ (8029ce4 <__assert_func+0x30>)
 8029cc6:	9100      	str	r1, [sp, #0]
 8029cc8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8029ccc:	4906      	ldr	r1, [pc, #24]	@ (8029ce8 <__assert_func+0x34>)
 8029cce:	462b      	mov	r3, r5
 8029cd0:	f000 f984 	bl	8029fdc <fiprintf>
 8029cd4:	f7ff ffe6 	bl	8029ca4 <abort>
 8029cd8:	4b04      	ldr	r3, [pc, #16]	@ (8029cec <__assert_func+0x38>)
 8029cda:	461c      	mov	r4, r3
 8029cdc:	e7f3      	b.n	8029cc6 <__assert_func+0x12>
 8029cde:	bf00      	nop
 8029ce0:	20000110 	.word	0x20000110
 8029ce4:	0802c3de 	.word	0x0802c3de
 8029ce8:	0802c3eb 	.word	0x0802c3eb
 8029cec:	0802b607 	.word	0x0802b607

08029cf0 <atexit>:
 8029cf0:	2300      	movs	r3, #0
 8029cf2:	4601      	mov	r1, r0
 8029cf4:	461a      	mov	r2, r3
 8029cf6:	4618      	mov	r0, r3
 8029cf8:	f000 baf6 	b.w	802a2e8 <__register_exitproc>

08029cfc <malloc>:
 8029cfc:	4b02      	ldr	r3, [pc, #8]	@ (8029d08 <malloc+0xc>)
 8029cfe:	4601      	mov	r1, r0
 8029d00:	6818      	ldr	r0, [r3, #0]
 8029d02:	f000 b82d 	b.w	8029d60 <_malloc_r>
 8029d06:	bf00      	nop
 8029d08:	20000110 	.word	0x20000110

08029d0c <free>:
 8029d0c:	4b02      	ldr	r3, [pc, #8]	@ (8029d18 <free+0xc>)
 8029d0e:	4601      	mov	r1, r0
 8029d10:	6818      	ldr	r0, [r3, #0]
 8029d12:	f000 bb45 	b.w	802a3a0 <_free_r>
 8029d16:	bf00      	nop
 8029d18:	20000110 	.word	0x20000110

08029d1c <sbrk_aligned>:
 8029d1c:	b570      	push	{r4, r5, r6, lr}
 8029d1e:	4e0f      	ldr	r6, [pc, #60]	@ (8029d5c <sbrk_aligned+0x40>)
 8029d20:	460c      	mov	r4, r1
 8029d22:	6831      	ldr	r1, [r6, #0]
 8029d24:	4605      	mov	r5, r0
 8029d26:	b911      	cbnz	r1, 8029d2e <sbrk_aligned+0x12>
 8029d28:	f000 fa80 	bl	802a22c <_sbrk_r>
 8029d2c:	6030      	str	r0, [r6, #0]
 8029d2e:	4621      	mov	r1, r4
 8029d30:	4628      	mov	r0, r5
 8029d32:	f000 fa7b 	bl	802a22c <_sbrk_r>
 8029d36:	1c43      	adds	r3, r0, #1
 8029d38:	d103      	bne.n	8029d42 <sbrk_aligned+0x26>
 8029d3a:	f04f 34ff 	mov.w	r4, #4294967295
 8029d3e:	4620      	mov	r0, r4
 8029d40:	bd70      	pop	{r4, r5, r6, pc}
 8029d42:	1cc4      	adds	r4, r0, #3
 8029d44:	f024 0403 	bic.w	r4, r4, #3
 8029d48:	42a0      	cmp	r0, r4
 8029d4a:	d0f8      	beq.n	8029d3e <sbrk_aligned+0x22>
 8029d4c:	1a21      	subs	r1, r4, r0
 8029d4e:	4628      	mov	r0, r5
 8029d50:	f000 fa6c 	bl	802a22c <_sbrk_r>
 8029d54:	3001      	adds	r0, #1
 8029d56:	d1f2      	bne.n	8029d3e <sbrk_aligned+0x22>
 8029d58:	e7ef      	b.n	8029d3a <sbrk_aligned+0x1e>
 8029d5a:	bf00      	nop
 8029d5c:	200149bc 	.word	0x200149bc

08029d60 <_malloc_r>:
 8029d60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029d64:	1ccd      	adds	r5, r1, #3
 8029d66:	f025 0503 	bic.w	r5, r5, #3
 8029d6a:	3508      	adds	r5, #8
 8029d6c:	2d0c      	cmp	r5, #12
 8029d6e:	bf38      	it	cc
 8029d70:	250c      	movcc	r5, #12
 8029d72:	2d00      	cmp	r5, #0
 8029d74:	4606      	mov	r6, r0
 8029d76:	db01      	blt.n	8029d7c <_malloc_r+0x1c>
 8029d78:	42a9      	cmp	r1, r5
 8029d7a:	d904      	bls.n	8029d86 <_malloc_r+0x26>
 8029d7c:	230c      	movs	r3, #12
 8029d7e:	6033      	str	r3, [r6, #0]
 8029d80:	2000      	movs	r0, #0
 8029d82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029d86:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8029e5c <_malloc_r+0xfc>
 8029d8a:	f000 f869 	bl	8029e60 <__malloc_lock>
 8029d8e:	f8d8 3000 	ldr.w	r3, [r8]
 8029d92:	461c      	mov	r4, r3
 8029d94:	bb44      	cbnz	r4, 8029de8 <_malloc_r+0x88>
 8029d96:	4629      	mov	r1, r5
 8029d98:	4630      	mov	r0, r6
 8029d9a:	f7ff ffbf 	bl	8029d1c <sbrk_aligned>
 8029d9e:	1c43      	adds	r3, r0, #1
 8029da0:	4604      	mov	r4, r0
 8029da2:	d158      	bne.n	8029e56 <_malloc_r+0xf6>
 8029da4:	f8d8 4000 	ldr.w	r4, [r8]
 8029da8:	4627      	mov	r7, r4
 8029daa:	2f00      	cmp	r7, #0
 8029dac:	d143      	bne.n	8029e36 <_malloc_r+0xd6>
 8029dae:	2c00      	cmp	r4, #0
 8029db0:	d04b      	beq.n	8029e4a <_malloc_r+0xea>
 8029db2:	6823      	ldr	r3, [r4, #0]
 8029db4:	4639      	mov	r1, r7
 8029db6:	4630      	mov	r0, r6
 8029db8:	eb04 0903 	add.w	r9, r4, r3
 8029dbc:	f000 fa36 	bl	802a22c <_sbrk_r>
 8029dc0:	4581      	cmp	r9, r0
 8029dc2:	d142      	bne.n	8029e4a <_malloc_r+0xea>
 8029dc4:	6821      	ldr	r1, [r4, #0]
 8029dc6:	1a6d      	subs	r5, r5, r1
 8029dc8:	4629      	mov	r1, r5
 8029dca:	4630      	mov	r0, r6
 8029dcc:	f7ff ffa6 	bl	8029d1c <sbrk_aligned>
 8029dd0:	3001      	adds	r0, #1
 8029dd2:	d03a      	beq.n	8029e4a <_malloc_r+0xea>
 8029dd4:	6823      	ldr	r3, [r4, #0]
 8029dd6:	442b      	add	r3, r5
 8029dd8:	6023      	str	r3, [r4, #0]
 8029dda:	f8d8 3000 	ldr.w	r3, [r8]
 8029dde:	685a      	ldr	r2, [r3, #4]
 8029de0:	bb62      	cbnz	r2, 8029e3c <_malloc_r+0xdc>
 8029de2:	f8c8 7000 	str.w	r7, [r8]
 8029de6:	e00f      	b.n	8029e08 <_malloc_r+0xa8>
 8029de8:	6822      	ldr	r2, [r4, #0]
 8029dea:	1b52      	subs	r2, r2, r5
 8029dec:	d420      	bmi.n	8029e30 <_malloc_r+0xd0>
 8029dee:	2a0b      	cmp	r2, #11
 8029df0:	d917      	bls.n	8029e22 <_malloc_r+0xc2>
 8029df2:	1961      	adds	r1, r4, r5
 8029df4:	42a3      	cmp	r3, r4
 8029df6:	6025      	str	r5, [r4, #0]
 8029df8:	bf18      	it	ne
 8029dfa:	6059      	strne	r1, [r3, #4]
 8029dfc:	6863      	ldr	r3, [r4, #4]
 8029dfe:	bf08      	it	eq
 8029e00:	f8c8 1000 	streq.w	r1, [r8]
 8029e04:	5162      	str	r2, [r4, r5]
 8029e06:	604b      	str	r3, [r1, #4]
 8029e08:	4630      	mov	r0, r6
 8029e0a:	f000 f82f 	bl	8029e6c <__malloc_unlock>
 8029e0e:	f104 000b 	add.w	r0, r4, #11
 8029e12:	1d23      	adds	r3, r4, #4
 8029e14:	f020 0007 	bic.w	r0, r0, #7
 8029e18:	1ac2      	subs	r2, r0, r3
 8029e1a:	bf1c      	itt	ne
 8029e1c:	1a1b      	subne	r3, r3, r0
 8029e1e:	50a3      	strne	r3, [r4, r2]
 8029e20:	e7af      	b.n	8029d82 <_malloc_r+0x22>
 8029e22:	6862      	ldr	r2, [r4, #4]
 8029e24:	42a3      	cmp	r3, r4
 8029e26:	bf0c      	ite	eq
 8029e28:	f8c8 2000 	streq.w	r2, [r8]
 8029e2c:	605a      	strne	r2, [r3, #4]
 8029e2e:	e7eb      	b.n	8029e08 <_malloc_r+0xa8>
 8029e30:	4623      	mov	r3, r4
 8029e32:	6864      	ldr	r4, [r4, #4]
 8029e34:	e7ae      	b.n	8029d94 <_malloc_r+0x34>
 8029e36:	463c      	mov	r4, r7
 8029e38:	687f      	ldr	r7, [r7, #4]
 8029e3a:	e7b6      	b.n	8029daa <_malloc_r+0x4a>
 8029e3c:	461a      	mov	r2, r3
 8029e3e:	685b      	ldr	r3, [r3, #4]
 8029e40:	42a3      	cmp	r3, r4
 8029e42:	d1fb      	bne.n	8029e3c <_malloc_r+0xdc>
 8029e44:	2300      	movs	r3, #0
 8029e46:	6053      	str	r3, [r2, #4]
 8029e48:	e7de      	b.n	8029e08 <_malloc_r+0xa8>
 8029e4a:	230c      	movs	r3, #12
 8029e4c:	6033      	str	r3, [r6, #0]
 8029e4e:	4630      	mov	r0, r6
 8029e50:	f000 f80c 	bl	8029e6c <__malloc_unlock>
 8029e54:	e794      	b.n	8029d80 <_malloc_r+0x20>
 8029e56:	6005      	str	r5, [r0, #0]
 8029e58:	e7d6      	b.n	8029e08 <_malloc_r+0xa8>
 8029e5a:	bf00      	nop
 8029e5c:	200149c0 	.word	0x200149c0

08029e60 <__malloc_lock>:
 8029e60:	4801      	ldr	r0, [pc, #4]	@ (8029e68 <__malloc_lock+0x8>)
 8029e62:	f000 ba30 	b.w	802a2c6 <__retarget_lock_acquire_recursive>
 8029e66:	bf00      	nop
 8029e68:	20014b04 	.word	0x20014b04

08029e6c <__malloc_unlock>:
 8029e6c:	4801      	ldr	r0, [pc, #4]	@ (8029e74 <__malloc_unlock+0x8>)
 8029e6e:	f000 ba2b 	b.w	802a2c8 <__retarget_lock_release_recursive>
 8029e72:	bf00      	nop
 8029e74:	20014b04 	.word	0x20014b04

08029e78 <__cxa_atexit>:
 8029e78:	b510      	push	{r4, lr}
 8029e7a:	4604      	mov	r4, r0
 8029e7c:	4804      	ldr	r0, [pc, #16]	@ (8029e90 <__cxa_atexit+0x18>)
 8029e7e:	4613      	mov	r3, r2
 8029e80:	b120      	cbz	r0, 8029e8c <__cxa_atexit+0x14>
 8029e82:	460a      	mov	r2, r1
 8029e84:	2002      	movs	r0, #2
 8029e86:	4621      	mov	r1, r4
 8029e88:	f000 fa2e 	bl	802a2e8 <__register_exitproc>
 8029e8c:	bd10      	pop	{r4, pc}
 8029e8e:	bf00      	nop
 8029e90:	0802a2e9 	.word	0x0802a2e9

08029e94 <std>:
 8029e94:	2300      	movs	r3, #0
 8029e96:	b510      	push	{r4, lr}
 8029e98:	4604      	mov	r4, r0
 8029e9a:	e9c0 3300 	strd	r3, r3, [r0]
 8029e9e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8029ea2:	6083      	str	r3, [r0, #8]
 8029ea4:	8181      	strh	r1, [r0, #12]
 8029ea6:	6643      	str	r3, [r0, #100]	@ 0x64
 8029ea8:	81c2      	strh	r2, [r0, #14]
 8029eaa:	6183      	str	r3, [r0, #24]
 8029eac:	4619      	mov	r1, r3
 8029eae:	2208      	movs	r2, #8
 8029eb0:	305c      	adds	r0, #92	@ 0x5c
 8029eb2:	f000 f93a 	bl	802a12a <memset>
 8029eb6:	4b0d      	ldr	r3, [pc, #52]	@ (8029eec <std+0x58>)
 8029eb8:	6263      	str	r3, [r4, #36]	@ 0x24
 8029eba:	4b0d      	ldr	r3, [pc, #52]	@ (8029ef0 <std+0x5c>)
 8029ebc:	62a3      	str	r3, [r4, #40]	@ 0x28
 8029ebe:	4b0d      	ldr	r3, [pc, #52]	@ (8029ef4 <std+0x60>)
 8029ec0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8029ec2:	4b0d      	ldr	r3, [pc, #52]	@ (8029ef8 <std+0x64>)
 8029ec4:	6323      	str	r3, [r4, #48]	@ 0x30
 8029ec6:	4b0d      	ldr	r3, [pc, #52]	@ (8029efc <std+0x68>)
 8029ec8:	6224      	str	r4, [r4, #32]
 8029eca:	429c      	cmp	r4, r3
 8029ecc:	d006      	beq.n	8029edc <std+0x48>
 8029ece:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8029ed2:	4294      	cmp	r4, r2
 8029ed4:	d002      	beq.n	8029edc <std+0x48>
 8029ed6:	33d0      	adds	r3, #208	@ 0xd0
 8029ed8:	429c      	cmp	r4, r3
 8029eda:	d105      	bne.n	8029ee8 <std+0x54>
 8029edc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8029ee0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029ee4:	f000 b9ee 	b.w	802a2c4 <__retarget_lock_init_recursive>
 8029ee8:	bd10      	pop	{r4, pc}
 8029eea:	bf00      	nop
 8029eec:	0802a0a5 	.word	0x0802a0a5
 8029ef0:	0802a0c7 	.word	0x0802a0c7
 8029ef4:	0802a0ff 	.word	0x0802a0ff
 8029ef8:	0802a123 	.word	0x0802a123
 8029efc:	200149c4 	.word	0x200149c4

08029f00 <stdio_exit_handler>:
 8029f00:	4a02      	ldr	r2, [pc, #8]	@ (8029f0c <stdio_exit_handler+0xc>)
 8029f02:	4903      	ldr	r1, [pc, #12]	@ (8029f10 <stdio_exit_handler+0x10>)
 8029f04:	4803      	ldr	r0, [pc, #12]	@ (8029f14 <stdio_exit_handler+0x14>)
 8029f06:	f000 b87b 	b.w	802a000 <_fwalk_sglue>
 8029f0a:	bf00      	nop
 8029f0c:	20000104 	.word	0x20000104
 8029f10:	0802ad89 	.word	0x0802ad89
 8029f14:	20000114 	.word	0x20000114

08029f18 <cleanup_stdio>:
 8029f18:	6841      	ldr	r1, [r0, #4]
 8029f1a:	4b0c      	ldr	r3, [pc, #48]	@ (8029f4c <cleanup_stdio+0x34>)
 8029f1c:	4299      	cmp	r1, r3
 8029f1e:	b510      	push	{r4, lr}
 8029f20:	4604      	mov	r4, r0
 8029f22:	d001      	beq.n	8029f28 <cleanup_stdio+0x10>
 8029f24:	f000 ff30 	bl	802ad88 <_fflush_r>
 8029f28:	68a1      	ldr	r1, [r4, #8]
 8029f2a:	4b09      	ldr	r3, [pc, #36]	@ (8029f50 <cleanup_stdio+0x38>)
 8029f2c:	4299      	cmp	r1, r3
 8029f2e:	d002      	beq.n	8029f36 <cleanup_stdio+0x1e>
 8029f30:	4620      	mov	r0, r4
 8029f32:	f000 ff29 	bl	802ad88 <_fflush_r>
 8029f36:	68e1      	ldr	r1, [r4, #12]
 8029f38:	4b06      	ldr	r3, [pc, #24]	@ (8029f54 <cleanup_stdio+0x3c>)
 8029f3a:	4299      	cmp	r1, r3
 8029f3c:	d004      	beq.n	8029f48 <cleanup_stdio+0x30>
 8029f3e:	4620      	mov	r0, r4
 8029f40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029f44:	f000 bf20 	b.w	802ad88 <_fflush_r>
 8029f48:	bd10      	pop	{r4, pc}
 8029f4a:	bf00      	nop
 8029f4c:	200149c4 	.word	0x200149c4
 8029f50:	20014a2c 	.word	0x20014a2c
 8029f54:	20014a94 	.word	0x20014a94

08029f58 <global_stdio_init.part.0>:
 8029f58:	b510      	push	{r4, lr}
 8029f5a:	4b0b      	ldr	r3, [pc, #44]	@ (8029f88 <global_stdio_init.part.0+0x30>)
 8029f5c:	4c0b      	ldr	r4, [pc, #44]	@ (8029f8c <global_stdio_init.part.0+0x34>)
 8029f5e:	4a0c      	ldr	r2, [pc, #48]	@ (8029f90 <global_stdio_init.part.0+0x38>)
 8029f60:	601a      	str	r2, [r3, #0]
 8029f62:	4620      	mov	r0, r4
 8029f64:	2200      	movs	r2, #0
 8029f66:	2104      	movs	r1, #4
 8029f68:	f7ff ff94 	bl	8029e94 <std>
 8029f6c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8029f70:	2201      	movs	r2, #1
 8029f72:	2109      	movs	r1, #9
 8029f74:	f7ff ff8e 	bl	8029e94 <std>
 8029f78:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8029f7c:	2202      	movs	r2, #2
 8029f7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029f82:	2112      	movs	r1, #18
 8029f84:	f7ff bf86 	b.w	8029e94 <std>
 8029f88:	20014afc 	.word	0x20014afc
 8029f8c:	200149c4 	.word	0x200149c4
 8029f90:	08029f01 	.word	0x08029f01

08029f94 <__sfp_lock_acquire>:
 8029f94:	4801      	ldr	r0, [pc, #4]	@ (8029f9c <__sfp_lock_acquire+0x8>)
 8029f96:	f000 b996 	b.w	802a2c6 <__retarget_lock_acquire_recursive>
 8029f9a:	bf00      	nop
 8029f9c:	20014b06 	.word	0x20014b06

08029fa0 <__sfp_lock_release>:
 8029fa0:	4801      	ldr	r0, [pc, #4]	@ (8029fa8 <__sfp_lock_release+0x8>)
 8029fa2:	f000 b991 	b.w	802a2c8 <__retarget_lock_release_recursive>
 8029fa6:	bf00      	nop
 8029fa8:	20014b06 	.word	0x20014b06

08029fac <__sinit>:
 8029fac:	b510      	push	{r4, lr}
 8029fae:	4604      	mov	r4, r0
 8029fb0:	f7ff fff0 	bl	8029f94 <__sfp_lock_acquire>
 8029fb4:	6a23      	ldr	r3, [r4, #32]
 8029fb6:	b11b      	cbz	r3, 8029fc0 <__sinit+0x14>
 8029fb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029fbc:	f7ff bff0 	b.w	8029fa0 <__sfp_lock_release>
 8029fc0:	4b04      	ldr	r3, [pc, #16]	@ (8029fd4 <__sinit+0x28>)
 8029fc2:	6223      	str	r3, [r4, #32]
 8029fc4:	4b04      	ldr	r3, [pc, #16]	@ (8029fd8 <__sinit+0x2c>)
 8029fc6:	681b      	ldr	r3, [r3, #0]
 8029fc8:	2b00      	cmp	r3, #0
 8029fca:	d1f5      	bne.n	8029fb8 <__sinit+0xc>
 8029fcc:	f7ff ffc4 	bl	8029f58 <global_stdio_init.part.0>
 8029fd0:	e7f2      	b.n	8029fb8 <__sinit+0xc>
 8029fd2:	bf00      	nop
 8029fd4:	08029f19 	.word	0x08029f19
 8029fd8:	20014afc 	.word	0x20014afc

08029fdc <fiprintf>:
 8029fdc:	b40e      	push	{r1, r2, r3}
 8029fde:	b503      	push	{r0, r1, lr}
 8029fe0:	4601      	mov	r1, r0
 8029fe2:	ab03      	add	r3, sp, #12
 8029fe4:	4805      	ldr	r0, [pc, #20]	@ (8029ffc <fiprintf+0x20>)
 8029fe6:	f853 2b04 	ldr.w	r2, [r3], #4
 8029fea:	6800      	ldr	r0, [r0, #0]
 8029fec:	9301      	str	r3, [sp, #4]
 8029fee:	f000 fba3 	bl	802a738 <_vfiprintf_r>
 8029ff2:	b002      	add	sp, #8
 8029ff4:	f85d eb04 	ldr.w	lr, [sp], #4
 8029ff8:	b003      	add	sp, #12
 8029ffa:	4770      	bx	lr
 8029ffc:	20000110 	.word	0x20000110

0802a000 <_fwalk_sglue>:
 802a000:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a004:	4607      	mov	r7, r0
 802a006:	4688      	mov	r8, r1
 802a008:	4614      	mov	r4, r2
 802a00a:	2600      	movs	r6, #0
 802a00c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802a010:	f1b9 0901 	subs.w	r9, r9, #1
 802a014:	d505      	bpl.n	802a022 <_fwalk_sglue+0x22>
 802a016:	6824      	ldr	r4, [r4, #0]
 802a018:	2c00      	cmp	r4, #0
 802a01a:	d1f7      	bne.n	802a00c <_fwalk_sglue+0xc>
 802a01c:	4630      	mov	r0, r6
 802a01e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a022:	89ab      	ldrh	r3, [r5, #12]
 802a024:	2b01      	cmp	r3, #1
 802a026:	d907      	bls.n	802a038 <_fwalk_sglue+0x38>
 802a028:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802a02c:	3301      	adds	r3, #1
 802a02e:	d003      	beq.n	802a038 <_fwalk_sglue+0x38>
 802a030:	4629      	mov	r1, r5
 802a032:	4638      	mov	r0, r7
 802a034:	47c0      	blx	r8
 802a036:	4306      	orrs	r6, r0
 802a038:	3568      	adds	r5, #104	@ 0x68
 802a03a:	e7e9      	b.n	802a010 <_fwalk_sglue+0x10>

0802a03c <iprintf>:
 802a03c:	b40f      	push	{r0, r1, r2, r3}
 802a03e:	b507      	push	{r0, r1, r2, lr}
 802a040:	4906      	ldr	r1, [pc, #24]	@ (802a05c <iprintf+0x20>)
 802a042:	ab04      	add	r3, sp, #16
 802a044:	6808      	ldr	r0, [r1, #0]
 802a046:	f853 2b04 	ldr.w	r2, [r3], #4
 802a04a:	6881      	ldr	r1, [r0, #8]
 802a04c:	9301      	str	r3, [sp, #4]
 802a04e:	f000 fb73 	bl	802a738 <_vfiprintf_r>
 802a052:	b003      	add	sp, #12
 802a054:	f85d eb04 	ldr.w	lr, [sp], #4
 802a058:	b004      	add	sp, #16
 802a05a:	4770      	bx	lr
 802a05c:	20000110 	.word	0x20000110

0802a060 <siprintf>:
 802a060:	b40e      	push	{r1, r2, r3}
 802a062:	b510      	push	{r4, lr}
 802a064:	b09d      	sub	sp, #116	@ 0x74
 802a066:	ab1f      	add	r3, sp, #124	@ 0x7c
 802a068:	9002      	str	r0, [sp, #8]
 802a06a:	9006      	str	r0, [sp, #24]
 802a06c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 802a070:	480a      	ldr	r0, [pc, #40]	@ (802a09c <siprintf+0x3c>)
 802a072:	9107      	str	r1, [sp, #28]
 802a074:	9104      	str	r1, [sp, #16]
 802a076:	490a      	ldr	r1, [pc, #40]	@ (802a0a0 <siprintf+0x40>)
 802a078:	f853 2b04 	ldr.w	r2, [r3], #4
 802a07c:	9105      	str	r1, [sp, #20]
 802a07e:	2400      	movs	r4, #0
 802a080:	a902      	add	r1, sp, #8
 802a082:	6800      	ldr	r0, [r0, #0]
 802a084:	9301      	str	r3, [sp, #4]
 802a086:	941b      	str	r4, [sp, #108]	@ 0x6c
 802a088:	f000 fa30 	bl	802a4ec <_svfiprintf_r>
 802a08c:	9b02      	ldr	r3, [sp, #8]
 802a08e:	701c      	strb	r4, [r3, #0]
 802a090:	b01d      	add	sp, #116	@ 0x74
 802a092:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a096:	b003      	add	sp, #12
 802a098:	4770      	bx	lr
 802a09a:	bf00      	nop
 802a09c:	20000110 	.word	0x20000110
 802a0a0:	ffff0208 	.word	0xffff0208

0802a0a4 <__sread>:
 802a0a4:	b510      	push	{r4, lr}
 802a0a6:	460c      	mov	r4, r1
 802a0a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a0ac:	f000 f898 	bl	802a1e0 <_read_r>
 802a0b0:	2800      	cmp	r0, #0
 802a0b2:	bfab      	itete	ge
 802a0b4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802a0b6:	89a3      	ldrhlt	r3, [r4, #12]
 802a0b8:	181b      	addge	r3, r3, r0
 802a0ba:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802a0be:	bfac      	ite	ge
 802a0c0:	6563      	strge	r3, [r4, #84]	@ 0x54
 802a0c2:	81a3      	strhlt	r3, [r4, #12]
 802a0c4:	bd10      	pop	{r4, pc}

0802a0c6 <__swrite>:
 802a0c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a0ca:	461f      	mov	r7, r3
 802a0cc:	898b      	ldrh	r3, [r1, #12]
 802a0ce:	05db      	lsls	r3, r3, #23
 802a0d0:	4605      	mov	r5, r0
 802a0d2:	460c      	mov	r4, r1
 802a0d4:	4616      	mov	r6, r2
 802a0d6:	d505      	bpl.n	802a0e4 <__swrite+0x1e>
 802a0d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a0dc:	2302      	movs	r3, #2
 802a0de:	2200      	movs	r2, #0
 802a0e0:	f000 f86c 	bl	802a1bc <_lseek_r>
 802a0e4:	89a3      	ldrh	r3, [r4, #12]
 802a0e6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802a0ea:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802a0ee:	81a3      	strh	r3, [r4, #12]
 802a0f0:	4632      	mov	r2, r6
 802a0f2:	463b      	mov	r3, r7
 802a0f4:	4628      	mov	r0, r5
 802a0f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a0fa:	f000 b8a7 	b.w	802a24c <_write_r>

0802a0fe <__sseek>:
 802a0fe:	b510      	push	{r4, lr}
 802a100:	460c      	mov	r4, r1
 802a102:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a106:	f000 f859 	bl	802a1bc <_lseek_r>
 802a10a:	1c43      	adds	r3, r0, #1
 802a10c:	89a3      	ldrh	r3, [r4, #12]
 802a10e:	bf15      	itete	ne
 802a110:	6560      	strne	r0, [r4, #84]	@ 0x54
 802a112:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802a116:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802a11a:	81a3      	strheq	r3, [r4, #12]
 802a11c:	bf18      	it	ne
 802a11e:	81a3      	strhne	r3, [r4, #12]
 802a120:	bd10      	pop	{r4, pc}

0802a122 <__sclose>:
 802a122:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a126:	f000 b839 	b.w	802a19c <_close_r>

0802a12a <memset>:
 802a12a:	4402      	add	r2, r0
 802a12c:	4603      	mov	r3, r0
 802a12e:	4293      	cmp	r3, r2
 802a130:	d100      	bne.n	802a134 <memset+0xa>
 802a132:	4770      	bx	lr
 802a134:	f803 1b01 	strb.w	r1, [r3], #1
 802a138:	e7f9      	b.n	802a12e <memset+0x4>

0802a13a <_raise_r>:
 802a13a:	291f      	cmp	r1, #31
 802a13c:	b538      	push	{r3, r4, r5, lr}
 802a13e:	4605      	mov	r5, r0
 802a140:	460c      	mov	r4, r1
 802a142:	d904      	bls.n	802a14e <_raise_r+0x14>
 802a144:	2316      	movs	r3, #22
 802a146:	6003      	str	r3, [r0, #0]
 802a148:	f04f 30ff 	mov.w	r0, #4294967295
 802a14c:	bd38      	pop	{r3, r4, r5, pc}
 802a14e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 802a150:	b112      	cbz	r2, 802a158 <_raise_r+0x1e>
 802a152:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802a156:	b94b      	cbnz	r3, 802a16c <_raise_r+0x32>
 802a158:	4628      	mov	r0, r5
 802a15a:	f000 f865 	bl	802a228 <_getpid_r>
 802a15e:	4622      	mov	r2, r4
 802a160:	4601      	mov	r1, r0
 802a162:	4628      	mov	r0, r5
 802a164:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802a168:	f000 b84c 	b.w	802a204 <_kill_r>
 802a16c:	2b01      	cmp	r3, #1
 802a16e:	d00a      	beq.n	802a186 <_raise_r+0x4c>
 802a170:	1c59      	adds	r1, r3, #1
 802a172:	d103      	bne.n	802a17c <_raise_r+0x42>
 802a174:	2316      	movs	r3, #22
 802a176:	6003      	str	r3, [r0, #0]
 802a178:	2001      	movs	r0, #1
 802a17a:	e7e7      	b.n	802a14c <_raise_r+0x12>
 802a17c:	2100      	movs	r1, #0
 802a17e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802a182:	4620      	mov	r0, r4
 802a184:	4798      	blx	r3
 802a186:	2000      	movs	r0, #0
 802a188:	e7e0      	b.n	802a14c <_raise_r+0x12>
	...

0802a18c <raise>:
 802a18c:	4b02      	ldr	r3, [pc, #8]	@ (802a198 <raise+0xc>)
 802a18e:	4601      	mov	r1, r0
 802a190:	6818      	ldr	r0, [r3, #0]
 802a192:	f7ff bfd2 	b.w	802a13a <_raise_r>
 802a196:	bf00      	nop
 802a198:	20000110 	.word	0x20000110

0802a19c <_close_r>:
 802a19c:	b538      	push	{r3, r4, r5, lr}
 802a19e:	4d06      	ldr	r5, [pc, #24]	@ (802a1b8 <_close_r+0x1c>)
 802a1a0:	2300      	movs	r3, #0
 802a1a2:	4604      	mov	r4, r0
 802a1a4:	4608      	mov	r0, r1
 802a1a6:	602b      	str	r3, [r5, #0]
 802a1a8:	f7d8 fe54 	bl	8002e54 <_close>
 802a1ac:	1c43      	adds	r3, r0, #1
 802a1ae:	d102      	bne.n	802a1b6 <_close_r+0x1a>
 802a1b0:	682b      	ldr	r3, [r5, #0]
 802a1b2:	b103      	cbz	r3, 802a1b6 <_close_r+0x1a>
 802a1b4:	6023      	str	r3, [r4, #0]
 802a1b6:	bd38      	pop	{r3, r4, r5, pc}
 802a1b8:	20014b00 	.word	0x20014b00

0802a1bc <_lseek_r>:
 802a1bc:	b538      	push	{r3, r4, r5, lr}
 802a1be:	4d07      	ldr	r5, [pc, #28]	@ (802a1dc <_lseek_r+0x20>)
 802a1c0:	4604      	mov	r4, r0
 802a1c2:	4608      	mov	r0, r1
 802a1c4:	4611      	mov	r1, r2
 802a1c6:	2200      	movs	r2, #0
 802a1c8:	602a      	str	r2, [r5, #0]
 802a1ca:	461a      	mov	r2, r3
 802a1cc:	f7d8 fe4c 	bl	8002e68 <_lseek>
 802a1d0:	1c43      	adds	r3, r0, #1
 802a1d2:	d102      	bne.n	802a1da <_lseek_r+0x1e>
 802a1d4:	682b      	ldr	r3, [r5, #0]
 802a1d6:	b103      	cbz	r3, 802a1da <_lseek_r+0x1e>
 802a1d8:	6023      	str	r3, [r4, #0]
 802a1da:	bd38      	pop	{r3, r4, r5, pc}
 802a1dc:	20014b00 	.word	0x20014b00

0802a1e0 <_read_r>:
 802a1e0:	b538      	push	{r3, r4, r5, lr}
 802a1e2:	4d07      	ldr	r5, [pc, #28]	@ (802a200 <_read_r+0x20>)
 802a1e4:	4604      	mov	r4, r0
 802a1e6:	4608      	mov	r0, r1
 802a1e8:	4611      	mov	r1, r2
 802a1ea:	2200      	movs	r2, #0
 802a1ec:	602a      	str	r2, [r5, #0]
 802a1ee:	461a      	mov	r2, r3
 802a1f0:	f7d8 fe22 	bl	8002e38 <_read>
 802a1f4:	1c43      	adds	r3, r0, #1
 802a1f6:	d102      	bne.n	802a1fe <_read_r+0x1e>
 802a1f8:	682b      	ldr	r3, [r5, #0]
 802a1fa:	b103      	cbz	r3, 802a1fe <_read_r+0x1e>
 802a1fc:	6023      	str	r3, [r4, #0]
 802a1fe:	bd38      	pop	{r3, r4, r5, pc}
 802a200:	20014b00 	.word	0x20014b00

0802a204 <_kill_r>:
 802a204:	b538      	push	{r3, r4, r5, lr}
 802a206:	4d07      	ldr	r5, [pc, #28]	@ (802a224 <_kill_r+0x20>)
 802a208:	2300      	movs	r3, #0
 802a20a:	4604      	mov	r4, r0
 802a20c:	4608      	mov	r0, r1
 802a20e:	4611      	mov	r1, r2
 802a210:	602b      	str	r3, [r5, #0]
 802a212:	f7d8 fe03 	bl	8002e1c <_kill>
 802a216:	1c43      	adds	r3, r0, #1
 802a218:	d102      	bne.n	802a220 <_kill_r+0x1c>
 802a21a:	682b      	ldr	r3, [r5, #0]
 802a21c:	b103      	cbz	r3, 802a220 <_kill_r+0x1c>
 802a21e:	6023      	str	r3, [r4, #0]
 802a220:	bd38      	pop	{r3, r4, r5, pc}
 802a222:	bf00      	nop
 802a224:	20014b00 	.word	0x20014b00

0802a228 <_getpid_r>:
 802a228:	f7d8 bdf6 	b.w	8002e18 <_getpid>

0802a22c <_sbrk_r>:
 802a22c:	b538      	push	{r3, r4, r5, lr}
 802a22e:	4d06      	ldr	r5, [pc, #24]	@ (802a248 <_sbrk_r+0x1c>)
 802a230:	2300      	movs	r3, #0
 802a232:	4604      	mov	r4, r0
 802a234:	4608      	mov	r0, r1
 802a236:	602b      	str	r3, [r5, #0]
 802a238:	f7d8 fe24 	bl	8002e84 <_sbrk>
 802a23c:	1c43      	adds	r3, r0, #1
 802a23e:	d102      	bne.n	802a246 <_sbrk_r+0x1a>
 802a240:	682b      	ldr	r3, [r5, #0]
 802a242:	b103      	cbz	r3, 802a246 <_sbrk_r+0x1a>
 802a244:	6023      	str	r3, [r4, #0]
 802a246:	bd38      	pop	{r3, r4, r5, pc}
 802a248:	20014b00 	.word	0x20014b00

0802a24c <_write_r>:
 802a24c:	b538      	push	{r3, r4, r5, lr}
 802a24e:	4d07      	ldr	r5, [pc, #28]	@ (802a26c <_write_r+0x20>)
 802a250:	4604      	mov	r4, r0
 802a252:	4608      	mov	r0, r1
 802a254:	4611      	mov	r1, r2
 802a256:	2200      	movs	r2, #0
 802a258:	602a      	str	r2, [r5, #0]
 802a25a:	461a      	mov	r2, r3
 802a25c:	f7d8 fe06 	bl	8002e6c <_write>
 802a260:	1c43      	adds	r3, r0, #1
 802a262:	d102      	bne.n	802a26a <_write_r+0x1e>
 802a264:	682b      	ldr	r3, [r5, #0]
 802a266:	b103      	cbz	r3, 802a26a <_write_r+0x1e>
 802a268:	6023      	str	r3, [r4, #0]
 802a26a:	bd38      	pop	{r3, r4, r5, pc}
 802a26c:	20014b00 	.word	0x20014b00

0802a270 <__errno>:
 802a270:	4b01      	ldr	r3, [pc, #4]	@ (802a278 <__errno+0x8>)
 802a272:	6818      	ldr	r0, [r3, #0]
 802a274:	4770      	bx	lr
 802a276:	bf00      	nop
 802a278:	20000110 	.word	0x20000110

0802a27c <__libc_init_array>:
 802a27c:	b570      	push	{r4, r5, r6, lr}
 802a27e:	4d0d      	ldr	r5, [pc, #52]	@ (802a2b4 <__libc_init_array+0x38>)
 802a280:	4c0d      	ldr	r4, [pc, #52]	@ (802a2b8 <__libc_init_array+0x3c>)
 802a282:	1b64      	subs	r4, r4, r5
 802a284:	10a4      	asrs	r4, r4, #2
 802a286:	2600      	movs	r6, #0
 802a288:	42a6      	cmp	r6, r4
 802a28a:	d109      	bne.n	802a2a0 <__libc_init_array+0x24>
 802a28c:	4d0b      	ldr	r5, [pc, #44]	@ (802a2bc <__libc_init_array+0x40>)
 802a28e:	4c0c      	ldr	r4, [pc, #48]	@ (802a2c0 <__libc_init_array+0x44>)
 802a290:	f000 ff0a 	bl	802b0a8 <_init>
 802a294:	1b64      	subs	r4, r4, r5
 802a296:	10a4      	asrs	r4, r4, #2
 802a298:	2600      	movs	r6, #0
 802a29a:	42a6      	cmp	r6, r4
 802a29c:	d105      	bne.n	802a2aa <__libc_init_array+0x2e>
 802a29e:	bd70      	pop	{r4, r5, r6, pc}
 802a2a0:	f855 3b04 	ldr.w	r3, [r5], #4
 802a2a4:	4798      	blx	r3
 802a2a6:	3601      	adds	r6, #1
 802a2a8:	e7ee      	b.n	802a288 <__libc_init_array+0xc>
 802a2aa:	f855 3b04 	ldr.w	r3, [r5], #4
 802a2ae:	4798      	blx	r3
 802a2b0:	3601      	adds	r6, #1
 802a2b2:	e7f2      	b.n	802a29a <__libc_init_array+0x1e>
 802a2b4:	0804dfe4 	.word	0x0804dfe4
 802a2b8:	0804dfe4 	.word	0x0804dfe4
 802a2bc:	0804dfe4 	.word	0x0804dfe4
 802a2c0:	0804dff8 	.word	0x0804dff8

0802a2c4 <__retarget_lock_init_recursive>:
 802a2c4:	4770      	bx	lr

0802a2c6 <__retarget_lock_acquire_recursive>:
 802a2c6:	4770      	bx	lr

0802a2c8 <__retarget_lock_release_recursive>:
 802a2c8:	4770      	bx	lr

0802a2ca <memcpy>:
 802a2ca:	440a      	add	r2, r1
 802a2cc:	4291      	cmp	r1, r2
 802a2ce:	f100 33ff 	add.w	r3, r0, #4294967295
 802a2d2:	d100      	bne.n	802a2d6 <memcpy+0xc>
 802a2d4:	4770      	bx	lr
 802a2d6:	b510      	push	{r4, lr}
 802a2d8:	f811 4b01 	ldrb.w	r4, [r1], #1
 802a2dc:	f803 4f01 	strb.w	r4, [r3, #1]!
 802a2e0:	4291      	cmp	r1, r2
 802a2e2:	d1f9      	bne.n	802a2d8 <memcpy+0xe>
 802a2e4:	bd10      	pop	{r4, pc}
	...

0802a2e8 <__register_exitproc>:
 802a2e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a2ec:	4d27      	ldr	r5, [pc, #156]	@ (802a38c <__register_exitproc+0xa4>)
 802a2ee:	4607      	mov	r7, r0
 802a2f0:	6828      	ldr	r0, [r5, #0]
 802a2f2:	4691      	mov	r9, r2
 802a2f4:	460e      	mov	r6, r1
 802a2f6:	4698      	mov	r8, r3
 802a2f8:	f7ff ffe5 	bl	802a2c6 <__retarget_lock_acquire_recursive>
 802a2fc:	4a24      	ldr	r2, [pc, #144]	@ (802a390 <__register_exitproc+0xa8>)
 802a2fe:	6814      	ldr	r4, [r2, #0]
 802a300:	b93c      	cbnz	r4, 802a312 <__register_exitproc+0x2a>
 802a302:	4b24      	ldr	r3, [pc, #144]	@ (802a394 <__register_exitproc+0xac>)
 802a304:	6013      	str	r3, [r2, #0]
 802a306:	4a24      	ldr	r2, [pc, #144]	@ (802a398 <__register_exitproc+0xb0>)
 802a308:	b112      	cbz	r2, 802a310 <__register_exitproc+0x28>
 802a30a:	6812      	ldr	r2, [r2, #0]
 802a30c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802a310:	4c20      	ldr	r4, [pc, #128]	@ (802a394 <__register_exitproc+0xac>)
 802a312:	6863      	ldr	r3, [r4, #4]
 802a314:	2b1f      	cmp	r3, #31
 802a316:	dd06      	ble.n	802a326 <__register_exitproc+0x3e>
 802a318:	6828      	ldr	r0, [r5, #0]
 802a31a:	f7ff ffd5 	bl	802a2c8 <__retarget_lock_release_recursive>
 802a31e:	f04f 30ff 	mov.w	r0, #4294967295
 802a322:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a326:	b32f      	cbz	r7, 802a374 <__register_exitproc+0x8c>
 802a328:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 802a32c:	b968      	cbnz	r0, 802a34a <__register_exitproc+0x62>
 802a32e:	4b1b      	ldr	r3, [pc, #108]	@ (802a39c <__register_exitproc+0xb4>)
 802a330:	2b00      	cmp	r3, #0
 802a332:	d0f1      	beq.n	802a318 <__register_exitproc+0x30>
 802a334:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802a338:	f7ff fce0 	bl	8029cfc <malloc>
 802a33c:	2800      	cmp	r0, #0
 802a33e:	d0eb      	beq.n	802a318 <__register_exitproc+0x30>
 802a340:	2300      	movs	r3, #0
 802a342:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802a346:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802a34a:	6863      	ldr	r3, [r4, #4]
 802a34c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802a350:	2201      	movs	r2, #1
 802a352:	409a      	lsls	r2, r3
 802a354:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802a358:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 802a35c:	4313      	orrs	r3, r2
 802a35e:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802a362:	2f02      	cmp	r7, #2
 802a364:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 802a368:	bf02      	ittt	eq
 802a36a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802a36e:	4313      	orreq	r3, r2
 802a370:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802a374:	6863      	ldr	r3, [r4, #4]
 802a376:	6828      	ldr	r0, [r5, #0]
 802a378:	1c5a      	adds	r2, r3, #1
 802a37a:	3302      	adds	r3, #2
 802a37c:	6062      	str	r2, [r4, #4]
 802a37e:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802a382:	f7ff ffa1 	bl	802a2c8 <__retarget_lock_release_recursive>
 802a386:	2000      	movs	r0, #0
 802a388:	e7cb      	b.n	802a322 <__register_exitproc+0x3a>
 802a38a:	bf00      	nop
 802a38c:	20000160 	.word	0x20000160
 802a390:	20014b94 	.word	0x20014b94
 802a394:	20014b08 	.word	0x20014b08
 802a398:	0802dfd0 	.word	0x0802dfd0
 802a39c:	08029cfd 	.word	0x08029cfd

0802a3a0 <_free_r>:
 802a3a0:	b538      	push	{r3, r4, r5, lr}
 802a3a2:	4605      	mov	r5, r0
 802a3a4:	2900      	cmp	r1, #0
 802a3a6:	d041      	beq.n	802a42c <_free_r+0x8c>
 802a3a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802a3ac:	1f0c      	subs	r4, r1, #4
 802a3ae:	2b00      	cmp	r3, #0
 802a3b0:	bfb8      	it	lt
 802a3b2:	18e4      	addlt	r4, r4, r3
 802a3b4:	f7ff fd54 	bl	8029e60 <__malloc_lock>
 802a3b8:	4a1d      	ldr	r2, [pc, #116]	@ (802a430 <_free_r+0x90>)
 802a3ba:	6813      	ldr	r3, [r2, #0]
 802a3bc:	b933      	cbnz	r3, 802a3cc <_free_r+0x2c>
 802a3be:	6063      	str	r3, [r4, #4]
 802a3c0:	6014      	str	r4, [r2, #0]
 802a3c2:	4628      	mov	r0, r5
 802a3c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802a3c8:	f7ff bd50 	b.w	8029e6c <__malloc_unlock>
 802a3cc:	42a3      	cmp	r3, r4
 802a3ce:	d908      	bls.n	802a3e2 <_free_r+0x42>
 802a3d0:	6820      	ldr	r0, [r4, #0]
 802a3d2:	1821      	adds	r1, r4, r0
 802a3d4:	428b      	cmp	r3, r1
 802a3d6:	bf01      	itttt	eq
 802a3d8:	6819      	ldreq	r1, [r3, #0]
 802a3da:	685b      	ldreq	r3, [r3, #4]
 802a3dc:	1809      	addeq	r1, r1, r0
 802a3de:	6021      	streq	r1, [r4, #0]
 802a3e0:	e7ed      	b.n	802a3be <_free_r+0x1e>
 802a3e2:	461a      	mov	r2, r3
 802a3e4:	685b      	ldr	r3, [r3, #4]
 802a3e6:	b10b      	cbz	r3, 802a3ec <_free_r+0x4c>
 802a3e8:	42a3      	cmp	r3, r4
 802a3ea:	d9fa      	bls.n	802a3e2 <_free_r+0x42>
 802a3ec:	6811      	ldr	r1, [r2, #0]
 802a3ee:	1850      	adds	r0, r2, r1
 802a3f0:	42a0      	cmp	r0, r4
 802a3f2:	d10b      	bne.n	802a40c <_free_r+0x6c>
 802a3f4:	6820      	ldr	r0, [r4, #0]
 802a3f6:	4401      	add	r1, r0
 802a3f8:	1850      	adds	r0, r2, r1
 802a3fa:	4283      	cmp	r3, r0
 802a3fc:	6011      	str	r1, [r2, #0]
 802a3fe:	d1e0      	bne.n	802a3c2 <_free_r+0x22>
 802a400:	6818      	ldr	r0, [r3, #0]
 802a402:	685b      	ldr	r3, [r3, #4]
 802a404:	6053      	str	r3, [r2, #4]
 802a406:	4408      	add	r0, r1
 802a408:	6010      	str	r0, [r2, #0]
 802a40a:	e7da      	b.n	802a3c2 <_free_r+0x22>
 802a40c:	d902      	bls.n	802a414 <_free_r+0x74>
 802a40e:	230c      	movs	r3, #12
 802a410:	602b      	str	r3, [r5, #0]
 802a412:	e7d6      	b.n	802a3c2 <_free_r+0x22>
 802a414:	6820      	ldr	r0, [r4, #0]
 802a416:	1821      	adds	r1, r4, r0
 802a418:	428b      	cmp	r3, r1
 802a41a:	bf04      	itt	eq
 802a41c:	6819      	ldreq	r1, [r3, #0]
 802a41e:	685b      	ldreq	r3, [r3, #4]
 802a420:	6063      	str	r3, [r4, #4]
 802a422:	bf04      	itt	eq
 802a424:	1809      	addeq	r1, r1, r0
 802a426:	6021      	streq	r1, [r4, #0]
 802a428:	6054      	str	r4, [r2, #4]
 802a42a:	e7ca      	b.n	802a3c2 <_free_r+0x22>
 802a42c:	bd38      	pop	{r3, r4, r5, pc}
 802a42e:	bf00      	nop
 802a430:	200149c0 	.word	0x200149c0

0802a434 <__ssputs_r>:
 802a434:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802a438:	688e      	ldr	r6, [r1, #8]
 802a43a:	461f      	mov	r7, r3
 802a43c:	42be      	cmp	r6, r7
 802a43e:	680b      	ldr	r3, [r1, #0]
 802a440:	4682      	mov	sl, r0
 802a442:	460c      	mov	r4, r1
 802a444:	4690      	mov	r8, r2
 802a446:	d82d      	bhi.n	802a4a4 <__ssputs_r+0x70>
 802a448:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802a44c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 802a450:	d026      	beq.n	802a4a0 <__ssputs_r+0x6c>
 802a452:	6965      	ldr	r5, [r4, #20]
 802a454:	6909      	ldr	r1, [r1, #16]
 802a456:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802a45a:	eba3 0901 	sub.w	r9, r3, r1
 802a45e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 802a462:	1c7b      	adds	r3, r7, #1
 802a464:	444b      	add	r3, r9
 802a466:	106d      	asrs	r5, r5, #1
 802a468:	429d      	cmp	r5, r3
 802a46a:	bf38      	it	cc
 802a46c:	461d      	movcc	r5, r3
 802a46e:	0553      	lsls	r3, r2, #21
 802a470:	d527      	bpl.n	802a4c2 <__ssputs_r+0x8e>
 802a472:	4629      	mov	r1, r5
 802a474:	f7ff fc74 	bl	8029d60 <_malloc_r>
 802a478:	4606      	mov	r6, r0
 802a47a:	b360      	cbz	r0, 802a4d6 <__ssputs_r+0xa2>
 802a47c:	6921      	ldr	r1, [r4, #16]
 802a47e:	464a      	mov	r2, r9
 802a480:	f7ff ff23 	bl	802a2ca <memcpy>
 802a484:	89a3      	ldrh	r3, [r4, #12]
 802a486:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 802a48a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802a48e:	81a3      	strh	r3, [r4, #12]
 802a490:	6126      	str	r6, [r4, #16]
 802a492:	6165      	str	r5, [r4, #20]
 802a494:	444e      	add	r6, r9
 802a496:	eba5 0509 	sub.w	r5, r5, r9
 802a49a:	6026      	str	r6, [r4, #0]
 802a49c:	60a5      	str	r5, [r4, #8]
 802a49e:	463e      	mov	r6, r7
 802a4a0:	42be      	cmp	r6, r7
 802a4a2:	d900      	bls.n	802a4a6 <__ssputs_r+0x72>
 802a4a4:	463e      	mov	r6, r7
 802a4a6:	6820      	ldr	r0, [r4, #0]
 802a4a8:	4632      	mov	r2, r6
 802a4aa:	4641      	mov	r1, r8
 802a4ac:	f000 fd28 	bl	802af00 <memmove>
 802a4b0:	68a3      	ldr	r3, [r4, #8]
 802a4b2:	1b9b      	subs	r3, r3, r6
 802a4b4:	60a3      	str	r3, [r4, #8]
 802a4b6:	6823      	ldr	r3, [r4, #0]
 802a4b8:	4433      	add	r3, r6
 802a4ba:	6023      	str	r3, [r4, #0]
 802a4bc:	2000      	movs	r0, #0
 802a4be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a4c2:	462a      	mov	r2, r5
 802a4c4:	f000 fd36 	bl	802af34 <_realloc_r>
 802a4c8:	4606      	mov	r6, r0
 802a4ca:	2800      	cmp	r0, #0
 802a4cc:	d1e0      	bne.n	802a490 <__ssputs_r+0x5c>
 802a4ce:	6921      	ldr	r1, [r4, #16]
 802a4d0:	4650      	mov	r0, sl
 802a4d2:	f7ff ff65 	bl	802a3a0 <_free_r>
 802a4d6:	230c      	movs	r3, #12
 802a4d8:	f8ca 3000 	str.w	r3, [sl]
 802a4dc:	89a3      	ldrh	r3, [r4, #12]
 802a4de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802a4e2:	81a3      	strh	r3, [r4, #12]
 802a4e4:	f04f 30ff 	mov.w	r0, #4294967295
 802a4e8:	e7e9      	b.n	802a4be <__ssputs_r+0x8a>
	...

0802a4ec <_svfiprintf_r>:
 802a4ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a4f0:	4698      	mov	r8, r3
 802a4f2:	898b      	ldrh	r3, [r1, #12]
 802a4f4:	061b      	lsls	r3, r3, #24
 802a4f6:	b09d      	sub	sp, #116	@ 0x74
 802a4f8:	4607      	mov	r7, r0
 802a4fa:	460d      	mov	r5, r1
 802a4fc:	4614      	mov	r4, r2
 802a4fe:	d510      	bpl.n	802a522 <_svfiprintf_r+0x36>
 802a500:	690b      	ldr	r3, [r1, #16]
 802a502:	b973      	cbnz	r3, 802a522 <_svfiprintf_r+0x36>
 802a504:	2140      	movs	r1, #64	@ 0x40
 802a506:	f7ff fc2b 	bl	8029d60 <_malloc_r>
 802a50a:	6028      	str	r0, [r5, #0]
 802a50c:	6128      	str	r0, [r5, #16]
 802a50e:	b930      	cbnz	r0, 802a51e <_svfiprintf_r+0x32>
 802a510:	230c      	movs	r3, #12
 802a512:	603b      	str	r3, [r7, #0]
 802a514:	f04f 30ff 	mov.w	r0, #4294967295
 802a518:	b01d      	add	sp, #116	@ 0x74
 802a51a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a51e:	2340      	movs	r3, #64	@ 0x40
 802a520:	616b      	str	r3, [r5, #20]
 802a522:	2300      	movs	r3, #0
 802a524:	9309      	str	r3, [sp, #36]	@ 0x24
 802a526:	2320      	movs	r3, #32
 802a528:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802a52c:	f8cd 800c 	str.w	r8, [sp, #12]
 802a530:	2330      	movs	r3, #48	@ 0x30
 802a532:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 802a6d0 <_svfiprintf_r+0x1e4>
 802a536:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 802a53a:	f04f 0901 	mov.w	r9, #1
 802a53e:	4623      	mov	r3, r4
 802a540:	469a      	mov	sl, r3
 802a542:	f813 2b01 	ldrb.w	r2, [r3], #1
 802a546:	b10a      	cbz	r2, 802a54c <_svfiprintf_r+0x60>
 802a548:	2a25      	cmp	r2, #37	@ 0x25
 802a54a:	d1f9      	bne.n	802a540 <_svfiprintf_r+0x54>
 802a54c:	ebba 0b04 	subs.w	fp, sl, r4
 802a550:	d00b      	beq.n	802a56a <_svfiprintf_r+0x7e>
 802a552:	465b      	mov	r3, fp
 802a554:	4622      	mov	r2, r4
 802a556:	4629      	mov	r1, r5
 802a558:	4638      	mov	r0, r7
 802a55a:	f7ff ff6b 	bl	802a434 <__ssputs_r>
 802a55e:	3001      	adds	r0, #1
 802a560:	f000 80a7 	beq.w	802a6b2 <_svfiprintf_r+0x1c6>
 802a564:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802a566:	445a      	add	r2, fp
 802a568:	9209      	str	r2, [sp, #36]	@ 0x24
 802a56a:	f89a 3000 	ldrb.w	r3, [sl]
 802a56e:	2b00      	cmp	r3, #0
 802a570:	f000 809f 	beq.w	802a6b2 <_svfiprintf_r+0x1c6>
 802a574:	2300      	movs	r3, #0
 802a576:	f04f 32ff 	mov.w	r2, #4294967295
 802a57a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802a57e:	f10a 0a01 	add.w	sl, sl, #1
 802a582:	9304      	str	r3, [sp, #16]
 802a584:	9307      	str	r3, [sp, #28]
 802a586:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802a58a:	931a      	str	r3, [sp, #104]	@ 0x68
 802a58c:	4654      	mov	r4, sl
 802a58e:	2205      	movs	r2, #5
 802a590:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a594:	484e      	ldr	r0, [pc, #312]	@ (802a6d0 <_svfiprintf_r+0x1e4>)
 802a596:	f7d5 fe33 	bl	8000200 <memchr>
 802a59a:	9a04      	ldr	r2, [sp, #16]
 802a59c:	b9d8      	cbnz	r0, 802a5d6 <_svfiprintf_r+0xea>
 802a59e:	06d0      	lsls	r0, r2, #27
 802a5a0:	bf44      	itt	mi
 802a5a2:	2320      	movmi	r3, #32
 802a5a4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802a5a8:	0711      	lsls	r1, r2, #28
 802a5aa:	bf44      	itt	mi
 802a5ac:	232b      	movmi	r3, #43	@ 0x2b
 802a5ae:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802a5b2:	f89a 3000 	ldrb.w	r3, [sl]
 802a5b6:	2b2a      	cmp	r3, #42	@ 0x2a
 802a5b8:	d015      	beq.n	802a5e6 <_svfiprintf_r+0xfa>
 802a5ba:	9a07      	ldr	r2, [sp, #28]
 802a5bc:	4654      	mov	r4, sl
 802a5be:	2000      	movs	r0, #0
 802a5c0:	f04f 0c0a 	mov.w	ip, #10
 802a5c4:	4621      	mov	r1, r4
 802a5c6:	f811 3b01 	ldrb.w	r3, [r1], #1
 802a5ca:	3b30      	subs	r3, #48	@ 0x30
 802a5cc:	2b09      	cmp	r3, #9
 802a5ce:	d94b      	bls.n	802a668 <_svfiprintf_r+0x17c>
 802a5d0:	b1b0      	cbz	r0, 802a600 <_svfiprintf_r+0x114>
 802a5d2:	9207      	str	r2, [sp, #28]
 802a5d4:	e014      	b.n	802a600 <_svfiprintf_r+0x114>
 802a5d6:	eba0 0308 	sub.w	r3, r0, r8
 802a5da:	fa09 f303 	lsl.w	r3, r9, r3
 802a5de:	4313      	orrs	r3, r2
 802a5e0:	9304      	str	r3, [sp, #16]
 802a5e2:	46a2      	mov	sl, r4
 802a5e4:	e7d2      	b.n	802a58c <_svfiprintf_r+0xa0>
 802a5e6:	9b03      	ldr	r3, [sp, #12]
 802a5e8:	1d19      	adds	r1, r3, #4
 802a5ea:	681b      	ldr	r3, [r3, #0]
 802a5ec:	9103      	str	r1, [sp, #12]
 802a5ee:	2b00      	cmp	r3, #0
 802a5f0:	bfbb      	ittet	lt
 802a5f2:	425b      	neglt	r3, r3
 802a5f4:	f042 0202 	orrlt.w	r2, r2, #2
 802a5f8:	9307      	strge	r3, [sp, #28]
 802a5fa:	9307      	strlt	r3, [sp, #28]
 802a5fc:	bfb8      	it	lt
 802a5fe:	9204      	strlt	r2, [sp, #16]
 802a600:	7823      	ldrb	r3, [r4, #0]
 802a602:	2b2e      	cmp	r3, #46	@ 0x2e
 802a604:	d10a      	bne.n	802a61c <_svfiprintf_r+0x130>
 802a606:	7863      	ldrb	r3, [r4, #1]
 802a608:	2b2a      	cmp	r3, #42	@ 0x2a
 802a60a:	d132      	bne.n	802a672 <_svfiprintf_r+0x186>
 802a60c:	9b03      	ldr	r3, [sp, #12]
 802a60e:	1d1a      	adds	r2, r3, #4
 802a610:	681b      	ldr	r3, [r3, #0]
 802a612:	9203      	str	r2, [sp, #12]
 802a614:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802a618:	3402      	adds	r4, #2
 802a61a:	9305      	str	r3, [sp, #20]
 802a61c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 802a6e0 <_svfiprintf_r+0x1f4>
 802a620:	7821      	ldrb	r1, [r4, #0]
 802a622:	2203      	movs	r2, #3
 802a624:	4650      	mov	r0, sl
 802a626:	f7d5 fdeb 	bl	8000200 <memchr>
 802a62a:	b138      	cbz	r0, 802a63c <_svfiprintf_r+0x150>
 802a62c:	9b04      	ldr	r3, [sp, #16]
 802a62e:	eba0 000a 	sub.w	r0, r0, sl
 802a632:	2240      	movs	r2, #64	@ 0x40
 802a634:	4082      	lsls	r2, r0
 802a636:	4313      	orrs	r3, r2
 802a638:	3401      	adds	r4, #1
 802a63a:	9304      	str	r3, [sp, #16]
 802a63c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a640:	4824      	ldr	r0, [pc, #144]	@ (802a6d4 <_svfiprintf_r+0x1e8>)
 802a642:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802a646:	2206      	movs	r2, #6
 802a648:	f7d5 fdda 	bl	8000200 <memchr>
 802a64c:	2800      	cmp	r0, #0
 802a64e:	d036      	beq.n	802a6be <_svfiprintf_r+0x1d2>
 802a650:	4b21      	ldr	r3, [pc, #132]	@ (802a6d8 <_svfiprintf_r+0x1ec>)
 802a652:	bb1b      	cbnz	r3, 802a69c <_svfiprintf_r+0x1b0>
 802a654:	9b03      	ldr	r3, [sp, #12]
 802a656:	3307      	adds	r3, #7
 802a658:	f023 0307 	bic.w	r3, r3, #7
 802a65c:	3308      	adds	r3, #8
 802a65e:	9303      	str	r3, [sp, #12]
 802a660:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802a662:	4433      	add	r3, r6
 802a664:	9309      	str	r3, [sp, #36]	@ 0x24
 802a666:	e76a      	b.n	802a53e <_svfiprintf_r+0x52>
 802a668:	fb0c 3202 	mla	r2, ip, r2, r3
 802a66c:	460c      	mov	r4, r1
 802a66e:	2001      	movs	r0, #1
 802a670:	e7a8      	b.n	802a5c4 <_svfiprintf_r+0xd8>
 802a672:	2300      	movs	r3, #0
 802a674:	3401      	adds	r4, #1
 802a676:	9305      	str	r3, [sp, #20]
 802a678:	4619      	mov	r1, r3
 802a67a:	f04f 0c0a 	mov.w	ip, #10
 802a67e:	4620      	mov	r0, r4
 802a680:	f810 2b01 	ldrb.w	r2, [r0], #1
 802a684:	3a30      	subs	r2, #48	@ 0x30
 802a686:	2a09      	cmp	r2, #9
 802a688:	d903      	bls.n	802a692 <_svfiprintf_r+0x1a6>
 802a68a:	2b00      	cmp	r3, #0
 802a68c:	d0c6      	beq.n	802a61c <_svfiprintf_r+0x130>
 802a68e:	9105      	str	r1, [sp, #20]
 802a690:	e7c4      	b.n	802a61c <_svfiprintf_r+0x130>
 802a692:	fb0c 2101 	mla	r1, ip, r1, r2
 802a696:	4604      	mov	r4, r0
 802a698:	2301      	movs	r3, #1
 802a69a:	e7f0      	b.n	802a67e <_svfiprintf_r+0x192>
 802a69c:	ab03      	add	r3, sp, #12
 802a69e:	9300      	str	r3, [sp, #0]
 802a6a0:	462a      	mov	r2, r5
 802a6a2:	4b0e      	ldr	r3, [pc, #56]	@ (802a6dc <_svfiprintf_r+0x1f0>)
 802a6a4:	a904      	add	r1, sp, #16
 802a6a6:	4638      	mov	r0, r7
 802a6a8:	f3af 8000 	nop.w
 802a6ac:	1c42      	adds	r2, r0, #1
 802a6ae:	4606      	mov	r6, r0
 802a6b0:	d1d6      	bne.n	802a660 <_svfiprintf_r+0x174>
 802a6b2:	89ab      	ldrh	r3, [r5, #12]
 802a6b4:	065b      	lsls	r3, r3, #25
 802a6b6:	f53f af2d 	bmi.w	802a514 <_svfiprintf_r+0x28>
 802a6ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802a6bc:	e72c      	b.n	802a518 <_svfiprintf_r+0x2c>
 802a6be:	ab03      	add	r3, sp, #12
 802a6c0:	9300      	str	r3, [sp, #0]
 802a6c2:	462a      	mov	r2, r5
 802a6c4:	4b05      	ldr	r3, [pc, #20]	@ (802a6dc <_svfiprintf_r+0x1f0>)
 802a6c6:	a904      	add	r1, sp, #16
 802a6c8:	4638      	mov	r0, r7
 802a6ca:	f000 f9bb 	bl	802aa44 <_printf_i>
 802a6ce:	e7ed      	b.n	802a6ac <_svfiprintf_r+0x1c0>
 802a6d0:	0802c41a 	.word	0x0802c41a
 802a6d4:	0802c424 	.word	0x0802c424
 802a6d8:	00000000 	.word	0x00000000
 802a6dc:	0802a435 	.word	0x0802a435
 802a6e0:	0802c420 	.word	0x0802c420

0802a6e4 <__sfputc_r>:
 802a6e4:	6893      	ldr	r3, [r2, #8]
 802a6e6:	3b01      	subs	r3, #1
 802a6e8:	2b00      	cmp	r3, #0
 802a6ea:	b410      	push	{r4}
 802a6ec:	6093      	str	r3, [r2, #8]
 802a6ee:	da08      	bge.n	802a702 <__sfputc_r+0x1e>
 802a6f0:	6994      	ldr	r4, [r2, #24]
 802a6f2:	42a3      	cmp	r3, r4
 802a6f4:	db01      	blt.n	802a6fa <__sfputc_r+0x16>
 802a6f6:	290a      	cmp	r1, #10
 802a6f8:	d103      	bne.n	802a702 <__sfputc_r+0x1e>
 802a6fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a6fe:	f000 bb6b 	b.w	802add8 <__swbuf_r>
 802a702:	6813      	ldr	r3, [r2, #0]
 802a704:	1c58      	adds	r0, r3, #1
 802a706:	6010      	str	r0, [r2, #0]
 802a708:	7019      	strb	r1, [r3, #0]
 802a70a:	4608      	mov	r0, r1
 802a70c:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a710:	4770      	bx	lr

0802a712 <__sfputs_r>:
 802a712:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a714:	4606      	mov	r6, r0
 802a716:	460f      	mov	r7, r1
 802a718:	4614      	mov	r4, r2
 802a71a:	18d5      	adds	r5, r2, r3
 802a71c:	42ac      	cmp	r4, r5
 802a71e:	d101      	bne.n	802a724 <__sfputs_r+0x12>
 802a720:	2000      	movs	r0, #0
 802a722:	e007      	b.n	802a734 <__sfputs_r+0x22>
 802a724:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a728:	463a      	mov	r2, r7
 802a72a:	4630      	mov	r0, r6
 802a72c:	f7ff ffda 	bl	802a6e4 <__sfputc_r>
 802a730:	1c43      	adds	r3, r0, #1
 802a732:	d1f3      	bne.n	802a71c <__sfputs_r+0xa>
 802a734:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802a738 <_vfiprintf_r>:
 802a738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a73c:	460d      	mov	r5, r1
 802a73e:	b09d      	sub	sp, #116	@ 0x74
 802a740:	4614      	mov	r4, r2
 802a742:	4698      	mov	r8, r3
 802a744:	4606      	mov	r6, r0
 802a746:	b118      	cbz	r0, 802a750 <_vfiprintf_r+0x18>
 802a748:	6a03      	ldr	r3, [r0, #32]
 802a74a:	b90b      	cbnz	r3, 802a750 <_vfiprintf_r+0x18>
 802a74c:	f7ff fc2e 	bl	8029fac <__sinit>
 802a750:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802a752:	07d9      	lsls	r1, r3, #31
 802a754:	d405      	bmi.n	802a762 <_vfiprintf_r+0x2a>
 802a756:	89ab      	ldrh	r3, [r5, #12]
 802a758:	059a      	lsls	r2, r3, #22
 802a75a:	d402      	bmi.n	802a762 <_vfiprintf_r+0x2a>
 802a75c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802a75e:	f7ff fdb2 	bl	802a2c6 <__retarget_lock_acquire_recursive>
 802a762:	89ab      	ldrh	r3, [r5, #12]
 802a764:	071b      	lsls	r3, r3, #28
 802a766:	d501      	bpl.n	802a76c <_vfiprintf_r+0x34>
 802a768:	692b      	ldr	r3, [r5, #16]
 802a76a:	b99b      	cbnz	r3, 802a794 <_vfiprintf_r+0x5c>
 802a76c:	4629      	mov	r1, r5
 802a76e:	4630      	mov	r0, r6
 802a770:	f000 fb70 	bl	802ae54 <__swsetup_r>
 802a774:	b170      	cbz	r0, 802a794 <_vfiprintf_r+0x5c>
 802a776:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802a778:	07dc      	lsls	r4, r3, #31
 802a77a:	d504      	bpl.n	802a786 <_vfiprintf_r+0x4e>
 802a77c:	f04f 30ff 	mov.w	r0, #4294967295
 802a780:	b01d      	add	sp, #116	@ 0x74
 802a782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a786:	89ab      	ldrh	r3, [r5, #12]
 802a788:	0598      	lsls	r0, r3, #22
 802a78a:	d4f7      	bmi.n	802a77c <_vfiprintf_r+0x44>
 802a78c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802a78e:	f7ff fd9b 	bl	802a2c8 <__retarget_lock_release_recursive>
 802a792:	e7f3      	b.n	802a77c <_vfiprintf_r+0x44>
 802a794:	2300      	movs	r3, #0
 802a796:	9309      	str	r3, [sp, #36]	@ 0x24
 802a798:	2320      	movs	r3, #32
 802a79a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802a79e:	f8cd 800c 	str.w	r8, [sp, #12]
 802a7a2:	2330      	movs	r3, #48	@ 0x30
 802a7a4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802a954 <_vfiprintf_r+0x21c>
 802a7a8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 802a7ac:	f04f 0901 	mov.w	r9, #1
 802a7b0:	4623      	mov	r3, r4
 802a7b2:	469a      	mov	sl, r3
 802a7b4:	f813 2b01 	ldrb.w	r2, [r3], #1
 802a7b8:	b10a      	cbz	r2, 802a7be <_vfiprintf_r+0x86>
 802a7ba:	2a25      	cmp	r2, #37	@ 0x25
 802a7bc:	d1f9      	bne.n	802a7b2 <_vfiprintf_r+0x7a>
 802a7be:	ebba 0b04 	subs.w	fp, sl, r4
 802a7c2:	d00b      	beq.n	802a7dc <_vfiprintf_r+0xa4>
 802a7c4:	465b      	mov	r3, fp
 802a7c6:	4622      	mov	r2, r4
 802a7c8:	4629      	mov	r1, r5
 802a7ca:	4630      	mov	r0, r6
 802a7cc:	f7ff ffa1 	bl	802a712 <__sfputs_r>
 802a7d0:	3001      	adds	r0, #1
 802a7d2:	f000 80a7 	beq.w	802a924 <_vfiprintf_r+0x1ec>
 802a7d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802a7d8:	445a      	add	r2, fp
 802a7da:	9209      	str	r2, [sp, #36]	@ 0x24
 802a7dc:	f89a 3000 	ldrb.w	r3, [sl]
 802a7e0:	2b00      	cmp	r3, #0
 802a7e2:	f000 809f 	beq.w	802a924 <_vfiprintf_r+0x1ec>
 802a7e6:	2300      	movs	r3, #0
 802a7e8:	f04f 32ff 	mov.w	r2, #4294967295
 802a7ec:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802a7f0:	f10a 0a01 	add.w	sl, sl, #1
 802a7f4:	9304      	str	r3, [sp, #16]
 802a7f6:	9307      	str	r3, [sp, #28]
 802a7f8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802a7fc:	931a      	str	r3, [sp, #104]	@ 0x68
 802a7fe:	4654      	mov	r4, sl
 802a800:	2205      	movs	r2, #5
 802a802:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a806:	4853      	ldr	r0, [pc, #332]	@ (802a954 <_vfiprintf_r+0x21c>)
 802a808:	f7d5 fcfa 	bl	8000200 <memchr>
 802a80c:	9a04      	ldr	r2, [sp, #16]
 802a80e:	b9d8      	cbnz	r0, 802a848 <_vfiprintf_r+0x110>
 802a810:	06d1      	lsls	r1, r2, #27
 802a812:	bf44      	itt	mi
 802a814:	2320      	movmi	r3, #32
 802a816:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802a81a:	0713      	lsls	r3, r2, #28
 802a81c:	bf44      	itt	mi
 802a81e:	232b      	movmi	r3, #43	@ 0x2b
 802a820:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802a824:	f89a 3000 	ldrb.w	r3, [sl]
 802a828:	2b2a      	cmp	r3, #42	@ 0x2a
 802a82a:	d015      	beq.n	802a858 <_vfiprintf_r+0x120>
 802a82c:	9a07      	ldr	r2, [sp, #28]
 802a82e:	4654      	mov	r4, sl
 802a830:	2000      	movs	r0, #0
 802a832:	f04f 0c0a 	mov.w	ip, #10
 802a836:	4621      	mov	r1, r4
 802a838:	f811 3b01 	ldrb.w	r3, [r1], #1
 802a83c:	3b30      	subs	r3, #48	@ 0x30
 802a83e:	2b09      	cmp	r3, #9
 802a840:	d94b      	bls.n	802a8da <_vfiprintf_r+0x1a2>
 802a842:	b1b0      	cbz	r0, 802a872 <_vfiprintf_r+0x13a>
 802a844:	9207      	str	r2, [sp, #28]
 802a846:	e014      	b.n	802a872 <_vfiprintf_r+0x13a>
 802a848:	eba0 0308 	sub.w	r3, r0, r8
 802a84c:	fa09 f303 	lsl.w	r3, r9, r3
 802a850:	4313      	orrs	r3, r2
 802a852:	9304      	str	r3, [sp, #16]
 802a854:	46a2      	mov	sl, r4
 802a856:	e7d2      	b.n	802a7fe <_vfiprintf_r+0xc6>
 802a858:	9b03      	ldr	r3, [sp, #12]
 802a85a:	1d19      	adds	r1, r3, #4
 802a85c:	681b      	ldr	r3, [r3, #0]
 802a85e:	9103      	str	r1, [sp, #12]
 802a860:	2b00      	cmp	r3, #0
 802a862:	bfbb      	ittet	lt
 802a864:	425b      	neglt	r3, r3
 802a866:	f042 0202 	orrlt.w	r2, r2, #2
 802a86a:	9307      	strge	r3, [sp, #28]
 802a86c:	9307      	strlt	r3, [sp, #28]
 802a86e:	bfb8      	it	lt
 802a870:	9204      	strlt	r2, [sp, #16]
 802a872:	7823      	ldrb	r3, [r4, #0]
 802a874:	2b2e      	cmp	r3, #46	@ 0x2e
 802a876:	d10a      	bne.n	802a88e <_vfiprintf_r+0x156>
 802a878:	7863      	ldrb	r3, [r4, #1]
 802a87a:	2b2a      	cmp	r3, #42	@ 0x2a
 802a87c:	d132      	bne.n	802a8e4 <_vfiprintf_r+0x1ac>
 802a87e:	9b03      	ldr	r3, [sp, #12]
 802a880:	1d1a      	adds	r2, r3, #4
 802a882:	681b      	ldr	r3, [r3, #0]
 802a884:	9203      	str	r2, [sp, #12]
 802a886:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802a88a:	3402      	adds	r4, #2
 802a88c:	9305      	str	r3, [sp, #20]
 802a88e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802a964 <_vfiprintf_r+0x22c>
 802a892:	7821      	ldrb	r1, [r4, #0]
 802a894:	2203      	movs	r2, #3
 802a896:	4650      	mov	r0, sl
 802a898:	f7d5 fcb2 	bl	8000200 <memchr>
 802a89c:	b138      	cbz	r0, 802a8ae <_vfiprintf_r+0x176>
 802a89e:	9b04      	ldr	r3, [sp, #16]
 802a8a0:	eba0 000a 	sub.w	r0, r0, sl
 802a8a4:	2240      	movs	r2, #64	@ 0x40
 802a8a6:	4082      	lsls	r2, r0
 802a8a8:	4313      	orrs	r3, r2
 802a8aa:	3401      	adds	r4, #1
 802a8ac:	9304      	str	r3, [sp, #16]
 802a8ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a8b2:	4829      	ldr	r0, [pc, #164]	@ (802a958 <_vfiprintf_r+0x220>)
 802a8b4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802a8b8:	2206      	movs	r2, #6
 802a8ba:	f7d5 fca1 	bl	8000200 <memchr>
 802a8be:	2800      	cmp	r0, #0
 802a8c0:	d03f      	beq.n	802a942 <_vfiprintf_r+0x20a>
 802a8c2:	4b26      	ldr	r3, [pc, #152]	@ (802a95c <_vfiprintf_r+0x224>)
 802a8c4:	bb1b      	cbnz	r3, 802a90e <_vfiprintf_r+0x1d6>
 802a8c6:	9b03      	ldr	r3, [sp, #12]
 802a8c8:	3307      	adds	r3, #7
 802a8ca:	f023 0307 	bic.w	r3, r3, #7
 802a8ce:	3308      	adds	r3, #8
 802a8d0:	9303      	str	r3, [sp, #12]
 802a8d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802a8d4:	443b      	add	r3, r7
 802a8d6:	9309      	str	r3, [sp, #36]	@ 0x24
 802a8d8:	e76a      	b.n	802a7b0 <_vfiprintf_r+0x78>
 802a8da:	fb0c 3202 	mla	r2, ip, r2, r3
 802a8de:	460c      	mov	r4, r1
 802a8e0:	2001      	movs	r0, #1
 802a8e2:	e7a8      	b.n	802a836 <_vfiprintf_r+0xfe>
 802a8e4:	2300      	movs	r3, #0
 802a8e6:	3401      	adds	r4, #1
 802a8e8:	9305      	str	r3, [sp, #20]
 802a8ea:	4619      	mov	r1, r3
 802a8ec:	f04f 0c0a 	mov.w	ip, #10
 802a8f0:	4620      	mov	r0, r4
 802a8f2:	f810 2b01 	ldrb.w	r2, [r0], #1
 802a8f6:	3a30      	subs	r2, #48	@ 0x30
 802a8f8:	2a09      	cmp	r2, #9
 802a8fa:	d903      	bls.n	802a904 <_vfiprintf_r+0x1cc>
 802a8fc:	2b00      	cmp	r3, #0
 802a8fe:	d0c6      	beq.n	802a88e <_vfiprintf_r+0x156>
 802a900:	9105      	str	r1, [sp, #20]
 802a902:	e7c4      	b.n	802a88e <_vfiprintf_r+0x156>
 802a904:	fb0c 2101 	mla	r1, ip, r1, r2
 802a908:	4604      	mov	r4, r0
 802a90a:	2301      	movs	r3, #1
 802a90c:	e7f0      	b.n	802a8f0 <_vfiprintf_r+0x1b8>
 802a90e:	ab03      	add	r3, sp, #12
 802a910:	9300      	str	r3, [sp, #0]
 802a912:	462a      	mov	r2, r5
 802a914:	4b12      	ldr	r3, [pc, #72]	@ (802a960 <_vfiprintf_r+0x228>)
 802a916:	a904      	add	r1, sp, #16
 802a918:	4630      	mov	r0, r6
 802a91a:	f3af 8000 	nop.w
 802a91e:	4607      	mov	r7, r0
 802a920:	1c78      	adds	r0, r7, #1
 802a922:	d1d6      	bne.n	802a8d2 <_vfiprintf_r+0x19a>
 802a924:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802a926:	07d9      	lsls	r1, r3, #31
 802a928:	d405      	bmi.n	802a936 <_vfiprintf_r+0x1fe>
 802a92a:	89ab      	ldrh	r3, [r5, #12]
 802a92c:	059a      	lsls	r2, r3, #22
 802a92e:	d402      	bmi.n	802a936 <_vfiprintf_r+0x1fe>
 802a930:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802a932:	f7ff fcc9 	bl	802a2c8 <__retarget_lock_release_recursive>
 802a936:	89ab      	ldrh	r3, [r5, #12]
 802a938:	065b      	lsls	r3, r3, #25
 802a93a:	f53f af1f 	bmi.w	802a77c <_vfiprintf_r+0x44>
 802a93e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802a940:	e71e      	b.n	802a780 <_vfiprintf_r+0x48>
 802a942:	ab03      	add	r3, sp, #12
 802a944:	9300      	str	r3, [sp, #0]
 802a946:	462a      	mov	r2, r5
 802a948:	4b05      	ldr	r3, [pc, #20]	@ (802a960 <_vfiprintf_r+0x228>)
 802a94a:	a904      	add	r1, sp, #16
 802a94c:	4630      	mov	r0, r6
 802a94e:	f000 f879 	bl	802aa44 <_printf_i>
 802a952:	e7e4      	b.n	802a91e <_vfiprintf_r+0x1e6>
 802a954:	0802c41a 	.word	0x0802c41a
 802a958:	0802c424 	.word	0x0802c424
 802a95c:	00000000 	.word	0x00000000
 802a960:	0802a713 	.word	0x0802a713
 802a964:	0802c420 	.word	0x0802c420

0802a968 <_printf_common>:
 802a968:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802a96c:	4616      	mov	r6, r2
 802a96e:	4698      	mov	r8, r3
 802a970:	688a      	ldr	r2, [r1, #8]
 802a972:	690b      	ldr	r3, [r1, #16]
 802a974:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802a978:	4293      	cmp	r3, r2
 802a97a:	bfb8      	it	lt
 802a97c:	4613      	movlt	r3, r2
 802a97e:	6033      	str	r3, [r6, #0]
 802a980:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802a984:	4607      	mov	r7, r0
 802a986:	460c      	mov	r4, r1
 802a988:	b10a      	cbz	r2, 802a98e <_printf_common+0x26>
 802a98a:	3301      	adds	r3, #1
 802a98c:	6033      	str	r3, [r6, #0]
 802a98e:	6823      	ldr	r3, [r4, #0]
 802a990:	0699      	lsls	r1, r3, #26
 802a992:	bf42      	ittt	mi
 802a994:	6833      	ldrmi	r3, [r6, #0]
 802a996:	3302      	addmi	r3, #2
 802a998:	6033      	strmi	r3, [r6, #0]
 802a99a:	6825      	ldr	r5, [r4, #0]
 802a99c:	f015 0506 	ands.w	r5, r5, #6
 802a9a0:	d106      	bne.n	802a9b0 <_printf_common+0x48>
 802a9a2:	f104 0a19 	add.w	sl, r4, #25
 802a9a6:	68e3      	ldr	r3, [r4, #12]
 802a9a8:	6832      	ldr	r2, [r6, #0]
 802a9aa:	1a9b      	subs	r3, r3, r2
 802a9ac:	42ab      	cmp	r3, r5
 802a9ae:	dc26      	bgt.n	802a9fe <_printf_common+0x96>
 802a9b0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802a9b4:	6822      	ldr	r2, [r4, #0]
 802a9b6:	3b00      	subs	r3, #0
 802a9b8:	bf18      	it	ne
 802a9ba:	2301      	movne	r3, #1
 802a9bc:	0692      	lsls	r2, r2, #26
 802a9be:	d42b      	bmi.n	802aa18 <_printf_common+0xb0>
 802a9c0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802a9c4:	4641      	mov	r1, r8
 802a9c6:	4638      	mov	r0, r7
 802a9c8:	47c8      	blx	r9
 802a9ca:	3001      	adds	r0, #1
 802a9cc:	d01e      	beq.n	802aa0c <_printf_common+0xa4>
 802a9ce:	6823      	ldr	r3, [r4, #0]
 802a9d0:	6922      	ldr	r2, [r4, #16]
 802a9d2:	f003 0306 	and.w	r3, r3, #6
 802a9d6:	2b04      	cmp	r3, #4
 802a9d8:	bf02      	ittt	eq
 802a9da:	68e5      	ldreq	r5, [r4, #12]
 802a9dc:	6833      	ldreq	r3, [r6, #0]
 802a9de:	1aed      	subeq	r5, r5, r3
 802a9e0:	68a3      	ldr	r3, [r4, #8]
 802a9e2:	bf0c      	ite	eq
 802a9e4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802a9e8:	2500      	movne	r5, #0
 802a9ea:	4293      	cmp	r3, r2
 802a9ec:	bfc4      	itt	gt
 802a9ee:	1a9b      	subgt	r3, r3, r2
 802a9f0:	18ed      	addgt	r5, r5, r3
 802a9f2:	2600      	movs	r6, #0
 802a9f4:	341a      	adds	r4, #26
 802a9f6:	42b5      	cmp	r5, r6
 802a9f8:	d11a      	bne.n	802aa30 <_printf_common+0xc8>
 802a9fa:	2000      	movs	r0, #0
 802a9fc:	e008      	b.n	802aa10 <_printf_common+0xa8>
 802a9fe:	2301      	movs	r3, #1
 802aa00:	4652      	mov	r2, sl
 802aa02:	4641      	mov	r1, r8
 802aa04:	4638      	mov	r0, r7
 802aa06:	47c8      	blx	r9
 802aa08:	3001      	adds	r0, #1
 802aa0a:	d103      	bne.n	802aa14 <_printf_common+0xac>
 802aa0c:	f04f 30ff 	mov.w	r0, #4294967295
 802aa10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802aa14:	3501      	adds	r5, #1
 802aa16:	e7c6      	b.n	802a9a6 <_printf_common+0x3e>
 802aa18:	18e1      	adds	r1, r4, r3
 802aa1a:	1c5a      	adds	r2, r3, #1
 802aa1c:	2030      	movs	r0, #48	@ 0x30
 802aa1e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802aa22:	4422      	add	r2, r4
 802aa24:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802aa28:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 802aa2c:	3302      	adds	r3, #2
 802aa2e:	e7c7      	b.n	802a9c0 <_printf_common+0x58>
 802aa30:	2301      	movs	r3, #1
 802aa32:	4622      	mov	r2, r4
 802aa34:	4641      	mov	r1, r8
 802aa36:	4638      	mov	r0, r7
 802aa38:	47c8      	blx	r9
 802aa3a:	3001      	adds	r0, #1
 802aa3c:	d0e6      	beq.n	802aa0c <_printf_common+0xa4>
 802aa3e:	3601      	adds	r6, #1
 802aa40:	e7d9      	b.n	802a9f6 <_printf_common+0x8e>
	...

0802aa44 <_printf_i>:
 802aa44:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802aa48:	7e0f      	ldrb	r7, [r1, #24]
 802aa4a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802aa4c:	2f78      	cmp	r7, #120	@ 0x78
 802aa4e:	4691      	mov	r9, r2
 802aa50:	4680      	mov	r8, r0
 802aa52:	460c      	mov	r4, r1
 802aa54:	469a      	mov	sl, r3
 802aa56:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802aa5a:	d807      	bhi.n	802aa6c <_printf_i+0x28>
 802aa5c:	2f62      	cmp	r7, #98	@ 0x62
 802aa5e:	d80a      	bhi.n	802aa76 <_printf_i+0x32>
 802aa60:	2f00      	cmp	r7, #0
 802aa62:	f000 80d1 	beq.w	802ac08 <_printf_i+0x1c4>
 802aa66:	2f58      	cmp	r7, #88	@ 0x58
 802aa68:	f000 80b8 	beq.w	802abdc <_printf_i+0x198>
 802aa6c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802aa70:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802aa74:	e03a      	b.n	802aaec <_printf_i+0xa8>
 802aa76:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802aa7a:	2b15      	cmp	r3, #21
 802aa7c:	d8f6      	bhi.n	802aa6c <_printf_i+0x28>
 802aa7e:	a101      	add	r1, pc, #4	@ (adr r1, 802aa84 <_printf_i+0x40>)
 802aa80:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802aa84:	0802aadd 	.word	0x0802aadd
 802aa88:	0802aaf1 	.word	0x0802aaf1
 802aa8c:	0802aa6d 	.word	0x0802aa6d
 802aa90:	0802aa6d 	.word	0x0802aa6d
 802aa94:	0802aa6d 	.word	0x0802aa6d
 802aa98:	0802aa6d 	.word	0x0802aa6d
 802aa9c:	0802aaf1 	.word	0x0802aaf1
 802aaa0:	0802aa6d 	.word	0x0802aa6d
 802aaa4:	0802aa6d 	.word	0x0802aa6d
 802aaa8:	0802aa6d 	.word	0x0802aa6d
 802aaac:	0802aa6d 	.word	0x0802aa6d
 802aab0:	0802abef 	.word	0x0802abef
 802aab4:	0802ab1b 	.word	0x0802ab1b
 802aab8:	0802aba9 	.word	0x0802aba9
 802aabc:	0802aa6d 	.word	0x0802aa6d
 802aac0:	0802aa6d 	.word	0x0802aa6d
 802aac4:	0802ac11 	.word	0x0802ac11
 802aac8:	0802aa6d 	.word	0x0802aa6d
 802aacc:	0802ab1b 	.word	0x0802ab1b
 802aad0:	0802aa6d 	.word	0x0802aa6d
 802aad4:	0802aa6d 	.word	0x0802aa6d
 802aad8:	0802abb1 	.word	0x0802abb1
 802aadc:	6833      	ldr	r3, [r6, #0]
 802aade:	1d1a      	adds	r2, r3, #4
 802aae0:	681b      	ldr	r3, [r3, #0]
 802aae2:	6032      	str	r2, [r6, #0]
 802aae4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802aae8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 802aaec:	2301      	movs	r3, #1
 802aaee:	e09c      	b.n	802ac2a <_printf_i+0x1e6>
 802aaf0:	6833      	ldr	r3, [r6, #0]
 802aaf2:	6820      	ldr	r0, [r4, #0]
 802aaf4:	1d19      	adds	r1, r3, #4
 802aaf6:	6031      	str	r1, [r6, #0]
 802aaf8:	0606      	lsls	r6, r0, #24
 802aafa:	d501      	bpl.n	802ab00 <_printf_i+0xbc>
 802aafc:	681d      	ldr	r5, [r3, #0]
 802aafe:	e003      	b.n	802ab08 <_printf_i+0xc4>
 802ab00:	0645      	lsls	r5, r0, #25
 802ab02:	d5fb      	bpl.n	802aafc <_printf_i+0xb8>
 802ab04:	f9b3 5000 	ldrsh.w	r5, [r3]
 802ab08:	2d00      	cmp	r5, #0
 802ab0a:	da03      	bge.n	802ab14 <_printf_i+0xd0>
 802ab0c:	232d      	movs	r3, #45	@ 0x2d
 802ab0e:	426d      	negs	r5, r5
 802ab10:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802ab14:	4858      	ldr	r0, [pc, #352]	@ (802ac78 <_printf_i+0x234>)
 802ab16:	230a      	movs	r3, #10
 802ab18:	e011      	b.n	802ab3e <_printf_i+0xfa>
 802ab1a:	6821      	ldr	r1, [r4, #0]
 802ab1c:	6833      	ldr	r3, [r6, #0]
 802ab1e:	0608      	lsls	r0, r1, #24
 802ab20:	f853 5b04 	ldr.w	r5, [r3], #4
 802ab24:	d402      	bmi.n	802ab2c <_printf_i+0xe8>
 802ab26:	0649      	lsls	r1, r1, #25
 802ab28:	bf48      	it	mi
 802ab2a:	b2ad      	uxthmi	r5, r5
 802ab2c:	2f6f      	cmp	r7, #111	@ 0x6f
 802ab2e:	4852      	ldr	r0, [pc, #328]	@ (802ac78 <_printf_i+0x234>)
 802ab30:	6033      	str	r3, [r6, #0]
 802ab32:	bf14      	ite	ne
 802ab34:	230a      	movne	r3, #10
 802ab36:	2308      	moveq	r3, #8
 802ab38:	2100      	movs	r1, #0
 802ab3a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 802ab3e:	6866      	ldr	r6, [r4, #4]
 802ab40:	60a6      	str	r6, [r4, #8]
 802ab42:	2e00      	cmp	r6, #0
 802ab44:	db05      	blt.n	802ab52 <_printf_i+0x10e>
 802ab46:	6821      	ldr	r1, [r4, #0]
 802ab48:	432e      	orrs	r6, r5
 802ab4a:	f021 0104 	bic.w	r1, r1, #4
 802ab4e:	6021      	str	r1, [r4, #0]
 802ab50:	d04b      	beq.n	802abea <_printf_i+0x1a6>
 802ab52:	4616      	mov	r6, r2
 802ab54:	fbb5 f1f3 	udiv	r1, r5, r3
 802ab58:	fb03 5711 	mls	r7, r3, r1, r5
 802ab5c:	5dc7      	ldrb	r7, [r0, r7]
 802ab5e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802ab62:	462f      	mov	r7, r5
 802ab64:	42bb      	cmp	r3, r7
 802ab66:	460d      	mov	r5, r1
 802ab68:	d9f4      	bls.n	802ab54 <_printf_i+0x110>
 802ab6a:	2b08      	cmp	r3, #8
 802ab6c:	d10b      	bne.n	802ab86 <_printf_i+0x142>
 802ab6e:	6823      	ldr	r3, [r4, #0]
 802ab70:	07df      	lsls	r7, r3, #31
 802ab72:	d508      	bpl.n	802ab86 <_printf_i+0x142>
 802ab74:	6923      	ldr	r3, [r4, #16]
 802ab76:	6861      	ldr	r1, [r4, #4]
 802ab78:	4299      	cmp	r1, r3
 802ab7a:	bfde      	ittt	le
 802ab7c:	2330      	movle	r3, #48	@ 0x30
 802ab7e:	f806 3c01 	strble.w	r3, [r6, #-1]
 802ab82:	f106 36ff 	addle.w	r6, r6, #4294967295
 802ab86:	1b92      	subs	r2, r2, r6
 802ab88:	6122      	str	r2, [r4, #16]
 802ab8a:	f8cd a000 	str.w	sl, [sp]
 802ab8e:	464b      	mov	r3, r9
 802ab90:	aa03      	add	r2, sp, #12
 802ab92:	4621      	mov	r1, r4
 802ab94:	4640      	mov	r0, r8
 802ab96:	f7ff fee7 	bl	802a968 <_printf_common>
 802ab9a:	3001      	adds	r0, #1
 802ab9c:	d14a      	bne.n	802ac34 <_printf_i+0x1f0>
 802ab9e:	f04f 30ff 	mov.w	r0, #4294967295
 802aba2:	b004      	add	sp, #16
 802aba4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802aba8:	6823      	ldr	r3, [r4, #0]
 802abaa:	f043 0320 	orr.w	r3, r3, #32
 802abae:	6023      	str	r3, [r4, #0]
 802abb0:	4832      	ldr	r0, [pc, #200]	@ (802ac7c <_printf_i+0x238>)
 802abb2:	2778      	movs	r7, #120	@ 0x78
 802abb4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802abb8:	6823      	ldr	r3, [r4, #0]
 802abba:	6831      	ldr	r1, [r6, #0]
 802abbc:	061f      	lsls	r7, r3, #24
 802abbe:	f851 5b04 	ldr.w	r5, [r1], #4
 802abc2:	d402      	bmi.n	802abca <_printf_i+0x186>
 802abc4:	065f      	lsls	r7, r3, #25
 802abc6:	bf48      	it	mi
 802abc8:	b2ad      	uxthmi	r5, r5
 802abca:	6031      	str	r1, [r6, #0]
 802abcc:	07d9      	lsls	r1, r3, #31
 802abce:	bf44      	itt	mi
 802abd0:	f043 0320 	orrmi.w	r3, r3, #32
 802abd4:	6023      	strmi	r3, [r4, #0]
 802abd6:	b11d      	cbz	r5, 802abe0 <_printf_i+0x19c>
 802abd8:	2310      	movs	r3, #16
 802abda:	e7ad      	b.n	802ab38 <_printf_i+0xf4>
 802abdc:	4826      	ldr	r0, [pc, #152]	@ (802ac78 <_printf_i+0x234>)
 802abde:	e7e9      	b.n	802abb4 <_printf_i+0x170>
 802abe0:	6823      	ldr	r3, [r4, #0]
 802abe2:	f023 0320 	bic.w	r3, r3, #32
 802abe6:	6023      	str	r3, [r4, #0]
 802abe8:	e7f6      	b.n	802abd8 <_printf_i+0x194>
 802abea:	4616      	mov	r6, r2
 802abec:	e7bd      	b.n	802ab6a <_printf_i+0x126>
 802abee:	6833      	ldr	r3, [r6, #0]
 802abf0:	6825      	ldr	r5, [r4, #0]
 802abf2:	6961      	ldr	r1, [r4, #20]
 802abf4:	1d18      	adds	r0, r3, #4
 802abf6:	6030      	str	r0, [r6, #0]
 802abf8:	062e      	lsls	r6, r5, #24
 802abfa:	681b      	ldr	r3, [r3, #0]
 802abfc:	d501      	bpl.n	802ac02 <_printf_i+0x1be>
 802abfe:	6019      	str	r1, [r3, #0]
 802ac00:	e002      	b.n	802ac08 <_printf_i+0x1c4>
 802ac02:	0668      	lsls	r0, r5, #25
 802ac04:	d5fb      	bpl.n	802abfe <_printf_i+0x1ba>
 802ac06:	8019      	strh	r1, [r3, #0]
 802ac08:	2300      	movs	r3, #0
 802ac0a:	6123      	str	r3, [r4, #16]
 802ac0c:	4616      	mov	r6, r2
 802ac0e:	e7bc      	b.n	802ab8a <_printf_i+0x146>
 802ac10:	6833      	ldr	r3, [r6, #0]
 802ac12:	1d1a      	adds	r2, r3, #4
 802ac14:	6032      	str	r2, [r6, #0]
 802ac16:	681e      	ldr	r6, [r3, #0]
 802ac18:	6862      	ldr	r2, [r4, #4]
 802ac1a:	2100      	movs	r1, #0
 802ac1c:	4630      	mov	r0, r6
 802ac1e:	f7d5 faef 	bl	8000200 <memchr>
 802ac22:	b108      	cbz	r0, 802ac28 <_printf_i+0x1e4>
 802ac24:	1b80      	subs	r0, r0, r6
 802ac26:	6060      	str	r0, [r4, #4]
 802ac28:	6863      	ldr	r3, [r4, #4]
 802ac2a:	6123      	str	r3, [r4, #16]
 802ac2c:	2300      	movs	r3, #0
 802ac2e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802ac32:	e7aa      	b.n	802ab8a <_printf_i+0x146>
 802ac34:	6923      	ldr	r3, [r4, #16]
 802ac36:	4632      	mov	r2, r6
 802ac38:	4649      	mov	r1, r9
 802ac3a:	4640      	mov	r0, r8
 802ac3c:	47d0      	blx	sl
 802ac3e:	3001      	adds	r0, #1
 802ac40:	d0ad      	beq.n	802ab9e <_printf_i+0x15a>
 802ac42:	6823      	ldr	r3, [r4, #0]
 802ac44:	079b      	lsls	r3, r3, #30
 802ac46:	d413      	bmi.n	802ac70 <_printf_i+0x22c>
 802ac48:	68e0      	ldr	r0, [r4, #12]
 802ac4a:	9b03      	ldr	r3, [sp, #12]
 802ac4c:	4298      	cmp	r0, r3
 802ac4e:	bfb8      	it	lt
 802ac50:	4618      	movlt	r0, r3
 802ac52:	e7a6      	b.n	802aba2 <_printf_i+0x15e>
 802ac54:	2301      	movs	r3, #1
 802ac56:	4632      	mov	r2, r6
 802ac58:	4649      	mov	r1, r9
 802ac5a:	4640      	mov	r0, r8
 802ac5c:	47d0      	blx	sl
 802ac5e:	3001      	adds	r0, #1
 802ac60:	d09d      	beq.n	802ab9e <_printf_i+0x15a>
 802ac62:	3501      	adds	r5, #1
 802ac64:	68e3      	ldr	r3, [r4, #12]
 802ac66:	9903      	ldr	r1, [sp, #12]
 802ac68:	1a5b      	subs	r3, r3, r1
 802ac6a:	42ab      	cmp	r3, r5
 802ac6c:	dcf2      	bgt.n	802ac54 <_printf_i+0x210>
 802ac6e:	e7eb      	b.n	802ac48 <_printf_i+0x204>
 802ac70:	2500      	movs	r5, #0
 802ac72:	f104 0619 	add.w	r6, r4, #25
 802ac76:	e7f5      	b.n	802ac64 <_printf_i+0x220>
 802ac78:	0802c42b 	.word	0x0802c42b
 802ac7c:	0802c43c 	.word	0x0802c43c

0802ac80 <__sflush_r>:
 802ac80:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802ac84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ac88:	0716      	lsls	r6, r2, #28
 802ac8a:	4605      	mov	r5, r0
 802ac8c:	460c      	mov	r4, r1
 802ac8e:	d454      	bmi.n	802ad3a <__sflush_r+0xba>
 802ac90:	684b      	ldr	r3, [r1, #4]
 802ac92:	2b00      	cmp	r3, #0
 802ac94:	dc02      	bgt.n	802ac9c <__sflush_r+0x1c>
 802ac96:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 802ac98:	2b00      	cmp	r3, #0
 802ac9a:	dd48      	ble.n	802ad2e <__sflush_r+0xae>
 802ac9c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802ac9e:	2e00      	cmp	r6, #0
 802aca0:	d045      	beq.n	802ad2e <__sflush_r+0xae>
 802aca2:	2300      	movs	r3, #0
 802aca4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 802aca8:	682f      	ldr	r7, [r5, #0]
 802acaa:	6a21      	ldr	r1, [r4, #32]
 802acac:	602b      	str	r3, [r5, #0]
 802acae:	d030      	beq.n	802ad12 <__sflush_r+0x92>
 802acb0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802acb2:	89a3      	ldrh	r3, [r4, #12]
 802acb4:	0759      	lsls	r1, r3, #29
 802acb6:	d505      	bpl.n	802acc4 <__sflush_r+0x44>
 802acb8:	6863      	ldr	r3, [r4, #4]
 802acba:	1ad2      	subs	r2, r2, r3
 802acbc:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802acbe:	b10b      	cbz	r3, 802acc4 <__sflush_r+0x44>
 802acc0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802acc2:	1ad2      	subs	r2, r2, r3
 802acc4:	2300      	movs	r3, #0
 802acc6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802acc8:	6a21      	ldr	r1, [r4, #32]
 802acca:	4628      	mov	r0, r5
 802accc:	47b0      	blx	r6
 802acce:	1c43      	adds	r3, r0, #1
 802acd0:	89a3      	ldrh	r3, [r4, #12]
 802acd2:	d106      	bne.n	802ace2 <__sflush_r+0x62>
 802acd4:	6829      	ldr	r1, [r5, #0]
 802acd6:	291d      	cmp	r1, #29
 802acd8:	d82b      	bhi.n	802ad32 <__sflush_r+0xb2>
 802acda:	4a2a      	ldr	r2, [pc, #168]	@ (802ad84 <__sflush_r+0x104>)
 802acdc:	40ca      	lsrs	r2, r1
 802acde:	07d6      	lsls	r6, r2, #31
 802ace0:	d527      	bpl.n	802ad32 <__sflush_r+0xb2>
 802ace2:	2200      	movs	r2, #0
 802ace4:	6062      	str	r2, [r4, #4]
 802ace6:	04d9      	lsls	r1, r3, #19
 802ace8:	6922      	ldr	r2, [r4, #16]
 802acea:	6022      	str	r2, [r4, #0]
 802acec:	d504      	bpl.n	802acf8 <__sflush_r+0x78>
 802acee:	1c42      	adds	r2, r0, #1
 802acf0:	d101      	bne.n	802acf6 <__sflush_r+0x76>
 802acf2:	682b      	ldr	r3, [r5, #0]
 802acf4:	b903      	cbnz	r3, 802acf8 <__sflush_r+0x78>
 802acf6:	6560      	str	r0, [r4, #84]	@ 0x54
 802acf8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802acfa:	602f      	str	r7, [r5, #0]
 802acfc:	b1b9      	cbz	r1, 802ad2e <__sflush_r+0xae>
 802acfe:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802ad02:	4299      	cmp	r1, r3
 802ad04:	d002      	beq.n	802ad0c <__sflush_r+0x8c>
 802ad06:	4628      	mov	r0, r5
 802ad08:	f7ff fb4a 	bl	802a3a0 <_free_r>
 802ad0c:	2300      	movs	r3, #0
 802ad0e:	6363      	str	r3, [r4, #52]	@ 0x34
 802ad10:	e00d      	b.n	802ad2e <__sflush_r+0xae>
 802ad12:	2301      	movs	r3, #1
 802ad14:	4628      	mov	r0, r5
 802ad16:	47b0      	blx	r6
 802ad18:	4602      	mov	r2, r0
 802ad1a:	1c50      	adds	r0, r2, #1
 802ad1c:	d1c9      	bne.n	802acb2 <__sflush_r+0x32>
 802ad1e:	682b      	ldr	r3, [r5, #0]
 802ad20:	2b00      	cmp	r3, #0
 802ad22:	d0c6      	beq.n	802acb2 <__sflush_r+0x32>
 802ad24:	2b1d      	cmp	r3, #29
 802ad26:	d001      	beq.n	802ad2c <__sflush_r+0xac>
 802ad28:	2b16      	cmp	r3, #22
 802ad2a:	d11e      	bne.n	802ad6a <__sflush_r+0xea>
 802ad2c:	602f      	str	r7, [r5, #0]
 802ad2e:	2000      	movs	r0, #0
 802ad30:	e022      	b.n	802ad78 <__sflush_r+0xf8>
 802ad32:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802ad36:	b21b      	sxth	r3, r3
 802ad38:	e01b      	b.n	802ad72 <__sflush_r+0xf2>
 802ad3a:	690f      	ldr	r7, [r1, #16]
 802ad3c:	2f00      	cmp	r7, #0
 802ad3e:	d0f6      	beq.n	802ad2e <__sflush_r+0xae>
 802ad40:	0793      	lsls	r3, r2, #30
 802ad42:	680e      	ldr	r6, [r1, #0]
 802ad44:	bf08      	it	eq
 802ad46:	694b      	ldreq	r3, [r1, #20]
 802ad48:	600f      	str	r7, [r1, #0]
 802ad4a:	bf18      	it	ne
 802ad4c:	2300      	movne	r3, #0
 802ad4e:	eba6 0807 	sub.w	r8, r6, r7
 802ad52:	608b      	str	r3, [r1, #8]
 802ad54:	f1b8 0f00 	cmp.w	r8, #0
 802ad58:	dde9      	ble.n	802ad2e <__sflush_r+0xae>
 802ad5a:	6a21      	ldr	r1, [r4, #32]
 802ad5c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802ad5e:	4643      	mov	r3, r8
 802ad60:	463a      	mov	r2, r7
 802ad62:	4628      	mov	r0, r5
 802ad64:	47b0      	blx	r6
 802ad66:	2800      	cmp	r0, #0
 802ad68:	dc08      	bgt.n	802ad7c <__sflush_r+0xfc>
 802ad6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ad6e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802ad72:	81a3      	strh	r3, [r4, #12]
 802ad74:	f04f 30ff 	mov.w	r0, #4294967295
 802ad78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ad7c:	4407      	add	r7, r0
 802ad7e:	eba8 0800 	sub.w	r8, r8, r0
 802ad82:	e7e7      	b.n	802ad54 <__sflush_r+0xd4>
 802ad84:	20400001 	.word	0x20400001

0802ad88 <_fflush_r>:
 802ad88:	b538      	push	{r3, r4, r5, lr}
 802ad8a:	690b      	ldr	r3, [r1, #16]
 802ad8c:	4605      	mov	r5, r0
 802ad8e:	460c      	mov	r4, r1
 802ad90:	b913      	cbnz	r3, 802ad98 <_fflush_r+0x10>
 802ad92:	2500      	movs	r5, #0
 802ad94:	4628      	mov	r0, r5
 802ad96:	bd38      	pop	{r3, r4, r5, pc}
 802ad98:	b118      	cbz	r0, 802ada2 <_fflush_r+0x1a>
 802ad9a:	6a03      	ldr	r3, [r0, #32]
 802ad9c:	b90b      	cbnz	r3, 802ada2 <_fflush_r+0x1a>
 802ad9e:	f7ff f905 	bl	8029fac <__sinit>
 802ada2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ada6:	2b00      	cmp	r3, #0
 802ada8:	d0f3      	beq.n	802ad92 <_fflush_r+0xa>
 802adaa:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802adac:	07d0      	lsls	r0, r2, #31
 802adae:	d404      	bmi.n	802adba <_fflush_r+0x32>
 802adb0:	0599      	lsls	r1, r3, #22
 802adb2:	d402      	bmi.n	802adba <_fflush_r+0x32>
 802adb4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802adb6:	f7ff fa86 	bl	802a2c6 <__retarget_lock_acquire_recursive>
 802adba:	4628      	mov	r0, r5
 802adbc:	4621      	mov	r1, r4
 802adbe:	f7ff ff5f 	bl	802ac80 <__sflush_r>
 802adc2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802adc4:	07da      	lsls	r2, r3, #31
 802adc6:	4605      	mov	r5, r0
 802adc8:	d4e4      	bmi.n	802ad94 <_fflush_r+0xc>
 802adca:	89a3      	ldrh	r3, [r4, #12]
 802adcc:	059b      	lsls	r3, r3, #22
 802adce:	d4e1      	bmi.n	802ad94 <_fflush_r+0xc>
 802add0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802add2:	f7ff fa79 	bl	802a2c8 <__retarget_lock_release_recursive>
 802add6:	e7dd      	b.n	802ad94 <_fflush_r+0xc>

0802add8 <__swbuf_r>:
 802add8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802adda:	460e      	mov	r6, r1
 802addc:	4614      	mov	r4, r2
 802adde:	4605      	mov	r5, r0
 802ade0:	b118      	cbz	r0, 802adea <__swbuf_r+0x12>
 802ade2:	6a03      	ldr	r3, [r0, #32]
 802ade4:	b90b      	cbnz	r3, 802adea <__swbuf_r+0x12>
 802ade6:	f7ff f8e1 	bl	8029fac <__sinit>
 802adea:	69a3      	ldr	r3, [r4, #24]
 802adec:	60a3      	str	r3, [r4, #8]
 802adee:	89a3      	ldrh	r3, [r4, #12]
 802adf0:	071a      	lsls	r2, r3, #28
 802adf2:	d501      	bpl.n	802adf8 <__swbuf_r+0x20>
 802adf4:	6923      	ldr	r3, [r4, #16]
 802adf6:	b943      	cbnz	r3, 802ae0a <__swbuf_r+0x32>
 802adf8:	4621      	mov	r1, r4
 802adfa:	4628      	mov	r0, r5
 802adfc:	f000 f82a 	bl	802ae54 <__swsetup_r>
 802ae00:	b118      	cbz	r0, 802ae0a <__swbuf_r+0x32>
 802ae02:	f04f 37ff 	mov.w	r7, #4294967295
 802ae06:	4638      	mov	r0, r7
 802ae08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802ae0a:	6823      	ldr	r3, [r4, #0]
 802ae0c:	6922      	ldr	r2, [r4, #16]
 802ae0e:	1a98      	subs	r0, r3, r2
 802ae10:	6963      	ldr	r3, [r4, #20]
 802ae12:	b2f6      	uxtb	r6, r6
 802ae14:	4283      	cmp	r3, r0
 802ae16:	4637      	mov	r7, r6
 802ae18:	dc05      	bgt.n	802ae26 <__swbuf_r+0x4e>
 802ae1a:	4621      	mov	r1, r4
 802ae1c:	4628      	mov	r0, r5
 802ae1e:	f7ff ffb3 	bl	802ad88 <_fflush_r>
 802ae22:	2800      	cmp	r0, #0
 802ae24:	d1ed      	bne.n	802ae02 <__swbuf_r+0x2a>
 802ae26:	68a3      	ldr	r3, [r4, #8]
 802ae28:	3b01      	subs	r3, #1
 802ae2a:	60a3      	str	r3, [r4, #8]
 802ae2c:	6823      	ldr	r3, [r4, #0]
 802ae2e:	1c5a      	adds	r2, r3, #1
 802ae30:	6022      	str	r2, [r4, #0]
 802ae32:	701e      	strb	r6, [r3, #0]
 802ae34:	6962      	ldr	r2, [r4, #20]
 802ae36:	1c43      	adds	r3, r0, #1
 802ae38:	429a      	cmp	r2, r3
 802ae3a:	d004      	beq.n	802ae46 <__swbuf_r+0x6e>
 802ae3c:	89a3      	ldrh	r3, [r4, #12]
 802ae3e:	07db      	lsls	r3, r3, #31
 802ae40:	d5e1      	bpl.n	802ae06 <__swbuf_r+0x2e>
 802ae42:	2e0a      	cmp	r6, #10
 802ae44:	d1df      	bne.n	802ae06 <__swbuf_r+0x2e>
 802ae46:	4621      	mov	r1, r4
 802ae48:	4628      	mov	r0, r5
 802ae4a:	f7ff ff9d 	bl	802ad88 <_fflush_r>
 802ae4e:	2800      	cmp	r0, #0
 802ae50:	d0d9      	beq.n	802ae06 <__swbuf_r+0x2e>
 802ae52:	e7d6      	b.n	802ae02 <__swbuf_r+0x2a>

0802ae54 <__swsetup_r>:
 802ae54:	b538      	push	{r3, r4, r5, lr}
 802ae56:	4b29      	ldr	r3, [pc, #164]	@ (802aefc <__swsetup_r+0xa8>)
 802ae58:	4605      	mov	r5, r0
 802ae5a:	6818      	ldr	r0, [r3, #0]
 802ae5c:	460c      	mov	r4, r1
 802ae5e:	b118      	cbz	r0, 802ae68 <__swsetup_r+0x14>
 802ae60:	6a03      	ldr	r3, [r0, #32]
 802ae62:	b90b      	cbnz	r3, 802ae68 <__swsetup_r+0x14>
 802ae64:	f7ff f8a2 	bl	8029fac <__sinit>
 802ae68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ae6c:	0719      	lsls	r1, r3, #28
 802ae6e:	d422      	bmi.n	802aeb6 <__swsetup_r+0x62>
 802ae70:	06da      	lsls	r2, r3, #27
 802ae72:	d407      	bmi.n	802ae84 <__swsetup_r+0x30>
 802ae74:	2209      	movs	r2, #9
 802ae76:	602a      	str	r2, [r5, #0]
 802ae78:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802ae7c:	81a3      	strh	r3, [r4, #12]
 802ae7e:	f04f 30ff 	mov.w	r0, #4294967295
 802ae82:	e033      	b.n	802aeec <__swsetup_r+0x98>
 802ae84:	0758      	lsls	r0, r3, #29
 802ae86:	d512      	bpl.n	802aeae <__swsetup_r+0x5a>
 802ae88:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802ae8a:	b141      	cbz	r1, 802ae9e <__swsetup_r+0x4a>
 802ae8c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802ae90:	4299      	cmp	r1, r3
 802ae92:	d002      	beq.n	802ae9a <__swsetup_r+0x46>
 802ae94:	4628      	mov	r0, r5
 802ae96:	f7ff fa83 	bl	802a3a0 <_free_r>
 802ae9a:	2300      	movs	r3, #0
 802ae9c:	6363      	str	r3, [r4, #52]	@ 0x34
 802ae9e:	89a3      	ldrh	r3, [r4, #12]
 802aea0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802aea4:	81a3      	strh	r3, [r4, #12]
 802aea6:	2300      	movs	r3, #0
 802aea8:	6063      	str	r3, [r4, #4]
 802aeaa:	6923      	ldr	r3, [r4, #16]
 802aeac:	6023      	str	r3, [r4, #0]
 802aeae:	89a3      	ldrh	r3, [r4, #12]
 802aeb0:	f043 0308 	orr.w	r3, r3, #8
 802aeb4:	81a3      	strh	r3, [r4, #12]
 802aeb6:	6923      	ldr	r3, [r4, #16]
 802aeb8:	b94b      	cbnz	r3, 802aece <__swsetup_r+0x7a>
 802aeba:	89a3      	ldrh	r3, [r4, #12]
 802aebc:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802aec0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802aec4:	d003      	beq.n	802aece <__swsetup_r+0x7a>
 802aec6:	4621      	mov	r1, r4
 802aec8:	4628      	mov	r0, r5
 802aeca:	f000 f887 	bl	802afdc <__smakebuf_r>
 802aece:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802aed2:	f013 0201 	ands.w	r2, r3, #1
 802aed6:	d00a      	beq.n	802aeee <__swsetup_r+0x9a>
 802aed8:	2200      	movs	r2, #0
 802aeda:	60a2      	str	r2, [r4, #8]
 802aedc:	6962      	ldr	r2, [r4, #20]
 802aede:	4252      	negs	r2, r2
 802aee0:	61a2      	str	r2, [r4, #24]
 802aee2:	6922      	ldr	r2, [r4, #16]
 802aee4:	b942      	cbnz	r2, 802aef8 <__swsetup_r+0xa4>
 802aee6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802aeea:	d1c5      	bne.n	802ae78 <__swsetup_r+0x24>
 802aeec:	bd38      	pop	{r3, r4, r5, pc}
 802aeee:	0799      	lsls	r1, r3, #30
 802aef0:	bf58      	it	pl
 802aef2:	6962      	ldrpl	r2, [r4, #20]
 802aef4:	60a2      	str	r2, [r4, #8]
 802aef6:	e7f4      	b.n	802aee2 <__swsetup_r+0x8e>
 802aef8:	2000      	movs	r0, #0
 802aefa:	e7f7      	b.n	802aeec <__swsetup_r+0x98>
 802aefc:	20000110 	.word	0x20000110

0802af00 <memmove>:
 802af00:	4288      	cmp	r0, r1
 802af02:	b510      	push	{r4, lr}
 802af04:	eb01 0402 	add.w	r4, r1, r2
 802af08:	d902      	bls.n	802af10 <memmove+0x10>
 802af0a:	4284      	cmp	r4, r0
 802af0c:	4623      	mov	r3, r4
 802af0e:	d807      	bhi.n	802af20 <memmove+0x20>
 802af10:	1e43      	subs	r3, r0, #1
 802af12:	42a1      	cmp	r1, r4
 802af14:	d008      	beq.n	802af28 <memmove+0x28>
 802af16:	f811 2b01 	ldrb.w	r2, [r1], #1
 802af1a:	f803 2f01 	strb.w	r2, [r3, #1]!
 802af1e:	e7f8      	b.n	802af12 <memmove+0x12>
 802af20:	4402      	add	r2, r0
 802af22:	4601      	mov	r1, r0
 802af24:	428a      	cmp	r2, r1
 802af26:	d100      	bne.n	802af2a <memmove+0x2a>
 802af28:	bd10      	pop	{r4, pc}
 802af2a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 802af2e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 802af32:	e7f7      	b.n	802af24 <memmove+0x24>

0802af34 <_realloc_r>:
 802af34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802af38:	4607      	mov	r7, r0
 802af3a:	4614      	mov	r4, r2
 802af3c:	460d      	mov	r5, r1
 802af3e:	b921      	cbnz	r1, 802af4a <_realloc_r+0x16>
 802af40:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802af44:	4611      	mov	r1, r2
 802af46:	f7fe bf0b 	b.w	8029d60 <_malloc_r>
 802af4a:	b92a      	cbnz	r2, 802af58 <_realloc_r+0x24>
 802af4c:	f7ff fa28 	bl	802a3a0 <_free_r>
 802af50:	4625      	mov	r5, r4
 802af52:	4628      	mov	r0, r5
 802af54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802af58:	f000 f89e 	bl	802b098 <_malloc_usable_size_r>
 802af5c:	4284      	cmp	r4, r0
 802af5e:	4606      	mov	r6, r0
 802af60:	d802      	bhi.n	802af68 <_realloc_r+0x34>
 802af62:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 802af66:	d8f4      	bhi.n	802af52 <_realloc_r+0x1e>
 802af68:	4621      	mov	r1, r4
 802af6a:	4638      	mov	r0, r7
 802af6c:	f7fe fef8 	bl	8029d60 <_malloc_r>
 802af70:	4680      	mov	r8, r0
 802af72:	b908      	cbnz	r0, 802af78 <_realloc_r+0x44>
 802af74:	4645      	mov	r5, r8
 802af76:	e7ec      	b.n	802af52 <_realloc_r+0x1e>
 802af78:	42b4      	cmp	r4, r6
 802af7a:	4622      	mov	r2, r4
 802af7c:	4629      	mov	r1, r5
 802af7e:	bf28      	it	cs
 802af80:	4632      	movcs	r2, r6
 802af82:	f7ff f9a2 	bl	802a2ca <memcpy>
 802af86:	4629      	mov	r1, r5
 802af88:	4638      	mov	r0, r7
 802af8a:	f7ff fa09 	bl	802a3a0 <_free_r>
 802af8e:	e7f1      	b.n	802af74 <_realloc_r+0x40>

0802af90 <__swhatbuf_r>:
 802af90:	b570      	push	{r4, r5, r6, lr}
 802af92:	460c      	mov	r4, r1
 802af94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802af98:	2900      	cmp	r1, #0
 802af9a:	b096      	sub	sp, #88	@ 0x58
 802af9c:	4615      	mov	r5, r2
 802af9e:	461e      	mov	r6, r3
 802afa0:	da0d      	bge.n	802afbe <__swhatbuf_r+0x2e>
 802afa2:	89a3      	ldrh	r3, [r4, #12]
 802afa4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802afa8:	f04f 0100 	mov.w	r1, #0
 802afac:	bf14      	ite	ne
 802afae:	2340      	movne	r3, #64	@ 0x40
 802afb0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802afb4:	2000      	movs	r0, #0
 802afb6:	6031      	str	r1, [r6, #0]
 802afb8:	602b      	str	r3, [r5, #0]
 802afba:	b016      	add	sp, #88	@ 0x58
 802afbc:	bd70      	pop	{r4, r5, r6, pc}
 802afbe:	466a      	mov	r2, sp
 802afc0:	f000 f848 	bl	802b054 <_fstat_r>
 802afc4:	2800      	cmp	r0, #0
 802afc6:	dbec      	blt.n	802afa2 <__swhatbuf_r+0x12>
 802afc8:	9901      	ldr	r1, [sp, #4]
 802afca:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802afce:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802afd2:	4259      	negs	r1, r3
 802afd4:	4159      	adcs	r1, r3
 802afd6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802afda:	e7eb      	b.n	802afb4 <__swhatbuf_r+0x24>

0802afdc <__smakebuf_r>:
 802afdc:	898b      	ldrh	r3, [r1, #12]
 802afde:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802afe0:	079d      	lsls	r5, r3, #30
 802afe2:	4606      	mov	r6, r0
 802afe4:	460c      	mov	r4, r1
 802afe6:	d507      	bpl.n	802aff8 <__smakebuf_r+0x1c>
 802afe8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802afec:	6023      	str	r3, [r4, #0]
 802afee:	6123      	str	r3, [r4, #16]
 802aff0:	2301      	movs	r3, #1
 802aff2:	6163      	str	r3, [r4, #20]
 802aff4:	b003      	add	sp, #12
 802aff6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802aff8:	ab01      	add	r3, sp, #4
 802affa:	466a      	mov	r2, sp
 802affc:	f7ff ffc8 	bl	802af90 <__swhatbuf_r>
 802b000:	9f00      	ldr	r7, [sp, #0]
 802b002:	4605      	mov	r5, r0
 802b004:	4639      	mov	r1, r7
 802b006:	4630      	mov	r0, r6
 802b008:	f7fe feaa 	bl	8029d60 <_malloc_r>
 802b00c:	b948      	cbnz	r0, 802b022 <__smakebuf_r+0x46>
 802b00e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b012:	059a      	lsls	r2, r3, #22
 802b014:	d4ee      	bmi.n	802aff4 <__smakebuf_r+0x18>
 802b016:	f023 0303 	bic.w	r3, r3, #3
 802b01a:	f043 0302 	orr.w	r3, r3, #2
 802b01e:	81a3      	strh	r3, [r4, #12]
 802b020:	e7e2      	b.n	802afe8 <__smakebuf_r+0xc>
 802b022:	89a3      	ldrh	r3, [r4, #12]
 802b024:	6020      	str	r0, [r4, #0]
 802b026:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802b02a:	81a3      	strh	r3, [r4, #12]
 802b02c:	9b01      	ldr	r3, [sp, #4]
 802b02e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802b032:	b15b      	cbz	r3, 802b04c <__smakebuf_r+0x70>
 802b034:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b038:	4630      	mov	r0, r6
 802b03a:	f000 f81d 	bl	802b078 <_isatty_r>
 802b03e:	b128      	cbz	r0, 802b04c <__smakebuf_r+0x70>
 802b040:	89a3      	ldrh	r3, [r4, #12]
 802b042:	f023 0303 	bic.w	r3, r3, #3
 802b046:	f043 0301 	orr.w	r3, r3, #1
 802b04a:	81a3      	strh	r3, [r4, #12]
 802b04c:	89a3      	ldrh	r3, [r4, #12]
 802b04e:	431d      	orrs	r5, r3
 802b050:	81a5      	strh	r5, [r4, #12]
 802b052:	e7cf      	b.n	802aff4 <__smakebuf_r+0x18>

0802b054 <_fstat_r>:
 802b054:	b538      	push	{r3, r4, r5, lr}
 802b056:	4d07      	ldr	r5, [pc, #28]	@ (802b074 <_fstat_r+0x20>)
 802b058:	2300      	movs	r3, #0
 802b05a:	4604      	mov	r4, r0
 802b05c:	4608      	mov	r0, r1
 802b05e:	4611      	mov	r1, r2
 802b060:	602b      	str	r3, [r5, #0]
 802b062:	f7d7 fefa 	bl	8002e5a <_fstat>
 802b066:	1c43      	adds	r3, r0, #1
 802b068:	d102      	bne.n	802b070 <_fstat_r+0x1c>
 802b06a:	682b      	ldr	r3, [r5, #0]
 802b06c:	b103      	cbz	r3, 802b070 <_fstat_r+0x1c>
 802b06e:	6023      	str	r3, [r4, #0]
 802b070:	bd38      	pop	{r3, r4, r5, pc}
 802b072:	bf00      	nop
 802b074:	20014b00 	.word	0x20014b00

0802b078 <_isatty_r>:
 802b078:	b538      	push	{r3, r4, r5, lr}
 802b07a:	4d06      	ldr	r5, [pc, #24]	@ (802b094 <_isatty_r+0x1c>)
 802b07c:	2300      	movs	r3, #0
 802b07e:	4604      	mov	r4, r0
 802b080:	4608      	mov	r0, r1
 802b082:	602b      	str	r3, [r5, #0]
 802b084:	f7d7 feee 	bl	8002e64 <_isatty>
 802b088:	1c43      	adds	r3, r0, #1
 802b08a:	d102      	bne.n	802b092 <_isatty_r+0x1a>
 802b08c:	682b      	ldr	r3, [r5, #0]
 802b08e:	b103      	cbz	r3, 802b092 <_isatty_r+0x1a>
 802b090:	6023      	str	r3, [r4, #0]
 802b092:	bd38      	pop	{r3, r4, r5, pc}
 802b094:	20014b00 	.word	0x20014b00

0802b098 <_malloc_usable_size_r>:
 802b098:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b09c:	1f18      	subs	r0, r3, #4
 802b09e:	2b00      	cmp	r3, #0
 802b0a0:	bfbc      	itt	lt
 802b0a2:	580b      	ldrlt	r3, [r1, r0]
 802b0a4:	18c0      	addlt	r0, r0, r3
 802b0a6:	4770      	bx	lr

0802b0a8 <_init>:
 802b0a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b0aa:	bf00      	nop
 802b0ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802b0ae:	bc08      	pop	{r3}
 802b0b0:	469e      	mov	lr, r3
 802b0b2:	4770      	bx	lr

0802b0b4 <_fini>:
 802b0b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b0b6:	bf00      	nop
 802b0b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802b0ba:	bc08      	pop	{r3}
 802b0bc:	469e      	mov	lr, r3
 802b0be:	4770      	bx	lr
