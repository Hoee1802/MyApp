
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00028d14  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002de4  08028ec4  08028ec4  00029ec4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002dbe  0802bca8  0802bca8  0002cca8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000038  0802ea68  0802ea68  0002fa68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000018e  0802eaa0  0802eaa0  0002faa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0001d080  0802ec30  0802ec30  0002fc30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0804bcb0  0804bcb0  0004d380  2**0
                  CONTENTS
  8 .ARM          00000008  0804bcb0  0804bcb0  0004ccb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0804bcb8  0804bcb8  0004d380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0804bcb8  0804bcb8  0004ccb8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0804bccc  0804bccc  0004cccc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  0804bcd4  0004d000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000180  0804be38  0004d180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000280  0804bf38  0004d280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          00014920  20000380  0804c038  0004d380  2**2
                  ALLOC
 16 ._user_heap_stack 00001400  20014ca0  0804c038  0004dca0  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  0004d380  2**0
                  CONTENTS, READONLY
 18 TouchGFX_Framebuffer 00070800  d0000000  d0000000  0004e000  2**2
                  ALLOC
 19 .debug_line   0007c24f  00000000  00000000  0004d3b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000057  00000000  00000000  000c95ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_info   001cb2c8  00000000  00000000  000c9656  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_abbrev 000266c3  00000000  00000000  0029491e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_aranges 00004300  00000000  00000000  002bafe8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    0011e0f5  00000000  00000000  002bf2e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_rnglists 0000629d  00000000  00000000  003dd3dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 00028682  00000000  00000000  003e367a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0003809e  00000000  00000000  0040bcfc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  00443d9a  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000b4a8  00000000  00000000  00443e5c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000380 	.word	0x20000380
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08028eac 	.word	0x08028eac

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000384 	.word	0x20000384
 80001ec:	08028eac 	.word	0x08028eac

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_ldivmod>:
 8000290:	b97b      	cbnz	r3, 80002b2 <__aeabi_ldivmod+0x22>
 8000292:	b972      	cbnz	r2, 80002b2 <__aeabi_ldivmod+0x22>
 8000294:	2900      	cmp	r1, #0
 8000296:	bfbe      	ittt	lt
 8000298:	2000      	movlt	r0, #0
 800029a:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 800029e:	e006      	blt.n	80002ae <__aeabi_ldivmod+0x1e>
 80002a0:	bf08      	it	eq
 80002a2:	2800      	cmpeq	r0, #0
 80002a4:	bf1c      	itt	ne
 80002a6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002aa:	f04f 30ff 	movne.w	r0, #4294967295
 80002ae:	f000 b9d3 	b.w	8000658 <__aeabi_idiv0>
 80002b2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002b6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ba:	2900      	cmp	r1, #0
 80002bc:	db09      	blt.n	80002d2 <__aeabi_ldivmod+0x42>
 80002be:	2b00      	cmp	r3, #0
 80002c0:	db1a      	blt.n	80002f8 <__aeabi_ldivmod+0x68>
 80002c2:	f000 f84d 	bl	8000360 <__udivmoddi4>
 80002c6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002ca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ce:	b004      	add	sp, #16
 80002d0:	4770      	bx	lr
 80002d2:	4240      	negs	r0, r0
 80002d4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002d8:	2b00      	cmp	r3, #0
 80002da:	db1b      	blt.n	8000314 <__aeabi_ldivmod+0x84>
 80002dc:	f000 f840 	bl	8000360 <__udivmoddi4>
 80002e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002e8:	b004      	add	sp, #16
 80002ea:	4240      	negs	r0, r0
 80002ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002f0:	4252      	negs	r2, r2
 80002f2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002f6:	4770      	bx	lr
 80002f8:	4252      	negs	r2, r2
 80002fa:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002fe:	f000 f82f 	bl	8000360 <__udivmoddi4>
 8000302:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000306:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800030a:	b004      	add	sp, #16
 800030c:	4240      	negs	r0, r0
 800030e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000312:	4770      	bx	lr
 8000314:	4252      	negs	r2, r2
 8000316:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800031a:	f000 f821 	bl	8000360 <__udivmoddi4>
 800031e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000322:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000326:	b004      	add	sp, #16
 8000328:	4252      	negs	r2, r2
 800032a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032e:	4770      	bx	lr

08000330 <__aeabi_uldivmod>:
 8000330:	b953      	cbnz	r3, 8000348 <__aeabi_uldivmod+0x18>
 8000332:	b94a      	cbnz	r2, 8000348 <__aeabi_uldivmod+0x18>
 8000334:	2900      	cmp	r1, #0
 8000336:	bf08      	it	eq
 8000338:	2800      	cmpeq	r0, #0
 800033a:	bf1c      	itt	ne
 800033c:	f04f 31ff 	movne.w	r1, #4294967295
 8000340:	f04f 30ff 	movne.w	r0, #4294967295
 8000344:	f000 b988 	b.w	8000658 <__aeabi_idiv0>
 8000348:	f1ad 0c08 	sub.w	ip, sp, #8
 800034c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000350:	f000 f806 	bl	8000360 <__udivmoddi4>
 8000354:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000358:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800035c:	b004      	add	sp, #16
 800035e:	4770      	bx	lr

08000360 <__udivmoddi4>:
 8000360:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000364:	9d08      	ldr	r5, [sp, #32]
 8000366:	468e      	mov	lr, r1
 8000368:	4604      	mov	r4, r0
 800036a:	4688      	mov	r8, r1
 800036c:	2b00      	cmp	r3, #0
 800036e:	d14a      	bne.n	8000406 <__udivmoddi4+0xa6>
 8000370:	428a      	cmp	r2, r1
 8000372:	4617      	mov	r7, r2
 8000374:	d962      	bls.n	800043c <__udivmoddi4+0xdc>
 8000376:	fab2 f682 	clz	r6, r2
 800037a:	b14e      	cbz	r6, 8000390 <__udivmoddi4+0x30>
 800037c:	f1c6 0320 	rsb	r3, r6, #32
 8000380:	fa01 f806 	lsl.w	r8, r1, r6
 8000384:	fa20 f303 	lsr.w	r3, r0, r3
 8000388:	40b7      	lsls	r7, r6
 800038a:	ea43 0808 	orr.w	r8, r3, r8
 800038e:	40b4      	lsls	r4, r6
 8000390:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000394:	fa1f fc87 	uxth.w	ip, r7
 8000398:	fbb8 f1fe 	udiv	r1, r8, lr
 800039c:	0c23      	lsrs	r3, r4, #16
 800039e:	fb0e 8811 	mls	r8, lr, r1, r8
 80003a2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003a6:	fb01 f20c 	mul.w	r2, r1, ip
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d909      	bls.n	80003c2 <__udivmoddi4+0x62>
 80003ae:	18fb      	adds	r3, r7, r3
 80003b0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003b4:	f080 80ea 	bcs.w	800058c <__udivmoddi4+0x22c>
 80003b8:	429a      	cmp	r2, r3
 80003ba:	f240 80e7 	bls.w	800058c <__udivmoddi4+0x22c>
 80003be:	3902      	subs	r1, #2
 80003c0:	443b      	add	r3, r7
 80003c2:	1a9a      	subs	r2, r3, r2
 80003c4:	b2a3      	uxth	r3, r4
 80003c6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ca:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003d2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003d6:	459c      	cmp	ip, r3
 80003d8:	d909      	bls.n	80003ee <__udivmoddi4+0x8e>
 80003da:	18fb      	adds	r3, r7, r3
 80003dc:	f100 32ff 	add.w	r2, r0, #4294967295
 80003e0:	f080 80d6 	bcs.w	8000590 <__udivmoddi4+0x230>
 80003e4:	459c      	cmp	ip, r3
 80003e6:	f240 80d3 	bls.w	8000590 <__udivmoddi4+0x230>
 80003ea:	443b      	add	r3, r7
 80003ec:	3802      	subs	r0, #2
 80003ee:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80003f2:	eba3 030c 	sub.w	r3, r3, ip
 80003f6:	2100      	movs	r1, #0
 80003f8:	b11d      	cbz	r5, 8000402 <__udivmoddi4+0xa2>
 80003fa:	40f3      	lsrs	r3, r6
 80003fc:	2200      	movs	r2, #0
 80003fe:	e9c5 3200 	strd	r3, r2, [r5]
 8000402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000406:	428b      	cmp	r3, r1
 8000408:	d905      	bls.n	8000416 <__udivmoddi4+0xb6>
 800040a:	b10d      	cbz	r5, 8000410 <__udivmoddi4+0xb0>
 800040c:	e9c5 0100 	strd	r0, r1, [r5]
 8000410:	2100      	movs	r1, #0
 8000412:	4608      	mov	r0, r1
 8000414:	e7f5      	b.n	8000402 <__udivmoddi4+0xa2>
 8000416:	fab3 f183 	clz	r1, r3
 800041a:	2900      	cmp	r1, #0
 800041c:	d146      	bne.n	80004ac <__udivmoddi4+0x14c>
 800041e:	4573      	cmp	r3, lr
 8000420:	d302      	bcc.n	8000428 <__udivmoddi4+0xc8>
 8000422:	4282      	cmp	r2, r0
 8000424:	f200 8105 	bhi.w	8000632 <__udivmoddi4+0x2d2>
 8000428:	1a84      	subs	r4, r0, r2
 800042a:	eb6e 0203 	sbc.w	r2, lr, r3
 800042e:	2001      	movs	r0, #1
 8000430:	4690      	mov	r8, r2
 8000432:	2d00      	cmp	r5, #0
 8000434:	d0e5      	beq.n	8000402 <__udivmoddi4+0xa2>
 8000436:	e9c5 4800 	strd	r4, r8, [r5]
 800043a:	e7e2      	b.n	8000402 <__udivmoddi4+0xa2>
 800043c:	2a00      	cmp	r2, #0
 800043e:	f000 8090 	beq.w	8000562 <__udivmoddi4+0x202>
 8000442:	fab2 f682 	clz	r6, r2
 8000446:	2e00      	cmp	r6, #0
 8000448:	f040 80a4 	bne.w	8000594 <__udivmoddi4+0x234>
 800044c:	1a8a      	subs	r2, r1, r2
 800044e:	0c03      	lsrs	r3, r0, #16
 8000450:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000454:	b280      	uxth	r0, r0
 8000456:	b2bc      	uxth	r4, r7
 8000458:	2101      	movs	r1, #1
 800045a:	fbb2 fcfe 	udiv	ip, r2, lr
 800045e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000462:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000466:	fb04 f20c 	mul.w	r2, r4, ip
 800046a:	429a      	cmp	r2, r3
 800046c:	d907      	bls.n	800047e <__udivmoddi4+0x11e>
 800046e:	18fb      	adds	r3, r7, r3
 8000470:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000474:	d202      	bcs.n	800047c <__udivmoddi4+0x11c>
 8000476:	429a      	cmp	r2, r3
 8000478:	f200 80e0 	bhi.w	800063c <__udivmoddi4+0x2dc>
 800047c:	46c4      	mov	ip, r8
 800047e:	1a9b      	subs	r3, r3, r2
 8000480:	fbb3 f2fe 	udiv	r2, r3, lr
 8000484:	fb0e 3312 	mls	r3, lr, r2, r3
 8000488:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800048c:	fb02 f404 	mul.w	r4, r2, r4
 8000490:	429c      	cmp	r4, r3
 8000492:	d907      	bls.n	80004a4 <__udivmoddi4+0x144>
 8000494:	18fb      	adds	r3, r7, r3
 8000496:	f102 30ff 	add.w	r0, r2, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x142>
 800049c:	429c      	cmp	r4, r3
 800049e:	f200 80ca 	bhi.w	8000636 <__udivmoddi4+0x2d6>
 80004a2:	4602      	mov	r2, r0
 80004a4:	1b1b      	subs	r3, r3, r4
 80004a6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004aa:	e7a5      	b.n	80003f8 <__udivmoddi4+0x98>
 80004ac:	f1c1 0620 	rsb	r6, r1, #32
 80004b0:	408b      	lsls	r3, r1
 80004b2:	fa22 f706 	lsr.w	r7, r2, r6
 80004b6:	431f      	orrs	r7, r3
 80004b8:	fa0e f401 	lsl.w	r4, lr, r1
 80004bc:	fa20 f306 	lsr.w	r3, r0, r6
 80004c0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004c4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004c8:	4323      	orrs	r3, r4
 80004ca:	fa00 f801 	lsl.w	r8, r0, r1
 80004ce:	fa1f fc87 	uxth.w	ip, r7
 80004d2:	fbbe f0f9 	udiv	r0, lr, r9
 80004d6:	0c1c      	lsrs	r4, r3, #16
 80004d8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004dc:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004e0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004e4:	45a6      	cmp	lr, r4
 80004e6:	fa02 f201 	lsl.w	r2, r2, r1
 80004ea:	d909      	bls.n	8000500 <__udivmoddi4+0x1a0>
 80004ec:	193c      	adds	r4, r7, r4
 80004ee:	f100 3aff 	add.w	sl, r0, #4294967295
 80004f2:	f080 809c 	bcs.w	800062e <__udivmoddi4+0x2ce>
 80004f6:	45a6      	cmp	lr, r4
 80004f8:	f240 8099 	bls.w	800062e <__udivmoddi4+0x2ce>
 80004fc:	3802      	subs	r0, #2
 80004fe:	443c      	add	r4, r7
 8000500:	eba4 040e 	sub.w	r4, r4, lr
 8000504:	fa1f fe83 	uxth.w	lr, r3
 8000508:	fbb4 f3f9 	udiv	r3, r4, r9
 800050c:	fb09 4413 	mls	r4, r9, r3, r4
 8000510:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000514:	fb03 fc0c 	mul.w	ip, r3, ip
 8000518:	45a4      	cmp	ip, r4
 800051a:	d908      	bls.n	800052e <__udivmoddi4+0x1ce>
 800051c:	193c      	adds	r4, r7, r4
 800051e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000522:	f080 8082 	bcs.w	800062a <__udivmoddi4+0x2ca>
 8000526:	45a4      	cmp	ip, r4
 8000528:	d97f      	bls.n	800062a <__udivmoddi4+0x2ca>
 800052a:	3b02      	subs	r3, #2
 800052c:	443c      	add	r4, r7
 800052e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000532:	eba4 040c 	sub.w	r4, r4, ip
 8000536:	fba0 ec02 	umull	lr, ip, r0, r2
 800053a:	4564      	cmp	r4, ip
 800053c:	4673      	mov	r3, lr
 800053e:	46e1      	mov	r9, ip
 8000540:	d362      	bcc.n	8000608 <__udivmoddi4+0x2a8>
 8000542:	d05f      	beq.n	8000604 <__udivmoddi4+0x2a4>
 8000544:	b15d      	cbz	r5, 800055e <__udivmoddi4+0x1fe>
 8000546:	ebb8 0203 	subs.w	r2, r8, r3
 800054a:	eb64 0409 	sbc.w	r4, r4, r9
 800054e:	fa04 f606 	lsl.w	r6, r4, r6
 8000552:	fa22 f301 	lsr.w	r3, r2, r1
 8000556:	431e      	orrs	r6, r3
 8000558:	40cc      	lsrs	r4, r1
 800055a:	e9c5 6400 	strd	r6, r4, [r5]
 800055e:	2100      	movs	r1, #0
 8000560:	e74f      	b.n	8000402 <__udivmoddi4+0xa2>
 8000562:	fbb1 fcf2 	udiv	ip, r1, r2
 8000566:	0c01      	lsrs	r1, r0, #16
 8000568:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800056c:	b280      	uxth	r0, r0
 800056e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000572:	463b      	mov	r3, r7
 8000574:	4638      	mov	r0, r7
 8000576:	463c      	mov	r4, r7
 8000578:	46b8      	mov	r8, r7
 800057a:	46be      	mov	lr, r7
 800057c:	2620      	movs	r6, #32
 800057e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000582:	eba2 0208 	sub.w	r2, r2, r8
 8000586:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800058a:	e766      	b.n	800045a <__udivmoddi4+0xfa>
 800058c:	4601      	mov	r1, r0
 800058e:	e718      	b.n	80003c2 <__udivmoddi4+0x62>
 8000590:	4610      	mov	r0, r2
 8000592:	e72c      	b.n	80003ee <__udivmoddi4+0x8e>
 8000594:	f1c6 0220 	rsb	r2, r6, #32
 8000598:	fa2e f302 	lsr.w	r3, lr, r2
 800059c:	40b7      	lsls	r7, r6
 800059e:	40b1      	lsls	r1, r6
 80005a0:	fa20 f202 	lsr.w	r2, r0, r2
 80005a4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005a8:	430a      	orrs	r2, r1
 80005aa:	fbb3 f8fe 	udiv	r8, r3, lr
 80005ae:	b2bc      	uxth	r4, r7
 80005b0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ba:	fb08 f904 	mul.w	r9, r8, r4
 80005be:	40b0      	lsls	r0, r6
 80005c0:	4589      	cmp	r9, r1
 80005c2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005c6:	b280      	uxth	r0, r0
 80005c8:	d93e      	bls.n	8000648 <__udivmoddi4+0x2e8>
 80005ca:	1879      	adds	r1, r7, r1
 80005cc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005d0:	d201      	bcs.n	80005d6 <__udivmoddi4+0x276>
 80005d2:	4589      	cmp	r9, r1
 80005d4:	d81f      	bhi.n	8000616 <__udivmoddi4+0x2b6>
 80005d6:	eba1 0109 	sub.w	r1, r1, r9
 80005da:	fbb1 f9fe 	udiv	r9, r1, lr
 80005de:	fb09 f804 	mul.w	r8, r9, r4
 80005e2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005e6:	b292      	uxth	r2, r2
 80005e8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005ec:	4542      	cmp	r2, r8
 80005ee:	d229      	bcs.n	8000644 <__udivmoddi4+0x2e4>
 80005f0:	18ba      	adds	r2, r7, r2
 80005f2:	f109 31ff 	add.w	r1, r9, #4294967295
 80005f6:	d2c4      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005f8:	4542      	cmp	r2, r8
 80005fa:	d2c2      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005fc:	f1a9 0102 	sub.w	r1, r9, #2
 8000600:	443a      	add	r2, r7
 8000602:	e7be      	b.n	8000582 <__udivmoddi4+0x222>
 8000604:	45f0      	cmp	r8, lr
 8000606:	d29d      	bcs.n	8000544 <__udivmoddi4+0x1e4>
 8000608:	ebbe 0302 	subs.w	r3, lr, r2
 800060c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000610:	3801      	subs	r0, #1
 8000612:	46e1      	mov	r9, ip
 8000614:	e796      	b.n	8000544 <__udivmoddi4+0x1e4>
 8000616:	eba7 0909 	sub.w	r9, r7, r9
 800061a:	4449      	add	r1, r9
 800061c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000620:	fbb1 f9fe 	udiv	r9, r1, lr
 8000624:	fb09 f804 	mul.w	r8, r9, r4
 8000628:	e7db      	b.n	80005e2 <__udivmoddi4+0x282>
 800062a:	4673      	mov	r3, lr
 800062c:	e77f      	b.n	800052e <__udivmoddi4+0x1ce>
 800062e:	4650      	mov	r0, sl
 8000630:	e766      	b.n	8000500 <__udivmoddi4+0x1a0>
 8000632:	4608      	mov	r0, r1
 8000634:	e6fd      	b.n	8000432 <__udivmoddi4+0xd2>
 8000636:	443b      	add	r3, r7
 8000638:	3a02      	subs	r2, #2
 800063a:	e733      	b.n	80004a4 <__udivmoddi4+0x144>
 800063c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000640:	443b      	add	r3, r7
 8000642:	e71c      	b.n	800047e <__udivmoddi4+0x11e>
 8000644:	4649      	mov	r1, r9
 8000646:	e79c      	b.n	8000582 <__udivmoddi4+0x222>
 8000648:	eba1 0109 	sub.w	r1, r1, r9
 800064c:	46c4      	mov	ip, r8
 800064e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000652:	fb09 f804 	mul.w	r8, r9, r4
 8000656:	e7c4      	b.n	80005e2 <__udivmoddi4+0x282>

08000658 <__aeabi_idiv0>:
 8000658:	4770      	bx	lr
 800065a:	bf00      	nop

0800065c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800065c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000694 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000660:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000662:	e003      	b.n	800066c <LoopCopyDataInit>

08000664 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000664:	4b0c      	ldr	r3, [pc, #48]	@ (8000698 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000666:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000668:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800066a:	3104      	adds	r1, #4

0800066c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800066c:	480b      	ldr	r0, [pc, #44]	@ (800069c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800066e:	4b0c      	ldr	r3, [pc, #48]	@ (80006a0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000670:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000674:	d3f6      	bcc.n	8000664 <CopyDataInit>
  ldr  r2, =_sbss
 8000676:	4a0b      	ldr	r2, [pc, #44]	@ (80006a4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000678:	e002      	b.n	8000680 <LoopFillZerobss>

0800067a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800067a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800067c:	f842 3b04 	str.w	r3, [r2], #4

08000680 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000680:	4b09      	ldr	r3, [pc, #36]	@ (80006a8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000684:	d3f9      	bcc.n	800067a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000686:	f008 fb19 	bl	8008cbc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800068a:	f027 fea1 	bl	80283d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800068e:	f001 f93f 	bl	8001910 <main>
  bx  lr    
 8000692:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000694:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000698:	0804bcd4 	.word	0x0804bcd4
  ldr  r0, =_sdata
 800069c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006a0:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80006a4:	20000380 	.word	0x20000380
  ldr  r3, = _ebss
 80006a8:	20014ca0 	.word	0x20014ca0

080006ac <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006ac:	e7fe      	b.n	80006ac <ADC_IRQHandler>

080006ae <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006ae:	4770      	bx	lr

080006b0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006b0:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80006b2:	f000 fda7 	bl	8001204 <touchgfx_components_init>
    touchgfx_init();
}
 80006b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80006ba:	f000 bd29 	b.w	8001110 <touchgfx_init>

080006be <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80006be:	f000 bda3 	b.w	8001208 <touchgfx_taskEntry>

080006c2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006c2:	4770      	bx	lr

080006c4 <_ZN20STM32TouchControllerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f026 fc83 	bl	8026fd4 <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}
	...

080006d4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006d4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006d6:	4b0c      	ldr	r3, [pc, #48]	@ (8000708 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d8:	4c0c      	ldr	r4, [pc, #48]	@ (800070c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006da:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006dc:	4b0c      	ldr	r3, [pc, #48]	@ (8000710 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006de:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80006e0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006e2:	6863      	ldr	r3, [r4, #4]
 80006e4:	4798      	blx	r3
 80006e6:	f640 0311 	movw	r3, #2065	@ 0x811
 80006ea:	4298      	cmp	r0, r3
 80006ec:	d10a      	bne.n	8000704 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006ee:	4d09      	ldr	r5, [pc, #36]	@ (8000714 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006f0:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006f2:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006f4:	2082      	movs	r0, #130	@ 0x82
 80006f6:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006f8:	682b      	ldr	r3, [r5, #0]
 80006fa:	2082      	movs	r0, #130	@ 0x82
 80006fc:	68db      	ldr	r3, [r3, #12]
 80006fe:	4798      	blx	r3
 8000700:	2000      	movs	r0, #0
    }

    return ret;
}
 8000702:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000704:	2001      	movs	r0, #1
 8000706:	e7fc      	b.n	8000702 <_Z11BSP_TS_Inittt+0x2e>
 8000708:	200003a6 	.word	0x200003a6
 800070c:	2000004c 	.word	0x2000004c
 8000710:	200003a4 	.word	0x200003a4
 8000714:	200003a8 	.word	0x200003a8

08000718 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000718:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800071c:	20f0      	movs	r0, #240	@ 0xf0
 800071e:	f7ff bfd9 	b.w	80006d4 <_Z11BSP_TS_Inittt>
	...

08000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000724:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000726:	4d2f      	ldr	r5, [pc, #188]	@ (80007e4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 8000728:	682b      	ldr	r3, [r5, #0]
{
 800072a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800072c:	691b      	ldr	r3, [r3, #16]
 800072e:	2082      	movs	r0, #130	@ 0x82
 8000730:	4798      	blx	r3
 8000732:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000734:	2800      	cmp	r0, #0
 8000736:	d044      	beq.n	80007c2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000738:	682b      	ldr	r3, [r5, #0]
 800073a:	f10d 0206 	add.w	r2, sp, #6
 800073e:	695b      	ldr	r3, [r3, #20]
 8000740:	a901      	add	r1, sp, #4
 8000742:	2082      	movs	r0, #130	@ 0x82
 8000744:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000746:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800074a:	f5a2 72b4 	sub.w	r2, r2, #360	@ 0x168
 800074e:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000750:	2a0a      	cmp	r2, #10
 8000752:	d938      	bls.n	80007c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000754:	230b      	movs	r3, #11
 8000756:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800075a:	4b23      	ldr	r3, [pc, #140]	@ (80007e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
 800075c:	881b      	ldrh	r3, [r3, #0]
 800075e:	429a      	cmp	r2, r3
 8000760:	d901      	bls.n	8000766 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x42>
        {
            yr = TsYBoundary - 1;
 8000762:	3b01      	subs	r3, #1
 8000764:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000766:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800076a:	4820      	ldr	r0, [pc, #128]	@ (80007ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
 800076c:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000770:	428b      	cmp	r3, r1
 8000772:	d82a      	bhi.n	80007ca <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 8000774:	f5c3 6371 	rsb	r3, r3, #3856	@ 0xf10
 8000778:	330e      	adds	r3, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 800077a:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 800077c:	b29b      	uxth	r3, r3
        xr = x / 15;
 800077e:	250f      	movs	r5, #15
 8000780:	fbb3 f3f5 	udiv	r3, r3, r5
        else if (xr > TsXBoundary)
 8000784:	4d1a      	ldr	r5, [pc, #104]	@ (80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>)
 8000786:	882d      	ldrh	r5, [r5, #0]
 8000788:	42ab      	cmp	r3, r5
            xr = TsXBoundary - 1;
 800078a:	bf84      	itt	hi
 800078c:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8000790:	b2ab      	uxthhi	r3, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000792:	428b      	cmp	r3, r1
 8000794:	461d      	mov	r5, r3
 8000796:	b28e      	uxth	r6, r1
 8000798:	d920      	bls.n	80007dc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>
 800079a:	1b9b      	subs	r3, r3, r6
 800079c:	b299      	uxth	r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 800079e:	4e15      	ldr	r6, [pc, #84]	@ (80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 80007a0:	6837      	ldr	r7, [r6, #0]
 80007a2:	b2bb      	uxth	r3, r7
 80007a4:	42ba      	cmp	r2, r7
 80007a6:	bf8c      	ite	hi
 80007a8:	1ad3      	subhi	r3, r2, r3
 80007aa:	1a9b      	subls	r3, r3, r2
 80007ac:	b29b      	uxth	r3, r3

        if (xDiff + yDiff > 5)
 80007ae:	4419      	add	r1, r3
 80007b0:	2905      	cmp	r1, #5
        {
            _x = x;
 80007b2:	bfc8      	it	gt
 80007b4:	6005      	strgt	r5, [r0, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80007b6:	6803      	ldr	r3, [r0, #0]
            _y = y;
 80007b8:	bfc8      	it	gt
 80007ba:	6032      	strgt	r2, [r6, #0]
        TsState->X = _x;
 80007bc:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007be:	6833      	ldr	r3, [r6, #0]
 80007c0:	80a3      	strh	r3, [r4, #4]
    }
}
 80007c2:	b003      	add	sp, #12
 80007c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80007c6:	2200      	movs	r2, #0
 80007c8:	e7cd      	b.n	8000766 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x42>
            x = 3800 - x;
 80007ca:	f5c3 636d 	rsb	r3, r3, #3792	@ 0xed0
 80007ce:	3308      	adds	r3, #8
 80007d0:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80007d2:	2b0e      	cmp	r3, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007d4:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 80007d6:	d8d2      	bhi.n	800077e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x5a>
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007d8:	2500      	movs	r5, #0
            xr = 0;
 80007da:	462b      	mov	r3, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007dc:	1ac9      	subs	r1, r1, r3
 80007de:	b289      	uxth	r1, r1
 80007e0:	e7dd      	b.n	800079e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
 80007e2:	bf00      	nop
 80007e4:	200003a8 	.word	0x200003a8
 80007e8:	200003a4 	.word	0x200003a4
 80007ec:	200003a0 	.word	0x200003a0
 80007f0:	200003a6 	.word	0x200003a6
 80007f4:	2000039c 	.word	0x2000039c

080007f8 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80007f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80007fa:	4668      	mov	r0, sp
{
 80007fc:	460d      	mov	r5, r1
 80007fe:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000800:	f7ff ff90 	bl	8000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000804:	f8bd 0000 	ldrh.w	r0, [sp]
 8000808:	b140      	cbz	r0, 800081c <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
        x = state.X;
 800080a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800080e:	602b      	str	r3, [r5, #0]
        y = 320-state.Y;
 8000810:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000814:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8000818:	6023      	str	r3, [r4, #0]
        return true;
 800081a:	2001      	movs	r0, #1
}
 800081c:	b003      	add	sp, #12
 800081e:	bd30      	pop	{r4, r5, pc}

08000820 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000820:	2803      	cmp	r0, #3
 8000822:	d821      	bhi.n	8000868 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000824:	e8df f000 	tbb	[pc, r0]
 8000828:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800082c:	4b0f      	ldr	r3, [pc, #60]	@ (800086c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800082e:	681a      	ldr	r2, [r3, #0]
 8000830:	fab2 f282 	clz	r2, r2
 8000834:	0952      	lsrs	r2, r2, #5
 8000836:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000838:	480d      	ldr	r0, [pc, #52]	@ (8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800083a:	f008 bf07 	b.w	800964c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800083e:	4b0b      	ldr	r3, [pc, #44]	@ (800086c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000840:	685a      	ldr	r2, [r3, #4]
 8000842:	fab2 f282 	clz	r2, r2
 8000846:	0952      	lsrs	r2, r2, #5
 8000848:	2108      	movs	r1, #8
 800084a:	e7f5      	b.n	8000838 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 800084c:	4b07      	ldr	r3, [pc, #28]	@ (800086c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800084e:	689a      	ldr	r2, [r3, #8]
 8000850:	fab2 f282 	clz	r2, r2
 8000854:	0952      	lsrs	r2, r2, #5
 8000856:	2110      	movs	r1, #16
 8000858:	e7ee      	b.n	8000838 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800085a:	4b04      	ldr	r3, [pc, #16]	@ (800086c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800085c:	68da      	ldr	r2, [r3, #12]
 800085e:	fab2 f282 	clz	r2, r2
 8000862:	0952      	lsrs	r2, r2, #5
 8000864:	2120      	movs	r1, #32
 8000866:	e7e7      	b.n	8000838 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000868:	4770      	bx	lr
 800086a:	bf00      	nop
 800086c:	200003ac 	.word	0x200003ac
 8000870:	40021000 	.word	0x40021000

08000874 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000874:	2803      	cmp	r0, #3
 8000876:	d821      	bhi.n	80008bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8000878:	e8df f000 	tbb	[pc, r0]
 800087c:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000880:	4b0f      	ldr	r3, [pc, #60]	@ (80008c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000882:	681a      	ldr	r2, [r3, #0]
 8000884:	3a00      	subs	r2, #0
 8000886:	bf18      	it	ne
 8000888:	2201      	movne	r2, #1
 800088a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 800088c:	480d      	ldr	r0, [pc, #52]	@ (80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800088e:	f008 bedd 	b.w	800964c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000892:	4b0b      	ldr	r3, [pc, #44]	@ (80008c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000894:	685a      	ldr	r2, [r3, #4]
 8000896:	3a00      	subs	r2, #0
 8000898:	bf18      	it	ne
 800089a:	2201      	movne	r2, #1
 800089c:	2108      	movs	r1, #8
 800089e:	e7f5      	b.n	800088c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80008a0:	4b07      	ldr	r3, [pc, #28]	@ (80008c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008a2:	689a      	ldr	r2, [r3, #8]
 80008a4:	3a00      	subs	r2, #0
 80008a6:	bf18      	it	ne
 80008a8:	2201      	movne	r2, #1
 80008aa:	2110      	movs	r1, #16
 80008ac:	e7ee      	b.n	800088c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008ae:	4b04      	ldr	r3, [pc, #16]	@ (80008c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008b0:	68da      	ldr	r2, [r3, #12]
 80008b2:	3a00      	subs	r2, #0
 80008b4:	bf18      	it	ne
 80008b6:	2201      	movne	r2, #1
 80008b8:	2120      	movs	r1, #32
 80008ba:	e7e7      	b.n	800088c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008bc:	4770      	bx	lr
 80008be:	bf00      	nop
 80008c0:	200003ac 	.word	0x200003ac
 80008c4:	40021000 	.word	0x40021000

080008c8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80008c8:	2803      	cmp	r0, #3
 80008ca:	d80d      	bhi.n	80008e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 80008cc:	e8df f000 	tbb	[pc, r0]
 80008d0:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008d4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80008d6:	4805      	ldr	r0, [pc, #20]	@ (80008ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 80008d8:	f008 bebd 	b.w	8009656 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80008dc:	2108      	movs	r1, #8
 80008de:	e7fa      	b.n	80008d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008e0:	2110      	movs	r1, #16
 80008e2:	e7f8      	b.n	80008d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80008e4:	2120      	movs	r1, #32
 80008e6:	e7f6      	b.n	80008d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 80008e8:	4770      	bx	lr
 80008ea:	bf00      	nop
 80008ec:	40021000 	.word	0x40021000

080008f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80008f0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80008f2:	2803      	cmp	r0, #3
 80008f4:	d811      	bhi.n	800091a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 80008f6:	e8df f000 	tbb	[pc, r0]
 80008fa:	0a02      	.short	0x0a02
 80008fc:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008fe:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000900:	4807      	ldr	r0, [pc, #28]	@ (8000920 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000902:	f008 fe9d 	bl	8009640 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000906:	1e43      	subs	r3, r0, #1
 8000908:	4258      	negs	r0, r3
 800090a:	4158      	adcs	r0, r3
 800090c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800090e:	2108      	movs	r1, #8
 8000910:	e7f6      	b.n	8000900 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000912:	2110      	movs	r1, #16
 8000914:	e7f4      	b.n	8000900 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000916:	2120      	movs	r1, #32
 8000918:	e7f2      	b.n	8000900 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 800091a:	2000      	movs	r0, #0
 800091c:	e7f3      	b.n	8000906 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800091e:	bf00      	nop
 8000920:	40021000 	.word	0x40021000

08000924 <_ZN8touchgfx4GPIO4initEv>:
{
 8000924:	b570      	push	{r4, r5, r6, lr}
 8000926:	4d08      	ldr	r5, [pc, #32]	@ (8000948 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000928:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800092a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800092c:	b2e0      	uxtb	r0, r4
 800092e:	f7ff ffdf 	bl	80008f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000932:	b118      	cbz	r0, 800093c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000934:	682b      	ldr	r3, [r5, #0]
 8000936:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000938:	bf18      	it	ne
 800093a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800093c:	3401      	adds	r4, #1
 800093e:	2c05      	cmp	r4, #5
 8000940:	f105 0504 	add.w	r5, r5, #4
 8000944:	d1f2      	bne.n	800092c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000946:	bd70      	pop	{r4, r5, r6, pc}
 8000948:	200003ac 	.word	0x200003ac

0800094c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800094c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800094e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8000952:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8000956:	4770      	bx	lr

08000958 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000958:	2000      	movs	r0, #0
 800095a:	4770      	bx	lr

0800095c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800095c:	4b03      	ldr	r3, [pc, #12]	@ (800096c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800095e:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000960:	3900      	subs	r1, #0
 8000962:	bf18      	it	ne
 8000964:	2101      	movne	r1, #1
 8000966:	7019      	strb	r1, [r3, #0]
    }
 8000968:	4770      	bx	lr
 800096a:	bf00      	nop
 800096c:	20013f5f 	.word	0x20013f5f

08000970 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000970:	2000      	movs	r0, #0
 8000972:	4770      	bx	lr

08000974 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000974:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8000976:	b10b      	cbz	r3, 800097c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000978:	4608      	mov	r0, r1
 800097a:	4718      	bx	r3
        }
    }
 800097c:	4770      	bx	lr

0800097e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800097e:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8000982:	4770      	bx	lr

08000984 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000984:	6840      	ldr	r0, [r0, #4]
 8000986:	6803      	ldr	r3, [r0, #0]
 8000988:	699b      	ldr	r3, [r3, #24]
 800098a:	4718      	bx	r3

0800098c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 800098c:	4770      	bx	lr

0800098e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800098e:	4770      	bx	lr

08000990 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000990:	4770      	bx	lr
	...

08000994 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000994:	b510      	push	{r4, lr}
 8000996:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8000998:	f000 fd44 	bl	8001424 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 800099c:	6823      	ldr	r3, [r4, #0]
 800099e:	4903      	ldr	r1, [pc, #12]	@ (80009ac <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80009a0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80009a4:	4620      	mov	r0, r4
}
 80009a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80009aa:	4718      	bx	r3
 80009ac:	d0000000 	.word	0xd0000000

080009b0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80009b0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80009b2:	6803      	ldr	r3, [r0, #0]
{
 80009b4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80009b6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80009ba:	4798      	blx	r3
    enableInterrupts();
 80009bc:	6823      	ldr	r3, [r4, #0]
 80009be:	4620      	mov	r0, r4
 80009c0:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80009c2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80009c4:	f000 f8ec 	bl	8000ba0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80009c8:	6823      	ldr	r3, [r4, #0]
 80009ca:	4620      	mov	r0, r4
 80009cc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80009ce:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80009d0:	2029      	movs	r0, #41	@ 0x29
 80009d2:	f001 fa17 	bl	8001e04 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80009d6:	f000 f8e3 	bl	8000ba0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80009da:	6823      	ldr	r3, [r4, #0]
 80009dc:	4620      	mov	r0, r4
 80009de:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80009e0:	4798      	blx	r3
    for (;;)
 80009e2:	e7f8      	b.n	80009d6 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080009e4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80009e4:	b510      	push	{r4, lr}
 80009e6:	4604      	mov	r4, r0
        swapFrameBuffers();
 80009e8:	f00e f934 	bl	800ec54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80009ec:	6823      	ldr	r3, [r4, #0]
 80009ee:	4620      	mov	r0, r4
 80009f0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 80009f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80009f8:	4718      	bx	r3

080009fa <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80009fa:	f000 bcf7 	b.w	80013ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080009fe <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80009fe:	f000 bcfb 	b.w	80013f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000a02 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000a02:	f000 bd2d 	b.w	8001460 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000a06 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000a06:	f000 bccd 	b.w	80013a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000a0a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000a0a:	f000 bd3d 	b.w	8001488 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000a0e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000a0e:	f000 bd45 	b.w	800149c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000a12 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a12:	f000 bcd1 	b.w	80013b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a16 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000a16:	f00d bb89 	b.w	800e12c <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000a1a <_ZN11TouchGFXHALD0Ev>:
 8000a1a:	b510      	push	{r4, lr}
 8000a1c:	217c      	movs	r1, #124	@ 0x7c
 8000a1e:	4604      	mov	r4, r0
 8000a20:	f026 fad8 	bl	8026fd4 <_ZdlPvj>
 8000a24:	4620      	mov	r0, r4
 8000a26:	bd10      	pop	{r4, pc}

08000a28 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000a28:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000a2a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000a2e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000a32:	4b0c      	ldr	r3, [pc, #48]	@ (8000a64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000a34:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000a36:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000a38:	d009      	beq.n	8000a4e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000a3a:	b93a      	cbnz	r2, 8000a4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a3c:	4a0a      	ldr	r2, [pc, #40]	@ (8000a68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a3e:	490b      	ldr	r1, [pc, #44]	@ (8000a6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a40:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a42:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000a44:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a46:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a48:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a4a:	701a      	strb	r2, [r3, #0]
    }
 8000a4c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a4e:	2a00      	cmp	r2, #0
 8000a50:	d0fc      	beq.n	8000a4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a52:	4a05      	ldr	r2, [pc, #20]	@ (8000a68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a54:	4905      	ldr	r1, [pc, #20]	@ (8000a6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a56:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a58:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a5a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a5c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a5e:	2200      	movs	r2, #0
 8000a60:	e7f3      	b.n	8000a4a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a62:	bf00      	nop
 8000a64:	20013f58 	.word	0x20013f58
 8000a68:	20013f54 	.word	0x20013f54
 8000a6c:	20013f56 	.word	0x20013f56

08000a70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000a70:	b570      	push	{r4, r5, r6, lr}
 8000a72:	460d      	mov	r5, r1
 8000a74:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a76:	b935      	cbnz	r5, 8000a86 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000a78:	4b09      	ldr	r3, [pc, #36]	@ (8000aa0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000a7a:	4a0a      	ldr	r2, [pc, #40]	@ (8000aa4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000a7c:	480a      	ldr	r0, [pc, #40]	@ (8000aa8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000a7e:	f240 21d2 	movw	r1, #722	@ 0x2d2
 8000a82:	f027 f9e3 	bl	8027e4c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a86:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a8a:	4b08      	ldr	r3, [pc, #32]	@ (8000aac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000a8c:	3a00      	subs	r2, #0
 8000a8e:	bf18      	it	ne
 8000a90:	2201      	movne	r2, #1
 8000a92:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a94:	6803      	ldr	r3, [r0, #0]
    }
 8000a96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a9a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000a9e:	4718      	bx	r3
 8000aa0:	08028f1c 	.word	0x08028f1c
 8000aa4:	08028f54 	.word	0x08028f54
 8000aa8:	08028fa2 	.word	0x08028fa2
 8000aac:	20013f5e 	.word	0x20013f5e

08000ab0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000ab0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000ab2:	4b09      	ldr	r3, [pc, #36]	@ (8000ad8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000ab4:	881b      	ldrh	r3, [r3, #0]
 8000ab6:	428b      	cmp	r3, r1
 8000ab8:	d803      	bhi.n	8000ac2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000aba:	4b08      	ldr	r3, [pc, #32]	@ (8000adc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000abc:	881b      	ldrh	r3, [r3, #0]
 8000abe:	4293      	cmp	r3, r2
 8000ac0:	d905      	bls.n	8000ace <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000ac2:	4b07      	ldr	r3, [pc, #28]	@ (8000ae0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000ac4:	4a07      	ldr	r2, [pc, #28]	@ (8000ae4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000ac6:	4808      	ldr	r0, [pc, #32]	@ (8000ae8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000ac8:	219e      	movs	r1, #158	@ 0x9e
 8000aca:	f027 f9bf 	bl	8027e4c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000ace:	4b07      	ldr	r3, [pc, #28]	@ (8000aec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000ad0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000ad2:	4b07      	ldr	r3, [pc, #28]	@ (8000af0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000ad4:	801a      	strh	r2, [r3, #0]
    }
 8000ad6:	bd08      	pop	{r3, pc}
 8000ad8:	20013f54 	.word	0x20013f54
 8000adc:	20013f56 	.word	0x20013f56
 8000ae0:	08028fe7 	.word	0x08028fe7
 8000ae4:	0802904a 	.word	0x0802904a
 8000ae8:	08028fa2 	.word	0x08028fa2
 8000aec:	20013f5a 	.word	0x20013f5a
 8000af0:	20013f5c 	.word	0x20013f5c

08000af4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000af4:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000af6:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000afa:	b118      	cbz	r0, 8000b04 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000afc:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000afe:	6803      	ldr	r3, [r0, #0]
 8000b00:	681b      	ldr	r3, [r3, #0]
 8000b02:	4718      	bx	r3
    }
 8000b04:	4770      	bx	lr
	...

08000b08 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b08:	2101      	movs	r1, #1
{
 8000b0a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b0c:	2200      	movs	r2, #0
 8000b0e:	4608      	mov	r0, r1
 8000b10:	f00a fffe 	bl	800bb10 <osSemaphoreNew>
 8000b14:	4b0a      	ldr	r3, [pc, #40]	@ (8000b40 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000b16:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000b18:	b928      	cbnz	r0, 8000b26 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000b1a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b44 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000b1c:	4a0a      	ldr	r2, [pc, #40]	@ (8000b48 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b1e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b20:	480a      	ldr	r0, [pc, #40]	@ (8000b4c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000b22:	f027 f993 	bl	8027e4c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000b26:	2200      	movs	r2, #0
 8000b28:	2104      	movs	r1, #4
 8000b2a:	2001      	movs	r0, #1
 8000b2c:	f00b f88f 	bl	800bc4e <osMessageQueueNew>
 8000b30:	4b07      	ldr	r3, [pc, #28]	@ (8000b50 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000b32:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b34:	b918      	cbnz	r0, 8000b3e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000b36:	4b07      	ldr	r3, [pc, #28]	@ (8000b54 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000b38:	4a03      	ldr	r2, [pc, #12]	@ (8000b48 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b3a:	212c      	movs	r1, #44	@ 0x2c
 8000b3c:	e7f0      	b.n	8000b20 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000b3e:	bd08      	pop	{r3, pc}
 8000b40:	200003c0 	.word	0x200003c0
 8000b44:	0802908d 	.word	0x0802908d
 8000b48:	080290d6 	.word	0x080290d6
 8000b4c:	08029105 	.word	0x08029105
 8000b50:	200003bc 	.word	0x200003bc
 8000b54:	08029143 	.word	0x08029143

08000b58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000b58:	4b02      	ldr	r3, [pc, #8]	@ (8000b64 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000b5a:	f04f 31ff 	mov.w	r1, #4294967295
 8000b5e:	6818      	ldr	r0, [r3, #0]
 8000b60:	f00b b820 	b.w	800bba4 <osSemaphoreAcquire>
 8000b64:	200003c0 	.word	0x200003c0

08000b68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b68:	4b01      	ldr	r3, [pc, #4]	@ (8000b70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b6a:	6818      	ldr	r0, [r3, #0]
 8000b6c:	f00b b846 	b.w	800bbfc <osSemaphoreRelease>
 8000b70:	200003c0 	.word	0x200003c0

08000b74 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000b74:	4b02      	ldr	r3, [pc, #8]	@ (8000b80 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000b76:	2100      	movs	r1, #0
 8000b78:	6818      	ldr	r0, [r3, #0]
 8000b7a:	f00b b813 	b.w	800bba4 <osSemaphoreAcquire>
 8000b7e:	bf00      	nop
 8000b80:	200003c0 	.word	0x200003c0

08000b84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000b84:	f7ff bff0 	b.w	8000b68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000b88 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000b88:	4803      	ldr	r0, [pc, #12]	@ (8000b98 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000b8a:	4904      	ldr	r1, [pc, #16]	@ (8000b9c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000b8c:	6800      	ldr	r0, [r0, #0]
 8000b8e:	2300      	movs	r3, #0
 8000b90:	461a      	mov	r2, r3
 8000b92:	f00b b897 	b.w	800bcc4 <osMessageQueuePut>
 8000b96:	bf00      	nop
 8000b98:	200003bc 	.word	0x200003bc
 8000b9c:	20000004 	.word	0x20000004

08000ba0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000ba0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000ba2:	4c08      	ldr	r4, [pc, #32]	@ (8000bc4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000ba4:	2300      	movs	r3, #0
 8000ba6:	461a      	mov	r2, r3
 8000ba8:	a901      	add	r1, sp, #4
 8000baa:	6820      	ldr	r0, [r4, #0]
 8000bac:	f00b f8bb 	bl	800bd26 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000bb0:	6820      	ldr	r0, [r4, #0]
 8000bb2:	f04f 33ff 	mov.w	r3, #4294967295
 8000bb6:	2200      	movs	r2, #0
 8000bb8:	a901      	add	r1, sp, #4
 8000bba:	f00b f8b4 	bl	800bd26 <osMessageQueueGet>
}
 8000bbe:	b002      	add	sp, #8
 8000bc0:	bd10      	pop	{r4, pc}
 8000bc2:	bf00      	nop
 8000bc4:	200003bc 	.word	0x200003bc

08000bc8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000bc8:	6803      	ldr	r3, [r0, #0]
 8000bca:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000bcc:	4718      	bx	r3

08000bce <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000bce:	2001      	movs	r0, #1
 8000bd0:	4770      	bx	lr

08000bd2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000bd2:	6803      	ldr	r3, [r0, #0]
 8000bd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000bd6:	4718      	bx	r3

08000bd8 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000bd8:	e7fe      	b.n	8000bd8 <DMA2D_XferErrorCallback>

08000bda <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000bda:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000bde:	4770      	bx	lr

08000be0 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000be0:	4b05      	ldr	r3, [pc, #20]	@ (8000bf8 <_ZN8STM32DMAD1Ev+0x18>)
 8000be2:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000be4:	4b05      	ldr	r3, [pc, #20]	@ (8000bfc <_ZN8STM32DMAD1Ev+0x1c>)
 8000be6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000bea:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000bee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000bf2:	f3bf 8f6f 	isb	sy
}
 8000bf6:	4770      	bx	lr
 8000bf8:	0802a2e8 	.word	0x0802a2e8
 8000bfc:	e000e100 	.word	0xe000e100

08000c00 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c00:	b510      	push	{r4, lr}
 8000c02:	4604      	mov	r4, r0
}
 8000c04:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000c08:	f7ff ffea 	bl	8000be0 <_ZN8STM32DMAD1Ev>
 8000c0c:	4620      	mov	r0, r4
 8000c0e:	f026 f9e1 	bl	8026fd4 <_ZdlPvj>
 8000c12:	4620      	mov	r0, r4
 8000c14:	bd10      	pop	{r4, pc}
	...

08000c18 <_ZN8STM32DMA10initializeEv>:
{
 8000c18:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000c1a:	2300      	movs	r3, #0
 8000c1c:	9301      	str	r3, [sp, #4]
 8000c1e:	4b0e      	ldr	r3, [pc, #56]	@ (8000c58 <_ZN8STM32DMA10initializeEv+0x40>)
 8000c20:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c22:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c26:	631a      	str	r2, [r3, #48]	@ 0x30
 8000c28:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c2a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000c2e:	9201      	str	r2, [sp, #4]
 8000c30:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000c32:	691a      	ldr	r2, [r3, #16]
 8000c34:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c38:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000c3a:	691a      	ldr	r2, [r3, #16]
 8000c3c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000c40:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000c42:	4b06      	ldr	r3, [pc, #24]	@ (8000c5c <_ZN8STM32DMA10initializeEv+0x44>)
 8000c44:	4a06      	ldr	r2, [pc, #24]	@ (8000c60 <_ZN8STM32DMA10initializeEv+0x48>)
 8000c46:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000c48:	4a06      	ldr	r2, [pc, #24]	@ (8000c64 <_ZN8STM32DMA10initializeEv+0x4c>)
 8000c4a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c4c:	4b06      	ldr	r3, [pc, #24]	@ (8000c68 <_ZN8STM32DMA10initializeEv+0x50>)
 8000c4e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c52:	609a      	str	r2, [r3, #8]
}
 8000c54:	b002      	add	sp, #8
 8000c56:	4770      	bx	lr
 8000c58:	40023800 	.word	0x40023800
 8000c5c:	20002fe0 	.word	0x20002fe0
 8000c60:	08000eb9 	.word	0x08000eb9
 8000c64:	08000bd9 	.word	0x08000bd9
 8000c68:	e000e100 	.word	0xe000e100

08000c6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000c6c:	b508      	push	{r3, lr}
    switch (format)
 8000c6e:	280a      	cmp	r0, #10
 8000c70:	d809      	bhi.n	8000c86 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000c72:	e8df f000 	tbb	[pc, r0]
 8000c76:	1006      	.short	0x1006
 8000c78:	0808080e 	.word	0x0808080e
 8000c7c:	10101008 	.word	0x10101008
 8000c80:	10          	.byte	0x10
 8000c81:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000c82:	2002      	movs	r0, #2
}
 8000c84:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000c86:	4b05      	ldr	r3, [pc, #20]	@ (8000c9c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000c88:	4a05      	ldr	r2, [pc, #20]	@ (8000ca0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000c8a:	4806      	ldr	r0, [pc, #24]	@ (8000ca4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000c8c:	2190      	movs	r1, #144	@ 0x90
 8000c8e:	f027 f8dd 	bl	8027e4c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000c92:	2000      	movs	r0, #0
 8000c94:	e7f6      	b.n	8000c84 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000c96:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000c98:	e7f4      	b.n	8000c84 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000c9a:	bf00      	nop
 8000c9c:	08029185 	.word	0x08029185
 8000ca0:	080291a0 	.word	0x080291a0
 8000ca4:	080291eb 	.word	0x080291eb

08000ca8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000ca8:	b538      	push	{r3, r4, r5, lr}
 8000caa:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cac:	7f88      	ldrb	r0, [r1, #30]
 8000cae:	f7ff ffdd 	bl	8000c6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cb2:	8aa5      	ldrh	r5, [r4, #20]
 8000cb4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cb6:	4b16      	ldr	r3, [pc, #88]	@ (8000d10 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cb8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cba:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cbc:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000cc0:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cc2:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc4:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cc6:	1b52      	subs	r2, r2, r5
 8000cc8:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000cca:	6825      	ldr	r5, [r4, #0]
 8000ccc:	2d08      	cmp	r5, #8
 8000cce:	d10e      	bne.n	8000cee <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cd0:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cd2:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cd4:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000cd6:	7f20      	ldrb	r0, [r4, #28]
 8000cd8:	4a0e      	ldr	r2, [pc, #56]	@ (8000d14 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000cda:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000cde:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ce0:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ce2:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8000ce4:	4a0c      	ldr	r2, [pc, #48]	@ (8000d18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ce6:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ce8:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000cea:	601a      	str	r2, [r3, #0]
    }
}
 8000cec:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000cee:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000cf0:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000cf2:	611a      	str	r2, [r3, #16]
 8000cf4:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000cf6:	0a0a      	lsrs	r2, r1, #8
 8000cf8:	0948      	lsrs	r0, r1, #5
 8000cfa:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000cfe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000d02:	4302      	orrs	r2, r0
 8000d04:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d08:	430a      	orrs	r2, r1
 8000d0a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d0c:	4a03      	ldr	r2, [pc, #12]	@ (8000d1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d0e:	e7ec      	b.n	8000cea <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d10:	4002b000 	.word	0x4002b000
 8000d14:	00010009 	.word	0x00010009
 8000d18:	00022301 	.word	0x00022301
 8000d1c:	00032301 	.word	0x00032301

08000d20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d20:	b508      	push	{r3, lr}
    switch (format)
 8000d22:	280b      	cmp	r0, #11
 8000d24:	d80b      	bhi.n	8000d3e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d26:	e8df f000 	tbb	[pc, r0]
 8000d2a:	1206      	.short	0x1206
 8000d2c:	0a0a0a10 	.word	0x0a0a0a10
 8000d30:	0808080a 	.word	0x0808080a
 8000d34:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000d36:	2002      	movs	r0, #2
}
 8000d38:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000d3a:	2005      	movs	r0, #5
        break;
 8000d3c:	e7fc      	b.n	8000d38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000d3e:	4b05      	ldr	r3, [pc, #20]	@ (8000d54 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000d40:	4a05      	ldr	r2, [pc, #20]	@ (8000d58 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000d42:	4806      	ldr	r0, [pc, #24]	@ (8000d5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000d44:	216f      	movs	r1, #111	@ 0x6f
 8000d46:	f027 f881 	bl	8027e4c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000d4a:	2000      	movs	r0, #0
 8000d4c:	e7f4      	b.n	8000d38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000d4e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000d50:	e7f2      	b.n	8000d38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000d52:	bf00      	nop
 8000d54:	08029185 	.word	0x08029185
 8000d58:	08029227 	.word	0x08029227
 8000d5c:	080291eb 	.word	0x080291eb

08000d60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000d60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000d64:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000d68:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000d6a:	4640      	mov	r0, r8
 8000d6c:	f7ff ffd8 	bl	8000d20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d70:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000d72:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d74:	4638      	mov	r0, r7
 8000d76:	f7ff ffd3 	bl	8000d20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000d7a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d7c:	4638      	mov	r0, r7
 8000d7e:	f7ff ff75 	bl	8000c6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d82:	8aa1      	ldrh	r1, [r4, #20]
 8000d84:	8b62      	ldrh	r2, [r4, #26]
 8000d86:	4b44      	ldr	r3, [pc, #272]	@ (8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000d88:	1a52      	subs	r2, r2, r1
 8000d8a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8c:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000d8e:	8b22      	ldrh	r2, [r4, #24]
 8000d90:	1a52      	subs	r2, r2, r1
 8000d92:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d94:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d96:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d98:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000d9c:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d9e:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000da0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000da4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000da6:	6820      	ldr	r0, [r4, #0]
 8000da8:	2880      	cmp	r0, #128	@ 0x80
 8000daa:	d028      	beq.n	8000dfe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000dac:	7f22      	ldrb	r2, [r4, #28]
 8000dae:	d80f      	bhi.n	8000dd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000db0:	2820      	cmp	r0, #32
 8000db2:	d067      	beq.n	8000e84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000db4:	2840      	cmp	r0, #64	@ 0x40
 8000db6:	d065      	beq.n	8000e84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000db8:	2804      	cmp	r0, #4
 8000dba:	d01a      	beq.n	8000df2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dbc:	4b36      	ldr	r3, [pc, #216]	@ (8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dbe:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000dc2:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000dc6:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dc8:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000dca:	d061      	beq.n	8000e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000dcc:	4a33      	ldr	r2, [pc, #204]	@ (8000e9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000dce:	e044      	b.n	8000e5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000dd0:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000dd4:	d004      	beq.n	8000de0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000dd6:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000dda:	d1ef      	bne.n	8000dbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ddc:	4830      	ldr	r0, [pc, #192]	@ (8000ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000dde:	e000      	b.n	8000de2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000de0:	4830      	ldr	r0, [pc, #192]	@ (8000ea4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000de2:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000de6:	61da      	str	r2, [r3, #28]
 8000de8:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000dea:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000dec:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dee:	6159      	str	r1, [r3, #20]
 8000df0:	e032      	b.n	8000e58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000df2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000df6:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dfa:	61da      	str	r2, [r3, #28]
 8000dfc:	e7f6      	b.n	8000dec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000dfe:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000e00:	1d02      	adds	r2, r0, #4
 8000e02:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e04:	7f22      	ldrb	r2, [r4, #28]
 8000e06:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e0a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000e0e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e10:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e12:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000e14:	7801      	ldrb	r1, [r0, #0]
 8000e16:	b141      	cbz	r1, 8000e2a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000e18:	2901      	cmp	r1, #1
 8000e1a:	d021      	beq.n	8000e60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000e1c:	4b22      	ldr	r3, [pc, #136]	@ (8000ea8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000e1e:	4a23      	ldr	r2, [pc, #140]	@ (8000eac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000e20:	4823      	ldr	r0, [pc, #140]	@ (8000eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000e22:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8000e26:	f027 f811 	bl	8027e4c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e2a:	69da      	ldr	r2, [r3, #28]
 8000e2c:	8841      	ldrh	r1, [r0, #2]
 8000e2e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e32:	3901      	subs	r1, #1
 8000e34:	f022 0210 	bic.w	r2, r2, #16
 8000e38:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000e3c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000e3e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000e40:	4b15      	ldr	r3, [pc, #84]	@ (8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e42:	69da      	ldr	r2, [r3, #28]
 8000e44:	f042 0220 	orr.w	r2, r2, #32
 8000e48:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000e4a:	69da      	ldr	r2, [r3, #28]
 8000e4c:	0692      	lsls	r2, r2, #26
 8000e4e:	d4fc      	bmi.n	8000e4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000e50:	2210      	movs	r2, #16
 8000e52:	609a      	str	r2, [r3, #8]
            if (blend)
 8000e54:	2900      	cmp	r1, #0
 8000e56:	d0b9      	beq.n	8000dcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e58:	4a16      	ldr	r2, [pc, #88]	@ (8000eb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e5a:	601a      	str	r2, [r3, #0]
}
 8000e5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000e60:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e64:	69da      	ldr	r2, [r3, #28]
 8000e66:	8840      	ldrh	r0, [r0, #2]
 8000e68:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e6c:	f100 30ff 	add.w	r0, r0, #4294967295
 8000e70:	f022 0210 	bic.w	r2, r2, #16
 8000e74:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000e78:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000e7c:	bf18      	it	ne
 8000e7e:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e80:	61da      	str	r2, [r3, #28]
                break;
 8000e82:	e7dd      	b.n	8000e40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e84:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000e88:	4b03      	ldr	r3, [pc, #12]	@ (8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e8a:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000e8e:	e7b4      	b.n	8000dfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e90:	f242 3201 	movw	r2, #8961	@ 0x2301
 8000e94:	e7e1      	b.n	8000e5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000e96:	bf00      	nop
 8000e98:	4002b000 	.word	0x4002b000
 8000e9c:	00012301 	.word	0x00012301
 8000ea0:	00020009 	.word	0x00020009
 8000ea4:	0002000a 	.word	0x0002000a
 8000ea8:	08029271 	.word	0x08029271
 8000eac:	0802928b 	.word	0x0802928b
 8000eb0:	080291eb 	.word	0x080291eb
 8000eb4:	00022301 	.word	0x00022301

08000eb8 <DMA2D_XferCpltCallback>:
        return instance;
 8000eb8:	4b02      	ldr	r3, [pc, #8]	@ (8000ec4 <DMA2D_XferCpltCallback+0xc>)
 8000eba:	681b      	ldr	r3, [r3, #0]
 8000ebc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000ebe:	6803      	ldr	r3, [r0, #0]
 8000ec0:	695b      	ldr	r3, [r3, #20]
 8000ec2:	4718      	bx	r3
 8000ec4:	20013f60 	.word	0x20013f60

08000ec8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000ec8:	b570      	push	{r4, r5, r6, lr}
 8000eca:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000ecc:	4625      	mov	r5, r4
 8000ece:	4b0a      	ldr	r3, [pc, #40]	@ (8000ef8 <_ZN8STM32DMAC1Ev+0x30>)
 8000ed0:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000ed2:	2600      	movs	r6, #0
 8000ed4:	6060      	str	r0, [r4, #4]
 8000ed6:	7226      	strb	r6, [r4, #8]
 8000ed8:	7266      	strb	r6, [r4, #9]
 8000eda:	f845 3b20 	str.w	r3, [r5], #32
 8000ede:	2260      	movs	r2, #96	@ 0x60
 8000ee0:	4629      	mov	r1, r5
 8000ee2:	f00e f80f 	bl	800ef04 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000ee6:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000eea:	60ee      	str	r6, [r5, #12]
 8000eec:	3524      	adds	r5, #36	@ 0x24
 8000eee:	429d      	cmp	r5, r3
 8000ef0:	d1fb      	bne.n	8000eea <_ZN8STM32DMAC1Ev+0x22>
}
 8000ef2:	4620      	mov	r0, r4
 8000ef4:	bd70      	pop	{r4, r5, r6, pc}
 8000ef6:	bf00      	nop
 8000ef8:	0802a2e8 	.word	0x0802a2e8

08000efc <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000efc:	4b03      	ldr	r3, [pc, #12]	@ (8000f0c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000efe:	681a      	ldr	r2, [r3, #0]
 8000f00:	07d2      	lsls	r2, r2, #31
 8000f02:	d4fc      	bmi.n	8000efe <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f04:	2223      	movs	r2, #35	@ 0x23
 8000f06:	609a      	str	r2, [r3, #8]
}
 8000f08:	4770      	bx	lr
 8000f0a:	bf00      	nop
 8000f0c:	4002b000 	.word	0x4002b000

08000f10 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8000f10:	4770      	bx	lr
	...

08000f14 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000f14:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f16:	4c0f      	ldr	r4, [pc, #60]	@ (8000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000f18:	6825      	ldr	r5, [r4, #0]
 8000f1a:	07ed      	lsls	r5, r5, #31
 8000f1c:	d4fc      	bmi.n	8000f18 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f1e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f20:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f22:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f24:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f28:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000f2a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f2c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f2e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f30:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8000f32:	d00a      	beq.n	8000f4a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f34:	4908      	ldr	r1, [pc, #32]	@ (8000f58 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f36:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f38:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000f3c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000f3e:	4b07      	ldr	r3, [pc, #28]	@ (8000f5c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000f40:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000f42:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000f44:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f46:	6023      	str	r3, [r4, #0]
    }
}
 8000f48:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000f4a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000f4c:	9b03      	ldr	r3, [sp, #12]
 8000f4e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f50:	4b03      	ldr	r3, [pc, #12]	@ (8000f60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000f52:	e7f8      	b.n	8000f46 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000f54:	4002b000 	.word	0x4002b000
 8000f58:	00010009 	.word	0x00010009
 8000f5c:	00020001 	.word	0x00020001
 8000f60:	00030001 	.word	0x00030001

08000f64 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8000f64:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f66:	4c0e      	ldr	r4, [pc, #56]	@ (8000fa0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8000f68:	6825      	ldr	r5, [r4, #0]
 8000f6a:	07ed      	lsls	r5, r5, #31
 8000f6c:	d4fc      	bmi.n	8000f68 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f6e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f70:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f72:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f74:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f78:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8000f7a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f7c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f7e:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f80:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000f82:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8000f84:	d008      	beq.n	8000f98 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f86:	061b      	lsls	r3, r3, #24
 8000f88:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8000f8c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000f8e:	4b05      	ldr	r3, [pc, #20]	@ (8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f90:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000f92:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000f94:	6023      	str	r3, [r4, #0]
    }
}
 8000f96:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f98:	4b03      	ldr	r3, [pc, #12]	@ (8000fa8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8000f9a:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000f9c:	2301      	movs	r3, #1
 8000f9e:	e7f9      	b.n	8000f94 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8000fa0:	4002b000 	.word	0x4002b000
 8000fa4:	00020001 	.word	0x00020001
 8000fa8:	ff020002 	.word	0xff020002

08000fac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fac:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fae:	4c0b      	ldr	r4, [pc, #44]	@ (8000fdc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8000fb0:	6825      	ldr	r5, [r4, #0]
 8000fb2:	07ed      	lsls	r5, r5, #31
 8000fb4:	d4fc      	bmi.n	8000fb0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fb6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fba:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fbc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fbe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fc2:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fc4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fc8:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fca:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000fcc:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000fce:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fd0:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fd2:	4b03      	ldr	r3, [pc, #12]	@ (8000fe0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fd4:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000fd6:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fd8:	6023      	str	r3, [r4, #0]
}
 8000fda:	bd30      	pop	{r4, r5, pc}
 8000fdc:	4002b000 	.word	0x4002b000
 8000fe0:	00020001 	.word	0x00020001

08000fe4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000fe4:	2001      	movs	r0, #1
 8000fe6:	4770      	bx	lr

08000fe8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000fe8:	2038      	movs	r0, #56	@ 0x38
 8000fea:	4770      	bx	lr

08000fec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000fec:	2338      	movs	r3, #56	@ 0x38
 8000fee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000ff2:	3008      	adds	r0, #8
 8000ff4:	4770      	bx	lr

08000ff6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000ff6:	2338      	movs	r3, #56	@ 0x38
 8000ff8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000ffc:	3008      	adds	r0, #8
 8000ffe:	4770      	bx	lr

08001000 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001000:	2001      	movs	r0, #1
 8001002:	4770      	bx	lr

08001004 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001004:	f641 007c 	movw	r0, #6268	@ 0x187c
 8001008:	4770      	bx	lr

0800100a <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800100a:	f641 037c 	movw	r3, #6268	@ 0x187c
 800100e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001012:	3008      	adds	r0, #8
 8001014:	4770      	bx	lr

08001016 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001016:	f641 037c 	movw	r3, #6268	@ 0x187c
 800101a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800101e:	3008      	adds	r0, #8
 8001020:	4770      	bx	lr

08001022 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001022:	2001      	movs	r0, #1
 8001024:	4770      	bx	lr

08001026 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001026:	2010      	movs	r0, #16
 8001028:	4770      	bx	lr

0800102a <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800102a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800102e:	3008      	adds	r0, #8
 8001030:	4770      	bx	lr

08001032 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001032:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001036:	3008      	adds	r0, #8
 8001038:	4770      	bx	lr

0800103a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartScreenScreenNoTransition();
 800103a:	4608      	mov	r0, r1
 800103c:	f002 baf4 	b.w	8003628 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>

08001040 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001040:	b510      	push	{r4, lr}
 8001042:	4b03      	ldr	r3, [pc, #12]	@ (8001050 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001044:	6003      	str	r3, [r0, #0]
 8001046:	4604      	mov	r4, r0
 8001048:	f00c fdc5 	bl	800dbd6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800104c:	4620      	mov	r0, r4
 800104e:	bd10      	pop	{r4, pc}
 8001050:	0802a3a0 	.word	0x0802a3a0

08001054 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001054:	b510      	push	{r4, lr}
 8001056:	4604      	mov	r4, r0
 8001058:	f7ff fff2 	bl	8001040 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800105c:	4620      	mov	r0, r4
 800105e:	2140      	movs	r1, #64	@ 0x40
 8001060:	f025 ffb8 	bl	8026fd4 <_ZdlPvj>
 8001064:	4620      	mov	r0, r4
 8001066:	bd10      	pop	{r4, pc}

08001068 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001068:	b510      	push	{r4, lr}
 800106a:	4b03      	ldr	r3, [pc, #12]	@ (8001078 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800106c:	6003      	str	r3, [r0, #0]
 800106e:	4604      	mov	r4, r0
 8001070:	f00c fdb1 	bl	800dbd6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001074:	4620      	mov	r0, r4
 8001076:	bd10      	pop	{r4, pc}
 8001078:	0802a36c 	.word	0x0802a36c

0800107c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800107c:	b510      	push	{r4, lr}
 800107e:	4604      	mov	r4, r0
 8001080:	f7ff fff2 	bl	8001068 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001084:	4620      	mov	r0, r4
 8001086:	f641 0184 	movw	r1, #6276	@ 0x1884
 800108a:	f025 ffa3 	bl	8026fd4 <_ZdlPvj>
 800108e:	4620      	mov	r0, r4
 8001090:	bd10      	pop	{r4, pc}
	...

08001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	4b03      	ldr	r3, [pc, #12]	@ (80010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001098:	6003      	str	r3, [r0, #0]
 800109a:	4604      	mov	r4, r0
 800109c:	f00c fd9b 	bl	800dbd6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010a0:	4620      	mov	r0, r4
 80010a2:	bd10      	pop	{r4, pc}
 80010a4:	0802a338 	.word	0x0802a338

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010a8:	b510      	push	{r4, lr}
 80010aa:	4604      	mov	r4, r0
 80010ac:	f7ff fff2 	bl	8001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010b0:	4620      	mov	r0, r4
 80010b2:	2118      	movs	r1, #24
 80010b4:	f025 ff8e 	bl	8026fd4 <_ZdlPvj>
 80010b8:	4620      	mov	r0, r4
 80010ba:	bd10      	pop	{r4, pc}

080010bc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80010bc:	b510      	push	{r4, lr}
 80010be:	4b09      	ldr	r3, [pc, #36]	@ (80010e4 <_ZN12FrontendHeapD1Ev+0x28>)
 80010c0:	6003      	str	r3, [r0, #0]
 80010c2:	4604      	mov	r4, r0
 80010c4:	f500 50c5 	add.w	r0, r0, #6304	@ 0x18a0
 80010c8:	3010      	adds	r0, #16
 80010ca:	f7ff ffb9 	bl	8001040 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80010ce:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 80010d2:	f7ff ffc9 	bl	8001068 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010d6:	f104 0014 	add.w	r0, r4, #20
 80010da:	f7ff ffdb 	bl	8001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010de:	4620      	mov	r0, r4
 80010e0:	bd10      	pop	{r4, pc}
 80010e2:	bf00      	nop
 80010e4:	0802a3d4 	.word	0x0802a3d4

080010e8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80010e8:	b508      	push	{r3, lr}
 80010ea:	4802      	ldr	r0, [pc, #8]	@ (80010f4 <__tcf_0+0xc>)
 80010ec:	f7ff ffe6 	bl	80010bc <_ZN12FrontendHeapD1Ev>
 80010f0:	bd08      	pop	{r3, pc}
 80010f2:	bf00      	nop
 80010f4:	20001294 	.word	0x20001294

080010f8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80010f8:	b510      	push	{r4, lr}
 80010fa:	4604      	mov	r4, r0
 80010fc:	f7ff ffde 	bl	80010bc <_ZN12FrontendHeapD1Ev>
 8001100:	4620      	mov	r0, r4
 8001102:	f44f 51d3 	mov.w	r1, #6752	@ 0x1a60
 8001106:	f025 ff65 	bl	8026fd4 <_ZdlPvj>
 800110a:	4620      	mov	r0, r4
 800110c:	bd10      	pop	{r4, pc}
	...

08001110 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001110:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001114:	f001 f9f0 	bl	80024f8 <_ZN14BitmapDatabase11getInstanceEv>
 8001118:	4605      	mov	r5, r0
 800111a:	f001 f9f1 	bl	8002500 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800111e:	2400      	movs	r4, #0
 8001120:	4601      	mov	r1, r0
 8001122:	4623      	mov	r3, r4
 8001124:	4628      	mov	r0, r5
 8001126:	4622      	mov	r2, r4
 8001128:	9400      	str	r4, [sp, #0]
 800112a:	f016 fef7 	bl	8017f1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800112e:	4b27      	ldr	r3, [pc, #156]	@ (80011cc <touchgfx_init+0xbc>)
 8001130:	4a27      	ldr	r2, [pc, #156]	@ (80011d0 <touchgfx_init+0xc0>)
 8001132:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001134:	4620      	mov	r0, r4
 8001136:	f005 faab 	bl	8006690 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 800113a:	4d26      	ldr	r5, [pc, #152]	@ (80011d4 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 800113c:	4b26      	ldr	r3, [pc, #152]	@ (80011d8 <touchgfx_init+0xc8>)
 800113e:	4a27      	ldr	r2, [pc, #156]	@ (80011dc <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8001140:	4827      	ldr	r0, [pc, #156]	@ (80011e0 <touchgfx_init+0xd0>)
 8001142:	609a      	str	r2, [r3, #8]
 8001144:	f016 fe52 	bl	8017dec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001148:	682b      	ldr	r3, [r5, #0]
 800114a:	f3bf 8f5b 	dmb	ish
 800114e:	07db      	lsls	r3, r3, #31
 8001150:	d436      	bmi.n	80011c0 <touchgfx_init+0xb0>
 8001152:	4628      	mov	r0, r5
 8001154:	f025 ff40 	bl	8026fd8 <__cxa_guard_acquire>
 8001158:	b390      	cbz	r0, 80011c0 <touchgfx_init+0xb0>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800115a:	4c22      	ldr	r4, [pc, #136]	@ (80011e4 <touchgfx_init+0xd4>)
          screenStorage(scr),
          transitionStorage(tra),
 800115c:	4f22      	ldr	r7, [pc, #136]	@ (80011e8 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800115e:	4b23      	ldr	r3, [pc, #140]	@ (80011ec <touchgfx_init+0xdc>)
 8001160:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8001162:	f107 0654 	add.w	r6, r7, #84	@ 0x54
        : presenterStorage(pres),
 8001166:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800116a:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 800116e:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001170:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001174:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001176:	6126      	str	r6, [r4, #16]
 8001178:	f00c fd2e 	bl	800dbd8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800117c:	4b1c      	ldr	r3, [pc, #112]	@ (80011f0 <touchgfx_init+0xe0>)
 800117e:	6163      	str	r3, [r4, #20]
 8001180:	4640      	mov	r0, r8
 8001182:	f00c fd29 	bl	800dbd8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001186:	4b1b      	ldr	r3, [pc, #108]	@ (80011f4 <touchgfx_init+0xe4>)
 8001188:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800118a:	4638      	mov	r0, r7
 800118c:	f00c fd24 	bl	800dbd8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001190:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8001194:	f503 600f 	add.w	r0, r3, #2288	@ 0x8f0
 8001198:	4a17      	ldr	r2, [pc, #92]	@ (80011f8 <touchgfx_init+0xe8>)
 800119a:	f8c3 28b0 	str.w	r2, [r3, #2224]	@ 0x8b0
 800119e:	f007 fa89 	bl	80086b4 <_ZN5ModelC1Ev>
 80011a2:	4622      	mov	r2, r4
 80011a4:	f107 0140 	add.w	r1, r7, #64	@ 0x40
 80011a8:	4630      	mov	r0, r6
 80011aa:	f005 ffb5 	bl	8007118 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80011ae:	4630      	mov	r0, r6
 80011b0:	f002 fa3a 	bl	8003628 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 80011b4:	4811      	ldr	r0, [pc, #68]	@ (80011fc <touchgfx_init+0xec>)
 80011b6:	f026 fe67 	bl	8027e88 <atexit>
 80011ba:	4628      	mov	r0, r5
 80011bc:	f025 ff18 	bl	8026ff0 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80011c0:	480f      	ldr	r0, [pc, #60]	@ (8001200 <touchgfx_init+0xf0>)
}
 80011c2:	b002      	add	sp, #8
 80011c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80011c8:	f7ff bbe4 	b.w	8000994 <_ZN11TouchGFXHAL10initializeEv>
 80011cc:	20013fc4 	.word	0x20013fc4
 80011d0:	20000440 	.word	0x20000440
 80011d4:	20001290 	.word	0x20001290
 80011d8:	20000460 	.word	0x20000460
 80011dc:	20000444 	.word	0x20000444
 80011e0:	20000008 	.word	0x20000008
 80011e4:	20001294 	.word	0x20001294
 80011e8:	20002b44 	.word	0x20002b44
 80011ec:	0802a3d4 	.word	0x0802a3d4
 80011f0:	0802a338 	.word	0x0802a338
 80011f4:	0802a36c 	.word	0x0802a36c
 80011f8:	0802a3a0 	.word	0x0802a3a0
 80011fc:	080010e9 	.word	0x080010e9
 8001200:	200003c4 	.word	0x200003c4

08001204 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001204:	4770      	bx	lr
	...

08001208 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001208:	4801      	ldr	r0, [pc, #4]	@ (8001210 <touchgfx_taskEntry+0x8>)
 800120a:	f7ff bbd1 	b.w	80009b0 <_ZN11TouchGFXHAL9taskEntryEv>
 800120e:	bf00      	nop
 8001210:	200003c4 	.word	0x200003c4

08001214 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001214:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001216:	4e24      	ldr	r6, [pc, #144]	@ (80012a8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
{
public:

    STM32TouchController() {}
 8001218:	4c24      	ldr	r4, [pc, #144]	@ (80012ac <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 800121a:	4d25      	ldr	r5, [pc, #148]	@ (80012b0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 800121c:	4b25      	ldr	r3, [pc, #148]	@ (80012b4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 800121e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001220:	4630      	mov	r0, r6
 8001222:	f7ff fe51 	bl	8000ec8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001226:	4628      	mov	r0, r5
 8001228:	f01b ff7e 	bl	801d128 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 800122c:	4822      	ldr	r0, [pc, #136]	@ (80012b8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 800122e:	f014 fb4d 	bl	80158cc <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8001232:	4b22      	ldr	r3, [pc, #136]	@ (80012bc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001234:	4822      	ldr	r0, [pc, #136]	@ (80012c0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          touchController(touchCtrl),
 8001236:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001238:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800123a:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800123e:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001242:	4920      	ldr	r1, [pc, #128]	@ (80012c4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001244:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001246:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800124a:	491f      	ldr	r1, [pc, #124]	@ (80012c8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 800124c:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 800124e:	491f      	ldr	r1, [pc, #124]	@ (80012cc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
          useAuxiliaryLCD(false),
 8001250:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
        instance = this;
 8001254:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001256:	21f0      	movs	r1, #240	@ 0xf0
 8001258:	8001      	strh	r1, [r0, #0]
 800125a:	481d      	ldr	r0, [pc, #116]	@ (80012d0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          lastY(0),
 800125c:	665a      	str	r2, [r3, #100]	@ 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800125e:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001260:	481c      	ldr	r0, [pc, #112]	@ (80012d4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          updateMCULoad(0),
 8001262:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001266:	f44f 71a0 	mov.w	r1, #320	@ 0x140
          buttonController(0),
 800126a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800126e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001272:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001276:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 800127a:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 800127e:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001282:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001286:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          cc_begin(0),
 800128a:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 800128c:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001290:	8001      	strh	r1, [r0, #0]
 8001292:	4811      	ldr	r0, [pc, #68]	@ (80012d8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001294:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001296:	4911      	ldr	r1, [pc, #68]	@ (80012dc <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 8001298:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800129a:	2201      	movs	r2, #1
 800129c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80012a0:	4a0f      	ldr	r2, [pc, #60]	@ (80012e0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80012a2:	601a      	str	r2, [r3, #0]
}
 80012a4:	bd70      	pop	{r4, r5, r6, pc}
 80012a6:	bf00      	nop
 80012a8:	200004ec 	.word	0x200004ec
 80012ac:	2000128c 	.word	0x2000128c
 80012b0:	20000460 	.word	0x20000460
 80012b4:	08028f0c 	.word	0x08028f0c
 80012b8:	20000444 	.word	0x20000444
 80012bc:	200003c4 	.word	0x200003c4
 80012c0:	20013f54 	.word	0x20013f54
 80012c4:	01000001 	.word	0x01000001
 80012c8:	01010000 	.word	0x01010000
 80012cc:	20013f60 	.word	0x20013f60
 80012d0:	20013f5a 	.word	0x20013f5a
 80012d4:	20013f56 	.word	0x20013f56
 80012d8:	20013f5c 	.word	0x20013f5c
 80012dc:	20013f58 	.word	0x20013f58
 80012e0:	0802a210 	.word	0x0802a210

080012e4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 80012e4:	4801      	ldr	r0, [pc, #4]	@ (80012ec <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80012e6:	f7ff bc7b 	b.w	8000be0 <_ZN8STM32DMAD1Ev>
 80012ea:	bf00      	nop
 80012ec:	200004ec 	.word	0x200004ec

080012f0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80012f0:	2000      	movs	r0, #0
 80012f2:	4770      	bx	lr

080012f4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80012f4:	8081      	strh	r1, [r0, #4]
    }
 80012f6:	4770      	bx	lr

080012f8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80012f8:	80c1      	strh	r1, [r0, #6]
    }
 80012fa:	4770      	bx	lr

080012fc <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80012fc:	8101      	strh	r1, [r0, #8]
    }
 80012fe:	4770      	bx	lr

08001300 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001300:	8141      	strh	r1, [r0, #10]
    }
 8001302:	4770      	bx	lr

08001304 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001304:	4770      	bx	lr

08001306 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001306:	4770      	bx	lr

08001308 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001308:	4770      	bx	lr

0800130a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800130a:	4770      	bx	lr

0800130c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800130c:	4770      	bx	lr

0800130e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800130e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001310:	88c4      	ldrh	r4, [r0, #6]
 8001312:	6803      	ldr	r3, [r0, #0]
 8001314:	1b12      	subs	r2, r2, r4
 8001316:	8884      	ldrh	r4, [r0, #4]
 8001318:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800131a:	1b09      	subs	r1, r1, r4
 800131c:	b212      	sxth	r2, r2
    }
 800131e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001322:	b209      	sxth	r1, r1
 8001324:	4718      	bx	r3

08001326 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001326:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800132a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800132c:	f04f 33ff 	mov.w	r3, #4294967295
 8001330:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001332:	6813      	ldr	r3, [r2, #0]
 8001334:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001336:	6010      	str	r0, [r2, #0]
    }
 8001338:	4770      	bx	lr

0800133a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800133a:	2000      	movs	r0, #0
 800133c:	4770      	bx	lr

0800133e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800133e:	888b      	ldrh	r3, [r1, #4]
 8001340:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001342:	2001      	movs	r0, #1
 8001344:	4770      	bx	lr

08001346 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001346:	4770      	bx	lr

08001348 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001348:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 800134c:	4770      	bx	lr

0800134e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800134e:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8001352:	4770      	bx	lr

08001354 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001354:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001356:	2200      	movs	r2, #0
        return rect.width;
 8001358:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800135c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001360:	8002      	strh	r2, [r0, #0]
 8001362:	8042      	strh	r2, [r0, #2]
 8001364:	8084      	strh	r4, [r0, #4]
 8001366:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001368:	bd10      	pop	{r4, pc}

0800136a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800136a:	2200      	movs	r2, #0
 800136c:	8002      	strh	r2, [r0, #0]
 800136e:	8042      	strh	r2, [r0, #2]
 8001370:	8082      	strh	r2, [r0, #4]
 8001372:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001374:	4770      	bx	lr

08001376 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8001376:	7701      	strb	r1, [r0, #28]
    }
 8001378:	4770      	bx	lr

0800137a <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 800137a:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 800137e:	4770      	bx	lr

08001380 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 8001380:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8001384:	4770      	bx	lr

08001386 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8001386:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 800138a:	4770      	bx	lr

0800138c <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 800138c:	2001      	movs	r0, #1
 800138e:	4770      	bx	lr

08001390 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 8001390:	3098      	adds	r0, #152	@ 0x98
 8001392:	4770      	bx	lr

08001394 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 8001394:	308c      	adds	r0, #140	@ 0x8c
 8001396:	4770      	bx	lr

08001398 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 8001398:	3084      	adds	r0, #132	@ 0x84
 800139a:	4770      	bx	lr

0800139c <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 800139c:	4770      	bx	lr

0800139e <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800139e:	4770      	bx	lr

080013a0 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80013a0:	4770      	bx	lr
	...

080013a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a4:	4b03      	ldr	r3, [pc, #12]	@ (80013b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80013a6:	2290      	movs	r2, #144	@ 0x90
 80013a8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80013ac:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80013b0:	4770      	bx	lr
 80013b2:	bf00      	nop
 80013b4:	e000e100 	.word	0xe000e100

080013b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80013b8:	4a09      	ldr	r2, [pc, #36]	@ (80013e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80013ba:	490a      	ldr	r1, [pc, #40]	@ (80013e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80013bc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80013be:	480a      	ldr	r0, [pc, #40]	@ (80013e8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80013c0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80013c4:	3b01      	subs	r3, #1
 80013c6:	b29b      	uxth	r3, r3
 80013c8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80013ca:	6911      	ldr	r1, [r2, #16]
 80013cc:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80013d0:	3901      	subs	r1, #1
 80013d2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80013d4:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80013d6:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 80013d8:	f043 0301 	orr.w	r3, r3, #1
 80013dc:	6353      	str	r3, [r2, #52]	@ 0x34
}
 80013de:	4770      	bx	lr
 80013e0:	40016800 	.word	0x40016800
 80013e4:	20002cf6 	.word	0x20002cf6
 80013e8:	20002cf4 	.word	0x20002cf4

080013ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80013ec:	4b01      	ldr	r3, [pc, #4]	@ (80013f4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80013ee:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 80013f2:	4770      	bx	lr
 80013f4:	40016800 	.word	0x40016800

080013f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80013f8:	4b02      	ldr	r3, [pc, #8]	@ (8001404 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80013fa:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80013fc:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001400:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001402:	4770      	bx	lr
 8001404:	40016800 	.word	0x40016800

08001408 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001408:	b510      	push	{r4, lr}
 800140a:	212c      	movs	r1, #44	@ 0x2c
 800140c:	4604      	mov	r4, r0
 800140e:	f025 fde1 	bl	8026fd4 <_ZdlPvj>
 8001412:	4620      	mov	r0, r4
 8001414:	bd10      	pop	{r4, pc}

08001416 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001416:	b510      	push	{r4, lr}
 8001418:	21bc      	movs	r1, #188	@ 0xbc
 800141a:	4604      	mov	r4, r0
 800141c:	f025 fdda 	bl	8026fd4 <_ZdlPvj>
 8001420:	4620      	mov	r0, r4
 8001422:	bd10      	pop	{r4, pc}

08001424 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001424:	b570      	push	{r4, r5, r6, lr}
 8001426:	4604      	mov	r4, r0
    HAL::initialize();
 8001428:	f00c fed5 	bl	800e1d6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800142c:	6823      	ldr	r3, [r4, #0]
 800142e:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 8001430:	f013 f8f8 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
 8001434:	4601      	mov	r1, r0
 8001436:	4620      	mov	r0, r4
 8001438:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800143a:	6823      	ldr	r3, [r4, #0]
 800143c:	4a05      	ldr	r2, [pc, #20]	@ (8001454 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800143e:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8001442:	4620      	mov	r0, r4
 8001444:	46ac      	mov	ip, r5
 8001446:	2300      	movs	r3, #0
}
 8001448:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800144c:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001450:	4760      	bx	ip
 8001452:	bf00      	nop
 8001454:	d004b000 	.word	0xd004b000

08001458 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001458:	f00c bea4 	b.w	800e1a4 <_ZN8touchgfx3HAL10beginFrameEv>

0800145c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800145c:	f00c beae 	b.w	800e1bc <_ZN8touchgfx3HAL8endFrameEv>

08001460 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001460:	f00c be6a 	b.w	800e138 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001464 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001464:	f00c bfcb 	b.w	800e3fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001468 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001468:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800146c:	b112      	cbz	r2, 8001474 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800146e:	6803      	ldr	r3, [r0, #0]
 8001470:	695b      	ldr	r3, [r3, #20]
 8001472:	4718      	bx	r3
    }
 8001474:	4770      	bx	lr

08001476 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001476:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800147a:	b11a      	cbz	r2, 8001484 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800147c:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8001480:	b102      	cbz	r2, 8001484 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001482:	6018      	str	r0, [r3, #0]
        }
    }
 8001484:	4770      	bx	lr
	...

08001488 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001488:	4b03      	ldr	r3, [pc, #12]	@ (8001498 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800148a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800148e:	609a      	str	r2, [r3, #8]
 8001490:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001494:	609a      	str	r2, [r3, #8]
}
 8001496:	4770      	bx	lr
 8001498:	e000e100 	.word	0xe000e100

0800149c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800149c:	4b08      	ldr	r3, [pc, #32]	@ (80014c0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800149e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014a2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014aa:	f3bf 8f6f 	isb	sy
 80014ae:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014b2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014b6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014ba:	f3bf 8f6f 	isb	sy
}
 80014be:	4770      	bx	lr
 80014c0:	e000e100 	.word	0xe000e100

080014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80014c4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80014c6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80014c8:	4e12      	ldr	r6, [pc, #72]	@ (8001514 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80014ca:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80014cc:	4b12      	ldr	r3, [pc, #72]	@ (8001518 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80014ce:	6003      	str	r3, [r0, #0]
 80014d0:	6833      	ldr	r3, [r6, #0]
 80014d2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 80014d6:	4605      	mov	r5, r0
 80014d8:	b10a      	cbz	r2, 80014de <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80014da:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80014dc:	b900      	cbnz	r0, 80014e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80014de:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80014e0:	6803      	ldr	r3, [r0, #0]
 80014e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80014e4:	4798      	blx	r3
        return auxiliaryLCD;
 80014e6:	6833      	ldr	r3, [r6, #0]
 80014e8:	fab0 f480 	clz	r4, r0
 80014ec:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80014ee:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80014f0:	b130      	cbz	r0, 8001500 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80014f2:	6803      	ldr	r3, [r0, #0]
 80014f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80014f6:	4798      	blx	r3
 80014f8:	2800      	cmp	r0, #0
 80014fa:	bf08      	it	eq
 80014fc:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001500:	b92c      	cbnz	r4, 800150e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001502:	4b06      	ldr	r3, [pc, #24]	@ (800151c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001504:	4a06      	ldr	r2, [pc, #24]	@ (8001520 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001506:	4807      	ldr	r0, [pc, #28]	@ (8001524 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001508:	212c      	movs	r1, #44	@ 0x2c
 800150a:	f026 fc9f 	bl	8027e4c <__assert_func>
    }
 800150e:	4628      	mov	r0, r5
 8001510:	bd70      	pop	{r4, r5, r6, pc}
 8001512:	bf00      	nop
 8001514:	20013f60 	.word	0x20013f60
 8001518:	0802a3e8 	.word	0x0802a3e8
 800151c:	080292c9 	.word	0x080292c9
 8001520:	08029327 	.word	0x08029327
 8001524:	08029360 	.word	0x08029360

08001528 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001528:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 800152a:	4e24      	ldr	r6, [pc, #144]	@ (80015bc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x94>)
 800152c:	6835      	ldr	r5, [r6, #0]
 800152e:	f3bf 8f5b 	dmb	ish
 8001532:	f015 0501 	ands.w	r5, r5, #1
 8001536:	d13f      	bne.n	80015b8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x90>
 8001538:	4630      	mov	r0, r6
 800153a:	f025 fd4d 	bl	8026fd8 <__cxa_guard_acquire>
 800153e:	2800      	cmp	r0, #0
 8001540:	d03a      	beq.n	80015b8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x90>
class CWRVectorRenderer : public VectorRenderer
 8001542:	4c1f      	ldr	r4, [pc, #124]	@ (80015c0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001544:	4b1f      	ldr	r3, [pc, #124]	@ (80015c4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001546:	6125      	str	r5, [r4, #16]
 8001548:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800154c:	e9c4 3500 	strd	r3, r5, [r4]
 8001550:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001554:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001556:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001558:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 800155a:	f014 fc16 	bl	8015d8a <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 800155e:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001562:	f00f fd9d 	bl	80110a0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8001566:	4b18      	ldr	r3, [pc, #96]	@ (80015c8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001568:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800156a:	4620      	mov	r0, r4
 800156c:	4b17      	ldr	r3, [pc, #92]	@ (80015cc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 800156e:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001572:	f7ff ffa7 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001576:	4b16      	ldr	r3, [pc, #88]	@ (80015d0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 8001578:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 800157c:	3324      	adds	r3, #36	@ 0x24
 800157e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8001582:	2364      	movs	r3, #100	@ 0x64
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8001584:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8001588:	2300      	movs	r3, #0
 800158a:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 800158e:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8001592:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8001596:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 800159a:	480e      	ldr	r0, [pc, #56]	@ (80015d4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 800159c:	4b0e      	ldr	r3, [pc, #56]	@ (80015d8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800159e:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80015a2:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80015a6:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80015aa:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80015ae:	f026 fc6b 	bl	8027e88 <atexit>
 80015b2:	4630      	mov	r0, r6
 80015b4:	f025 fd1c 	bl	8026ff0 <__cxa_guard_release>
}
 80015b8:	4801      	ldr	r0, [pc, #4]	@ (80015c0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 80015ba:	bd70      	pop	{r4, r5, r6, pc}
 80015bc:	20002cf8 	.word	0x20002cf8
 80015c0:	20002cfc 	.word	0x20002cfc
 80015c4:	0802b018 	.word	0x0802b018
 80015c8:	0802a408 	.word	0x0802a408
 80015cc:	0802a480 	.word	0x0802a480
 80015d0:	0802afcc 	.word	0x0802afcc
 80015d4:	080013a1 	.word	0x080013a1
 80015d8:	0802afac 	.word	0x0802afac

080015dc <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80015dc:	b510      	push	{r4, lr}
        return instance;
 80015de:	4c14      	ldr	r4, [pc, #80]	@ (8001630 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80015e0:	6823      	ldr	r3, [r4, #0]
 80015e2:	b323      	cbz	r3, 800162e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80015e4:	4b13      	ldr	r3, [pc, #76]	@ (8001634 <HAL_LTDC_LineEventCallback+0x58>)
 80015e6:	4a14      	ldr	r2, [pc, #80]	@ (8001638 <HAL_LTDC_LineEventCallback+0x5c>)
 80015e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80015ea:	8811      	ldrh	r1, [r2, #0]
 80015ec:	428b      	cmp	r3, r1
 80015ee:	d113      	bne.n	8001618 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80015f0:	4b12      	ldr	r3, [pc, #72]	@ (800163c <HAL_LTDC_LineEventCallback+0x60>)
 80015f2:	8819      	ldrh	r1, [r3, #0]
 80015f4:	f008 fe32 	bl	800a25c <HAL_LTDC_ProgramLineEvent>
 80015f8:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80015fa:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 80015fe:	3301      	adds	r3, #1
 8001600:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001604:	f7ff fac0 	bl	8000b88 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001608:	6820      	ldr	r0, [r4, #0]
 800160a:	f00d fb23 	bl	800ec54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800160e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001612:	2000      	movs	r0, #0
 8001614:	f7ff b904 	b.w	8000820 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001618:	f008 fe20 	bl	800a25c <HAL_LTDC_ProgramLineEvent>
        return instance;
 800161c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800161e:	6803      	ldr	r3, [r0, #0]
 8001620:	6a1b      	ldr	r3, [r3, #32]
 8001622:	4798      	blx	r3
    }
 8001624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001628:	2000      	movs	r0, #0
 800162a:	f7ff b923 	b.w	8000874 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800162e:	bd10      	pop	{r4, pc}
 8001630:	20013f60 	.word	0x20013f60
 8001634:	40016800 	.word	0x40016800
 8001638:	20002cf6 	.word	0x20002cf6
 800163c:	20002cf4 	.word	0x20002cf4

08001640 <JoystickTask>:



// ⚠️ Thêm extern "C" ở đây để export hàm cho file C
extern "C" void JoystickTask(void *argument)
{
 8001640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    GPIO_PinState lastJoy2ButtonState = GPIO_PIN_SET;

    enum Joystick { JOY1, JOY2 };
    Joystick currentJoystick = JOY1;

    tick_counter = 0;
 8001644:	f8df 9158 	ldr.w	r9, [pc, #344]	@ 80017a0 <JoystickTask+0x160>
			lastJoy1ButtonState = joy1ButtonState;
		} else if (currentJoystick == JOY2) {
			sConfig.Channel = JOY2_X_CHANNEL;
			sConfig.Rank = 1;
			sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8001648:	4d53      	ldr	r5, [pc, #332]	@ (8001798 <JoystickTask+0x158>)
			} else if (adc_value2 > JOY_THRESHOLD_RIGHT) {
				command = JOY2_RIGHT;
				osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
			}

            GPIO_PinState joy2ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY2_BUTTON_PIN);
 800164a:	f8df a158 	ldr.w	sl, [pc, #344]	@ 80017a4 <JoystickTask+0x164>
            if (joy2ButtonState == GPIO_PIN_RESET && lastJoy2ButtonState == GPIO_PIN_SET) {
                command = JOY2_BUTTON;
                osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 800164e:	4f53      	ldr	r7, [pc, #332]	@ (800179c <JoystickTask+0x15c>)
{
 8001650:	b087      	sub	sp, #28
    ADC_ChannelConfTypeDef sConfig = {0};
 8001652:	2210      	movs	r2, #16
 8001654:	2100      	movs	r1, #0
 8001656:	a802      	add	r0, sp, #8
    tick_counter = 0;
 8001658:	2400      	movs	r4, #0
    GPIO_PinState lastJoy2ButtonState = GPIO_PIN_SET;
 800165a:	f04f 0801 	mov.w	r8, #1
    ADC_ChannelConfTypeDef sConfig = {0};
 800165e:	f026 fe0e 	bl	802827e <memset>
    GPIO_PinState lastJoy1ButtonState = GPIO_PIN_SET;
 8001662:	46c3      	mov	fp, r8
    tick_counter = 0;
 8001664:	f8c9 4000 	str.w	r4, [r9]
    	if (currentJoystick == JOY1) {
 8001668:	2301      	movs	r3, #1
 800166a:	2c00      	cmp	r4, #0
 800166c:	d150      	bne.n	8001710 <JoystickTask+0xd0>
			sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 800166e:	2206      	movs	r2, #6
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8001670:	a902      	add	r1, sp, #8
 8001672:	4628      	mov	r0, r5
			sConfig.Rank = 1;
 8001674:	e9cd 4302 	strd	r4, r3, [sp, #8]
			sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 8001678:	9204      	str	r2, [sp, #16]
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 800167a:	f007 fd05 	bl	8009088 <HAL_ADC_ConfigChannel>
			HAL_ADC_Start(&hadc1);
 800167e:	4628      	mov	r0, r5
 8001680:	f007 fc12 	bl	8008ea8 <HAL_ADC_Start>
			HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8001684:	f04f 31ff 	mov.w	r1, #4294967295
 8001688:	4628      	mov	r0, r5
 800168a:	f007 fca6 	bl	8008fda <HAL_ADC_PollForConversion>
			adc_value1 = HAL_ADC_GetValue(&hadc1);
 800168e:	4628      	mov	r0, r5
 8001690:	f007 fcf6 	bl	8009080 <HAL_ADC_GetValue>
 8001694:	4606      	mov	r6, r0
			HAL_ADC_Stop(&hadc1);
 8001696:	4628      	mov	r0, r5
 8001698:	f007 fc84 	bl	8008fa4 <HAL_ADC_Stop>
			if (adc_value1 < JOY_THRESHOLD_LEFT) {
 800169c:	f5b6 7f7a 	cmp.w	r6, #1000	@ 0x3e8
 80016a0:	f04f 0301 	mov.w	r3, #1
 80016a4:	d22d      	bcs.n	8001702 <JoystickTask+0xc2>
				command = JOY1_LEFT;
 80016a6:	f88d 4007 	strb.w	r4, [sp, #7]
				osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 80016aa:	6838      	ldr	r0, [r7, #0]
 80016ac:	4623      	mov	r3, r4
 80016ae:	4622      	mov	r2, r4
 80016b0:	f10d 0107 	add.w	r1, sp, #7
 80016b4:	f00a fb06 	bl	800bcc4 <osMessageQueuePut>
			GPIO_PinState joy1ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY1_BUTTON_PIN);
 80016b8:	2104      	movs	r1, #4
 80016ba:	4650      	mov	r0, sl
 80016bc:	f007 ffc0 	bl	8009640 <HAL_GPIO_ReadPin>
			if (joy1ButtonState == GPIO_PIN_RESET && lastJoy1ButtonState == GPIO_PIN_SET) {
 80016c0:	4606      	mov	r6, r0
 80016c2:	b960      	cbnz	r0, 80016de <JoystickTask+0x9e>
 80016c4:	f1bb 0f01 	cmp.w	fp, #1
 80016c8:	d109      	bne.n	80016de <JoystickTask+0x9e>
				command = JOY1_BUTTON;
 80016ca:	2304      	movs	r3, #4
 80016cc:	f88d 3007 	strb.w	r3, [sp, #7]
				osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 80016d0:	4602      	mov	r2, r0
 80016d2:	4603      	mov	r3, r0
 80016d4:	f10d 0107 	add.w	r1, sp, #7
 80016d8:	6838      	ldr	r0, [r7, #0]
 80016da:	f00a faf3 	bl	800bcc4 <osMessageQueuePut>
            }
            lastJoy2ButtonState = joy2ButtonState;
		}

		tick_counter += 20;
 80016de:	f8d9 3000 	ldr.w	r3, [r9]
 80016e2:	3314      	adds	r3, #20
		if (tick_counter >= 500) {
 80016e4:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 80016e8:	bf28      	it	cs
 80016ea:	2300      	movcs	r3, #0
			tick_counter = 0;
			currentJoystick = (currentJoystick == JOY1) ? JOY2 : JOY1;

			}

        osDelay(10);
 80016ec:	f04f 000a 	mov.w	r0, #10
 80016f0:	bf28      	it	cs
 80016f2:	f084 0401 	eorcs.w	r4, r4, #1
		tick_counter += 20;
 80016f6:	f8c9 3000 	str.w	r3, [r9]
    }
 80016fa:	46b3      	mov	fp, r6
        osDelay(10);
 80016fc:	f00a f9fc 	bl	800baf8 <osDelay>
    }
 8001700:	e7b2      	b.n	8001668 <JoystickTask+0x28>
			} else if (adc_value1 > JOY_THRESHOLD_RIGHT) {
 8001702:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 8001706:	4296      	cmp	r6, r2
 8001708:	d9d6      	bls.n	80016b8 <JoystickTask+0x78>
				command = JOY1_RIGHT;
 800170a:	f88d 3007 	strb.w	r3, [sp, #7]
 800170e:	e7cc      	b.n	80016aa <JoystickTask+0x6a>
			sConfig.Channel = JOY2_X_CHANNEL;
 8001710:	2205      	movs	r2, #5
			sConfig.Rank = 1;
 8001712:	e9cd 2302 	strd	r2, r3, [sp, #8]
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8001716:	a902      	add	r1, sp, #8
			sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 8001718:	2306      	movs	r3, #6
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 800171a:	4628      	mov	r0, r5
			sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 800171c:	9304      	str	r3, [sp, #16]
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 800171e:	f007 fcb3 	bl	8009088 <HAL_ADC_ConfigChannel>
			HAL_ADC_Start(&hadc1);
 8001722:	4628      	mov	r0, r5
 8001724:	f007 fbc0 	bl	8008ea8 <HAL_ADC_Start>
			HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8001728:	f04f 31ff 	mov.w	r1, #4294967295
 800172c:	4628      	mov	r0, r5
 800172e:	f007 fc54 	bl	8008fda <HAL_ADC_PollForConversion>
			adc_value2 = HAL_ADC_GetValue(&hadc1);
 8001732:	4628      	mov	r0, r5
 8001734:	f007 fca4 	bl	8009080 <HAL_ADC_GetValue>
 8001738:	4606      	mov	r6, r0
			HAL_ADC_Stop(&hadc1);
 800173a:	4628      	mov	r0, r5
 800173c:	f007 fc32 	bl	8008fa4 <HAL_ADC_Stop>
			if (adc_value2 < JOY_THRESHOLD_LEFT) {
 8001740:	f5b6 7f7a 	cmp.w	r6, #1000	@ 0x3e8
 8001744:	d216      	bcs.n	8001774 <JoystickTask+0x134>
				command = JOY2_LEFT;
 8001746:	2302      	movs	r3, #2
				command = JOY2_RIGHT;
 8001748:	f88d 3007 	strb.w	r3, [sp, #7]
				osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 800174c:	2300      	movs	r3, #0
 800174e:	6838      	ldr	r0, [r7, #0]
 8001750:	461a      	mov	r2, r3
 8001752:	f10d 0107 	add.w	r1, sp, #7
 8001756:	f00a fab5 	bl	800bcc4 <osMessageQueuePut>
            GPIO_PinState joy2ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY2_BUTTON_PIN);
 800175a:	2108      	movs	r1, #8
 800175c:	4650      	mov	r0, sl
 800175e:	f007 ff6f 	bl	8009640 <HAL_GPIO_ReadPin>
            if (joy2ButtonState == GPIO_PIN_RESET && lastJoy2ButtonState == GPIO_PIN_SET) {
 8001762:	4603      	mov	r3, r0
 8001764:	b9b0      	cbnz	r0, 8001794 <JoystickTask+0x154>
 8001766:	f1b8 0f01 	cmp.w	r8, #1
 800176a:	d009      	beq.n	8001780 <JoystickTask+0x140>
            lastJoy2ButtonState = joy2ButtonState;
 800176c:	f04f 0800 	mov.w	r8, #0
 8001770:	465e      	mov	r6, fp
 8001772:	e7b4      	b.n	80016de <JoystickTask+0x9e>
			} else if (adc_value2 > JOY_THRESHOLD_RIGHT) {
 8001774:	f640 33b8 	movw	r3, #3000	@ 0xbb8
 8001778:	429e      	cmp	r6, r3
 800177a:	d9ee      	bls.n	800175a <JoystickTask+0x11a>
				command = JOY2_RIGHT;
 800177c:	2303      	movs	r3, #3
 800177e:	e7e3      	b.n	8001748 <JoystickTask+0x108>
                command = JOY2_BUTTON;
 8001780:	2205      	movs	r2, #5
 8001782:	f88d 2007 	strb.w	r2, [sp, #7]
                osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 8001786:	f10d 0107 	add.w	r1, sp, #7
 800178a:	4602      	mov	r2, r0
 800178c:	6838      	ldr	r0, [r7, #0]
 800178e:	f00a fa99 	bl	800bcc4 <osMessageQueuePut>
 8001792:	e7eb      	b.n	800176c <JoystickTask+0x12c>
            lastJoy2ButtonState = joy2ButtonState;
 8001794:	4680      	mov	r8, r0
 8001796:	e7eb      	b.n	8001770 <JoystickTask+0x130>
 8001798:	20002e10 	.word	0x20002e10
 800179c:	20002dc0 	.word	0x20002dc0
 80017a0:	20002db8 	.word	0x20002db8
 80017a4:	40021800 	.word	0x40021800

080017a8 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80017a8:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80017aa:	4b06      	ldr	r3, [pc, #24]	@ (80017c4 <SPI5_Write+0x1c>)
{
 80017ac:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80017b0:	681b      	ldr	r3, [r3, #0]
 80017b2:	4805      	ldr	r0, [pc, #20]	@ (80017c8 <SPI5_Write+0x20>)
 80017b4:	2201      	movs	r2, #1
 80017b6:	f10d 0106 	add.w	r1, sp, #6
 80017ba:	f009 faff 	bl	800adbc <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80017be:	b003      	add	sp, #12
 80017c0:	f85d fb04 	ldr.w	pc, [sp], #4
 80017c4:	2000000c 	.word	0x2000000c
 80017c8:	20002e8c 	.word	0x20002e8c

080017cc <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80017cc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80017ce:	2064      	movs	r0, #100	@ 0x64
 80017d0:	f00a f992 	bl	800baf8 <osDelay>
  for(;;)
 80017d4:	e7fb      	b.n	80017ce <StartDefaultTask+0x2>
	...

080017d8 <SystemClock_Config>:
{
 80017d8:	b530      	push	{r4, r5, lr}
 80017da:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80017dc:	2210      	movs	r2, #16
 80017de:	2100      	movs	r1, #0
 80017e0:	a80a      	add	r0, sp, #40	@ 0x28
 80017e2:	f026 fd4c 	bl	802827e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80017e6:	2214      	movs	r2, #20
 80017e8:	2100      	movs	r1, #0
 80017ea:	a803      	add	r0, sp, #12
 80017ec:	f026 fd47 	bl	802827e <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80017f0:	2400      	movs	r4, #0
 80017f2:	4b1e      	ldr	r3, [pc, #120]	@ (800186c <SystemClock_Config+0x94>)
 80017f4:	9401      	str	r4, [sp, #4]
 80017f6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80017f8:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80017fc:	641a      	str	r2, [r3, #64]	@ 0x40
 80017fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001800:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001804:	9301      	str	r3, [sp, #4]
 8001806:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001808:	4b19      	ldr	r3, [pc, #100]	@ (8001870 <SystemClock_Config+0x98>)
 800180a:	9402      	str	r4, [sp, #8]
 800180c:	681a      	ldr	r2, [r3, #0]
 800180e:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001812:	601a      	str	r2, [r3, #0]
 8001814:	681b      	ldr	r3, [r3, #0]
 8001816:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800181a:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800181c:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800181e:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001820:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001824:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001828:	2502      	movs	r5, #2
 800182a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 800182e:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001830:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001834:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8001838:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800183c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800183e:	2304      	movs	r3, #4
 8001840:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001842:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001844:	f008 fd62 	bl	800a30c <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001848:	f008 fd26 	bl	800a298 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800184c:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800184e:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001852:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001856:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800185a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800185e:	2105      	movs	r1, #5
 8001860:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001862:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001864:	f008 ff2e 	bl	800a6c4 <HAL_RCC_ClockConfig>
}
 8001868:	b015      	add	sp, #84	@ 0x54
 800186a:	bd30      	pop	{r4, r5, pc}
 800186c:	40023800 	.word	0x40023800
 8001870:	40007000 	.word	0x40007000

08001874 <MX_ADC1_Init>:
void MX_ADC1_Init(void){
 8001874:	b082      	sub	sp, #8
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001876:	2300      	movs	r3, #0
 8001878:	4a0f      	ldr	r2, [pc, #60]	@ (80018b8 <MX_ADC1_Init+0x44>)
 800187a:	9301      	str	r3, [sp, #4]
 800187c:	6c51      	ldr	r1, [r2, #68]	@ 0x44
      hadc1.Instance = ADC1;
 800187e:	480f      	ldr	r0, [pc, #60]	@ (80018bc <MX_ADC1_Init+0x48>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001880:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
 8001884:	6451      	str	r1, [r2, #68]	@ 0x44
 8001886:	6c52      	ldr	r2, [r2, #68]	@ 0x44
      hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001888:	6083      	str	r3, [r0, #8]
    __HAL_RCC_ADC1_CLK_ENABLE();
 800188a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800188e:	9201      	str	r2, [sp, #4]
 8001890:	9a01      	ldr	r2, [sp, #4]
      hadc1.Instance = ADC1;
 8001892:	4a0b      	ldr	r2, [pc, #44]	@ (80018c0 <MX_ADC1_Init+0x4c>)
      hadc1.Init.ScanConvMode = DISABLE;
 8001894:	6103      	str	r3, [r0, #16]
      hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001896:	e9c0 2300 	strd	r2, r3, [r0]
      hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800189a:	4a0a      	ldr	r2, [pc, #40]	@ (80018c4 <MX_ADC1_Init+0x50>)
 800189c:	6282      	str	r2, [r0, #40]	@ 0x28
      hadc1.Init.NbrOfConversion = 1;
 800189e:	2201      	movs	r2, #1
      hadc1.Init.ContinuousConvMode = DISABLE;
 80018a0:	7603      	strb	r3, [r0, #24]
      hadc1.Init.DiscontinuousConvMode = DISABLE;
 80018a2:	f880 3020 	strb.w	r3, [r0, #32]
      hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80018a6:	62c3      	str	r3, [r0, #44]	@ 0x2c
      hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80018a8:	60c3      	str	r3, [r0, #12]
      hadc1.Init.NbrOfConversion = 1;
 80018aa:	61c2      	str	r2, [r0, #28]
      hadc1.Init.DMAContinuousRequests = DISABLE;
 80018ac:	f880 3030 	strb.w	r3, [r0, #48]	@ 0x30
      hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80018b0:	6142      	str	r2, [r0, #20]
}
 80018b2:	b002      	add	sp, #8
    HAL_ADC_Init(&hadc1);
 80018b4:	f007 ba52 	b.w	8008d5c <HAL_ADC_Init>
 80018b8:	40023800 	.word	0x40023800
 80018bc:	20002e10 	.word	0x20002e10
 80018c0:	40012000 	.word	0x40012000
 80018c4:	0f000001 	.word	0x0f000001

080018c8 <MX_USART1_UART_Init>:
{
 80018c8:	b082      	sub	sp, #8
    __HAL_RCC_USART1_CLK_ENABLE();
 80018ca:	2300      	movs	r3, #0
 80018cc:	4a0d      	ldr	r2, [pc, #52]	@ (8001904 <MX_USART1_UART_Init+0x3c>)
 80018ce:	9301      	str	r3, [sp, #4]
 80018d0:	6c51      	ldr	r1, [r2, #68]	@ 0x44
    huart1.Instance = USART1;
 80018d2:	480d      	ldr	r0, [pc, #52]	@ (8001908 <MX_USART1_UART_Init+0x40>)
    __HAL_RCC_USART1_CLK_ENABLE();
 80018d4:	f041 0110 	orr.w	r1, r1, #16
 80018d8:	6451      	str	r1, [r2, #68]	@ 0x44
 80018da:	6c52      	ldr	r2, [r2, #68]	@ 0x44
    huart1.Init.BaudRate = 115200;
 80018dc:	490b      	ldr	r1, [pc, #44]	@ (800190c <MX_USART1_UART_Init+0x44>)
    huart1.Init.Parity = UART_PARITY_NONE;
 80018de:	6103      	str	r3, [r0, #16]
    __HAL_RCC_USART1_CLK_ENABLE();
 80018e0:	f002 0210 	and.w	r2, r2, #16
 80018e4:	9201      	str	r2, [sp, #4]
 80018e6:	9a01      	ldr	r2, [sp, #4]
    huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80018e8:	61c3      	str	r3, [r0, #28]
    huart1.Init.BaudRate = 115200;
 80018ea:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80018ee:	e9c0 1200 	strd	r1, r2, [r0]
    huart1.Init.Mode = UART_MODE_TX_RX;
 80018f2:	220c      	movs	r2, #12
    huart1.Init.StopBits = UART_STOPBITS_1;
 80018f4:	e9c0 3302 	strd	r3, r3, [r0, #8]
    huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80018f8:	e9c0 2305 	strd	r2, r3, [r0, #20]
}
 80018fc:	b002      	add	sp, #8
    if (HAL_UART_Init(&huart1) != HAL_OK)
 80018fe:	f009 bf5c 	b.w	800b7ba <HAL_UART_Init>
 8001902:	bf00      	nop
 8001904:	40023800 	.word	0x40023800
 8001908:	20002dd0 	.word	0x20002dd0
 800190c:	40011000 	.word	0x40011000

08001910 <main>:
{
 8001910:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001914:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8001916:	f007 f9df 	bl	8008cd8 <HAL_Init>
  MX_ADC1_Init();
 800191a:	f7ff ffab 	bl	8001874 <MX_ADC1_Init>
  SystemClock_Config();
 800191e:	f7ff ff5b 	bl	80017d8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001922:	2214      	movs	r2, #20
 8001924:	2100      	movs	r1, #0
 8001926:	a80d      	add	r0, sp, #52	@ 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001928:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800192a:	f026 fca8 	bl	802827e <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800192e:	4bc6      	ldr	r3, [pc, #792]	@ (8001c48 <main+0x338>)
 8001930:	9400      	str	r4, [sp, #0]
 8001932:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001934:	48c5      	ldr	r0, [pc, #788]	@ (8001c4c <main+0x33c>)
  hi2c3.Instance = I2C3;
 8001936:	4dc6      	ldr	r5, [pc, #792]	@ (8001c50 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001938:	f042 0210 	orr.w	r2, r2, #16
 800193c:	631a      	str	r2, [r3, #48]	@ 0x30
 800193e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001940:	f002 0210 	and.w	r2, r2, #16
 8001944:	9200      	str	r2, [sp, #0]
 8001946:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001948:	9401      	str	r4, [sp, #4]
 800194a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800194c:	f042 0220 	orr.w	r2, r2, #32
 8001950:	631a      	str	r2, [r3, #48]	@ 0x30
 8001952:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001954:	f002 0220 	and.w	r2, r2, #32
 8001958:	9201      	str	r2, [sp, #4]
 800195a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800195c:	9402      	str	r4, [sp, #8]
 800195e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001960:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001964:	631a      	str	r2, [r3, #48]	@ 0x30
 8001966:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001968:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800196c:	9202      	str	r2, [sp, #8]
 800196e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001970:	9403      	str	r4, [sp, #12]
 8001972:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001974:	f042 0204 	orr.w	r2, r2, #4
 8001978:	631a      	str	r2, [r3, #48]	@ 0x30
 800197a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800197c:	f002 0204 	and.w	r2, r2, #4
 8001980:	9203      	str	r2, [sp, #12]
 8001982:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001984:	9404      	str	r4, [sp, #16]
 8001986:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001988:	f042 0201 	orr.w	r2, r2, #1
 800198c:	631a      	str	r2, [r3, #48]	@ 0x30
 800198e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001990:	f002 0201 	and.w	r2, r2, #1
 8001994:	9204      	str	r2, [sp, #16]
 8001996:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001998:	9405      	str	r4, [sp, #20]
 800199a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800199c:	f042 0202 	orr.w	r2, r2, #2
 80019a0:	631a      	str	r2, [r3, #48]	@ 0x30
 80019a2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019a4:	f002 0202 	and.w	r2, r2, #2
 80019a8:	9205      	str	r2, [sp, #20]
 80019aa:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80019ac:	9406      	str	r4, [sp, #24]
 80019ae:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019b0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80019b4:	631a      	str	r2, [r3, #48]	@ 0x30
 80019b6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019b8:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80019bc:	9206      	str	r2, [sp, #24]
 80019be:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80019c0:	9407      	str	r4, [sp, #28]
 80019c2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019c4:	f042 0208 	orr.w	r2, r2, #8
 80019c8:	631a      	str	r2, [r3, #48]	@ 0x30
 80019ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019cc:	f003 0308 	and.w	r3, r3, #8
 80019d0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80019d2:	4622      	mov	r2, r4
 80019d4:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80019d6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80019d8:	f007 fe38 	bl	800964c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019dc:	489d      	ldr	r0, [pc, #628]	@ (8001c54 <main+0x344>)
 80019de:	4622      	mov	r2, r4
 80019e0:	2104      	movs	r1, #4
 80019e2:	f007 fe33 	bl	800964c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80019e6:	4622      	mov	r2, r4
 80019e8:	489b      	ldr	r0, [pc, #620]	@ (8001c58 <main+0x348>)
 80019ea:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 80019ee:	f007 fe2d 	bl	800964c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019f2:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019f4:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019f8:	233c      	movs	r3, #60	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019fa:	4894      	ldr	r0, [pc, #592]	@ (8001c4c <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019fc:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a00:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a02:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001a04:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a08:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a0c:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a0e:	f007 fd33 	bl	8009478 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a12:	4890      	ldr	r0, [pc, #576]	@ (8001c54 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a14:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a16:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a18:	e9cd a60d 	strd	sl, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a1c:	9710      	str	r7, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a1e:	f007 fd2b 	bl	8009478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001a22:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a26:	488c      	ldr	r0, [pc, #560]	@ (8001c58 <main+0x348>)
 8001a28:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a2a:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a2e:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a32:	f007 fd21 	bl	8009478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_5;
 8001a36:	2321      	movs	r3, #33	@ 0x21
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a38:	4888      	ldr	r0, [pc, #544]	@ (8001c5c <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a3a:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a3c:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a3e:	e9cd 380d 	strd	r3, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a42:	f007 fd19 	bl	8009478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001a46:	230c      	movs	r3, #12
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a48:	4885      	ldr	r0, [pc, #532]	@ (8001c60 <main+0x350>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a4a:	960f      	str	r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a4c:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001a4e:	f04f 0b07 	mov.w	fp, #7
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001a52:	e9cd 340d 	strd	r3, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a56:	f007 fd0f 	bl	8009478 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a5a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_9 | GPIO_PIN_10;
 8001a5c:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a60:	487e      	ldr	r0, [pc, #504]	@ (8001c5c <main+0x34c>)
  GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001a62:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a66:	e9cd 370d 	strd	r3, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a6a:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a6e:	f007 fd03 	bl	8009478 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001a72:	487c      	ldr	r0, [pc, #496]	@ (8001c64 <main+0x354>)
 8001a74:	4b7c      	ldr	r3, [pc, #496]	@ (8001c68 <main+0x358>)
 8001a76:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001a78:	f007 fbf4 	bl	8009264 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001a7c:	4a7b      	ldr	r2, [pc, #492]	@ (8001c6c <main+0x35c>)
 8001a7e:	4b7c      	ldr	r3, [pc, #496]	@ (8001c70 <main+0x360>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001a80:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001a82:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001a86:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001a88:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001a8c:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001a90:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001a94:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001a98:	f007 ffe6 	bl	8009a68 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001a9c:	2110      	movs	r1, #16
 8001a9e:	4628      	mov	r0, r5
 8001aa0:	f008 fa2a 	bl	8009ef8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001aa4:	4621      	mov	r1, r4
 8001aa6:	4628      	mov	r0, r5
 8001aa8:	f008 fa45 	bl	8009f36 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001aac:	4871      	ldr	r0, [pc, #452]	@ (8001c74 <main+0x364>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001aae:	4972      	ldr	r1, [pc, #456]	@ (8001c78 <main+0x368>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001ab0:	6284      	str	r4, [r0, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001ab2:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001ab6:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001aba:	f44f 7500 	mov.w	r5, #512	@ 0x200
 8001abe:	2318      	movs	r3, #24
  hspi5.Init.CRCPolynomial = 10;
 8001ac0:	f04f 090a 	mov.w	r9, #10
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001ac4:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001ac8:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001acc:	4d6b      	ldr	r5, [pc, #428]	@ (8001c7c <main+0x36c>)
  hspi5.Init.CRCPolynomial = 10;
 8001ace:	f8c0 902c 	str.w	r9, [r0, #44]	@ 0x2c
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001ad2:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001ad6:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001ada:	f009 f913 	bl	800ad04 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001ade:	4b68      	ldr	r3, [pc, #416]	@ (8001c80 <main+0x370>)
  SdramTiming.RCDDelay = 2;
 8001ae0:	9713      	str	r7, [sp, #76]	@ 0x4c
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001ae2:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001ae6:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001aea:	2340      	movs	r3, #64	@ 0x40
 8001aec:	e9c5 c304 	strd	ip, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001af0:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001af4:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001af8:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001afc:	e9c5 3408 	strd	r3, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001b00:	a90d      	add	r1, sp, #52	@ 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001b02:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001b06:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001b08:	62ab      	str	r3, [r5, #40]	@ 0x28
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001b0a:	e9c5 4a02 	strd	r4, sl, [r5, #8]
  SdramTiming.RowCycleDelay = 7;
 8001b0e:	e9cd ab0f 	strd	sl, fp, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001b12:	e9cd 7b0d 	strd	r7, fp, [sp, #52]	@ 0x34
  SdramTiming.RPDelay = 2;
 8001b16:	e9cd 8711 	strd	r8, r7, [sp, #68]	@ 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b1a:	f04f 0b08 	mov.w	fp, #8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001b1e:	f008 ffd5 	bl	800aacc <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b22:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001b26:	a909      	add	r1, sp, #36	@ 0x24
 8001b28:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001b2a:	e9cd b60a 	strd	fp, r6, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8001b2e:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001b30:	9609      	str	r6, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001b32:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b34:	f008 ffea 	bl	800ab0c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001b38:	4630      	mov	r0, r6
 8001b3a:	f007 f8f9 	bl	8008d30 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b3e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001b42:	a909      	add	r1, sp, #36	@ 0x24
 8001b44:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b46:	e9cd 7b09 	strd	r7, fp, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001b4a:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b4e:	f008 ffdd 	bl	800ab0c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b52:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001b56:	a909      	add	r1, sp, #36	@ 0x24
 8001b58:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b5a:	e9cd 8b09 	strd	r8, fp, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001b5e:	e9cd a40b 	strd	sl, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b62:	f008 ffd3 	bl	800ab0c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001b66:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8001b6a:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001b6c:	9b08      	ldr	r3, [sp, #32]
 8001b6e:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b70:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001b74:	a909      	add	r1, sp, #36	@ 0x24
 8001b76:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b78:	e9cd ab09 	strd	sl, fp, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8001b7c:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b7e:	f008 ffc5 	bl	800ab0c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001b82:	f240 516a 	movw	r1, #1386	@ 0x56a
 8001b86:	4628      	mov	r0, r5
 8001b88:	f008 ffde 	bl	800ab48 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001b8c:	2234      	movs	r2, #52	@ 0x34
 8001b8e:	4621      	mov	r1, r4
 8001b90:	eb0d 0002 	add.w	r0, sp, r2
 8001b94:	f026 fb73 	bl	802827e <memset>
  hltdc.Instance = LTDC;
 8001b98:	4d3a      	ldr	r5, [pc, #232]	@ (8001c84 <main+0x374>)
 8001b9a:	4b3b      	ldr	r3, [pc, #236]	@ (8001c88 <main+0x378>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001b9c:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001b9e:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001ba2:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001ba4:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001ba8:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 8001baa:	f240 1e0d 	movw	lr, #269	@ 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 8001bae:	e9c5 3807 	strd	r3, r8, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001bb2:	f240 1343 	movw	r3, #323	@ 0x143
 8001bb6:	e9c5 e309 	strd	lr, r3, [r5, #36]	@ 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001bba:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001bbc:	f240 1347 	movw	r3, #327	@ 0x147
 8001bc0:	f240 1817 	movw	r8, #279	@ 0x117
 8001bc4:	e9c5 830b 	strd	r8, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001bc8:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8001bcc:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001bce:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001bd2:	f008 fa4b 	bl	800a06c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001bd6:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 8001bd8:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 8001bda:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001bde:	f44f 6a80 	mov.w	sl, #1024	@ 0x400
 8001be2:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001be4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.WindowY0 = 0;
 8001be8:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001bec:	e9cd a114 	strd	sl, r1, [sp, #80]	@ 0x50
  pLayerCfg.ImageWidth = 240;
 8001bf0:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001bf4:	a90d      	add	r1, sp, #52	@ 0x34
 8001bf6:	4622      	mov	r2, r4
 8001bf8:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001bfa:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  LcdDrv = &ili9341_drv;
 8001bfe:	4d23      	ldr	r5, [pc, #140]	@ (8001c8c <main+0x37c>)
  pLayerCfg.ImageHeight = 320;
 8001c00:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.WindowX0 = 0;
 8001c02:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001c04:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001c08:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001c0c:	f008 faf9 	bl	800a202 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001c10:	4b1f      	ldr	r3, [pc, #124]	@ (8001c90 <main+0x380>)
 8001c12:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001c14:	681b      	ldr	r3, [r3, #0]
 8001c16:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001c18:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001c1a:	4d1e      	ldr	r5, [pc, #120]	@ (8001c94 <main+0x384>)
  LcdDrv->DisplayOff();
 8001c1c:	68db      	ldr	r3, [r3, #12]
 8001c1e:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001c20:	4b1d      	ldr	r3, [pc, #116]	@ (8001c98 <main+0x388>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001c22:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001c24:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001c28:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001c2c:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001c30:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001c34:	f007 fb26 	bl	8009284 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001c38:	4631      	mov	r1, r6
 8001c3a:	4628      	mov	r0, r5
 8001c3c:	f007 fbd8 	bl	80093f0 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001c40:	f7fe fd36 	bl	80006b0 <MX_TouchGFX_Init>
 8001c44:	e02a      	b.n	8001c9c <main+0x38c>
 8001c46:	bf00      	nop
 8001c48:	40023800 	.word	0x40023800
 8001c4c:	40021000 	.word	0x40021000
 8001c50:	20002f8c 	.word	0x20002f8c
 8001c54:	40020800 	.word	0x40020800
 8001c58:	40020c00 	.word	0x40020c00
 8001c5c:	40020000 	.word	0x40020000
 8001c60:	40021800 	.word	0x40021800
 8001c64:	20003020 	.word	0x20003020
 8001c68:	40023000 	.word	0x40023000
 8001c6c:	40005c00 	.word	0x40005c00
 8001c70:	000186a0 	.word	0x000186a0
 8001c74:	20002e8c 	.word	0x20002e8c
 8001c78:	40015000 	.word	0x40015000
 8001c7c:	20002e58 	.word	0x20002e58
 8001c80:	a0000140 	.word	0xa0000140
 8001c84:	20002ee4 	.word	0x20002ee4
 8001c88:	40016800 	.word	0x40016800
 8001c8c:	20002dbc 	.word	0x20002dbc
 8001c90:	20000014 	.word	0x20000014
 8001c94:	20002fe0 	.word	0x20002fe0
 8001c98:	4002b000 	.word	0x4002b000
  MX_TouchGFX_PreOSInit();
 8001c9c:	f7fe fd07 	bl	80006ae <MX_TouchGFX_PreOSInit>
  MX_USART1_UART_Init();
 8001ca0:	f7ff fe12 	bl	80018c8 <MX_USART1_UART_Init>
  osKernelInitialize();
 8001ca4:	f009 feb8 	bl	800ba18 <osKernelInitialize>
  joystickQueueHandle = osMessageQueueNew(10, sizeof(JoystickCommand_t), &joystickQueue_attributes);
 8001ca8:	4a0f      	ldr	r2, [pc, #60]	@ (8001ce8 <main+0x3d8>)
 8001caa:	4631      	mov	r1, r6
 8001cac:	4648      	mov	r0, r9
 8001cae:	f009 ffce 	bl	800bc4e <osMessageQueueNew>
 8001cb2:	4b0e      	ldr	r3, [pc, #56]	@ (8001cec <main+0x3dc>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cb4:	4a0e      	ldr	r2, [pc, #56]	@ (8001cf0 <main+0x3e0>)
  joystickQueueHandle = osMessageQueueNew(10, sizeof(JoystickCommand_t), &joystickQueue_attributes);
 8001cb6:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cb8:	4621      	mov	r1, r4
 8001cba:	480e      	ldr	r0, [pc, #56]	@ (8001cf4 <main+0x3e4>)
 8001cbc:	f009 fed8 	bl	800ba70 <osThreadNew>
 8001cc0:	4b0d      	ldr	r3, [pc, #52]	@ (8001cf8 <main+0x3e8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cc2:	4a0e      	ldr	r2, [pc, #56]	@ (8001cfc <main+0x3ec>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cc4:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cc6:	4621      	mov	r1, r4
 8001cc8:	480d      	ldr	r0, [pc, #52]	@ (8001d00 <main+0x3f0>)
 8001cca:	f009 fed1 	bl	800ba70 <osThreadNew>
 8001cce:	4b0d      	ldr	r3, [pc, #52]	@ (8001d04 <main+0x3f4>)
  joystickTaskHandle = osThreadNew(JoystickTask, NULL, &joystickTask_attributes);
 8001cd0:	4a0d      	ldr	r2, [pc, #52]	@ (8001d08 <main+0x3f8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cd2:	6018      	str	r0, [r3, #0]
  joystickTaskHandle = osThreadNew(JoystickTask, NULL, &joystickTask_attributes);
 8001cd4:	4621      	mov	r1, r4
 8001cd6:	480d      	ldr	r0, [pc, #52]	@ (8001d0c <main+0x3fc>)
 8001cd8:	f009 feca 	bl	800ba70 <osThreadNew>
 8001cdc:	4b0c      	ldr	r3, [pc, #48]	@ (8001d10 <main+0x400>)
 8001cde:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001ce0:	f009 feac 	bl	800ba3c <osKernelStart>
  while (1)
 8001ce4:	e7fe      	b.n	8001ce4 <main+0x3d4>
 8001ce6:	bf00      	nop
 8001ce8:	0802a4c4 	.word	0x0802a4c4
 8001cec:	20002dc0 	.word	0x20002dc0
 8001cf0:	0802a524 	.word	0x0802a524
 8001cf4:	080017cd 	.word	0x080017cd
 8001cf8:	20002dcc 	.word	0x20002dcc
 8001cfc:	0802a500 	.word	0x0802a500
 8001d00:	080006bf 	.word	0x080006bf
 8001d04:	20002dc8 	.word	0x20002dc8
 8001d08:	0802a4dc 	.word	0x0802a4dc
 8001d0c:	08001641 	.word	0x08001641
 8001d10:	20002dc4 	.word	0x20002dc4

08001d14 <IOE_Init>:
void IOE_Init(void)
 8001d14:	4770      	bx	lr

08001d16 <IOE_ITConfig>:
void IOE_ITConfig(void)
 8001d16:	4770      	bx	lr

08001d18 <IOE_Write>:
{
 8001d18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d1a:	4b09      	ldr	r3, [pc, #36]	@ (8001d40 <IOE_Write+0x28>)
 8001d1c:	f88d 2017 	strb.w	r2, [sp, #23]
 8001d20:	681b      	ldr	r3, [r3, #0]
 8001d22:	9302      	str	r3, [sp, #8]
 8001d24:	f10d 0217 	add.w	r2, sp, #23
 8001d28:	2301      	movs	r3, #1
 8001d2a:	9200      	str	r2, [sp, #0]
 8001d2c:	9301      	str	r3, [sp, #4]
 8001d2e:	460a      	mov	r2, r1
 8001d30:	4601      	mov	r1, r0
 8001d32:	4804      	ldr	r0, [pc, #16]	@ (8001d44 <IOE_Write+0x2c>)
 8001d34:	f007 ff40 	bl	8009bb8 <HAL_I2C_Mem_Write>
}
 8001d38:	b007      	add	sp, #28
 8001d3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d3e:	bf00      	nop
 8001d40:	20000010 	.word	0x20000010
 8001d44:	20002f8c 	.word	0x20002f8c

08001d48 <IOE_Read>:
{
 8001d48:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001d4a:	2300      	movs	r3, #0
 8001d4c:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d50:	4b08      	ldr	r3, [pc, #32]	@ (8001d74 <IOE_Read+0x2c>)
 8001d52:	681b      	ldr	r3, [r3, #0]
 8001d54:	9302      	str	r3, [sp, #8]
{
 8001d56:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d58:	2301      	movs	r3, #1
 8001d5a:	f10d 0117 	add.w	r1, sp, #23
 8001d5e:	9100      	str	r1, [sp, #0]
 8001d60:	9301      	str	r3, [sp, #4]
 8001d62:	4601      	mov	r1, r0
 8001d64:	4804      	ldr	r0, [pc, #16]	@ (8001d78 <IOE_Read+0x30>)
 8001d66:	f007 ffb7 	bl	8009cd8 <HAL_I2C_Mem_Read>
}
 8001d6a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001d6e:	b007      	add	sp, #28
 8001d70:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d74:	20000010 	.word	0x20000010
 8001d78:	20002f8c 	.word	0x20002f8c

08001d7c <IOE_ReadMultiple>:
{
 8001d7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001d7e:	4c08      	ldr	r4, [pc, #32]	@ (8001da0 <IOE_ReadMultiple+0x24>)
 8001d80:	6824      	ldr	r4, [r4, #0]
 8001d82:	9200      	str	r2, [sp, #0]
 8001d84:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001d88:	460a      	mov	r2, r1
 8001d8a:	2301      	movs	r3, #1
 8001d8c:	4601      	mov	r1, r0
 8001d8e:	4805      	ldr	r0, [pc, #20]	@ (8001da4 <IOE_ReadMultiple+0x28>)
 8001d90:	f007 ffa2 	bl	8009cd8 <HAL_I2C_Mem_Read>
}
 8001d94:	3800      	subs	r0, #0
 8001d96:	bf18      	it	ne
 8001d98:	2001      	movne	r0, #1
 8001d9a:	b004      	add	sp, #16
 8001d9c:	bd10      	pop	{r4, pc}
 8001d9e:	bf00      	nop
 8001da0:	20000010 	.word	0x20000010
 8001da4:	20002f8c 	.word	0x20002f8c

08001da8 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8001da8:	f006 bfc2 	b.w	8008d30 <HAL_Delay>

08001dac <LCD_IO_Init>:
{
 8001dac:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dae:	4c06      	ldr	r4, [pc, #24]	@ (8001dc8 <LCD_IO_Init+0x1c>)
 8001db0:	2200      	movs	r2, #0
 8001db2:	4620      	mov	r0, r4
 8001db4:	2104      	movs	r1, #4
 8001db6:	f007 fc49 	bl	800964c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001dba:	4620      	mov	r0, r4
 8001dbc:	2201      	movs	r2, #1
}
 8001dbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001dc2:	2104      	movs	r1, #4
 8001dc4:	f007 bc42 	b.w	800964c <HAL_GPIO_WritePin>
 8001dc8:	40020800 	.word	0x40020800

08001dcc <LCD_IO_WriteData>:
{
 8001dcc:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dce:	4d0b      	ldr	r5, [pc, #44]	@ (8001dfc <LCD_IO_WriteData+0x30>)
{
 8001dd0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001dd2:	2201      	movs	r2, #1
 8001dd4:	480a      	ldr	r0, [pc, #40]	@ (8001e00 <LCD_IO_WriteData+0x34>)
 8001dd6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001dda:	f007 fc37 	bl	800964c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dde:	2200      	movs	r2, #0
 8001de0:	2104      	movs	r1, #4
 8001de2:	4628      	mov	r0, r5
 8001de4:	f007 fc32 	bl	800964c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001de8:	4620      	mov	r0, r4
 8001dea:	f7ff fcdd 	bl	80017a8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001dee:	4628      	mov	r0, r5
 8001df0:	2201      	movs	r2, #1
}
 8001df2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001df6:	2104      	movs	r1, #4
 8001df8:	f007 bc28 	b.w	800964c <HAL_GPIO_WritePin>
 8001dfc:	40020800 	.word	0x40020800
 8001e00:	40020c00 	.word	0x40020c00

08001e04 <LCD_IO_WriteReg>:
{
 8001e04:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e06:	4d0b      	ldr	r5, [pc, #44]	@ (8001e34 <LCD_IO_WriteReg+0x30>)
{
 8001e08:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e0a:	2200      	movs	r2, #0
 8001e0c:	480a      	ldr	r0, [pc, #40]	@ (8001e38 <LCD_IO_WriteReg+0x34>)
 8001e0e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001e12:	f007 fc1b 	bl	800964c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e16:	2200      	movs	r2, #0
 8001e18:	2104      	movs	r1, #4
 8001e1a:	4628      	mov	r0, r5
 8001e1c:	f007 fc16 	bl	800964c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001e20:	4620      	mov	r0, r4
 8001e22:	f7ff fcc1 	bl	80017a8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e26:	4628      	mov	r0, r5
 8001e28:	2201      	movs	r2, #1
}
 8001e2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e2e:	2104      	movs	r1, #4
 8001e30:	f007 bc0c 	b.w	800964c <HAL_GPIO_WritePin>
 8001e34:	40020800 	.word	0x40020800
 8001e38:	40020c00 	.word	0x40020c00

08001e3c <LCD_IO_ReadData>:
{
 8001e3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e3e:	4e14      	ldr	r6, [pc, #80]	@ (8001e90 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e40:	4f14      	ldr	r7, [pc, #80]	@ (8001e94 <LCD_IO_ReadData+0x58>)
{
 8001e42:	4605      	mov	r5, r0
 8001e44:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e46:	4630      	mov	r0, r6
 8001e48:	2200      	movs	r2, #0
 8001e4a:	2104      	movs	r1, #4
 8001e4c:	f007 fbfe 	bl	800964c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e50:	2200      	movs	r2, #0
 8001e52:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001e56:	4638      	mov	r0, r7
 8001e58:	f007 fbf8 	bl	800964c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001e5c:	4628      	mov	r0, r5
 8001e5e:	f7ff fca3 	bl	80017a8 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001e62:	4b0d      	ldr	r3, [pc, #52]	@ (8001e98 <LCD_IO_ReadData+0x5c>)
 8001e64:	480d      	ldr	r0, [pc, #52]	@ (8001e9c <LCD_IO_ReadData+0x60>)
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	4622      	mov	r2, r4
 8001e6a:	a901      	add	r1, sp, #4
 8001e6c:	f009 f952 	bl	800b114 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e70:	4638      	mov	r0, r7
 8001e72:	2201      	movs	r2, #1
 8001e74:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8001e78:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e7a:	f007 fbe7 	bl	800964c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e7e:	4630      	mov	r0, r6
 8001e80:	2201      	movs	r2, #1
 8001e82:	2104      	movs	r1, #4
 8001e84:	f007 fbe2 	bl	800964c <HAL_GPIO_WritePin>
}
 8001e88:	4620      	mov	r0, r4
 8001e8a:	b003      	add	sp, #12
 8001e8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e8e:	bf00      	nop
 8001e90:	40020800 	.word	0x40020800
 8001e94:	40020c00 	.word	0x40020c00
 8001e98:	2000000c 	.word	0x2000000c
 8001e9c:	20002e8c 	.word	0x20002e8c

08001ea0 <LCD_Delay>:
  HAL_Delay(Delay);
 8001ea0:	f006 bf46 	b.w	8008d30 <HAL_Delay>

08001ea4 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001ea4:	6802      	ldr	r2, [r0, #0]
 8001ea6:	4b03      	ldr	r3, [pc, #12]	@ (8001eb4 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001ea8:	429a      	cmp	r2, r3
 8001eaa:	d101      	bne.n	8001eb0 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001eac:	f006 bf2e 	b.w	8008d0c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001eb0:	4770      	bx	lr
 8001eb2:	bf00      	nop
 8001eb4:	40001000 	.word	0x40001000

08001eb8 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001eb8:	4770      	bx	lr
	...

08001ebc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001ebc:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ebe:	4b0e      	ldr	r3, [pc, #56]	@ (8001ef8 <HAL_MspInit+0x3c>)
 8001ec0:	2200      	movs	r2, #0
 8001ec2:	9200      	str	r2, [sp, #0]
 8001ec4:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001ec6:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8001eca:	6459      	str	r1, [r3, #68]	@ 0x44
 8001ecc:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001ece:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 8001ed2:	9100      	str	r1, [sp, #0]
 8001ed4:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001ed6:	9201      	str	r2, [sp, #4]
 8001ed8:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8001eda:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8001ede:	6419      	str	r1, [r3, #64]	@ 0x40
 8001ee0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ee2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001ee6:	9301      	str	r3, [sp, #4]
 8001ee8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001eea:	210f      	movs	r1, #15
 8001eec:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ef0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ef2:	f007 b977 	b.w	80091e4 <HAL_NVIC_SetPriority>
 8001ef6:	bf00      	nop
 8001ef8:	40023800 	.word	0x40023800

08001efc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001efc:	6802      	ldr	r2, [r0, #0]
 8001efe:	4b09      	ldr	r3, [pc, #36]	@ (8001f24 <HAL_CRC_MspInit+0x28>)
 8001f00:	429a      	cmp	r2, r3
{
 8001f02:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001f04:	d10b      	bne.n	8001f1e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001f06:	2300      	movs	r3, #0
 8001f08:	9301      	str	r3, [sp, #4]
 8001f0a:	4b07      	ldr	r3, [pc, #28]	@ (8001f28 <HAL_CRC_MspInit+0x2c>)
 8001f0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f0e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8001f12:	631a      	str	r2, [r3, #48]	@ 0x30
 8001f14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f16:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001f1a:	9301      	str	r3, [sp, #4]
 8001f1c:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 8001f1e:	b002      	add	sp, #8
 8001f20:	4770      	bx	lr
 8001f22:	bf00      	nop
 8001f24:	40023000 	.word	0x40023000
 8001f28:	40023800 	.word	0x40023800

08001f2c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001f2c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001f2e:	4b0f      	ldr	r3, [pc, #60]	@ (8001f6c <HAL_DMA2D_MspInit+0x40>)
 8001f30:	6802      	ldr	r2, [r0, #0]
 8001f32:	429a      	cmp	r2, r3
 8001f34:	d116      	bne.n	8001f64 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001f36:	2200      	movs	r2, #0
 8001f38:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8001f3c:	9201      	str	r2, [sp, #4]
 8001f3e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001f40:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8001f44:	6319      	str	r1, [r3, #48]	@ 0x30
 8001f46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f48:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001f4c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001f4e:	2105      	movs	r1, #5
 8001f50:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001f52:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001f54:	f007 f946 	bl	80091e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001f58:	205a      	movs	r0, #90	@ 0x5a

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
 8001f5a:	b003      	add	sp, #12
 8001f5c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001f60:	f007 b972 	b.w	8009248 <HAL_NVIC_EnableIRQ>
}
 8001f64:	b003      	add	sp, #12
 8001f66:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f6a:	bf00      	nop
 8001f6c:	4002b000 	.word	0x4002b000

08001f70 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001f70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001f74:	4604      	mov	r4, r0
 8001f76:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f78:	2214      	movs	r2, #20
 8001f7a:	2100      	movs	r1, #0
 8001f7c:	a803      	add	r0, sp, #12
 8001f7e:	f026 f97e 	bl	802827e <memset>
  if(hi2c->Instance==I2C3)
 8001f82:	6822      	ldr	r2, [r4, #0]
 8001f84:	4b24      	ldr	r3, [pc, #144]	@ (8002018 <HAL_I2C_MspInit+0xa8>)
 8001f86:	429a      	cmp	r2, r3
 8001f88:	d143      	bne.n	8002012 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f8a:	4c24      	ldr	r4, [pc, #144]	@ (800201c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f8c:	4824      	ldr	r0, [pc, #144]	@ (8002020 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f8e:	2500      	movs	r5, #0
 8001f90:	9500      	str	r5, [sp, #0]
 8001f92:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001f94:	f043 0304 	orr.w	r3, r3, #4
 8001f98:	6323      	str	r3, [r4, #48]	@ 0x30
 8001f9a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001f9c:	f003 0304 	and.w	r3, r3, #4
 8001fa0:	9300      	str	r3, [sp, #0]
 8001fa2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fa4:	9501      	str	r5, [sp, #4]
 8001fa6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001fa8:	f043 0301 	orr.w	r3, r3, #1
 8001fac:	6323      	str	r3, [r4, #48]	@ 0x30
 8001fae:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001fb0:	f003 0301 	and.w	r3, r3, #1
 8001fb4:	9301      	str	r3, [sp, #4]
 8001fb6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001fb8:	f04f 0912 	mov.w	r9, #18
 8001fbc:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fc0:	f04f 0801 	mov.w	r8, #1
 8001fc4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001fc6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fc8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001fca:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fce:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001fd2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fd4:	f007 fa50 	bl	8009478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001fd8:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fdc:	4811      	ldr	r0, [pc, #68]	@ (8002024 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001fde:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fe0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001fe2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fe6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fea:	f007 fa45 	bl	8009478 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001fee:	9502      	str	r5, [sp, #8]
 8001ff0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001ff2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001ff6:	6423      	str	r3, [r4, #64]	@ 0x40
 8001ff8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001ffa:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001ffe:	9302      	str	r3, [sp, #8]
 8002000:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002002:	6a23      	ldr	r3, [r4, #32]
 8002004:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002008:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800200a:	6a23      	ldr	r3, [r4, #32]
 800200c:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002010:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */

  }

}
 8002012:	b009      	add	sp, #36	@ 0x24
 8002014:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002018:	40005c00 	.word	0x40005c00
 800201c:	40023800 	.word	0x40023800
 8002020:	40020800 	.word	0x40020800
 8002024:	40020000 	.word	0x40020000

08002028 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002028:	b5f0      	push	{r4, r5, r6, r7, lr}
 800202a:	b099      	sub	sp, #100	@ 0x64
 800202c:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800202e:	2214      	movs	r2, #20
 8002030:	2100      	movs	r1, #0
 8002032:	a807      	add	r0, sp, #28
 8002034:	f026 f923 	bl	802827e <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002038:	2230      	movs	r2, #48	@ 0x30
 800203a:	eb0d 0002 	add.w	r0, sp, r2
 800203e:	2100      	movs	r1, #0
 8002040:	f026 f91d 	bl	802827e <memset>
  if(hltdc->Instance==LTDC)
 8002044:	6822      	ldr	r2, [r4, #0]
 8002046:	4b5e      	ldr	r3, [pc, #376]	@ (80021c0 <HAL_LTDC_MspInit+0x198>)
 8002048:	429a      	cmp	r2, r3
 800204a:	f040 80b7 	bne.w	80021bc <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800204e:	2308      	movs	r3, #8
 8002050:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002052:	23c0      	movs	r3, #192	@ 0xc0
 8002054:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002056:	2304      	movs	r3, #4
 8002058:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800205a:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800205c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8002060:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002062:	f008 fc07 	bl	800a874 <HAL_RCCEx_PeriphCLKConfig>
 8002066:	b108      	cbz	r0, 800206c <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8002068:	f7ff ff26 	bl	8001eb8 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 800206c:	4b55      	ldr	r3, [pc, #340]	@ (80021c4 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800206e:	4856      	ldr	r0, [pc, #344]	@ (80021c8 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002070:	2400      	movs	r4, #0
 8002072:	9400      	str	r4, [sp, #0]
 8002074:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002076:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 800207a:	645a      	str	r2, [r3, #68]	@ 0x44
 800207c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800207e:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8002082:	9200      	str	r2, [sp, #0]
 8002084:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002086:	9401      	str	r4, [sp, #4]
 8002088:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800208a:	f042 0220 	orr.w	r2, r2, #32
 800208e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002090:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002092:	f002 0220 	and.w	r2, r2, #32
 8002096:	9201      	str	r2, [sp, #4]
 8002098:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800209a:	9402      	str	r4, [sp, #8]
 800209c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800209e:	f042 0201 	orr.w	r2, r2, #1
 80020a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80020a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020a6:	f002 0201 	and.w	r2, r2, #1
 80020aa:	9202      	str	r2, [sp, #8]
 80020ac:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80020ae:	9403      	str	r4, [sp, #12]
 80020b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020b2:	f042 0202 	orr.w	r2, r2, #2
 80020b6:	631a      	str	r2, [r3, #48]	@ 0x30
 80020b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020ba:	f002 0202 	and.w	r2, r2, #2
 80020be:	9203      	str	r2, [sp, #12]
 80020c0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80020c2:	9404      	str	r4, [sp, #16]
 80020c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020c6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80020ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80020cc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020ce:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80020d2:	9204      	str	r2, [sp, #16]
 80020d4:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80020d6:	9405      	str	r4, [sp, #20]
 80020d8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020da:	f042 0204 	orr.w	r2, r2, #4
 80020de:	631a      	str	r2, [r3, #48]	@ 0x30
 80020e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020e2:	f002 0204 	and.w	r2, r2, #4
 80020e6:	9205      	str	r2, [sp, #20]
 80020e8:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80020ea:	9406      	str	r4, [sp, #24]
 80020ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020ee:	f042 0208 	orr.w	r2, r2, #8
 80020f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80020f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020f6:	f003 0308 	and.w	r3, r3, #8
 80020fa:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020fc:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020fe:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002100:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002102:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002104:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002108:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800210a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800210e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002112:	f007 f9b1 	bl	8009478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002116:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800211a:	482c      	ldr	r0, [pc, #176]	@ (80021cc <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800211c:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800211e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002120:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002124:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002126:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800212a:	f007 f9a5 	bl	8009478 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800212e:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002130:	4827      	ldr	r0, [pc, #156]	@ (80021d0 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002132:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002134:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002136:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800213a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800213e:	f007 f99b 	bl	8009478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002142:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002146:	4822      	ldr	r0, [pc, #136]	@ (80021d0 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002148:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800214a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800214c:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002150:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002154:	f007 f990 	bl	8009478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002158:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800215c:	481d      	ldr	r0, [pc, #116]	@ (80021d4 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800215e:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002160:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002162:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002166:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800216a:	f007 f985 	bl	8009478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800216e:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002170:	4819      	ldr	r0, [pc, #100]	@ (80021d8 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002172:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002174:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002176:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800217a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800217e:	f007 f97b 	bl	8009478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002182:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002184:	4815      	ldr	r0, [pc, #84]	@ (80021dc <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002186:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002188:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800218a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800218e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002192:	f007 f971 	bl	8009478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002196:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800219a:	480e      	ldr	r0, [pc, #56]	@ (80021d4 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800219c:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800219e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021a0:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80021a4:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021a8:	f007 f966 	bl	8009478 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80021ac:	2058      	movs	r0, #88	@ 0x58
 80021ae:	4622      	mov	r2, r4
 80021b0:	2105      	movs	r1, #5
 80021b2:	f007 f817 	bl	80091e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80021b6:	2058      	movs	r0, #88	@ 0x58
 80021b8:	f007 f846 	bl	8009248 <HAL_NVIC_EnableIRQ>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
 80021bc:	b019      	add	sp, #100	@ 0x64
 80021be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021c0:	40016800 	.word	0x40016800
 80021c4:	40023800 	.word	0x40023800
 80021c8:	40021400 	.word	0x40021400
 80021cc:	40020000 	.word	0x40020000
 80021d0:	40020400 	.word	0x40020400
 80021d4:	40021800 	.word	0x40021800
 80021d8:	40020800 	.word	0x40020800
 80021dc:	40020c00 	.word	0x40020c00

080021e0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80021e0:	b510      	push	{r4, lr}
 80021e2:	4604      	mov	r4, r0
 80021e4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021e6:	2214      	movs	r2, #20
 80021e8:	2100      	movs	r1, #0
 80021ea:	a803      	add	r0, sp, #12
 80021ec:	f026 f847 	bl	802827e <memset>
  if(hspi->Instance==SPI5)
 80021f0:	6822      	ldr	r2, [r4, #0]
 80021f2:	4b14      	ldr	r3, [pc, #80]	@ (8002244 <HAL_SPI_MspInit+0x64>)
 80021f4:	429a      	cmp	r2, r3
 80021f6:	d123      	bne.n	8002240 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80021f8:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 80021fc:	2100      	movs	r1, #0
 80021fe:	9101      	str	r1, [sp, #4]
 8002200:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002202:	4811      	ldr	r0, [pc, #68]	@ (8002248 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002204:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002208:	645a      	str	r2, [r3, #68]	@ 0x44
 800220a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800220c:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002210:	9201      	str	r2, [sp, #4]
 8002212:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002214:	9102      	str	r1, [sp, #8]
 8002216:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002218:	f042 0220 	orr.w	r2, r2, #32
 800221c:	631a      	str	r2, [r3, #48]	@ 0x30
 800221e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002220:	f003 0320 	and.w	r3, r3, #32
 8002224:	9302      	str	r3, [sp, #8]
 8002226:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002228:	f44f 7260 	mov.w	r2, #896	@ 0x380
 800222c:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800222e:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002230:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002234:	2305      	movs	r3, #5
 8002236:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800223a:	a903      	add	r1, sp, #12
 800223c:	f007 f91c 	bl	8009478 <HAL_GPIO_Init>

  /* USER CODE END SPI5_MspInit 1 */

  }

}
 8002240:	b008      	add	sp, #32
 8002242:	bd10      	pop	{r4, pc}
 8002244:	40015000 	.word	0x40015000
 8002248:	40021400 	.word	0x40021400

0800224c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800224c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002250:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002252:	2300      	movs	r3, #0
 8002254:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002256:	4b2b      	ldr	r3, [pc, #172]	@ (8002304 <HAL_SDRAM_MspInit+0xb8>)
 8002258:	681c      	ldr	r4, [r3, #0]
 800225a:	2c00      	cmp	r4, #0
 800225c:	d14f      	bne.n	80022fe <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 800225e:	f04f 0801 	mov.w	r8, #1
 8002262:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002266:	4b28      	ldr	r3, [pc, #160]	@ (8002308 <HAL_SDRAM_MspInit+0xbc>)
 8002268:	9400      	str	r4, [sp, #0]
 800226a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800226c:	4827      	ldr	r0, [pc, #156]	@ (800230c <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800226e:	ea42 0208 	orr.w	r2, r2, r8
 8002272:	639a      	str	r2, [r3, #56]	@ 0x38
 8002274:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002276:	ea03 0308 	and.w	r3, r3, r8
 800227a:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800227c:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800227e:	2603      	movs	r6, #3
 8002280:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002282:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002284:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002286:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 800228a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800228e:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002292:	f007 f8f1 	bl	8009478 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002296:	481e      	ldr	r0, [pc, #120]	@ (8002310 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002298:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800229a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800229c:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022a0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022a4:	f007 f8e8 	bl	8009478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80022a8:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022ac:	4819      	ldr	r0, [pc, #100]	@ (8002314 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022ae:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022b0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022b2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022b6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022ba:	f007 f8dd 	bl	8009478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80022be:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022c2:	4815      	ldr	r0, [pc, #84]	@ (8002318 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022c4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022c6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022c8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022cc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022d0:	f007 f8d2 	bl	8009478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80022d4:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022d8:	4810      	ldr	r0, [pc, #64]	@ (800231c <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022da:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022dc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022de:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022e2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022e6:	f007 f8c7 	bl	8009478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80022ea:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022ec:	480c      	ldr	r0, [pc, #48]	@ (8002320 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022ee:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022f0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022f2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022f6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022fa:	f007 f8bd 	bl	8009478 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80022fe:	b006      	add	sp, #24
 8002300:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002304:	20003028 	.word	0x20003028
 8002308:	40023800 	.word	0x40023800
 800230c:	40021400 	.word	0x40021400
 8002310:	40020800 	.word	0x40020800
 8002314:	40021800 	.word	0x40021800
 8002318:	40021000 	.word	0x40021000
 800231c:	40020c00 	.word	0x40020c00
 8002320:	40020400 	.word	0x40020400

08002324 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002324:	b570      	push	{r4, r5, r6, lr}
 8002326:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002328:	2300      	movs	r3, #0
 800232a:	9302      	str	r3, [sp, #8]
 800232c:	4b20      	ldr	r3, [pc, #128]	@ (80023b0 <HAL_InitTick+0x8c>)
 800232e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002330:	f042 0210 	orr.w	r2, r2, #16
 8002334:	641a      	str	r2, [r3, #64]	@ 0x40
 8002336:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002338:	f003 0310 	and.w	r3, r3, #16
 800233c:	9302      	str	r3, [sp, #8]
{
 800233e:	4605      	mov	r5, r0

/* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002340:	a901      	add	r1, sp, #4
 8002342:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002344:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002346:	f008 fa77 	bl	800a838 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800234a:	9b06      	ldr	r3, [sp, #24]
 800234c:	bb4b      	cbnz	r3, 80023a2 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800234e:	f008 fa53 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002352:	4e18      	ldr	r6, [pc, #96]	@ (80023b4 <HAL_InitTick+0x90>)
 8002354:	4b18      	ldr	r3, [pc, #96]	@ (80023b8 <HAL_InitTick+0x94>)
 8002356:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002358:	f240 33e7 	movw	r3, #999	@ 0x3e7
 800235c:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800235e:	4b17      	ldr	r3, [pc, #92]	@ (80023bc <HAL_InitTick+0x98>)
 8002360:	fbb0 f3f3 	udiv	r3, r0, r3
 8002364:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002366:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002368:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 800236a:	2300      	movs	r3, #0
 800236c:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800236e:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002370:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002372:	f009 f89f 	bl	800b4b4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002376:	4604      	mov	r4, r0
 8002378:	b980      	cbnz	r0, 800239c <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 800237a:	4630      	mov	r0, r6
 800237c:	f008 ff70 	bl	800b260 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002380:	4604      	mov	r4, r0
 8002382:	b958      	cbnz	r0, 800239c <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002384:	2036      	movs	r0, #54	@ 0x36
 8002386:	f006 ff5f 	bl	8009248 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800238a:	2d0f      	cmp	r5, #15
 800238c:	d80d      	bhi.n	80023aa <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800238e:	4622      	mov	r2, r4
 8002390:	4629      	mov	r1, r5
 8002392:	2036      	movs	r0, #54	@ 0x36
 8002394:	f006 ff26 	bl	80091e4 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002398:	4b09      	ldr	r3, [pc, #36]	@ (80023c0 <HAL_InitTick+0x9c>)
 800239a:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 800239c:	4620      	mov	r0, r4
 800239e:	b008      	add	sp, #32
 80023a0:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80023a2:	f008 fa29 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 80023a6:	0040      	lsls	r0, r0, #1
 80023a8:	e7d3      	b.n	8002352 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 80023aa:	2401      	movs	r4, #1
 80023ac:	e7f6      	b.n	800239c <HAL_InitTick+0x78>
 80023ae:	bf00      	nop
 80023b0:	40023800 	.word	0x40023800
 80023b4:	2000302c 	.word	0x2000302c
 80023b8:	40001000 	.word	0x40001000
 80023bc:	000f4240 	.word	0x000f4240
 80023c0:	2000007c 	.word	0x2000007c

080023c4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80023c4:	4770      	bx	lr

080023c6 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80023c6:	e7fe      	b.n	80023c6 <HardFault_Handler>

080023c8 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80023c8:	e7fe      	b.n	80023c8 <MemManage_Handler>

080023ca <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80023ca:	e7fe      	b.n	80023ca <BusFault_Handler>

080023cc <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80023cc:	e7fe      	b.n	80023cc <UsageFault_Handler>

080023ce <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 80023ce:	4770      	bx	lr

080023d0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80023d0:	4801      	ldr	r0, [pc, #4]	@ (80023d8 <TIM6_DAC_IRQHandler+0x8>)
 80023d2:	f008 bf83 	b.w	800b2dc <HAL_TIM_IRQHandler>
 80023d6:	bf00      	nop
 80023d8:	2000302c 	.word	0x2000302c

080023dc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80023dc:	4801      	ldr	r0, [pc, #4]	@ (80023e4 <LTDC_IRQHandler+0x8>)
 80023de:	f007 beb3 	b.w	800a148 <HAL_LTDC_IRQHandler>
 80023e2:	bf00      	nop
 80023e4:	20002ee4 	.word	0x20002ee4

080023e8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80023e8:	4801      	ldr	r0, [pc, #4]	@ (80023f0 <DMA2D_IRQHandler+0x8>)
 80023ea:	f006 bf77 	b.w	80092dc <HAL_DMA2D_IRQHandler>
 80023ee:	bf00      	nop
 80023f0:	20002fe0 	.word	0x20002fe0

080023f4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80023f4:	2001      	movs	r0, #1
 80023f6:	4770      	bx	lr

080023f8 <_kill>:

int _kill(int pid, int sig)
{
 80023f8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80023fa:	f025 ffe3 	bl	80283c4 <__errno>
 80023fe:	2316      	movs	r3, #22
 8002400:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002402:	f04f 30ff 	mov.w	r0, #4294967295
 8002406:	bd08      	pop	{r3, pc}

08002408 <_exit>:

void _exit (int status)
{
 8002408:	b508      	push	{r3, lr}
	errno = EINVAL;
 800240a:	f025 ffdb 	bl	80283c4 <__errno>
 800240e:	2316      	movs	r3, #22
 8002410:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002412:	e7fe      	b.n	8002412 <_exit+0xa>

08002414 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002414:	b570      	push	{r4, r5, r6, lr}
 8002416:	460d      	mov	r5, r1
 8002418:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800241a:	460e      	mov	r6, r1
 800241c:	1b73      	subs	r3, r6, r5
 800241e:	429c      	cmp	r4, r3
 8002420:	dc01      	bgt.n	8002426 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002422:	4620      	mov	r0, r4
 8002424:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002426:	f3af 8000 	nop.w
 800242a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800242e:	e7f5      	b.n	800241c <_read+0x8>

08002430 <_close>:
//}

int _close(int file)
{
	return -1;
}
 8002430:	f04f 30ff 	mov.w	r0, #4294967295
 8002434:	4770      	bx	lr

08002436 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002436:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800243a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800243c:	2000      	movs	r0, #0
 800243e:	4770      	bx	lr

08002440 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002440:	2001      	movs	r0, #1
 8002442:	4770      	bx	lr

08002444 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002444:	2000      	movs	r0, #0
 8002446:	4770      	bx	lr

08002448 <_write>:
{
	errno = ENOMEM;
	return -1;
}
__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002448:	b510      	push	{r4, lr}
    HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len, HAL_MAX_DELAY);
 800244a:	f04f 33ff 	mov.w	r3, #4294967295
{
 800244e:	4614      	mov	r4, r2
    HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len, HAL_MAX_DELAY);
 8002450:	4802      	ldr	r0, [pc, #8]	@ (800245c <_write+0x14>)
 8002452:	b292      	uxth	r2, r2
 8002454:	f009 f9df 	bl	800b816 <HAL_UART_Transmit>
    return len;
}
 8002458:	4620      	mov	r0, r4
 800245a:	bd10      	pop	{r4, pc}
 800245c:	20002dd0 	.word	0x20002dd0

08002460 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002460:	4a0a      	ldr	r2, [pc, #40]	@ (800248c <_sbrk+0x2c>)
 8002462:	6811      	ldr	r1, [r2, #0]
{
 8002464:	b508      	push	{r3, lr}
 8002466:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002468:	b909      	cbnz	r1, 800246e <_sbrk+0xe>
		heap_end = &end;
 800246a:	4909      	ldr	r1, [pc, #36]	@ (8002490 <_sbrk+0x30>)
 800246c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800246e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002470:	4669      	mov	r1, sp
 8002472:	4403      	add	r3, r0
 8002474:	428b      	cmp	r3, r1
 8002476:	d906      	bls.n	8002486 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002478:	f025 ffa4 	bl	80283c4 <__errno>
 800247c:	230c      	movs	r3, #12
 800247e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002480:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002484:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002486:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002488:	e7fc      	b.n	8002484 <_sbrk+0x24>
 800248a:	bf00      	nop
 800248c:	20003074 	.word	0x20003074
 8002490:	20014ca0 	.word	0x20014ca0

08002494 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_08 = 5; // verdana_20_4bpp
    static const touchgfx::FontId TYPOGRAPHY_09 = 5; // verdana_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 7;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002494:	4770      	bx	lr

08002496 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002496:	b508      	push	{r3, lr}
    switch (typography)
 8002498:	290c      	cmp	r1, #12
 800249a:	d824      	bhi.n	80024e6 <_ZN23ApplicationFontProvider7getFontEt+0x50>
 800249c:	e8df f001 	tbb	[pc, r1]
 80024a0:	130f0b07 	.word	0x130f0b07
 80024a4:	1f1f1f17 	.word	0x1f1f1f17
 80024a8:	1f1f1b1f 	.word	0x1f1f1b1f
 80024ac:	1f          	.byte	0x1f
 80024ad:	00          	.byte	0x00
    {
    case Typography::DEFAULT:
        // verdana_17_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80024ae:	f004 f93b 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024b2:	6800      	ldr	r0, [r0, #0]
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
    default:
        return 0;
    }
}
 80024b4:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80024b6:	f004 f937 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024ba:	6840      	ldr	r0, [r0, #4]
 80024bc:	e7fa      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80024be:	f004 f933 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024c2:	6880      	ldr	r0, [r0, #8]
 80024c4:	e7f6      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80024c6:	f004 f92f 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024ca:	68c0      	ldr	r0, [r0, #12]
 80024cc:	e7f2      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 80024ce:	f004 f92b 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024d2:	6900      	ldr	r0, [r0, #16]
 80024d4:	e7ee      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 80024d6:	f004 f927 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024da:	6980      	ldr	r0, [r0, #24]
 80024dc:	e7ea      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 80024de:	f004 f923 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024e2:	6940      	ldr	r0, [r0, #20]
 80024e4:	e7e6      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
    switch (typography)
 80024e6:	2000      	movs	r0, #0
 80024e8:	e7e4      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>

080024ea <_ZN23ApplicationFontProviderD0Ev>:
 80024ea:	b510      	push	{r4, lr}
 80024ec:	2104      	movs	r1, #4
 80024ee:	4604      	mov	r4, r0
 80024f0:	f024 fd70 	bl	8026fd4 <_ZdlPvj>
 80024f4:	4620      	mov	r0, r4
 80024f6:	bd10      	pop	{r4, pc}

080024f8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80024f8:	4800      	ldr	r0, [pc, #0]	@ (80024fc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80024fa:	4770      	bx	lr
 80024fc:	0802a55c 	.word	0x0802a55c

08002500 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002500:	2005      	movs	r0, #5
 8002502:	4770      	bx	lr

08002504 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002504:	b513      	push	{r0, r1, r4, lr}
 8002506:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002508:	b151      	cbz	r1, 8002520 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800250a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800250c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800250e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002512:	aa01      	add	r2, sp, #4
 8002514:	689c      	ldr	r4, [r3, #8]
 8002516:	f10d 0303 	add.w	r3, sp, #3
 800251a:	47a0      	blx	r4
        return glyph;
    }
 800251c:	b002      	add	sp, #8
 800251e:	bd10      	pop	{r4, pc}
            return 0;
 8002520:	4608      	mov	r0, r1
 8002522:	e7fb      	b.n	800251c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002524 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002524:	89c0      	ldrh	r0, [r0, #14]
 8002526:	4770      	bx	lr

08002528 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002528:	8a00      	ldrh	r0, [r0, #16]
 800252a:	4770      	bx	lr

0800252c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800252c:	88c0      	ldrh	r0, [r0, #6]
 800252e:	4770      	bx	lr

08002530 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002530:	8880      	ldrh	r0, [r0, #4]
 8002532:	4770      	bx	lr

08002534 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002534:	7a80      	ldrb	r0, [r0, #10]
    }
 8002536:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 800253a:	4770      	bx	lr

0800253c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800253c:	7a80      	ldrb	r0, [r0, #10]
    }
 800253e:	09c0      	lsrs	r0, r0, #7
 8002540:	4770      	bx	lr

08002542 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002542:	2000      	movs	r0, #0
 8002544:	4770      	bx	lr
	...

08002548 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002548:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002550 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 800254c:	4770      	bx	lr
 800254e:	bf00      	nop
 8002550:	00000000 	.word	0x00000000

08002554 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002554:	4770      	bx	lr

08002556 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002556:	4770      	bx	lr

08002558 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002558:	4770      	bx	lr

0800255a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800255a:	4770      	bx	lr

0800255c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800255c:	4770      	bx	lr

0800255e <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800255e:	4770      	bx	lr

08002560 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002560:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002562:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 8002564:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002566:	466d      	mov	r5, sp
        rect.width = width;
 8002568:	8101      	strh	r1, [r0, #8]
 800256a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800256e:	4601      	mov	r1, r0
    virtual void setWidth(int16_t width)
 8002570:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002572:	4628      	mov	r0, r5
 8002574:	4798      	blx	r3
 8002576:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800257a:	343c      	adds	r4, #60	@ 0x3c
 800257c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002580:	b005      	add	sp, #20
 8002582:	bd30      	pop	{r4, r5, pc}

08002584 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002584:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002586:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 8002588:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800258a:	466d      	mov	r5, sp
        rect.height = height;
 800258c:	8141      	strh	r1, [r0, #10]
 800258e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002592:	4601      	mov	r1, r0
    virtual void setHeight(int16_t height)
 8002594:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002596:	4628      	mov	r0, r5
 8002598:	4798      	blx	r3
 800259a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800259e:	343c      	adds	r4, #60	@ 0x3c
 80025a0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80025a4:	b005      	add	sp, #20
 80025a6:	bd30      	pop	{r4, r5, pc}

080025a8 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80025a8:	2200      	movs	r2, #0
 80025aa:	8002      	strh	r2, [r0, #0]
 80025ac:	8042      	strh	r2, [r0, #2]
 80025ae:	8082      	strh	r2, [r0, #4]
 80025b0:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80025b2:	4770      	bx	lr

080025b4 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80025b4:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 80025b8:	4770      	bx	lr

080025ba <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025ba:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80025bc:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025be:	4604      	mov	r4, r0
        setX(x);
 80025c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025c2:	4615      	mov	r5, r2
        setX(x);
 80025c4:	4798      	blx	r3
        setBaselineY(baselineY);
 80025c6:	6823      	ldr	r3, [r4, #0]
 80025c8:	4629      	mov	r1, r5
 80025ca:	4620      	mov	r0, r4
 80025cc:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 80025ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80025d2:	4718      	bx	r3

080025d4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80025d4:	2000      	movs	r0, #0
 80025d6:	4770      	bx	lr

080025d8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80025d8:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80025da:	4770      	bx	lr

080025dc <_ZN8touchgfx9DraggableINS_3BoxEED1Ev>:
 * can be freely moved around using the touch screen.
 *
 * @tparam T specifies the type to extend with the Draggable behavior.
 */
template <class T>
class Draggable : public T
 80025dc:	4770      	bx	lr

080025de <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80025de:	4770      	bx	lr

080025e0 <_ZN23EasyReadyScreenViewBase11setupScreenEv>:
}

void EasyReadyScreenViewBase::setupScreen()
{

}
 80025e0:	4770      	bx	lr

080025e2 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80025e2:	b510      	push	{r4, lr}
    }
 80025e4:	2108      	movs	r1, #8
    virtual ~TypedText()
 80025e6:	4604      	mov	r4, r0
    }
 80025e8:	f024 fcf4 	bl	8026fd4 <_ZdlPvj>
 80025ec:	4620      	mov	r0, r4
 80025ee:	bd10      	pop	{r4, pc}

080025f0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80025f0:	b510      	push	{r4, lr}
 80025f2:	214c      	movs	r1, #76	@ 0x4c
 80025f4:	4604      	mov	r4, r0
 80025f6:	f024 fced 	bl	8026fd4 <_ZdlPvj>
 80025fa:	4620      	mov	r0, r4
 80025fc:	bd10      	pop	{r4, pc}

080025fe <_ZN8touchgfx9DraggableINS_3BoxEED0Ev>:
 80025fe:	b510      	push	{r4, lr}
 8002600:	212c      	movs	r1, #44	@ 0x2c
 8002602:	4604      	mov	r4, r0
 8002604:	f024 fce6 	bl	8026fd4 <_ZdlPvj>
 8002608:	4620      	mov	r0, r4
 800260a:	bd10      	pop	{r4, pc}

0800260c <_ZN8touchgfx9DraggableINS_3BoxEE15handleDragEventERKNS_9DragEventE>:
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 800260c:	890b      	ldrh	r3, [r1, #8]
 800260e:	898a      	ldrh	r2, [r1, #12]
 8002610:	1ad2      	subs	r2, r2, r3
        return dragNewX - dragOldX;
 8002612:	894b      	ldrh	r3, [r1, #10]
 8002614:	88c9      	ldrh	r1, [r1, #6]
 8002616:	1a59      	subs	r1, r3, r1
     * @param  event The drag event.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        T::handleDragEvent(event);
        T::moveRelative(event.getDeltaX(), event.getDeltaY());
 8002618:	b212      	sxth	r2, r2
 800261a:	b209      	sxth	r1, r1
 800261c:	f013 b922 	b.w	8015864 <_ZN8touchgfx8Drawable12moveRelativeEss>

08002620 <_ZN23EasyReadyScreenViewBaseD1Ev>:
EasyReadyScreenViewBase::~EasyReadyScreenViewBase()
 8002620:	b510      	push	{r4, lr}
 8002622:	4b03      	ldr	r3, [pc, #12]	@ (8002630 <_ZN23EasyReadyScreenViewBaseD1Ev+0x10>)
 8002624:	6003      	str	r3, [r0, #0]
 8002626:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002628:	f010 fb02 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800262c:	4620      	mov	r0, r4
 800262e:	bd10      	pop	{r4, pc}
 8002630:	0802a6d0 	.word	0x0802a6d0

08002634 <_ZN23EasyReadyScreenViewBaseD0Ev>:
EasyReadyScreenViewBase::~EasyReadyScreenViewBase()
 8002634:	b510      	push	{r4, lr}
 8002636:	4b06      	ldr	r3, [pc, #24]	@ (8002650 <_ZN23EasyReadyScreenViewBaseD0Ev+0x1c>)
 8002638:	6003      	str	r3, [r0, #0]
 800263a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800263c:	f010 faf8 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002640:	4620      	mov	r0, r4
 8002642:	f241 51b8 	movw	r1, #5560	@ 0x15b8
 8002646:	f024 fcc5 	bl	8026fd4 <_ZdlPvj>
 800264a:	4620      	mov	r0, r4
 800264c:	bd10      	pop	{r4, pc}
 800264e:	bf00      	nop
 8002650:	0802a6d0 	.word	0x0802a6d0

08002654 <_ZNK8touchgfx3Box17invalidateContentEv>:
        return alpha;
    }

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 8002654:	b508      	push	{r3, lr}
    {
        if (alpha > 0)
 8002656:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
 800265a:	b10b      	cbz	r3, 8002660 <_ZNK8touchgfx3Box17invalidateContentEv+0xc>
        {
            Widget::invalidateContent();
 800265c:	f7fe ff04 	bl	8001468 <_ZNK8touchgfx8Drawable17invalidateContentEv>
        }
    }
 8002660:	bd08      	pop	{r3, pc}

08002662 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002662:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002664:	f7fe ff00 	bl	8001468 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002668:	bd08      	pop	{r3, pc}
	...

0800266c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800266c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800266e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002670:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002672:	4b12      	ldr	r3, [pc, #72]	@ (80026bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002674:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002676:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002678:	b28d      	uxth	r5, r1
 800267a:	b92b      	cbnz	r3, 8002688 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 800267c:	4b10      	ldr	r3, [pc, #64]	@ (80026c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800267e:	4a11      	ldr	r2, [pc, #68]	@ (80026c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002680:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002682:	4811      	ldr	r0, [pc, #68]	@ (80026c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002684:	f025 fbe2 	bl	8027e4c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002688:	4910      	ldr	r1, [pc, #64]	@ (80026cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800268a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800268c:	8809      	ldrh	r1, [r1, #0]
 800268e:	4291      	cmp	r1, r2
 8002690:	d803      	bhi.n	800269a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002692:	4b0f      	ldr	r3, [pc, #60]	@ (80026d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002694:	4a0b      	ldr	r2, [pc, #44]	@ (80026c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002696:	216d      	movs	r1, #109	@ 0x6d
 8002698:	e7f3      	b.n	8002682 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800269a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800269e:	4b0d      	ldr	r3, [pc, #52]	@ (80026d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80026a6:	6803      	ldr	r3, [r0, #0]
 80026a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026aa:	4798      	blx	r3
 80026ac:	1a29      	subs	r1, r5, r0
 80026ae:	4633      	mov	r3, r6
 80026b0:	4620      	mov	r0, r4
 80026b2:	b209      	sxth	r1, r1
    }
 80026b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026b8:	4718      	bx	r3
 80026ba:	bf00      	nop
 80026bc:	20013fb8 	.word	0x20013fb8
 80026c0:	080293f2 	.word	0x080293f2
 80026c4:	08029434 	.word	0x08029434
 80026c8:	0802946f 	.word	0x0802946f
 80026cc:	20013fbc 	.word	0x20013fbc
 80026d0:	080294b6 	.word	0x080294b6
 80026d4:	20013fc0 	.word	0x20013fc0

080026d8 <_ZN23EasyReadyScreenViewBase15handleTickEventEv>:

void EasyReadyScreenViewBase::handleTickEvent()
{
 80026d8:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 80026da:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 80026de:	f8d4 35b4 	ldr.w	r3, [r4, #1460]	@ 0x5b4
 80026e2:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80026e4:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 80026e6:	f8c4 35b4 	str.w	r3, [r4, #1460]	@ 0x5b4
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80026ea:	d106      	bne.n	80026fa <_ZN23EasyReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80026ec:	f011 ff9a 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to EasyScreen
        //Go to EasyScreen with no screen transition
        application().gotoEasyScreenScreenNoTransition();
 80026f0:	f000 fffa 	bl	80036e8 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 80026f4:	2300      	movs	r3, #0
 80026f6:	f8c4 35b4 	str.w	r3, [r4, #1460]	@ 0x5b4
    }
}
 80026fa:	bd10      	pop	{r4, pc}

080026fc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80026fc:	2200      	movs	r2, #0
 80026fe:	f04f 31ff 	mov.w	r1, #4294967295
 8002702:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002706:	6082      	str	r2, [r0, #8]
    }
 8002708:	4770      	bx	lr

0800270a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800270a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800270c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800270e:	4604      	mov	r4, r0
        setX(x);
 8002710:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002712:	4615      	mov	r5, r2
        setX(x);
 8002714:	4798      	blx	r3
        setY(y);
 8002716:	6823      	ldr	r3, [r4, #0]
 8002718:	4629      	mov	r1, r5
 800271a:	4620      	mov	r0, r4
 800271c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 800271e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002722:	4718      	bx	r3

08002724 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002724:	b570      	push	{r4, r5, r6, lr}
 8002726:	4604      	mov	r4, r0
 8002728:	461d      	mov	r5, r3
 800272a:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800272e:	f7ff ffec 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002732:	6823      	ldr	r3, [r4, #0]
 8002734:	4629      	mov	r1, r5
 8002736:	4620      	mov	r0, r4
 8002738:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800273a:	4798      	blx	r3
        setHeight(height);
 800273c:	6823      	ldr	r3, [r4, #0]
 800273e:	4631      	mov	r1, r6
 8002740:	4620      	mov	r0, r4
 8002742:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002744:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002748:	4718      	bx	r3
	...

0800274c <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 800274c:	4a09      	ldr	r2, [pc, #36]	@ (8002774 <_ZN8touchgfx3BoxC1Ev+0x28>)
 800274e:	6002      	str	r2, [r0, #0]
          touchable(false),
 8002750:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8002754:	2200      	movs	r2, #0
 8002756:	8481      	strh	r1, [r0, #36]	@ 0x24
 8002758:	21ff      	movs	r1, #255	@ 0xff
 800275a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800275e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002762:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002766:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800276a:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : color(col)
 800276e:	6282      	str	r2, [r0, #40]	@ 0x28
    }
 8002770:	4770      	bx	lr
 8002772:	bf00      	nop
 8002774:	0802b29c 	.word	0x0802b29c

08002778 <_ZN8touchgfx8TextAreaC1Ev>:
          touchable(false),
 8002778:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800277c:	8481      	strh	r1, [r0, #36]	@ 0x24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800277e:	490d      	ldr	r1, [pc, #52]	@ (80027b4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002780:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 8002782:	490d      	ldr	r1, [pc, #52]	@ (80027b8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002784:	6281      	str	r1, [r0, #40]	@ 0x28
 8002786:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800278a:	8581      	strh	r1, [r0, #44]	@ 0x2c
 800278c:	f44f 017f 	mov.w	r1, #16711680	@ 0xff0000
        : x(0), y(0), width(0), height(0)
 8002790:	2200      	movs	r2, #0
 8002792:	6341      	str	r1, [r0, #52]	@ 0x34
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002794:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 8002798:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800279c:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80027a0:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80027a4:	e9c0 2207 	strd	r2, r2, [r0, #28]
              text(0)
 80027a8:	e9c0 1210 	strd	r1, r2, [r0, #64]	@ 0x40
        : color(col)
 80027ac:	6302      	str	r2, [r0, #48]	@ 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027ae:	8702      	strh	r2, [r0, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80027b0:	63c2      	str	r2, [r0, #60]	@ 0x3c
    }
 80027b2:	4770      	bx	lr
 80027b4:	0802b20c 	.word	0x0802b20c
 80027b8:	0802a5c8 	.word	0x0802a5c8

080027bc <_ZN23EasyReadyScreenViewBaseC1Ev>:
EasyReadyScreenViewBase::EasyReadyScreenViewBase() :
 80027bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027c0:	4604      	mov	r4, r0
 80027c2:	b091      	sub	sp, #68	@ 0x44
    frameCountInteraction1Interval(0)
 80027c4:	4627      	mov	r7, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80027c6:	f04f 0b00 	mov.w	fp, #0
 80027ca:	f013 fe21 	bl	8016410 <_ZN8touchgfx6ScreenC1Ev>
 80027ce:	4bd4      	ldr	r3, [pc, #848]	@ (8002b20 <_ZN23EasyReadyScreenViewBaseC1Ev+0x364>)
 80027d0:	f8c4 b03c 	str.w	fp, [r4, #60]	@ 0x3c
 80027d4:	f847 3b40 	str.w	r3, [r7], #64
 80027d8:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
 80027dc:	4638      	mov	r0, r7
 80027de:	f7ff ffb5 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80027e2:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 80027e6:	4630      	mov	r0, r6
 80027e8:	f7ff ffb0 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80027ec:	4640      	mov	r0, r8
 80027ee:	f7ff ffad 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80027f2:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 80027f6:	4618      	mov	r0, r3
 80027f8:	9305      	str	r3, [sp, #20]
 80027fa:	f7ff ffa7 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80027fe:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8002802:	4618      	mov	r0, r3
 8002804:	9306      	str	r3, [sp, #24]
 8002806:	f00d ff3d 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 800280a:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 800280e:	4618      	mov	r0, r3
 8002810:	9309      	str	r3, [sp, #36]	@ 0x24
 8002812:	f7fe fe57 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002816:	4bc3      	ldr	r3, [pc, #780]	@ (8002b24 <_ZN23EasyReadyScreenViewBaseC1Ev+0x368>)
 8002818:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 800281c:	3324      	adds	r3, #36	@ 0x24
 800281e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        : T()
 8002822:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8002826:	4618      	mov	r0, r3
 8002828:	f8c4 b144 	str.w	fp, [r4, #324]	@ 0x144
 800282c:	4dbe      	ldr	r5, [pc, #760]	@ (8002b28 <_ZN23EasyReadyScreenViewBaseC1Ev+0x36c>)
 800282e:	9308      	str	r3, [sp, #32]
        touchable = touch;
 8002830:	f04f 0901 	mov.w	r9, #1
 8002834:	f7ff ff8a 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002838:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 800283c:	f504 7ad2 	add.w	sl, r4, #420	@ 0x1a4
 8002840:	4618      	mov	r0, r3
 8002842:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 8002846:	f884 9170 	strb.w	r9, [r4, #368]	@ 0x170
 800284a:	9307      	str	r3, [sp, #28]
 800284c:	f7ff ff7e 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002850:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 8002854:	f884 919c 	strb.w	r9, [r4, #412]	@ 0x19c
 8002858:	4650      	mov	r0, sl
 800285a:	f7ff ff8d 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 800285e:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
 8002862:	4618      	mov	r0, r3
 8002864:	9302      	str	r3, [sp, #8]
 8002866:	f7ff ff87 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 800286a:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 800286e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8002870:	4dae      	ldr	r5, [pc, #696]	@ (8002b2c <_ZN23EasyReadyScreenViewBaseC1Ev+0x370>)
        : TextArea()
 8002872:	9303      	str	r3, [sp, #12]
 8002874:	f7ff ff80 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8002878:	f504 7320 	add.w	r3, r4, #640	@ 0x280
        : TextAreaWithWildcardBase(), wc1(0)
 800287c:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
        : TextArea()
 8002880:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8002882:	f8c4 b27c 	str.w	fp, [r4, #636]	@ 0x27c
        : TextArea()
 8002886:	9304      	str	r3, [sp, #16]
 8002888:	f7ff ff76 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 800288c:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
        : TextAreaWithWildcardBase(), wc1(0)
 8002890:	f8c4 5280 	str.w	r5, [r4, #640]	@ 0x280
 8002894:	f8c4 b2c8 	str.w	fp, [r4, #712]	@ 0x2c8
    __background.setPosition(0, 0, 320, 240);
 8002898:	25f0      	movs	r5, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 800289a:	f8c3 b5b4 	str.w	fp, [r3, #1460]	@ 0x5b4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800289e:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 80028a2:	f504 703d 	add.w	r0, r4, #756	@ 0x2f4
 80028a6:	f010 f9b9 	bl	8012c1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80028aa:	465a      	mov	r2, fp
 80028ac:	4638      	mov	r0, r7
 80028ae:	9500      	str	r5, [sp, #0]
 80028b0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80028b4:	4659      	mov	r1, fp
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80028b6:	f104 0904 	add.w	r9, r4, #4
 80028ba:	f7ff ff33 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80028be:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80028c2:	4639      	mov	r1, r7
 80028c4:	66a3      	str	r3, [r4, #104]	@ 0x68
 80028c6:	4648      	mov	r0, r9
 80028c8:	f00b f99a 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80028cc:	f04f 37ff 	mov.w	r7, #4294967295
    box3.setPosition(0, 0, 320, 240);
 80028d0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80028d4:	465a      	mov	r2, fp
 80028d6:	4630      	mov	r0, r6
 80028d8:	9500      	str	r5, [sp, #0]
 80028da:	4659      	mov	r1, fp
 80028dc:	f7ff ff22 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80028e0:	4631      	mov	r1, r6
 80028e2:	f8c4 7094 	str.w	r7, [r4, #148]	@ 0x94
 80028e6:	4648      	mov	r0, r9
 80028e8:	f00b f98a 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 318, 236);
 80028ec:	2202      	movs	r2, #2
 80028ee:	23ec      	movs	r3, #236	@ 0xec
 80028f0:	4611      	mov	r1, r2
 80028f2:	4640      	mov	r0, r8
 80028f4:	9300      	str	r3, [sp, #0]
 80028f6:	f44f 739f 	mov.w	r3, #318	@ 0x13e
 80028fa:	f7ff ff13 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80028fe:	4b8c      	ldr	r3, [pc, #560]	@ (8002b30 <_ZN23EasyReadyScreenViewBaseC1Ev+0x374>)
 8002900:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8002904:	4641      	mov	r1, r8
 8002906:	4648      	mov	r0, r9
 8002908:	f00b f97a 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 800290c:	465a      	mov	r2, fp
 800290e:	9805      	ldr	r0, [sp, #20]
 8002910:	9500      	str	r5, [sp, #0]
 8002912:	2303      	movs	r3, #3
 8002914:	21a0      	movs	r1, #160	@ 0xa0
 8002916:	f7ff ff05 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 800291a:	23dc      	movs	r3, #220	@ 0xdc
 800291c:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 800291e:	f8c4 70ec 	str.w	r7, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8002922:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 8002926:	4648      	mov	r0, r9
 8002928:	f00b f96a 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(155, 114, 14, 14);
 800292c:	230e      	movs	r3, #14
 800292e:	2272      	movs	r2, #114	@ 0x72
 8002930:	9806      	ldr	r0, [sp, #24]
 8002932:	9300      	str	r3, [sp, #0]
 8002934:	219b      	movs	r1, #155	@ 0x9b
 8002936:	f7ff fef5 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800293a:	23c0      	movs	r3, #192	@ 0xc0
 800293c:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002940:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8002944:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 8002948:	4b7a      	ldr	r3, [pc, #488]	@ (8002b34 <_ZN23EasyReadyScreenViewBaseC1Ev+0x378>)
 800294a:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800294e:	f649 0361 	movw	r3, #39009	@ 0x9861
 8002952:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
        canvasPainter = &painter;
 8002956:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002958:	9906      	ldr	r1, [sp, #24]
 800295a:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        this->circleCenterY = CWRUtil::toQ5(y);
 800295e:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
 8002962:	4648      	mov	r0, r9
    paddle1.setPosition(8, 100, 5, 40);
 8002964:	2528      	movs	r5, #40	@ 0x28
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8002966:	f8c4 b130 	str.w	fp, [r4, #304]	@ 0x130
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800296a:	f8c4 b128 	str.w	fp, [r4, #296]	@ 0x128
 800296e:	f00b f947 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002972:	2305      	movs	r3, #5
 8002974:	2264      	movs	r2, #100	@ 0x64
 8002976:	9808      	ldr	r0, [sp, #32]
 8002978:	9500      	str	r5, [sp, #0]
 800297a:	2108      	movs	r1, #8
 800297c:	f7ff fed2 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002980:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 8002982:	f8c4 7174 	str.w	r7, [r4, #372]	@ 0x174
 8002986:	4648      	mov	r0, r9
 8002988:	f00b f93a 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 100, 5, 40);
 800298c:	2305      	movs	r3, #5
 800298e:	2264      	movs	r2, #100	@ 0x64
 8002990:	9807      	ldr	r0, [sp, #28]
 8002992:	9500      	str	r5, [sp, #0]
 8002994:	f44f 719a 	mov.w	r1, #308	@ 0x134
 8002998:	f7ff fec4 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
    player1.setPosition(116, 95, 19, 52);
 800299c:	f04f 0834 	mov.w	r8, #52	@ 0x34
 80029a0:	9907      	ldr	r1, [sp, #28]
 80029a2:	f8c4 71a0 	str.w	r7, [r4, #416]	@ 0x1a0
 80029a6:	4648      	mov	r0, r9
        boundingArea = calculateBoundingArea();
 80029a8:	446d      	add	r5, sp
 80029aa:	f00b f929 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029ae:	2313      	movs	r3, #19
 80029b0:	225f      	movs	r2, #95	@ 0x5f
 80029b2:	4650      	mov	r0, sl
 80029b4:	f8cd 8000 	str.w	r8, [sp]
 80029b8:	2174      	movs	r1, #116	@ 0x74
 80029ba:	f7ff feb3 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80029be:	4651      	mov	r1, sl
        color = newColor;
 80029c0:	f8c4 71d4 	str.w	r7, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 80029c4:	4628      	mov	r0, r5
        linespace = space;
 80029c6:	f8a4 b1d8 	strh.w	fp, [r4, #472]	@ 0x1d8
        boundingArea = calculateBoundingArea();
 80029ca:	f00e fc67 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80029ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80029d2:	f504 76f0 	add.w	r6, r4, #480	@ 0x1e0
 80029d6:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        wideTextAction = action;
 80029da:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 80029de:	4651      	mov	r1, sl
        wideTextAction = action;
 80029e0:	f884 21dd 	strb.w	r2, [r4, #477]	@ 0x1dd
        boundingArea = calculateBoundingArea();
 80029e4:	4628      	mov	r0, r5
 80029e6:	f00e fc59 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80029ea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 80029ee:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 80029f2:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 80029f6:	4651      	mov	r1, sl
        rotation = textRotation;
 80029f8:	f884 31dc 	strb.w	r3, [r4, #476]	@ 0x1dc
        boundingArea = calculateBoundingArea();
 80029fc:	4628      	mov	r0, r5
 80029fe:	f00e fc4d 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a02:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a06:	2315      	movs	r3, #21
 8002a08:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1OW4));
 8002a0c:	4650      	mov	r0, sl
 8002a0e:	4e4a      	ldr	r6, [pc, #296]	@ (8002b38 <_ZN23EasyReadyScreenViewBaseC1Ev+0x37c>)
 8002a10:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002a14:	a90e      	add	r1, sp, #56	@ 0x38
 8002a16:	960e      	str	r6, [sp, #56]	@ 0x38
 8002a18:	f00e fee8 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
 8002a1c:	f06f 0141 	mvn.w	r1, #65	@ 0x41
 8002a20:	f884 11da 	strb.w	r1, [r4, #474]	@ 0x1da
 8002a24:	4648      	mov	r0, r9
 8002a26:	4651      	mov	r1, sl
 8002a28:	f00b f8ea 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(187, 95, 19, 52);
 8002a2c:	2313      	movs	r3, #19
 8002a2e:	225f      	movs	r2, #95	@ 0x5f
 8002a30:	9802      	ldr	r0, [sp, #8]
 8002a32:	f8cd 8000 	str.w	r8, [sp]
 8002a36:	21bb      	movs	r1, #187	@ 0xbb
 8002a38:	f7ff fe74 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8002a3c:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 8002a3e:	f8c4 721c 	str.w	r7, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 8002a42:	4628      	mov	r0, r5
        linespace = space;
 8002a44:	f8a4 b220 	strh.w	fp, [r4, #544]	@ 0x220
        boundingArea = calculateBoundingArea();
 8002a48:	f00e fc28 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a4c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a50:	f504 780a 	add.w	r8, r4, #552	@ 0x228
 8002a54:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        wideTextAction = action;
 8002a58:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8002a5c:	9902      	ldr	r1, [sp, #8]
        wideTextAction = action;
 8002a5e:	f884 2225 	strb.w	r2, [r4, #549]	@ 0x225
        boundingArea = calculateBoundingArea();
 8002a62:	4628      	mov	r0, r5
        wideTextAction = action;
 8002a64:	4617      	mov	r7, r2
        boundingArea = calculateBoundingArea();
 8002a66:	f00e fc19 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a6a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a6e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8002a72:	9902      	ldr	r1, [sp, #8]
        rotation = textRotation;
 8002a74:	f884 7224 	strb.w	r7, [r4, #548]	@ 0x224
        boundingArea = calculateBoundingArea();
 8002a78:	4628      	mov	r0, r5
 8002a7a:	f00e fc0f 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a7e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a82:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ERV8));
 8002a86:	aa0e      	add	r2, sp, #56	@ 0x38
 8002a88:	2312      	movs	r3, #18
 8002a8a:	4611      	mov	r1, r2
 8002a8c:	9802      	ldr	r0, [sp, #8]
 8002a8e:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002a92:	960e      	str	r6, [sp, #56]	@ 0x38
 8002a94:	f00e feaa 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
 8002a98:	f06f 0141 	mvn.w	r1, #65	@ 0x41
 8002a9c:	f884 1222 	strb.w	r1, [r4, #546]	@ 0x222
 8002aa0:	4648      	mov	r0, r9
 8002aa2:	9902      	ldr	r1, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002aa4:	f8df a0ac 	ldr.w	sl, [pc, #172]	@ 8002b54 <_ZN23EasyReadyScreenViewBaseC1Ev+0x398>
 8002aa8:	f00b f8aa 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(53, 112);
 8002aac:	2270      	movs	r2, #112	@ 0x70
 8002aae:	9803      	ldr	r0, [sp, #12]
 8002ab0:	2135      	movs	r1, #53	@ 0x35
 8002ab2:	f7ff fe2a 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002ab6:	4b21      	ldr	r3, [pc, #132]	@ (8002b3c <_ZN23EasyReadyScreenViewBaseC1Ev+0x380>)
 8002ab8:	f8c4 3264 	str.w	r3, [r4, #612]	@ 0x264
        boundingArea = calculateBoundingArea();
 8002abc:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 8002ac0:	9903      	ldr	r1, [sp, #12]
 8002ac2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8002ac6:	f8a4 b268 	strh.w	fp, [r4, #616]	@ 0x268
        boundingArea = calculateBoundingArea();
 8002aca:	4628      	mov	r0, r5
 8002acc:	4798      	blx	r3
 8002ace:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ad2:	f504 771c 	add.w	r7, r4, #624	@ 0x270
        rotation = textRotation;
 8002ad6:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8002ada:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        rotation = textRotation;
 8002ade:	f884 326c 	strb.w	r3, [r4, #620]	@ 0x26c
        boundingArea = calculateBoundingArea();
 8002ae2:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 8002ae6:	9903      	ldr	r1, [sp, #12]
 8002ae8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002aec:	4628      	mov	r0, r5
 8002aee:	4798      	blx	r3
 8002af0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002af4:	f8da 3000 	ldr.w	r3, [sl]
 8002af8:	e887 0007 	stmia.w	r7, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER1BUFFER).getText());
 8002afc:	f504 7733 	add.w	r7, r4, #716	@ 0x2cc
 8002b00:	b92b      	cbnz	r3, 8002b0e <_ZN23EasyReadyScreenViewBaseC1Ev+0x352>
 8002b02:	4b0f      	ldr	r3, [pc, #60]	@ (8002b40 <_ZN23EasyReadyScreenViewBaseC1Ev+0x384>)
 8002b04:	4a0f      	ldr	r2, [pc, #60]	@ (8002b44 <_ZN23EasyReadyScreenViewBaseC1Ev+0x388>)
 8002b06:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b08:	480f      	ldr	r0, [pc, #60]	@ (8002b48 <_ZN23EasyReadyScreenViewBaseC1Ev+0x38c>)
 8002b0a:	f025 f99f 	bl	8027e4c <__assert_func>
 8002b0e:	4b0f      	ldr	r3, [pc, #60]	@ (8002b4c <_ZN23EasyReadyScreenViewBaseC1Ev+0x390>)
 8002b10:	881b      	ldrh	r3, [r3, #0]
 8002b12:	2b09      	cmp	r3, #9
 8002b14:	d820      	bhi.n	8002b58 <_ZN23EasyReadyScreenViewBaseC1Ev+0x39c>
 8002b16:	4b0e      	ldr	r3, [pc, #56]	@ (8002b50 <_ZN23EasyReadyScreenViewBaseC1Ev+0x394>)
 8002b18:	4a0a      	ldr	r2, [pc, #40]	@ (8002b44 <_ZN23EasyReadyScreenViewBaseC1Ev+0x388>)
 8002b1a:	2161      	movs	r1, #97	@ 0x61
 8002b1c:	e7f4      	b.n	8002b08 <_ZN23EasyReadyScreenViewBaseC1Ev+0x34c>
 8002b1e:	bf00      	nop
 8002b20:	0802a6d0 	.word	0x0802a6d0
 8002b24:	0802afcc 	.word	0x0802afcc
 8002b28:	0802a668 	.word	0x0802a668
 8002b2c:	0802a5d8 	.word	0x0802a5d8
 8002b30:	ff0c3837 	.word	0xff0c3837
 8002b34:	ff990c0c 	.word	0xff990c0c
 8002b38:	0802a5c8 	.word	0x0802a5c8
 8002b3c:	ffdeab5f 	.word	0xffdeab5f
 8002b40:	080293f2 	.word	0x080293f2
 8002b44:	080294f4 	.word	0x080294f4
 8002b48:	0802946f 	.word	0x0802946f
 8002b4c:	20013fbc 	.word	0x20013fbc
 8002b50:	080294b6 	.word	0x080294b6
 8002b54:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 8002b58:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 8002c4c <_ZN23EasyReadyScreenViewBaseC1Ev+0x490>
 8002b5c:	2109      	movs	r1, #9
 8002b5e:	f8d8 0000 	ldr.w	r0, [r8]
 8002b62:	f003 fdd1 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8002b66:	4a36      	ldr	r2, [pc, #216]	@ (8002c40 <_ZN23EasyReadyScreenViewBaseC1Ev+0x484>)
 8002b68:	4603      	mov	r3, r0
 8002b6a:	210a      	movs	r1, #10
 8002b6c:	4638      	mov	r0, r7
 8002b6e:	f015 f92f 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 8002b72:	9803      	ldr	r0, [sp, #12]
        wc1 = value;
 8002b74:	f8c4 727c 	str.w	r7, [r4, #636]	@ 0x27c
 8002b78:	f00e fe18 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        alpha = newAlpha;
 8002b7c:	27d2      	movs	r7, #210	@ 0xd2
        : typedTextId(id)
 8002b7e:	2314      	movs	r3, #20
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HVEB));
 8002b80:	9803      	ldr	r0, [sp, #12]
 8002b82:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002b86:	a90e      	add	r1, sp, #56	@ 0x38
 8002b88:	960e      	str	r6, [sp, #56]	@ 0x38
 8002b8a:	f00e fe2f 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b8e:	9903      	ldr	r1, [sp, #12]
 8002b90:	f884 726a 	strb.w	r7, [r4, #618]	@ 0x26a
 8002b94:	4648      	mov	r0, r9
 8002b96:	f00b f833 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(243, 111);
 8002b9a:	226f      	movs	r2, #111	@ 0x6f
 8002b9c:	9804      	ldr	r0, [sp, #16]
 8002b9e:	21f3      	movs	r1, #243	@ 0xf3
 8002ba0:	f7ff fdb3 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002ba4:	4b27      	ldr	r3, [pc, #156]	@ (8002c44 <_ZN23EasyReadyScreenViewBaseC1Ev+0x488>)
 8002ba6:	f8c4 32b0 	str.w	r3, [r4, #688]	@ 0x2b0
        boundingArea = calculateBoundingArea();
 8002baa:	f8d4 3280 	ldr.w	r3, [r4, #640]	@ 0x280
 8002bae:	9904      	ldr	r1, [sp, #16]
 8002bb0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8002bb4:	f8a4 b2b4 	strh.w	fp, [r4, #692]	@ 0x2b4
        boundingArea = calculateBoundingArea();
 8002bb8:	4628      	mov	r0, r5
 8002bba:	4798      	blx	r3
 8002bbc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002bc0:	f504 7b2f 	add.w	fp, r4, #700	@ 0x2bc
        rotation = textRotation;
 8002bc4:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8002bc8:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8002bcc:	f884 32b8 	strb.w	r3, [r4, #696]	@ 0x2b8
        boundingArea = calculateBoundingArea();
 8002bd0:	f8d4 3280 	ldr.w	r3, [r4, #640]	@ 0x280
 8002bd4:	9904      	ldr	r1, [sp, #16]
 8002bd6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002bda:	4628      	mov	r0, r5
 8002bdc:	4798      	blx	r3
 8002bde:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002be2:	f8da 3000 	ldr.w	r3, [sl]
 8002be6:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER1BUFFER).getText());
 8002bea:	f504 7538 	add.w	r5, r4, #736	@ 0x2e0
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d087      	beq.n	8002b02 <_ZN23EasyReadyScreenViewBaseC1Ev+0x346>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002bf2:	4b15      	ldr	r3, [pc, #84]	@ (8002c48 <_ZN23EasyReadyScreenViewBaseC1Ev+0x48c>)
 8002bf4:	881b      	ldrh	r3, [r3, #0]
 8002bf6:	2b09      	cmp	r3, #9
 8002bf8:	d98d      	bls.n	8002b16 <_ZN23EasyReadyScreenViewBaseC1Ev+0x35a>
        return texts->getText(typedTextId);
 8002bfa:	f8d8 0000 	ldr.w	r0, [r8]
 8002bfe:	2109      	movs	r1, #9
 8002c00:	f003 fd82 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8002c04:	4a0e      	ldr	r2, [pc, #56]	@ (8002c40 <_ZN23EasyReadyScreenViewBaseC1Ev+0x484>)
 8002c06:	4603      	mov	r3, r0
 8002c08:	210a      	movs	r1, #10
 8002c0a:	4628      	mov	r0, r5
 8002c0c:	f015 f8e0 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 8002c10:	9804      	ldr	r0, [sp, #16]
 8002c12:	f8c4 52c8 	str.w	r5, [r4, #712]	@ 0x2c8
 8002c16:	f00e fdc9 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002c1a:	2313      	movs	r3, #19
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WSW0));
 8002c1c:	9804      	ldr	r0, [sp, #16]
 8002c1e:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002c22:	a90e      	add	r1, sp, #56	@ 0x38
 8002c24:	960e      	str	r6, [sp, #56]	@ 0x38
 8002c26:	f00e fde1 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c2a:	4648      	mov	r0, r9
 8002c2c:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 8002c2e:	f884 72b6 	strb.w	r7, [r4, #694]	@ 0x2b6
 8002c32:	f00a ffe5 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002c36:	4620      	mov	r0, r4
 8002c38:	b011      	add	sp, #68	@ 0x44
 8002c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c3e:	bf00      	nop
 8002c40:	0802953f 	.word	0x0802953f
 8002c44:	ffdeab5f 	.word	0xffdeab5f
 8002c48:	20013fbc 	.word	0x20013fbc
 8002c4c:	20013fc4 	.word	0x20013fc4

08002c50 <_ZN18EasyScreenViewBase11setupScreenEv>:
}

void EasyScreenViewBase::setupScreen()
{

}
 8002c50:	4770      	bx	lr
	...

08002c54 <_ZN18EasyScreenViewBaseD1Ev>:
EasyScreenViewBase::~EasyScreenViewBase()
 8002c54:	b510      	push	{r4, lr}
 8002c56:	4b03      	ldr	r3, [pc, #12]	@ (8002c64 <_ZN18EasyScreenViewBaseD1Ev+0x10>)
 8002c58:	6003      	str	r3, [r0, #0]
 8002c5a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002c5c:	f00f ffe8 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002c60:	4620      	mov	r0, r4
 8002c62:	bd10      	pop	{r4, pc}
 8002c64:	0802a704 	.word	0x0802a704

08002c68 <_ZN18EasyScreenViewBaseD0Ev>:
EasyScreenViewBase::~EasyScreenViewBase()
 8002c68:	b510      	push	{r4, lr}
 8002c6a:	4b06      	ldr	r3, [pc, #24]	@ (8002c84 <_ZN18EasyScreenViewBaseD0Ev+0x1c>)
 8002c6c:	6003      	str	r3, [r0, #0]
 8002c6e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002c70:	f00f ffde 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002c74:	4620      	mov	r0, r4
 8002c76:	f241 51b4 	movw	r1, #5556	@ 0x15b4
 8002c7a:	f024 f9ab 	bl	8026fd4 <_ZdlPvj>
 8002c7e:	4620      	mov	r0, r4
 8002c80:	bd10      	pop	{r4, pc}
 8002c82:	bf00      	nop
 8002c84:	0802a704 	.word	0x0802a704

08002c88 <_ZN18EasyScreenViewBaseC1Ev>:
EasyScreenViewBase::EasyScreenViewBase()
 8002c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c8c:	4604      	mov	r4, r0
 8002c8e:	b091      	sub	sp, #68	@ 0x44
 8002c90:	4625      	mov	r5, r4
 8002c92:	2600      	movs	r6, #0
 8002c94:	f013 fbbc 	bl	8016410 <_ZN8touchgfx6ScreenC1Ev>
 8002c98:	4b83      	ldr	r3, [pc, #524]	@ (8002ea8 <_ZN18EasyScreenViewBaseC1Ev+0x220>)
 8002c9a:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8002c9c:	f845 3b40 	str.w	r3, [r5], #64
 8002ca0:	4628      	mov	r0, r5
 8002ca2:	f7ff fd53 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002ca6:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8002caa:	4618      	mov	r0, r3
 8002cac:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 8002cb0:	9305      	str	r3, [sp, #20]
 8002cb2:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 8002cb6:	f7ff fd49 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002cba:	4650      	mov	r0, sl
 8002cbc:	f7ff fd46 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002cc0:	4648      	mov	r0, r9
 8002cc2:	f7ff fd43 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002cc6:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8002cca:	4618      	mov	r0, r3
 8002ccc:	4f77      	ldr	r7, [pc, #476]	@ (8002eac <_ZN18EasyScreenViewBaseC1Ev+0x224>)
 8002cce:	9308      	str	r3, [sp, #32]
 8002cd0:	f04f 0801 	mov.w	r8, #1
 8002cd4:	f7ff fd3a 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002cd8:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8002cdc:	4618      	mov	r0, r3
 8002cde:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 8002ce2:	f884 8114 	strb.w	r8, [r4, #276]	@ 0x114
 8002ce6:	9307      	str	r3, [sp, #28]
 8002ce8:	f7ff fd30 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002cec:	f884 8140 	strb.w	r8, [r4, #320]	@ 0x140
        : TextArea()
 8002cf0:	f504 78a4 	add.w	r8, r4, #328	@ 0x148
 8002cf4:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 8002cf8:	4640      	mov	r0, r8
        : TextAreaWithWildcardBase(), wc1(0)
 8002cfa:	4f6d      	ldr	r7, [pc, #436]	@ (8002eb0 <_ZN18EasyScreenViewBaseC1Ev+0x228>)
        : TextArea()
 8002cfc:	f504 7bca 	add.w	fp, r4, #404	@ 0x194
 8002d00:	f7ff fd3a 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002d04:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 8002d08:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 8002d0c:	4658      	mov	r0, fp
 8002d0e:	f7ff fd33 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8002d12:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 8002d16:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 8002d1a:	4618      	mov	r0, r3
 8002d1c:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 8002d20:	9303      	str	r3, [sp, #12]
 8002d22:	f7ff fd29 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8002d26:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8002d2a:	4618      	mov	r0, r3
 8002d2c:	9304      	str	r3, [sp, #16]
 8002d2e:	f7ff fd23 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8002d32:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 8002d36:	4618      	mov	r0, r3
 8002d38:	9306      	str	r3, [sp, #24]
 8002d3a:	f00d fca3 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002d3e:	f504 732e 	add.w	r3, r4, #696	@ 0x2b8
 8002d42:	4618      	mov	r0, r3
 8002d44:	9309      	str	r3, [sp, #36]	@ 0x24
 8002d46:	f7fe fbbd 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002d4a:	4b5a      	ldr	r3, [pc, #360]	@ (8002eb4 <_ZN18EasyScreenViewBaseC1Ev+0x22c>)
 8002d4c:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
 8002d50:	3324      	adds	r3, #36	@ 0x24
 8002d52:	f8c4 32c0 	str.w	r3, [r4, #704]	@ 0x2c0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002d56:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8002d5a:	f504 703d 	add.w	r0, r4, #756	@ 0x2f4
 8002d5e:	f8c4 62c4 	str.w	r6, [r4, #708]	@ 0x2c4
 8002d62:	f00f ff5b 	bl	8012c1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8002d66:	23f0      	movs	r3, #240	@ 0xf0
 8002d68:	4632      	mov	r2, r6
 8002d6a:	4628      	mov	r0, r5
 8002d6c:	9300      	str	r3, [sp, #0]
 8002d6e:	4631      	mov	r1, r6
 8002d70:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002d74:	f7ff fcd6 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002d78:	1d27      	adds	r7, r4, #4
 8002d7a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002d7e:	4629      	mov	r1, r5
 8002d80:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002d82:	4638      	mov	r0, r7
 8002d84:	f00a ff3c 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 8002d88:	23f0      	movs	r3, #240	@ 0xf0
 8002d8a:	4632      	mov	r2, r6
 8002d8c:	9805      	ldr	r0, [sp, #20]
 8002d8e:	9300      	str	r3, [sp, #0]
 8002d90:	4631      	mov	r1, r6
 8002d92:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002d96:	f7ff fcc5 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002d9a:	f04f 33ff 	mov.w	r3, #4294967295
 8002d9e:	9905      	ldr	r1, [sp, #20]
 8002da0:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8002da4:	4638      	mov	r0, r7
 8002da6:	f00a ff2b 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 8002daa:	2202      	movs	r2, #2
 8002dac:	23ec      	movs	r3, #236	@ 0xec
 8002dae:	4611      	mov	r1, r2
 8002db0:	4650      	mov	r0, sl
 8002db2:	9300      	str	r3, [sp, #0]
 8002db4:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 8002db8:	f7ff fcb4 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002dbc:	4b3e      	ldr	r3, [pc, #248]	@ (8002eb8 <_ZN18EasyScreenViewBaseC1Ev+0x230>)
 8002dbe:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8002dc2:	4651      	mov	r1, sl
 8002dc4:	4638      	mov	r0, r7
 8002dc6:	f00a ff1b 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8002dca:	23f0      	movs	r3, #240	@ 0xf0
 8002dcc:	4632      	mov	r2, r6
 8002dce:	4648      	mov	r0, r9
 8002dd0:	9300      	str	r3, [sp, #0]
 8002dd2:	21a0      	movs	r1, #160	@ 0xa0
 8002dd4:	2303      	movs	r3, #3
 8002dd6:	f7ff fca5 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002dda:	f04f 33ff 	mov.w	r3, #4294967295
 8002dde:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8002de2:	23dc      	movs	r3, #220	@ 0xdc
 8002de4:	4649      	mov	r1, r9
    paddle1.setPosition(8, 100, 5, 40);
 8002de6:	2528      	movs	r5, #40	@ 0x28
 8002de8:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 8002dec:	4638      	mov	r0, r7
 8002dee:	f00a ff07 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002df2:	2264      	movs	r2, #100	@ 0x64
 8002df4:	9808      	ldr	r0, [sp, #32]
 8002df6:	9500      	str	r5, [sp, #0]
 8002df8:	2305      	movs	r3, #5
 8002dfa:	2108      	movs	r1, #8
 8002dfc:	f7ff fc92 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002e00:	f04f 33ff 	mov.w	r3, #4294967295
 8002e04:	9908      	ldr	r1, [sp, #32]
 8002e06:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 8002e0a:	4638      	mov	r0, r7
 8002e0c:	f00a fef8 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(307, 100, 5, 40);
 8002e10:	2264      	movs	r2, #100	@ 0x64
 8002e12:	9807      	ldr	r0, [sp, #28]
 8002e14:	9500      	str	r5, [sp, #0]
 8002e16:	2305      	movs	r3, #5
 8002e18:	f240 1133 	movw	r1, #307	@ 0x133
 8002e1c:	f7ff fc82 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e20:	f04f 33ff 	mov.w	r3, #4294967295
 8002e24:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
 8002e28:	9907      	ldr	r1, [sp, #28]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002e2a:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 8002ed4 <_ZN18EasyScreenViewBaseC1Ev+0x24c>
 8002e2e:	4638      	mov	r0, r7
 8002e30:	f00a fee6 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 8002e34:	2216      	movs	r2, #22
 8002e36:	21b8      	movs	r1, #184	@ 0xb8
 8002e38:	4640      	mov	r0, r8
 8002e3a:	f7ff fc66 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002e3e:	4b1f      	ldr	r3, [pc, #124]	@ (8002ebc <_ZN18EasyScreenViewBaseC1Ev+0x234>)
 8002e40:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 8002e44:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 8002e48:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 8002e4c:	446d      	add	r5, sp
 8002e4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002e52:	4641      	mov	r1, r8
 8002e54:	4628      	mov	r0, r5
 8002e56:	4798      	blx	r3
 8002e58:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e5c:	f504 79c2 	add.w	r9, r4, #388	@ 0x184
        rotation = textRotation;
 8002e60:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8002e64:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8002e68:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 8002e6c:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 8002e70:	4641      	mov	r1, r8
 8002e72:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002e76:	4628      	mov	r0, r5
 8002e78:	4798      	blx	r3
 8002e7a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e7e:	f8da 3000 	ldr.w	r3, [sl]
 8002e82:	e889 0007 	stmia.w	r9, {r0, r1, r2}
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER1).getText());
 8002e86:	f504 7933 	add.w	r9, r4, #716	@ 0x2cc
 8002e8a:	b92b      	cbnz	r3, 8002e98 <_ZN18EasyScreenViewBaseC1Ev+0x210>
 8002e8c:	4b0c      	ldr	r3, [pc, #48]	@ (8002ec0 <_ZN18EasyScreenViewBaseC1Ev+0x238>)
 8002e8e:	4a0d      	ldr	r2, [pc, #52]	@ (8002ec4 <_ZN18EasyScreenViewBaseC1Ev+0x23c>)
 8002e90:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002e92:	480d      	ldr	r0, [pc, #52]	@ (8002ec8 <_ZN18EasyScreenViewBaseC1Ev+0x240>)
 8002e94:	f024 ffda 	bl	8027e4c <__assert_func>
 8002e98:	4b0c      	ldr	r3, [pc, #48]	@ (8002ecc <_ZN18EasyScreenViewBaseC1Ev+0x244>)
 8002e9a:	881b      	ldrh	r3, [r3, #0]
 8002e9c:	2b06      	cmp	r3, #6
 8002e9e:	d81b      	bhi.n	8002ed8 <_ZN18EasyScreenViewBaseC1Ev+0x250>
 8002ea0:	4b0b      	ldr	r3, [pc, #44]	@ (8002ed0 <_ZN18EasyScreenViewBaseC1Ev+0x248>)
 8002ea2:	4a08      	ldr	r2, [pc, #32]	@ (8002ec4 <_ZN18EasyScreenViewBaseC1Ev+0x23c>)
 8002ea4:	2161      	movs	r1, #97	@ 0x61
 8002ea6:	e7f4      	b.n	8002e92 <_ZN18EasyScreenViewBaseC1Ev+0x20a>
 8002ea8:	0802a704 	.word	0x0802a704
 8002eac:	0802a668 	.word	0x0802a668
 8002eb0:	0802a5d8 	.word	0x0802a5d8
 8002eb4:	0802afcc 	.word	0x0802afcc
 8002eb8:	ff0c3837 	.word	0xff0c3837
 8002ebc:	ff595656 	.word	0xff595656
 8002ec0:	080293f2 	.word	0x080293f2
 8002ec4:	080294f4 	.word	0x080294f4
 8002ec8:	0802946f 	.word	0x0802946f
 8002ecc:	20013fbc 	.word	0x20013fbc
 8002ed0:	080294b6 	.word	0x080294b6
 8002ed4:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 8002ed8:	4b7e      	ldr	r3, [pc, #504]	@ (80030d4 <_ZN18EasyScreenViewBaseC1Ev+0x44c>)
 8002eda:	2106      	movs	r1, #6
 8002edc:	6818      	ldr	r0, [r3, #0]
 8002ede:	f003 fc13 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8002ee2:	4a7d      	ldr	r2, [pc, #500]	@ (80030d8 <_ZN18EasyScreenViewBaseC1Ev+0x450>)
 8002ee4:	4603      	mov	r3, r0
 8002ee6:	210a      	movs	r1, #10
 8002ee8:	4648      	mov	r0, r9
 8002eea:	f014 ff71 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score2.resizeToCurrentText();
 8002eee:	4640      	mov	r0, r8
        wc1 = value;
 8002ef0:	f8c4 9190 	str.w	r9, [r4, #400]	@ 0x190
 8002ef4:	f00e fc5a 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002ef8:	f8df 91ec 	ldr.w	r9, [pc, #492]	@ 80030e8 <_ZN18EasyScreenViewBaseC1Ev+0x460>
 8002efc:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 8002f00:	2321      	movs	r3, #33	@ 0x21
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I1JY));
 8002f02:	4640      	mov	r0, r8
 8002f04:	a90e      	add	r1, sp, #56	@ 0x38
 8002f06:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002f0a:	f00e fc6f 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f0e:	4641      	mov	r1, r8
 8002f10:	4638      	mov	r0, r7
 8002f12:	f00a fe75 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 8002f16:	22c3      	movs	r2, #195	@ 0xc3
 8002f18:	2175      	movs	r1, #117	@ 0x75
 8002f1a:	4658      	mov	r0, fp
 8002f1c:	f7ff fbf5 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002f20:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 8002f24:	4a6d      	ldr	r2, [pc, #436]	@ (80030dc <_ZN18EasyScreenViewBaseC1Ev+0x454>)
        boundingArea = calculateBoundingArea();
 8002f26:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8002f2a:	f8c4 21c4 	str.w	r2, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 8002f2e:	4659      	mov	r1, fp
 8002f30:	4628      	mov	r0, r5
        linespace = space;
 8002f32:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 8002f36:	4798      	blx	r3
 8002f38:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002f3c:	f504 78e8 	add.w	r8, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 8002f40:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 8002f44:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8002f48:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 8002f4c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 8002f50:	f884 21cc 	strb.w	r2, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 8002f54:	4659      	mov	r1, fp
 8002f56:	4628      	mov	r0, r5
 8002f58:	4798      	blx	r3
 8002f5a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002f5e:	f8da 3000 	ldr.w	r3, [sl]
 8002f62:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER1).getText());
 8002f66:	f504 7838 	add.w	r8, r4, #736	@ 0x2e0
 8002f6a:	2b00      	cmp	r3, #0
 8002f6c:	d08e      	beq.n	8002e8c <_ZN18EasyScreenViewBaseC1Ev+0x204>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002f6e:	4a5c      	ldr	r2, [pc, #368]	@ (80030e0 <_ZN18EasyScreenViewBaseC1Ev+0x458>)
 8002f70:	8813      	ldrh	r3, [r2, #0]
 8002f72:	2b05      	cmp	r3, #5
 8002f74:	d994      	bls.n	8002ea0 <_ZN18EasyScreenViewBaseC1Ev+0x218>
        return texts->getText(typedTextId);
 8002f76:	4b57      	ldr	r3, [pc, #348]	@ (80030d4 <_ZN18EasyScreenViewBaseC1Ev+0x44c>)
 8002f78:	2105      	movs	r1, #5
 8002f7a:	6818      	ldr	r0, [r3, #0]
 8002f7c:	f003 fbc4 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8002f80:	4a55      	ldr	r2, [pc, #340]	@ (80030d8 <_ZN18EasyScreenViewBaseC1Ev+0x450>)
 8002f82:	4603      	mov	r3, r0
 8002f84:	210a      	movs	r1, #10
 8002f86:	4640      	mov	r0, r8
 8002f88:	f014 ff22 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8002f8c:	f8c4 81dc 	str.w	r8, [r4, #476]	@ 0x1dc
    score1.resizeToCurrentText();
 8002f90:	4658      	mov	r0, fp
 8002f92:	f00e fc0b 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002f96:	2320      	movs	r3, #32
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NJHY));
 8002f98:	a90e      	add	r1, sp, #56	@ 0x38
 8002f9a:	4658      	mov	r0, fp
 8002f9c:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
    player1.setPosition(140, 180, 19, 52);
 8002fa0:	f04f 0a34 	mov.w	sl, #52	@ 0x34
 8002fa4:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NJHY));
 8002fa8:	f00e fc20 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002fac:	4659      	mov	r1, fp
 8002fae:	4638      	mov	r0, r7
 8002fb0:	f00a fe26 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(140, 180, 19, 52);
 8002fb4:	9803      	ldr	r0, [sp, #12]
 8002fb6:	f8cd a000 	str.w	sl, [sp]
 8002fba:	22b4      	movs	r2, #180	@ 0xb4
 8002fbc:	2313      	movs	r3, #19
 8002fbe:	218c      	movs	r1, #140	@ 0x8c
 8002fc0:	f7ff fbb0 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002fc4:	f04f 33ff 	mov.w	r3, #4294967295
 8002fc8:	f8c4 3210 	str.w	r3, [r4, #528]	@ 0x210
        boundingArea = calculateBoundingArea();
 8002fcc:	9903      	ldr	r1, [sp, #12]
        linespace = space;
 8002fce:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 8002fd2:	4628      	mov	r0, r5
 8002fd4:	f00e f962 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002fd8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002fdc:	f504 7807 	add.w	r8, r4, #540	@ 0x21c
 8002fe0:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8002fe4:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 8002fe8:	9903      	ldr	r1, [sp, #12]
        rotation = textRotation;
 8002fea:	f884 2218 	strb.w	r2, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 8002fee:	4628      	mov	r0, r5
 8002ff0:	f00e f954 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002ff4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ff8:	231f      	movs	r3, #31
 8002ffa:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G2S8));
 8002ffe:	9803      	ldr	r0, [sp, #12]
 8003000:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8003004:	a90e      	add	r1, sp, #56	@ 0x38
        alpha = newAlpha;
 8003006:	f04f 08be 	mov.w	r8, #190	@ 0xbe
 800300a:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 800300e:	f00e fbed 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003012:	9903      	ldr	r1, [sp, #12]
 8003014:	f884 8216 	strb.w	r8, [r4, #534]	@ 0x216
 8003018:	4638      	mov	r0, r7
 800301a:	f00a fdf1 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 800301e:	9804      	ldr	r0, [sp, #16]
 8003020:	f8cd a000 	str.w	sl, [sp]
 8003024:	2207      	movs	r2, #7
 8003026:	2313      	movs	r3, #19
 8003028:	21a5      	movs	r1, #165	@ 0xa5
 800302a:	f7ff fb7b 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800302e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8003032:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8003034:	f8c4 3258 	str.w	r3, [r4, #600]	@ 0x258
        boundingArea = calculateBoundingArea();
 8003038:	4628      	mov	r0, r5
        linespace = space;
 800303a:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 800303e:	f00e f92d 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003042:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003046:	f504 7a19 	add.w	sl, r4, #612	@ 0x264
        rotation = textRotation;
 800304a:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 800304e:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8003052:	9904      	ldr	r1, [sp, #16]
        rotation = textRotation;
 8003054:	f884 3260 	strb.w	r3, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8003058:	4628      	mov	r0, r5
 800305a:	f00e f91f 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800305e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003062:	231e      	movs	r3, #30
 8003064:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OD39));
 8003068:	9804      	ldr	r0, [sp, #16]
 800306a:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 800306e:	a90e      	add	r1, sp, #56	@ 0x38
 8003070:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 8003074:	f00e fbba 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003078:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 800307a:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
 800307e:	4638      	mov	r0, r7
 8003080:	f00a fdbe 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8003084:	230e      	movs	r3, #14
 8003086:	9806      	ldr	r0, [sp, #24]
 8003088:	9300      	str	r3, [sp, #0]
 800308a:	2272      	movs	r2, #114	@ 0x72
 800308c:	219a      	movs	r1, #154	@ 0x9a
 800308e:	f7ff fb49 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8003092:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 8003094:	e9c4 33a7 	strd	r3, r3, [r4, #668]	@ 0x29c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003098:	23c0      	movs	r3, #192	@ 0xc0
 800309a:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800309e:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 80030a2:	f8c4 32ac 	str.w	r3, [r4, #684]	@ 0x2ac
 80030a6:	4b0f      	ldr	r3, [pc, #60]	@ (80030e4 <_ZN18EasyScreenViewBaseC1Ev+0x45c>)
 80030a8:	f8c4 32c4 	str.w	r3, [r4, #708]	@ 0x2c4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80030ac:	f649 0361 	movw	r3, #39009	@ 0x9861
 80030b0:	f8a4 32c8 	strh.w	r3, [r4, #712]	@ 0x2c8
 80030b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80030b6:	9906      	ldr	r1, [sp, #24]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80030b8:	f8c4 62b0 	str.w	r6, [r4, #688]	@ 0x2b0
 80030bc:	4638      	mov	r0, r7
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80030be:	f8c4 62a8 	str.w	r6, [r4, #680]	@ 0x2a8
 80030c2:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
 80030c6:	f00a fd9b 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80030ca:	4620      	mov	r0, r4
 80030cc:	b011      	add	sp, #68	@ 0x44
 80030ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030d2:	bf00      	nop
 80030d4:	20013fc4 	.word	0x20013fc4
 80030d8:	0802953f 	.word	0x0802953f
 80030dc:	ff595656 	.word	0xff595656
 80030e0:	20013fbc 	.word	0x20013fbc
 80030e4:	ff990c0c 	.word	0xff990c0c
 80030e8:	0802a5c8 	.word	0x0802a5c8

080030ec <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80030ec:	4770      	bx	lr

080030ee <_ZN17EndScreenViewBaseD1Ev>:
}

EndScreenViewBase::~EndScreenViewBase()
{

}
 80030ee:	4770      	bx	lr

080030f0 <_ZN17EndScreenViewBase11setupScreenEv>:

void EndScreenViewBase::setupScreen()
{

}
 80030f0:	4770      	bx	lr

080030f2 <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80030f2:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80030f4:	68c2      	ldr	r2, [r0, #12]
 80030f6:	6844      	ldr	r4, [r0, #4]
 80030f8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80030fa:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80030fc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003100:	07d2      	lsls	r2, r2, #31
 8003102:	bf48      	it	mi
 8003104:	5962      	ldrmi	r2, [r4, r5]
 8003106:	689b      	ldr	r3, [r3, #8]
    }
 8003108:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800310a:	bf48      	it	mi
 800310c:	58d3      	ldrmi	r3, [r2, r3]
 800310e:	4718      	bx	r3

08003110 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    /**
     * Query if this object is valid.
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
 8003110:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8003112:	6840      	ldr	r0, [r0, #4]
 8003114:	b130      	cbz	r0, 8003124 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003116:	689a      	ldr	r2, [r3, #8]
 8003118:	b91a      	cbnz	r2, 8003122 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 800311a:	68d8      	ldr	r0, [r3, #12]
 800311c:	f000 0001 	and.w	r0, r0, #1
 8003120:	4770      	bx	lr
 8003122:	2001      	movs	r0, #1
    }
 8003124:	4770      	bx	lr

08003126 <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003126:	b510      	push	{r4, lr}
 8003128:	2110      	movs	r1, #16
 800312a:	4604      	mov	r4, r0
 800312c:	f023 ff52 	bl	8026fd4 <_ZdlPvj>
 8003130:	4620      	mov	r0, r4
 8003132:	bd10      	pop	{r4, pc}

08003134 <_ZN17EndScreenViewBaseD0Ev>:
EndScreenViewBase::~EndScreenViewBase()
 8003134:	b510      	push	{r4, lr}
}
 8003136:	f44f 71cc 	mov.w	r1, #408	@ 0x198
EndScreenViewBase::~EndScreenViewBase()
 800313a:	4604      	mov	r4, r0
}
 800313c:	f023 ff4a 	bl	8026fd4 <_ZdlPvj>
 8003140:	4620      	mov	r0, r4
 8003142:	bd10      	pop	{r4, pc}

08003144 <_ZN17EndScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void EndScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &playagainButton)
 8003144:	3098      	adds	r0, #152	@ 0x98
 8003146:	4288      	cmp	r0, r1
{
 8003148:	b508      	push	{r3, lr}
    if (&src == &playagainButton)
 800314a:	d105      	bne.n	8003158 <_ZN17EndScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~EndScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800314c:	f011 fa6a 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When playagainButton clicked change screen to StartScreen
        //Go to StartScreen with screen transition towards East
        application().gotoStartScreenScreenWipeTransitionEast();
    }
}
 8003150:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoStartScreenScreenWipeTransitionEast();
 8003154:	f000 ba78 	b.w	8003648 <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv>
}
 8003158:	bd08      	pop	{r3, pc}
	...

0800315c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800315c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 800315e:	4b19      	ldr	r3, [pc, #100]	@ (80031c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 8003160:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 8003162:	881b      	ldrh	r3, [r3, #0]
 8003164:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003166:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003168:	d92a      	bls.n	80031c0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800316a:	4b17      	ldr	r3, [pc, #92]	@ (80031c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	b92b      	cbnz	r3, 800317c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003170:	4b16      	ldr	r3, [pc, #88]	@ (80031cc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003172:	4a17      	ldr	r2, [pc, #92]	@ (80031d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003174:	4817      	ldr	r0, [pc, #92]	@ (80031d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003176:	216c      	movs	r1, #108	@ 0x6c
 8003178:	f024 fe68 	bl	8027e4c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800317c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003180:	4b15      	ldr	r3, [pc, #84]	@ (80031d8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003188:	4b14      	ldr	r3, [pc, #80]	@ (80031dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800318a:	6818      	ldr	r0, [r3, #0]
 800318c:	f003 fabc 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003190:	682b      	ldr	r3, [r5, #0]
 8003192:	4607      	mov	r7, r0
 8003194:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003196:	4628      	mov	r0, r5
 8003198:	4798      	blx	r3
 800319a:	682b      	ldr	r3, [r5, #0]
 800319c:	4604      	mov	r4, r0
 800319e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80031a0:	4639      	mov	r1, r7
 80031a2:	4628      	mov	r0, r5
 80031a4:	4798      	blx	r3
 80031a6:	682b      	ldr	r3, [r5, #0]
 80031a8:	fb14 f400 	smulbb	r4, r4, r0
 80031ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031ae:	4639      	mov	r1, r7
 80031b0:	4628      	mov	r0, r5
 80031b2:	4798      	blx	r3
 80031b4:	b2a4      	uxth	r4, r4
 80031b6:	1823      	adds	r3, r4, r0
 80031b8:	b21b      	sxth	r3, r3
 80031ba:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80031be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80031c0:	2300      	movs	r3, #0
 80031c2:	e7fa      	b.n	80031ba <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80031c4:	20013fbc 	.word	0x20013fbc
 80031c8:	20013fb8 	.word	0x20013fb8
 80031cc:	080293f2 	.word	0x080293f2
 80031d0:	08029434 	.word	0x08029434
 80031d4:	0802946f 	.word	0x0802946f
 80031d8:	20013fc0 	.word	0x20013fc0
 80031dc:	20013fc4 	.word	0x20013fc4

080031e0 <_ZN17EndScreenViewBaseC1Ev>:
EndScreenViewBase::EndScreenViewBase() :
 80031e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031e4:	4604      	mov	r4, r0
 80031e6:	b08b      	sub	sp, #44	@ 0x2c
    buttonCallback(this, &EndScreenViewBase::buttonCallbackHandler)
 80031e8:	46a2      	mov	sl, r4
 80031ea:	2500      	movs	r5, #0
 80031ec:	f013 f910 	bl	8016410 <_ZN8touchgfx6ScreenC1Ev>
 80031f0:	4b6b      	ldr	r3, [pc, #428]	@ (80033a0 <_ZN17EndScreenViewBaseC1Ev+0x1c0>)
 80031f2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80031f4:	f84a 3b40 	str.w	r3, [sl], #64
 80031f8:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 80031fc:	4650      	mov	r0, sl
 80031fe:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 8003202:	f7ff faa3 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8003206:	4658      	mov	r0, fp
 8003208:	f7ff faa0 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 800320c:	f104 06e0 	add.w	r6, r4, #224	@ 0xe0
 8003210:	4648      	mov	r0, r9
 8003212:	f00e fe47 	bl	8011ea4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003216:	4630      	mov	r0, r6
 8003218:	f7ff faae 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 800321c:	f504 7896 	add.w	r8, r4, #300	@ 0x12c
        : TextAreaWithWildcardBase(), wc1(0)
 8003220:	4b60      	ldr	r3, [pc, #384]	@ (80033a4 <_ZN17EndScreenViewBaseC1Ev+0x1c4>)
 8003222:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
 8003226:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
 800322a:	4640      	mov	r0, r8
 800322c:	f7ff faa4 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003230:	4b5d      	ldr	r3, [pc, #372]	@ (80033a8 <_ZN17EndScreenViewBaseC1Ev+0x1c8>)
 8003232:	e9c4 3462 	strd	r3, r4, [r4, #392]	@ 0x188
 8003236:	4b5d      	ldr	r3, [pc, #372]	@ (80033ac <_ZN17EndScreenViewBaseC1Ev+0x1cc>)
 8003238:	e9c4 3564 	strd	r3, r5, [r4, #400]	@ 0x190
    __background.setPosition(0, 0, 320, 240);
 800323c:	23f0      	movs	r3, #240	@ 0xf0
 800323e:	462a      	mov	r2, r5
 8003240:	4650      	mov	r0, sl
 8003242:	9300      	str	r3, [sp, #0]
 8003244:	4629      	mov	r1, r5
 8003246:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800324a:	f7ff fa6b 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800324e:	1d27      	adds	r7, r4, #4
 8003250:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003254:	4651      	mov	r1, sl
 8003256:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003258:	4638      	mov	r0, r7
 800325a:	f00a fcd1 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 320, 240);
 800325e:	23f0      	movs	r3, #240	@ 0xf0
 8003260:	462a      	mov	r2, r5
 8003262:	4658      	mov	r0, fp
 8003264:	9300      	str	r3, [sp, #0]
 8003266:	4629      	mov	r1, r5
 8003268:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800326c:	f7ff fa5a 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003270:	4b4f      	ldr	r3, [pc, #316]	@ (80033b0 <_ZN17EndScreenViewBaseC1Ev+0x1d0>)
 8003272:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8003276:	4659      	mov	r1, fp
 8003278:	4638      	mov	r0, r7
 800327a:	f00a fcc1 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    playagainButton.setXY(91, 164);
 800327e:	4648      	mov	r0, r9
 8003280:	22a4      	movs	r2, #164	@ 0xa4
 8003282:	215b      	movs	r1, #91	@ 0x5b
 8003284:	f7ff fa41 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    playagainButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_DISABLED_ID));
 8003288:	aa08      	add	r2, sp, #32
 800328a:	a907      	add	r1, sp, #28
 800328c:	4648      	mov	r0, r9
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800328e:	f8ad 501c 	strh.w	r5, [sp, #28]
 8003292:	f8ad 5020 	strh.w	r5, [sp, #32]
 8003296:	f00e fafc 	bl	8011892 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800329a:	2323      	movs	r3, #35	@ 0x23
        updateTextPosition();
 800329c:	4648      	mov	r0, r9
 800329e:	f8a4 30d0 	strh.w	r3, [r4, #208]	@ 0xd0
 80032a2:	f7ff ff5b 	bl	800315c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 80032a6:	4a43      	ldr	r2, [pc, #268]	@ (80033b4 <_ZN17EndScreenViewBaseC1Ev+0x1d4>)
        color = newColor;
 80032a8:	f8df a12c 	ldr.w	sl, [pc, #300]	@ 80033d8 <_ZN17EndScreenViewBaseC1Ev+0x1f8>
 80032ac:	f04f 33ff 	mov.w	r3, #4294967295
 80032b0:	e9c4 2335 	strd	r2, r3, [r4, #212]	@ 0xd4
    playagainButton.setAction(buttonCallback);
 80032b4:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80032b8:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80032bc:	4649      	mov	r1, r9
 80032be:	4638      	mov	r0, r7
 80032c0:	f00a fc9e 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    playerwin.setXY(105, 93);
 80032c4:	225d      	movs	r2, #93	@ 0x5d
 80032c6:	2169      	movs	r1, #105	@ 0x69
 80032c8:	4630      	mov	r0, r6
 80032ca:	f7ff fa1e 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80032ce:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
        color = newColor;
 80032d2:	f8c4 a110 	str.w	sl, [r4, #272]	@ 0x110
        boundingArea = calculateBoundingArea();
 80032d6:	f10d 0908 	add.w	r9, sp, #8
 80032da:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80032de:	f8a4 5114 	strh.w	r5, [r4, #276]	@ 0x114
        boundingArea = calculateBoundingArea();
 80032e2:	4631      	mov	r1, r6
 80032e4:	4648      	mov	r0, r9
 80032e6:	4798      	blx	r3
 80032e8:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80032ec:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80032f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80032f4:	4b30      	ldr	r3, [pc, #192]	@ (80033b8 <_ZN17EndScreenViewBaseC1Ev+0x1d8>)
 80032f6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(playerwinBuffer, PLAYERWIN_SIZE, "%s", touchgfx::TypedText(T_WINNERBUFFER).getText());
 80032f8:	f504 7bba 	add.w	fp, r4, #372	@ 0x174
 80032fc:	b92b      	cbnz	r3, 800330a <_ZN17EndScreenViewBaseC1Ev+0x12a>
 80032fe:	4b2f      	ldr	r3, [pc, #188]	@ (80033bc <_ZN17EndScreenViewBaseC1Ev+0x1dc>)
 8003300:	4a2f      	ldr	r2, [pc, #188]	@ (80033c0 <_ZN17EndScreenViewBaseC1Ev+0x1e0>)
 8003302:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003304:	482f      	ldr	r0, [pc, #188]	@ (80033c4 <_ZN17EndScreenViewBaseC1Ev+0x1e4>)
 8003306:	f024 fda1 	bl	8027e4c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800330a:	4b2f      	ldr	r3, [pc, #188]	@ (80033c8 <_ZN17EndScreenViewBaseC1Ev+0x1e8>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800330c:	881b      	ldrh	r3, [r3, #0]
 800330e:	b91b      	cbnz	r3, 8003318 <_ZN17EndScreenViewBaseC1Ev+0x138>
 8003310:	4b2e      	ldr	r3, [pc, #184]	@ (80033cc <_ZN17EndScreenViewBaseC1Ev+0x1ec>)
 8003312:	4a2b      	ldr	r2, [pc, #172]	@ (80033c0 <_ZN17EndScreenViewBaseC1Ev+0x1e0>)
 8003314:	2161      	movs	r1, #97	@ 0x61
 8003316:	e7f5      	b.n	8003304 <_ZN17EndScreenViewBaseC1Ev+0x124>
        return texts->getText(typedTextId);
 8003318:	4b2d      	ldr	r3, [pc, #180]	@ (80033d0 <_ZN17EndScreenViewBaseC1Ev+0x1f0>)
 800331a:	4629      	mov	r1, r5
 800331c:	6818      	ldr	r0, [r3, #0]
 800331e:	f003 f9f3 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8003322:	4a2c      	ldr	r2, [pc, #176]	@ (80033d4 <_ZN17EndScreenViewBaseC1Ev+0x1f4>)
 8003324:	4603      	mov	r3, r0
 8003326:	210a      	movs	r1, #10
 8003328:	4658      	mov	r0, fp
 800332a:	f014 fd51 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800332e:	f8c4 b128 	str.w	fp, [r4, #296]	@ 0x128
    playerwin.resizeToCurrentText();
 8003332:	4630      	mov	r0, r6
 8003334:	f00e fa3a 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003338:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 80033dc <_ZN17EndScreenViewBaseC1Ev+0x1fc>
 800333c:	f8cd b020 	str.w	fp, [sp, #32]
 8003340:	2328      	movs	r3, #40	@ 0x28
    playerwin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9392));
 8003342:	a908      	add	r1, sp, #32
 8003344:	4630      	mov	r0, r6
 8003346:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800334a:	f00e fa4f 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800334e:	4631      	mov	r1, r6
 8003350:	4638      	mov	r0, r7
 8003352:	f00a fc55 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    winner.setXY(91, 28);
 8003356:	221c      	movs	r2, #28
 8003358:	4640      	mov	r0, r8
 800335a:	215b      	movs	r1, #91	@ 0x5b
 800335c:	f7ff f9d5 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 8003360:	4641      	mov	r1, r8
 8003362:	4648      	mov	r0, r9
        color = newColor;
 8003364:	f8c4 a15c 	str.w	sl, [r4, #348]	@ 0x15c
        linespace = space;
 8003368:	f8a4 5160 	strh.w	r5, [r4, #352]	@ 0x160
        boundingArea = calculateBoundingArea();
 800336c:	f00d ff96 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003370:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8003374:	f504 73b4 	add.w	r3, r4, #360	@ 0x168
 8003378:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800337c:	2322      	movs	r3, #34	@ 0x22
    winner.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86XU));
 800337e:	a908      	add	r1, sp, #32
 8003380:	4640      	mov	r0, r8
 8003382:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003386:	f8cd b020 	str.w	fp, [sp, #32]
 800338a:	f00e fa2f 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800338e:	4638      	mov	r0, r7
 8003390:	4641      	mov	r1, r8
 8003392:	f00a fc35 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003396:	4620      	mov	r0, r4
 8003398:	b00b      	add	sp, #44	@ 0x2c
 800339a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800339e:	bf00      	nop
 80033a0:	0802a750 	.word	0x0802a750
 80033a4:	0802a5d8 	.word	0x0802a5d8
 80033a8:	0802a738 	.word	0x0802a738
 80033ac:	08003145 	.word	0x08003145
 80033b0:	ffaddced 	.word	0xffaddced
 80033b4:	ffedf1f5 	.word	0xffedf1f5
 80033b8:	20013fb8 	.word	0x20013fb8
 80033bc:	080293f2 	.word	0x080293f2
 80033c0:	080294f4 	.word	0x080294f4
 80033c4:	0802946f 	.word	0x0802946f
 80033c8:	20013fbc 	.word	0x20013fbc
 80033cc:	080294b6 	.word	0x080294b6
 80033d0:	20013fc4 	.word	0x20013fc4
 80033d4:	0802953f 	.word	0x0802953f
 80033d8:	ff3f4669 	.word	0xff3f4669
 80033dc:	0802a5c8 	.word	0x0802a5c8

080033e0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80033e0:	4770      	bx	lr

080033e2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80033e2:	4770      	bx	lr

080033e4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80033e4:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80033e8:	6808      	ldr	r0, [r1, #0]
 80033ea:	6849      	ldr	r1, [r1, #4]
 80033ec:	c303      	stmia	r3!, {r0, r1}
    }
 80033ee:	4770      	bx	lr

080033f0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80033f0:	4770      	bx	lr

080033f2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80033f2:	4770      	bx	lr

080033f4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80033f4:	6041      	str	r1, [r0, #4]
    }
 80033f6:	4770      	bx	lr

080033f8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80033f8:	b510      	push	{r4, lr}
 80033fa:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80033fc:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003400:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003404:	8002      	strh	r2, [r0, #0]
 8003406:	8042      	strh	r2, [r0, #2]
 8003408:	8084      	strh	r4, [r0, #4]
 800340a:	80c1      	strh	r1, [r0, #6]
        }
 800340c:	bd10      	pop	{r4, pc}

0800340e <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800340e:	4770      	bx	lr

08003410 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003410:	4770      	bx	lr

08003412 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003412:	4770      	bx	lr

08003414 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8003414:	4b06      	ldr	r3, [pc, #24]	@ (8003430 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003416:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800341a:	2300      	movs	r3, #0
 800341c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// StartScreen

void FrontendApplicationBase::gotoStartScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003420:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003424:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003428:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoStartScreenScreenNoTransition();
    }
 800342c:	4770      	bx	lr
 800342e:	bf00      	nop
 8003430:	08003c7d 	.word	0x08003c7d

08003434 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003434:	2301      	movs	r3, #1
 8003436:	7203      	strb	r3, [r0, #8]
    }
 8003438:	4770      	bx	lr

0800343a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800343a:	4770      	bx	lr

0800343c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800343c:	4770      	bx	lr

0800343e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800343e:	4770      	bx	lr

08003440 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003440:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003442:	6840      	ldr	r0, [r0, #4]
 8003444:	6803      	ldr	r3, [r0, #0]
 8003446:	3110      	adds	r1, #16
 8003448:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800344a:	4718      	bx	r3

0800344c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 800344c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800344e:	6840      	ldr	r0, [r0, #4]
 8003450:	6803      	ldr	r3, [r0, #0]
 8003452:	3110      	adds	r1, #16
 8003454:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003456:	4718      	bx	r3

08003458 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003458:	4770      	bx	lr

0800345a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800345a:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800345c:	68c2      	ldr	r2, [r0, #12]
 800345e:	6841      	ldr	r1, [r0, #4]
 8003460:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003462:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003464:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003468:	07d2      	lsls	r2, r2, #31
 800346a:	bf48      	it	mi
 800346c:	590a      	ldrmi	r2, [r1, r4]
 800346e:	689b      	ldr	r3, [r3, #8]
    }
 8003470:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003474:	bf48      	it	mi
 8003476:	58d3      	ldrmi	r3, [r2, r3]
 8003478:	4718      	bx	r3

0800347a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800347a:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 800347c:	6840      	ldr	r0, [r0, #4]
 800347e:	b130      	cbz	r0, 800348e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003480:	689a      	ldr	r2, [r3, #8]
 8003482:	b91a      	cbnz	r2, 800348c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8003484:	68d8      	ldr	r0, [r3, #12]
 8003486:	f000 0001 	and.w	r0, r0, #1
 800348a:	4770      	bx	lr
 800348c:	2001      	movs	r0, #1
    }
 800348e:	4770      	bx	lr

08003490 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003490:	b510      	push	{r4, lr}
 8003492:	210c      	movs	r1, #12
 8003494:	4604      	mov	r4, r0
 8003496:	f023 fd9d 	bl	8026fd4 <_ZdlPvj>
 800349a:	4620      	mov	r0, r4
 800349c:	bd10      	pop	{r4, pc}

0800349e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800349e:	b510      	push	{r4, lr}
 80034a0:	2110      	movs	r1, #16
 80034a2:	4604      	mov	r4, r0
 80034a4:	f023 fd96 	bl	8026fd4 <_ZdlPvj>
 80034a8:	4620      	mov	r0, r4
 80034aa:	bd10      	pop	{r4, pc}

080034ac <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80034ac:	b510      	push	{r4, lr}
 80034ae:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80034b2:	4604      	mov	r4, r0
 80034b4:	f023 fd8e 	bl	8026fd4 <_ZdlPvj>
 80034b8:	4620      	mov	r0, r4
 80034ba:	bd10      	pop	{r4, pc}

080034bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 80034bc:	b510      	push	{r4, lr}
 80034be:	2138      	movs	r1, #56	@ 0x38
 80034c0:	4604      	mov	r4, r0
 80034c2:	f023 fd87 	bl	8026fd4 <_ZdlPvj>
 80034c6:	4620      	mov	r0, r4
 80034c8:	bd10      	pop	{r4, pc}

080034ca <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80034ca:	b510      	push	{r4, lr}
 80034cc:	2128      	movs	r1, #40	@ 0x28
 80034ce:	4604      	mov	r4, r0
 80034d0:	f023 fd80 	bl	8026fd4 <_ZdlPvj>
 80034d4:	4620      	mov	r0, r4
 80034d6:	bd10      	pop	{r4, pc}

080034d8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80034d8:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80034da:	f011 f8a3 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
 80034de:	6803      	ldr	r3, [r0, #0]
    }
 80034e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80034e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80034e6:	4718      	bx	r3

080034e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80034e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80034ea:	4604      	mov	r4, r0
        animationCounter++;
 80034ec:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80034ee:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80034f0:	3001      	adds	r0, #1
 80034f2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80034f4:	4298      	cmp	r0, r3
        animationCounter++;
 80034f6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80034f8:	d905      	bls.n	8003506 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80034fa:	2301      	movs	r3, #1
 80034fc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80034fe:	2300      	movs	r3, #0
 8003500:	72a3      	strb	r3, [r4, #10]
    }
 8003502:	b003      	add	sp, #12
 8003504:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003506:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800350a:	2100      	movs	r1, #0
 800350c:	f013 f932 	bl	8016774 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003510:	07c3      	lsls	r3, r0, #31
 8003512:	d507      	bpl.n	8003524 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x3c>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003514:	2800      	cmp	r0, #0
 8003516:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800351a:	bfc8      	it	gt
 800351c:	2301      	movgt	r3, #1
 800351e:	fa13 f080 	uxtah	r0, r3, r0
 8003522:	b200      	sxth	r0, r0
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003524:	4b14      	ldr	r3, [pc, #80]	@ (8003578 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x90>)
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003526:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003528:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800352a:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800352c:	b283      	uxth	r3, r0
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800352e:	4813      	ldr	r0, [pc, #76]	@ (800357c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
 8003530:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003534:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003538:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800353a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 800353c:	442b      	add	r3, r5
 800353e:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003540:	b212      	sxth	r2, r2
 8003542:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003546:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8003548:	8322      	strh	r2, [r4, #24]
 800354a:	f8ad 2000 	strh.w	r2, [sp]
 800354e:	2200      	movs	r2, #0
 8003550:	691b      	ldr	r3, [r3, #16]
 8003552:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003556:	4669      	mov	r1, sp
 8003558:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800355a:	7aa3      	ldrb	r3, [r4, #10]
 800355c:	2b01      	cmp	r3, #1
 800355e:	d1d0      	bne.n	8003502 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003560:	4b07      	ldr	r3, [pc, #28]	@ (8003580 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
 8003562:	781b      	ldrb	r3, [r3, #0]
 8003564:	2b00      	cmp	r3, #0
 8003566:	d0cc      	beq.n	8003502 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003568:	f011 f85c 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800356c:	b003      	add	sp, #12
 800356e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003572:	f011 b85d 	b.w	8014630 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
 8003576:	bf00      	nop
 8003578:	20013f54 	.word	0x20013f54
 800357c:	20013f56 	.word	0x20013f56
 8003580:	20013f5e 	.word	0x20013f5e

08003584 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003584:	b510      	push	{r4, lr}
 8003586:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003588:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 800358c:	b158      	cbz	r0, 80035a6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800358e:	6803      	ldr	r3, [r0, #0]
 8003590:	68db      	ldr	r3, [r3, #12]
 8003592:	4798      	blx	r3
 8003594:	b138      	cbz	r0, 80035a6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003596:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800359a:	6803      	ldr	r3, [r0, #0]
 800359c:	689b      	ldr	r3, [r3, #8]
 800359e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80035a0:	2300      	movs	r3, #0
 80035a2:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80035a6:	bd10      	pop	{r4, pc}

080035a8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80035a8:	4b04      	ldr	r3, [pc, #16]	@ (80035bc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80035b0:	b10a      	cbz	r2, 80035b6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80035b2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80035b4:	b900      	cbnz	r0, 80035b8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80035b6:	6898      	ldr	r0, [r3, #8]
    }
 80035b8:	4770      	bx	lr
 80035ba:	bf00      	nop
 80035bc:	20013f60 	.word	0x20013f60

080035c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80035c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80035c2:	4617      	mov	r7, r2
 80035c4:	4604      	mov	r4, r0
 80035c6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80035c8:	f011 f916 	bl	80147f8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80035cc:	4b12      	ldr	r3, [pc, #72]	@ (8003618 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80035ce:	601c      	str	r4, [r3, #0]
      model(m)
 80035d0:	4b12      	ldr	r3, [pc, #72]	@ (800361c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80035d2:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80035d4:	4b12      	ldr	r3, [pc, #72]	@ (8003620 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 80035d6:	2500      	movs	r5, #0
 80035d8:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 80035dc:	4b11      	ldr	r3, [pc, #68]	@ (8003624 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 80035de:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 80035e2:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80035e4:	6803      	ldr	r3, [r0, #0]
 80035e6:	4629      	mov	r1, r5
 80035e8:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80035ea:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 80035ee:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80035f2:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80035f4:	4628      	mov	r0, r5
 80035f6:	f003 f84b 	bl	8006690 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80035fa:	f7ff ffd5 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 80035fe:	f01b fbe6 	bl	801edce <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003602:	f7ff ffd1 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 8003606:	f01b fc5d 	bl	801eec4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800360a:	f7ff ffcd 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800360e:	f01b fc65 	bl	801eedc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8003612:	4620      	mov	r0, r4
 8003614:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003616:	bf00      	nop
 8003618:	20013fb4 	.word	0x20013fb4
 800361c:	0802a804 	.word	0x0802a804
 8003620:	0802a7ec 	.word	0x0802a7ec
 8003624:	20013f60 	.word	0x20013f60

08003628 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003628:	4b06      	ldr	r3, [pc, #24]	@ (8003644 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv+0x1c>)
 800362a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800362e:	2300      	movs	r3, #0
 8003630:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003634:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003638:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800363c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003640:	4770      	bx	lr
 8003642:	bf00      	nop
 8003644:	08003c7d 	.word	0x08003c7d

08003648 <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv>:
 8003648:	4b06      	ldr	r3, [pc, #24]	@ (8003664 <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv+0x1c>)
 800364a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800364e:	2300      	movs	r3, #0
 8003650:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003654:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003658:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800365c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003660:	4770      	bx	lr
 8003662:	bf00      	nop
 8003664:	080041e5 	.word	0x080041e5

08003668 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>:
 8003668:	4b06      	ldr	r3, [pc, #24]	@ (8003684 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv+0x1c>)
 800366a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800366e:	2300      	movs	r3, #0
 8003670:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// HardScreen

void FrontendApplicationBase::gotoHardScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHardScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003674:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003678:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800367c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003680:	4770      	bx	lr
 8003682:	bf00      	nop
 8003684:	08003b31 	.word	0x08003b31

08003688 <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv>:
 8003688:	4b06      	ldr	r3, [pc, #24]	@ (80036a4 <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv+0x1c>)
 800368a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800368e:	2300      	movs	r3, #0
 8003690:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// HardReadyScreen

void FrontendApplicationBase::gotoHardReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHardReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003694:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003698:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800369c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80036a0:	4770      	bx	lr
 80036a2:	bf00      	nop
 80036a4:	080040ad 	.word	0x080040ad

080036a8 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>:
 80036a8:	4b06      	ldr	r3, [pc, #24]	@ (80036c4 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv+0x1c>)
 80036aa:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80036ae:	2300      	movs	r3, #0
 80036b0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MediumScreen

void FrontendApplicationBase::gotoMediumScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMediumScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80036b4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80036b8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80036bc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80036c0:	4770      	bx	lr
 80036c2:	bf00      	nop
 80036c4:	080039e5 	.word	0x080039e5

080036c8 <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv>:
 80036c8:	4b06      	ldr	r3, [pc, #24]	@ (80036e4 <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv+0x1c>)
 80036ca:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80036ce:	2300      	movs	r3, #0
 80036d0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MediumReadyScreen

void FrontendApplicationBase::gotoMediumReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMediumReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80036d4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80036d8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80036dc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80036e0:	4770      	bx	lr
 80036e2:	bf00      	nop
 80036e4:	08003f71 	.word	0x08003f71

080036e8 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>:
 80036e8:	4b06      	ldr	r3, [pc, #24]	@ (8003704 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv+0x1c>)
 80036ea:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80036ee:	2300      	movs	r3, #0
 80036f0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EasyScreen

void FrontendApplicationBase::gotoEasyScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEasyScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80036f4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80036f8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80036fc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003700:	4770      	bx	lr
 8003702:	bf00      	nop
 8003704:	08003899 	.word	0x08003899

08003708 <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv>:
 8003708:	4b06      	ldr	r3, [pc, #24]	@ (8003724 <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv+0x1c>)
 800370a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800370e:	2300      	movs	r3, #0
 8003710:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EasyReadyScreen

void FrontendApplicationBase::gotoEasyReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEasyReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003714:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003718:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800371c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003720:	4770      	bx	lr
 8003722:	bf00      	nop
 8003724:	08003e35 	.word	0x08003e35

08003728 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>:
 8003728:	4b06      	ldr	r3, [pc, #24]	@ (8003744 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv+0x1c>)
 800372a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800372e:	2300      	movs	r3, #0
 8003730:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EndScreen

void FrontendApplicationBase::gotoEndScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEndScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003734:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003738:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800373c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003740:	4770      	bx	lr
 8003742:	bf00      	nop
 8003744:	08003751 	.word	0x08003751

08003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003748:	6803      	ldr	r3, [r0, #0]
 800374a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800374c:	4718      	bx	r3
	...

08003750 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoEndScreenScreenNoTransitionImpl()
{
 8003750:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<EndScreenView, EndScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003754:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003758:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800375a:	68b0      	ldr	r0, [r6, #8]
 800375c:	6803      	ldr	r3, [r0, #0]
 800375e:	6a1b      	ldr	r3, [r3, #32]
 8003760:	4798      	blx	r3
 8003762:	f5b0 7fcc 	cmp.w	r0, #408	@ 0x198
 8003766:	d205      	bcs.n	8003774 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x24>
 8003768:	4b43      	ldr	r3, [pc, #268]	@ (8003878 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x128>)
 800376a:	4a44      	ldr	r2, [pc, #272]	@ (800387c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 800376c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800376e:	4844      	ldr	r0, [pc, #272]	@ (8003880 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x130>)
 8003770:	f024 fb6c 	bl	8027e4c <__assert_func>
 8003774:	6870      	ldr	r0, [r6, #4]
 8003776:	6803      	ldr	r3, [r0, #0]
 8003778:	6a1b      	ldr	r3, [r3, #32]
 800377a:	4798      	blx	r3
 800377c:	280f      	cmp	r0, #15
 800377e:	d803      	bhi.n	8003788 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x38>
 8003780:	4b40      	ldr	r3, [pc, #256]	@ (8003884 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x134>)
 8003782:	4a3e      	ldr	r2, [pc, #248]	@ (800387c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 8003784:	21a4      	movs	r1, #164	@ 0xa4
 8003786:	e7f2      	b.n	800376e <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003788:	68f0      	ldr	r0, [r6, #12]
 800378a:	6803      	ldr	r3, [r0, #0]
 800378c:	6a1b      	ldr	r3, [r3, #32]
 800378e:	4798      	blx	r3
 8003790:	280b      	cmp	r0, #11
 8003792:	d803      	bhi.n	800379c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x4c>
 8003794:	4b3c      	ldr	r3, [pc, #240]	@ (8003888 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x138>)
 8003796:	4a39      	ldr	r2, [pc, #228]	@ (800387c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 8003798:	21a5      	movs	r1, #165	@ 0xa5
 800379a:	e7e8      	b.n	800376e <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800379c:	f010 ff42 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80037a0:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8003890 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80037a4:	3004      	adds	r0, #4
 80037a6:	f010 ff8a 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80037aa:	f8d9 0000 	ldr.w	r0, [r9]
 80037ae:	b110      	cbz	r0, 80037b6 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80037b0:	6803      	ldr	r3, [r0, #0]
 80037b2:	68db      	ldr	r3, [r3, #12]
 80037b4:	4798      	blx	r3
    if (*currentTrans)
 80037b6:	f8d9 0000 	ldr.w	r0, [r9]
 80037ba:	b110      	cbz	r0, 80037c2 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80037bc:	6803      	ldr	r3, [r0, #0]
 80037be:	681b      	ldr	r3, [r3, #0]
 80037c0:	4798      	blx	r3
    if (*currentScreen)
 80037c2:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003894 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x144>
 80037c6:	f8d8 0000 	ldr.w	r0, [r8]
 80037ca:	b110      	cbz	r0, 80037d2 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80037cc:	6803      	ldr	r3, [r0, #0]
 80037ce:	695b      	ldr	r3, [r3, #20]
 80037d0:	4798      	blx	r3
    if (*currentPresenter)
 80037d2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80037d6:	b110      	cbz	r0, 80037de <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80037d8:	6803      	ldr	r3, [r0, #0]
 80037da:	685b      	ldr	r3, [r3, #4]
 80037dc:	4798      	blx	r3
    if (*currentScreen)
 80037de:	f8d8 0000 	ldr.w	r0, [r8]
 80037e2:	b110      	cbz	r0, 80037ea <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80037e4:	6803      	ldr	r3, [r0, #0]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	4798      	blx	r3
    if (*currentPresenter)
 80037ea:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80037ee:	b110      	cbz	r0, 80037f6 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80037f0:	6803      	ldr	r3, [r0, #0]
 80037f2:	689b      	ldr	r3, [r3, #8]
 80037f4:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80037f6:	68f0      	ldr	r0, [r6, #12]
 80037f8:	2100      	movs	r1, #0
 80037fa:	f7ff ffa5 	bl	8003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 80037fe:	f04f 0b00 	mov.w	fp, #0
 8003802:	4b22      	ldr	r3, [pc, #136]	@ (800388c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x13c>)
 8003804:	f8c0 b004 	str.w	fp, [r0, #4]
 8003808:	4604      	mov	r4, r0
 800380a:	f880 b008 	strb.w	fp, [r0, #8]
 800380e:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003810:	68b0      	ldr	r0, [r6, #8]
 8003812:	6803      	ldr	r3, [r0, #0]
 8003814:	4659      	mov	r1, fp
 8003816:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003818:	4798      	blx	r3
 800381a:	4605      	mov	r5, r0
 800381c:	f003 fc30 	bl	8007080 <_ZN13EndScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003820:	6870      	ldr	r0, [r6, #4]
 8003822:	6803      	ldr	r3, [r0, #0]
 8003824:	4659      	mov	r1, fp
 8003826:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003828:	4798      	blx	r3
 800382a:	4629      	mov	r1, r5
 800382c:	4606      	mov	r6, r0
 800382e:	f003 fc03 	bl	8007038 <_ZN18EndScreenPresenterC1ER13EndScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8003832:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003834:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003838:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800383c:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003840:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003844:	682b      	ldr	r3, [r5, #0]
    virtual void movePaddle2Right() {}
    virtual void paddle1Action() {}
    virtual void paddle2Action() {}
    void bind(Model* m)
    {
        model = m;
 8003846:	f8c6 a008 	str.w	sl, [r6, #8]
 800384a:	4628      	mov	r0, r5
 800384c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800384e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003850:	4798      	blx	r3
    newPresenter->activate();
 8003852:	6833      	ldr	r3, [r6, #0]
 8003854:	4630      	mov	r0, r6
 8003856:	681b      	ldr	r3, [r3, #0]
 8003858:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800385a:	4621      	mov	r1, r4
 800385c:	4628      	mov	r0, r5
 800385e:	f012 ff83 	bl	8016768 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003862:	6823      	ldr	r3, [r4, #0]
 8003864:	4620      	mov	r0, r4
 8003866:	691b      	ldr	r3, [r3, #16]
 8003868:	4798      	blx	r3
    newTransition->invalidate();
 800386a:	6823      	ldr	r3, [r4, #0]
 800386c:	695b      	ldr	r3, [r3, #20]
 800386e:	4620      	mov	r0, r4
}
 8003870:	b001      	add	sp, #4
 8003872:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003876:	4718      	bx	r3
 8003878:	08029542 	.word	0x08029542
 800387c:	080295d0 	.word	0x080295d0
 8003880:	080296a6 	.word	0x080296a6
 8003884:	080296ed 	.word	0x080296ed
 8003888:	08029790 	.word	0x08029790
 800388c:	0802a858 	.word	0x0802a858
 8003890:	20013fa8 	.word	0x20013fa8
 8003894:	20013fa4 	.word	0x20013fa4

08003898 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv>:
{
 8003898:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<EasyScreenView, EasyScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800389c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80038a0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80038a2:	68b0      	ldr	r0, [r6, #8]
 80038a4:	6803      	ldr	r3, [r0, #0]
 80038a6:	6a1b      	ldr	r3, [r3, #32]
 80038a8:	4798      	blx	r3
 80038aa:	f241 53e3 	movw	r3, #5603	@ 0x15e3
 80038ae:	4298      	cmp	r0, r3
 80038b0:	d805      	bhi.n	80038be <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x26>
 80038b2:	4b44      	ldr	r3, [pc, #272]	@ (80039c4 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x12c>)
 80038b4:	4a44      	ldr	r2, [pc, #272]	@ (80039c8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 80038b6:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80038b8:	4844      	ldr	r0, [pc, #272]	@ (80039cc <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x134>)
 80038ba:	f024 fac7 	bl	8027e4c <__assert_func>
 80038be:	6870      	ldr	r0, [r6, #4]
 80038c0:	6803      	ldr	r3, [r0, #0]
 80038c2:	6a1b      	ldr	r3, [r3, #32]
 80038c4:	4798      	blx	r3
 80038c6:	280f      	cmp	r0, #15
 80038c8:	d803      	bhi.n	80038d2 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x3a>
 80038ca:	4b41      	ldr	r3, [pc, #260]	@ (80039d0 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x138>)
 80038cc:	4a3e      	ldr	r2, [pc, #248]	@ (80039c8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 80038ce:	21a4      	movs	r1, #164	@ 0xa4
 80038d0:	e7f2      	b.n	80038b8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80038d2:	68f0      	ldr	r0, [r6, #12]
 80038d4:	6803      	ldr	r3, [r0, #0]
 80038d6:	6a1b      	ldr	r3, [r3, #32]
 80038d8:	4798      	blx	r3
 80038da:	280b      	cmp	r0, #11
 80038dc:	d803      	bhi.n	80038e6 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x4e>
 80038de:	4b3d      	ldr	r3, [pc, #244]	@ (80039d4 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x13c>)
 80038e0:	4a39      	ldr	r2, [pc, #228]	@ (80039c8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 80038e2:	21a5      	movs	r1, #165	@ 0xa5
 80038e4:	e7e8      	b.n	80038b8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80038e6:	f010 fe9d 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80038ea:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80039dc <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x144>
 80038ee:	3004      	adds	r0, #4
 80038f0:	f010 fee5 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80038f4:	f8d9 0000 	ldr.w	r0, [r9]
 80038f8:	b110      	cbz	r0, 8003900 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80038fa:	6803      	ldr	r3, [r0, #0]
 80038fc:	68db      	ldr	r3, [r3, #12]
 80038fe:	4798      	blx	r3
    if (*currentTrans)
 8003900:	f8d9 0000 	ldr.w	r0, [r9]
 8003904:	b110      	cbz	r0, 800390c <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003906:	6803      	ldr	r3, [r0, #0]
 8003908:	681b      	ldr	r3, [r3, #0]
 800390a:	4798      	blx	r3
    if (*currentScreen)
 800390c:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80039e0 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x148>
 8003910:	f8d8 0000 	ldr.w	r0, [r8]
 8003914:	b110      	cbz	r0, 800391c <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003916:	6803      	ldr	r3, [r0, #0]
 8003918:	695b      	ldr	r3, [r3, #20]
 800391a:	4798      	blx	r3
    if (*currentPresenter)
 800391c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003920:	b110      	cbz	r0, 8003928 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003922:	6803      	ldr	r3, [r0, #0]
 8003924:	685b      	ldr	r3, [r3, #4]
 8003926:	4798      	blx	r3
    if (*currentScreen)
 8003928:	f8d8 0000 	ldr.w	r0, [r8]
 800392c:	b110      	cbz	r0, 8003934 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800392e:	6803      	ldr	r3, [r0, #0]
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	4798      	blx	r3
    if (*currentPresenter)
 8003934:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003938:	b110      	cbz	r0, 8003940 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800393a:	6803      	ldr	r3, [r0, #0]
 800393c:	689b      	ldr	r3, [r3, #8]
 800393e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003940:	68f0      	ldr	r0, [r6, #12]
 8003942:	2100      	movs	r1, #0
 8003944:	f7ff ff00 	bl	8003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003948:	f04f 0b00 	mov.w	fp, #0
 800394c:	4b22      	ldr	r3, [pc, #136]	@ (80039d8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x140>)
 800394e:	f8c0 b004 	str.w	fp, [r0, #4]
 8003952:	4604      	mov	r4, r0
 8003954:	f880 b008 	strb.w	fp, [r0, #8]
 8003958:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800395a:	68b0      	ldr	r0, [r6, #8]
 800395c:	6803      	ldr	r3, [r0, #0]
 800395e:	4659      	mov	r1, fp
 8003960:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003962:	4798      	blx	r3
 8003964:	4605      	mov	r5, r0
 8003966:	f002 ffd9 	bl	800691c <_ZN14EasyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800396a:	6870      	ldr	r0, [r6, #4]
 800396c:	6803      	ldr	r3, [r0, #0]
 800396e:	4659      	mov	r1, fp
 8003970:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003972:	4798      	blx	r3
 8003974:	4629      	mov	r1, r5
 8003976:	4606      	mov	r6, r0
 8003978:	f002 ffa4 	bl	80068c4 <_ZN19EasyScreenPresenterC1ER14EasyScreenView>
    model->bind(newPresenter);
 800397c:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800397e:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003982:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003986:	f8c8 5000 	str.w	r5, [r8]
 800398a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800398e:	682b      	ldr	r3, [r5, #0]
 8003990:	f8c6 a008 	str.w	sl, [r6, #8]
 8003994:	4628      	mov	r0, r5
 8003996:	68db      	ldr	r3, [r3, #12]
 8003998:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800399a:	4798      	blx	r3
    newPresenter->activate();
 800399c:	6833      	ldr	r3, [r6, #0]
 800399e:	4630      	mov	r0, r6
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80039a4:	4621      	mov	r1, r4
 80039a6:	4628      	mov	r0, r5
 80039a8:	f012 fede 	bl	8016768 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80039ac:	6823      	ldr	r3, [r4, #0]
 80039ae:	4620      	mov	r0, r4
 80039b0:	691b      	ldr	r3, [r3, #16]
 80039b2:	4798      	blx	r3
    newTransition->invalidate();
 80039b4:	6823      	ldr	r3, [r4, #0]
 80039b6:	695b      	ldr	r3, [r3, #20]
 80039b8:	4620      	mov	r0, r4
}
 80039ba:	b001      	add	sp, #4
 80039bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039c0:	4718      	bx	r3
 80039c2:	bf00      	nop
 80039c4:	08029542 	.word	0x08029542
 80039c8:	08029833 	.word	0x08029833
 80039cc:	080296a6 	.word	0x080296a6
 80039d0:	080296ed 	.word	0x080296ed
 80039d4:	08029790 	.word	0x08029790
 80039d8:	0802a858 	.word	0x0802a858
 80039dc:	20013fa8 	.word	0x20013fa8
 80039e0:	20013fa4 	.word	0x20013fa4

080039e4 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv>:
{
 80039e4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MediumScreenView, MediumScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80039e8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80039ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80039ee:	68b0      	ldr	r0, [r6, #8]
 80039f0:	6803      	ldr	r3, [r0, #0]
 80039f2:	6a1b      	ldr	r3, [r3, #32]
 80039f4:	4798      	blx	r3
 80039f6:	f241 634b 	movw	r3, #5707	@ 0x164b
 80039fa:	4298      	cmp	r0, r3
 80039fc:	d805      	bhi.n	8003a0a <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x26>
 80039fe:	4b44      	ldr	r3, [pc, #272]	@ (8003b10 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x12c>)
 8003a00:	4a44      	ldr	r2, [pc, #272]	@ (8003b14 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 8003a02:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003a04:	4844      	ldr	r0, [pc, #272]	@ (8003b18 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x134>)
 8003a06:	f024 fa21 	bl	8027e4c <__assert_func>
 8003a0a:	6870      	ldr	r0, [r6, #4]
 8003a0c:	6803      	ldr	r3, [r0, #0]
 8003a0e:	6a1b      	ldr	r3, [r3, #32]
 8003a10:	4798      	blx	r3
 8003a12:	280f      	cmp	r0, #15
 8003a14:	d803      	bhi.n	8003a1e <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x3a>
 8003a16:	4b41      	ldr	r3, [pc, #260]	@ (8003b1c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x138>)
 8003a18:	4a3e      	ldr	r2, [pc, #248]	@ (8003b14 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 8003a1a:	21a4      	movs	r1, #164	@ 0xa4
 8003a1c:	e7f2      	b.n	8003a04 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a1e:	68f0      	ldr	r0, [r6, #12]
 8003a20:	6803      	ldr	r3, [r0, #0]
 8003a22:	6a1b      	ldr	r3, [r3, #32]
 8003a24:	4798      	blx	r3
 8003a26:	280b      	cmp	r0, #11
 8003a28:	d803      	bhi.n	8003a32 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x4e>
 8003a2a:	4b3d      	ldr	r3, [pc, #244]	@ (8003b20 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x13c>)
 8003a2c:	4a39      	ldr	r2, [pc, #228]	@ (8003b14 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 8003a2e:	21a5      	movs	r1, #165	@ 0xa5
 8003a30:	e7e8      	b.n	8003a04 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003a32:	f010 fdf7 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003a36:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8003b28 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x144>
 8003a3a:	3004      	adds	r0, #4
 8003a3c:	f010 fe3f 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003a40:	f8d9 0000 	ldr.w	r0, [r9]
 8003a44:	b110      	cbz	r0, 8003a4c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003a46:	6803      	ldr	r3, [r0, #0]
 8003a48:	68db      	ldr	r3, [r3, #12]
 8003a4a:	4798      	blx	r3
    if (*currentTrans)
 8003a4c:	f8d9 0000 	ldr.w	r0, [r9]
 8003a50:	b110      	cbz	r0, 8003a58 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003a52:	6803      	ldr	r3, [r0, #0]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	4798      	blx	r3
    if (*currentScreen)
 8003a58:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003b2c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x148>
 8003a5c:	f8d8 0000 	ldr.w	r0, [r8]
 8003a60:	b110      	cbz	r0, 8003a68 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003a62:	6803      	ldr	r3, [r0, #0]
 8003a64:	695b      	ldr	r3, [r3, #20]
 8003a66:	4798      	blx	r3
    if (*currentPresenter)
 8003a68:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003a6c:	b110      	cbz	r0, 8003a74 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003a6e:	6803      	ldr	r3, [r0, #0]
 8003a70:	685b      	ldr	r3, [r3, #4]
 8003a72:	4798      	blx	r3
    if (*currentScreen)
 8003a74:	f8d8 0000 	ldr.w	r0, [r8]
 8003a78:	b110      	cbz	r0, 8003a80 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003a7a:	6803      	ldr	r3, [r0, #0]
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	4798      	blx	r3
    if (*currentPresenter)
 8003a80:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003a84:	b110      	cbz	r0, 8003a8c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003a86:	6803      	ldr	r3, [r0, #0]
 8003a88:	689b      	ldr	r3, [r3, #8]
 8003a8a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003a8c:	68f0      	ldr	r0, [r6, #12]
 8003a8e:	2100      	movs	r1, #0
 8003a90:	f7ff fe5a 	bl	8003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003a94:	f04f 0b00 	mov.w	fp, #0
 8003a98:	4b22      	ldr	r3, [pc, #136]	@ (8003b24 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x140>)
 8003a9a:	f8c0 b004 	str.w	fp, [r0, #4]
 8003a9e:	4604      	mov	r4, r0
 8003aa0:	f880 b008 	strb.w	fp, [r0, #8]
 8003aa4:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003aa6:	68b0      	ldr	r0, [r6, #8]
 8003aa8:	6803      	ldr	r3, [r0, #0]
 8003aaa:	4659      	mov	r1, fp
 8003aac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003aae:	4798      	blx	r3
 8003ab0:	4605      	mov	r5, r0
 8003ab2:	f004 fa5b 	bl	8007f6c <_ZN16MediumScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ab6:	6870      	ldr	r0, [r6, #4]
 8003ab8:	6803      	ldr	r3, [r0, #0]
 8003aba:	4659      	mov	r1, fp
 8003abc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003abe:	4798      	blx	r3
 8003ac0:	4629      	mov	r1, r5
 8003ac2:	4606      	mov	r6, r0
 8003ac4:	f004 fa26 	bl	8007f14 <_ZN21MediumScreenPresenterC1ER16MediumScreenView>
    model->bind(newPresenter);
 8003ac8:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003aca:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003ace:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003ad2:	f8c8 5000 	str.w	r5, [r8]
 8003ad6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003ada:	682b      	ldr	r3, [r5, #0]
 8003adc:	f8c6 a008 	str.w	sl, [r6, #8]
 8003ae0:	4628      	mov	r0, r5
 8003ae2:	68db      	ldr	r3, [r3, #12]
 8003ae4:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003ae6:	4798      	blx	r3
    newPresenter->activate();
 8003ae8:	6833      	ldr	r3, [r6, #0]
 8003aea:	4630      	mov	r0, r6
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003af0:	4621      	mov	r1, r4
 8003af2:	4628      	mov	r0, r5
 8003af4:	f012 fe38 	bl	8016768 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003af8:	6823      	ldr	r3, [r4, #0]
 8003afa:	4620      	mov	r0, r4
 8003afc:	691b      	ldr	r3, [r3, #16]
 8003afe:	4798      	blx	r3
    newTransition->invalidate();
 8003b00:	6823      	ldr	r3, [r4, #0]
 8003b02:	695b      	ldr	r3, [r3, #20]
 8003b04:	4620      	mov	r0, r4
}
 8003b06:	b001      	add	sp, #4
 8003b08:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b0c:	4718      	bx	r3
 8003b0e:	bf00      	nop
 8003b10:	08029542 	.word	0x08029542
 8003b14:	0802990b 	.word	0x0802990b
 8003b18:	080296a6 	.word	0x080296a6
 8003b1c:	080296ed 	.word	0x080296ed
 8003b20:	08029790 	.word	0x08029790
 8003b24:	0802a858 	.word	0x0802a858
 8003b28:	20013fa8 	.word	0x20013fa8
 8003b2c:	20013fa4 	.word	0x20013fa4

08003b30 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv>:
{
 8003b30:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<HardScreenView, HardScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003b34:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003b38:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003b3a:	68b0      	ldr	r0, [r6, #8]
 8003b3c:	6803      	ldr	r3, [r0, #0]
 8003b3e:	6a1b      	ldr	r3, [r3, #32]
 8003b40:	4798      	blx	r3
 8003b42:	f241 63fb 	movw	r3, #5883	@ 0x16fb
 8003b46:	4298      	cmp	r0, r3
 8003b48:	d805      	bhi.n	8003b56 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x26>
 8003b4a:	4b44      	ldr	r3, [pc, #272]	@ (8003c5c <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x12c>)
 8003b4c:	4a44      	ldr	r2, [pc, #272]	@ (8003c60 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 8003b4e:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003b50:	4844      	ldr	r0, [pc, #272]	@ (8003c64 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x134>)
 8003b52:	f024 f97b 	bl	8027e4c <__assert_func>
 8003b56:	6870      	ldr	r0, [r6, #4]
 8003b58:	6803      	ldr	r3, [r0, #0]
 8003b5a:	6a1b      	ldr	r3, [r3, #32]
 8003b5c:	4798      	blx	r3
 8003b5e:	280f      	cmp	r0, #15
 8003b60:	d803      	bhi.n	8003b6a <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x3a>
 8003b62:	4b41      	ldr	r3, [pc, #260]	@ (8003c68 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x138>)
 8003b64:	4a3e      	ldr	r2, [pc, #248]	@ (8003c60 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 8003b66:	21a4      	movs	r1, #164	@ 0xa4
 8003b68:	e7f2      	b.n	8003b50 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003b6a:	68f0      	ldr	r0, [r6, #12]
 8003b6c:	6803      	ldr	r3, [r0, #0]
 8003b6e:	6a1b      	ldr	r3, [r3, #32]
 8003b70:	4798      	blx	r3
 8003b72:	280b      	cmp	r0, #11
 8003b74:	d803      	bhi.n	8003b7e <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x4e>
 8003b76:	4b3d      	ldr	r3, [pc, #244]	@ (8003c6c <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x13c>)
 8003b78:	4a39      	ldr	r2, [pc, #228]	@ (8003c60 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 8003b7a:	21a5      	movs	r1, #165	@ 0xa5
 8003b7c:	e7e8      	b.n	8003b50 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003b7e:	f010 fd51 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003b82:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8003c74 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x144>
 8003b86:	3004      	adds	r0, #4
 8003b88:	f010 fd99 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003b8c:	f8d9 0000 	ldr.w	r0, [r9]
 8003b90:	b110      	cbz	r0, 8003b98 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003b92:	6803      	ldr	r3, [r0, #0]
 8003b94:	68db      	ldr	r3, [r3, #12]
 8003b96:	4798      	blx	r3
    if (*currentTrans)
 8003b98:	f8d9 0000 	ldr.w	r0, [r9]
 8003b9c:	b110      	cbz	r0, 8003ba4 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003b9e:	6803      	ldr	r3, [r0, #0]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	4798      	blx	r3
    if (*currentScreen)
 8003ba4:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003c78 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x148>
 8003ba8:	f8d8 0000 	ldr.w	r0, [r8]
 8003bac:	b110      	cbz	r0, 8003bb4 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003bae:	6803      	ldr	r3, [r0, #0]
 8003bb0:	695b      	ldr	r3, [r3, #20]
 8003bb2:	4798      	blx	r3
    if (*currentPresenter)
 8003bb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003bb8:	b110      	cbz	r0, 8003bc0 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003bba:	6803      	ldr	r3, [r0, #0]
 8003bbc:	685b      	ldr	r3, [r3, #4]
 8003bbe:	4798      	blx	r3
    if (*currentScreen)
 8003bc0:	f8d8 0000 	ldr.w	r0, [r8]
 8003bc4:	b110      	cbz	r0, 8003bcc <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003bc6:	6803      	ldr	r3, [r0, #0]
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	4798      	blx	r3
    if (*currentPresenter)
 8003bcc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003bd0:	b110      	cbz	r0, 8003bd8 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003bd2:	6803      	ldr	r3, [r0, #0]
 8003bd4:	689b      	ldr	r3, [r3, #8]
 8003bd6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003bd8:	68f0      	ldr	r0, [r6, #12]
 8003bda:	2100      	movs	r1, #0
 8003bdc:	f7ff fdb4 	bl	8003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003be0:	f04f 0b00 	mov.w	fp, #0
 8003be4:	4b22      	ldr	r3, [pc, #136]	@ (8003c70 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x140>)
 8003be6:	f8c0 b004 	str.w	fp, [r0, #4]
 8003bea:	4604      	mov	r4, r0
 8003bec:	f880 b008 	strb.w	fp, [r0, #8]
 8003bf0:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003bf2:	68b0      	ldr	r0, [r6, #8]
 8003bf4:	6803      	ldr	r3, [r0, #0]
 8003bf6:	4659      	mov	r1, fp
 8003bf8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003bfa:	4798      	blx	r3
 8003bfc:	4605      	mov	r5, r0
 8003bfe:	f003 fb5f 	bl	80072c0 <_ZN14HardScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c02:	6870      	ldr	r0, [r6, #4]
 8003c04:	6803      	ldr	r3, [r0, #0]
 8003c06:	4659      	mov	r1, fp
 8003c08:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c0a:	4798      	blx	r3
 8003c0c:	4629      	mov	r1, r5
 8003c0e:	4606      	mov	r6, r0
 8003c10:	f003 fb2a 	bl	8007268 <_ZN19HardScreenPresenterC1ER14HardScreenView>
    model->bind(newPresenter);
 8003c14:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003c16:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003c1a:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003c1e:	f8c8 5000 	str.w	r5, [r8]
 8003c22:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003c26:	682b      	ldr	r3, [r5, #0]
 8003c28:	f8c6 a008 	str.w	sl, [r6, #8]
 8003c2c:	4628      	mov	r0, r5
 8003c2e:	68db      	ldr	r3, [r3, #12]
 8003c30:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003c32:	4798      	blx	r3
    newPresenter->activate();
 8003c34:	6833      	ldr	r3, [r6, #0]
 8003c36:	4630      	mov	r0, r6
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003c3c:	4621      	mov	r1, r4
 8003c3e:	4628      	mov	r0, r5
 8003c40:	f012 fd92 	bl	8016768 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003c44:	6823      	ldr	r3, [r4, #0]
 8003c46:	4620      	mov	r0, r4
 8003c48:	691b      	ldr	r3, [r3, #16]
 8003c4a:	4798      	blx	r3
    newTransition->invalidate();
 8003c4c:	6823      	ldr	r3, [r4, #0]
 8003c4e:	695b      	ldr	r3, [r3, #20]
 8003c50:	4620      	mov	r0, r4
}
 8003c52:	b001      	add	sp, #4
 8003c54:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c58:	4718      	bx	r3
 8003c5a:	bf00      	nop
 8003c5c:	08029542 	.word	0x08029542
 8003c60:	080299e7 	.word	0x080299e7
 8003c64:	080296a6 	.word	0x080296a6
 8003c68:	080296ed 	.word	0x080296ed
 8003c6c:	08029790 	.word	0x08029790
 8003c70:	0802a858 	.word	0x0802a858
 8003c74:	20013fa8 	.word	0x20013fa8
 8003c78:	20013fa4 	.word	0x20013fa4

08003c7c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv>:
{
 8003c7c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003c80:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003c84:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c86:	68b0      	ldr	r0, [r6, #8]
 8003c88:	6803      	ldr	r3, [r0, #0]
 8003c8a:	6a1b      	ldr	r3, [r3, #32]
 8003c8c:	4798      	blx	r3
 8003c8e:	f641 037b 	movw	r3, #6267	@ 0x187b
 8003c92:	4298      	cmp	r0, r3
 8003c94:	d805      	bhi.n	8003ca2 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x26>
 8003c96:	4b44      	ldr	r3, [pc, #272]	@ (8003da8 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x12c>)
 8003c98:	4a44      	ldr	r2, [pc, #272]	@ (8003dac <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 8003c9a:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c9c:	4844      	ldr	r0, [pc, #272]	@ (8003db0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x134>)
 8003c9e:	f024 f8d5 	bl	8027e4c <__assert_func>
 8003ca2:	6870      	ldr	r0, [r6, #4]
 8003ca4:	6803      	ldr	r3, [r0, #0]
 8003ca6:	6a1b      	ldr	r3, [r3, #32]
 8003ca8:	4798      	blx	r3
 8003caa:	280f      	cmp	r0, #15
 8003cac:	d803      	bhi.n	8003cb6 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x3a>
 8003cae:	4b41      	ldr	r3, [pc, #260]	@ (8003db4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x138>)
 8003cb0:	4a3e      	ldr	r2, [pc, #248]	@ (8003dac <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 8003cb2:	21a4      	movs	r1, #164	@ 0xa4
 8003cb4:	e7f2      	b.n	8003c9c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003cb6:	68f0      	ldr	r0, [r6, #12]
 8003cb8:	6803      	ldr	r3, [r0, #0]
 8003cba:	6a1b      	ldr	r3, [r3, #32]
 8003cbc:	4798      	blx	r3
 8003cbe:	280b      	cmp	r0, #11
 8003cc0:	d803      	bhi.n	8003cca <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x4e>
 8003cc2:	4b3d      	ldr	r3, [pc, #244]	@ (8003db8 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x13c>)
 8003cc4:	4a39      	ldr	r2, [pc, #228]	@ (8003dac <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 8003cc6:	21a5      	movs	r1, #165	@ 0xa5
 8003cc8:	e7e8      	b.n	8003c9c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003cca:	f010 fcab 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003cce:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8003dc0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x144>
 8003cd2:	3004      	adds	r0, #4
 8003cd4:	f010 fcf3 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003cd8:	f8d9 0000 	ldr.w	r0, [r9]
 8003cdc:	b110      	cbz	r0, 8003ce4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003cde:	6803      	ldr	r3, [r0, #0]
 8003ce0:	68db      	ldr	r3, [r3, #12]
 8003ce2:	4798      	blx	r3
    if (*currentTrans)
 8003ce4:	f8d9 0000 	ldr.w	r0, [r9]
 8003ce8:	b110      	cbz	r0, 8003cf0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003cea:	6803      	ldr	r3, [r0, #0]
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	4798      	blx	r3
    if (*currentScreen)
 8003cf0:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003dc4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x148>
 8003cf4:	f8d8 0000 	ldr.w	r0, [r8]
 8003cf8:	b110      	cbz	r0, 8003d00 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003cfa:	6803      	ldr	r3, [r0, #0]
 8003cfc:	695b      	ldr	r3, [r3, #20]
 8003cfe:	4798      	blx	r3
    if (*currentPresenter)
 8003d00:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003d04:	b110      	cbz	r0, 8003d0c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003d06:	6803      	ldr	r3, [r0, #0]
 8003d08:	685b      	ldr	r3, [r3, #4]
 8003d0a:	4798      	blx	r3
    if (*currentScreen)
 8003d0c:	f8d8 0000 	ldr.w	r0, [r8]
 8003d10:	b110      	cbz	r0, 8003d18 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003d12:	6803      	ldr	r3, [r0, #0]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	4798      	blx	r3
    if (*currentPresenter)
 8003d18:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003d1c:	b110      	cbz	r0, 8003d24 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003d1e:	6803      	ldr	r3, [r0, #0]
 8003d20:	689b      	ldr	r3, [r3, #8]
 8003d22:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d24:	68f0      	ldr	r0, [r6, #12]
 8003d26:	2100      	movs	r1, #0
 8003d28:	f7ff fd0e 	bl	8003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003d2c:	f04f 0b00 	mov.w	fp, #0
 8003d30:	4b22      	ldr	r3, [pc, #136]	@ (8003dbc <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x140>)
 8003d32:	f8c0 b004 	str.w	fp, [r0, #4]
 8003d36:	4604      	mov	r4, r0
 8003d38:	f880 b008 	strb.w	fp, [r0, #8]
 8003d3c:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d3e:	68b0      	ldr	r0, [r6, #8]
 8003d40:	6803      	ldr	r3, [r0, #0]
 8003d42:	4659      	mov	r1, fp
 8003d44:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d46:	4798      	blx	r3
 8003d48:	4605      	mov	r5, r0
 8003d4a:	f004 fd0b 	bl	8008764 <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003d4e:	6870      	ldr	r0, [r6, #4]
 8003d50:	6803      	ldr	r3, [r0, #0]
 8003d52:	4659      	mov	r1, fp
 8003d54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d56:	4798      	blx	r3
 8003d58:	4629      	mov	r1, r5
 8003d5a:	4606      	mov	r6, r0
 8003d5c:	f004 fce0 	bl	8008720 <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
 8003d60:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003d62:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003d66:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003d6a:	f8c8 5000 	str.w	r5, [r8]
 8003d6e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003d72:	682b      	ldr	r3, [r5, #0]
 8003d74:	f8c6 a008 	str.w	sl, [r6, #8]
 8003d78:	4628      	mov	r0, r5
 8003d7a:	68db      	ldr	r3, [r3, #12]
 8003d7c:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003d7e:	4798      	blx	r3
    newPresenter->activate();
 8003d80:	6833      	ldr	r3, [r6, #0]
 8003d82:	4630      	mov	r0, r6
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003d88:	4621      	mov	r1, r4
 8003d8a:	4628      	mov	r0, r5
 8003d8c:	f012 fcec 	bl	8016768 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d90:	6823      	ldr	r3, [r4, #0]
 8003d92:	4620      	mov	r0, r4
 8003d94:	691b      	ldr	r3, [r3, #16]
 8003d96:	4798      	blx	r3
    newTransition->invalidate();
 8003d98:	6823      	ldr	r3, [r4, #0]
 8003d9a:	695b      	ldr	r3, [r3, #20]
 8003d9c:	4620      	mov	r0, r4
}
 8003d9e:	b001      	add	sp, #4
 8003da0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003da4:	4718      	bx	r3
 8003da6:	bf00      	nop
 8003da8:	08029542 	.word	0x08029542
 8003dac:	08029abf 	.word	0x08029abf
 8003db0:	080296a6 	.word	0x080296a6
 8003db4:	080296ed 	.word	0x080296ed
 8003db8:	08029790 	.word	0x08029790
 8003dbc:	0802a858 	.word	0x0802a858
 8003dc0:	20013fa8 	.word	0x20013fa8
 8003dc4:	20013fa4 	.word	0x20013fa4

08003dc8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003dc8:	6803      	ldr	r3, [r0, #0]
 8003dca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003dcc:	4718      	bx	r3
	...

08003dd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
 8003dd0:	2300      	movs	r3, #0
    WipeTransition(const uint8_t transitionSteps = 20)
 8003dd2:	b570      	push	{r4, r5, r6, lr}
          solid()
 8003dd4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8003dd8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8003ddc:	e9c0 3309 	strd	r3, r3, [r0, #36]	@ 0x24
 8003de0:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8003de4:	6043      	str	r3, [r0, #4]
 8003de6:	7203      	strb	r3, [r0, #8]
          animationCounter(0),
 8003de8:	7283      	strb	r3, [r0, #10]
          calculatedValue(0),
 8003dea:	81c3      	strh	r3, [r0, #14]
          solid()
 8003dec:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003df0:	6343      	str	r3, [r0, #52]	@ 0x34
    class FullSolidRect : public Widget
 8003df2:	4b0c      	ldr	r3, [pc, #48]	@ (8003e24 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 8003df4:	6103      	str	r3, [r0, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 8003df6:	4b0c      	ldr	r3, [pc, #48]	@ (8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
          animationSteps(transitionSteps),
 8003df8:	7241      	strb	r1, [r0, #9]
            targetValue = HAL::DISPLAY_WIDTH;
 8003dfa:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003dfe:	4b0b      	ldr	r3, [pc, #44]	@ (8003e2c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
          solid()
 8003e00:	4a0b      	ldr	r2, [pc, #44]	@ (8003e30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e02:	f9b3 6000 	ldrsh.w	r6, [r3]
          solid()
 8003e06:	6002      	str	r2, [r0, #0]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e08:	f100 0510 	add.w	r5, r0, #16
    WipeTransition(const uint8_t transitionSteps = 20)
 8003e0c:	4604      	mov	r4, r0
            targetValue = HAL::DISPLAY_WIDTH;
 8003e0e:	8181      	strh	r1, [r0, #12]
        setWidth(width);
 8003e10:	4628      	mov	r0, r5
 8003e12:	f7fd fa73 	bl	80012fc <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003e16:	4628      	mov	r0, r5
 8003e18:	4631      	mov	r1, r6
 8003e1a:	f7fd fa71 	bl	8001300 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 8003e1e:	4620      	mov	r0, r4
 8003e20:	bd70      	pop	{r4, r5, r6, pc}
 8003e22:	bf00      	nop
 8003e24:	0802a784 	.word	0x0802a784
 8003e28:	20013f54 	.word	0x20013f54
 8003e2c:	20013f56 	.word	0x20013f56
 8003e30:	0802a87c 	.word	0x0802a87c

08003e34 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv>:
{
 8003e34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<EasyReadyScreenView, EasyReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e38:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003e3c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e3e:	68b0      	ldr	r0, [r6, #8]
 8003e40:	6803      	ldr	r3, [r0, #0]
 8003e42:	6a1b      	ldr	r3, [r3, #32]
 8003e44:	4798      	blx	r3
 8003e46:	f241 53bb 	movw	r3, #5563	@ 0x15bb
 8003e4a:	4298      	cmp	r0, r3
 8003e4c:	d805      	bhi.n	8003e5a <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x26>
 8003e4e:	4b41      	ldr	r3, [pc, #260]	@ (8003f54 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 8003e50:	4a41      	ldr	r2, [pc, #260]	@ (8003f58 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003e52:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e54:	4841      	ldr	r0, [pc, #260]	@ (8003f5c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 8003e56:	f023 fff9 	bl	8027e4c <__assert_func>
 8003e5a:	6870      	ldr	r0, [r6, #4]
 8003e5c:	6803      	ldr	r3, [r0, #0]
 8003e5e:	6a1b      	ldr	r3, [r3, #32]
 8003e60:	4798      	blx	r3
 8003e62:	280f      	cmp	r0, #15
 8003e64:	d803      	bhi.n	8003e6e <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x3a>
 8003e66:	4b3e      	ldr	r3, [pc, #248]	@ (8003f60 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 8003e68:	4a3b      	ldr	r2, [pc, #236]	@ (8003f58 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003e6a:	21a4      	movs	r1, #164	@ 0xa4
 8003e6c:	e7f2      	b.n	8003e54 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e6e:	68f0      	ldr	r0, [r6, #12]
 8003e70:	6803      	ldr	r3, [r0, #0]
 8003e72:	6a1b      	ldr	r3, [r3, #32]
 8003e74:	4798      	blx	r3
 8003e76:	2837      	cmp	r0, #55	@ 0x37
 8003e78:	d803      	bhi.n	8003e82 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x4e>
 8003e7a:	4b3a      	ldr	r3, [pc, #232]	@ (8003f64 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x130>)
 8003e7c:	4a36      	ldr	r2, [pc, #216]	@ (8003f58 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003e7e:	21a5      	movs	r1, #165	@ 0xa5
 8003e80:	e7e8      	b.n	8003e54 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003e82:	f010 fbcf 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003e86:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8003f68 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x134>
 8003e8a:	3004      	adds	r0, #4
 8003e8c:	f010 fc17 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003e90:	f8d9 0000 	ldr.w	r0, [r9]
 8003e94:	b110      	cbz	r0, 8003e9c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003e96:	6803      	ldr	r3, [r0, #0]
 8003e98:	68db      	ldr	r3, [r3, #12]
 8003e9a:	4798      	blx	r3
    if (*currentTrans)
 8003e9c:	f8d9 0000 	ldr.w	r0, [r9]
 8003ea0:	b110      	cbz	r0, 8003ea8 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003ea2:	6803      	ldr	r3, [r0, #0]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	4798      	blx	r3
    if (*currentScreen)
 8003ea8:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8003f6c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x138>
 8003eac:	f8d8 0000 	ldr.w	r0, [r8]
 8003eb0:	b110      	cbz	r0, 8003eb8 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003eb2:	6803      	ldr	r3, [r0, #0]
 8003eb4:	695b      	ldr	r3, [r3, #20]
 8003eb6:	4798      	blx	r3
    if (*currentPresenter)
 8003eb8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003ebc:	b110      	cbz	r0, 8003ec4 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003ebe:	6803      	ldr	r3, [r0, #0]
 8003ec0:	685b      	ldr	r3, [r3, #4]
 8003ec2:	4798      	blx	r3
    if (*currentScreen)
 8003ec4:	f8d8 0000 	ldr.w	r0, [r8]
 8003ec8:	b110      	cbz	r0, 8003ed0 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003eca:	6803      	ldr	r3, [r0, #0]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	4798      	blx	r3
    if (*currentPresenter)
 8003ed0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003ed4:	b110      	cbz	r0, 8003edc <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003ed6:	6803      	ldr	r3, [r0, #0]
 8003ed8:	689b      	ldr	r3, [r3, #8]
 8003eda:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003edc:	68f0      	ldr	r0, [r6, #12]
 8003ede:	2100      	movs	r1, #0
 8003ee0:	f7ff ff72 	bl	8003dc8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003ee4:	2114      	movs	r1, #20
 8003ee6:	4604      	mov	r4, r0
 8003ee8:	f7ff ff72 	bl	8003dd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003eec:	68b0      	ldr	r0, [r6, #8]
 8003eee:	6803      	ldr	r3, [r0, #0]
 8003ef0:	2100      	movs	r1, #0
 8003ef2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ef4:	4798      	blx	r3
 8003ef6:	4605      	mov	r5, r0
 8003ef8:	f002 fc86 	bl	8006808 <_ZN19EasyReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003efc:	6870      	ldr	r0, [r6, #4]
 8003efe:	6803      	ldr	r3, [r0, #0]
 8003f00:	2100      	movs	r1, #0
 8003f02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f04:	4798      	blx	r3
 8003f06:	4629      	mov	r1, r5
 8003f08:	4606      	mov	r6, r0
 8003f0a:	f002 fc47 	bl	800679c <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView>
    model->bind(newPresenter);
 8003f0e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003f10:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003f14:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003f18:	f8c8 5000 	str.w	r5, [r8]
 8003f1c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f20:	682b      	ldr	r3, [r5, #0]
 8003f22:	f8c6 a008 	str.w	sl, [r6, #8]
 8003f26:	4628      	mov	r0, r5
 8003f28:	68db      	ldr	r3, [r3, #12]
 8003f2a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003f2c:	4798      	blx	r3
    newPresenter->activate();
 8003f2e:	6833      	ldr	r3, [r6, #0]
 8003f30:	4630      	mov	r0, r6
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f36:	4621      	mov	r1, r4
 8003f38:	4628      	mov	r0, r5
 8003f3a:	f012 fc15 	bl	8016768 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f3e:	6823      	ldr	r3, [r4, #0]
 8003f40:	4620      	mov	r0, r4
 8003f42:	691b      	ldr	r3, [r3, #16]
 8003f44:	4798      	blx	r3
    newTransition->invalidate();
 8003f46:	6823      	ldr	r3, [r4, #0]
 8003f48:	4620      	mov	r0, r4
 8003f4a:	695b      	ldr	r3, [r3, #20]
}
 8003f4c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f50:	4718      	bx	r3
 8003f52:	bf00      	nop
 8003f54:	08029542 	.word	0x08029542
 8003f58:	08029b99 	.word	0x08029b99
 8003f5c:	080296a6 	.word	0x080296a6
 8003f60:	080296ed 	.word	0x080296ed
 8003f64:	08029790 	.word	0x08029790
 8003f68:	20013fa8 	.word	0x20013fa8
 8003f6c:	20013fa4 	.word	0x20013fa4

08003f70 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv>:
{
 8003f70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MediumReadyScreenView, MediumReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f74:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003f78:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003f7a:	68b0      	ldr	r0, [r6, #8]
 8003f7c:	6803      	ldr	r3, [r0, #0]
 8003f7e:	6a1b      	ldr	r3, [r3, #32]
 8003f80:	4798      	blx	r3
 8003f82:	f241 6323 	movw	r3, #5667	@ 0x1623
 8003f86:	4298      	cmp	r0, r3
 8003f88:	d805      	bhi.n	8003f96 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x26>
 8003f8a:	4b41      	ldr	r3, [pc, #260]	@ (8004090 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 8003f8c:	4a41      	ldr	r2, [pc, #260]	@ (8004094 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003f8e:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003f90:	4841      	ldr	r0, [pc, #260]	@ (8004098 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 8003f92:	f023 ff5b 	bl	8027e4c <__assert_func>
 8003f96:	6870      	ldr	r0, [r6, #4]
 8003f98:	6803      	ldr	r3, [r0, #0]
 8003f9a:	6a1b      	ldr	r3, [r3, #32]
 8003f9c:	4798      	blx	r3
 8003f9e:	280f      	cmp	r0, #15
 8003fa0:	d803      	bhi.n	8003faa <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x3a>
 8003fa2:	4b3e      	ldr	r3, [pc, #248]	@ (800409c <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 8003fa4:	4a3b      	ldr	r2, [pc, #236]	@ (8004094 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003fa6:	21a4      	movs	r1, #164	@ 0xa4
 8003fa8:	e7f2      	b.n	8003f90 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003faa:	68f0      	ldr	r0, [r6, #12]
 8003fac:	6803      	ldr	r3, [r0, #0]
 8003fae:	6a1b      	ldr	r3, [r3, #32]
 8003fb0:	4798      	blx	r3
 8003fb2:	2837      	cmp	r0, #55	@ 0x37
 8003fb4:	d803      	bhi.n	8003fbe <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x4e>
 8003fb6:	4b3a      	ldr	r3, [pc, #232]	@ (80040a0 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x130>)
 8003fb8:	4a36      	ldr	r2, [pc, #216]	@ (8004094 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003fba:	21a5      	movs	r1, #165	@ 0xa5
 8003fbc:	e7e8      	b.n	8003f90 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003fbe:	f010 fb31 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003fc2:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 80040a4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x134>
 8003fc6:	3004      	adds	r0, #4
 8003fc8:	f010 fb79 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003fcc:	f8d9 0000 	ldr.w	r0, [r9]
 8003fd0:	b110      	cbz	r0, 8003fd8 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003fd2:	6803      	ldr	r3, [r0, #0]
 8003fd4:	68db      	ldr	r3, [r3, #12]
 8003fd6:	4798      	blx	r3
    if (*currentTrans)
 8003fd8:	f8d9 0000 	ldr.w	r0, [r9]
 8003fdc:	b110      	cbz	r0, 8003fe4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003fde:	6803      	ldr	r3, [r0, #0]
 8003fe0:	681b      	ldr	r3, [r3, #0]
 8003fe2:	4798      	blx	r3
    if (*currentScreen)
 8003fe4:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 80040a8 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x138>
 8003fe8:	f8d8 0000 	ldr.w	r0, [r8]
 8003fec:	b110      	cbz	r0, 8003ff4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003fee:	6803      	ldr	r3, [r0, #0]
 8003ff0:	695b      	ldr	r3, [r3, #20]
 8003ff2:	4798      	blx	r3
    if (*currentPresenter)
 8003ff4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003ff8:	b110      	cbz	r0, 8004000 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003ffa:	6803      	ldr	r3, [r0, #0]
 8003ffc:	685b      	ldr	r3, [r3, #4]
 8003ffe:	4798      	blx	r3
    if (*currentScreen)
 8004000:	f8d8 0000 	ldr.w	r0, [r8]
 8004004:	b110      	cbz	r0, 800400c <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004006:	6803      	ldr	r3, [r0, #0]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	4798      	blx	r3
    if (*currentPresenter)
 800400c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004010:	b110      	cbz	r0, 8004018 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004012:	6803      	ldr	r3, [r0, #0]
 8004014:	689b      	ldr	r3, [r3, #8]
 8004016:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004018:	68f0      	ldr	r0, [r6, #12]
 800401a:	2100      	movs	r1, #0
 800401c:	f7ff fed4 	bl	8003dc8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004020:	2114      	movs	r1, #20
 8004022:	4604      	mov	r4, r0
 8004024:	f7ff fed4 	bl	8003dd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004028:	68b0      	ldr	r0, [r6, #8]
 800402a:	6803      	ldr	r3, [r0, #0]
 800402c:	2100      	movs	r1, #0
 800402e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004030:	4798      	blx	r3
 8004032:	4605      	mov	r5, r0
 8004034:	f003 ff10 	bl	8007e58 <_ZN21MediumReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004038:	6870      	ldr	r0, [r6, #4]
 800403a:	6803      	ldr	r3, [r0, #0]
 800403c:	2100      	movs	r1, #0
 800403e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004040:	4798      	blx	r3
 8004042:	4629      	mov	r1, r5
 8004044:	4606      	mov	r6, r0
 8004046:	f003 fed1 	bl	8007dec <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView>
    model->bind(newPresenter);
 800404a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800404c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004050:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004054:	f8c8 5000 	str.w	r5, [r8]
 8004058:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800405c:	682b      	ldr	r3, [r5, #0]
 800405e:	f8c6 a008 	str.w	sl, [r6, #8]
 8004062:	4628      	mov	r0, r5
 8004064:	68db      	ldr	r3, [r3, #12]
 8004066:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004068:	4798      	blx	r3
    newPresenter->activate();
 800406a:	6833      	ldr	r3, [r6, #0]
 800406c:	4630      	mov	r0, r6
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004072:	4621      	mov	r1, r4
 8004074:	4628      	mov	r0, r5
 8004076:	f012 fb77 	bl	8016768 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800407a:	6823      	ldr	r3, [r4, #0]
 800407c:	4620      	mov	r0, r4
 800407e:	691b      	ldr	r3, [r3, #16]
 8004080:	4798      	blx	r3
    newTransition->invalidate();
 8004082:	6823      	ldr	r3, [r4, #0]
 8004084:	4620      	mov	r0, r4
 8004086:	695b      	ldr	r3, [r3, #20]
}
 8004088:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800408c:	4718      	bx	r3
 800408e:	bf00      	nop
 8004090:	08029542 	.word	0x08029542
 8004094:	08029c8d 	.word	0x08029c8d
 8004098:	080296a6 	.word	0x080296a6
 800409c:	080296ed 	.word	0x080296ed
 80040a0:	08029790 	.word	0x08029790
 80040a4:	20013fa8 	.word	0x20013fa8
 80040a8:	20013fa4 	.word	0x20013fa4

080040ac <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv>:
{
 80040ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<HardReadyScreenView, HardReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80040b0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80040b4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80040b6:	68b0      	ldr	r0, [r6, #8]
 80040b8:	6803      	ldr	r3, [r0, #0]
 80040ba:	6a1b      	ldr	r3, [r3, #32]
 80040bc:	4798      	blx	r3
 80040be:	f5b0 5fb8 	cmp.w	r0, #5888	@ 0x1700
 80040c2:	d205      	bcs.n	80040d0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x24>
 80040c4:	4b40      	ldr	r3, [pc, #256]	@ (80041c8 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x11c>)
 80040c6:	4a41      	ldr	r2, [pc, #260]	@ (80041cc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 80040c8:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80040ca:	4841      	ldr	r0, [pc, #260]	@ (80041d0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 80040cc:	f023 febe 	bl	8027e4c <__assert_func>
 80040d0:	6870      	ldr	r0, [r6, #4]
 80040d2:	6803      	ldr	r3, [r0, #0]
 80040d4:	6a1b      	ldr	r3, [r3, #32]
 80040d6:	4798      	blx	r3
 80040d8:	280f      	cmp	r0, #15
 80040da:	d803      	bhi.n	80040e4 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x38>
 80040dc:	4b3d      	ldr	r3, [pc, #244]	@ (80041d4 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 80040de:	4a3b      	ldr	r2, [pc, #236]	@ (80041cc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 80040e0:	21a4      	movs	r1, #164	@ 0xa4
 80040e2:	e7f2      	b.n	80040ca <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80040e4:	68f0      	ldr	r0, [r6, #12]
 80040e6:	6803      	ldr	r3, [r0, #0]
 80040e8:	6a1b      	ldr	r3, [r3, #32]
 80040ea:	4798      	blx	r3
 80040ec:	2837      	cmp	r0, #55	@ 0x37
 80040ee:	d803      	bhi.n	80040f8 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x4c>
 80040f0:	4b39      	ldr	r3, [pc, #228]	@ (80041d8 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 80040f2:	4a36      	ldr	r2, [pc, #216]	@ (80041cc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 80040f4:	21a5      	movs	r1, #165	@ 0xa5
 80040f6:	e7e8      	b.n	80040ca <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80040f8:	f010 fa94 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80040fc:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 80041dc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x130>
 8004100:	3004      	adds	r0, #4
 8004102:	f010 fadc 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004106:	f8d9 0000 	ldr.w	r0, [r9]
 800410a:	b110      	cbz	r0, 8004112 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800410c:	6803      	ldr	r3, [r0, #0]
 800410e:	68db      	ldr	r3, [r3, #12]
 8004110:	4798      	blx	r3
    if (*currentTrans)
 8004112:	f8d9 0000 	ldr.w	r0, [r9]
 8004116:	b110      	cbz	r0, 800411e <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004118:	6803      	ldr	r3, [r0, #0]
 800411a:	681b      	ldr	r3, [r3, #0]
 800411c:	4798      	blx	r3
    if (*currentScreen)
 800411e:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 80041e0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x134>
 8004122:	f8d8 0000 	ldr.w	r0, [r8]
 8004126:	b110      	cbz	r0, 800412e <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004128:	6803      	ldr	r3, [r0, #0]
 800412a:	695b      	ldr	r3, [r3, #20]
 800412c:	4798      	blx	r3
    if (*currentPresenter)
 800412e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004132:	b110      	cbz	r0, 800413a <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004134:	6803      	ldr	r3, [r0, #0]
 8004136:	685b      	ldr	r3, [r3, #4]
 8004138:	4798      	blx	r3
    if (*currentScreen)
 800413a:	f8d8 0000 	ldr.w	r0, [r8]
 800413e:	b110      	cbz	r0, 8004146 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004140:	6803      	ldr	r3, [r0, #0]
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	4798      	blx	r3
    if (*currentPresenter)
 8004146:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800414a:	b110      	cbz	r0, 8004152 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800414c:	6803      	ldr	r3, [r0, #0]
 800414e:	689b      	ldr	r3, [r3, #8]
 8004150:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004152:	68f0      	ldr	r0, [r6, #12]
 8004154:	2100      	movs	r1, #0
 8004156:	f7ff fe37 	bl	8003dc8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800415a:	2114      	movs	r1, #20
 800415c:	4604      	mov	r4, r0
 800415e:	f7ff fe37 	bl	8003dd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004162:	68b0      	ldr	r0, [r6, #8]
 8004164:	6803      	ldr	r3, [r0, #0]
 8004166:	2100      	movs	r1, #0
 8004168:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800416a:	4798      	blx	r3
 800416c:	4605      	mov	r5, r0
 800416e:	f003 f821 	bl	80071b4 <_ZN19HardReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004172:	6870      	ldr	r0, [r6, #4]
 8004174:	6803      	ldr	r3, [r0, #0]
 8004176:	2100      	movs	r1, #0
 8004178:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800417a:	4798      	blx	r3
 800417c:	4629      	mov	r1, r5
 800417e:	4606      	mov	r6, r0
 8004180:	f002 ffe2 	bl	8007148 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView>
    model->bind(newPresenter);
 8004184:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004186:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800418a:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800418e:	f8c8 5000 	str.w	r5, [r8]
 8004192:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004196:	682b      	ldr	r3, [r5, #0]
 8004198:	f8c6 a008 	str.w	sl, [r6, #8]
 800419c:	4628      	mov	r0, r5
 800419e:	68db      	ldr	r3, [r3, #12]
 80041a0:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80041a2:	4798      	blx	r3
    newPresenter->activate();
 80041a4:	6833      	ldr	r3, [r6, #0]
 80041a6:	4630      	mov	r0, r6
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80041ac:	4621      	mov	r1, r4
 80041ae:	4628      	mov	r0, r5
 80041b0:	f012 fada 	bl	8016768 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80041b4:	6823      	ldr	r3, [r4, #0]
 80041b6:	4620      	mov	r0, r4
 80041b8:	691b      	ldr	r3, [r3, #16]
 80041ba:	4798      	blx	r3
    newTransition->invalidate();
 80041bc:	6823      	ldr	r3, [r4, #0]
 80041be:	4620      	mov	r0, r4
 80041c0:	695b      	ldr	r3, [r3, #20]
}
 80041c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80041c6:	4718      	bx	r3
 80041c8:	08029542 	.word	0x08029542
 80041cc:	08029d85 	.word	0x08029d85
 80041d0:	080296a6 	.word	0x080296a6
 80041d4:	080296ed 	.word	0x080296ed
 80041d8:	08029790 	.word	0x08029790
 80041dc:	20013fa8 	.word	0x20013fa8
 80041e0:	20013fa4 	.word	0x20013fa4

080041e4 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv>:
{
 80041e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80041e8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80041ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80041ee:	68b0      	ldr	r0, [r6, #8]
 80041f0:	6803      	ldr	r3, [r0, #0]
 80041f2:	6a1b      	ldr	r3, [r3, #32]
 80041f4:	4798      	blx	r3
 80041f6:	f641 037b 	movw	r3, #6267	@ 0x187b
 80041fa:	4298      	cmp	r0, r3
 80041fc:	d805      	bhi.n	800420a <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x26>
 80041fe:	4b41      	ldr	r3, [pc, #260]	@ (8004304 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x120>)
 8004200:	4a41      	ldr	r2, [pc, #260]	@ (8004308 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 8004202:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004204:	4841      	ldr	r0, [pc, #260]	@ (800430c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x128>)
 8004206:	f023 fe21 	bl	8027e4c <__assert_func>
 800420a:	6870      	ldr	r0, [r6, #4]
 800420c:	6803      	ldr	r3, [r0, #0]
 800420e:	6a1b      	ldr	r3, [r3, #32]
 8004210:	4798      	blx	r3
 8004212:	280f      	cmp	r0, #15
 8004214:	d803      	bhi.n	800421e <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x3a>
 8004216:	4b3e      	ldr	r3, [pc, #248]	@ (8004310 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x12c>)
 8004218:	4a3b      	ldr	r2, [pc, #236]	@ (8004308 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 800421a:	21a4      	movs	r1, #164	@ 0xa4
 800421c:	e7f2      	b.n	8004204 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800421e:	68f0      	ldr	r0, [r6, #12]
 8004220:	6803      	ldr	r3, [r0, #0]
 8004222:	6a1b      	ldr	r3, [r3, #32]
 8004224:	4798      	blx	r3
 8004226:	2837      	cmp	r0, #55	@ 0x37
 8004228:	d803      	bhi.n	8004232 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x4e>
 800422a:	4b3a      	ldr	r3, [pc, #232]	@ (8004314 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x130>)
 800422c:	4a36      	ldr	r2, [pc, #216]	@ (8004308 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 800422e:	21a5      	movs	r1, #165	@ 0xa5
 8004230:	e7e8      	b.n	8004204 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004232:	f010 f9f7 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004236:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004318 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x134>
 800423a:	3004      	adds	r0, #4
 800423c:	f010 fa3f 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004240:	f8d9 0000 	ldr.w	r0, [r9]
 8004244:	b110      	cbz	r0, 800424c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004246:	6803      	ldr	r3, [r0, #0]
 8004248:	68db      	ldr	r3, [r3, #12]
 800424a:	4798      	blx	r3
    if (*currentTrans)
 800424c:	f8d9 0000 	ldr.w	r0, [r9]
 8004250:	b110      	cbz	r0, 8004258 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004252:	6803      	ldr	r3, [r0, #0]
 8004254:	681b      	ldr	r3, [r3, #0]
 8004256:	4798      	blx	r3
    if (*currentScreen)
 8004258:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 800431c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x138>
 800425c:	f8d8 0000 	ldr.w	r0, [r8]
 8004260:	b110      	cbz	r0, 8004268 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004262:	6803      	ldr	r3, [r0, #0]
 8004264:	695b      	ldr	r3, [r3, #20]
 8004266:	4798      	blx	r3
    if (*currentPresenter)
 8004268:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800426c:	b110      	cbz	r0, 8004274 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800426e:	6803      	ldr	r3, [r0, #0]
 8004270:	685b      	ldr	r3, [r3, #4]
 8004272:	4798      	blx	r3
    if (*currentScreen)
 8004274:	f8d8 0000 	ldr.w	r0, [r8]
 8004278:	b110      	cbz	r0, 8004280 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800427a:	6803      	ldr	r3, [r0, #0]
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	4798      	blx	r3
    if (*currentPresenter)
 8004280:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004284:	b110      	cbz	r0, 800428c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004286:	6803      	ldr	r3, [r0, #0]
 8004288:	689b      	ldr	r3, [r3, #8]
 800428a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800428c:	68f0      	ldr	r0, [r6, #12]
 800428e:	2100      	movs	r1, #0
 8004290:	f7ff fd9a 	bl	8003dc8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004294:	2114      	movs	r1, #20
 8004296:	4604      	mov	r4, r0
 8004298:	f7ff fd9a 	bl	8003dd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800429c:	68b0      	ldr	r0, [r6, #8]
 800429e:	6803      	ldr	r3, [r0, #0]
 80042a0:	2100      	movs	r1, #0
 80042a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80042a4:	4798      	blx	r3
 80042a6:	4605      	mov	r5, r0
 80042a8:	f004 fa5c 	bl	8008764 <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80042ac:	6870      	ldr	r0, [r6, #4]
 80042ae:	6803      	ldr	r3, [r0, #0]
 80042b0:	2100      	movs	r1, #0
 80042b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80042b4:	4798      	blx	r3
 80042b6:	4629      	mov	r1, r5
 80042b8:	4606      	mov	r6, r0
 80042ba:	f004 fa31 	bl	8008720 <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
 80042be:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80042c0:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80042c4:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80042c8:	f8c8 5000 	str.w	r5, [r8]
 80042cc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80042d0:	682b      	ldr	r3, [r5, #0]
 80042d2:	f8c6 a008 	str.w	sl, [r6, #8]
 80042d6:	4628      	mov	r0, r5
 80042d8:	68db      	ldr	r3, [r3, #12]
 80042da:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80042dc:	4798      	blx	r3
    newPresenter->activate();
 80042de:	6833      	ldr	r3, [r6, #0]
 80042e0:	4630      	mov	r0, r6
 80042e2:	681b      	ldr	r3, [r3, #0]
 80042e4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80042e6:	4621      	mov	r1, r4
 80042e8:	4628      	mov	r0, r5
 80042ea:	f012 fa3d 	bl	8016768 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80042ee:	6823      	ldr	r3, [r4, #0]
 80042f0:	4620      	mov	r0, r4
 80042f2:	691b      	ldr	r3, [r3, #16]
 80042f4:	4798      	blx	r3
    newTransition->invalidate();
 80042f6:	6823      	ldr	r3, [r4, #0]
 80042f8:	4620      	mov	r0, r4
 80042fa:	695b      	ldr	r3, [r3, #20]
}
 80042fc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004300:	4718      	bx	r3
 8004302:	bf00      	nop
 8004304:	08029542 	.word	0x08029542
 8004308:	08029e79 	.word	0x08029e79
 800430c:	080296a6 	.word	0x080296a6
 8004310:	080296ed 	.word	0x080296ed
 8004314:	08029790 	.word	0x08029790
 8004318:	20013fa8 	.word	0x20013fa8
 800431c:	20013fa4 	.word	0x20013fa4

08004320 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004320:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8004322:	4770      	bx	lr

08004324 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004324:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8004326:	4770      	bx	lr

08004328 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004328:	4770      	bx	lr

0800432a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800432a:	888b      	ldrh	r3, [r1, #4]
 800432c:	69c0      	ldr	r0, [r0, #28]
 800432e:	680a      	ldr	r2, [r1, #0]
 8004330:	0adb      	lsrs	r3, r3, #11
 8004332:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004336:	4410      	add	r0, r2
 8004338:	4770      	bx	lr

0800433a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800433a:	b510      	push	{r4, lr}
 800433c:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 800433e:	b1ba      	cbz	r2, 8004370 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004340:	7b10      	ldrb	r0, [r2, #12]
 8004342:	b168      	cbz	r0, 8004360 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004344:	7b53      	ldrb	r3, [r2, #13]
 8004346:	7ad2      	ldrb	r2, [r2, #11]
 8004348:	021b      	lsls	r3, r3, #8
 800434a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800434e:	431a      	orrs	r2, r3
 8004350:	6a23      	ldr	r3, [r4, #32]
 8004352:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004356:	881a      	ldrh	r2, [r3, #0]
 8004358:	428a      	cmp	r2, r1
 800435a:	d102      	bne.n	8004362 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800435c:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8004360:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004362:	d805      	bhi.n	8004370 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004364:	3801      	subs	r0, #1
 8004366:	b280      	uxth	r0, r0
 8004368:	3304      	adds	r3, #4
 800436a:	2800      	cmp	r0, #0
 800436c:	d1f3      	bne.n	8004356 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800436e:	e7f7      	b.n	8004360 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004370:	2000      	movs	r0, #0
 8004372:	e7f5      	b.n	8004360 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004374 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004374:	b510      	push	{r4, lr}
 8004376:	212c      	movs	r1, #44	@ 0x2c
 8004378:	4604      	mov	r4, r0
 800437a:	f022 fe2b 	bl	8026fd4 <_ZdlPvj>
 800437e:	4620      	mov	r0, r4
 8004380:	bd10      	pop	{r4, pc}
	...

08004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004384:	b530      	push	{r4, r5, lr}
 8004386:	b08b      	sub	sp, #44	@ 0x2c
 8004388:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800438a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 800438e:	9508      	str	r5, [sp, #32]
 8004390:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8004394:	9507      	str	r5, [sp, #28]
 8004396:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800439a:	9506      	str	r5, [sp, #24]
 800439c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 80043a0:	9505      	str	r5, [sp, #20]
 80043a2:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80043a6:	9504      	str	r5, [sp, #16]
 80043a8:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80043ac:	9503      	str	r5, [sp, #12]
 80043ae:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80043b2:	9502      	str	r5, [sp, #8]
 80043b4:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80043b8:	9501      	str	r5, [sp, #4]
 80043ba:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80043be:	9500      	str	r5, [sp, #0]
 80043c0:	f011 fda0 	bl	8015f04 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80043c4:	4b06      	ldr	r3, [pc, #24]	@ (80043e0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80043c6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80043c8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80043ca:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80043cc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80043ce:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80043d0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80043d2:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80043d4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80043d6:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80043d8:	4620      	mov	r0, r4
 80043da:	b00b      	add	sp, #44	@ 0x2c
 80043dc:	bd30      	pop	{r4, r5, pc}
 80043de:	bf00      	nop
 80043e0:	0802a8a0 	.word	0x0802a8a0

080043e4 <_ZN23HardReadyScreenViewBase11setupScreenEv>:
}

void HardReadyScreenViewBase::setupScreen()
{

}
 80043e4:	4770      	bx	lr
	...

080043e8 <_ZN23HardReadyScreenViewBaseD1Ev>:
HardReadyScreenViewBase::~HardReadyScreenViewBase()
 80043e8:	b510      	push	{r4, lr}
 80043ea:	4b03      	ldr	r3, [pc, #12]	@ (80043f8 <_ZN23HardReadyScreenViewBaseD1Ev+0x10>)
 80043ec:	6003      	str	r3, [r0, #0]
 80043ee:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80043f0:	f00e fc1e 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80043f4:	4620      	mov	r0, r4
 80043f6:	bd10      	pop	{r4, pc}
 80043f8:	0802a970 	.word	0x0802a970

080043fc <_ZN23HardReadyScreenViewBaseD0Ev>:
HardReadyScreenViewBase::~HardReadyScreenViewBase()
 80043fc:	b510      	push	{r4, lr}
 80043fe:	4b06      	ldr	r3, [pc, #24]	@ (8004418 <_ZN23HardReadyScreenViewBaseD0Ev+0x1c>)
 8004400:	6003      	str	r3, [r0, #0]
 8004402:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004404:	f00e fc14 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004408:	4620      	mov	r0, r4
 800440a:	f241 61fc 	movw	r1, #5884	@ 0x16fc
 800440e:	f022 fde1 	bl	8026fd4 <_ZdlPvj>
 8004412:	4620      	mov	r0, r4
 8004414:	bd10      	pop	{r4, pc}
 8004416:	bf00      	nop
 8004418:	0802a970 	.word	0x0802a970

0800441c <_ZN23HardReadyScreenViewBase15handleTickEventEv>:

void HardReadyScreenViewBase::handleTickEvent()
{
 800441c:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 800441e:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 8004422:	f8d4 36f8 	ldr.w	r3, [r4, #1784]	@ 0x6f8
 8004426:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8004428:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 800442a:	f8c4 36f8 	str.w	r3, [r4, #1784]	@ 0x6f8
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 800442e:	d106      	bne.n	800443e <_ZN23HardReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004430:	f010 f8f8 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to HardScreen
        //Go to HardScreen with no screen transition
        application().gotoHardScreenScreenNoTransition();
 8004434:	f7ff f918 	bl	8003668 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 8004438:	2300      	movs	r3, #0
 800443a:	f8c4 36f8 	str.w	r3, [r4, #1784]	@ 0x6f8
    }
}
 800443e:	bd10      	pop	{r4, pc}

08004440 <_ZN8touchgfx6WidgetC1Ev>:
        : x(0), y(0), width(0), height(0)
 8004440:	2200      	movs	r2, #0
 8004442:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8004446:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800444a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800444e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8004452:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004456:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8004458:	4a01      	ldr	r2, [pc, #4]	@ (8004460 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800445a:	6002      	str	r2, [r0, #0]
 800445c:	4770      	bx	lr
 800445e:	bf00      	nop
 8004460:	0802a908 	.word	0x0802a908

08004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8004464:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8004466:	2226      	movs	r2, #38	@ 0x26
    Image(const Bitmap& bmp = Bitmap())
 8004468:	4604      	mov	r4, r0
 800446a:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 800446c:	2100      	movs	r1, #0
 800446e:	f023 ff06 	bl	802827e <memset>
 8004472:	4620      	mov	r0, r4
 8004474:	f7ff ffe4 	bl	8004440 <_ZN8touchgfx6WidgetC1Ev>
 8004478:	4b06      	ldr	r3, [pc, #24]	@ (8004494 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 800447a:	6023      	str	r3, [r4, #0]
 800447c:	882b      	ldrh	r3, [r5, #0]
 800447e:	84e3      	strh	r3, [r4, #38]	@ 0x26
 8004480:	23ff      	movs	r3, #255	@ 0xff
    {
        Image::setBitmap(bmp);
 8004482:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8004484:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        Image::setBitmap(bmp);
 8004488:	4629      	mov	r1, r5
 800448a:	f00d fbc9 	bl	8011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800448e:	4620      	mov	r0, r4
 8004490:	bd38      	pop	{r3, r4, r5, pc}
 8004492:	bf00      	nop
 8004494:	0802b36c 	.word	0x0802b36c

08004498 <_ZN23HardReadyScreenViewBaseC1Ev>:
HardReadyScreenViewBase::HardReadyScreenViewBase() :
 8004498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800449c:	4604      	mov	r4, r0
 800449e:	b099      	sub	sp, #100	@ 0x64
    frameCountInteraction1Interval(0)
 80044a0:	46a0      	mov	r8, r4
        : presenter(0)
 80044a2:	2500      	movs	r5, #0
 80044a4:	f011 ffb4 	bl	8016410 <_ZN8touchgfx6ScreenC1Ev>
 80044a8:	4be0      	ldr	r3, [pc, #896]	@ (800482c <_ZN23HardReadyScreenViewBaseC1Ev+0x394>)
 80044aa:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80044ac:	f848 3b40 	str.w	r3, [r8], #64
 80044b0:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 80044b4:	4640      	mov	r0, r8
 80044b6:	f7fe f949 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80044ba:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80044be:	a916      	add	r1, sp, #88	@ 0x58
 80044c0:	4648      	mov	r0, r9
 80044c2:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 80044c6:	f7ff ffcd 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80044ca:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 80044ce:	4618      	mov	r0, r3
 80044d0:	9309      	str	r3, [sp, #36]	@ 0x24
 80044d2:	f7fe f93b 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80044d6:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 80044da:	4618      	mov	r0, r3
 80044dc:	930a      	str	r3, [sp, #40]	@ 0x28
 80044de:	f7fe f935 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80044e2:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 80044e6:	4618      	mov	r0, r3
 80044e8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80044ea:	f7fe f92f 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80044ee:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80044f2:	4618      	mov	r0, r3
 80044f4:	930c      	str	r3, [sp, #48]	@ 0x30
 80044f6:	f00c f8c5 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80044fa:	f504 73b2 	add.w	r3, r4, #356	@ 0x164
 80044fe:	4618      	mov	r0, r3
 8004500:	9311      	str	r3, [sp, #68]	@ 0x44
 8004502:	f7fc ffdf 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004506:	4bca      	ldr	r3, [pc, #808]	@ (8004830 <_ZN23HardReadyScreenViewBaseC1Ev+0x398>)
 8004508:	f8c4 3164 	str.w	r3, [r4, #356]	@ 0x164
 800450c:	3324      	adds	r3, #36	@ 0x24
 800450e:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
 8004512:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 8004516:	4618      	mov	r0, r3
 8004518:	f8c4 5170 	str.w	r5, [r4, #368]	@ 0x170
 800451c:	4fc5      	ldr	r7, [pc, #788]	@ (8004834 <_ZN23HardReadyScreenViewBaseC1Ev+0x39c>)
 800451e:	9310      	str	r3, [sp, #64]	@ 0x40
        touchable = touch;
 8004520:	f04f 0a01 	mov.w	sl, #1
 8004524:	f7fe f912 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004528:	f504 73d2 	add.w	r3, r4, #420	@ 0x1a4
 800452c:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
 8004530:	4618      	mov	r0, r3
 8004532:	f8c4 7178 	str.w	r7, [r4, #376]	@ 0x178
 8004536:	f884 a19c 	strb.w	sl, [r4, #412]	@ 0x19c
 800453a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800453c:	f7fe f906 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004540:	f8c4 71a4 	str.w	r7, [r4, #420]	@ 0x1a4
 8004544:	f884 a1c8 	strb.w	sl, [r4, #456]	@ 0x1c8
 8004548:	4658      	mov	r0, fp
 800454a:	f504 7a06 	add.w	sl, r4, #536	@ 0x218
 800454e:	f7fe f913 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8004552:	4650      	mov	r0, sl
 8004554:	f7fe f910 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 8004558:	f504 7318 	add.w	r3, r4, #608	@ 0x260
 800455c:	4618      	mov	r0, r3
 800455e:	4fb6      	ldr	r7, [pc, #728]	@ (8004838 <_ZN23HardReadyScreenViewBaseC1Ev+0x3a0>)
 8004560:	930e      	str	r3, [sp, #56]	@ 0x38
 8004562:	f7fe f8f3 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004566:	f504 7325 	add.w	r3, r4, #660	@ 0x294
 800456a:	f8c4 7260 	str.w	r7, [r4, #608]	@ 0x260
 800456e:	4618      	mov	r0, r3
        : color(col)
 8004570:	f8c4 528c 	str.w	r5, [r4, #652]	@ 0x28c
 8004574:	f8a4 5290 	strh.w	r5, [r4, #656]	@ 0x290
 8004578:	930d      	str	r3, [sp, #52]	@ 0x34
 800457a:	f7fe f8e7 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 800457e:	f504 7332 	add.w	r3, r4, #712	@ 0x2c8
 8004582:	f8c4 7294 	str.w	r7, [r4, #660]	@ 0x294
 8004586:	4618      	mov	r0, r3
 8004588:	f8c4 52c0 	str.w	r5, [r4, #704]	@ 0x2c0
 800458c:	f8a4 52c4 	strh.w	r5, [r4, #708]	@ 0x2c4
        : TextAreaWithWildcardBase(), wc1(0)
 8004590:	4faa      	ldr	r7, [pc, #680]	@ (800483c <_ZN23HardReadyScreenViewBaseC1Ev+0x3a4>)
        : TextArea()
 8004592:	9303      	str	r3, [sp, #12]
 8004594:	f7fe f8f0 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8004598:	f504 7345 	add.w	r3, r4, #788	@ 0x314
        : TextAreaWithWildcardBase(), wc1(0)
 800459c:	f8c4 72c8 	str.w	r7, [r4, #712]	@ 0x2c8
 80045a0:	a916      	add	r1, sp, #88	@ 0x58
 80045a2:	4618      	mov	r0, r3
 80045a4:	f8c4 5310 	str.w	r5, [r4, #784]	@ 0x310
 80045a8:	9305      	str	r3, [sp, #20]
 80045aa:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 80045ae:	f7ff ff59 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80045b2:	f504 7350 	add.w	r3, r4, #832	@ 0x340
 80045b6:	a916      	add	r1, sp, #88	@ 0x58
 80045b8:	4618      	mov	r0, r3
 80045ba:	9306      	str	r3, [sp, #24]
 80045bc:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 80045c0:	f7ff ff50 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80045c4:	f504 735b 	add.w	r3, r4, #876	@ 0x36c
 80045c8:	a916      	add	r1, sp, #88	@ 0x58
 80045ca:	4618      	mov	r0, r3
 80045cc:	9307      	str	r3, [sp, #28]
 80045ce:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 80045d2:	f7ff ff47 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : TextArea()
 80045d6:	f504 7366 	add.w	r3, r4, #920	@ 0x398
 80045da:	4618      	mov	r0, r3
 80045dc:	9304      	str	r3, [sp, #16]
 80045de:	f7fe f8cb 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 80045e2:	f504 7379 	add.w	r3, r4, #996	@ 0x3e4
        : TextAreaWithWildcardBase(), wc1(0)
 80045e6:	f8c4 7398 	str.w	r7, [r4, #920]	@ 0x398
 80045ea:	a916      	add	r1, sp, #88	@ 0x58
 80045ec:	4618      	mov	r0, r3
 80045ee:	f8c4 53e0 	str.w	r5, [r4, #992]	@ 0x3e0
 80045f2:	9308      	str	r3, [sp, #32]
 80045f4:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 80045f8:	f7ff ff34 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80045fc:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
    __background.setPosition(0, 0, 320, 240);
 8004600:	27f0      	movs	r7, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 8004602:	f8c3 56f8 	str.w	r5, [r3, #1784]	@ 0x6f8
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004606:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 800460a:	f504 6087 	add.w	r0, r4, #1080	@ 0x438
 800460e:	f00e fb05 	bl	8012c1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004612:	462a      	mov	r2, r5
 8004614:	4640      	mov	r0, r8
 8004616:	9700      	str	r7, [sp, #0]
 8004618:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800461c:	4629      	mov	r1, r5
 800461e:	1d26      	adds	r6, r4, #4
 8004620:	f7fe f880 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004624:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8004628:	66a3      	str	r3, [r4, #104]	@ 0x68
 800462a:	4641      	mov	r1, r8
 800462c:	4630      	mov	r0, r6
 800462e:	f009 fae7 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2_1.setXY(56, 0);
 8004632:	4648      	mov	r0, r9
 8004634:	462a      	mov	r2, r5
 8004636:	2138      	movs	r1, #56	@ 0x38
 8004638:	f7fe f867 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 800463c:	f04f 0204 	mov.w	r2, #4
    image2_1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8004640:	4648      	mov	r0, r9
 8004642:	a916      	add	r1, sp, #88	@ 0x58
 8004644:	f8ad 2058 	strh.w	r2, [sp, #88]	@ 0x58
 8004648:	f00d faea 	bl	8011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800464c:	4649      	mov	r1, r9
 800464e:	4630      	mov	r0, r6
 8004650:	f009 fad6 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 8004654:	462a      	mov	r2, r5
 8004656:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004658:	9700      	str	r7, [sp, #0]
 800465a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800465e:	4629      	mov	r1, r5
 8004660:	f7fe f860 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004664:	f04f 33ff 	mov.w	r3, #4294967295
 8004668:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800466a:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 800466e:	4630      	mov	r0, r6
 8004670:	f009 fac6 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 8004674:	2202      	movs	r2, #2
 8004676:	23ec      	movs	r3, #236	@ 0xec
 8004678:	4611      	mov	r1, r2
 800467a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800467c:	9300      	str	r3, [sp, #0]
 800467e:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 8004682:	f7fe f84f 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004686:	4b6e      	ldr	r3, [pc, #440]	@ (8004840 <_ZN23HardReadyScreenViewBaseC1Ev+0x3a8>)
 8004688:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800468a:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
 800468e:	4630      	mov	r0, r6
 8004690:	f009 fab6 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8004694:	462a      	mov	r2, r5
 8004696:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004698:	9700      	str	r7, [sp, #0]
 800469a:	2303      	movs	r3, #3
 800469c:	21a0      	movs	r1, #160	@ 0xa0
 800469e:	f7fe f841 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046a2:	f04f 33ff 	mov.w	r3, #4294967295
 80046a6:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        alpha = newAlpha;
 80046aa:	23dc      	movs	r3, #220	@ 0xdc
 80046ac:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80046ae:	f884 3116 	strb.w	r3, [r4, #278]	@ 0x116
 80046b2:	4630      	mov	r0, r6
 80046b4:	f009 faa4 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 80046b8:	230e      	movs	r3, #14
 80046ba:	2272      	movs	r2, #114	@ 0x72
 80046bc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80046be:	9300      	str	r3, [sp, #0]
 80046c0:	219a      	movs	r1, #154	@ 0x9a
 80046c2:	f7fe f82f 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80046c6:	23c0      	movs	r3, #192	@ 0xc0
 80046c8:	f8c4 3150 	str.w	r3, [r4, #336]	@ 0x150
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 80046cc:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 80046d0:	f8c4 3158 	str.w	r3, [r4, #344]	@ 0x158
 80046d4:	4b5b      	ldr	r3, [pc, #364]	@ (8004844 <_ZN23HardReadyScreenViewBaseC1Ev+0x3ac>)
 80046d6:	f8c4 3170 	str.w	r3, [r4, #368]	@ 0x170
        color565 = LCD16bpp::getNativeColor(painterColor);
 80046da:	f649 0361 	movw	r3, #39009	@ 0x9861
 80046de:	f8a4 3174 	strh.w	r3, [r4, #372]	@ 0x174
 80046e2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80046e4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80046e6:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
        this->circleCenterY = CWRUtil::toQ5(y);
 80046ea:	e9c4 7752 	strd	r7, r7, [r4, #328]	@ 0x148
 80046ee:	4630      	mov	r0, r6
    paddle1.setPosition(7, 110, 5, 20);
 80046f0:	2714      	movs	r7, #20
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80046f2:	f8c4 515c 	str.w	r5, [r4, #348]	@ 0x15c
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80046f6:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
 80046fa:	f009 fa81 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80046fe:	226e      	movs	r2, #110	@ 0x6e
 8004700:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8004702:	9700      	str	r7, [sp, #0]
 8004704:	2305      	movs	r3, #5
 8004706:	2107      	movs	r1, #7
 8004708:	f7fe f80c 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800470c:	f04f 33ff 	mov.w	r3, #4294967295
 8004710:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8004712:	f8c4 31a0 	str.w	r3, [r4, #416]	@ 0x1a0
 8004716:	4630      	mov	r0, r6
 8004718:	f009 fa72 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 110, 5, 20);
 800471c:	226e      	movs	r2, #110	@ 0x6e
 800471e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8004720:	9700      	str	r7, [sp, #0]
 8004722:	2305      	movs	r3, #5
 8004724:	f44f 719a 	mov.w	r1, #308	@ 0x134
 8004728:	f7fd fffc 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800472c:	f04f 33ff 	mov.w	r3, #4294967295
 8004730:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8004732:	f8c4 31cc 	str.w	r3, [r4, #460]	@ 0x1cc
 8004736:	4630      	mov	r0, r6
 8004738:	f009 fa62 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(94, 94, 19, 52);
 800473c:	f04f 0934 	mov.w	r9, #52	@ 0x34
 8004740:	225e      	movs	r2, #94	@ 0x5e
 8004742:	4611      	mov	r1, r2
 8004744:	4658      	mov	r0, fp
 8004746:	f8cd 9000 	str.w	r9, [sp]
 800474a:	2313      	movs	r3, #19
 800474c:	af12      	add	r7, sp, #72	@ 0x48
 800474e:	f7fd ffe9 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004752:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8004756:	4659      	mov	r1, fp
        color = newColor;
 8004758:	f8c4 3200 	str.w	r3, [r4, #512]	@ 0x200
        boundingArea = calculateBoundingArea();
 800475c:	4638      	mov	r0, r7
        linespace = space;
 800475e:	f8a4 5204 	strh.w	r5, [r4, #516]	@ 0x204
        boundingArea = calculateBoundingArea();
 8004762:	f00c fd9b 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004766:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800476a:	f504 7803 	add.w	r8, r4, #524	@ 0x20c
        rotation = textRotation;
 800476e:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8004772:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8004776:	4659      	mov	r1, fp
        rotation = textRotation;
 8004778:	f884 3208 	strb.w	r3, [r4, #520]	@ 0x208
        boundingArea = calculateBoundingArea();
 800477c:	4638      	mov	r0, r7
 800477e:	f00c fd8d 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004782:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004786:	4b30      	ldr	r3, [pc, #192]	@ (8004848 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b0>)
 8004788:	9316      	str	r3, [sp, #88]	@ 0x58
 800478a:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 800478e:	230d      	movs	r3, #13
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7S3Y));
 8004790:	4658      	mov	r0, fp
        alpha = newAlpha;
 8004792:	f04f 08be 	mov.w	r8, #190	@ 0xbe
 8004796:	a916      	add	r1, sp, #88	@ 0x58
 8004798:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 800479c:	f00d f826 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80047a0:	4659      	mov	r1, fp
 80047a2:	f884 8206 	strb.w	r8, [r4, #518]	@ 0x206
 80047a6:	4630      	mov	r0, r6
 80047a8:	f009 fa2a 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(204, 93, 19, 52);
 80047ac:	2313      	movs	r3, #19
 80047ae:	4650      	mov	r0, sl
 80047b0:	f8cd 9000 	str.w	r9, [sp]
 80047b4:	225d      	movs	r2, #93	@ 0x5d
 80047b6:	21cc      	movs	r1, #204	@ 0xcc
 80047b8:	f7fd ffb4 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80047bc:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80047c0:	4651      	mov	r1, sl
        color = newColor;
 80047c2:	f8c4 2248 	str.w	r2, [r4, #584]	@ 0x248
        boundingArea = calculateBoundingArea();
 80047c6:	4638      	mov	r0, r7
        linespace = space;
 80047c8:	f8a4 524c 	strh.w	r5, [r4, #588]	@ 0x24c
        boundingArea = calculateBoundingArea();
 80047cc:	f00c fd66 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80047d0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80047d4:	f504 7915 	add.w	r9, r4, #596	@ 0x254
        rotation = textRotation;
 80047d8:	f04f 0b03 	mov.w	fp, #3
        boundingArea = calculateBoundingArea();
 80047dc:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 80047e0:	4651      	mov	r1, sl
 80047e2:	4638      	mov	r0, r7
        rotation = textRotation;
 80047e4:	f884 b250 	strb.w	fp, [r4, #592]	@ 0x250
        boundingArea = calculateBoundingArea();
 80047e8:	f00c fd58 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80047ec:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80047f0:	4b15      	ldr	r3, [pc, #84]	@ (8004848 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b0>)
 80047f2:	9316      	str	r3, [sp, #88]	@ 0x58
 80047f4:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 80047f8:	230c      	movs	r3, #12
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SJ6Y));
 80047fa:	4650      	mov	r0, sl
 80047fc:	a916      	add	r1, sp, #88	@ 0x58
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80047fe:	f8df 904c 	ldr.w	r9, [pc, #76]	@ 800484c <_ZN23HardReadyScreenViewBaseC1Ev+0x3b4>
 8004802:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8004806:	f00c fff1 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800480a:	4651      	mov	r1, sl
        alpha = newAlpha;
 800480c:	f884 824e 	strb.w	r8, [r4, #590]	@ 0x24e
 8004810:	4630      	mov	r0, r6
 8004812:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 8004850 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b8>
    goal1.setPosition(0, 61, 2, 120);
 8004816:	f04f 0a78 	mov.w	sl, #120	@ 0x78
 800481a:	f009 f9f1 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800481e:	2302      	movs	r3, #2
 8004820:	223d      	movs	r2, #61	@ 0x3d
 8004822:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8004824:	f8cd a000 	str.w	sl, [sp]
 8004828:	4629      	mov	r1, r5
 800482a:	e013      	b.n	8004854 <_ZN23HardReadyScreenViewBaseC1Ev+0x3bc>
 800482c:	0802a970 	.word	0x0802a970
 8004830:	0802afcc 	.word	0x0802afcc
 8004834:	0802a668 	.word	0x0802a668
 8004838:	0802b304 	.word	0x0802b304
 800483c:	0802a5d8 	.word	0x0802a5d8
 8004840:	ff0c3837 	.word	0xff0c3837
 8004844:	ff990c0c 	.word	0xff990c0c
 8004848:	0802a5c8 	.word	0x0802a5c8
 800484c:	ff000b6e 	.word	0xff000b6e
 8004850:	ffad9334 	.word	0xffad9334
 8004854:	f7fd ff66 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004858:	e9c4 98a2 	strd	r9, r8, [r4, #648]	@ 0x288
 800485c:	990e      	ldr	r1, [sp, #56]	@ 0x38
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800485e:	f8a4 5290 	strh.w	r5, [r4, #656]	@ 0x290
 8004862:	4630      	mov	r0, r6
 8004864:	f009 f9cc 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(318, 60, 2, 120);
 8004868:	2302      	movs	r3, #2
 800486a:	223c      	movs	r2, #60	@ 0x3c
 800486c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800486e:	f8cd a000 	str.w	sl, [sp]
 8004872:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 8004876:	f7fd ff55 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 800487a:	e9c4 98af 	strd	r9, r8, [r4, #700]	@ 0x2bc
 800487e:	990d      	ldr	r1, [sp, #52]	@ 0x34
        borderSize = size;
 8004880:	f8a4 52c4 	strh.w	r5, [r4, #708]	@ 0x2c4
 8004884:	4630      	mov	r0, r6
 8004886:	f009 f9bb 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(46, 111);
 800488a:	226f      	movs	r2, #111	@ 0x6f
 800488c:	9803      	ldr	r0, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800488e:	f8df 91f4 	ldr.w	r9, [pc, #500]	@ 8004a84 <_ZN23HardReadyScreenViewBaseC1Ev+0x5ec>
 8004892:	212e      	movs	r1, #46	@ 0x2e
 8004894:	f7fd ff39 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004898:	4b72      	ldr	r3, [pc, #456]	@ (8004a64 <_ZN23HardReadyScreenViewBaseC1Ev+0x5cc>)
 800489a:	f8c4 32f8 	str.w	r3, [r4, #760]	@ 0x2f8
        boundingArea = calculateBoundingArea();
 800489e:	f8d4 32c8 	ldr.w	r3, [r4, #712]	@ 0x2c8
 80048a2:	9903      	ldr	r1, [sp, #12]
 80048a4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80048a8:	f8a4 52fc 	strh.w	r5, [r4, #764]	@ 0x2fc
        boundingArea = calculateBoundingArea();
 80048ac:	4638      	mov	r0, r7
 80048ae:	4798      	blx	r3
 80048b0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80048b4:	f504 7841 	add.w	r8, r4, #772	@ 0x304
        rotation = textRotation;
 80048b8:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 80048bc:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80048c0:	f884 3300 	strb.w	r3, [r4, #768]	@ 0x300
        boundingArea = calculateBoundingArea();
 80048c4:	f8d4 32c8 	ldr.w	r3, [r4, #712]	@ 0x2c8
 80048c8:	9903      	ldr	r1, [sp, #12]
 80048ca:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80048ce:	4638      	mov	r0, r7
 80048d0:	4798      	blx	r3
 80048d2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80048d6:	f8d9 3000 	ldr.w	r3, [r9]
 80048da:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER3BUFFER).getText());
 80048de:	f504 6882 	add.w	r8, r4, #1040	@ 0x410
 80048e2:	b92b      	cbnz	r3, 80048f0 <_ZN23HardReadyScreenViewBaseC1Ev+0x458>
 80048e4:	4b60      	ldr	r3, [pc, #384]	@ (8004a68 <_ZN23HardReadyScreenViewBaseC1Ev+0x5d0>)
 80048e6:	4a61      	ldr	r2, [pc, #388]	@ (8004a6c <_ZN23HardReadyScreenViewBaseC1Ev+0x5d4>)
 80048e8:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048ea:	4861      	ldr	r0, [pc, #388]	@ (8004a70 <_ZN23HardReadyScreenViewBaseC1Ev+0x5d8>)
 80048ec:	f023 faae 	bl	8027e4c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80048f0:	f8df a194 	ldr.w	sl, [pc, #404]	@ 8004a88 <_ZN23HardReadyScreenViewBaseC1Ev+0x5f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048f4:	f8ba 3000 	ldrh.w	r3, [sl]
 80048f8:	2b08      	cmp	r3, #8
 80048fa:	d803      	bhi.n	8004904 <_ZN23HardReadyScreenViewBaseC1Ev+0x46c>
 80048fc:	4b5d      	ldr	r3, [pc, #372]	@ (8004a74 <_ZN23HardReadyScreenViewBaseC1Ev+0x5dc>)
 80048fe:	4a5b      	ldr	r2, [pc, #364]	@ (8004a6c <_ZN23HardReadyScreenViewBaseC1Ev+0x5d4>)
 8004900:	2161      	movs	r1, #97	@ 0x61
 8004902:	e7f2      	b.n	80048ea <_ZN23HardReadyScreenViewBaseC1Ev+0x452>
        return texts->getText(typedTextId);
 8004904:	4b5c      	ldr	r3, [pc, #368]	@ (8004a78 <_ZN23HardReadyScreenViewBaseC1Ev+0x5e0>)
 8004906:	2108      	movs	r1, #8
 8004908:	6818      	ldr	r0, [r3, #0]
 800490a:	f001 fefd 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 800490e:	4a5b      	ldr	r2, [pc, #364]	@ (8004a7c <_ZN23HardReadyScreenViewBaseC1Ev+0x5e4>)
 8004910:	4603      	mov	r3, r0
 8004912:	210a      	movs	r1, #10
 8004914:	4640      	mov	r0, r8
 8004916:	f013 fa5b 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 800491a:	9803      	ldr	r0, [sp, #12]
        wc1 = value;
 800491c:	f8c4 8310 	str.w	r8, [r4, #784]	@ 0x310
 8004920:	f00c ff44 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        alpha = newAlpha;
 8004924:	f04f 08d2 	mov.w	r8, #210	@ 0xd2
        : typedTextId(id)
 8004928:	230b      	movs	r3, #11
 800492a:	4a55      	ldr	r2, [pc, #340]	@ (8004a80 <_ZN23HardReadyScreenViewBaseC1Ev+0x5e8>)
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7Q96));
 800492c:	9803      	ldr	r0, [sp, #12]
 800492e:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8004932:	a916      	add	r1, sp, #88	@ 0x58
 8004934:	9216      	str	r2, [sp, #88]	@ 0x58
 8004936:	f00c ff59 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800493a:	9903      	ldr	r1, [sp, #12]
 800493c:	f884 82fe 	strb.w	r8, [r4, #766]	@ 0x2fe
 8004940:	4630      	mov	r0, r6
 8004942:	f009 f95d 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(56, 230);
 8004946:	22e6      	movs	r2, #230	@ 0xe6
 8004948:	9805      	ldr	r0, [sp, #20]
 800494a:	2138      	movs	r1, #56	@ 0x38
 800494c:	f7fd fedd 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8004950:	9805      	ldr	r0, [sp, #20]
 8004952:	f8ad b058 	strh.w	fp, [sp, #88]	@ 0x58
 8004956:	a916      	add	r1, sp, #88	@ 0x58
 8004958:	f00d f962 	bl	8011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800495c:	9905      	ldr	r1, [sp, #20]
 800495e:	4630      	mov	r0, r6
 8004960:	f009 f94e 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1_1.setXY(223, 229);
 8004964:	22e5      	movs	r2, #229	@ 0xe5
 8004966:	9806      	ldr	r0, [sp, #24]
 8004968:	21df      	movs	r1, #223	@ 0xdf
 800496a:	f7fd fece 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 800496e:	9806      	ldr	r0, [sp, #24]
 8004970:	f8ad b058 	strh.w	fp, [sp, #88]	@ 0x58
 8004974:	a916      	add	r1, sp, #88	@ 0x58
 8004976:	f00d f953 	bl	8011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800497a:	9906      	ldr	r1, [sp, #24]
 800497c:	4630      	mov	r0, r6
 800497e:	f009 f93f 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(56, 0);
 8004982:	462a      	mov	r2, r5
 8004984:	9807      	ldr	r0, [sp, #28]
 8004986:	2138      	movs	r1, #56	@ 0x38
 8004988:	f7fd febf 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 800498c:	f04f 0104 	mov.w	r1, #4
    image2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8004990:	a816      	add	r0, sp, #88	@ 0x58
 8004992:	f8ad 1058 	strh.w	r1, [sp, #88]	@ 0x58
 8004996:	4601      	mov	r1, r0
 8004998:	9807      	ldr	r0, [sp, #28]
 800499a:	f00d f941 	bl	8011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800499e:	9907      	ldr	r1, [sp, #28]
 80049a0:	4630      	mov	r0, r6
 80049a2:	f009 f92d 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(245, 111);
 80049a6:	226f      	movs	r2, #111	@ 0x6f
 80049a8:	9804      	ldr	r0, [sp, #16]
 80049aa:	21f5      	movs	r1, #245	@ 0xf5
 80049ac:	f7fd fead 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80049b0:	f8d4 3398 	ldr.w	r3, [r4, #920]	@ 0x398
        color = newColor;
 80049b4:	492b      	ldr	r1, [pc, #172]	@ (8004a64 <_ZN23HardReadyScreenViewBaseC1Ev+0x5cc>)
        boundingArea = calculateBoundingArea();
 80049b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 80049ba:	f8c4 13c8 	str.w	r1, [r4, #968]	@ 0x3c8
        linespace = space;
 80049be:	f8a4 53cc 	strh.w	r5, [r4, #972]	@ 0x3cc
        boundingArea = calculateBoundingArea();
 80049c2:	9904      	ldr	r1, [sp, #16]
 80049c4:	4638      	mov	r0, r7
 80049c6:	4798      	blx	r3
 80049c8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80049cc:	f504 7375 	add.w	r3, r4, #980	@ 0x3d4
 80049d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049d4:	f8d9 3000 	ldr.w	r3, [r9]
        boundingArea = calculateBoundingArea();
 80049d8:	f8c4 53d4 	str.w	r5, [r4, #980]	@ 0x3d4
 80049dc:	f04f 30ff 	mov.w	r0, #4294967295
 80049e0:	e9c4 05f6 	strd	r0, r5, [r4, #984]	@ 0x3d8
        rotation = textRotation;
 80049e4:	f884 b3d0 	strb.w	fp, [r4, #976]	@ 0x3d0
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER3BUFFER).getText());
 80049e8:	f204 4524 	addw	r5, r4, #1060	@ 0x424
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	f43f af79 	beq.w	80048e4 <_ZN23HardReadyScreenViewBaseC1Ev+0x44c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049f2:	f8ba 3000 	ldrh.w	r3, [sl]
 80049f6:	2b08      	cmp	r3, #8
 80049f8:	d980      	bls.n	80048fc <_ZN23HardReadyScreenViewBaseC1Ev+0x464>
        return texts->getText(typedTextId);
 80049fa:	4b1f      	ldr	r3, [pc, #124]	@ (8004a78 <_ZN23HardReadyScreenViewBaseC1Ev+0x5e0>)
 80049fc:	2108      	movs	r1, #8
 80049fe:	6818      	ldr	r0, [r3, #0]
 8004a00:	f001 fe82 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8004a04:	4a1d      	ldr	r2, [pc, #116]	@ (8004a7c <_ZN23HardReadyScreenViewBaseC1Ev+0x5e4>)
 8004a06:	4603      	mov	r3, r0
 8004a08:	210a      	movs	r1, #10
 8004a0a:	4628      	mov	r0, r5
 8004a0c:	f013 f9e0 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 8004a10:	9804      	ldr	r0, [sp, #16]
 8004a12:	f8c4 53e0 	str.w	r5, [r4, #992]	@ 0x3e0
 8004a16:	f00c fec9 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004a1a:	230a      	movs	r3, #10
 8004a1c:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WFLF));
 8004a20:	ab16      	add	r3, sp, #88	@ 0x58
 8004a22:	4619      	mov	r1, r3
 8004a24:	4a16      	ldr	r2, [pc, #88]	@ (8004a80 <_ZN23HardReadyScreenViewBaseC1Ev+0x5e8>)
 8004a26:	9804      	ldr	r0, [sp, #16]
 8004a28:	9216      	str	r2, [sp, #88]	@ 0x58
 8004a2a:	f00c fedf 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004a2e:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 8004a30:	f884 83ce 	strb.w	r8, [r4, #974]	@ 0x3ce
 8004a34:	4630      	mov	r0, r6
 8004a36:	f009 f8e3 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2_2.setXY(223, 2);
 8004a3a:	2202      	movs	r2, #2
 8004a3c:	9808      	ldr	r0, [sp, #32]
 8004a3e:	21df      	movs	r1, #223	@ 0xdf
 8004a40:	f7fd fe63 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 8004a44:	f04f 0104 	mov.w	r1, #4
    image2_2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8004a48:	9808      	ldr	r0, [sp, #32]
 8004a4a:	f8ad 1058 	strh.w	r1, [sp, #88]	@ 0x58
 8004a4e:	a916      	add	r1, sp, #88	@ 0x58
 8004a50:	f00d f8e6 	bl	8011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004a54:	4630      	mov	r0, r6
 8004a56:	9908      	ldr	r1, [sp, #32]
 8004a58:	f009 f8d2 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004a5c:	4620      	mov	r0, r4
 8004a5e:	b019      	add	sp, #100	@ 0x64
 8004a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004a64:	ffdeab5f 	.word	0xffdeab5f
 8004a68:	080293f2 	.word	0x080293f2
 8004a6c:	080294f4 	.word	0x080294f4
 8004a70:	0802946f 	.word	0x0802946f
 8004a74:	080294b6 	.word	0x080294b6
 8004a78:	20013fc4 	.word	0x20013fc4
 8004a7c:	0802953f 	.word	0x0802953f
 8004a80:	0802a5c8 	.word	0x0802a5c8
 8004a84:	20013fb8 	.word	0x20013fb8
 8004a88:	20013fbc 	.word	0x20013fbc

08004a8c <_ZN18HardScreenViewBase11setupScreenEv>:
}

void HardScreenViewBase::setupScreen()
{

}
 8004a8c:	4770      	bx	lr
	...

08004a90 <_ZN18HardScreenViewBaseD1Ev>:
HardScreenViewBase::~HardScreenViewBase()
 8004a90:	b510      	push	{r4, lr}
 8004a92:	4b03      	ldr	r3, [pc, #12]	@ (8004aa0 <_ZN18HardScreenViewBaseD1Ev+0x10>)
 8004a94:	6003      	str	r3, [r0, #0]
 8004a96:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004a98:	f00e f8ca 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004a9c:	4620      	mov	r0, r4
 8004a9e:	bd10      	pop	{r4, pc}
 8004aa0:	0802a9a4 	.word	0x0802a9a4

08004aa4 <_ZN18HardScreenViewBaseD0Ev>:
HardScreenViewBase::~HardScreenViewBase()
 8004aa4:	b510      	push	{r4, lr}
 8004aa6:	4b06      	ldr	r3, [pc, #24]	@ (8004ac0 <_ZN18HardScreenViewBaseD0Ev+0x1c>)
 8004aa8:	6003      	str	r3, [r0, #0]
 8004aaa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004aac:	f00e f8c0 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004ab0:	4620      	mov	r0, r4
 8004ab2:	f241 61cc 	movw	r1, #5836	@ 0x16cc
 8004ab6:	f022 fa8d 	bl	8026fd4 <_ZdlPvj>
 8004aba:	4620      	mov	r0, r4
 8004abc:	bd10      	pop	{r4, pc}
 8004abe:	bf00      	nop
 8004ac0:	0802a9a4 	.word	0x0802a9a4

08004ac4 <_ZN18HardScreenViewBaseC1Ev>:
HardScreenViewBase::HardScreenViewBase()
 8004ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ac8:	4604      	mov	r4, r0
 8004aca:	b097      	sub	sp, #92	@ 0x5c
 8004acc:	46a2      	mov	sl, r4
 8004ace:	2600      	movs	r6, #0
 8004ad0:	f011 fc9e 	bl	8016410 <_ZN8touchgfx6ScreenC1Ev>
 8004ad4:	4ba0      	ldr	r3, [pc, #640]	@ (8004d58 <_ZN18HardScreenViewBaseC1Ev+0x294>)
 8004ad6:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8004ad8:	f84a 3b40 	str.w	r3, [sl], #64
 8004adc:	4650      	mov	r0, sl
 8004ade:	f7fd fe35 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004ae2:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8004ae6:	4618      	mov	r0, r3
 8004ae8:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8004aec:	9309      	str	r3, [sp, #36]	@ 0x24
 8004aee:	f104 05c4 	add.w	r5, r4, #196	@ 0xc4
 8004af2:	f7fd fe2b 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004af6:	4640      	mov	r0, r8
 8004af8:	f7fd fe28 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004afc:	4628      	mov	r0, r5
 8004afe:	f7fd fe25 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004b02:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8004b06:	4618      	mov	r0, r3
 8004b08:	4f94      	ldr	r7, [pc, #592]	@ (8004d5c <_ZN18HardScreenViewBaseC1Ev+0x298>)
 8004b0a:	930e      	str	r3, [sp, #56]	@ 0x38
 8004b0c:	f04f 0901 	mov.w	r9, #1
 8004b10:	f7fd fe1c 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004b14:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8004b18:	4618      	mov	r0, r3
        : TextArea()
 8004b1a:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 8004b1e:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 8004b22:	f884 9114 	strb.w	r9, [r4, #276]	@ 0x114
 8004b26:	930d      	str	r3, [sp, #52]	@ 0x34
 8004b28:	f7fd fe10 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004b2c:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 8004b30:	f884 9140 	strb.w	r9, [r4, #320]	@ 0x140
        : TextAreaWithWildcardBase(), wc1(0)
 8004b34:	4f8a      	ldr	r7, [pc, #552]	@ (8004d60 <_ZN18HardScreenViewBaseC1Ev+0x29c>)
        : TextArea()
 8004b36:	4658      	mov	r0, fp
 8004b38:	f504 79ca 	add.w	r9, r4, #404	@ 0x194
 8004b3c:	f7fd fe1c 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004b40:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 8004b44:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 8004b48:	4648      	mov	r0, r9
 8004b4a:	f7fd fe15 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8004b4e:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 8004b52:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 8004b56:	4618      	mov	r0, r3
 8004b58:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 8004b5c:	9303      	str	r3, [sp, #12]
 8004b5e:	f7fd fe0b 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8004b62:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8004b66:	4618      	mov	r0, r3
 8004b68:	9304      	str	r3, [sp, #16]
 8004b6a:	f7fd fe05 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 8004b6e:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 8004b72:	4618      	mov	r0, r3
 8004b74:	4f7b      	ldr	r7, [pc, #492]	@ (8004d64 <_ZN18HardScreenViewBaseC1Ev+0x2a0>)
 8004b76:	930c      	str	r3, [sp, #48]	@ 0x30
 8004b78:	f7fd fde8 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004b7c:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 8004b80:	f8c4 7270 	str.w	r7, [r4, #624]	@ 0x270
 8004b84:	4618      	mov	r0, r3
 8004b86:	f8c4 629c 	str.w	r6, [r4, #668]	@ 0x29c
 8004b8a:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 8004b8e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004b90:	f7fd fddc 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004b94:	f504 7336 	add.w	r3, r4, #728	@ 0x2d8
 8004b98:	f8c4 72a4 	str.w	r7, [r4, #676]	@ 0x2a4
 8004b9c:	a914      	add	r1, sp, #80	@ 0x50
 8004b9e:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8004ba2:	4618      	mov	r0, r3
 8004ba4:	f8c4 62d0 	str.w	r6, [r4, #720]	@ 0x2d0
 8004ba8:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 8004bac:	9305      	str	r3, [sp, #20]
 8004bae:	f8ad 7050 	strh.w	r7, [sp, #80]	@ 0x50
 8004bb2:	f7ff fc57 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004bb6:	f504 7341 	add.w	r3, r4, #772	@ 0x304
 8004bba:	a914      	add	r1, sp, #80	@ 0x50
 8004bbc:	4618      	mov	r0, r3
 8004bbe:	9306      	str	r3, [sp, #24]
 8004bc0:	f8ad 7050 	strh.w	r7, [sp, #80]	@ 0x50
 8004bc4:	f7ff fc4e 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004bc8:	f504 734c 	add.w	r3, r4, #816	@ 0x330
 8004bcc:	a914      	add	r1, sp, #80	@ 0x50
 8004bce:	4618      	mov	r0, r3
 8004bd0:	9307      	str	r3, [sp, #28]
 8004bd2:	f8ad 7050 	strh.w	r7, [sp, #80]	@ 0x50
 8004bd6:	f7ff fc45 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004bda:	f504 7357 	add.w	r3, r4, #860	@ 0x35c
 8004bde:	a914      	add	r1, sp, #80	@ 0x50
 8004be0:	4618      	mov	r0, r3
 8004be2:	9308      	str	r3, [sp, #32]
 8004be4:	f8ad 7050 	strh.w	r7, [sp, #80]	@ 0x50
 8004be8:	f7ff fc3c 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004bec:	f504 7362 	add.w	r3, r4, #904	@ 0x388
 8004bf0:	4618      	mov	r0, r3
 8004bf2:	930a      	str	r3, [sp, #40]	@ 0x28
 8004bf4:	f00b fd46 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004bf8:	f504 7374 	add.w	r3, r4, #976	@ 0x3d0
 8004bfc:	4618      	mov	r0, r3
 8004bfe:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004c00:	f7fc fc60 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004c04:	4b58      	ldr	r3, [pc, #352]	@ (8004d68 <_ZN18HardScreenViewBaseC1Ev+0x2a4>)
 8004c06:	f8c4 33d0 	str.w	r3, [r4, #976]	@ 0x3d0
 8004c0a:	3324      	adds	r3, #36	@ 0x24
 8004c0c:	f8c4 33d8 	str.w	r3, [r4, #984]	@ 0x3d8
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004c10:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8004c14:	f204 400c 	addw	r0, r4, #1036	@ 0x40c
 8004c18:	f8c4 63dc 	str.w	r6, [r4, #988]	@ 0x3dc
 8004c1c:	f00d fffe 	bl	8012c1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004c20:	23f0      	movs	r3, #240	@ 0xf0
 8004c22:	4632      	mov	r2, r6
 8004c24:	4650      	mov	r0, sl
 8004c26:	9300      	str	r3, [sp, #0]
 8004c28:	4631      	mov	r1, r6
 8004c2a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8004c2e:	f7fd fd79 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004c32:	1d27      	adds	r7, r4, #4
 8004c34:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8004c38:	4651      	mov	r1, sl
 8004c3a:	66a3      	str	r3, [r4, #104]	@ 0x68
 8004c3c:	4638      	mov	r0, r7
 8004c3e:	f008 ffdf 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 8004c42:	23f0      	movs	r3, #240	@ 0xf0
 8004c44:	f04f 3aff 	mov.w	sl, #4294967295
 8004c48:	4632      	mov	r2, r6
 8004c4a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004c4c:	9300      	str	r3, [sp, #0]
 8004c4e:	4631      	mov	r1, r6
 8004c50:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8004c54:	f7fd fd66 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004c58:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004c5a:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
 8004c5e:	4638      	mov	r0, r7
 8004c60:	f008 ffce 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 8004c64:	2202      	movs	r2, #2
 8004c66:	23ec      	movs	r3, #236	@ 0xec
 8004c68:	4611      	mov	r1, r2
 8004c6a:	4640      	mov	r0, r8
 8004c6c:	9300      	str	r3, [sp, #0]
 8004c6e:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 8004c72:	f7fd fd57 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004c76:	4b3d      	ldr	r3, [pc, #244]	@ (8004d6c <_ZN18HardScreenViewBaseC1Ev+0x2a8>)
 8004c78:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8004c7c:	4641      	mov	r1, r8
 8004c7e:	4638      	mov	r0, r7
 8004c80:	f008 ffbe 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8004c84:	23f0      	movs	r3, #240	@ 0xf0
 8004c86:	4632      	mov	r2, r6
 8004c88:	4628      	mov	r0, r5
 8004c8a:	9300      	str	r3, [sp, #0]
 8004c8c:	21a0      	movs	r1, #160	@ 0xa0
 8004c8e:	2303      	movs	r3, #3
 8004c90:	f7fd fd48 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 8004c94:	23dc      	movs	r3, #220	@ 0xdc
 8004c96:	4629      	mov	r1, r5
 8004c98:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
    paddle1.setPosition(7, 110, 5, 20);
 8004c9c:	2514      	movs	r5, #20
 8004c9e:	4638      	mov	r0, r7
        color = newColor;
 8004ca0:	f8c4 a0ec 	str.w	sl, [r4, #236]	@ 0xec
 8004ca4:	f008 ffac 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ca8:	2305      	movs	r3, #5
 8004caa:	226e      	movs	r2, #110	@ 0x6e
 8004cac:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8004cae:	9500      	str	r5, [sp, #0]
 8004cb0:	2107      	movs	r1, #7
 8004cb2:	f7fd fd37 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004cb6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8004cb8:	f8c4 a118 	str.w	sl, [r4, #280]	@ 0x118
 8004cbc:	4638      	mov	r0, r7
 8004cbe:	f008 ff9f 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 110, 5, 20);
 8004cc2:	2305      	movs	r3, #5
 8004cc4:	226e      	movs	r2, #110	@ 0x6e
 8004cc6:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8004cc8:	9500      	str	r5, [sp, #0]
 8004cca:	f44f 719a 	mov.w	r1, #308	@ 0x134
 8004cce:	f7fd fd29 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004cd2:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8004cd4:	f8c4 a144 	str.w	sl, [r4, #324]	@ 0x144
 8004cd8:	4638      	mov	r0, r7
 8004cda:	f008 ff91 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 8004cde:	2216      	movs	r2, #22
 8004ce0:	21b8      	movs	r1, #184	@ 0xb8
 8004ce2:	4658      	mov	r0, fp
 8004ce4:	f7fd fd11 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004ce8:	4b21      	ldr	r3, [pc, #132]	@ (8004d70 <_ZN18HardScreenViewBaseC1Ev+0x2ac>)
 8004cea:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 8004cee:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 8004cf2:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 8004cf6:	ad10      	add	r5, sp, #64	@ 0x40
 8004cf8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8004cfc:	4659      	mov	r1, fp
 8004cfe:	4628      	mov	r0, r5
 8004d00:	4798      	blx	r3
 8004d02:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d06:	f504 78c2 	add.w	r8, r4, #388	@ 0x184
        rotation = textRotation;
 8004d0a:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8004d0e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8004d12:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 8004d16:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 8004d1a:	4659      	mov	r1, fp
 8004d1c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8004d20:	4628      	mov	r0, r5
 8004d22:	4798      	blx	r3
 8004d24:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d28:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004d2c:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 8004d88 <_ZN18HardScreenViewBaseC1Ev+0x2c4>
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER3).getText());
 8004d30:	f504 7379 	add.w	r3, r4, #996	@ 0x3e4
 8004d34:	9309      	str	r3, [sp, #36]	@ 0x24
 8004d36:	f8d8 3000 	ldr.w	r3, [r8]
 8004d3a:	b92b      	cbnz	r3, 8004d48 <_ZN18HardScreenViewBaseC1Ev+0x284>
 8004d3c:	4b0d      	ldr	r3, [pc, #52]	@ (8004d74 <_ZN18HardScreenViewBaseC1Ev+0x2b0>)
 8004d3e:	4a0e      	ldr	r2, [pc, #56]	@ (8004d78 <_ZN18HardScreenViewBaseC1Ev+0x2b4>)
 8004d40:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004d42:	480e      	ldr	r0, [pc, #56]	@ (8004d7c <_ZN18HardScreenViewBaseC1Ev+0x2b8>)
 8004d44:	f023 f882 	bl	8027e4c <__assert_func>
 8004d48:	4b0d      	ldr	r3, [pc, #52]	@ (8004d80 <_ZN18HardScreenViewBaseC1Ev+0x2bc>)
 8004d4a:	881b      	ldrh	r3, [r3, #0]
 8004d4c:	2b01      	cmp	r3, #1
 8004d4e:	d81d      	bhi.n	8004d8c <_ZN18HardScreenViewBaseC1Ev+0x2c8>
 8004d50:	4b0c      	ldr	r3, [pc, #48]	@ (8004d84 <_ZN18HardScreenViewBaseC1Ev+0x2c0>)
 8004d52:	4a09      	ldr	r2, [pc, #36]	@ (8004d78 <_ZN18HardScreenViewBaseC1Ev+0x2b4>)
 8004d54:	2161      	movs	r1, #97	@ 0x61
 8004d56:	e7f4      	b.n	8004d42 <_ZN18HardScreenViewBaseC1Ev+0x27e>
 8004d58:	0802a9a4 	.word	0x0802a9a4
 8004d5c:	0802a668 	.word	0x0802a668
 8004d60:	0802a5d8 	.word	0x0802a5d8
 8004d64:	0802b304 	.word	0x0802b304
 8004d68:	0802afcc 	.word	0x0802afcc
 8004d6c:	ff0c3837 	.word	0xff0c3837
 8004d70:	ff595656 	.word	0xff595656
 8004d74:	080293f2 	.word	0x080293f2
 8004d78:	080294f4 	.word	0x080294f4
 8004d7c:	0802946f 	.word	0x0802946f
 8004d80:	20013fbc 	.word	0x20013fbc
 8004d84:	080294b6 	.word	0x080294b6
 8004d88:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 8004d8c:	4bae      	ldr	r3, [pc, #696]	@ (8005048 <_ZN18HardScreenViewBaseC1Ev+0x584>)
 8004d8e:	2101      	movs	r1, #1
 8004d90:	6818      	ldr	r0, [r3, #0]
 8004d92:	f001 fcb9 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8004d96:	4aad      	ldr	r2, [pc, #692]	@ (800504c <_ZN18HardScreenViewBaseC1Ev+0x588>)
 8004d98:	4603      	mov	r3, r0
 8004d9a:	210a      	movs	r1, #10
 8004d9c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004d9e:	f013 f817 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8004da2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004da4:	f8c4 1190 	str.w	r1, [r4, #400]	@ 0x190
    score2.resizeToCurrentText();
 8004da8:	4658      	mov	r0, fp
 8004daa:	f00c fcff 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004dae:	4ba8      	ldr	r3, [pc, #672]	@ (8005050 <_ZN18HardScreenViewBaseC1Ev+0x58c>)
 8004db0:	9314      	str	r3, [sp, #80]	@ 0x50
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UN9H));
 8004db2:	4658      	mov	r0, fp
 8004db4:	2319      	movs	r3, #25
 8004db6:	a914      	add	r1, sp, #80	@ 0x50
 8004db8:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8004dbc:	f00c fd16 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004dc0:	4659      	mov	r1, fp
 8004dc2:	4638      	mov	r0, r7
 8004dc4:	f008 ff1c 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 8004dc8:	22c3      	movs	r2, #195	@ 0xc3
 8004dca:	2175      	movs	r1, #117	@ 0x75
 8004dcc:	4648      	mov	r0, r9
 8004dce:	f7fd fc9c 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004dd2:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 8004dd6:	499f      	ldr	r1, [pc, #636]	@ (8005054 <_ZN18HardScreenViewBaseC1Ev+0x590>)
        boundingArea = calculateBoundingArea();
 8004dd8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8004ddc:	f8c4 11c4 	str.w	r1, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 8004de0:	4628      	mov	r0, r5
 8004de2:	4649      	mov	r1, r9
        linespace = space;
 8004de4:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 8004de8:	4798      	blx	r3
 8004dea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004dee:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 8004df2:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 8004df6:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8004dfa:	f04f 0101 	mov.w	r1, #1
        boundingArea = calculateBoundingArea();
 8004dfe:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 8004e02:	f884 11cc 	strb.w	r1, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 8004e06:	4628      	mov	r0, r5
 8004e08:	4649      	mov	r1, r9
 8004e0a:	4798      	blx	r3
 8004e0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004e10:	f8d8 3000 	ldr.w	r3, [r8]
 8004e14:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER3).getText());
 8004e18:	f504 7b7e 	add.w	fp, r4, #1016	@ 0x3f8
 8004e1c:	2b00      	cmp	r3, #0
 8004e1e:	d08d      	beq.n	8004d3c <_ZN18HardScreenViewBaseC1Ev+0x278>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004e20:	498d      	ldr	r1, [pc, #564]	@ (8005058 <_ZN18HardScreenViewBaseC1Ev+0x594>)
 8004e22:	880b      	ldrh	r3, [r1, #0]
 8004e24:	2b02      	cmp	r3, #2
 8004e26:	d993      	bls.n	8004d50 <_ZN18HardScreenViewBaseC1Ev+0x28c>
        return texts->getText(typedTextId);
 8004e28:	4a87      	ldr	r2, [pc, #540]	@ (8005048 <_ZN18HardScreenViewBaseC1Ev+0x584>)
 8004e2a:	2102      	movs	r1, #2
 8004e2c:	6810      	ldr	r0, [r2, #0]
 8004e2e:	f001 fc6b 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8004e32:	4a86      	ldr	r2, [pc, #536]	@ (800504c <_ZN18HardScreenViewBaseC1Ev+0x588>)
 8004e34:	4603      	mov	r3, r0
 8004e36:	210a      	movs	r1, #10
 8004e38:	4658      	mov	r0, fp
 8004e3a:	f012 ffc9 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score1.resizeToCurrentText();
 8004e3e:	4648      	mov	r0, r9
 8004e40:	f8c4 b1dc 	str.w	fp, [r4, #476]	@ 0x1dc
 8004e44:	f00c fcb2 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OTAD));
 8004e48:	aa14      	add	r2, sp, #80	@ 0x50
        : typedTextId(id)
 8004e4a:	4b81      	ldr	r3, [pc, #516]	@ (8005050 <_ZN18HardScreenViewBaseC1Ev+0x58c>)
 8004e4c:	9314      	str	r3, [sp, #80]	@ 0x50
 8004e4e:	4611      	mov	r1, r2
 8004e50:	2318      	movs	r3, #24
 8004e52:	4648      	mov	r0, r9
 8004e54:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8004e58:	f00c fcc8 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004e5c:	4649      	mov	r1, r9
 8004e5e:	4638      	mov	r0, r7
    player1.setPosition(140, 180, 19, 52);
 8004e60:	f04f 0934 	mov.w	r9, #52	@ 0x34
 8004e64:	f008 fecc 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004e68:	2313      	movs	r3, #19
 8004e6a:	9803      	ldr	r0, [sp, #12]
 8004e6c:	f8cd 9000 	str.w	r9, [sp]
 8004e70:	22b4      	movs	r2, #180	@ 0xb4
 8004e72:	218c      	movs	r1, #140	@ 0x8c
 8004e74:	f7fd fc56 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8004e78:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004e7a:	f8c4 a210 	str.w	sl, [r4, #528]	@ 0x210
        boundingArea = calculateBoundingArea();
 8004e7e:	4628      	mov	r0, r5
        linespace = space;
 8004e80:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 8004e84:	f00c fa0a 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e88:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e8c:	f504 7807 	add.w	r8, r4, #540	@ 0x21c
 8004e90:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8004e94:	f04f 0101 	mov.w	r1, #1
 8004e98:	f884 1218 	strb.w	r1, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 8004e9c:	4628      	mov	r0, r5
 8004e9e:	9903      	ldr	r1, [sp, #12]
 8004ea0:	f00c f9fc 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ea4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ea8:	4b69      	ldr	r3, [pc, #420]	@ (8005050 <_ZN18HardScreenViewBaseC1Ev+0x58c>)
 8004eaa:	9314      	str	r3, [sp, #80]	@ 0x50
 8004eac:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8004eb0:	2317      	movs	r3, #23
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z3TY));
 8004eb2:	9803      	ldr	r0, [sp, #12]
 8004eb4:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8004eb8:	a914      	add	r1, sp, #80	@ 0x50
        alpha = newAlpha;
 8004eba:	f04f 08be 	mov.w	r8, #190	@ 0xbe
 8004ebe:	f00c fc95 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ec2:	9903      	ldr	r1, [sp, #12]
 8004ec4:	f884 8216 	strb.w	r8, [r4, #534]	@ 0x216
 8004ec8:	4638      	mov	r0, r7
 8004eca:	f008 fe99 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 8004ece:	2313      	movs	r3, #19
 8004ed0:	9804      	ldr	r0, [sp, #16]
 8004ed2:	f8cd 9000 	str.w	r9, [sp]
 8004ed6:	2207      	movs	r2, #7
 8004ed8:	21a5      	movs	r1, #165	@ 0xa5
 8004eda:	f7fd fc23 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8004ede:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004ee0:	f8c4 a258 	str.w	sl, [r4, #600]	@ 0x258
        boundingArea = calculateBoundingArea();
 8004ee4:	4628      	mov	r0, r5
        linespace = space;
 8004ee6:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 8004eea:	f00c f9d7 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004eee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ef2:	f504 7919 	add.w	r9, r4, #612	@ 0x264
 8004ef6:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8004efa:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8004efe:	9904      	ldr	r1, [sp, #16]
        rotation = textRotation;
 8004f00:	f884 2260 	strb.w	r2, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8004f04:	4628      	mov	r0, r5
 8004f06:	f00c f9c9 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004f0e:	4b50      	ldr	r3, [pc, #320]	@ (8005050 <_ZN18HardScreenViewBaseC1Ev+0x58c>)
 8004f10:	9314      	str	r3, [sp, #80]	@ 0x50
 8004f12:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8004f16:	2316      	movs	r3, #22
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FY8E));
 8004f18:	9804      	ldr	r0, [sp, #16]
 8004f1a:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8004f1e:	a914      	add	r1, sp, #80	@ 0x50
 8004f20:	f00c fc64 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        borderColor = colorBorder;
 8004f24:	4d4d      	ldr	r5, [pc, #308]	@ (800505c <_ZN18HardScreenViewBaseC1Ev+0x598>)
 8004f26:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 8004f28:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
 8004f2c:	4638      	mov	r0, r7
 8004f2e:	f8df 8134 	ldr.w	r8, [pc, #308]	@ 8005064 <_ZN18HardScreenViewBaseC1Ev+0x5a0>
    goal1.setPosition(0, 60, 2, 120);
 8004f32:	f04f 0978 	mov.w	r9, #120	@ 0x78
 8004f36:	f008 fe63 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004f3a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8004f3c:	f8cd 9000 	str.w	r9, [sp]
 8004f40:	2302      	movs	r3, #2
 8004f42:	223c      	movs	r2, #60	@ 0x3c
 8004f44:	4631      	mov	r1, r6
 8004f46:	f7fd fbed 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004f4a:	e9c4 85a6 	strd	r8, r5, [r4, #664]	@ 0x298
 8004f4e:	990c      	ldr	r1, [sp, #48]	@ 0x30
        borderSize = size;
 8004f50:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 8004f54:	4638      	mov	r0, r7
 8004f56:	f008 fe53 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(318, 60, 2, 120);
 8004f5a:	2302      	movs	r3, #2
 8004f5c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004f5e:	f8cd 9000 	str.w	r9, [sp]
 8004f62:	223c      	movs	r2, #60	@ 0x3c
 8004f64:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 8004f68:	f7fd fbdc 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8004f6c:	e9c4 85b3 	strd	r8, r5, [r4, #716]	@ 0x2cc
 8004f70:	990b      	ldr	r1, [sp, #44]	@ 0x2c
        borderSize = size;
 8004f72:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 8004f76:	4638      	mov	r0, r7
 8004f78:	f008 fe42 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(56, 230);
 8004f7c:	22e6      	movs	r2, #230	@ 0xe6
 8004f7e:	9805      	ldr	r0, [sp, #20]
 8004f80:	2138      	movs	r1, #56	@ 0x38
 8004f82:	f7fd fbc2 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 8004f86:	f04f 0503 	mov.w	r5, #3
    image1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8004f8a:	9805      	ldr	r0, [sp, #20]
 8004f8c:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 8004f90:	a914      	add	r1, sp, #80	@ 0x50
 8004f92:	f00c fe45 	bl	8011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004f96:	9905      	ldr	r1, [sp, #20]
 8004f98:	4638      	mov	r0, r7
 8004f9a:	f008 fe31 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1_1.setXY(223, 229);
 8004f9e:	22e5      	movs	r2, #229	@ 0xe5
 8004fa0:	9806      	ldr	r0, [sp, #24]
 8004fa2:	21df      	movs	r1, #223	@ 0xdf
 8004fa4:	f7fd fbb1 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8004fa8:	9806      	ldr	r0, [sp, #24]
 8004faa:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 8004fae:	a914      	add	r1, sp, #80	@ 0x50
 8004fb0:	f00c fe36 	bl	8011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004fb4:	9906      	ldr	r1, [sp, #24]
 8004fb6:	4638      	mov	r0, r7
 8004fb8:	f008 fe22 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(56, 0);
 8004fbc:	4632      	mov	r2, r6
 8004fbe:	9807      	ldr	r0, [sp, #28]
 8004fc0:	2138      	movs	r1, #56	@ 0x38
 8004fc2:	f7fd fba2 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 8004fc6:	2504      	movs	r5, #4
    image2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8004fc8:	9807      	ldr	r0, [sp, #28]
 8004fca:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 8004fce:	a914      	add	r1, sp, #80	@ 0x50
 8004fd0:	f00c fe26 	bl	8011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004fd4:	9907      	ldr	r1, [sp, #28]
 8004fd6:	4638      	mov	r0, r7
 8004fd8:	f008 fe12 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2_2.setXY(223, 2);
 8004fdc:	2202      	movs	r2, #2
 8004fde:	9808      	ldr	r0, [sp, #32]
 8004fe0:	21df      	movs	r1, #223	@ 0xdf
 8004fe2:	f7fd fb92 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    image2_2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8004fe6:	9808      	ldr	r0, [sp, #32]
 8004fe8:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 8004fec:	a914      	add	r1, sp, #80	@ 0x50
 8004fee:	f00c fe17 	bl	8011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004ff2:	9908      	ldr	r1, [sp, #32]
 8004ff4:	4638      	mov	r0, r7
 8004ff6:	f008 fe03 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8004ffa:	230e      	movs	r3, #14
 8004ffc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004ffe:	9300      	str	r3, [sp, #0]
 8005000:	2272      	movs	r2, #114	@ 0x72
 8005002:	219a      	movs	r1, #154	@ 0x9a
 8005004:	f7fd fb8e 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8005008:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 800500a:	e9c4 33ed 	strd	r3, r3, [r4, #948]	@ 0x3b4
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800500e:	23c0      	movs	r3, #192	@ 0xc0
 8005010:	f8c4 33bc 	str.w	r3, [r4, #956]	@ 0x3bc
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005014:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8005018:	f8c4 33c4 	str.w	r3, [r4, #964]	@ 0x3c4
 800501c:	4b10      	ldr	r3, [pc, #64]	@ (8005060 <_ZN18HardScreenViewBaseC1Ev+0x59c>)
 800501e:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005022:	f649 0361 	movw	r3, #39009	@ 0x9861
 8005026:	f8a4 33e0 	strh.w	r3, [r4, #992]	@ 0x3e0
 800502a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800502c:	990a      	ldr	r1, [sp, #40]	@ 0x28
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 800502e:	f8c4 63c8 	str.w	r6, [r4, #968]	@ 0x3c8
 8005032:	4638      	mov	r0, r7
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005034:	f8c4 63c0 	str.w	r6, [r4, #960]	@ 0x3c0
 8005038:	f8c4 33b0 	str.w	r3, [r4, #944]	@ 0x3b0
 800503c:	f008 fde0 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005040:	4620      	mov	r0, r4
 8005042:	b017      	add	sp, #92	@ 0x5c
 8005044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005048:	20013fc4 	.word	0x20013fc4
 800504c:	0802953f 	.word	0x0802953f
 8005050:	0802a5c8 	.word	0x0802a5c8
 8005054:	ff595656 	.word	0xff595656
 8005058:	20013fbc 	.word	0x20013fbc
 800505c:	ffad9334 	.word	0xffad9334
 8005060:	ff990c0c 	.word	0xff990c0c
 8005064:	ff000b6e 	.word	0xff000b6e

08005068 <_ZN25MediumReadyScreenViewBase11setupScreenEv>:
}

void MediumReadyScreenViewBase::setupScreen()
{

}
 8005068:	4770      	bx	lr
	...

0800506c <_ZN25MediumReadyScreenViewBaseD1Ev>:
MediumReadyScreenViewBase::~MediumReadyScreenViewBase()
 800506c:	b510      	push	{r4, lr}
 800506e:	4b03      	ldr	r3, [pc, #12]	@ (800507c <_ZN25MediumReadyScreenViewBaseD1Ev+0x10>)
 8005070:	6003      	str	r3, [r0, #0]
 8005072:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005074:	f00d fddc 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005078:	4620      	mov	r0, r4
 800507a:	bd10      	pop	{r4, pc}
 800507c:	0802a9d8 	.word	0x0802a9d8

08005080 <_ZN25MediumReadyScreenViewBaseD0Ev>:
MediumReadyScreenViewBase::~MediumReadyScreenViewBase()
 8005080:	b510      	push	{r4, lr}
 8005082:	4b06      	ldr	r3, [pc, #24]	@ (800509c <_ZN25MediumReadyScreenViewBaseD0Ev+0x1c>)
 8005084:	6003      	str	r3, [r0, #0]
 8005086:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005088:	f00d fdd2 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800508c:	4620      	mov	r0, r4
 800508e:	f44f 51b1 	mov.w	r1, #5664	@ 0x1620
 8005092:	f021 ff9f 	bl	8026fd4 <_ZdlPvj>
 8005096:	4620      	mov	r0, r4
 8005098:	bd10      	pop	{r4, pc}
 800509a:	bf00      	nop
 800509c:	0802a9d8 	.word	0x0802a9d8

080050a0 <_ZN25MediumReadyScreenViewBase15handleTickEventEv>:

void MediumReadyScreenViewBase::handleTickEvent()
{
 80050a0:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 80050a2:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 80050a6:	f8d4 361c 	ldr.w	r3, [r4, #1564]	@ 0x61c
 80050aa:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80050ac:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 80050ae:	f8c4 361c 	str.w	r3, [r4, #1564]	@ 0x61c
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80050b2:	d106      	bne.n	80050c2 <_ZN25MediumReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80050b4:	f00f fab6 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to MediumScreen
        //Go to MediumScreen with no screen transition
        application().gotoMediumScreenScreenNoTransition();
 80050b8:	f7fe faf6 	bl	80036a8 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 80050bc:	2300      	movs	r3, #0
 80050be:	f8c4 361c 	str.w	r3, [r4, #1564]	@ 0x61c
    }
}
 80050c2:	bd10      	pop	{r4, pc}

080050c4 <_ZN25MediumReadyScreenViewBaseC1Ev>:
MediumReadyScreenViewBase::MediumReadyScreenViewBase() :
 80050c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050c8:	4604      	mov	r4, r0
 80050ca:	b093      	sub	sp, #76	@ 0x4c
    frameCountInteraction1Interval(0)
 80050cc:	46a1      	mov	r9, r4
 80050ce:	2600      	movs	r6, #0
 80050d0:	f011 f99e 	bl	8016410 <_ZN8touchgfx6ScreenC1Ev>
 80050d4:	4bde      	ldr	r3, [pc, #888]	@ (8005450 <_ZN25MediumReadyScreenViewBaseC1Ev+0x38c>)
 80050d6:	63e6      	str	r6, [r4, #60]	@ 0x3c
 80050d8:	f849 3b40 	str.w	r3, [r9], #64
 80050dc:	4648      	mov	r0, r9
 80050de:	f7fd fb35 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80050e2:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 80050e6:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 80050ea:	4618      	mov	r0, r3
 80050ec:	9304      	str	r3, [sp, #16]
 80050ee:	f7fd fb2d 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80050f2:	4650      	mov	r0, sl
 80050f4:	f7fd fb2a 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80050f8:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 80050fc:	4618      	mov	r0, r3
 80050fe:	9305      	str	r3, [sp, #20]
 8005100:	f7fd fb24 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005104:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8005108:	4618      	mov	r0, r3
 800510a:	9306      	str	r3, [sp, #24]
 800510c:	f00b faba 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005110:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 8005114:	4618      	mov	r0, r3
 8005116:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005118:	f7fc f9d4 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800511c:	4bcd      	ldr	r3, [pc, #820]	@ (8005454 <_ZN25MediumReadyScreenViewBaseC1Ev+0x390>)
 800511e:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 8005122:	3324      	adds	r3, #36	@ 0x24
 8005124:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
 8005128:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 800512c:	4618      	mov	r0, r3
 800512e:	f8c4 6144 	str.w	r6, [r4, #324]	@ 0x144
 8005132:	4dc9      	ldr	r5, [pc, #804]	@ (8005458 <_ZN25MediumReadyScreenViewBaseC1Ev+0x394>)
 8005134:	930a      	str	r3, [sp, #40]	@ 0x28
 8005136:	f04f 0701 	mov.w	r7, #1
 800513a:	f7fd fb07 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 800513e:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 8005142:	f504 78d2 	add.w	r8, r4, #420	@ 0x1a4
 8005146:	4618      	mov	r0, r3
 8005148:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 800514c:	f884 7170 	strb.w	r7, [r4, #368]	@ 0x170
 8005150:	f504 7bf6 	add.w	fp, r4, #492	@ 0x1ec
 8005154:	9309      	str	r3, [sp, #36]	@ 0x24
 8005156:	f7fd faf9 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 800515a:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 800515e:	f884 719c 	strb.w	r7, [r4, #412]	@ 0x19c
 8005162:	4640      	mov	r0, r8
 8005164:	f7fd fb08 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8005168:	4658      	mov	r0, fp
 800516a:	f7fd fb05 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 800516e:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 8005172:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005174:	4db9      	ldr	r5, [pc, #740]	@ (800545c <_ZN25MediumReadyScreenViewBaseC1Ev+0x398>)
        : TextArea()
 8005176:	9302      	str	r3, [sp, #8]
 8005178:	f7fd fafe 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 800517c:	f504 7320 	add.w	r3, r4, #640	@ 0x280
        : TextAreaWithWildcardBase(), wc1(0)
 8005180:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
 8005184:	4618      	mov	r0, r3
 8005186:	f8c4 627c 	str.w	r6, [r4, #636]	@ 0x27c
 800518a:	4fb5      	ldr	r7, [pc, #724]	@ (8005460 <_ZN25MediumReadyScreenViewBaseC1Ev+0x39c>)
 800518c:	9308      	str	r3, [sp, #32]
 800518e:	f7fd fadd 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005192:	f504 732d 	add.w	r3, r4, #692	@ 0x2b4
 8005196:	f8c4 7280 	str.w	r7, [r4, #640]	@ 0x280
 800519a:	4618      	mov	r0, r3
 800519c:	f8c4 62ac 	str.w	r6, [r4, #684]	@ 0x2ac
 80051a0:	f8a4 62b0 	strh.w	r6, [r4, #688]	@ 0x2b0
 80051a4:	9307      	str	r3, [sp, #28]
 80051a6:	f7fd fad1 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 80051aa:	f504 733a 	add.w	r3, r4, #744	@ 0x2e8
 80051ae:	f8c4 72b4 	str.w	r7, [r4, #692]	@ 0x2b4
 80051b2:	4618      	mov	r0, r3
 80051b4:	f8c4 62e0 	str.w	r6, [r4, #736]	@ 0x2e0
 80051b8:	f8a4 62e4 	strh.w	r6, [r4, #740]	@ 0x2e4
 80051bc:	9303      	str	r3, [sp, #12]
 80051be:	f7fd fadb 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 80051c2:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
        : TextAreaWithWildcardBase(), wc1(0)
 80051c6:	f8c4 52e8 	str.w	r5, [r4, #744]	@ 0x2e8
 80051ca:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
    __background.setPosition(0, 0, 320, 240);
 80051ce:	25f0      	movs	r5, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 80051d0:	f8c3 661c 	str.w	r6, [r3, #1564]	@ 0x61c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80051d4:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 80051d8:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 80051dc:	f00d fd1e 	bl	8012c1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80051e0:	4632      	mov	r2, r6
 80051e2:	4648      	mov	r0, r9
 80051e4:	9500      	str	r5, [sp, #0]
 80051e6:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80051ea:	4631      	mov	r1, r6
 80051ec:	1d27      	adds	r7, r4, #4
 80051ee:	f7fd fa99 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80051f2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80051f6:	4649      	mov	r1, r9
 80051f8:	66a3      	str	r3, [r4, #104]	@ 0x68
 80051fa:	4638      	mov	r0, r7
 80051fc:	f008 fd00 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005200:	f04f 39ff 	mov.w	r9, #4294967295
    box3.setPosition(0, 0, 320, 240);
 8005204:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005208:	4632      	mov	r2, r6
 800520a:	9804      	ldr	r0, [sp, #16]
 800520c:	9500      	str	r5, [sp, #0]
 800520e:	4631      	mov	r1, r6
 8005210:	f7fd fa88 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005214:	9904      	ldr	r1, [sp, #16]
 8005216:	f8c4 9094 	str.w	r9, [r4, #148]	@ 0x94
 800521a:	4638      	mov	r0, r7
 800521c:	f008 fcf0 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 318, 236);
 8005220:	2202      	movs	r2, #2
 8005222:	23ec      	movs	r3, #236	@ 0xec
 8005224:	4611      	mov	r1, r2
 8005226:	4650      	mov	r0, sl
 8005228:	9300      	str	r3, [sp, #0]
 800522a:	f44f 739f 	mov.w	r3, #318	@ 0x13e
 800522e:	f7fd fa79 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005232:	4b8c      	ldr	r3, [pc, #560]	@ (8005464 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a0>)
 8005234:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8005238:	4651      	mov	r1, sl
 800523a:	4638      	mov	r0, r7
 800523c:	f008 fce0 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8005240:	4632      	mov	r2, r6
 8005242:	9805      	ldr	r0, [sp, #20]
 8005244:	9500      	str	r5, [sp, #0]
 8005246:	2303      	movs	r3, #3
 8005248:	21a0      	movs	r1, #160	@ 0xa0
 800524a:	f7fd fa6b 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 800524e:	23dc      	movs	r3, #220	@ 0xdc
 8005250:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8005252:	f8c4 90ec 	str.w	r9, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8005256:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 800525a:	4638      	mov	r0, r7
 800525c:	f008 fcd0 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(155, 114, 14, 14);
 8005260:	230e      	movs	r3, #14
 8005262:	2272      	movs	r2, #114	@ 0x72
 8005264:	9806      	ldr	r0, [sp, #24]
 8005266:	9300      	str	r3, [sp, #0]
 8005268:	219b      	movs	r1, #155	@ 0x9b
 800526a:	f7fd fa5b 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800526e:	23c0      	movs	r3, #192	@ 0xc0
 8005270:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005274:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8005278:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 800527c:	4b7a      	ldr	r3, [pc, #488]	@ (8005468 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a4>)
 800527e:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005282:	f649 0361 	movw	r3, #39009	@ 0x9861
 8005286:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
 800528a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800528c:	9906      	ldr	r1, [sp, #24]
 800528e:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        this->circleCenterY = CWRUtil::toQ5(y);
 8005292:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
 8005296:	4638      	mov	r0, r7
    paddle1.setPosition(10, 100, 5, 40);
 8005298:	2528      	movs	r5, #40	@ 0x28
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 800529a:	f8c4 6130 	str.w	r6, [r4, #304]	@ 0x130
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800529e:	f8c4 6128 	str.w	r6, [r4, #296]	@ 0x128
 80052a2:	f008 fcad 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80052a6:	2305      	movs	r3, #5
 80052a8:	2264      	movs	r2, #100	@ 0x64
 80052aa:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80052ac:	9500      	str	r5, [sp, #0]
 80052ae:	210a      	movs	r1, #10
 80052b0:	f7fd fa38 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80052b4:	990a      	ldr	r1, [sp, #40]	@ 0x28
        color = newColor;
 80052b6:	f8c4 9174 	str.w	r9, [r4, #372]	@ 0x174
 80052ba:	4638      	mov	r0, r7
 80052bc:	f008 fca0 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(307, 100, 5, 40);
 80052c0:	2305      	movs	r3, #5
 80052c2:	2264      	movs	r2, #100	@ 0x64
 80052c4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80052c6:	9500      	str	r5, [sp, #0]
 80052c8:	f240 1133 	movw	r1, #307	@ 0x133
 80052cc:	f7fd fa2a 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80052d0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80052d2:	f8c4 91a0 	str.w	r9, [r4, #416]	@ 0x1a0
 80052d6:	4638      	mov	r0, r7
 80052d8:	f008 fc92 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(116, 95, 19, 52);
 80052dc:	2334      	movs	r3, #52	@ 0x34
        boundingArea = calculateBoundingArea();
 80052de:	ad0c      	add	r5, sp, #48	@ 0x30
 80052e0:	225f      	movs	r2, #95	@ 0x5f
 80052e2:	4640      	mov	r0, r8
 80052e4:	9300      	str	r3, [sp, #0]
 80052e6:	2174      	movs	r1, #116	@ 0x74
 80052e8:	2313      	movs	r3, #19
 80052ea:	f7fd fa1b 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80052ee:	4641      	mov	r1, r8
        color = newColor;
 80052f0:	f8c4 91d4 	str.w	r9, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 80052f4:	4628      	mov	r0, r5
        linespace = space;
 80052f6:	f8a4 61d8 	strh.w	r6, [r4, #472]	@ 0x1d8
        boundingArea = calculateBoundingArea();
 80052fa:	f00b ffcf 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80052fe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005302:	f504 7af0 	add.w	sl, r4, #480	@ 0x1e0
 8005306:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        wideTextAction = action;
 800530a:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 800530e:	4641      	mov	r1, r8
        wideTextAction = action;
 8005310:	f884 21dd 	strb.w	r2, [r4, #477]	@ 0x1dd
        boundingArea = calculateBoundingArea();
 8005314:	4628      	mov	r0, r5
 8005316:	f00b ffc1 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800531a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 800531e:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8005322:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005326:	4641      	mov	r1, r8
        rotation = textRotation;
 8005328:	f884 31dc 	strb.w	r3, [r4, #476]	@ 0x1dc
        boundingArea = calculateBoundingArea();
 800532c:	4628      	mov	r0, r5
 800532e:	f00b ffb5 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005332:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005336:	4b4d      	ldr	r3, [pc, #308]	@ (800546c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a8>)
 8005338:	9310      	str	r3, [sp, #64]	@ 0x40
 800533a:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
 800533e:	2311      	movs	r3, #17
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDK7));
 8005340:	4640      	mov	r0, r8
 8005342:	a910      	add	r1, sp, #64	@ 0x40
        alpha = newAlpha;
 8005344:	f04f 0abe 	mov.w	sl, #190	@ 0xbe
 8005348:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 800534c:	f00c fa4e 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005350:	4641      	mov	r1, r8
 8005352:	4638      	mov	r0, r7
 8005354:	f884 a1da 	strb.w	sl, [r4, #474]	@ 0x1da
 8005358:	f008 fc52 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(187, 95, 19, 52);
 800535c:	2134      	movs	r1, #52	@ 0x34
 800535e:	2313      	movs	r3, #19
 8005360:	225f      	movs	r2, #95	@ 0x5f
 8005362:	4658      	mov	r0, fp
 8005364:	9100      	str	r1, [sp, #0]
 8005366:	21bb      	movs	r1, #187	@ 0xbb
 8005368:	f7fd f9dc 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 800536c:	4659      	mov	r1, fp
        color = newColor;
 800536e:	f8c4 921c 	str.w	r9, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 8005372:	4628      	mov	r0, r5
        linespace = space;
 8005374:	f8a4 6220 	strh.w	r6, [r4, #544]	@ 0x220
        boundingArea = calculateBoundingArea();
 8005378:	f00b ff90 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800537c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005380:	f504 780a 	add.w	r8, r4, #552	@ 0x228
 8005384:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        wideTextAction = action;
 8005388:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 800538c:	4659      	mov	r1, fp
        wideTextAction = action;
 800538e:	f884 2225 	strb.w	r2, [r4, #549]	@ 0x225
        boundingArea = calculateBoundingArea();
 8005392:	4628      	mov	r0, r5
        wideTextAction = action;
 8005394:	4691      	mov	r9, r2
        boundingArea = calculateBoundingArea();
 8005396:	f00b ff81 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800539a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800539e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 80053a2:	4659      	mov	r1, fp
 80053a4:	4628      	mov	r0, r5
        rotation = textRotation;
 80053a6:	f884 9224 	strb.w	r9, [r4, #548]	@ 0x224
        boundingArea = calculateBoundingArea();
 80053aa:	f00b ff77 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80053ae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80053b2:	4b2e      	ldr	r3, [pc, #184]	@ (800546c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a8>)
 80053b4:	9310      	str	r3, [sp, #64]	@ 0x40
 80053b6:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 80053ba:	2310      	movs	r3, #16
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CWXV));
 80053bc:	4658      	mov	r0, fp
 80053be:	a910      	add	r1, sp, #64	@ 0x40
 80053c0:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80053c4:	f00c fa12 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80053c8:	4659      	mov	r1, fp
 80053ca:	4638      	mov	r0, r7
        alpha = newAlpha;
 80053cc:	f884 a222 	strb.w	sl, [r4, #546]	@ 0x222
 80053d0:	f008 fc16 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(53, 113);
 80053d4:	2271      	movs	r2, #113	@ 0x71
 80053d6:	9802      	ldr	r0, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80053d8:	f8df b0a8 	ldr.w	fp, [pc, #168]	@ 8005484 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c0>
 80053dc:	2135      	movs	r1, #53	@ 0x35
 80053de:	f7fd f994 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80053e2:	4b23      	ldr	r3, [pc, #140]	@ (8005470 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3ac>)
 80053e4:	f8c4 3264 	str.w	r3, [r4, #612]	@ 0x264
        boundingArea = calculateBoundingArea();
 80053e8:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 80053ec:	9902      	ldr	r1, [sp, #8]
 80053ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80053f2:	f8a4 6268 	strh.w	r6, [r4, #616]	@ 0x268
        boundingArea = calculateBoundingArea();
 80053f6:	4628      	mov	r0, r5
 80053f8:	4798      	blx	r3
 80053fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80053fe:	f504 781c 	add.w	r8, r4, #624	@ 0x270
        rotation = textRotation;
 8005402:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8005406:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 800540a:	f884 326c 	strb.w	r3, [r4, #620]	@ 0x26c
        boundingArea = calculateBoundingArea();
 800540e:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 8005412:	9902      	ldr	r1, [sp, #8]
 8005414:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005418:	4628      	mov	r0, r5
 800541a:	4798      	blx	r3
 800541c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005420:	f8db 3000 	ldr.w	r3, [fp]
 8005424:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER2BUFFER).getText());
 8005428:	f504 784d 	add.w	r8, r4, #820	@ 0x334
 800542c:	b92b      	cbnz	r3, 800543a <_ZN25MediumReadyScreenViewBaseC1Ev+0x376>
 800542e:	4b11      	ldr	r3, [pc, #68]	@ (8005474 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b0>)
 8005430:	4a11      	ldr	r2, [pc, #68]	@ (8005478 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b4>)
 8005432:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005434:	4811      	ldr	r0, [pc, #68]	@ (800547c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b8>)
 8005436:	f022 fd09 	bl	8027e4c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800543a:	f8df a04c 	ldr.w	sl, [pc, #76]	@ 8005488 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800543e:	f8ba 3000 	ldrh.w	r3, [sl]
 8005442:	2b07      	cmp	r3, #7
 8005444:	d822      	bhi.n	800548c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c8>
 8005446:	4b0e      	ldr	r3, [pc, #56]	@ (8005480 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3bc>)
 8005448:	4a0b      	ldr	r2, [pc, #44]	@ (8005478 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b4>)
 800544a:	2161      	movs	r1, #97	@ 0x61
 800544c:	e7f2      	b.n	8005434 <_ZN25MediumReadyScreenViewBaseC1Ev+0x370>
 800544e:	bf00      	nop
 8005450:	0802a9d8 	.word	0x0802a9d8
 8005454:	0802afcc 	.word	0x0802afcc
 8005458:	0802a668 	.word	0x0802a668
 800545c:	0802a5d8 	.word	0x0802a5d8
 8005460:	0802b304 	.word	0x0802b304
 8005464:	ff0c3837 	.word	0xff0c3837
 8005468:	ff990c0c 	.word	0xff990c0c
 800546c:	0802a5c8 	.word	0x0802a5c8
 8005470:	ffdeab5f 	.word	0xffdeab5f
 8005474:	080293f2 	.word	0x080293f2
 8005478:	080294f4 	.word	0x080294f4
 800547c:	0802946f 	.word	0x0802946f
 8005480:	080294b6 	.word	0x080294b6
 8005484:	20013fb8 	.word	0x20013fb8
 8005488:	20013fbc 	.word	0x20013fbc
        return texts->getText(typedTextId);
 800548c:	f8df 914c 	ldr.w	r9, [pc, #332]	@ 80055dc <_ZN25MediumReadyScreenViewBaseC1Ev+0x518>
 8005490:	2107      	movs	r1, #7
 8005492:	f8d9 0000 	ldr.w	r0, [r9]
 8005496:	f001 f937 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 800549a:	4a4b      	ldr	r2, [pc, #300]	@ (80055c8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x504>)
 800549c:	4603      	mov	r3, r0
 800549e:	210a      	movs	r1, #10
 80054a0:	4640      	mov	r0, r8
 80054a2:	f012 fc95 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 80054a6:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 80054a8:	f8c4 827c 	str.w	r8, [r4, #636]	@ 0x27c
 80054ac:	f00c f97e 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80054b0:	4b46      	ldr	r3, [pc, #280]	@ (80055cc <_ZN25MediumReadyScreenViewBaseC1Ev+0x508>)
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MH9F));
 80054b2:	9802      	ldr	r0, [sp, #8]
 80054b4:	9310      	str	r3, [sp, #64]	@ 0x40
 80054b6:	a910      	add	r1, sp, #64	@ 0x40
 80054b8:	230f      	movs	r3, #15
        alpha = newAlpha;
 80054ba:	f04f 08d2 	mov.w	r8, #210	@ 0xd2
 80054be:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80054c2:	f00c f993 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80054c6:	9902      	ldr	r1, [sp, #8]
 80054c8:	f884 826a 	strb.w	r8, [r4, #618]	@ 0x26a
 80054cc:	4638      	mov	r0, r7
 80054ce:	f008 fb97 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal1.setPosition(318, 60, 2, 120);
 80054d2:	2278      	movs	r2, #120	@ 0x78
 80054d4:	2302      	movs	r3, #2
 80054d6:	9808      	ldr	r0, [sp, #32]
 80054d8:	9200      	str	r2, [sp, #0]
 80054da:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 80054de:	223c      	movs	r2, #60	@ 0x3c
 80054e0:	f7fd f920 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80054e4:	4a3a      	ldr	r2, [pc, #232]	@ (80055d0 <_ZN25MediumReadyScreenViewBaseC1Ev+0x50c>)
 80054e6:	493b      	ldr	r1, [pc, #236]	@ (80055d4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x510>)
        borderSize = size;
 80054e8:	f8a4 62b0 	strh.w	r6, [r4, #688]	@ 0x2b0
        borderColor = colorBorder;
 80054ec:	e9c4 21aa 	strd	r2, r1, [r4, #680]	@ 0x2a8
 80054f0:	4638      	mov	r0, r7
 80054f2:	9908      	ldr	r1, [sp, #32]
 80054f4:	f008 fb84 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(0, 60, 2, 120);
 80054f8:	2078      	movs	r0, #120	@ 0x78
 80054fa:	2302      	movs	r3, #2
 80054fc:	4631      	mov	r1, r6
 80054fe:	9000      	str	r0, [sp, #0]
 8005500:	223c      	movs	r2, #60	@ 0x3c
 8005502:	9807      	ldr	r0, [sp, #28]
 8005504:	f7fd f90e 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005508:	4a31      	ldr	r2, [pc, #196]	@ (80055d0 <_ZN25MediumReadyScreenViewBaseC1Ev+0x50c>)
 800550a:	4932      	ldr	r1, [pc, #200]	@ (80055d4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x510>)
        borderSize = size;
 800550c:	f8a4 62e4 	strh.w	r6, [r4, #740]	@ 0x2e4
        borderColor = colorBorder;
 8005510:	e9c4 21b7 	strd	r2, r1, [r4, #732]	@ 0x2dc
 8005514:	4638      	mov	r0, r7
 8005516:	9907      	ldr	r1, [sp, #28]
 8005518:	f008 fb72 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(243, 111);
 800551c:	9803      	ldr	r0, [sp, #12]
 800551e:	226f      	movs	r2, #111	@ 0x6f
 8005520:	21f3      	movs	r1, #243	@ 0xf3
 8005522:	f7fd f8f2 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005526:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        color = newColor;
 800552a:	4a2b      	ldr	r2, [pc, #172]	@ (80055d8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x514>)
        boundingArea = calculateBoundingArea();
 800552c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005530:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8005532:	f8c4 2318 	str.w	r2, [r4, #792]	@ 0x318
        boundingArea = calculateBoundingArea();
 8005536:	4628      	mov	r0, r5
        linespace = space;
 8005538:	f8a4 631c 	strh.w	r6, [r4, #796]	@ 0x31c
        boundingArea = calculateBoundingArea();
 800553c:	4798      	blx	r3
 800553e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005542:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        boundingArea = calculateBoundingArea();
 8005546:	f504 7649 	add.w	r6, r4, #804	@ 0x324
 800554a:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 800554e:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8005552:	4628      	mov	r0, r5
 8005554:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005558:	9903      	ldr	r1, [sp, #12]
        rotation = textRotation;
 800555a:	f884 2320 	strb.w	r2, [r4, #800]	@ 0x320
        boundingArea = calculateBoundingArea();
 800555e:	4798      	blx	r3
 8005560:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005564:	f8db 3000 	ldr.w	r3, [fp]
 8005568:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER2BUFFER).getText());
 800556c:	f504 7552 	add.w	r5, r4, #840	@ 0x348
 8005570:	2b00      	cmp	r3, #0
 8005572:	f43f af5c 	beq.w	800542e <_ZN25MediumReadyScreenViewBaseC1Ev+0x36a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005576:	f8ba 3000 	ldrh.w	r3, [sl]
 800557a:	2b07      	cmp	r3, #7
 800557c:	f67f af63 	bls.w	8005446 <_ZN25MediumReadyScreenViewBaseC1Ev+0x382>
        return texts->getText(typedTextId);
 8005580:	f8d9 0000 	ldr.w	r0, [r9]
 8005584:	2107      	movs	r1, #7
 8005586:	f001 f8bf 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 800558a:	4a0f      	ldr	r2, [pc, #60]	@ (80055c8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x504>)
 800558c:	4603      	mov	r3, r0
 800558e:	210a      	movs	r1, #10
 8005590:	4628      	mov	r0, r5
 8005592:	f012 fc1d 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 8005596:	9803      	ldr	r0, [sp, #12]
 8005598:	f8c4 5330 	str.w	r5, [r4, #816]	@ 0x330
 800559c:	f00c f906 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80055a0:	4b0a      	ldr	r3, [pc, #40]	@ (80055cc <_ZN25MediumReadyScreenViewBaseC1Ev+0x508>)
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CZR5));
 80055a2:	9803      	ldr	r0, [sp, #12]
 80055a4:	9310      	str	r3, [sp, #64]	@ 0x40
 80055a6:	a910      	add	r1, sp, #64	@ 0x40
 80055a8:	f04f 030e 	mov.w	r3, #14
 80055ac:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80055b0:	f00c f91c 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80055b4:	4638      	mov	r0, r7
 80055b6:	9903      	ldr	r1, [sp, #12]
        alpha = newAlpha;
 80055b8:	f884 831e 	strb.w	r8, [r4, #798]	@ 0x31e
 80055bc:	f008 fb20 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80055c0:	4620      	mov	r0, r4
 80055c2:	b013      	add	sp, #76	@ 0x4c
 80055c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055c8:	0802953f 	.word	0x0802953f
 80055cc:	0802a5c8 	.word	0x0802a5c8
 80055d0:	ff000b6e 	.word	0xff000b6e
 80055d4:	ffad9334 	.word	0xffad9334
 80055d8:	ffdeab5f 	.word	0xffdeab5f
 80055dc:	20013fc4 	.word	0x20013fc4

080055e0 <_ZN20MediumScreenViewBase11setupScreenEv>:
}

void MediumScreenViewBase::setupScreen()
{

}
 80055e0:	4770      	bx	lr
	...

080055e4 <_ZN20MediumScreenViewBaseD1Ev>:
MediumScreenViewBase::~MediumScreenViewBase()
 80055e4:	b510      	push	{r4, lr}
 80055e6:	4b03      	ldr	r3, [pc, #12]	@ (80055f4 <_ZN20MediumScreenViewBaseD1Ev+0x10>)
 80055e8:	6003      	str	r3, [r0, #0]
 80055ea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055ec:	f00d fb20 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055f0:	4620      	mov	r0, r4
 80055f2:	bd10      	pop	{r4, pc}
 80055f4:	0802aa0c 	.word	0x0802aa0c

080055f8 <_ZN20MediumScreenViewBaseD0Ev>:
MediumScreenViewBase::~MediumScreenViewBase()
 80055f8:	b510      	push	{r4, lr}
 80055fa:	4b06      	ldr	r3, [pc, #24]	@ (8005614 <_ZN20MediumScreenViewBaseD0Ev+0x1c>)
 80055fc:	6003      	str	r3, [r0, #0]
 80055fe:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005600:	f00d fb16 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005604:	4620      	mov	r0, r4
 8005606:	f241 611c 	movw	r1, #5660	@ 0x161c
 800560a:	f021 fce3 	bl	8026fd4 <_ZdlPvj>
 800560e:	4620      	mov	r0, r4
 8005610:	bd10      	pop	{r4, pc}
 8005612:	bf00      	nop
 8005614:	0802aa0c 	.word	0x0802aa0c

08005618 <_ZN20MediumScreenViewBaseC1Ev>:
MediumScreenViewBase::MediumScreenViewBase()
 8005618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800561c:	4604      	mov	r4, r0
 800561e:	b093      	sub	sp, #76	@ 0x4c
 8005620:	4625      	mov	r5, r4
 8005622:	2600      	movs	r6, #0
 8005624:	f010 fef4 	bl	8016410 <_ZN8touchgfx6ScreenC1Ev>
 8005628:	4b90      	ldr	r3, [pc, #576]	@ (800586c <_ZN20MediumScreenViewBaseC1Ev+0x254>)
 800562a:	63e6      	str	r6, [r4, #60]	@ 0x3c
 800562c:	f845 3b40 	str.w	r3, [r5], #64
 8005630:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8005634:	4628      	mov	r0, r5
 8005636:	f7fd f889 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 800563a:	4650      	mov	r0, sl
 800563c:	f7fd f886 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005640:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8005644:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
 8005648:	4618      	mov	r0, r3
 800564a:	9305      	str	r3, [sp, #20]
 800564c:	f7fd f87e 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005650:	4640      	mov	r0, r8
 8005652:	f7fd f87b 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005656:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 800565a:	4618      	mov	r0, r3
 800565c:	4f84      	ldr	r7, [pc, #528]	@ (8005870 <_ZN20MediumScreenViewBaseC1Ev+0x258>)
 800565e:	930a      	str	r3, [sp, #40]	@ 0x28
 8005660:	f04f 0901 	mov.w	r9, #1
 8005664:	f7fd f872 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005668:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 800566c:	4618      	mov	r0, r3
        : TextArea()
 800566e:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 8005672:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 8005676:	f884 9114 	strb.w	r9, [r4, #276]	@ 0x114
 800567a:	9309      	str	r3, [sp, #36]	@ 0x24
 800567c:	f7fd f866 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005680:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 8005684:	f884 9140 	strb.w	r9, [r4, #320]	@ 0x140
        : TextAreaWithWildcardBase(), wc1(0)
 8005688:	4f7a      	ldr	r7, [pc, #488]	@ (8005874 <_ZN20MediumScreenViewBaseC1Ev+0x25c>)
        : TextArea()
 800568a:	4658      	mov	r0, fp
 800568c:	f504 79ca 	add.w	r9, r4, #404	@ 0x194
 8005690:	f7fd f872 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005694:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 8005698:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 800569c:	4648      	mov	r0, r9
 800569e:	f7fd f86b 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 80056a2:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 80056a6:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 80056aa:	4618      	mov	r0, r3
 80056ac:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 80056b0:	9303      	str	r3, [sp, #12]
 80056b2:	f7fd f861 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 80056b6:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 80056ba:	4618      	mov	r0, r3
 80056bc:	9304      	str	r3, [sp, #16]
 80056be:	f7fd f85b 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 80056c2:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 80056c6:	4618      	mov	r0, r3
 80056c8:	4f6b      	ldr	r7, [pc, #428]	@ (8005878 <_ZN20MediumScreenViewBaseC1Ev+0x260>)
 80056ca:	9308      	str	r3, [sp, #32]
 80056cc:	f7fd f83e 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80056d0:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 80056d4:	f8c4 7270 	str.w	r7, [r4, #624]	@ 0x270
 80056d8:	4618      	mov	r0, r3
 80056da:	f8c4 629c 	str.w	r6, [r4, #668]	@ 0x29c
 80056de:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 80056e2:	9307      	str	r3, [sp, #28]
 80056e4:	f7fd f832 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80056e8:	f504 7336 	add.w	r3, r4, #728	@ 0x2d8
 80056ec:	f8c4 72a4 	str.w	r7, [r4, #676]	@ 0x2a4
 80056f0:	4618      	mov	r0, r3
 80056f2:	f8c4 62d0 	str.w	r6, [r4, #720]	@ 0x2d0
 80056f6:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 80056fa:	9306      	str	r3, [sp, #24]
 80056fc:	f00a ffc2 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005700:	f504 7348 	add.w	r3, r4, #800	@ 0x320
 8005704:	4618      	mov	r0, r3
 8005706:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005708:	f7fb fedc 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800570c:	4b5b      	ldr	r3, [pc, #364]	@ (800587c <_ZN20MediumScreenViewBaseC1Ev+0x264>)
 800570e:	f8c4 3320 	str.w	r3, [r4, #800]	@ 0x320
 8005712:	3324      	adds	r3, #36	@ 0x24
 8005714:	f8c4 3328 	str.w	r3, [r4, #808]	@ 0x328
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005718:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 800571c:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 8005720:	f8c4 632c 	str.w	r6, [r4, #812]	@ 0x32c
 8005724:	f00d fa7a 	bl	8012c1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8005728:	23f0      	movs	r3, #240	@ 0xf0
 800572a:	4632      	mov	r2, r6
 800572c:	4628      	mov	r0, r5
 800572e:	9300      	str	r3, [sp, #0]
 8005730:	4631      	mov	r1, r6
 8005732:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005736:	f7fc fff5 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800573a:	1d27      	adds	r7, r4, #4
 800573c:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8005740:	4629      	mov	r1, r5
 8005742:	66a3      	str	r3, [r4, #104]	@ 0x68
 8005744:	4638      	mov	r0, r7
 8005746:	f008 fa5b 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 800574a:	23f0      	movs	r3, #240	@ 0xf0
 800574c:	4632      	mov	r2, r6
 800574e:	4650      	mov	r0, sl
 8005750:	9300      	str	r3, [sp, #0]
 8005752:	4631      	mov	r1, r6
 8005754:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005758:	f7fc ffe4 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800575c:	f04f 33ff 	mov.w	r3, #4294967295
 8005760:	4651      	mov	r1, sl
 8005762:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8005766:	4638      	mov	r0, r7
 8005768:	f008 fa4a 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 800576c:	2202      	movs	r2, #2
 800576e:	23ec      	movs	r3, #236	@ 0xec
 8005770:	4611      	mov	r1, r2
 8005772:	9805      	ldr	r0, [sp, #20]
 8005774:	9300      	str	r3, [sp, #0]
 8005776:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 800577a:	f7fc ffd3 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800577e:	4b40      	ldr	r3, [pc, #256]	@ (8005880 <_ZN20MediumScreenViewBaseC1Ev+0x268>)
 8005780:	9905      	ldr	r1, [sp, #20]
 8005782:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8005786:	4638      	mov	r0, r7
 8005788:	f008 fa3a 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 800578c:	23f0      	movs	r3, #240	@ 0xf0
 800578e:	4632      	mov	r2, r6
 8005790:	4640      	mov	r0, r8
 8005792:	9300      	str	r3, [sp, #0]
 8005794:	21a0      	movs	r1, #160	@ 0xa0
 8005796:	2303      	movs	r3, #3
 8005798:	f7fc ffc4 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800579c:	f04f 33ff 	mov.w	r3, #4294967295
 80057a0:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
        alpha = newAlpha;
 80057a4:	23dc      	movs	r3, #220	@ 0xdc
 80057a6:	4641      	mov	r1, r8
    paddle1.setPosition(7, 101, 5, 40);
 80057a8:	2528      	movs	r5, #40	@ 0x28
 80057aa:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 80057ae:	4638      	mov	r0, r7
 80057b0:	f008 fa26 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80057b4:	2265      	movs	r2, #101	@ 0x65
 80057b6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80057b8:	9500      	str	r5, [sp, #0]
 80057ba:	2305      	movs	r3, #5
 80057bc:	2107      	movs	r1, #7
 80057be:	f7fc ffb1 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80057c2:	f04f 33ff 	mov.w	r3, #4294967295
 80057c6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80057c8:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 80057cc:	4638      	mov	r0, r7
 80057ce:	f008 fa17 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 101, 5, 40);
 80057d2:	2265      	movs	r2, #101	@ 0x65
 80057d4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80057d6:	9500      	str	r5, [sp, #0]
 80057d8:	2305      	movs	r3, #5
 80057da:	f44f 719a 	mov.w	r1, #308	@ 0x134
 80057de:	f7fc ffa1 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80057e2:	f04f 33ff 	mov.w	r3, #4294967295
 80057e6:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
 80057ea:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80057ec:	4638      	mov	r0, r7
 80057ee:	f008 fa07 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 80057f2:	2216      	movs	r2, #22
 80057f4:	21b8      	movs	r1, #184	@ 0xb8
 80057f6:	4658      	mov	r0, fp
 80057f8:	f7fc ff87 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80057fc:	4b21      	ldr	r3, [pc, #132]	@ (8005884 <_ZN20MediumScreenViewBaseC1Ev+0x26c>)
 80057fe:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 8005802:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 8005806:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 800580a:	ad0c      	add	r5, sp, #48	@ 0x30
 800580c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005810:	4659      	mov	r1, fp
 8005812:	4628      	mov	r0, r5
 8005814:	4798      	blx	r3
 8005816:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800581a:	f504 78c2 	add.w	r8, r4, #388	@ 0x184
        rotation = textRotation;
 800581e:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8005822:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8005826:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 800582a:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 800582e:	4659      	mov	r1, fp
 8005830:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005834:	4628      	mov	r0, r5
 8005836:	4798      	blx	r3
 8005838:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800583c:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005840:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 800589c <_ZN20MediumScreenViewBaseC1Ev+0x284>
 8005844:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER2).getText());
 8005848:	f504 7a4d 	add.w	sl, r4, #820	@ 0x334
 800584c:	b92b      	cbnz	r3, 800585a <_ZN20MediumScreenViewBaseC1Ev+0x242>
 800584e:	4b0e      	ldr	r3, [pc, #56]	@ (8005888 <_ZN20MediumScreenViewBaseC1Ev+0x270>)
 8005850:	4a0e      	ldr	r2, [pc, #56]	@ (800588c <_ZN20MediumScreenViewBaseC1Ev+0x274>)
 8005852:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005854:	480e      	ldr	r0, [pc, #56]	@ (8005890 <_ZN20MediumScreenViewBaseC1Ev+0x278>)
 8005856:	f022 faf9 	bl	8027e4c <__assert_func>
 800585a:	4b0e      	ldr	r3, [pc, #56]	@ (8005894 <_ZN20MediumScreenViewBaseC1Ev+0x27c>)
 800585c:	881b      	ldrh	r3, [r3, #0]
 800585e:	2b03      	cmp	r3, #3
 8005860:	d81e      	bhi.n	80058a0 <_ZN20MediumScreenViewBaseC1Ev+0x288>
 8005862:	4b0d      	ldr	r3, [pc, #52]	@ (8005898 <_ZN20MediumScreenViewBaseC1Ev+0x280>)
 8005864:	4a09      	ldr	r2, [pc, #36]	@ (800588c <_ZN20MediumScreenViewBaseC1Ev+0x274>)
 8005866:	2161      	movs	r1, #97	@ 0x61
 8005868:	e7f4      	b.n	8005854 <_ZN20MediumScreenViewBaseC1Ev+0x23c>
 800586a:	bf00      	nop
 800586c:	0802aa0c 	.word	0x0802aa0c
 8005870:	0802a668 	.word	0x0802a668
 8005874:	0802a5d8 	.word	0x0802a5d8
 8005878:	0802b304 	.word	0x0802b304
 800587c:	0802afcc 	.word	0x0802afcc
 8005880:	ff0c3837 	.word	0xff0c3837
 8005884:	ff595656 	.word	0xff595656
 8005888:	080293f2 	.word	0x080293f2
 800588c:	080294f4 	.word	0x080294f4
 8005890:	0802946f 	.word	0x0802946f
 8005894:	20013fbc 	.word	0x20013fbc
 8005898:	080294b6 	.word	0x080294b6
 800589c:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 80058a0:	4b92      	ldr	r3, [pc, #584]	@ (8005aec <_ZN20MediumScreenViewBaseC1Ev+0x4d4>)
 80058a2:	2103      	movs	r1, #3
 80058a4:	6818      	ldr	r0, [r3, #0]
 80058a6:	f000 ff2f 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 80058aa:	4a91      	ldr	r2, [pc, #580]	@ (8005af0 <_ZN20MediumScreenViewBaseC1Ev+0x4d8>)
 80058ac:	4603      	mov	r3, r0
 80058ae:	210a      	movs	r1, #10
 80058b0:	4650      	mov	r0, sl
 80058b2:	f012 fa8d 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score2.resizeToCurrentText();
 80058b6:	4658      	mov	r0, fp
        wc1 = value;
 80058b8:	f8c4 a190 	str.w	sl, [r4, #400]	@ 0x190
 80058bc:	f00b ff76 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80058c0:	f8df a248 	ldr.w	sl, [pc, #584]	@ 8005b0c <_ZN20MediumScreenViewBaseC1Ev+0x4f4>
 80058c4:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 80058c8:	231d      	movs	r3, #29
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KK9M));
 80058ca:	4658      	mov	r0, fp
 80058cc:	a910      	add	r1, sp, #64	@ 0x40
 80058ce:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80058d2:	f00b ff8b 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058d6:	4659      	mov	r1, fp
 80058d8:	4638      	mov	r0, r7
 80058da:	f008 f991 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 80058de:	22c3      	movs	r2, #195	@ 0xc3
 80058e0:	2175      	movs	r1, #117	@ 0x75
 80058e2:	4648      	mov	r0, r9
 80058e4:	f7fc ff11 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80058e8:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 80058ec:	4a81      	ldr	r2, [pc, #516]	@ (8005af4 <_ZN20MediumScreenViewBaseC1Ev+0x4dc>)
        boundingArea = calculateBoundingArea();
 80058ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 80058f2:	f8c4 21c4 	str.w	r2, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 80058f6:	4649      	mov	r1, r9
 80058f8:	4628      	mov	r0, r5
        linespace = space;
 80058fa:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 80058fe:	4798      	blx	r3
 8005900:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005904:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 8005908:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 800590c:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8005910:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 8005914:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 8005918:	f884 21cc 	strb.w	r2, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 800591c:	4649      	mov	r1, r9
 800591e:	4628      	mov	r0, r5
 8005920:	4798      	blx	r3
 8005922:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005926:	f8d8 3000 	ldr.w	r3, [r8]
 800592a:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER2).getText());
 800592e:	f504 7b52 	add.w	fp, r4, #840	@ 0x348
 8005932:	2b00      	cmp	r3, #0
 8005934:	d08b      	beq.n	800584e <_ZN20MediumScreenViewBaseC1Ev+0x236>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005936:	4a70      	ldr	r2, [pc, #448]	@ (8005af8 <_ZN20MediumScreenViewBaseC1Ev+0x4e0>)
 8005938:	8813      	ldrh	r3, [r2, #0]
 800593a:	2b04      	cmp	r3, #4
 800593c:	d991      	bls.n	8005862 <_ZN20MediumScreenViewBaseC1Ev+0x24a>
        return texts->getText(typedTextId);
 800593e:	4b6b      	ldr	r3, [pc, #428]	@ (8005aec <_ZN20MediumScreenViewBaseC1Ev+0x4d4>)
 8005940:	2104      	movs	r1, #4
 8005942:	6818      	ldr	r0, [r3, #0]
 8005944:	f000 fee0 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8005948:	4a69      	ldr	r2, [pc, #420]	@ (8005af0 <_ZN20MediumScreenViewBaseC1Ev+0x4d8>)
 800594a:	4603      	mov	r3, r0
 800594c:	210a      	movs	r1, #10
 800594e:	4658      	mov	r0, fp
 8005950:	f012 fa3e 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score1.resizeToCurrentText();
 8005954:	4648      	mov	r0, r9
 8005956:	f8c4 b1dc 	str.w	fp, [r4, #476]	@ 0x1dc
 800595a:	f00b ff27 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800595e:	231c      	movs	r3, #28
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ATHF));
 8005960:	a910      	add	r1, sp, #64	@ 0x40
 8005962:	4648      	mov	r0, r9
 8005964:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8005968:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 800596c:	f00b ff3e 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005970:	4649      	mov	r1, r9
 8005972:	4638      	mov	r0, r7
    player1.setPosition(140, 180, 19, 52);
 8005974:	f04f 0934 	mov.w	r9, #52	@ 0x34
 8005978:	f008 f942 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800597c:	9803      	ldr	r0, [sp, #12]
 800597e:	f8cd 9000 	str.w	r9, [sp]
 8005982:	22b4      	movs	r2, #180	@ 0xb4
 8005984:	2313      	movs	r3, #19
 8005986:	218c      	movs	r1, #140	@ 0x8c
 8005988:	f7fc fecc 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800598c:	f04f 33ff 	mov.w	r3, #4294967295
 8005990:	f8c4 3210 	str.w	r3, [r4, #528]	@ 0x210
        boundingArea = calculateBoundingArea();
 8005994:	9903      	ldr	r1, [sp, #12]
        linespace = space;
 8005996:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 800599a:	4628      	mov	r0, r5
 800599c:	f00b fc7e 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059a0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80059a4:	f504 7807 	add.w	r8, r4, #540	@ 0x21c
 80059a8:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80059ac:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 80059b0:	9903      	ldr	r1, [sp, #12]
        rotation = textRotation;
 80059b2:	f884 2218 	strb.w	r2, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 80059b6:	4628      	mov	r0, r5
 80059b8:	f00b fc70 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80059c0:	231b      	movs	r3, #27
 80059c2:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V9P9));
 80059c6:	9803      	ldr	r0, [sp, #12]
 80059c8:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80059cc:	a910      	add	r1, sp, #64	@ 0x40
        alpha = newAlpha;
 80059ce:	f04f 08be 	mov.w	r8, #190	@ 0xbe
 80059d2:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 80059d6:	f00b ff09 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80059da:	9903      	ldr	r1, [sp, #12]
 80059dc:	f884 8216 	strb.w	r8, [r4, #534]	@ 0x216
 80059e0:	4638      	mov	r0, r7
 80059e2:	f008 f90d 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 80059e6:	9804      	ldr	r0, [sp, #16]
 80059e8:	f8cd 9000 	str.w	r9, [sp]
 80059ec:	2207      	movs	r2, #7
 80059ee:	2313      	movs	r3, #19
 80059f0:	21a5      	movs	r1, #165	@ 0xa5
 80059f2:	f7fc fe97 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80059f6:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80059fa:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80059fc:	f8c4 3258 	str.w	r3, [r4, #600]	@ 0x258
        boundingArea = calculateBoundingArea();
 8005a00:	4628      	mov	r0, r5
        linespace = space;
 8005a02:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 8005a06:	f00b fc49 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005a0e:	f504 7919 	add.w	r9, r4, #612	@ 0x264
        rotation = textRotation;
 8005a12:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8005a16:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005a1a:	9904      	ldr	r1, [sp, #16]
        rotation = textRotation;
 8005a1c:	f884 3260 	strb.w	r3, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8005a20:	4628      	mov	r0, r5
 8005a22:	f00b fc3b 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a26:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005a2a:	231a      	movs	r3, #26
 8005a2c:	e889 0007 	stmia.w	r9, {r0, r1, r2}
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UJJ8));
 8005a30:	9804      	ldr	r0, [sp, #16]
 8005a32:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8005a36:	a910      	add	r1, sp, #64	@ 0x40
 8005a38:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 8005a3c:	f00b fed6 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a40:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 8005a42:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
 8005a46:	4638      	mov	r0, r7
    goal2.setPosition(318, 60, 2, 120);
 8005a48:	f04f 0878 	mov.w	r8, #120	@ 0x78
 8005a4c:	f008 f8d8 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005a50:	9808      	ldr	r0, [sp, #32]
 8005a52:	f8cd 8000 	str.w	r8, [sp]
 8005a56:	223c      	movs	r2, #60	@ 0x3c
 8005a58:	2302      	movs	r3, #2
 8005a5a:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 8005a5e:	f7fc fe61 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8005a62:	4d26      	ldr	r5, [pc, #152]	@ (8005afc <_ZN20MediumScreenViewBaseC1Ev+0x4e4>)
 8005a64:	4b26      	ldr	r3, [pc, #152]	@ (8005b00 <_ZN20MediumScreenViewBaseC1Ev+0x4e8>)
 8005a66:	9908      	ldr	r1, [sp, #32]
        borderSize = size;
 8005a68:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
        borderColor = colorBorder;
 8005a6c:	e9c4 53a6 	strd	r5, r3, [r4, #664]	@ 0x298
 8005a70:	4638      	mov	r0, r7
 8005a72:	f008 f8c5 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal1.setPosition(0, 60, 2, 120);
 8005a76:	9807      	ldr	r0, [sp, #28]
 8005a78:	f8cd 8000 	str.w	r8, [sp]
 8005a7c:	223c      	movs	r2, #60	@ 0x3c
 8005a7e:	4631      	mov	r1, r6
 8005a80:	2302      	movs	r3, #2
 8005a82:	f7fc fe4f 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a86:	4b1f      	ldr	r3, [pc, #124]	@ (8005b04 <_ZN20MediumScreenViewBaseC1Ev+0x4ec>)
 8005a88:	9907      	ldr	r1, [sp, #28]
 8005a8a:	f8c4 32d0 	str.w	r3, [r4, #720]	@ 0x2d0
 8005a8e:	4638      	mov	r0, r7
 8005a90:	f8c4 52cc 	str.w	r5, [r4, #716]	@ 0x2cc
        borderSize = size;
 8005a94:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 8005a98:	f008 f8b2 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8005a9c:	230e      	movs	r3, #14
 8005a9e:	9806      	ldr	r0, [sp, #24]
 8005aa0:	9300      	str	r3, [sp, #0]
 8005aa2:	2272      	movs	r2, #114	@ 0x72
 8005aa4:	219a      	movs	r1, #154	@ 0x9a
 8005aa6:	f7fc fe3d 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8005aaa:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 8005aac:	e9c4 33c1 	strd	r3, r3, [r4, #772]	@ 0x304
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005ab0:	23c0      	movs	r3, #192	@ 0xc0
 8005ab2:	f8c4 330c 	str.w	r3, [r4, #780]	@ 0x30c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005ab6:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8005aba:	f8c4 3314 	str.w	r3, [r4, #788]	@ 0x314
 8005abe:	4b12      	ldr	r3, [pc, #72]	@ (8005b08 <_ZN20MediumScreenViewBaseC1Ev+0x4f0>)
 8005ac0:	f8c4 332c 	str.w	r3, [r4, #812]	@ 0x32c
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005ac4:	f649 0361 	movw	r3, #39009	@ 0x9861
 8005ac8:	f8a4 3330 	strh.w	r3, [r4, #816]	@ 0x330
 8005acc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005ace:	9906      	ldr	r1, [sp, #24]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005ad0:	f8c4 6318 	str.w	r6, [r4, #792]	@ 0x318
 8005ad4:	4638      	mov	r0, r7
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005ad6:	f8c4 6310 	str.w	r6, [r4, #784]	@ 0x310
 8005ada:	f8c4 3300 	str.w	r3, [r4, #768]	@ 0x300
 8005ade:	f008 f88f 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005ae2:	4620      	mov	r0, r4
 8005ae4:	b013      	add	sp, #76	@ 0x4c
 8005ae6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005aea:	bf00      	nop
 8005aec:	20013fc4 	.word	0x20013fc4
 8005af0:	0802953f 	.word	0x0802953f
 8005af4:	ff595656 	.word	0xff595656
 8005af8:	20013fbc 	.word	0x20013fbc
 8005afc:	ff000b6e 	.word	0xff000b6e
 8005b00:	ffad9334 	.word	0xffad9334
 8005b04:	ff3b2f05 	.word	0xff3b2f05
 8005b08:	ff990c0c 	.word	0xff990c0c
 8005b0c:	0802a5c8 	.word	0x0802a5c8

08005b10 <_ZN19StartScreenViewBase7action1Ev>:
     * Custom Actions
     */
    virtual void action1()
    {
        // Override and implement this function in Screen1
    }
 8005b10:	4770      	bx	lr

08005b12 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b12:	4770      	bx	lr

08005b14 <_ZN19StartScreenViewBase11setupScreenEv>:
}

void StartScreenViewBase::setupScreen()
{

}
 8005b14:	4770      	bx	lr

08005b16 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005b16:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b18:	68c2      	ldr	r2, [r0, #12]
 8005b1a:	6844      	ldr	r4, [r0, #4]
 8005b1c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005b1e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005b20:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005b24:	07d2      	lsls	r2, r2, #31
 8005b26:	bf48      	it	mi
 8005b28:	5962      	ldrmi	r2, [r4, r5]
 8005b2a:	689b      	ldr	r3, [r3, #8]
    }
 8005b2c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b2e:	bf48      	it	mi
 8005b30:	58d3      	ldrmi	r3, [r2, r3]
 8005b32:	4718      	bx	r3

08005b34 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8005b34:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8005b36:	6840      	ldr	r0, [r0, #4]
 8005b38:	b130      	cbz	r0, 8005b48 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005b3a:	689a      	ldr	r2, [r3, #8]
 8005b3c:	b91a      	cbnz	r2, 8005b46 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8005b3e:	68d8      	ldr	r0, [r3, #12]
 8005b40:	f000 0001 	and.w	r0, r0, #1
 8005b44:	4770      	bx	lr
 8005b46:	2001      	movs	r0, #1
    }
 8005b48:	4770      	bx	lr

08005b4a <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b4a:	b510      	push	{r4, lr}
 8005b4c:	2110      	movs	r1, #16
 8005b4e:	4604      	mov	r4, r0
 8005b50:	f021 fa40 	bl	8026fd4 <_ZdlPvj>
 8005b54:	4620      	mov	r0, r4
 8005b56:	bd10      	pop	{r4, pc}

08005b58 <_ZN19StartScreenViewBaseD1Ev>:
StartScreenViewBase::~StartScreenViewBase()
 8005b58:	b510      	push	{r4, lr}
 8005b5a:	4b03      	ldr	r3, [pc, #12]	@ (8005b68 <_ZN19StartScreenViewBaseD1Ev+0x10>)
 8005b5c:	6003      	str	r3, [r0, #0]
 8005b5e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b60:	f00d f866 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b64:	4620      	mov	r0, r4
 8005b66:	bd10      	pop	{r4, pc}
 8005b68:	0802aa58 	.word	0x0802aa58

08005b6c <_ZN19StartScreenViewBaseD0Ev>:
StartScreenViewBase::~StartScreenViewBase()
 8005b6c:	b510      	push	{r4, lr}
 8005b6e:	4b06      	ldr	r3, [pc, #24]	@ (8005b88 <_ZN19StartScreenViewBaseD0Ev+0x1c>)
 8005b70:	6003      	str	r3, [r0, #0]
 8005b72:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b74:	f00d f85c 	bl	8012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b78:	4620      	mov	r0, r4
 8005b7a:	f641 017c 	movw	r1, #6268	@ 0x187c
 8005b7e:	f021 fa29 	bl	8026fd4 <_ZdlPvj>
 8005b82:	4620      	mov	r0, r4
 8005b84:	bd10      	pop	{r4, pc}
 8005b86:	bf00      	nop
 8005b88:	0802aa58 	.word	0x0802aa58

08005b8c <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005b8c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonEasy)
 8005b8e:	f100 03e0 	add.w	r3, r0, #224	@ 0xe0
 8005b92:	4299      	cmp	r1, r3
{
 8005b94:	4604      	mov	r4, r0
 8005b96:	460d      	mov	r5, r1
    if (&src == &buttonEasy)
 8005b98:	d103      	bne.n	8005ba2 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005b9a:	f00e fd43 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonEasy clicked change screen to EasyReadyScreen
        //Go to EasyReadyScreen with screen transition towards East
        application().gotoEasyReadyScreenScreenWipeTransitionEast();
 8005b9e:	f7fd fdb3 	bl	8003708 <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv>
    }
    if (&src == &buttonMedium)
 8005ba2:	f204 5364 	addw	r3, r4, #1380	@ 0x564
 8005ba6:	429d      	cmp	r5, r3
 8005ba8:	d103      	bne.n	8005bb2 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005baa:	f00e fd3b 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonMedium clicked change screen to MediumReadyScreen
        //Go to MediumReadyScreen with screen transition towards East
        application().gotoMediumReadyScreenScreenWipeTransitionEast();
 8005bae:	f7fd fd8b 	bl	80036c8 <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv>
    }
    if (&src == &buttonHard)
 8005bb2:	3498      	adds	r4, #152	@ 0x98
 8005bb4:	42a5      	cmp	r5, r4
 8005bb6:	d105      	bne.n	8005bc4 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
 8005bb8:	f00e fd34 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonHard clicked change screen to HardReadyScreen
        //Go to HardReadyScreen with screen transition towards East
        application().gotoHardReadyScreenScreenWipeTransitionEast();
    }
}
 8005bbc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoHardReadyScreenScreenWipeTransitionEast();
 8005bc0:	f7fd bd62 	b.w	8003688 <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv>
}
 8005bc4:	bd38      	pop	{r3, r4, r5, pc}
	...

08005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>:
    PainterRGB565(colortype color = 0)
 8005bc8:	b538      	push	{r3, r4, r5, lr}
 8005bca:	4604      	mov	r4, r0
 8005bcc:	460d      	mov	r5, r1
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005bce:	f7fb fc79 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005bd2:	4b03      	ldr	r3, [pc, #12]	@ (8005be0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x18>)
 8005bd4:	6023      	str	r3, [r4, #0]
 8005bd6:	3324      	adds	r3, #36	@ 0x24
 8005bd8:	60e5      	str	r5, [r4, #12]
 8005bda:	60a3      	str	r3, [r4, #8]
    }
 8005bdc:	4620      	mov	r0, r4
 8005bde:	bd38      	pop	{r3, r4, r5, pc}
 8005be0:	0802afcc 	.word	0x0802afcc

08005be4 <_ZN19StartScreenViewBaseC1Ev>:
StartScreenViewBase::StartScreenViewBase() :
 8005be4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005be8:	4604      	mov	r4, r0
 8005bea:	b0a5      	sub	sp, #148	@ 0x94
    buttonCallback(this, &StartScreenViewBase::buttonCallbackHandler)
 8005bec:	46a1      	mov	r9, r4
 8005bee:	2500      	movs	r5, #0
 8005bf0:	f010 fc0e 	bl	8016410 <_ZN8touchgfx6ScreenC1Ev>
 8005bf4:	4be2      	ldr	r3, [pc, #904]	@ (8005f80 <_ZN19StartScreenViewBaseC1Ev+0x39c>)
 8005bf6:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8005bf8:	f849 3b40 	str.w	r3, [r9], #64
 8005bfc:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8005c00:	4648      	mov	r0, r9
 8005c02:	f7fc fda3 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005c06:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8005c0a:	4650      	mov	r0, sl
 8005c0c:	f7fc fd9e 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005c10:	f104 07e0 	add.w	r7, r4, #224	@ 0xe0
 8005c14:	4640      	mov	r0, r8
 8005c16:	f00c f945 	bl	8011ea4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c1a:	4638      	mov	r0, r7
 8005c1c:	f00c f942 	bl	8011ea4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c20:	f504 7394 	add.w	r3, r4, #296	@ 0x128
 8005c24:	4618      	mov	r0, r3
 8005c26:	9306      	str	r3, [sp, #24]
 8005c28:	f00a fd2c 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005c2c:	f504 73b8 	add.w	r3, r4, #368	@ 0x170
 8005c30:	4629      	mov	r1, r5
 8005c32:	4618      	mov	r0, r3
 8005c34:	9311      	str	r3, [sp, #68]	@ 0x44
 8005c36:	f7ff ffc7 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005c3a:	f504 73c2 	add.w	r3, r4, #388	@ 0x184
 8005c3e:	4618      	mov	r0, r3
 8005c40:	9307      	str	r3, [sp, #28]
 8005c42:	f00a fd1f 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005c46:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 8005c4a:	4629      	mov	r1, r5
 8005c4c:	4618      	mov	r0, r3
 8005c4e:	9312      	str	r3, [sp, #72]	@ 0x48
 8005c50:	f7ff ffba 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005c54:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
 8005c58:	4618      	mov	r0, r3
 8005c5a:	9308      	str	r3, [sp, #32]
 8005c5c:	f00a fd12 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005c60:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8005c64:	4629      	mov	r1, r5
 8005c66:	4618      	mov	r0, r3
 8005c68:	9313      	str	r3, [sp, #76]	@ 0x4c
 8005c6a:	f7ff ffad 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005c6e:	f504 730f 	add.w	r3, r4, #572	@ 0x23c
 8005c72:	4618      	mov	r0, r3
 8005c74:	9309      	str	r3, [sp, #36]	@ 0x24
 8005c76:	f00a fd05 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005c7a:	f504 7321 	add.w	r3, r4, #644	@ 0x284
 8005c7e:	4629      	mov	r1, r5
 8005c80:	4618      	mov	r0, r3
 8005c82:	9314      	str	r3, [sp, #80]	@ 0x50
 8005c84:	f7ff ffa0 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005c88:	f504 7326 	add.w	r3, r4, #664	@ 0x298
 8005c8c:	4618      	mov	r0, r3
 8005c8e:	930a      	str	r3, [sp, #40]	@ 0x28
 8005c90:	f00a fcf8 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005c94:	f504 7338 	add.w	r3, r4, #736	@ 0x2e0
 8005c98:	4629      	mov	r1, r5
 8005c9a:	4618      	mov	r0, r3
 8005c9c:	9315      	str	r3, [sp, #84]	@ 0x54
 8005c9e:	f7ff ff93 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005ca2:	f504 733d 	add.w	r3, r4, #756	@ 0x2f4
 8005ca6:	4618      	mov	r0, r3
 8005ca8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005caa:	f00a fceb 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005cae:	f504 734f 	add.w	r3, r4, #828	@ 0x33c
 8005cb2:	4629      	mov	r1, r5
 8005cb4:	4618      	mov	r0, r3
 8005cb6:	9316      	str	r3, [sp, #88]	@ 0x58
 8005cb8:	f7ff ff86 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005cbc:	f504 7354 	add.w	r3, r4, #848	@ 0x350
 8005cc0:	4618      	mov	r0, r3
 8005cc2:	930c      	str	r3, [sp, #48]	@ 0x30
 8005cc4:	f00a fcde 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005cc8:	f504 7366 	add.w	r3, r4, #920	@ 0x398
 8005ccc:	4629      	mov	r1, r5
 8005cce:	4618      	mov	r0, r3
 8005cd0:	9317      	str	r3, [sp, #92]	@ 0x5c
 8005cd2:	f7ff ff79 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005cd6:	f504 736b 	add.w	r3, r4, #940	@ 0x3ac
 8005cda:	9305      	str	r3, [sp, #20]
          touchable(false),
 8005cdc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8005ce0:	f8a4 33d0 	strh.w	r3, [r4, #976]	@ 0x3d0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8005ce4:	4ba7      	ldr	r3, [pc, #668]	@ (8005f84 <_ZN19StartScreenViewBaseC1Ev+0x3a0>)
 8005ce6:	f8c4 33ac 	str.w	r3, [r4, #940]	@ 0x3ac
 8005cea:	4ba7      	ldr	r3, [pc, #668]	@ (8005f88 <_ZN19StartScreenViewBaseC1Ev+0x3a4>)
 8005cec:	f8c4 33d4 	str.w	r3, [r4, #980]	@ 0x3d4
 8005cf0:	f04f 31ff 	mov.w	r1, #4294967295
 8005cf4:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8005cf8:	f04f 30ff 	mov.w	r0, #4294967295
 8005cfc:	f8c4 33e0 	str.w	r3, [r4, #992]	@ 0x3e0
              text(0)
 8005d00:	e9c4 05fb 	strd	r0, r5, [r4, #1004]	@ 0x3ec
 8005d04:	f8a4 13d8 	strh.w	r1, [r4, #984]	@ 0x3d8
 8005d08:	f504 707d 	add.w	r0, r4, #1012	@ 0x3f4
        : x(0), y(0), width(0), height(0)
 8005d0c:	e9c4 55ec 	strd	r5, r5, [r4, #944]	@ 0x3b0
 8005d10:	e9c4 55ee 	strd	r5, r5, [r4, #952]	@ 0x3b8
          nextSibling(0),
 8005d14:	e9c4 55f0 	strd	r5, r5, [r4, #960]	@ 0x3c0
          cachedAbsX(0),
 8005d18:	e9c4 55f2 	strd	r5, r5, [r4, #968]	@ 0x3c8
        : color(col)
 8005d1c:	f8c4 53dc 	str.w	r5, [r4, #988]	@ 0x3dc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8005d20:	f8a4 53e4 	strh.w	r5, [r4, #996]	@ 0x3e4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8005d24:	f8c4 53e8 	str.w	r5, [r4, #1000]	@ 0x3e8
 8005d28:	900d      	str	r0, [sp, #52]	@ 0x34
 8005d2a:	f00a fcab 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005d2e:	4629      	mov	r1, r5
 8005d30:	f204 403c 	addw	r0, r4, #1084	@ 0x43c
 8005d34:	9018      	str	r0, [sp, #96]	@ 0x60
 8005d36:	f7ff ff47 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005d3a:	f504 608a 	add.w	r0, r4, #1104	@ 0x450
 8005d3e:	900e      	str	r0, [sp, #56]	@ 0x38
 8005d40:	f00a fca0 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005d44:	4629      	mov	r1, r5
 8005d46:	f504 6093 	add.w	r0, r4, #1176	@ 0x498
 8005d4a:	9019      	str	r0, [sp, #100]	@ 0x64
 8005d4c:	f7ff ff3c 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005d50:	f204 40ac 	addw	r0, r4, #1196	@ 0x4ac
 8005d54:	900f      	str	r0, [sp, #60]	@ 0x3c
 8005d56:	f00a fc95 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005d5a:	4629      	mov	r1, r5
 8005d5c:	f204 40f4 	addw	r0, r4, #1268	@ 0x4f4
 8005d60:	901a      	str	r0, [sp, #104]	@ 0x68
 8005d62:	f7ff ff31 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005d66:	f504 60a1 	add.w	r0, r4, #1288	@ 0x508
 8005d6a:	9010      	str	r0, [sp, #64]	@ 0x40
 8005d6c:	f00a fc8a 	bl	8010684 <_ZN8touchgfx6CircleC1Ev>
 8005d70:	4629      	mov	r1, r5
 8005d72:	f504 60aa 	add.w	r0, r4, #1360	@ 0x550
 8005d76:	901b      	str	r0, [sp, #108]	@ 0x6c
 8005d78:	f7ff ff26 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005d7c:	f204 5064 	addw	r0, r4, #1380	@ 0x564
 8005d80:	9003      	str	r0, [sp, #12]
 8005d82:	f00c f88f 	bl	8011ea4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005d86:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8005d8a:	4a80      	ldr	r2, [pc, #512]	@ (8005f8c <_ZN19StartScreenViewBaseC1Ev+0x3a8>)
 8005d8c:	f8c3 286c 	str.w	r2, [r3, #2156]	@ 0x86c
 8005d90:	4a7f      	ldr	r2, [pc, #508]	@ (8005f90 <_ZN19StartScreenViewBaseC1Ev+0x3ac>)
 8005d92:	f8c3 4870 	str.w	r4, [r3, #2160]	@ 0x870
 8005d96:	f8c3 2874 	str.w	r2, [r3, #2164]	@ 0x874
 8005d9a:	f8c3 5878 	str.w	r5, [r3, #2168]	@ 0x878
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005d9e:	f204 50ac 	addw	r0, r4, #1452	@ 0x5ac
    __background.setPosition(0, 0, 320, 240);
 8005da2:	f04f 0bf0 	mov.w	fp, #240	@ 0xf0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005da6:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8005daa:	f00c ff37 	bl	8012c1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8005dae:	462a      	mov	r2, r5
 8005db0:	f8cd b000 	str.w	fp, [sp]
 8005db4:	4629      	mov	r1, r5
 8005db6:	4648      	mov	r0, r9
 8005db8:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005dbc:	1d26      	adds	r6, r4, #4
 8005dbe:	f7fc fcb1 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005dc2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8005dc6:	66a3      	str	r3, [r4, #104]	@ 0x68
 8005dc8:	4649      	mov	r1, r9
 8005dca:	4630      	mov	r0, r6
 8005dcc:	f007 ff18 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setPosition(0, 0, 320, 240);
 8005dd0:	462a      	mov	r2, r5
 8005dd2:	f8cd b000 	str.w	fp, [sp]
 8005dd6:	4629      	mov	r1, r5
 8005dd8:	4650      	mov	r0, sl
 8005dda:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005dde:	f7fc fca1 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005de2:	4b6c      	ldr	r3, [pc, #432]	@ (8005f94 <_ZN19StartScreenViewBaseC1Ev+0x3b0>)
 8005de4:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8005de8:	4651      	mov	r1, sl
 8005dea:	4630      	mov	r0, r6
 8005dec:	f007 ff08 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonHard.setXY(85, 102);
 8005df0:	4640      	mov	r0, r8
 8005df2:	2266      	movs	r2, #102	@ 0x66
 8005df4:	2155      	movs	r1, #85	@ 0x55
 8005df6:	f7fc fc88 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    buttonHard.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 8005dfa:	a821      	add	r0, sp, #132	@ 0x84
 8005dfc:	f04f 0b01 	mov.w	fp, #1
 8005e00:	aa22      	add	r2, sp, #136	@ 0x88
 8005e02:	4601      	mov	r1, r0
 8005e04:	f04f 0902 	mov.w	r9, #2
 8005e08:	4640      	mov	r0, r8
 8005e0a:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 8005e0e:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 8005e12:	f00b fd3e 	bl	8011892 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005e16:	2324      	movs	r3, #36	@ 0x24
 8005e18:	f8a4 30d0 	strh.w	r3, [r4, #208]	@ 0xd0
        updateTextPosition();
 8005e1c:	4640      	mov	r0, r8
 8005e1e:	f7fd f99d 	bl	800315c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8005e22:	f04f 30ff 	mov.w	r0, #4294967295
 8005e26:	f8c4 00d8 	str.w	r0, [r4, #216]	@ 0xd8
    buttonHard.setAction(buttonCallback);
 8005e2a:	f504 50c3 	add.w	r0, r4, #6240	@ 0x1860
        color = col;
 8005e2e:	4b5a      	ldr	r3, [pc, #360]	@ (8005f98 <_ZN19StartScreenViewBaseC1Ev+0x3b4>)
 8005e30:	f8c4 30d4 	str.w	r3, [r4, #212]	@ 0xd4
 8005e34:	300c      	adds	r0, #12
 8005e36:	9004      	str	r0, [sp, #16]
 8005e38:	f8c4 00c0 	str.w	r0, [r4, #192]	@ 0xc0
 8005e3c:	4641      	mov	r1, r8
 8005e3e:	4630      	mov	r0, r6
 8005e40:	f007 fede 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonEasy.setXY(1, 50);
 8005e44:	4659      	mov	r1, fp
 8005e46:	4638      	mov	r0, r7
 8005e48:	2232      	movs	r2, #50	@ 0x32
 8005e4a:	f7fc fc5e 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    buttonEasy.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 8005e4e:	a821      	add	r0, sp, #132	@ 0x84
 8005e50:	aa22      	add	r2, sp, #136	@ 0x88
 8005e52:	4601      	mov	r1, r0
 8005e54:	4638      	mov	r0, r7
 8005e56:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 8005e5a:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 8005e5e:	f00b fd18 	bl	8011892 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005e62:	2325      	movs	r3, #37	@ 0x25
 8005e64:	f8a4 3118 	strh.w	r3, [r4, #280]	@ 0x118
        updateTextPosition();
 8005e68:	4638      	mov	r0, r7
 8005e6a:	f7fd f977 	bl	800315c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005e6e:	9904      	ldr	r1, [sp, #16]
        color = col;
 8005e70:	4b49      	ldr	r3, [pc, #292]	@ (8005f98 <_ZN19StartScreenViewBaseC1Ev+0x3b4>)
 8005e72:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
        colorPressed = col;
 8005e76:	f04f 30ff 	mov.w	r0, #4294967295
    circle5_1_4.setPosition(207, 197, 29, 29);
 8005e7a:	f04f 0a1d 	mov.w	sl, #29
 8005e7e:	f8c4 0120 	str.w	r0, [r4, #288]	@ 0x120
 8005e82:	f8c4 1108 	str.w	r1, [r4, #264]	@ 0x108
 8005e86:	4630      	mov	r0, r6
 8005e88:	4639      	mov	r1, r7
 8005e8a:	f007 feb9 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005e8e:	9806      	ldr	r0, [sp, #24]
 8005e90:	f8cd a000 	str.w	sl, [sp]
 8005e94:	4653      	mov	r3, sl
 8005e96:	22c5      	movs	r2, #197	@ 0xc5
 8005e98:	21cf      	movs	r1, #207	@ 0xcf
 8005e9a:	f7fc fc43 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e9e:	4b3f      	ldr	r3, [pc, #252]	@ (8005f9c <_ZN19StartScreenViewBaseC1Ev+0x3b8>)
 8005ea0:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8005ea2:	f8c4 317c 	str.w	r3, [r4, #380]	@ 0x17c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005ea6:	f44f 5834 	mov.w	r8, #11520	@ 0x2d00
        this->circleCenterX = CWRUtil::toQ5(x);
 8005eaa:	f44f 77f0 	mov.w	r7, #480	@ 0x1e0
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005eae:	f44f 79a0 	mov.w	r9, #320	@ 0x140
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005eb2:	f24d 4314 	movw	r3, #54292	@ 0xd414
        this->circleCenterY = CWRUtil::toQ5(y);
 8005eb6:	e9c4 7755 	strd	r7, r7, [r4, #340]	@ 0x154
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005eba:	f8c4 915c 	str.w	r9, [r4, #348]	@ 0x15c
 8005ebe:	f8a4 3180 	strh.w	r3, [r4, #384]	@ 0x180
 8005ec2:	f8c4 1150 	str.w	r1, [r4, #336]	@ 0x150
 8005ec6:	4630      	mov	r0, r6
 8005ec8:	9906      	ldr	r1, [sp, #24]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005eca:	f8c4 5168 	str.w	r5, [r4, #360]	@ 0x168
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005ece:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005ed2:	f8c4 8164 	str.w	r8, [r4, #356]	@ 0x164
 8005ed6:	f007 fe93 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1_3.setPosition(91, 197, 29, 29);
 8005eda:	9807      	ldr	r0, [sp, #28]
 8005edc:	f8cd a000 	str.w	sl, [sp]
 8005ee0:	4653      	mov	r3, sl
 8005ee2:	22c5      	movs	r2, #197	@ 0xc5
 8005ee4:	215b      	movs	r1, #91	@ 0x5b
 8005ee6:	f7fc fc1d 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005eea:	4b2d      	ldr	r3, [pc, #180]	@ (8005fa0 <_ZN19StartScreenViewBaseC1Ev+0x3bc>)
 8005eec:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8005eee:	f8c4 31d8 	str.w	r3, [r4, #472]	@ 0x1d8
 8005ef2:	f24a 533a 	movw	r3, #42298	@ 0xa53a
        this->circleCenterY = CWRUtil::toQ5(y);
 8005ef6:	e9c4 776c 	strd	r7, r7, [r4, #432]	@ 0x1b0
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005efa:	f8c4 91b8 	str.w	r9, [r4, #440]	@ 0x1b8
 8005efe:	f8a4 31dc 	strh.w	r3, [r4, #476]	@ 0x1dc
 8005f02:	f8c4 11ac 	str.w	r1, [r4, #428]	@ 0x1ac
 8005f06:	4630      	mov	r0, r6
 8005f08:	9907      	ldr	r1, [sp, #28]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005f0a:	f8c4 51c4 	str.w	r5, [r4, #452]	@ 0x1c4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005f0e:	e9c4 586f 	strd	r5, r8, [r4, #444]	@ 0x1bc
 8005f12:	f007 fe75 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_4.setPosition(149, 197, 29, 29);
 8005f16:	9808      	ldr	r0, [sp, #32]
 8005f18:	f8cd a000 	str.w	sl, [sp]
 8005f1c:	4653      	mov	r3, sl
 8005f1e:	22c5      	movs	r2, #197	@ 0xc5
 8005f20:	2195      	movs	r1, #149	@ 0x95
 8005f22:	f7fc fbff 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f26:	4b1f      	ldr	r3, [pc, #124]	@ (8005fa4 <_ZN19StartScreenViewBaseC1Ev+0x3c0>)
 8005f28:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8005f2a:	f8c4 3234 	str.w	r3, [r4, #564]	@ 0x234
 8005f2e:	f64d 53b9 	movw	r3, #56761	@ 0xddb9
        this->circleCenterY = CWRUtil::toQ5(y);
 8005f32:	e9c4 7783 	strd	r7, r7, [r4, #524]	@ 0x20c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005f36:	f8c4 9214 	str.w	r9, [r4, #532]	@ 0x214
 8005f3a:	f8a4 3238 	strh.w	r3, [r4, #568]	@ 0x238
 8005f3e:	f8c4 1208 	str.w	r1, [r4, #520]	@ 0x208
 8005f42:	4630      	mov	r0, r6
 8005f44:	9908      	ldr	r1, [sp, #32]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005f46:	f8c4 5220 	str.w	r5, [r4, #544]	@ 0x220
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005f4a:	e9c4 5886 	strd	r5, r8, [r4, #536]	@ 0x218
 8005f4e:	f007 fe57 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_2_1.setPosition(236, 168, 29, 29);
 8005f52:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005f54:	f8cd a000 	str.w	sl, [sp]
 8005f58:	4653      	mov	r3, sl
 8005f5a:	22a8      	movs	r2, #168	@ 0xa8
 8005f5c:	21ec      	movs	r1, #236	@ 0xec
 8005f5e:	f7fc fbe1 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f62:	4b11      	ldr	r3, [pc, #68]	@ (8005fa8 <_ZN19StartScreenViewBaseC1Ev+0x3c4>)
 8005f64:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8005f66:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
 8005f6a:	f248 6316 	movw	r3, #34326	@ 0x8616
        this->circleCenterY = CWRUtil::toQ5(y);
 8005f6e:	e9c4 779a 	strd	r7, r7, [r4, #616]	@ 0x268
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005f72:	f8c4 9270 	str.w	r9, [r4, #624]	@ 0x270
 8005f76:	f8a4 3294 	strh.w	r3, [r4, #660]	@ 0x294
 8005f7a:	f8c4 1264 	str.w	r1, [r4, #612]	@ 0x264
 8005f7e:	e015      	b.n	8005fac <_ZN19StartScreenViewBaseC1Ev+0x3c8>
 8005f80:	0802aa58 	.word	0x0802aa58
 8005f84:	0802b20c 	.word	0x0802b20c
 8005f88:	0802a5c8 	.word	0x0802a5c8
 8005f8c:	0802aa40 	.word	0x0802aa40
 8005f90:	08005b8d 	.word	0x08005b8d
 8005f94:	ffaddced 	.word	0xffaddced
 8005f98:	ff395080 	.word	0xff395080
 8005f9c:	ffd483a5 	.word	0xffd483a5
 8005fa0:	ffa1a4d1 	.word	0xffa1a4d1
 8005fa4:	ffdeb4ca 	.word	0xffdeb4ca
 8005fa8:	ff86c2b7 	.word	0xff86c2b7
 8005fac:	4630      	mov	r0, r6
 8005fae:	9909      	ldr	r1, [sp, #36]	@ 0x24
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005fb0:	f8c4 527c 	str.w	r5, [r4, #636]	@ 0x27c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005fb4:	e9c4 589d 	strd	r5, r8, [r4, #628]	@ 0x274
 8005fb8:	f007 fe22 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_2.setPosition(117, 168, 29, 29);
 8005fbc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005fbe:	f8cd a000 	str.w	sl, [sp]
 8005fc2:	4653      	mov	r3, sl
 8005fc4:	22a8      	movs	r2, #168	@ 0xa8
 8005fc6:	2175      	movs	r1, #117	@ 0x75
 8005fc8:	f7fc fbac 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fcc:	4b98      	ldr	r3, [pc, #608]	@ (8006230 <_ZN19StartScreenViewBaseC1Ev+0x64c>)
 8005fce:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8005fd0:	f8c4 32ec 	str.w	r3, [r4, #748]	@ 0x2ec
 8005fd4:	f64e 6373 	movw	r3, #61043	@ 0xee73
        this->circleCenterY = CWRUtil::toQ5(y);
 8005fd8:	e9c4 77b1 	strd	r7, r7, [r4, #708]	@ 0x2c4
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005fdc:	f8c4 92cc 	str.w	r9, [r4, #716]	@ 0x2cc
 8005fe0:	f8a4 32f0 	strh.w	r3, [r4, #752]	@ 0x2f0
 8005fe4:	f8c4 12c0 	str.w	r1, [r4, #704]	@ 0x2c0
 8005fe8:	4630      	mov	r0, r6
 8005fea:	990a      	ldr	r1, [sp, #40]	@ 0x28
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005fec:	f8c4 52d8 	str.w	r5, [r4, #728]	@ 0x2d8
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005ff0:	e9c4 58b4 	strd	r5, r8, [r4, #720]	@ 0x2d0
 8005ff4:	f007 fe04 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1_1.setPosition(178, 168, 29, 29);
 8005ff8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8005ffa:	f8cd a000 	str.w	sl, [sp]
 8005ffe:	4653      	mov	r3, sl
 8006000:	22a8      	movs	r2, #168	@ 0xa8
 8006002:	21b2      	movs	r1, #178	@ 0xb2
 8006004:	f7fc fb8e 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006008:	4b8a      	ldr	r3, [pc, #552]	@ (8006234 <_ZN19StartScreenViewBaseC1Ev+0x650>)
 800600a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800600c:	f8c4 3348 	str.w	r3, [r4, #840]	@ 0x348
 8006010:	f649 6332 	movw	r3, #40498	@ 0x9e32
        this->circleCenterY = CWRUtil::toQ5(y);
 8006014:	e9c4 77c8 	strd	r7, r7, [r4, #800]	@ 0x320
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006018:	f8c4 9328 	str.w	r9, [r4, #808]	@ 0x328
 800601c:	f8a4 334c 	strh.w	r3, [r4, #844]	@ 0x34c
 8006020:	f8c4 131c 	str.w	r1, [r4, #796]	@ 0x31c
 8006024:	4630      	mov	r0, r6
 8006026:	990b      	ldr	r1, [sp, #44]	@ 0x2c
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006028:	f8c4 5334 	str.w	r5, [r4, #820]	@ 0x334
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800602c:	e9c4 58cb 	strd	r5, r8, [r4, #812]	@ 0x32c
 8006030:	f007 fde6 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1.setPosition(62, 168, 29, 29);
 8006034:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8006036:	f8cd a000 	str.w	sl, [sp]
 800603a:	4653      	mov	r3, sl
 800603c:	22a8      	movs	r2, #168	@ 0xa8
 800603e:	213e      	movs	r1, #62	@ 0x3e
 8006040:	f7fc fb70 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006044:	4b7c      	ldr	r3, [pc, #496]	@ (8006238 <_ZN19StartScreenViewBaseC1Ev+0x654>)
 8006046:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8006048:	f8c4 33a4 	str.w	r3, [r4, #932]	@ 0x3a4
 800604c:	f64e 4392 	movw	r3, #60562	@ 0xec92
        this->circleCenterY = CWRUtil::toQ5(y);
 8006050:	e9c4 77df 	strd	r7, r7, [r4, #892]	@ 0x37c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006054:	f8c4 9384 	str.w	r9, [r4, #900]	@ 0x384
 8006058:	f8a4 33a8 	strh.w	r3, [r4, #936]	@ 0x3a8
 800605c:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
 8006060:	4630      	mov	r0, r6
 8006062:	990c      	ldr	r1, [sp, #48]	@ 0x30
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006064:	f8c4 5390 	str.w	r5, [r4, #912]	@ 0x390
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006068:	e9c4 58e2 	strd	r5, r8, [r4, #904]	@ 0x388
 800606c:	f007 fdc8 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    titleText.setPosition(89, 10, 159, 49);
 8006070:	2331      	movs	r3, #49	@ 0x31
 8006072:	9805      	ldr	r0, [sp, #20]
 8006074:	9300      	str	r3, [sp, #0]
 8006076:	220a      	movs	r2, #10
 8006078:	239f      	movs	r3, #159	@ 0x9f
 800607a:	2159      	movs	r1, #89	@ 0x59
 800607c:	f7fc fb52 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8006080:	af1c      	add	r7, sp, #112	@ 0x70
        color = newColor;
 8006082:	4b6e      	ldr	r3, [pc, #440]	@ (800623c <_ZN19StartScreenViewBaseC1Ev+0x658>)
        boundingArea = calculateBoundingArea();
 8006084:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8006086:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
        boundingArea = calculateBoundingArea();
 800608a:	4638      	mov	r0, r7
        linespace = space;
 800608c:	f8a4 b3e0 	strh.w	fp, [r4, #992]	@ 0x3e0
        boundingArea = calculateBoundingArea();
 8006090:	f00b f904 	bl	801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006094:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006098:	f504 737a 	add.w	r3, r4, #1000	@ 0x3e8
 800609c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80060a0:	4a67      	ldr	r2, [pc, #412]	@ (8006240 <_ZN19StartScreenViewBaseC1Ev+0x65c>)
 80060a2:	9222      	str	r2, [sp, #136]	@ 0x88
    titleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YPFP));
 80060a4:	aa22      	add	r2, sp, #136	@ 0x88
 80060a6:	2327      	movs	r3, #39	@ 0x27
 80060a8:	4611      	mov	r1, r2
 80060aa:	9805      	ldr	r0, [sp, #20]
 80060ac:	f8ad 308c 	strh.w	r3, [sp, #140]	@ 0x8c
    circle1.setPosition(-26, -30, 80, 80);
 80060b0:	f04f 0a50 	mov.w	sl, #80	@ 0x50
    titleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YPFP));
 80060b4:	f00b fb9a 	bl	80117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060b8:	9905      	ldr	r1, [sp, #20]
 80060ba:	4630      	mov	r0, r6
 80060bc:	f007 fda0 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle1.setPosition(-26, -30, 80, 80);
 80060c0:	4653      	mov	r3, sl
 80060c2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80060c4:	f8cd a000 	str.w	sl, [sp]
 80060c8:	f06f 021d 	mvn.w	r2, #29
 80060cc:	f06f 0119 	mvn.w	r1, #25
 80060d0:	f7fc fb28 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80060d4:	f04f 32ff 	mov.w	r2, #4294967295
        this->circleCenterX = CWRUtil::toQ5(x);
 80060d8:	f44f 67a0 	mov.w	r7, #1280	@ 0x500
 80060dc:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
 80060e0:	f04f 31ff 	mov.w	r1, #4294967295
 80060e4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80060e6:	f8a4 144c 	strh.w	r1, [r4, #1100]	@ 0x44c
 80060ea:	f8c4 241c 	str.w	r2, [r4, #1052]	@ 0x41c
 80060ee:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80060f0:	f8c4 7420 	str.w	r7, [r4, #1056]	@ 0x420
 80060f4:	4630      	mov	r0, r6
        this->circleCenterY = CWRUtil::toQ5(y);
 80060f6:	f8c4 7424 	str.w	r7, [r4, #1060]	@ 0x424
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80060fa:	f8c4 7428 	str.w	r7, [r4, #1064]	@ 0x428
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80060fe:	f8c4 5434 	str.w	r5, [r4, #1076]	@ 0x434
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006102:	f8c4 542c 	str.w	r5, [r4, #1068]	@ 0x42c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006106:	f8c4 8430 	str.w	r8, [r4, #1072]	@ 0x430
 800610a:	f007 fd79 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle2.setPosition(270, -30, 80, 80);
 800610e:	4653      	mov	r3, sl
 8006110:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8006112:	f8cd a000 	str.w	sl, [sp]
 8006116:	f06f 021d 	mvn.w	r2, #29
 800611a:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 800611e:	f7fc fb01 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006122:	f648 695d 	movw	r9, #36445	@ 0x8e5d
 8006126:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8006128:	4a46      	ldr	r2, [pc, #280]	@ (8006244 <_ZN19StartScreenViewBaseC1Ev+0x660>)
 800612a:	f8c4 24a4 	str.w	r2, [r4, #1188]	@ 0x4a4
 800612e:	f8a4 94a8 	strh.w	r9, [r4, #1192]	@ 0x4a8
 8006132:	f8c4 1478 	str.w	r1, [r4, #1144]	@ 0x478
 8006136:	4630      	mov	r0, r6
 8006138:	990e      	ldr	r1, [sp, #56]	@ 0x38
        this->circleCenterX = CWRUtil::toQ5(x);
 800613a:	f8c4 747c 	str.w	r7, [r4, #1148]	@ 0x47c
        this->circleCenterY = CWRUtil::toQ5(y);
 800613e:	f8c4 7480 	str.w	r7, [r4, #1152]	@ 0x480
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006142:	f8c4 7484 	str.w	r7, [r4, #1156]	@ 0x484
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006146:	f8c4 5490 	str.w	r5, [r4, #1168]	@ 0x490
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800614a:	f8c4 5488 	str.w	r5, [r4, #1160]	@ 0x488
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800614e:	f8c4 848c 	str.w	r8, [r4, #1164]	@ 0x48c
 8006152:	f007 fd55 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle3.setPosition(-26, 189, 80, 80);
 8006156:	4653      	mov	r3, sl
 8006158:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800615a:	f8cd a000 	str.w	sl, [sp]
 800615e:	22bd      	movs	r2, #189	@ 0xbd
 8006160:	f06f 0119 	mvn.w	r1, #25
 8006164:	f7fc fade 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006168:	4a36      	ldr	r2, [pc, #216]	@ (8006244 <_ZN19StartScreenViewBaseC1Ev+0x660>)
 800616a:	f8c4 2500 	str.w	r2, [r4, #1280]	@ 0x500
 800616e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8006170:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8006172:	f8a4 9504 	strh.w	r9, [r4, #1284]	@ 0x504
 8006176:	f8c4 24d4 	str.w	r2, [r4, #1236]	@ 0x4d4
 800617a:	4630      	mov	r0, r6
        this->circleCenterX = CWRUtil::toQ5(x);
 800617c:	f8c4 74d8 	str.w	r7, [r4, #1240]	@ 0x4d8
        this->circleCenterY = CWRUtil::toQ5(y);
 8006180:	f8c4 74dc 	str.w	r7, [r4, #1244]	@ 0x4dc
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006184:	f8c4 74e0 	str.w	r7, [r4, #1248]	@ 0x4e0
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006188:	f8c4 54ec 	str.w	r5, [r4, #1260]	@ 0x4ec
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800618c:	f8c4 54e4 	str.w	r5, [r4, #1252]	@ 0x4e4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006190:	f8c4 84e8 	str.w	r8, [r4, #1256]	@ 0x4e8
 8006194:	f007 fd34 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle4.setPosition(270, 189, 80, 80);
 8006198:	4653      	mov	r3, sl
 800619a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800619c:	f8cd a000 	str.w	sl, [sp]
 80061a0:	22bd      	movs	r2, #189	@ 0xbd
 80061a2:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 80061a6:	f7fc fabd 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061aa:	f04f 32ff 	mov.w	r2, #4294967295
 80061ae:	f8c4 255c 	str.w	r2, [r4, #1372]	@ 0x55c
 80061b2:	f04f 31ff 	mov.w	r1, #4294967295
 80061b6:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80061b8:	f8a4 1560 	strh.w	r1, [r4, #1376]	@ 0x560
 80061bc:	f8c4 2530 	str.w	r2, [r4, #1328]	@ 0x530
 80061c0:	9910      	ldr	r1, [sp, #64]	@ 0x40
        this->circleCenterX = CWRUtil::toQ5(x);
 80061c2:	f8c4 7534 	str.w	r7, [r4, #1332]	@ 0x534
 80061c6:	4630      	mov	r0, r6
        this->circleCenterY = CWRUtil::toQ5(y);
 80061c8:	f8c4 7538 	str.w	r7, [r4, #1336]	@ 0x538
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80061cc:	f8c4 753c 	str.w	r7, [r4, #1340]	@ 0x53c
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80061d0:	f8c4 5548 	str.w	r5, [r4, #1352]	@ 0x548
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80061d4:	f8c4 5540 	str.w	r5, [r4, #1344]	@ 0x540
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 80061d8:	f8c4 8544 	str.w	r8, [r4, #1348]	@ 0x544
 80061dc:	f007 fd10 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonMedium.setXY(170, 50);
 80061e0:	9803      	ldr	r0, [sp, #12]
 80061e2:	2232      	movs	r2, #50	@ 0x32
 80061e4:	21aa      	movs	r1, #170	@ 0xaa
 80061e6:	f7fc fa90 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 80061ea:	f04f 0902 	mov.w	r9, #2
    buttonMedium.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 80061ee:	aa22      	add	r2, sp, #136	@ 0x88
 80061f0:	a921      	add	r1, sp, #132	@ 0x84
 80061f2:	9803      	ldr	r0, [sp, #12]
 80061f4:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 80061f8:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 80061fc:	f00b fb49 	bl	8011892 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006200:	2326      	movs	r3, #38	@ 0x26
        updateTextPosition();
 8006202:	9803      	ldr	r0, [sp, #12]
 8006204:	f8a4 359c 	strh.w	r3, [r4, #1436]	@ 0x59c
 8006208:	f7fc ffa8 	bl	800315c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800620c:	4b0e      	ldr	r3, [pc, #56]	@ (8006248 <_ZN19StartScreenViewBaseC1Ev+0x664>)
 800620e:	f8c4 35a0 	str.w	r3, [r4, #1440]	@ 0x5a0
        colorPressed = col;
 8006212:	f04f 33ff 	mov.w	r3, #4294967295
 8006216:	f8c4 35a4 	str.w	r3, [r4, #1444]	@ 0x5a4
 800621a:	9b04      	ldr	r3, [sp, #16]
 800621c:	9903      	ldr	r1, [sp, #12]
 800621e:	f8c4 358c 	str.w	r3, [r4, #1420]	@ 0x58c
 8006222:	4630      	mov	r0, r6
 8006224:	f007 fcec 	bl	800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006228:	4620      	mov	r0, r4
 800622a:	b025      	add	sp, #148	@ 0x94
 800622c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006230:	ffebcf9b 	.word	0xffebcf9b
 8006234:	ff99c793 	.word	0xff99c793
 8006238:	ffeb9191 	.word	0xffeb9191
 800623c:	ff325d8f 	.word	0xff325d8f
 8006240:	0802a5c8 	.word	0x0802a5c8
 8006244:	ff88caeb 	.word	0xff88caeb
 8006248:	ff395080 	.word	0xff395080

0800624c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_15_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_15_4bpp()
{
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 800624c:	4770      	bx	lr
	...

08006250 <_Z23getFont_comicbd_15_4bppv>:
{
 8006250:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 8006252:	4d17      	ldr	r5, [pc, #92]	@ (80062b0 <_Z23getFont_comicbd_15_4bppv+0x60>)
 8006254:	682c      	ldr	r4, [r5, #0]
 8006256:	f014 0401 	ands.w	r4, r4, #1
{
 800625a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 800625c:	f3bf 8f5b 	dmb	ish
 8006260:	d122      	bne.n	80062a8 <_Z23getFont_comicbd_15_4bppv+0x58>
 8006262:	4628      	mov	r0, r5
 8006264:	f020 feb8 	bl	8026fd8 <__cxa_guard_acquire>
 8006268:	b1f0      	cbz	r0, 80062a8 <_Z23getFont_comicbd_15_4bppv+0x58>
 800626a:	233f      	movs	r3, #63	@ 0x3f
 800626c:	9309      	str	r3, [sp, #36]	@ 0x24
 800626e:	4b11      	ldr	r3, [pc, #68]	@ (80062b4 <_Z23getFont_comicbd_15_4bppv+0x64>)
 8006270:	9308      	str	r3, [sp, #32]
 8006272:	4b11      	ldr	r3, [pc, #68]	@ (80062b8 <_Z23getFont_comicbd_15_4bppv+0x68>)
 8006274:	9307      	str	r3, [sp, #28]
 8006276:	2301      	movs	r3, #1
 8006278:	e9cd 4305 	strd	r4, r3, [sp, #20]
 800627c:	9304      	str	r3, [sp, #16]
 800627e:	2304      	movs	r3, #4
 8006280:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006284:	230f      	movs	r3, #15
 8006286:	490d      	ldr	r1, [pc, #52]	@ (80062bc <_Z23getFont_comicbd_15_4bppv+0x6c>)
 8006288:	9300      	str	r3, [sp, #0]
 800628a:	2209      	movs	r2, #9
 800628c:	2313      	movs	r3, #19
 800628e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006292:	480b      	ldr	r0, [pc, #44]	@ (80062c0 <_Z23getFont_comicbd_15_4bppv+0x70>)
 8006294:	940a      	str	r4, [sp, #40]	@ 0x28
 8006296:	9401      	str	r4, [sp, #4]
 8006298:	f7fe f874 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800629c:	4809      	ldr	r0, [pc, #36]	@ (80062c4 <_Z23getFont_comicbd_15_4bppv+0x74>)
 800629e:	f021 fdf3 	bl	8027e88 <atexit>
 80062a2:	4628      	mov	r0, r5
 80062a4:	f020 fea4 	bl	8026ff0 <__cxa_guard_release>
    return comicbd_15_4bpp;
}
 80062a8:	4805      	ldr	r0, [pc, #20]	@ (80062c0 <_Z23getFont_comicbd_15_4bppv+0x70>)
 80062aa:	b00f      	add	sp, #60	@ 0x3c
 80062ac:	bd30      	pop	{r4, r5, pc}
 80062ae:	bf00      	nop
 80062b0:	20003078 	.word	0x20003078
 80062b4:	0802ea68 	.word	0x0802ea68
 80062b8:	0802ea84 	.word	0x0802ea84
 80062bc:	0802e554 	.word	0x0802e554
 80062c0:	2000307c 	.word	0x2000307c
 80062c4:	0800624d 	.word	0x0800624d

080062c8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_18_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_18_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_18_4bpp()
{
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 80062c8:	4770      	bx	lr
	...

080062cc <_Z23getFont_comicbd_18_4bppv>:
{
 80062cc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 80062ce:	4d17      	ldr	r5, [pc, #92]	@ (800632c <_Z23getFont_comicbd_18_4bppv+0x60>)
 80062d0:	682c      	ldr	r4, [r5, #0]
 80062d2:	f014 0401 	ands.w	r4, r4, #1
{
 80062d6:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 80062d8:	f3bf 8f5b 	dmb	ish
 80062dc:	d122      	bne.n	8006324 <_Z23getFont_comicbd_18_4bppv+0x58>
 80062de:	4628      	mov	r0, r5
 80062e0:	f020 fe7a 	bl	8026fd8 <__cxa_guard_acquire>
 80062e4:	b1f0      	cbz	r0, 8006324 <_Z23getFont_comicbd_18_4bppv+0x58>
 80062e6:	233f      	movs	r3, #63	@ 0x3f
 80062e8:	9309      	str	r3, [sp, #36]	@ 0x24
 80062ea:	4b11      	ldr	r3, [pc, #68]	@ (8006330 <_Z23getFont_comicbd_18_4bppv+0x64>)
 80062ec:	9308      	str	r3, [sp, #32]
 80062ee:	4b11      	ldr	r3, [pc, #68]	@ (8006334 <_Z23getFont_comicbd_18_4bppv+0x68>)
 80062f0:	9307      	str	r3, [sp, #28]
 80062f2:	2301      	movs	r3, #1
 80062f4:	e9cd 4305 	strd	r4, r3, [sp, #20]
 80062f8:	9304      	str	r3, [sp, #16]
 80062fa:	2304      	movs	r3, #4
 80062fc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006300:	2312      	movs	r3, #18
 8006302:	490d      	ldr	r1, [pc, #52]	@ (8006338 <_Z23getFont_comicbd_18_4bppv+0x6c>)
 8006304:	9300      	str	r3, [sp, #0]
 8006306:	221f      	movs	r2, #31
 8006308:	2317      	movs	r3, #23
 800630a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800630e:	480b      	ldr	r0, [pc, #44]	@ (800633c <_Z23getFont_comicbd_18_4bppv+0x70>)
 8006310:	940a      	str	r4, [sp, #40]	@ 0x28
 8006312:	9401      	str	r4, [sp, #4]
 8006314:	f7fe f836 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006318:	4809      	ldr	r0, [pc, #36]	@ (8006340 <_Z23getFont_comicbd_18_4bppv+0x74>)
 800631a:	f021 fdb5 	bl	8027e88 <atexit>
 800631e:	4628      	mov	r0, r5
 8006320:	f020 fe66 	bl	8026ff0 <__cxa_guard_release>
    return comicbd_18_4bpp;
}
 8006324:	4805      	ldr	r0, [pc, #20]	@ (800633c <_Z23getFont_comicbd_18_4bppv+0x70>)
 8006326:	b00f      	add	sp, #60	@ 0x3c
 8006328:	bd30      	pop	{r4, r5, pc}
 800632a:	bf00      	nop
 800632c:	200030a8 	.word	0x200030a8
 8006330:	0802ea6c 	.word	0x0802ea6c
 8006334:	0802ea88 	.word	0x0802ea88
 8006338:	0802e5d4 	.word	0x0802e5d4
 800633c:	200030ac 	.word	0x200030ac
 8006340:	080062c9 	.word	0x080062c9

08006344 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_20_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_20_4bpp()
{
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 8006344:	4770      	bx	lr
	...

08006348 <_Z23getFont_comicbd_20_4bppv>:
{
 8006348:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 800634a:	4d16      	ldr	r5, [pc, #88]	@ (80063a4 <_Z23getFont_comicbd_20_4bppv+0x5c>)
 800634c:	682c      	ldr	r4, [r5, #0]
 800634e:	f014 0401 	ands.w	r4, r4, #1
{
 8006352:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 8006354:	f3bf 8f5b 	dmb	ish
 8006358:	d121      	bne.n	800639e <_Z23getFont_comicbd_20_4bppv+0x56>
 800635a:	4628      	mov	r0, r5
 800635c:	f020 fe3c 	bl	8026fd8 <__cxa_guard_acquire>
 8006360:	b1e8      	cbz	r0, 800639e <_Z23getFont_comicbd_20_4bppv+0x56>
 8006362:	233f      	movs	r3, #63	@ 0x3f
 8006364:	9309      	str	r3, [sp, #36]	@ 0x24
 8006366:	4b10      	ldr	r3, [pc, #64]	@ (80063a8 <_Z23getFont_comicbd_20_4bppv+0x60>)
 8006368:	9308      	str	r3, [sp, #32]
 800636a:	4b10      	ldr	r3, [pc, #64]	@ (80063ac <_Z23getFont_comicbd_20_4bppv+0x64>)
 800636c:	4910      	ldr	r1, [pc, #64]	@ (80063b0 <_Z23getFont_comicbd_20_4bppv+0x68>)
 800636e:	4811      	ldr	r0, [pc, #68]	@ (80063b4 <_Z23getFont_comicbd_20_4bppv+0x6c>)
 8006370:	940a      	str	r4, [sp, #40]	@ 0x28
 8006372:	2201      	movs	r2, #1
 8006374:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8006378:	2304      	movs	r3, #4
 800637a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800637e:	2314      	movs	r3, #20
 8006380:	9300      	str	r3, [sp, #0]
 8006382:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006386:	2315      	movs	r3, #21
 8006388:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800638c:	9405      	str	r4, [sp, #20]
 800638e:	f7fd fff9 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006392:	4809      	ldr	r0, [pc, #36]	@ (80063b8 <_Z23getFont_comicbd_20_4bppv+0x70>)
 8006394:	f021 fd78 	bl	8027e88 <atexit>
 8006398:	4628      	mov	r0, r5
 800639a:	f020 fe29 	bl	8026ff0 <__cxa_guard_release>
    return comicbd_20_4bpp;
}
 800639e:	4805      	ldr	r0, [pc, #20]	@ (80063b4 <_Z23getFont_comicbd_20_4bppv+0x6c>)
 80063a0:	b00f      	add	sp, #60	@ 0x3c
 80063a2:	bd30      	pop	{r4, r5, pc}
 80063a4:	200030d8 	.word	0x200030d8
 80063a8:	0802ea70 	.word	0x0802ea70
 80063ac:	0802ea8c 	.word	0x0802ea8c
 80063b0:	0802e788 	.word	0x0802e788
 80063b4:	200030dc 	.word	0x200030dc
 80063b8:	08006345 	.word	0x08006345

080063bc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_28_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_28_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_28_4bpp()
{
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 80063bc:	4770      	bx	lr
	...

080063c0 <_Z23getFont_comicbd_28_4bppv>:
{
 80063c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 80063c2:	4d17      	ldr	r5, [pc, #92]	@ (8006420 <_Z23getFont_comicbd_28_4bppv+0x60>)
 80063c4:	682c      	ldr	r4, [r5, #0]
 80063c6:	f014 0401 	ands.w	r4, r4, #1
{
 80063ca:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 80063cc:	f3bf 8f5b 	dmb	ish
 80063d0:	d122      	bne.n	8006418 <_Z23getFont_comicbd_28_4bppv+0x58>
 80063d2:	4628      	mov	r0, r5
 80063d4:	f020 fe00 	bl	8026fd8 <__cxa_guard_acquire>
 80063d8:	b1f0      	cbz	r0, 8006418 <_Z23getFont_comicbd_28_4bppv+0x58>
 80063da:	233f      	movs	r3, #63	@ 0x3f
 80063dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80063de:	4b11      	ldr	r3, [pc, #68]	@ (8006424 <_Z23getFont_comicbd_28_4bppv+0x64>)
 80063e0:	9308      	str	r3, [sp, #32]
 80063e2:	4b11      	ldr	r3, [pc, #68]	@ (8006428 <_Z23getFont_comicbd_28_4bppv+0x68>)
 80063e4:	9307      	str	r3, [sp, #28]
 80063e6:	2301      	movs	r3, #1
 80063e8:	e9cd 4305 	strd	r4, r3, [sp, #20]
 80063ec:	9304      	str	r3, [sp, #16]
 80063ee:	2304      	movs	r3, #4
 80063f0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80063f4:	231c      	movs	r3, #28
 80063f6:	490d      	ldr	r1, [pc, #52]	@ (800642c <_Z23getFont_comicbd_28_4bppv+0x6c>)
 80063f8:	9300      	str	r3, [sp, #0]
 80063fa:	220b      	movs	r2, #11
 80063fc:	231d      	movs	r3, #29
 80063fe:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006402:	480b      	ldr	r0, [pc, #44]	@ (8006430 <_Z23getFont_comicbd_28_4bppv+0x70>)
 8006404:	940a      	str	r4, [sp, #40]	@ 0x28
 8006406:	9401      	str	r4, [sp, #4]
 8006408:	f7fd ffbc 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800640c:	4809      	ldr	r0, [pc, #36]	@ (8006434 <_Z23getFont_comicbd_28_4bppv+0x74>)
 800640e:	f021 fd3b 	bl	8027e88 <atexit>
 8006412:	4628      	mov	r0, r5
 8006414:	f020 fdec 	bl	8026ff0 <__cxa_guard_release>
    return comicbd_28_4bpp;
}
 8006418:	4805      	ldr	r0, [pc, #20]	@ (8006430 <_Z23getFont_comicbd_28_4bppv+0x70>)
 800641a:	b00f      	add	sp, #60	@ 0x3c
 800641c:	bd30      	pop	{r4, r5, pc}
 800641e:	bf00      	nop
 8006420:	20003108 	.word	0x20003108
 8006424:	0802ea74 	.word	0x0802ea74
 8006428:	0802ea90 	.word	0x0802ea90
 800642c:	0802e798 	.word	0x0802e798
 8006430:	2000310c 	.word	0x2000310c
 8006434:	080063bd 	.word	0x080063bd

08006438 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicz_29_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicz_29_4bpp();

touchgfx::GeneratedFont& getFont_comicz_29_4bpp()
{
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 8006438:	4770      	bx	lr
	...

0800643c <_Z22getFont_comicz_29_4bppv>:
{
 800643c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 800643e:	4d17      	ldr	r5, [pc, #92]	@ (800649c <_Z22getFont_comicz_29_4bppv+0x60>)
 8006440:	682c      	ldr	r4, [r5, #0]
 8006442:	f014 0401 	ands.w	r4, r4, #1
{
 8006446:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 8006448:	f3bf 8f5b 	dmb	ish
 800644c:	d123      	bne.n	8006496 <_Z22getFont_comicz_29_4bppv+0x5a>
 800644e:	4628      	mov	r0, r5
 8006450:	f020 fdc2 	bl	8026fd8 <__cxa_guard_acquire>
 8006454:	b1f8      	cbz	r0, 8006496 <_Z22getFont_comicz_29_4bppv+0x5a>
 8006456:	233f      	movs	r3, #63	@ 0x3f
 8006458:	9309      	str	r3, [sp, #36]	@ 0x24
 800645a:	4b11      	ldr	r3, [pc, #68]	@ (80064a0 <_Z22getFont_comicz_29_4bppv+0x64>)
 800645c:	9308      	str	r3, [sp, #32]
 800645e:	4b11      	ldr	r3, [pc, #68]	@ (80064a4 <_Z22getFont_comicz_29_4bppv+0x68>)
 8006460:	9307      	str	r3, [sp, #28]
 8006462:	2203      	movs	r2, #3
 8006464:	2301      	movs	r3, #1
 8006466:	e9cd 3205 	strd	r3, r2, [sp, #20]
 800646a:	9304      	str	r3, [sp, #16]
 800646c:	2304      	movs	r3, #4
 800646e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006472:	231d      	movs	r3, #29
 8006474:	490c      	ldr	r1, [pc, #48]	@ (80064a8 <_Z22getFont_comicz_29_4bppv+0x6c>)
 8006476:	9300      	str	r3, [sp, #0]
 8006478:	221c      	movs	r2, #28
 800647a:	2325      	movs	r3, #37	@ 0x25
 800647c:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006480:	480a      	ldr	r0, [pc, #40]	@ (80064ac <_Z22getFont_comicz_29_4bppv+0x70>)
 8006482:	940a      	str	r4, [sp, #40]	@ 0x28
 8006484:	9401      	str	r4, [sp, #4]
 8006486:	f7fd ff7d 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800648a:	4809      	ldr	r0, [pc, #36]	@ (80064b0 <_Z22getFont_comicz_29_4bppv+0x74>)
 800648c:	f021 fcfc 	bl	8027e88 <atexit>
 8006490:	4628      	mov	r0, r5
 8006492:	f020 fdad 	bl	8026ff0 <__cxa_guard_release>
    return comicz_29_4bpp;
}
 8006496:	4805      	ldr	r0, [pc, #20]	@ (80064ac <_Z22getFont_comicz_29_4bppv+0x70>)
 8006498:	b00f      	add	sp, #60	@ 0x3c
 800649a:	bd30      	pop	{r4, r5, pc}
 800649c:	20003138 	.word	0x20003138
 80064a0:	0802ea78 	.word	0x0802ea78
 80064a4:	0802ea94 	.word	0x0802ea94
 80064a8:	0802e834 	.word	0x0802e834
 80064ac:	2000313c 	.word	0x2000313c
 80064b0:	08006439 	.word	0x08006439

080064b4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_17_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_17_4bpp();

touchgfx::GeneratedFont& getFont_verdana_17_4bpp()
{
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 80064b4:	4770      	bx	lr
	...

080064b8 <_Z23getFont_verdana_17_4bppv>:
{
 80064b8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 80064ba:	4d16      	ldr	r5, [pc, #88]	@ (8006514 <_Z23getFont_verdana_17_4bppv+0x5c>)
 80064bc:	682c      	ldr	r4, [r5, #0]
 80064be:	f014 0401 	ands.w	r4, r4, #1
{
 80064c2:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 80064c4:	f3bf 8f5b 	dmb	ish
 80064c8:	d121      	bne.n	800650e <_Z23getFont_verdana_17_4bppv+0x56>
 80064ca:	4628      	mov	r0, r5
 80064cc:	f020 fd84 	bl	8026fd8 <__cxa_guard_acquire>
 80064d0:	b1e8      	cbz	r0, 800650e <_Z23getFont_verdana_17_4bppv+0x56>
 80064d2:	233f      	movs	r3, #63	@ 0x3f
 80064d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80064d6:	4b10      	ldr	r3, [pc, #64]	@ (8006518 <_Z23getFont_verdana_17_4bppv+0x60>)
 80064d8:	9308      	str	r3, [sp, #32]
 80064da:	4b10      	ldr	r3, [pc, #64]	@ (800651c <_Z23getFont_verdana_17_4bppv+0x64>)
 80064dc:	4910      	ldr	r1, [pc, #64]	@ (8006520 <_Z23getFont_verdana_17_4bppv+0x68>)
 80064de:	4811      	ldr	r0, [pc, #68]	@ (8006524 <_Z23getFont_verdana_17_4bppv+0x6c>)
 80064e0:	940a      	str	r4, [sp, #40]	@ 0x28
 80064e2:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80064e6:	2201      	movs	r2, #1
 80064e8:	2304      	movs	r3, #4
 80064ea:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80064ee:	2311      	movs	r3, #17
 80064f0:	9300      	str	r3, [sp, #0]
 80064f2:	220b      	movs	r2, #11
 80064f4:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80064f8:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80064fc:	9405      	str	r4, [sp, #20]
 80064fe:	f7fd ff41 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006502:	4809      	ldr	r0, [pc, #36]	@ (8006528 <_Z23getFont_verdana_17_4bppv+0x70>)
 8006504:	f021 fcc0 	bl	8027e88 <atexit>
 8006508:	4628      	mov	r0, r5
 800650a:	f020 fd71 	bl	8026ff0 <__cxa_guard_release>
    return verdana_17_4bpp;
}
 800650e:	4805      	ldr	r0, [pc, #20]	@ (8006524 <_Z23getFont_verdana_17_4bppv+0x6c>)
 8006510:	b00f      	add	sp, #60	@ 0x3c
 8006512:	bd30      	pop	{r4, r5, pc}
 8006514:	20003168 	.word	0x20003168
 8006518:	0802ea7c 	.word	0x0802ea7c
 800651c:	0802ea98 	.word	0x0802ea98
 8006520:	0802e9bc 	.word	0x0802e9bc
 8006524:	2000316c 	.word	0x2000316c
 8006528:	080064b5 	.word	0x080064b5

0800652c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800652c:	4770      	bx	lr
	...

08006530 <_Z23getFont_verdana_20_4bppv>:
{
 8006530:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8006532:	4d16      	ldr	r5, [pc, #88]	@ (800658c <_Z23getFont_verdana_20_4bppv+0x5c>)
 8006534:	682c      	ldr	r4, [r5, #0]
 8006536:	f014 0401 	ands.w	r4, r4, #1
{
 800653a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800653c:	f3bf 8f5b 	dmb	ish
 8006540:	d120      	bne.n	8006584 <_Z23getFont_verdana_20_4bppv+0x54>
 8006542:	4628      	mov	r0, r5
 8006544:	f020 fd48 	bl	8026fd8 <__cxa_guard_acquire>
 8006548:	b1e0      	cbz	r0, 8006584 <_Z23getFont_verdana_20_4bppv+0x54>
 800654a:	233f      	movs	r3, #63	@ 0x3f
 800654c:	9309      	str	r3, [sp, #36]	@ 0x24
 800654e:	4b10      	ldr	r3, [pc, #64]	@ (8006590 <_Z23getFont_verdana_20_4bppv+0x60>)
 8006550:	9308      	str	r3, [sp, #32]
 8006552:	4b10      	ldr	r3, [pc, #64]	@ (8006594 <_Z23getFont_verdana_20_4bppv+0x64>)
 8006554:	4910      	ldr	r1, [pc, #64]	@ (8006598 <_Z23getFont_verdana_20_4bppv+0x68>)
 8006556:	4811      	ldr	r0, [pc, #68]	@ (800659c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8006558:	940a      	str	r4, [sp, #40]	@ 0x28
 800655a:	2201      	movs	r2, #1
 800655c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8006560:	2304      	movs	r3, #4
 8006562:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8006566:	2314      	movs	r3, #20
 8006568:	9300      	str	r3, [sp, #0]
 800656a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800656e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8006572:	9405      	str	r4, [sp, #20]
 8006574:	f7fd ff06 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006578:	4809      	ldr	r0, [pc, #36]	@ (80065a0 <_Z23getFont_verdana_20_4bppv+0x70>)
 800657a:	f021 fc85 	bl	8027e88 <atexit>
 800657e:	4628      	mov	r0, r5
 8006580:	f020 fd36 	bl	8026ff0 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8006584:	4805      	ldr	r0, [pc, #20]	@ (800659c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8006586:	b00f      	add	sp, #60	@ 0x3c
 8006588:	bd30      	pop	{r4, r5, pc}
 800658a:	bf00      	nop
 800658c:	20003198 	.word	0x20003198
 8006590:	0802ea80 	.word	0x0802ea80
 8006594:	0802ea9c 	.word	0x0802ea9c
 8006598:	0802ea58 	.word	0x0802ea58
 800659c:	2000319c 	.word	0x2000319c
 80065a0:	0800652d 	.word	0x0800652d

080065a4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 80065a4:	2000      	movs	r0, #0
 80065a6:	4770      	bx	lr

080065a8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 80065a8:	2000      	movs	r0, #0
 80065aa:	4770      	bx	lr

080065ac <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80065ac:	b40e      	push	{r1, r2, r3}
 80065ae:	b503      	push	{r0, r1, lr}
 80065b0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80065b2:	2100      	movs	r1, #0
{
 80065b4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80065b8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80065ba:	f00e ffa7 	bl	801550c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80065be:	b002      	add	sp, #8
 80065c0:	f85d eb04 	ldr.w	lr, [sp], #4
 80065c4:	b003      	add	sp, #12
 80065c6:	4770      	bx	lr

080065c8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80065c8:	b40c      	push	{r2, r3}
 80065ca:	b507      	push	{r0, r1, r2, lr}
 80065cc:	ab04      	add	r3, sp, #16
 80065ce:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80065d2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80065d4:	f00e ff9a 	bl	801550c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80065d8:	b003      	add	sp, #12
 80065da:	f85d eb04 	ldr.w	lr, [sp], #4
 80065de:	b002      	add	sp, #8
 80065e0:	4770      	bx	lr
	...

080065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80065e4:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 80065e6:	b510      	push	{r4, lr}
 80065e8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80065ea:	b373      	cbz	r3, 800664a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80065ec:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80065ee:	b92b      	cbnz	r3, 80065fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80065f0:	4b18      	ldr	r3, [pc, #96]	@ (8006654 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80065f2:	4a19      	ldr	r2, [pc, #100]	@ (8006658 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80065f4:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80065f6:	4819      	ldr	r0, [pc, #100]	@ (800665c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80065f8:	f021 fc28 	bl	8027e4c <__assert_func>
            return buffer[pos];
 80065fc:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80065fe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006602:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8006604:	b30b      	cbz	r3, 800664a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8006606:	f010 fe3a 	bl	801727e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800660a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800660c:	2b01      	cmp	r3, #1
 800660e:	d803      	bhi.n	8006618 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8006610:	4b13      	ldr	r3, [pc, #76]	@ (8006660 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8006612:	4a14      	ldr	r2, [pc, #80]	@ (8006664 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8006614:	21cb      	movs	r1, #203	@ 0xcb
 8006616:	e7ee      	b.n	80065f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8006618:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800661a:	1c53      	adds	r3, r2, #1
 800661c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800661e:	2b09      	cmp	r3, #9
 8006620:	4619      	mov	r1, r3
 8006622:	bf88      	it	hi
 8006624:	f1a3 010a 	subhi.w	r1, r3, #10
 8006628:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800662c:	f640 103f 	movw	r0, #2367	@ 0x93f
 8006630:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8006632:	4281      	cmp	r1, r0
 8006634:	d109      	bne.n	800664a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8006636:	2b0a      	cmp	r3, #10
 8006638:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800663c:	bf28      	it	cs
 800663e:	2300      	movcs	r3, #0
 8006640:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8006644:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8006646:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8006648:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800664a:	4620      	mov	r0, r4
}
 800664c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8006650:	f010 bd18 	b.w	8017084 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8006654:	08029f65 	.word	0x08029f65
 8006658:	08029f6e 	.word	0x08029f6e
 800665c:	0802a019 	.word	0x0802a019
 8006660:	0802a063 	.word	0x0802a063
 8006664:	0802a071 	.word	0x0802a071

08006668 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8006668:	f010 bcd3 	b.w	8017012 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800666c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800666c:	b510      	push	{r4, lr}
 800666e:	b086      	sub	sp, #24
 8006670:	ac02      	add	r4, sp, #8
 8006672:	e884 0006 	stmia.w	r4, {r1, r2}
 8006676:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8006678:	ab0a      	add	r3, sp, #40	@ 0x28
 800667a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800667c:	9301      	str	r3, [sp, #4]
 800667e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006680:	9300      	str	r3, [sp, #0]
 8006682:	4621      	mov	r1, r4
 8006684:	9b08      	ldr	r3, [sp, #32]
 8006686:	f00d fb6b 	bl	8013d60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800668a:	b006      	add	sp, #24
 800668c:	bd10      	pop	{r4, pc}
	...

08006690 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8006690:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8006692:	bb18      	cbnz	r0, 80066dc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8006694:	4b12      	ldr	r3, [pc, #72]	@ (80066e0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8006696:	4813      	ldr	r0, [pc, #76]	@ (80066e4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8006698:	681c      	ldr	r4, [r3, #0]
 800669a:	4913      	ldr	r1, [pc, #76]	@ (80066e8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800669c:	b1b4      	cbz	r4, 80066cc <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800669e:	6822      	ldr	r2, [r4, #0]
 80066a0:	4422      	add	r2, r4
 80066a2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80066a4:	6862      	ldr	r2, [r4, #4]
 80066a6:	4422      	add	r2, r4
 80066a8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80066aa:	68a2      	ldr	r2, [r4, #8]
 80066ac:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80066ae:	4b0f      	ldr	r3, [pc, #60]	@ (80066ec <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80066b0:	2200      	movs	r2, #0
 80066b2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80066b4:	f000 f838 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80066b8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80066ba:	f000 f833 	bl	8006724 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80066be:	4b0c      	ldr	r3, [pc, #48]	@ (80066f0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80066c0:	601c      	str	r4, [r3, #0]
        fonts = f;
 80066c2:	4b0c      	ldr	r3, [pc, #48]	@ (80066f4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80066c4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80066c6:	4b0c      	ldr	r3, [pc, #48]	@ (80066f8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80066c8:	8018      	strh	r0, [r3, #0]
    }
}
 80066ca:	e007      	b.n	80066dc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80066cc:	4b0b      	ldr	r3, [pc, #44]	@ (80066fc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80066ce:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80066d0:	4b0b      	ldr	r3, [pc, #44]	@ (8006700 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80066d2:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80066d4:	4b0b      	ldr	r3, [pc, #44]	@ (8006704 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80066d6:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80066d8:	2c00      	cmp	r4, #0
 80066da:	d1e8      	bne.n	80066ae <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80066dc:	bd38      	pop	{r3, r4, r5, pc}
 80066de:	bf00      	nop
 80066e0:	200031d4 	.word	0x200031d4
 80066e4:	200031cc 	.word	0x200031cc
 80066e8:	200031c8 	.word	0x200031c8
 80066ec:	200031d0 	.word	0x200031d0
 80066f0:	20013fb8 	.word	0x20013fb8
 80066f4:	20013fc0 	.word	0x20013fc0
 80066f8:	20013fbc 	.word	0x20013fbc
 80066fc:	0802eb44 	.word	0x0802eb44
 8006700:	0802eaa0 	.word	0x0802eaa0
 8006704:	0802ebd8 	.word	0x0802ebd8

08006708 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8006708:	4b04      	ldr	r3, [pc, #16]	@ (800671c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800670a:	681b      	ldr	r3, [r3, #0]
 800670c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8006710:	4b03      	ldr	r3, [pc, #12]	@ (8006720 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8006712:	681b      	ldr	r3, [r3, #0]
}
 8006714:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8006718:	4770      	bx	lr
 800671a:	bf00      	nop
 800671c:	200031c8 	.word	0x200031c8
 8006720:	200031cc 	.word	0x200031cc

08006724 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8006724:	2029      	movs	r0, #41	@ 0x29
 8006726:	4770      	bx	lr

08006728 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8006728:	4800      	ldr	r0, [pc, #0]	@ (800672c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800672a:	4770      	bx	lr
 800672c:	200031d8 	.word	0x200031d8

08006730 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 6:
        touchgfx_fonts[6] = &(getFont_comicbd_15_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8006730:	b510      	push	{r4, lr}
    &(getFont_verdana_17_4bpp()),
 8006732:	f7ff fec1 	bl	80064b8 <_Z23getFont_verdana_17_4bppv>
};
 8006736:	4c0a      	ldr	r4, [pc, #40]	@ (8006760 <_GLOBAL__sub_I_touchgfx_fonts+0x30>)
 8006738:	6020      	str	r0, [r4, #0]
    &(getFont_comicz_29_4bpp()),
 800673a:	f7ff fe7f 	bl	800643c <_Z22getFont_comicz_29_4bppv>
};
 800673e:	6060      	str	r0, [r4, #4]
    &(getFont_comicbd_18_4bpp()),
 8006740:	f7ff fdc4 	bl	80062cc <_Z23getFont_comicbd_18_4bppv>
};
 8006744:	60a0      	str	r0, [r4, #8]
    &(getFont_comicbd_20_4bpp()),
 8006746:	f7ff fdff 	bl	8006348 <_Z23getFont_comicbd_20_4bppv>
};
 800674a:	60e0      	str	r0, [r4, #12]
    &(getFont_comicbd_28_4bpp()),
 800674c:	f7ff fe38 	bl	80063c0 <_Z23getFont_comicbd_28_4bppv>
};
 8006750:	6120      	str	r0, [r4, #16]
    &(getFont_verdana_20_4bpp()),
 8006752:	f7ff feed 	bl	8006530 <_Z23getFont_verdana_20_4bppv>
};
 8006756:	6160      	str	r0, [r4, #20]
    &(getFont_comicbd_15_4bpp())
 8006758:	f7ff fd7a 	bl	8006250 <_Z23getFont_comicbd_15_4bppv>
};
 800675c:	61a0      	str	r0, [r4, #24]
} // namespace TypedTextDatabase
 800675e:	bd10      	pop	{r4, pc}
 8006760:	200031d8 	.word	0x200031d8

08006764 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8006764:	b510      	push	{r4, lr}
    pointArray = 0;
 8006766:	2400      	movs	r4, #0
 8006768:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 800676a:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 800676c:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 800676e:	601c      	str	r4, [r3, #0]
}
 8006770:	bd10      	pop	{r4, pc}

08006772 <_ZN13ModelListener15movePaddle1LeftEv>:
    virtual void movePaddle1Left() {}
 8006772:	4770      	bx	lr

08006774 <_ZN13ModelListener16movePaddle1RightEv>:
    virtual void movePaddle1Right() {}
 8006774:	4770      	bx	lr

08006776 <_ZN13ModelListener15movePaddle2LeftEv>:
    virtual void movePaddle2Left() {}
 8006776:	4770      	bx	lr

08006778 <_ZN13ModelListener16movePaddle2RightEv>:
    virtual void movePaddle2Right() {}
 8006778:	4770      	bx	lr

0800677a <_ZN13ModelListener13paddle1ActionEv>:
    virtual void paddle1Action() {}
 800677a:	4770      	bx	lr

0800677c <_ZN13ModelListener13paddle2ActionEv>:
    virtual void paddle2Action() {}
 800677c:	4770      	bx	lr

0800677e <_ZN24EasyReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~EasyReadyScreenPresenter() {}
 800677e:	4770      	bx	lr

08006780 <_ZThn4_N24EasyReadyScreenPresenterD1Ev>:
 8006780:	3804      	subs	r0, #4
 8006782:	4770      	bx	lr

08006784 <_ZN24EasyReadyScreenPresenter10deactivateEv>:
}

void EasyReadyScreenPresenter::activate()
{

}
 8006784:	4770      	bx	lr

08006786 <_ZN24EasyReadyScreenPresenterD0Ev>:
 8006786:	b510      	push	{r4, lr}
 8006788:	2110      	movs	r1, #16
 800678a:	4604      	mov	r4, r0
 800678c:	f020 fc22 	bl	8026fd4 <_ZdlPvj>
 8006790:	4620      	mov	r0, r4
 8006792:	bd10      	pop	{r4, pc}

08006794 <_ZThn4_N24EasyReadyScreenPresenterD0Ev>:
 8006794:	f1a0 0004 	sub.w	r0, r0, #4
 8006798:	e7f5      	b.n	8006786 <_ZN24EasyReadyScreenPresenterD0Ev>
	...

0800679c <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView>:
    ModelListener() : model(0) {}
 800679c:	2200      	movs	r2, #0
 800679e:	6082      	str	r2, [r0, #8]
    : view(v)
 80067a0:	4a02      	ldr	r2, [pc, #8]	@ (80067ac <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView+0x10>)
 80067a2:	6002      	str	r2, [r0, #0]
 80067a4:	3218      	adds	r2, #24
 80067a6:	6042      	str	r2, [r0, #4]
 80067a8:	60c1      	str	r1, [r0, #12]
}
 80067aa:	4770      	bx	lr
 80067ac:	0802aa90 	.word	0x0802aa90

080067b0 <_ZN19EasyReadyScreenView14tearDownScreenEv>:
}

void EasyReadyScreenView::tearDownScreen()
{
    EasyReadyScreenViewBase::tearDownScreen();
}
 80067b0:	4770      	bx	lr
	...

080067b4 <_ZN19EasyReadyScreenViewD1Ev>:

class EasyReadyScreenView : public EasyReadyScreenViewBase
{
public:
    EasyReadyScreenView();
    virtual ~EasyReadyScreenView() {}
 80067b4:	b510      	push	{r4, lr}
 80067b6:	4b03      	ldr	r3, [pc, #12]	@ (80067c4 <_ZN19EasyReadyScreenViewD1Ev+0x10>)
 80067b8:	6003      	str	r3, [r0, #0]
 80067ba:	4604      	mov	r4, r0
 80067bc:	f7fb ff30 	bl	8002620 <_ZN23EasyReadyScreenViewBaseD1Ev>
 80067c0:	4620      	mov	r0, r4
 80067c2:	bd10      	pop	{r4, pc}
 80067c4:	0802aad0 	.word	0x0802aad0

080067c8 <_ZN19EasyReadyScreenViewD0Ev>:
 80067c8:	b510      	push	{r4, lr}
 80067ca:	4604      	mov	r4, r0
 80067cc:	f7ff fff2 	bl	80067b4 <_ZN19EasyReadyScreenViewD1Ev>
 80067d0:	4620      	mov	r0, r4
 80067d2:	f241 51bc 	movw	r1, #5564	@ 0x15bc
 80067d6:	f020 fbfd 	bl	8026fd4 <_ZdlPvj>
 80067da:	4620      	mov	r0, r4
 80067dc:	bd10      	pop	{r4, pc}

080067de <_ZN19EasyReadyScreenView15handleTickEventEv>:
void EasyReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 80067de:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 80067e2:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 80067e4:	f8d2 15b8 	ldr.w	r1, [r2, #1464]	@ 0x5b8
 80067e8:	2900      	cmp	r1, #0
 80067ea:	dd07      	ble.n	80067fc <_ZN19EasyReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 80067ec:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 80067ee:	3901      	subs	r1, #1

	    }else{
	    	application().gotoEasyScreenScreenNoTransition();
	    }

}
 80067f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 80067f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 80067f6:	f8c2 15b8 	str.w	r1, [r2, #1464]	@ 0x5b8
	        updateCounter(tickCounter);
 80067fa:	4718      	bx	r3
 80067fc:	f00d ff12 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoEasyScreenScreenNoTransition();
 8006804:	f7fc bf70 	b.w	80036e8 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>

08006808 <_ZN19EasyReadyScreenViewC1Ev>:
EasyReadyScreenView::EasyReadyScreenView()
 8006808:	b510      	push	{r4, lr}
 800680a:	4604      	mov	r4, r0
 800680c:	f7fb ffd6 	bl	80027bc <_ZN23EasyReadyScreenViewBaseC1Ev>
 8006810:	4b04      	ldr	r3, [pc, #16]	@ (8006824 <_ZN19EasyReadyScreenViewC1Ev+0x1c>)
 8006812:	6023      	str	r3, [r4, #0]
 8006814:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8006818:	22b4      	movs	r2, #180	@ 0xb4
 800681a:	f8c3 25b8 	str.w	r2, [r3, #1464]	@ 0x5b8
}
 800681e:	4620      	mov	r0, r4
 8006820:	bd10      	pop	{r4, pc}
 8006822:	bf00      	nop
 8006824:	0802aad0 	.word	0x0802aad0

08006828 <_ZN19EasyReadyScreenView11setupScreenEv>:
{
 8006828:	b510      	push	{r4, lr}
 800682a:	4604      	mov	r4, r0
    EasyReadyScreenViewBase::setupScreen();
 800682c:	f7fb fed8 	bl	80025e0 <_ZN23EasyReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 8006830:	6823      	ldr	r3, [r4, #0]
 8006832:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 8006836:	4620      	mov	r0, r4
 8006838:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800683a:	f8d2 15b8 	ldr.w	r1, [r2, #1464]	@ 0x5b8
}
 800683e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 8006842:	4718      	bx	r3

08006844 <_ZN19EasyReadyScreenView13updateCounterEi>:
void EasyReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 8006844:	2978      	cmp	r1, #120	@ 0x78
{
 8006846:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006848:	4605      	mov	r5, r0
	    if (value > 120)
 800684a:	dc23      	bgt.n	8006894 <_ZN19EasyReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 800684c:	293c      	cmp	r1, #60	@ 0x3c
 800684e:	dc23      	bgt.n	8006898 <_ZN19EasyReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 8006850:	2900      	cmp	r1, #0
 8006852:	bfd4      	ite	le
 8006854:	2400      	movle	r4, #0
 8006856:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8006858:	f505 7733 	add.w	r7, r5, #716	@ 0x2cc
 800685c:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 800685e:	f505 7638 	add.w	r6, r5, #736	@ 0x2e0
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8006862:	4a0e      	ldr	r2, [pc, #56]	@ (800689c <_ZN19EasyReadyScreenView13updateCounterEi+0x58>)
 8006864:	210a      	movs	r1, #10
 8006866:	4638      	mov	r0, r7
 8006868:	f011 fab2 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 800686c:	4623      	mov	r3, r4
 800686e:	4a0b      	ldr	r2, [pc, #44]	@ (800689c <_ZN19EasyReadyScreenView13updateCounterEi+0x58>)
 8006870:	210a      	movs	r1, #10
 8006872:	4630      	mov	r0, r6
 8006874:	f011 faac 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 8006878:	f505 700d 	add.w	r0, r5, #564	@ 0x234
 800687c:	f8c5 727c 	str.w	r7, [r5, #636]	@ 0x27c
 8006880:	f8c5 62c8 	str.w	r6, [r5, #712]	@ 0x2c8
 8006884:	f00e ff6c 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 8006888:	f505 7020 	add.w	r0, r5, #640	@ 0x280
}
 800688c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 8006890:	f00e bf66 	b.w	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 8006894:	2403      	movs	r4, #3
 8006896:	e7df      	b.n	8006858 <_ZN19EasyReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 8006898:	2402      	movs	r4, #2
 800689a:	e7dd      	b.n	8006858 <_ZN19EasyReadyScreenView13updateCounterEi+0x14>
 800689c:	0802a143 	.word	0x0802a143

080068a0 <_ZN19EasyScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~EasyScreenPresenter() {}
 80068a0:	4770      	bx	lr

080068a2 <_ZThn4_N19EasyScreenPresenterD1Ev>:
 80068a2:	3804      	subs	r0, #4
 80068a4:	4770      	bx	lr

080068a6 <_ZN19EasyScreenPresenter10deactivateEv>:
}

void EasyScreenPresenter::deactivate()
{

}
 80068a6:	4770      	bx	lr

080068a8 <_ZN19EasyScreenPresenterD0Ev>:
 80068a8:	b510      	push	{r4, lr}
 80068aa:	2110      	movs	r1, #16
 80068ac:	4604      	mov	r4, r0
 80068ae:	f020 fb91 	bl	8026fd4 <_ZdlPvj>
 80068b2:	4620      	mov	r0, r4
 80068b4:	bd10      	pop	{r4, pc}

080068b6 <_ZThn4_N19EasyScreenPresenterD0Ev>:
 80068b6:	f1a0 0004 	sub.w	r0, r0, #4
 80068ba:	e7f5      	b.n	80068a8 <_ZN19EasyScreenPresenterD0Ev>

080068bc <_ZN19EasyScreenPresenter8activateEv>:
	model->resetGame();
 80068bc:	6880      	ldr	r0, [r0, #8]
 80068be:	f001 bf1b 	b.w	80086f8 <_ZN5Model9resetGameEv>
	...

080068c4 <_ZN19EasyScreenPresenterC1ER14EasyScreenView>:
 80068c4:	2200      	movs	r2, #0
 80068c6:	6082      	str	r2, [r0, #8]
    : view(v)
 80068c8:	4a02      	ldr	r2, [pc, #8]	@ (80068d4 <_ZN19EasyScreenPresenterC1ER14EasyScreenView+0x10>)
 80068ca:	6002      	str	r2, [r0, #0]
 80068cc:	3218      	adds	r2, #24
 80068ce:	6042      	str	r2, [r0, #4]
 80068d0:	60c1      	str	r1, [r0, #12]
}
 80068d2:	4770      	bx	lr
 80068d4:	0802ab08 	.word	0x0802ab08

080068d8 <_ZN19EasyScreenPresenter13goToEndScreenEi>:
void  EasyScreenPresenter::handleTickEvent()
{

}
void EasyScreenPresenter::goToEndScreen(int winner)
{
 80068d8:	b508      	push	{r3, lr}
    // Gửi thông tin người chiến thắng đến Model
    model->setWinner(winner);
 80068da:	6880      	ldr	r0, [r0, #8]
 80068dc:	f001 fef8 	bl	80086d0 <_ZN5Model9setWinnerEi>
    // Yêu cầu chuyển đến EndScreen
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 80068e0:	f00d fea0 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
}
 80068e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 80068e8:	f7fc bf1e 	b.w	8003728 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

080068ec <_ZN14EasyScreenView14tearDownScreenEv>:
}

void EasyScreenView::tearDownScreen()
{
    EasyScreenViewBase::tearDownScreen();
}
 80068ec:	4770      	bx	lr
	...

080068f0 <_ZN14EasyScreenViewD1Ev>:

class EasyScreenView : public EasyScreenViewBase
{
public:
    EasyScreenView();
    virtual ~EasyScreenView() {}
 80068f0:	b510      	push	{r4, lr}
 80068f2:	4b03      	ldr	r3, [pc, #12]	@ (8006900 <_ZN14EasyScreenViewD1Ev+0x10>)
 80068f4:	6003      	str	r3, [r0, #0]
 80068f6:	4604      	mov	r4, r0
 80068f8:	f7fc f9ac 	bl	8002c54 <_ZN18EasyScreenViewBaseD1Ev>
 80068fc:	4620      	mov	r0, r4
 80068fe:	bd10      	pop	{r4, pc}
 8006900:	0802ab48 	.word	0x0802ab48

08006904 <_ZN14EasyScreenViewD0Ev>:
 8006904:	b510      	push	{r4, lr}
 8006906:	4604      	mov	r4, r0
 8006908:	f7ff fff2 	bl	80068f0 <_ZN14EasyScreenViewD1Ev>
 800690c:	4620      	mov	r0, r4
 800690e:	f241 51e4 	movw	r1, #5604	@ 0x15e4
 8006912:	f020 fb5f 	bl	8026fd4 <_ZdlPvj>
 8006916:	4620      	mov	r0, r4
 8006918:	bd10      	pop	{r4, pc}
	...

0800691c <_ZN14EasyScreenViewC1Ev>:
EasyScreenView::EasyScreenView(): ballX(160), ballY(120), ballVelX(1), ballVelY(1),
 800691c:	b510      	push	{r4, lr}
 800691e:	4604      	mov	r4, r0
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false)
 8006920:	f7fc f9b2 	bl	8002c88 <_ZN18EasyScreenViewBaseC1Ev>
 8006924:	4b13      	ldr	r3, [pc, #76]	@ (8006974 <_ZN14EasyScreenViewC1Ev+0x58>)
 8006926:	6023      	str	r3, [r4, #0]
EasyScreenView::EasyScreenView(): ballX(160), ballY(120), ballVelX(1), ballVelY(1),
 8006928:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800692c:	f203 52b4 	addw	r2, r3, #1460	@ 0x5b4
 8006930:	4911      	ldr	r1, [pc, #68]	@ (8006978 <_ZN14EasyScreenViewC1Ev+0x5c>)
 8006932:	6011      	str	r1, [r2, #0]
 8006934:	f503 62b7 	add.w	r2, r3, #1464	@ 0x5b8
 8006938:	4910      	ldr	r1, [pc, #64]	@ (800697c <_ZN14EasyScreenViewC1Ev+0x60>)
 800693a:	6011      	str	r1, [r2, #0]
 800693c:	f203 51bc 	addw	r1, r3, #1468	@ 0x5bc
 8006940:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8006944:	600a      	str	r2, [r1, #0]
 8006946:	f504 51ae 	add.w	r1, r4, #5568	@ 0x15c0
}
 800694a:	4620      	mov	r0, r4
EasyScreenView::EasyScreenView(): ballX(160), ballY(120), ballVelX(1), ballVelY(1),
 800694c:	600a      	str	r2, [r1, #0]
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 800694e:	2200      	movs	r2, #0
 8006950:	f883 25c4 	strb.w	r2, [r3, #1476]	@ 0x5c4
 8006954:	f8c3 25c8 	str.w	r2, [r3, #1480]	@ 0x5c8
 8006958:	f8c3 25cc 	str.w	r2, [r3, #1484]	@ 0x5cc
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false)
 800695c:	f8c3 25d0 	str.w	r2, [r3, #1488]	@ 0x5d0
 8006960:	f8c3 25d4 	str.w	r2, [r3, #1492]	@ 0x5d4
 8006964:	f883 25d8 	strb.w	r2, [r3, #1496]	@ 0x5d8
 8006968:	f8c3 25dc 	str.w	r2, [r3, #1500]	@ 0x5dc
 800696c:	f883 25e0 	strb.w	r2, [r3, #1504]	@ 0x5e0
}
 8006970:	bd10      	pop	{r4, pc}
 8006972:	bf00      	nop
 8006974:	0802ab48 	.word	0x0802ab48
 8006978:	43200000 	.word	0x43200000
 800697c:	42f00000 	.word	0x42f00000

08006980 <_ZN14EasyScreenView11setupScreenEv>:
{
 8006980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006984:	4605      	mov	r5, r0
    score1 = 0;
 8006986:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
	ballX = 160;
 800698a:	f204 57b4 	addw	r7, r4, #1460	@ 0x5b4
    EasyScreenViewBase::setupScreen();
 800698e:	f7fc f95f 	bl	8002c50 <_ZN18EasyScreenViewBase11setupScreenEv>
	ballY = 120;
 8006992:	f504 68b7 	add.w	r8, r4, #1464	@ 0x5b8
    score1 = 0;
 8006996:	2300      	movs	r3, #0
	ballX = 160;
 8006998:	4a28      	ldr	r2, [pc, #160]	@ (8006a3c <_ZN14EasyScreenView11setupScreenEv+0xbc>)
    score1 = 0;
 800699a:	f8c4 35d0 	str.w	r3, [r4, #1488]	@ 0x5d0
	score2 = 0;
 800699e:	f8c4 35d4 	str.w	r3, [r4, #1492]	@ 0x5d4
	gameOver = false;
 80069a2:	f884 35d8 	strb.w	r3, [r4, #1496]	@ 0x5d8
	ballVelX = 1;
 80069a6:	f204 51bc 	addw	r1, r4, #1468	@ 0x5bc
	ballX = 160;
 80069aa:	603a      	str	r2, [r7, #0]
	ballY = 120;
 80069ac:	4a24      	ldr	r2, [pc, #144]	@ (8006a40 <_ZN14EasyScreenView11setupScreenEv+0xc0>)
 80069ae:	f8c8 2000 	str.w	r2, [r8]
	ballVelX = 1;
 80069b2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80069b6:	600a      	str	r2, [r1, #0]
	ballVelY = 1;
 80069b8:	f505 51ae 	add.w	r1, r5, #5568	@ 0x15c0
	ball.invalidate();
 80069bc:	f505 761c 	add.w	r6, r5, #624	@ 0x270
	ballVelY = 1;
 80069c0:	600a      	str	r2, [r1, #0]
	ball.invalidate();
 80069c2:	4630      	mov	r0, r6
	waitingForServe = false;
 80069c4:	f884 35c4 	strb.w	r3, [r4, #1476]	@ 0x5c4
	serveDelayTicks = 0;
 80069c8:	f8c4 35c8 	str.w	r3, [r4, #1480]	@ 0x5c8
	servingPlayer = 0;
 80069cc:	f8c4 35cc 	str.w	r3, [r4, #1484]	@ 0x5cc
    buzzerBeepCounter = 0;
 80069d0:	f8c4 35dc 	str.w	r3, [r4, #1500]	@ 0x5dc
    buzzerBeepState = false;
 80069d4:	f884 35e0 	strb.w	r3, [r4, #1504]	@ 0x5e0
	ball.invalidate();
 80069d8:	f00a fb46 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.moveTo(ballX, ballY);
 80069dc:	ed98 7a00 	vldr	s14, [r8]
 80069e0:	edd7 7a00 	vldr	s15, [r7]
 80069e4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80069e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80069ec:	ee17 3a10 	vmov	r3, s14
 80069f0:	b21a      	sxth	r2, r3
 80069f2:	ee17 3a90 	vmov	r3, s15
 80069f6:	4630      	mov	r0, r6
 80069f8:	b219      	sxth	r1, r3
 80069fa:	f7fa fc88 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
	ball.invalidate();
 80069fe:	4630      	mov	r0, r6
	Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 8006a00:	4e10      	ldr	r6, [pc, #64]	@ (8006a44 <_ZN14EasyScreenView11setupScreenEv+0xc4>)
	ball.invalidate();
 8006a02:	f00a fb31 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 8006a06:	f8d4 35d0 	ldr.w	r3, [r4, #1488]	@ 0x5d0
 8006a0a:	4632      	mov	r2, r6
 8006a0c:	210a      	movs	r1, #10
 8006a0e:	f505 7038 	add.w	r0, r5, #736	@ 0x2e0
 8006a12:	f011 f9dd 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	EasyScreenViewBase::score1.invalidate();
 8006a16:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8006a1a:	f00e fea1 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8006a1e:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	@ 0x5d4
 8006a22:	4632      	mov	r2, r6
 8006a24:	f505 7033 	add.w	r0, r5, #716	@ 0x2cc
 8006a28:	210a      	movs	r1, #10
 8006a2a:	f011 f9d1 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	EasyScreenViewBase::score2.invalidate();
 8006a2e:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 8006a32:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	EasyScreenViewBase::score2.invalidate();
 8006a36:	f00e be93 	b.w	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
 8006a3a:	bf00      	nop
 8006a3c:	43200000 	.word	0x43200000
 8006a40:	42f00000 	.word	0x42f00000
 8006a44:	0802a143 	.word	0x0802a143

08006a48 <_ZN14EasyScreenView15handleTickEventEv>:

void EasyScreenView::handleTickEvent()
{
 8006a48:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}

    if (gameOver) {
 8006a4c:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 8006a50:	4604      	mov	r4, r0
    if (gameOver) {
 8006a52:	f895 35d8 	ldrb.w	r3, [r5, #1496]	@ 0x5d8
 8006a56:	2b00      	cmp	r3, #0
 8006a58:	f040 819c 	bne.w	8006d94 <_ZN14EasyScreenView15handleTickEventEv+0x34c>
        return; // Không xử lý nếu trò chơi kết thúc
    }
    // Xử lý bíp buzzer
    if (buzzerBeepCounter > 0) {
 8006a5c:	f8d5 35dc 	ldr.w	r3, [r5, #1500]	@ 0x5dc
 8006a60:	2b00      	cmp	r3, #0
 8006a62:	dd1b      	ble.n	8006a9c <_ZN14EasyScreenView15handleTickEventEv+0x54>
        if (buzzerBeepCounter % 6 == 0) { // Bíp mỗi 100ms (6 ticks tại 60 FPS)
 8006a64:	2206      	movs	r2, #6
 8006a66:	fb93 f1f2 	sdiv	r1, r3, r2
 8006a6a:	fb02 3311 	mls	r3, r2, r1, r3
 8006a6e:	b953      	cbnz	r3, 8006a86 <_ZN14EasyScreenView15handleTickEventEv+0x3e>
            buzzerBeepState = !buzzerBeepState;
 8006a70:	f895 25e0 	ldrb.w	r2, [r5, #1504]	@ 0x5e0
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 8006a74:	48da      	ldr	r0, [pc, #872]	@ (8006de0 <_ZN14EasyScreenView15handleTickEventEv+0x398>)
            buzzerBeepState = !buzzerBeepState;
 8006a76:	f082 0201 	eor.w	r2, r2, #1
 8006a7a:	f885 25e0 	strb.w	r2, [r5, #1504]	@ 0x5e0
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 8006a7e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8006a82:	f002 fde3 	bl	800964c <HAL_GPIO_WritePin>
        }
        buzzerBeepCounter--;
 8006a86:	f8d5 25dc 	ldr.w	r2, [r5, #1500]	@ 0x5dc
 8006a8a:	3a01      	subs	r2, #1
 8006a8c:	f8c5 25dc 	str.w	r2, [r5, #1500]	@ 0x5dc
        if (buzzerBeepCounter == 0) {
 8006a90:	b922      	cbnz	r2, 8006a9c <_ZN14EasyScreenView15handleTickEventEv+0x54>
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET); // Tắt buzzer sau khi bíp xong
 8006a92:	48d3      	ldr	r0, [pc, #844]	@ (8006de0 <_ZN14EasyScreenView15handleTickEventEv+0x398>)
 8006a94:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8006a98:	f002 fdd8 	bl	800964c <HAL_GPIO_WritePin>
        }
    }

    JoystickCommand_t command;
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8006a9c:	4fd1      	ldr	r7, [pc, #836]	@ (8006de4 <_ZN14EasyScreenView15handleTickEventEv+0x39c>)
 8006a9e:	e022      	b.n	8006ae6 <_ZN14EasyScreenView15handleTickEventEv+0x9e>
        switch (command) {
 8006aa0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006aa4:	2b05      	cmp	r3, #5
 8006aa6:	d81e      	bhi.n	8006ae6 <_ZN14EasyScreenView15handleTickEventEv+0x9e>
 8006aa8:	e8df f013 	tbh	[pc, r3, lsl #1]
 8006aac:	01770006 	.word	0x01770006
 8006ab0:	0192017f 	.word	0x0192017f
 8006ab4:	01db01a4 	.word	0x01db01a4
        return rect.y;
 8006ab8:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
            case JOY1_LEFT:
				{
					int16_t newY=paddle1.getY()+2;
 8006abc:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 8006abe:	b236      	sxth	r6, r6
 8006ac0:	2ec6      	cmp	r6, #198	@ 0xc6
 8006ac2:	bfa8      	it	ge
 8006ac4:	26c6      	movge	r6, #198	@ 0xc6
				{
					int16_t newY = paddle1.getY() - 2;
					if (newY < 2) {
						newY = 2; // Dừng tại cạnh trên
					}
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8006ac6:	42b3      	cmp	r3, r6
 8006ac8:	d00d      	beq.n	8006ae6 <_ZN14EasyScreenView15handleTickEventEv+0x9e>
						paddle1.invalidate();
 8006aca:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 8006ace:	4640      	mov	r0, r8
 8006ad0:	f00e fe46 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle1.moveTo(paddle1.getX(), newY);
 8006ad4:	f9b4 10f4 	ldrsh.w	r1, [r4, #244]	@ 0xf4
 8006ad8:	4632      	mov	r2, r6
					if (newY >198) {
						newY = 198; // Dừng tại cạnh dưới
					}
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
						paddle2.invalidate();
						paddle2.moveTo(paddle2.getX(), newY);
 8006ada:	4640      	mov	r0, r8
 8006adc:	f7fa fc17 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
						paddle2.invalidate();
 8006ae0:	4640      	mov	r0, r8
 8006ae2:	f00e fe3d 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8006ae6:	2300      	movs	r3, #0
 8006ae8:	6838      	ldr	r0, [r7, #0]
 8006aea:	461a      	mov	r2, r3
 8006aec:	f10d 0107 	add.w	r1, sp, #7
 8006af0:	f005 f919 	bl	800bd26 <osMessageQueueGet>
 8006af4:	2800      	cmp	r0, #0
 8006af6:	d0d3      	beq.n	8006aa0 <_ZN14EasyScreenView15handleTickEventEv+0x58>
				break;
        }
    }

    // Cập nhật bóng nếu không chờ phát
        if (!waitingForServe) {
 8006af8:	f895 35c4 	ldrb.w	r3, [r5, #1476]	@ 0x5c4
 8006afc:	f504 761c 	add.w	r6, r4, #624	@ 0x270
 8006b00:	2b00      	cmp	r3, #0
 8006b02:	f040 824d 	bne.w	8006fa0 <_ZN14EasyScreenView15handleTickEventEv+0x558>
            ball.invalidate();
 8006b06:	4630      	mov	r0, r6
 8006b08:	f00a faae 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ballX += ballVelX;
 8006b0c:	f205 53bc 	addw	r3, r5, #1468	@ 0x5bc
 8006b10:	ed93 6a00 	vldr	s12, [r3]
 8006b14:	f205 53b4 	addw	r3, r5, #1460	@ 0x5b4
 8006b18:	edd3 6a00 	vldr	s13, [r3]
 8006b1c:	ee76 6a26 	vadd.f32	s13, s12, s13
            ballY += ballVelY;
 8006b20:	f505 62b7 	add.w	r2, r5, #1464	@ 0x5b8
            ballX += ballVelX;
 8006b24:	edc3 6a00 	vstr	s13, [r3]
            ballY += ballVelY;
 8006b28:	f504 51ae 	add.w	r1, r4, #5568	@ 0x15c0
 8006b2c:	edd1 7a00 	vldr	s15, [r1]
 8006b30:	ed92 7a00 	vldr	s14, [r2]
 8006b34:	ee37 7a87 	vadd.f32	s14, s15, s14

            // Xử lý va chạm với cạnh trên/dưới
            if (ballY < 0) {
 8006b38:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8006b3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            ballY += ballVelY;
 8006b40:	ed82 7a00 	vstr	s14, [r2]
            if (ballY < 0) {
 8006b44:	f140 81c1 	bpl.w	8006eca <_ZN14EasyScreenView15handleTickEventEv+0x482>
                ballY = 0;
 8006b48:	2300      	movs	r3, #0
 8006b4a:	6013      	str	r3, [r2, #0]
                ballVelY = -ballVelY;
            } else if (ballY + ball.getHeight() > 240) {
                ballY = 240 - ball.getHeight();
                ballVelY = -ballVelY;
 8006b4c:	eef1 7a67 	vneg.f32	s15, s15
 8006b50:	edc1 7a00 	vstr	s15, [r1]
        return rect.x;
 8006b54:	f9b4 20f4 	ldrsh.w	r2, [r4, #244]	@ 0xf4
            }

            // Xử lý va chạm với paddle1 (bên trái)
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8006b58:	f9b4 30f8 	ldrsh.w	r3, [r4, #248]	@ 0xf8
 8006b5c:	4413      	add	r3, r2
 8006b5e:	ee07 3a90 	vmov	s15, r3
 8006b62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballX >= paddle1.getX() &&
                ballY + ball.getHeight() >= paddle1.getY() &&
 8006b66:	eef4 6ae7 	vcmpe.f32	s13, s15
 8006b6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b6e:	d835      	bhi.n	8006bdc <_ZN14EasyScreenView15handleTickEventEv+0x194>
                ballX >= paddle1.getX() &&
 8006b70:	ee07 2a10 	vmov	s14, r2
 8006b74:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8006b78:	eef4 6ac7 	vcmpe.f32	s13, s14
 8006b7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b80:	db2c      	blt.n	8006bdc <_ZN14EasyScreenView15handleTickEventEv+0x194>
                ballY + ball.getHeight() >= paddle1.getY() &&
 8006b82:	f505 63b7 	add.w	r3, r5, #1464	@ 0x5b8
 8006b86:	edd3 6a00 	vldr	s13, [r3]
 8006b8a:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
        return rect.y;
 8006b8e:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 8006b92:	ee07 3a10 	vmov	s14, r3
 8006b96:	ee05 2a90 	vmov	s11, r2
 8006b9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8006b9e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8006ba2:	ee37 7a26 	vadd.f32	s14, s14, s13
                ballX >= paddle1.getX() &&
 8006ba6:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8006baa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006bae:	db15      	blt.n	8006bdc <_ZN14EasyScreenView15handleTickEventEv+0x194>
                ballY <= paddle1.getY() + paddle1.getHeight()) {
 8006bb0:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8006bb4:	4413      	add	r3, r2
 8006bb6:	ee07 3a10 	vmov	s14, r3
 8006bba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle1.getY() &&
 8006bbe:	eef4 6ac7 	vcmpe.f32	s13, s14
 8006bc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006bc6:	d809      	bhi.n	8006bdc <_ZN14EasyScreenView15handleTickEventEv+0x194>
                ballX = paddle1.getX() + paddle1.getWidth();
 8006bc8:	f205 53b4 	addw	r3, r5, #1460	@ 0x5b4
 8006bcc:	edc3 7a00 	vstr	s15, [r3]
                ballVelX = -ballVelX;
 8006bd0:	eeb1 6a46 	vneg.f32	s12, s12
 8006bd4:	f205 53bc 	addw	r3, r5, #1468	@ 0x5bc
 8006bd8:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 8006bdc:	f9b4 0278 	ldrsh.w	r0, [r4, #632]	@ 0x278
        return rect.x;
 8006be0:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
            }

            // Xử lý va chạm với paddle2 (bên phải)
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8006be4:	ee07 0a90 	vmov	s15, r0
 8006be8:	f205 51b4 	addw	r1, r5, #1460	@ 0x5b4
 8006bec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006bf0:	edd1 6a00 	vldr	s13, [r1]
 8006bf4:	ee07 3a90 	vmov	s15, r3
 8006bf8:	ee77 6a26 	vadd.f32	s13, s14, s13
 8006bfc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
                ballY + ball.getHeight() >= paddle2.getY() &&
 8006c00:	eef4 6ae7 	vcmpe.f32	s13, s15
 8006c04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c08:	db3d      	blt.n	8006c86 <_ZN14EasyScreenView15handleTickEventEv+0x23e>
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8006c0a:	f9b4 2124 	ldrsh.w	r2, [r4, #292]	@ 0x124
 8006c0e:	441a      	add	r2, r3
 8006c10:	ee07 2a90 	vmov	s15, r2
 8006c14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8006c18:	eef4 6ae7 	vcmpe.f32	s13, s15
 8006c1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c20:	d831      	bhi.n	8006c86 <_ZN14EasyScreenView15handleTickEventEv+0x23e>
                ballY + ball.getHeight() >= paddle2.getY() &&
 8006c22:	f505 62b7 	add.w	r2, r5, #1464	@ 0x5b8
 8006c26:	edd2 6a00 	vldr	s13, [r2]
 8006c2a:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
        return rect.y;
 8006c2e:	f9b4 7122 	ldrsh.w	r7, [r4, #290]	@ 0x122
 8006c32:	ee07 2a90 	vmov	s15, r2
 8006c36:	ee06 7a10 	vmov	s12, r7
 8006c3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006c3e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8006c42:	ee77 7aa6 	vadd.f32	s15, s15, s13
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8006c46:	eef4 7ac6 	vcmpe.f32	s15, s12
 8006c4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c4e:	db1a      	blt.n	8006c86 <_ZN14EasyScreenView15handleTickEventEv+0x23e>
                ballY <= paddle2.getY() + paddle2.getHeight()) {
 8006c50:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	@ 0x126
 8006c54:	443a      	add	r2, r7
 8006c56:	ee07 2a90 	vmov	s15, r2
 8006c5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballY + ball.getHeight() >= paddle2.getY() &&
 8006c5e:	eef4 6ae7 	vcmpe.f32	s13, s15
 8006c62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c66:	d80e      	bhi.n	8006c86 <_ZN14EasyScreenView15handleTickEventEv+0x23e>
                ballX = paddle2.getX() - ball.getWidth();
 8006c68:	1a1b      	subs	r3, r3, r0
 8006c6a:	ee07 3a90 	vmov	s15, r3
 8006c6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballVelX = -ballVelX;
 8006c72:	f205 53bc 	addw	r3, r5, #1468	@ 0x5bc
                ballX = paddle2.getX() - ball.getWidth();
 8006c76:	edc1 7a00 	vstr	s15, [r1]
                ballVelX = -ballVelX;
 8006c7a:	edd3 7a00 	vldr	s15, [r3]
 8006c7e:	eef1 7a67 	vneg.f32	s15, s15
 8006c82:	edc3 7a00 	vstr	s15, [r3]
            }

            // Xử lý ghi điểm
            if (ballX < 0) {
 8006c86:	f205 53b4 	addw	r3, r5, #1460	@ 0x5b4
 8006c8a:	edd3 7a00 	vldr	s15, [r3]
 8006c8e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006c92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c96:	f140 8131 	bpl.w	8006efc <_ZN14EasyScreenView15handleTickEventEv+0x4b4>
                // Người chơi 2 ghi điểm

            	score2++;
 8006c9a:	f8d5 35d4 	ldr.w	r3, [r5, #1492]	@ 0x5d4
            	Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8006c9e:	4a52      	ldr	r2, [pc, #328]	@ (8006de8 <_ZN14EasyScreenView15handleTickEventEv+0x3a0>)
            	score2++;
 8006ca0:	3301      	adds	r3, #1
 8006ca2:	f8c5 35d4 	str.w	r3, [r5, #1492]	@ 0x5d4
            	Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8006ca6:	210a      	movs	r1, #10
 8006ca8:	f504 7033 	add.w	r0, r4, #716	@ 0x2cc
 8006cac:	f011 f890 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
            	EasyScreenViewBase::score2.invalidate();
 8006cb0:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 8006cb4:	f00e fd54 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
            	buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
				buzzerBeepState = true;
 8006cb8:	2701      	movs	r7, #1
            	buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8006cba:	2312      	movs	r3, #18
 8006cbc:	f8c5 35dc 	str.w	r3, [r5, #1500]	@ 0x5dc
				HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8006cc0:	4847      	ldr	r0, [pc, #284]	@ (8006de0 <_ZN14EasyScreenView15handleTickEventEv+0x398>)
				buzzerBeepState = true;
 8006cc2:	f885 75e0 	strb.w	r7, [r5, #1504]	@ 0x5e0
				HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8006cc6:	463a      	mov	r2, r7
 8006cc8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8006ccc:	f002 fcbe 	bl	800964c <HAL_GPIO_WritePin>
				if (score2 >= 11) {
 8006cd0:	f8d5 35d4 	ldr.w	r3, [r5, #1492]	@ 0x5d4
 8006cd4:	2b0a      	cmp	r3, #10
 8006cd6:	dd05      	ble.n	8006ce4 <_ZN14EasyScreenView15handleTickEventEv+0x29c>
					gameOver = true;
					presenter->goToEndScreen(2);
 8006cd8:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
					gameOver = true;
 8006cda:	f885 75d8 	strb.w	r7, [r5, #1496]	@ 0x5d8
					presenter->goToEndScreen(2);
 8006cde:	2102      	movs	r1, #2
 8006ce0:	f7ff fdfa 	bl	80068d8 <_ZN19EasyScreenPresenter13goToEndScreenEi>
        visible = vis;
 8006ce4:	2300      	movs	r3, #0
 8006ce6:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295

				}
                ball.setVisible(false);
                ball.invalidate();
 8006cea:	4630      	mov	r0, r6
 8006cec:	f00a f9bc 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                waitingForServe = true;
 8006cf0:	2301      	movs	r3, #1
 8006cf2:	f885 35c4 	strb.w	r3, [r5, #1476]	@ 0x5c4
                serveDelayTicks = 60; // 1 giây với 60 FPS
 8006cf6:	233c      	movs	r3, #60	@ 0x3c
 8006cf8:	f8c5 35c8 	str.w	r3, [r5, #1480]	@ 0x5c8
                servingPlayer = 2; // Người chơi 2 phát bóng
 8006cfc:	2302      	movs	r3, #2
                ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8006cfe:	f9b4 2278 	ldrsh.w	r2, [r4, #632]	@ 0x278
                servingPlayer = 2; // Người chơi 2 phát bóng
 8006d02:	f8c5 35cc 	str.w	r3, [r5, #1484]	@ 0x5cc
                ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8006d06:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 8006d0a:	1a9b      	subs	r3, r3, r2
 8006d0c:	3b0a      	subs	r3, #10
 8006d0e:	ee07 3a90 	vmov	s15, r3
 8006d12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006d16:	f205 53b4 	addw	r3, r5, #1460	@ 0x5b4
 8006d1a:	edc3 7a00 	vstr	s15, [r3]
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8006d1e:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8006d22:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006d26:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
                ball.invalidate();
                waitingForServe = true;
                serveDelayTicks = 60; // 1 giây với 60 FPS
                servingPlayer = 1; // Người chơi 1 phát bóng
                ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8006d2a:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8006d2e:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
 8006d32:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8006d36:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8006d3a:	ee07 3a10 	vmov	s14, r3
 8006d3e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8006d42:	f505 63b7 	add.w	r3, r5, #1464	@ 0x5b8
 8006d46:	ed83 7a00 	vstr	s14, [r3]
                ball.moveTo(ballX, ballY);
 8006d4a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8006d4e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006d52:	ee17 3a10 	vmov	r3, s14
 8006d56:	b21a      	sxth	r2, r3
 8006d58:	ee17 3a90 	vmov	r3, s15
 8006d5c:	4630      	mov	r0, r6
 8006d5e:	b219      	sxth	r1, r3
 8006d60:	f7fa fad5 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
            if (servingPlayer == 1) {
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
            } else if (servingPlayer == 2) {
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
            }
            ball.moveTo(ballX, ballY);
 8006d64:	f505 63b7 	add.w	r3, r5, #1464	@ 0x5b8
 8006d68:	ed93 7a00 	vldr	s14, [r3]
 8006d6c:	f205 55b4 	addw	r5, r5, #1460	@ 0x5b4
 8006d70:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8006d74:	edd5 7a00 	vldr	s15, [r5]
 8006d78:	ee17 3a10 	vmov	r3, s14
 8006d7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006d80:	b21a      	sxth	r2, r3
 8006d82:	ee17 3a90 	vmov	r3, s15
 8006d86:	4630      	mov	r0, r6
 8006d88:	b219      	sxth	r1, r3
 8006d8a:	f7fa fac0 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
            ball.invalidate();
 8006d8e:	4630      	mov	r0, r6
 8006d90:	f00a f96a 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        }
}
 8006d94:	b002      	add	sp, #8
 8006d96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return rect.y;
 8006d9a:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY = paddle1.getY() - 2;
 8006d9e:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8006da0:	b236      	sxth	r6, r6
 8006da2:	2e02      	cmp	r6, #2
 8006da4:	bfb8      	it	lt
 8006da6:	2602      	movlt	r6, #2
 8006da8:	e68d      	b.n	8006ac6 <_ZN14EasyScreenView15handleTickEventEv+0x7e>
 8006daa:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY=paddle2.getY()+2;
 8006dae:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 8006db0:	b236      	sxth	r6, r6
 8006db2:	2ec6      	cmp	r6, #198	@ 0xc6
 8006db4:	bfa8      	it	ge
 8006db6:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8006db8:	42b3      	cmp	r3, r6
 8006dba:	f43f ae94 	beq.w	8006ae6 <_ZN14EasyScreenView15handleTickEventEv+0x9e>
						paddle2.invalidate();
 8006dbe:	f504 788e 	add.w	r8, r4, #284	@ 0x11c
 8006dc2:	4640      	mov	r0, r8
 8006dc4:	f00e fccc 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle2.moveTo(paddle2.getX(), newY);
 8006dc8:	f9b4 1120 	ldrsh.w	r1, [r4, #288]	@ 0x120
 8006dcc:	4632      	mov	r2, r6
 8006dce:	e684      	b.n	8006ada <_ZN14EasyScreenView15handleTickEventEv+0x92>
 8006dd0:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY = paddle2.getY() - 2;
 8006dd4:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8006dd6:	b236      	sxth	r6, r6
 8006dd8:	2e02      	cmp	r6, #2
 8006dda:	bfb8      	it	lt
 8006ddc:	2602      	movlt	r6, #2
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8006dde:	e7eb      	b.n	8006db8 <_ZN14EasyScreenView15handleTickEventEv+0x370>
 8006de0:	40020c00 	.word	0x40020c00
 8006de4:	20002dc0 	.word	0x20002dc0
 8006de8:	0802a143 	.word	0x0802a143
 8006dec:	43700000 	.word	0x43700000
 8006df0:	43a00000 	.word	0x43a00000
				if (waitingForServe && servingPlayer == 1) {
 8006df4:	f895 35c4 	ldrb.w	r3, [r5, #1476]	@ 0x5c4
 8006df8:	2b00      	cmp	r3, #0
 8006dfa:	f43f ae74 	beq.w	8006ae6 <_ZN14EasyScreenView15handleTickEventEv+0x9e>
 8006dfe:	f8d5 15cc 	ldr.w	r1, [r5, #1484]	@ 0x5cc
 8006e02:	2901      	cmp	r1, #1
 8006e04:	f47f ae6f 	bne.w	8006ae6 <_ZN14EasyScreenView15handleTickEventEv+0x9e>
					waitingForServe = false;
 8006e08:	2300      	movs	r3, #0
 8006e0a:	f885 35c4 	strb.w	r3, [r5, #1476]	@ 0x5c4
					ballVelX = 1; // Phát bóng sang phải
 8006e0e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006e12:	f205 53bc 	addw	r3, r5, #1468	@ 0x5bc
 8006e16:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle1.getY() + paddle1.getHeight()/2 > ballY) ? -1 : 1;
 8006e1a:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8006e1e:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006e22:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8006e26:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8006e2a:	ee07 3a90 	vmov	s15, r3
 8006e2e:	f505 63b7 	add.w	r3, r5, #1464	@ 0x5b8
 8006e32:	edd3 6a00 	vldr	s13, [r3]
 8006e36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006e3a:	f504 53ae 	add.w	r3, r4, #5568	@ 0x15c0
 8006e3e:	eef4 7ae6 	vcmpe.f32	s15, s13
 8006e42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e46:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 8006e4a:	bfd8      	it	le
 8006e4c:	eef0 7a47 	vmovle.f32	s15, s14
 8006e50:	edc3 7a00 	vstr	s15, [r3]
        visible = vis;
 8006e54:	f884 1295 	strb.w	r1, [r4, #661]	@ 0x295
					ball.invalidate();
 8006e58:	f504 701c 	add.w	r0, r4, #624	@ 0x270
 8006e5c:	f00a f904 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8006e60:	e641      	b.n	8006ae6 <_ZN14EasyScreenView15handleTickEventEv+0x9e>
				if (waitingForServe && servingPlayer == 2) {
 8006e62:	f895 35c4 	ldrb.w	r3, [r5, #1476]	@ 0x5c4
 8006e66:	2b00      	cmp	r3, #0
 8006e68:	f43f ae3d 	beq.w	8006ae6 <_ZN14EasyScreenView15handleTickEventEv+0x9e>
 8006e6c:	f8d5 35cc 	ldr.w	r3, [r5, #1484]	@ 0x5cc
 8006e70:	2b02      	cmp	r3, #2
 8006e72:	f47f ae38 	bne.w	8006ae6 <_ZN14EasyScreenView15handleTickEventEv+0x9e>
					waitingForServe = false;
 8006e76:	2300      	movs	r3, #0
 8006e78:	f885 35c4 	strb.w	r3, [r5, #1476]	@ 0x5c4
					ballVelX = -1; // Phát bóng sang trái
 8006e7c:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8006e80:	f205 53bc 	addw	r3, r5, #1468	@ 0x5bc
 8006e84:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle2.getY() + paddle2.getHeight()/2 > ballY) ? -1 : 1;
 8006e88:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8006e8c:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006e90:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8006e94:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8006e98:	ee07 3a90 	vmov	s15, r3
 8006e9c:	f505 63b7 	add.w	r3, r5, #1464	@ 0x5b8
 8006ea0:	edd3 6a00 	vldr	s13, [r3]
 8006ea4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006ea8:	f504 53ae 	add.w	r3, r4, #5568	@ 0x15c0
 8006eac:	eef4 7ae6 	vcmpe.f32	s15, s13
 8006eb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006eb4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8006eb8:	bfd8      	it	le
 8006eba:	eeb0 7a67 	vmovle.f32	s14, s15
 8006ebe:	ed83 7a00 	vstr	s14, [r3]
 8006ec2:	2301      	movs	r3, #1
 8006ec4:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
 8006ec8:	e7c6      	b.n	8006e58 <_ZN14EasyScreenView15handleTickEventEv+0x410>
        return rect.height;
 8006eca:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
            } else if (ballY + ball.getHeight() > 240) {
 8006ece:	ee05 3a90 	vmov	s11, r3
 8006ed2:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8006ed6:	ee35 7a87 	vadd.f32	s14, s11, s14
 8006eda:	ed5f 5a3c 	vldr	s11, [pc, #-240]	@ 8006dec <_ZN14EasyScreenView15handleTickEventEv+0x3a4>
 8006ede:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8006ee2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006ee6:	f77f ae35 	ble.w	8006b54 <_ZN14EasyScreenView15handleTickEventEv+0x10c>
                ballY = 240 - ball.getHeight();
 8006eea:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 8006eee:	ee07 3a10 	vmov	s14, r3
 8006ef2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8006ef6:	ed82 7a00 	vstr	s14, [r2]
 8006efa:	e627      	b.n	8006b4c <_ZN14EasyScreenView15handleTickEventEv+0x104>
            } else if (ballX + ball.getWidth() > 320) {
 8006efc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006f00:	ed5f 7a45 	vldr	s15, [pc, #-276]	@ 8006df0 <_ZN14EasyScreenView15handleTickEventEv+0x3a8>
 8006f04:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8006f08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f0c:	f77f af2a 	ble.w	8006d64 <_ZN14EasyScreenView15handleTickEventEv+0x31c>
            	score1++;
 8006f10:	f8d5 35d0 	ldr.w	r3, [r5, #1488]	@ 0x5d0
            	Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 8006f14:	4a3d      	ldr	r2, [pc, #244]	@ (800700c <_ZN14EasyScreenView15handleTickEventEv+0x5c4>)
            	score1++;
 8006f16:	3301      	adds	r3, #1
 8006f18:	f8c5 35d0 	str.w	r3, [r5, #1488]	@ 0x5d0
            	Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 8006f1c:	210a      	movs	r1, #10
 8006f1e:	f504 7038 	add.w	r0, r4, #736	@ 0x2e0
 8006f22:	f010 ff55 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
            	EasyScreenViewBase::score1.invalidate();
 8006f26:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 8006f2a:	f00e fc19 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
                buzzerBeepState = true;
 8006f2e:	2701      	movs	r7, #1
                buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8006f30:	2312      	movs	r3, #18
 8006f32:	f8c5 35dc 	str.w	r3, [r5, #1500]	@ 0x5dc
                HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8006f36:	4836      	ldr	r0, [pc, #216]	@ (8007010 <_ZN14EasyScreenView15handleTickEventEv+0x5c8>)
                buzzerBeepState = true;
 8006f38:	f885 75e0 	strb.w	r7, [r5, #1504]	@ 0x5e0
                HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8006f3c:	463a      	mov	r2, r7
 8006f3e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8006f42:	f002 fb83 	bl	800964c <HAL_GPIO_WritePin>
				if (score1 >= 11) {
 8006f46:	f8d5 35d0 	ldr.w	r3, [r5, #1488]	@ 0x5d0
 8006f4a:	2b0a      	cmp	r3, #10
 8006f4c:	dd05      	ble.n	8006f5a <_ZN14EasyScreenView15handleTickEventEv+0x512>
					presenter->goToEndScreen(1);
 8006f4e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
					gameOver = true;
 8006f50:	f885 75d8 	strb.w	r7, [r5, #1496]	@ 0x5d8
					presenter->goToEndScreen(1);
 8006f54:	4639      	mov	r1, r7
 8006f56:	f7ff fcbf 	bl	80068d8 <_ZN19EasyScreenPresenter13goToEndScreenEi>
        visible = vis;
 8006f5a:	2300      	movs	r3, #0
 8006f5c:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
                ball.invalidate();
 8006f60:	4630      	mov	r0, r6
 8006f62:	f00a f881 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                waitingForServe = true;
 8006f66:	2301      	movs	r3, #1
                serveDelayTicks = 60; // 1 giây với 60 FPS
 8006f68:	223c      	movs	r2, #60	@ 0x3c
                waitingForServe = true;
 8006f6a:	f885 35c4 	strb.w	r3, [r5, #1476]	@ 0x5c4
                serveDelayTicks = 60; // 1 giây với 60 FPS
 8006f6e:	f8c5 25c8 	str.w	r2, [r5, #1480]	@ 0x5c8
                servingPlayer = 1; // Người chơi 1 phát bóng
 8006f72:	f8c5 35cc 	str.w	r3, [r5, #1484]	@ 0x5cc
                ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8006f76:	f9b4 20f8 	ldrsh.w	r2, [r4, #248]	@ 0xf8
 8006f7a:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 8006f7e:	4413      	add	r3, r2
 8006f80:	330a      	adds	r3, #10
 8006f82:	ee07 3a90 	vmov	s15, r3
 8006f86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006f8a:	f205 53b4 	addw	r3, r5, #1460	@ 0x5b4
 8006f8e:	edc3 7a00 	vstr	s15, [r3]
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8006f92:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8006f96:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006f9a:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8006f9e:	e6c4      	b.n	8006d2a <_ZN14EasyScreenView15handleTickEventEv+0x2e2>
            if (serveDelayTicks > 0) {
 8006fa0:	f8d5 35c8 	ldr.w	r3, [r5, #1480]	@ 0x5c8
 8006fa4:	2b00      	cmp	r3, #0
 8006fa6:	dd09      	ble.n	8006fbc <_ZN14EasyScreenView15handleTickEventEv+0x574>
                serveDelayTicks--;
 8006fa8:	3b01      	subs	r3, #1
 8006faa:	f8c5 35c8 	str.w	r3, [r5, #1480]	@ 0x5c8
                if (serveDelayTicks == 0) {
 8006fae:	b92b      	cbnz	r3, 8006fbc <_ZN14EasyScreenView15handleTickEventEv+0x574>
 8006fb0:	2301      	movs	r3, #1
 8006fb2:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
                    ball.invalidate();
 8006fb6:	4630      	mov	r0, r6
 8006fb8:	f00a f856 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            if (servingPlayer == 1) {
 8006fbc:	f8d5 35cc 	ldr.w	r3, [r5, #1484]	@ 0x5cc
 8006fc0:	2b01      	cmp	r3, #1
 8006fc2:	d116      	bne.n	8006ff2 <_ZN14EasyScreenView15handleTickEventEv+0x5aa>
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8006fc4:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8006fc8:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006fcc:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8006fd0:	f505 61b7 	add.w	r1, r5, #1464	@ 0x5b8
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8006fd4:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8006fd8:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
 8006fdc:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8006fe0:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8006fe4:	ee07 3a90 	vmov	s15, r3
 8006fe8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006fec:	edc1 7a00 	vstr	s15, [r1]
 8006ff0:	e6b8      	b.n	8006d64 <_ZN14EasyScreenView15handleTickEventEv+0x31c>
            } else if (servingPlayer == 2) {
 8006ff2:	2b02      	cmp	r3, #2
 8006ff4:	f47f aeb6 	bne.w	8006d64 <_ZN14EasyScreenView15handleTickEventEv+0x31c>
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8006ff8:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8006ffc:	f505 61b7 	add.w	r1, r5, #1464	@ 0x5b8
 8007000:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007004:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8007008:	e7e4      	b.n	8006fd4 <_ZN14EasyScreenView15handleTickEventEv+0x58c>
 800700a:	bf00      	nop
 800700c:	0802a143 	.word	0x0802a143
 8007010:	40020c00 	.word	0x40020c00

08007014 <_ZN18EndScreenPresenterD1Ev>:
    virtual void deactivate();
    int getWinner(int playerId);
    void handlePlayAgain();


    virtual ~EndScreenPresenter() {}
 8007014:	4770      	bx	lr

08007016 <_ZThn4_N18EndScreenPresenterD1Ev>:
 8007016:	3804      	subs	r0, #4
 8007018:	4770      	bx	lr

0800701a <_ZN18EndScreenPresenter8activateEv>:

}

void EndScreenPresenter::activate()
{
	view.updateWinner();
 800701a:	68c0      	ldr	r0, [r0, #12]
 800701c:	6803      	ldr	r3, [r0, #0]
 800701e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007020:	4718      	bx	r3

08007022 <_ZN18EndScreenPresenter10deactivateEv>:
}

void EndScreenPresenter::deactivate()
{

}
 8007022:	4770      	bx	lr

08007024 <_ZN18EndScreenPresenterD0Ev>:
 8007024:	b510      	push	{r4, lr}
 8007026:	2110      	movs	r1, #16
 8007028:	4604      	mov	r4, r0
 800702a:	f01f ffd3 	bl	8026fd4 <_ZdlPvj>
 800702e:	4620      	mov	r0, r4
 8007030:	bd10      	pop	{r4, pc}

08007032 <_ZThn4_N18EndScreenPresenterD0Ev>:
 8007032:	f1a0 0004 	sub.w	r0, r0, #4
 8007036:	e7f5      	b.n	8007024 <_ZN18EndScreenPresenterD0Ev>

08007038 <_ZN18EndScreenPresenterC1ER13EndScreenView>:
 8007038:	2200      	movs	r2, #0
 800703a:	6082      	str	r2, [r0, #8]
    : view(v)
 800703c:	4a02      	ldr	r2, [pc, #8]	@ (8007048 <_ZN18EndScreenPresenterC1ER13EndScreenView+0x10>)
 800703e:	6002      	str	r2, [r0, #0]
 8007040:	3218      	adds	r2, #24
 8007042:	6042      	str	r2, [r0, #4]
 8007044:	60c1      	str	r1, [r0, #12]
}
 8007046:	4770      	bx	lr
 8007048:	0802ab7c 	.word	0x0802ab7c

0800704c <_ZN18EndScreenPresenter9getWinnerEi>:
int EndScreenPresenter::getWinner(int playerId)
{
    return model->getWinner(playerId);
 800704c:	6880      	ldr	r0, [r0, #8]
 800704e:	f001 bb45 	b.w	80086dc <_ZN5Model9getWinnerEi>

08007052 <_ZN13EndScreenView14tearDownScreenEv>:


void EndScreenView::tearDownScreen()
{
    EndScreenViewBase::tearDownScreen();
}
 8007052:	4770      	bx	lr

08007054 <_ZN13EndScreenViewD1Ev>:

class EndScreenView : public EndScreenViewBase
{
public:
    EndScreenView();
    virtual ~EndScreenView() {}
 8007054:	b510      	push	{r4, lr}
 8007056:	4b03      	ldr	r3, [pc, #12]	@ (8007064 <_ZN13EndScreenViewD1Ev+0x10>)
 8007058:	6003      	str	r3, [r0, #0]
 800705a:	4604      	mov	r4, r0
 800705c:	f7fc f847 	bl	80030ee <_ZN17EndScreenViewBaseD1Ev>
 8007060:	4620      	mov	r0, r4
 8007062:	bd10      	pop	{r4, pc}
 8007064:	0802abbc 	.word	0x0802abbc

08007068 <_ZN13EndScreenViewD0Ev>:
 8007068:	b510      	push	{r4, lr}
 800706a:	4604      	mov	r4, r0
 800706c:	f7ff fff2 	bl	8007054 <_ZN13EndScreenViewD1Ev>
 8007070:	4620      	mov	r0, r4
 8007072:	f44f 71cc 	mov.w	r1, #408	@ 0x198
 8007076:	f01f ffad 	bl	8026fd4 <_ZdlPvj>
 800707a:	4620      	mov	r0, r4
 800707c:	bd10      	pop	{r4, pc}
	...

08007080 <_ZN13EndScreenViewC1Ev>:
EndScreenView::EndScreenView()
 8007080:	b510      	push	{r4, lr}
 8007082:	4604      	mov	r4, r0
 8007084:	f7fc f8ac 	bl	80031e0 <_ZN17EndScreenViewBaseC1Ev>
 8007088:	4b01      	ldr	r3, [pc, #4]	@ (8007090 <_ZN13EndScreenViewC1Ev+0x10>)
 800708a:	6023      	str	r3, [r4, #0]
}
 800708c:	4620      	mov	r0, r4
 800708e:	bd10      	pop	{r4, pc}
 8007090:	0802abbc 	.word	0x0802abbc

08007094 <_ZN13EndScreenView11setupScreenEv>:
    EndScreenViewBase::setupScreen();
 8007094:	f7fc b82c 	b.w	80030f0 <_ZN17EndScreenViewBase11setupScreenEv>

08007098 <_ZN13EndScreenView12updateWinnerEv>:

void EndScreenView::updateWinner()
{
 8007098:	b538      	push	{r3, r4, r5, lr}
    // Gán số vào playerwinBuffer
    int valueToDisplay = 0;
    if (presenter->getWinner(1)) {
 800709a:	2101      	movs	r1, #1
{
 800709c:	4604      	mov	r4, r0
    if (presenter->getWinner(1)) {
 800709e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80070a0:	f7ff ffd4 	bl	800704c <_ZN18EndScreenPresenter9getWinnerEi>
 80070a4:	bb00      	cbnz	r0, 80070e8 <_ZN13EndScreenView12updateWinnerEv+0x50>
        valueToDisplay = 1;
    } else if (presenter->getWinner(2)) {
 80070a6:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80070a8:	2102      	movs	r1, #2
 80070aa:	f7ff ffcf 	bl	800704c <_ZN18EndScreenPresenter9getWinnerEi>
 80070ae:	1e03      	subs	r3, r0, #0
 80070b0:	bf18      	it	ne
 80070b2:	2301      	movne	r3, #1
 80070b4:	005b      	lsls	r3, r3, #1
        valueToDisplay = 2;
    }
    Unicode::snprintf(playerwinBuffer, PLAYERWIN_SIZE, "%d", valueToDisplay);
 80070b6:	f504 75ba 	add.w	r5, r4, #372	@ 0x174
 80070ba:	4a0c      	ldr	r2, [pc, #48]	@ (80070ec <_ZN13EndScreenView12updateWinnerEv+0x54>)
 80070bc:	210a      	movs	r1, #10
 80070be:	4628      	mov	r0, r5
 80070c0:	f010 fe86 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    playerwinBuffer[PLAYERWIN_SIZE - 1] = 0; // Đảm bảo null terminator
 80070c4:	2300      	movs	r3, #0
 80070c6:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
    playerwin.setWildcard(playerwinBuffer); // Liên kết lại buffer
    playerwin.resizeToCurrentText(); // Điều chỉnh kích thước
 80070ca:	f104 05e0 	add.w	r5, r4, #224	@ 0xe0
    playerwinBuffer[PLAYERWIN_SIZE - 1] = 0; // Đảm bảo null terminator
 80070ce:	f8a4 3186 	strh.w	r3, [r4, #390]	@ 0x186
    playerwin.resizeToCurrentText(); // Điều chỉnh kích thước
 80070d2:	4628      	mov	r0, r5
 80070d4:	f00a fb6a 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80070d8:	2301      	movs	r3, #1
 80070da:	f884 3105 	strb.w	r3, [r4, #261]	@ 0x105
    playerwin.setVisible(true); // Đảm bảo hiển thị
    playerwin.invalidate(); // Yêu cầu vẽ lại
 80070de:	4628      	mov	r0, r5
}
 80070e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    playerwin.invalidate(); // Yêu cầu vẽ lại
 80070e4:	f00e bb3c 	b.w	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
        valueToDisplay = 1;
 80070e8:	2301      	movs	r3, #1
 80070ea:	e7e4      	b.n	80070b6 <_ZN13EndScreenView12updateWinnerEv+0x1e>
 80070ec:	0802a143 	.word	0x0802a143

080070f0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80070f0:	4770      	bx	lr

080070f2 <_ZN19FrontendApplicationD0Ev>:
 80070f2:	b510      	push	{r4, lr}
 80070f4:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80070f8:	4604      	mov	r4, r0
 80070fa:	f01f ff6b 	bl	8026fd4 <_ZdlPvj>
 80070fe:	4620      	mov	r0, r4
 8007100:	bd10      	pop	{r4, pc}

08007102 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8007102:	b510      	push	{r4, lr}
 8007104:	4604      	mov	r4, r0
    {
        model.tick();
 8007106:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 800710a:	f001 fadb 	bl	80086c4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800710e:	4620      	mov	r0, r4
    }
 8007110:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8007114:	f00d bb30 	b.w	8014778 <_ZN8touchgfx11Application15handleTickEventEv>

08007118 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8007118:	b510      	push	{r4, lr}
 800711a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800711c:	f7fc fa50 	bl	80035c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8007120:	4b01      	ldr	r3, [pc, #4]	@ (8007128 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8007122:	6023      	str	r3, [r4, #0]
{

}
 8007124:	4620      	mov	r0, r4
 8007126:	bd10      	pop	{r4, pc}
 8007128:	0802abf4 	.word	0x0802abf4

0800712c <_ZN24HardReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~HardReadyScreenPresenter() {}
 800712c:	4770      	bx	lr

0800712e <_ZThn4_N24HardReadyScreenPresenterD1Ev>:
 800712e:	3804      	subs	r0, #4
 8007130:	4770      	bx	lr

08007132 <_ZN24HardReadyScreenPresenter10deactivateEv>:
}

void HardReadyScreenPresenter::activate()
{

}
 8007132:	4770      	bx	lr

08007134 <_ZN24HardReadyScreenPresenterD0Ev>:
 8007134:	b510      	push	{r4, lr}
 8007136:	2110      	movs	r1, #16
 8007138:	4604      	mov	r4, r0
 800713a:	f01f ff4b 	bl	8026fd4 <_ZdlPvj>
 800713e:	4620      	mov	r0, r4
 8007140:	bd10      	pop	{r4, pc}

08007142 <_ZThn4_N24HardReadyScreenPresenterD0Ev>:
 8007142:	f1a0 0004 	sub.w	r0, r0, #4
 8007146:	e7f5      	b.n	8007134 <_ZN24HardReadyScreenPresenterD0Ev>

08007148 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView>:
 8007148:	2200      	movs	r2, #0
 800714a:	6082      	str	r2, [r0, #8]
    : view(v)
 800714c:	4a02      	ldr	r2, [pc, #8]	@ (8007158 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView+0x10>)
 800714e:	6002      	str	r2, [r0, #0]
 8007150:	3218      	adds	r2, #24
 8007152:	6042      	str	r2, [r0, #4]
 8007154:	60c1      	str	r1, [r0, #12]
}
 8007156:	4770      	bx	lr
 8007158:	0802ac48 	.word	0x0802ac48

0800715c <_ZN19HardReadyScreenView14tearDownScreenEv>:
}

void HardReadyScreenView::tearDownScreen()
{
    HardReadyScreenViewBase::tearDownScreen();
}
 800715c:	4770      	bx	lr
	...

08007160 <_ZN19HardReadyScreenViewD1Ev>:

class HardReadyScreenView : public HardReadyScreenViewBase
{
public:
    HardReadyScreenView();
    virtual ~HardReadyScreenView() {}
 8007160:	b510      	push	{r4, lr}
 8007162:	4b03      	ldr	r3, [pc, #12]	@ (8007170 <_ZN19HardReadyScreenViewD1Ev+0x10>)
 8007164:	6003      	str	r3, [r0, #0]
 8007166:	4604      	mov	r4, r0
 8007168:	f7fd f93e 	bl	80043e8 <_ZN23HardReadyScreenViewBaseD1Ev>
 800716c:	4620      	mov	r0, r4
 800716e:	bd10      	pop	{r4, pc}
 8007170:	0802ac88 	.word	0x0802ac88

08007174 <_ZN19HardReadyScreenViewD0Ev>:
 8007174:	b510      	push	{r4, lr}
 8007176:	4604      	mov	r4, r0
 8007178:	f7ff fff2 	bl	8007160 <_ZN19HardReadyScreenViewD1Ev>
 800717c:	4620      	mov	r0, r4
 800717e:	f44f 51b8 	mov.w	r1, #5888	@ 0x1700
 8007182:	f01f ff27 	bl	8026fd4 <_ZdlPvj>
 8007186:	4620      	mov	r0, r4
 8007188:	bd10      	pop	{r4, pc}

0800718a <_ZN19HardReadyScreenView15handleTickEventEv>:
void HardReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 800718a:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 800718e:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 8007190:	f8d2 16fc 	ldr.w	r1, [r2, #1788]	@ 0x6fc
 8007194:	2900      	cmp	r1, #0
 8007196:	dd07      	ble.n	80071a8 <_ZN19HardReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 8007198:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 800719a:	3901      	subs	r1, #1

	    }else{
	    	application().gotoHardScreenScreenNoTransition();
	    }

}
 800719c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 80071a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 80071a2:	f8c2 16fc 	str.w	r1, [r2, #1788]	@ 0x6fc
	        updateCounter(tickCounter);
 80071a6:	4718      	bx	r3
 80071a8:	f00d fa3c 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
}
 80071ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoHardScreenScreenNoTransition();
 80071b0:	f7fc ba5a 	b.w	8003668 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>

080071b4 <_ZN19HardReadyScreenViewC1Ev>:
HardReadyScreenView::HardReadyScreenView()
 80071b4:	b510      	push	{r4, lr}
 80071b6:	4604      	mov	r4, r0
 80071b8:	f7fd f96e 	bl	8004498 <_ZN23HardReadyScreenViewBaseC1Ev>
 80071bc:	4b04      	ldr	r3, [pc, #16]	@ (80071d0 <_ZN19HardReadyScreenViewC1Ev+0x1c>)
 80071be:	6023      	str	r3, [r4, #0]
 80071c0:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 80071c4:	22b4      	movs	r2, #180	@ 0xb4
 80071c6:	f8c3 26fc 	str.w	r2, [r3, #1788]	@ 0x6fc
}
 80071ca:	4620      	mov	r0, r4
 80071cc:	bd10      	pop	{r4, pc}
 80071ce:	bf00      	nop
 80071d0:	0802ac88 	.word	0x0802ac88

080071d4 <_ZN19HardReadyScreenView11setupScreenEv>:
{
 80071d4:	b510      	push	{r4, lr}
 80071d6:	4604      	mov	r4, r0
    HardReadyScreenViewBase::setupScreen();
 80071d8:	f7fd f904 	bl	80043e4 <_ZN23HardReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 80071dc:	6823      	ldr	r3, [r4, #0]
 80071de:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 80071e2:	4620      	mov	r0, r4
 80071e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80071e6:	f8d2 16fc 	ldr.w	r1, [r2, #1788]	@ 0x6fc
}
 80071ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 80071ee:	4718      	bx	r3

080071f0 <_ZN19HardReadyScreenView13updateCounterEi>:
void HardReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 80071f0:	2978      	cmp	r1, #120	@ 0x78
{
 80071f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80071f4:	4605      	mov	r5, r0
	    if (value > 120)
 80071f6:	dc23      	bgt.n	8007240 <_ZN19HardReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 80071f8:	293c      	cmp	r1, #60	@ 0x3c
 80071fa:	dc23      	bgt.n	8007244 <_ZN19HardReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 80071fc:	2900      	cmp	r1, #0
 80071fe:	bfd4      	ite	le
 8007200:	2400      	movle	r4, #0
 8007202:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8007204:	f505 6782 	add.w	r7, r5, #1040	@ 0x410
 8007208:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 800720a:	f205 4624 	addw	r6, r5, #1060	@ 0x424
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 800720e:	4a0e      	ldr	r2, [pc, #56]	@ (8007248 <_ZN19HardReadyScreenView13updateCounterEi+0x58>)
 8007210:	210a      	movs	r1, #10
 8007212:	4638      	mov	r0, r7
 8007214:	f010 fddc 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007218:	4623      	mov	r3, r4
 800721a:	4a0b      	ldr	r2, [pc, #44]	@ (8007248 <_ZN19HardReadyScreenView13updateCounterEi+0x58>)
 800721c:	210a      	movs	r1, #10
 800721e:	4630      	mov	r0, r6
 8007220:	f010 fdd6 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 8007224:	f505 7032 	add.w	r0, r5, #712	@ 0x2c8
 8007228:	f8c5 7310 	str.w	r7, [r5, #784]	@ 0x310
 800722c:	f8c5 63e0 	str.w	r6, [r5, #992]	@ 0x3e0
 8007230:	f00e fa96 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 8007234:	f505 7066 	add.w	r0, r5, #920	@ 0x398
}
 8007238:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 800723c:	f00e ba90 	b.w	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 8007240:	2403      	movs	r4, #3
 8007242:	e7df      	b.n	8007204 <_ZN19HardReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 8007244:	2402      	movs	r4, #2
 8007246:	e7dd      	b.n	8007204 <_ZN19HardReadyScreenView13updateCounterEi+0x14>
 8007248:	0802a143 	.word	0x0802a143

0800724c <_ZN19HardScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~HardScreenPresenter() {}
 800724c:	4770      	bx	lr

0800724e <_ZThn4_N19HardScreenPresenterD1Ev>:
 800724e:	3804      	subs	r0, #4
 8007250:	4770      	bx	lr

08007252 <_ZN19HardScreenPresenter10deactivateEv>:
}

void HardScreenPresenter::activate()
{

}
 8007252:	4770      	bx	lr

08007254 <_ZN19HardScreenPresenterD0Ev>:
 8007254:	b510      	push	{r4, lr}
 8007256:	2110      	movs	r1, #16
 8007258:	4604      	mov	r4, r0
 800725a:	f01f febb 	bl	8026fd4 <_ZdlPvj>
 800725e:	4620      	mov	r0, r4
 8007260:	bd10      	pop	{r4, pc}

08007262 <_ZThn4_N19HardScreenPresenterD0Ev>:
 8007262:	f1a0 0004 	sub.w	r0, r0, #4
 8007266:	e7f5      	b.n	8007254 <_ZN19HardScreenPresenterD0Ev>

08007268 <_ZN19HardScreenPresenterC1ER14HardScreenView>:
 8007268:	2200      	movs	r2, #0
 800726a:	6082      	str	r2, [r0, #8]
    : view(v)
 800726c:	4a02      	ldr	r2, [pc, #8]	@ (8007278 <_ZN19HardScreenPresenterC1ER14HardScreenView+0x10>)
 800726e:	6002      	str	r2, [r0, #0]
 8007270:	3218      	adds	r2, #24
 8007272:	6042      	str	r2, [r0, #4]
 8007274:	60c1      	str	r1, [r0, #12]
}
 8007276:	4770      	bx	lr
 8007278:	0802acc0 	.word	0x0802acc0

0800727c <_ZN19HardScreenPresenter13goToEndScreenEi>:
void HardScreenPresenter::handleTickEvent()
{

}
void HardScreenPresenter::goToEndScreen(int winner)
{
 800727c:	b508      	push	{r3, lr}
    model->setWinner(winner);
 800727e:	6880      	ldr	r0, [r0, #8]
 8007280:	f001 fa26 	bl	80086d0 <_ZN5Model9setWinnerEi>
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8007284:	f00d f9ce 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007288:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 800728c:	f7fc ba4c 	b.w	8003728 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

08007290 <_ZN14HardScreenView14tearDownScreenEv>:
}

void HardScreenView::tearDownScreen()
{
    HardScreenViewBase::tearDownScreen();
}
 8007290:	4770      	bx	lr
	...

08007294 <_ZN14HardScreenViewD1Ev>:

class HardScreenView : public HardScreenViewBase
{
public:
    HardScreenView();
    virtual ~HardScreenView() {}
 8007294:	b510      	push	{r4, lr}
 8007296:	4b03      	ldr	r3, [pc, #12]	@ (80072a4 <_ZN14HardScreenViewD1Ev+0x10>)
 8007298:	6003      	str	r3, [r0, #0]
 800729a:	4604      	mov	r4, r0
 800729c:	f7fd fbf8 	bl	8004a90 <_ZN18HardScreenViewBaseD1Ev>
 80072a0:	4620      	mov	r0, r4
 80072a2:	bd10      	pop	{r4, pc}
 80072a4:	0802ad00 	.word	0x0802ad00

080072a8 <_ZN14HardScreenViewD0Ev>:
 80072a8:	b510      	push	{r4, lr}
 80072aa:	4604      	mov	r4, r0
 80072ac:	f7ff fff2 	bl	8007294 <_ZN14HardScreenViewD1Ev>
 80072b0:	4620      	mov	r0, r4
 80072b2:	f241 61fc 	movw	r1, #5884	@ 0x16fc
 80072b6:	f01f fe8d 	bl	8026fd4 <_ZdlPvj>
 80072ba:	4620      	mov	r0, r4
 80072bc:	bd10      	pop	{r4, pc}
	...

080072c0 <_ZN14HardScreenViewC1Ev>:
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 80072c0:	b510      	push	{r4, lr}
 80072c2:	4604      	mov	r4, r0
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false)
 80072c4:	f7fd fbfe 	bl	8004ac4 <_ZN18HardScreenViewBaseC1Ev>
 80072c8:	4b12      	ldr	r3, [pc, #72]	@ (8007314 <_ZN14HardScreenViewC1Ev+0x54>)
 80072ca:	6023      	str	r3, [r4, #0]
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 80072cc:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 80072d0:	f203 62cc 	addw	r2, r3, #1740	@ 0x6cc
 80072d4:	4910      	ldr	r1, [pc, #64]	@ (8007318 <_ZN14HardScreenViewC1Ev+0x58>)
 80072d6:	6011      	str	r1, [r2, #0]
 80072d8:	f503 62da 	add.w	r2, r3, #1744	@ 0x6d0
 80072dc:	490f      	ldr	r1, [pc, #60]	@ (800731c <_ZN14HardScreenViewC1Ev+0x5c>)
 80072de:	6011      	str	r1, [r2, #0]
 80072e0:	f203 61d4 	addw	r1, r3, #1748	@ 0x6d4
 80072e4:	4a0e      	ldr	r2, [pc, #56]	@ (8007320 <_ZN14HardScreenViewC1Ev+0x60>)
 80072e6:	600a      	str	r2, [r1, #0]
 80072e8:	f503 61db 	add.w	r1, r3, #1752	@ 0x6d8
}
 80072ec:	4620      	mov	r0, r4
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 80072ee:	600a      	str	r2, [r1, #0]
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 80072f0:	2200      	movs	r2, #0
 80072f2:	f883 26dc 	strb.w	r2, [r3, #1756]	@ 0x6dc
 80072f6:	f8c3 26e0 	str.w	r2, [r3, #1760]	@ 0x6e0
 80072fa:	f8c3 26e4 	str.w	r2, [r3, #1764]	@ 0x6e4
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false)
 80072fe:	f8c3 26e8 	str.w	r2, [r3, #1768]	@ 0x6e8
 8007302:	f8c3 26ec 	str.w	r2, [r3, #1772]	@ 0x6ec
 8007306:	f883 26f0 	strb.w	r2, [r3, #1776]	@ 0x6f0
 800730a:	f8c3 26f4 	str.w	r2, [r3, #1780]	@ 0x6f4
 800730e:	f883 26f8 	strb.w	r2, [r3, #1784]	@ 0x6f8
}
 8007312:	bd10      	pop	{r4, pc}
 8007314:	0802ad00 	.word	0x0802ad00
 8007318:	43200000 	.word	0x43200000
 800731c:	42f00000 	.word	0x42f00000
 8007320:	3fb33333 	.word	0x3fb33333

08007324 <_ZN14HardScreenView11setupScreenEv>:
{
 8007324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007328:	4605      	mov	r5, r0
    score1 = 0;
 800732a:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
	ballX = 160;
 800732e:	f204 67cc 	addw	r7, r4, #1740	@ 0x6cc
    HardScreenViewBase::setupScreen();
 8007332:	f7fd fbab 	bl	8004a8c <_ZN18HardScreenViewBase11setupScreenEv>
	ballY = 120;
 8007336:	f504 68da 	add.w	r8, r4, #1744	@ 0x6d0
    score1 = 0;
 800733a:	2300      	movs	r3, #0
	ballX = 160;
 800733c:	4a27      	ldr	r2, [pc, #156]	@ (80073dc <_ZN14HardScreenView11setupScreenEv+0xb8>)
    score1 = 0;
 800733e:	f8c4 36e8 	str.w	r3, [r4, #1768]	@ 0x6e8
	score2 = 0;
 8007342:	f8c4 36ec 	str.w	r3, [r4, #1772]	@ 0x6ec
	gameOver = false;
 8007346:	f884 36f0 	strb.w	r3, [r4, #1776]	@ 0x6f0
	ballVelX = 1.4f;
 800734a:	f204 61d4 	addw	r1, r4, #1748	@ 0x6d4
	ballX = 160;
 800734e:	603a      	str	r2, [r7, #0]
	ballY = 120;
 8007350:	4a23      	ldr	r2, [pc, #140]	@ (80073e0 <_ZN14HardScreenView11setupScreenEv+0xbc>)
 8007352:	f8c8 2000 	str.w	r2, [r8]
	ballVelX = 1.4f;
 8007356:	4a23      	ldr	r2, [pc, #140]	@ (80073e4 <_ZN14HardScreenView11setupScreenEv+0xc0>)
 8007358:	600a      	str	r2, [r1, #0]
	ballVelY = 1.4f;
 800735a:	f504 61db 	add.w	r1, r4, #1752	@ 0x6d8
	ball.invalidate();
 800735e:	f505 7662 	add.w	r6, r5, #904	@ 0x388
	ballVelY = 1.4f;
 8007362:	600a      	str	r2, [r1, #0]
	ball.invalidate();
 8007364:	4630      	mov	r0, r6
	waitingForServe = false;
 8007366:	f884 36dc 	strb.w	r3, [r4, #1756]	@ 0x6dc
	serveDelayTicks = 0;
 800736a:	f8c4 36e0 	str.w	r3, [r4, #1760]	@ 0x6e0
	servingPlayer = 0;
 800736e:	f8c4 36e4 	str.w	r3, [r4, #1764]	@ 0x6e4
    buzzerBeepCounter = 0;
 8007372:	f8c4 36f4 	str.w	r3, [r4, #1780]	@ 0x6f4
    buzzerBeepState = false;
 8007376:	f884 36f8 	strb.w	r3, [r4, #1784]	@ 0x6f8
	ball.invalidate();
 800737a:	f009 fe75 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.moveTo(ballX, ballY);
 800737e:	ed98 7a00 	vldr	s14, [r8]
 8007382:	edd7 7a00 	vldr	s15, [r7]
 8007386:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800738a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800738e:	ee17 3a10 	vmov	r3, s14
 8007392:	b21a      	sxth	r2, r3
 8007394:	ee17 3a90 	vmov	r3, s15
 8007398:	4630      	mov	r0, r6
 800739a:	b219      	sxth	r1, r3
 800739c:	f7f9 ffb7 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
	ball.invalidate();
 80073a0:	4630      	mov	r0, r6
	Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 80073a2:	4e11      	ldr	r6, [pc, #68]	@ (80073e8 <_ZN14HardScreenView11setupScreenEv+0xc4>)
	ball.invalidate();
 80073a4:	f009 fe60 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 80073a8:	f8d4 36e8 	ldr.w	r3, [r4, #1768]	@ 0x6e8
 80073ac:	4632      	mov	r2, r6
 80073ae:	210a      	movs	r1, #10
 80073b0:	f505 707e 	add.w	r0, r5, #1016	@ 0x3f8
 80073b4:	f010 fd0c 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	HardScreenViewBase::score1.invalidate();
 80073b8:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 80073bc:	f00e f9d0 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 80073c0:	f8d4 36ec 	ldr.w	r3, [r4, #1772]	@ 0x6ec
 80073c4:	4632      	mov	r2, r6
 80073c6:	f505 7079 	add.w	r0, r5, #996	@ 0x3e4
 80073ca:	210a      	movs	r1, #10
 80073cc:	f010 fd00 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	HardScreenViewBase::score2.invalidate();
 80073d0:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 80073d4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	HardScreenViewBase::score2.invalidate();
 80073d8:	f00e b9c2 	b.w	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
 80073dc:	43200000 	.word	0x43200000
 80073e0:	42f00000 	.word	0x42f00000
 80073e4:	3fb33333 	.word	0x3fb33333
 80073e8:	0802a143 	.word	0x0802a143

080073ec <_ZN14HardScreenView15handleTickEventEv>:

void HardScreenView::handleTickEvent()
{
 80073ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}

    if (gameOver) {
 80073f0:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 80073f4:	4605      	mov	r5, r0
    if (gameOver) {
 80073f6:	f894 36f0 	ldrb.w	r3, [r4, #1776]	@ 0x6f0
 80073fa:	2b00      	cmp	r3, #0
 80073fc:	f040 838c 	bne.w	8007b18 <_ZN14HardScreenView15handleTickEventEv+0x72c>
        return; // Không xử lý nếu trò chơi kết thúc
    }
    // Xử lý bíp buzzer
	if (buzzerBeepCounter > 0) {
 8007400:	f8d4 36f4 	ldr.w	r3, [r4, #1780]	@ 0x6f4
 8007404:	2b00      	cmp	r3, #0
 8007406:	dd1b      	ble.n	8007440 <_ZN14HardScreenView15handleTickEventEv+0x54>
		if (buzzerBeepCounter % 6 == 0) { // Bíp mỗi 100ms (6 ticks tại 60 FPS)
 8007408:	2206      	movs	r2, #6
 800740a:	fb93 f1f2 	sdiv	r1, r3, r2
 800740e:	fb02 3311 	mls	r3, r2, r1, r3
 8007412:	b953      	cbnz	r3, 800742a <_ZN14HardScreenView15handleTickEventEv+0x3e>
			buzzerBeepState = !buzzerBeepState;
 8007414:	f894 26f8 	ldrb.w	r2, [r4, #1784]	@ 0x6f8
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 8007418:	4810      	ldr	r0, [pc, #64]	@ (800745c <_ZN14HardScreenView15handleTickEventEv+0x70>)
			buzzerBeepState = !buzzerBeepState;
 800741a:	f082 0201 	eor.w	r2, r2, #1
 800741e:	f884 26f8 	strb.w	r2, [r4, #1784]	@ 0x6f8
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 8007422:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8007426:	f002 f911 	bl	800964c <HAL_GPIO_WritePin>
		}
		buzzerBeepCounter--;
 800742a:	f8d4 26f4 	ldr.w	r2, [r4, #1780]	@ 0x6f4
 800742e:	3a01      	subs	r2, #1
 8007430:	f8c4 26f4 	str.w	r2, [r4, #1780]	@ 0x6f4
		if (buzzerBeepCounter == 0) {
 8007434:	b922      	cbnz	r2, 8007440 <_ZN14HardScreenView15handleTickEventEv+0x54>
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET); // Tắt buzzer sau khi bíp xong
 8007436:	4809      	ldr	r0, [pc, #36]	@ (800745c <_ZN14HardScreenView15handleTickEventEv+0x70>)
 8007438:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800743c:	f002 f906 	bl	800964c <HAL_GPIO_WritePin>
		}
	}

    JoystickCommand_t command;
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8007440:	4f07      	ldr	r7, [pc, #28]	@ (8007460 <_ZN14HardScreenView15handleTickEventEv+0x74>)
 8007442:	e026      	b.n	8007492 <_ZN14HardScreenView15handleTickEventEv+0xa6>
        switch (command) {
 8007444:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8007448:	2b05      	cmp	r3, #5
 800744a:	d822      	bhi.n	8007492 <_ZN14HardScreenView15handleTickEventEv+0xa6>
 800744c:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007450:	023c000a 	.word	0x023c000a
 8007454:	02580245 	.word	0x02580245
 8007458:	02970260 	.word	0x02970260
 800745c:	40020c00 	.word	0x40020c00
 8007460:	20002dc0 	.word	0x20002dc0
        return rect.y;
 8007464:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
            case JOY1_LEFT:
				{
					int16_t newY=paddle1.getY()+2;
 8007468:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 800746a:	b236      	sxth	r6, r6
 800746c:	2ec6      	cmp	r6, #198	@ 0xc6
 800746e:	bfa8      	it	ge
 8007470:	26c6      	movge	r6, #198	@ 0xc6
						newY = 198; // Dừng tại cạnh dưới
					}
                    if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8007472:	429e      	cmp	r6, r3
				{
					int16_t newY = paddle1.getY() - 2;
					if (newY < 2) {
						newY = 2; // Dừng tại cạnh trên
					}
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8007474:	d00d      	beq.n	8007492 <_ZN14HardScreenView15handleTickEventEv+0xa6>
						paddle1.invalidate();
 8007476:	f105 08f0 	add.w	r8, r5, #240	@ 0xf0
 800747a:	4640      	mov	r0, r8
 800747c:	f00e f970 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle1.moveTo(paddle1.getX(), newY);
 8007480:	f9b5 10f4 	ldrsh.w	r1, [r5, #244]	@ 0xf4
 8007484:	4632      	mov	r2, r6
					if (newY >198) {
						newY = 198; // Dừng tại cạnh dưới
					}
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
						paddle2.invalidate();
						paddle2.moveTo(paddle2.getX(), newY);
 8007486:	4640      	mov	r0, r8
 8007488:	f7f9 ff41 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
						paddle2.invalidate();
 800748c:	4640      	mov	r0, r8
 800748e:	f00e f967 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8007492:	2300      	movs	r3, #0
 8007494:	6838      	ldr	r0, [r7, #0]
 8007496:	461a      	mov	r2, r3
 8007498:	f10d 0107 	add.w	r1, sp, #7
 800749c:	f004 fc43 	bl	800bd26 <osMessageQueueGet>
 80074a0:	2800      	cmp	r0, #0
 80074a2:	d0cf      	beq.n	8007444 <_ZN14HardScreenView15handleTickEventEv+0x58>
				break;
        }
    }

    // Cập nhật bóng nếu không chờ phát
        if (!waitingForServe) {
 80074a4:	f894 86dc 	ldrb.w	r8, [r4, #1756]	@ 0x6dc
 80074a8:	f505 7662 	add.w	r6, r5, #904	@ 0x388
 80074ac:	f1b8 0f00 	cmp.w	r8, #0
 80074b0:	f040 8448 	bne.w	8007d44 <_ZN14HardScreenView15handleTickEventEv+0x958>
            ball.invalidate();
 80074b4:	4630      	mov	r0, r6
 80074b6:	f009 fdd7 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ballX += ballVelX;
 80074ba:	f204 63d4 	addw	r3, r4, #1748	@ 0x6d4
 80074be:	ed93 6a00 	vldr	s12, [r3]
 80074c2:	f204 63cc 	addw	r3, r4, #1740	@ 0x6cc
 80074c6:	edd3 6a00 	vldr	s13, [r3]
 80074ca:	ee76 6a26 	vadd.f32	s13, s12, s13
            ballY += ballVelY;
 80074ce:	f504 62da 	add.w	r2, r4, #1744	@ 0x6d0
            ballX += ballVelX;
 80074d2:	edc3 6a00 	vstr	s13, [r3]
            ballY += ballVelY;
 80074d6:	f504 61db 	add.w	r1, r4, #1752	@ 0x6d8
 80074da:	edd1 7a00 	vldr	s15, [r1]
 80074de:	ed92 7a00 	vldr	s14, [r2]
 80074e2:	ee37 7a87 	vadd.f32	s14, s15, s14

            // Xử lý va chạm với cạnh trên/dưới
            if (ballY < 0) {
 80074e6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80074ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            ballY += ballVelY;
 80074ee:	ed82 7a00 	vstr	s14, [r2]
            if (ballY < 0) {
 80074f2:	f140 8278 	bpl.w	80079e6 <_ZN14HardScreenView15handleTickEventEv+0x5fa>
                ballY = 0;
 80074f6:	2300      	movs	r3, #0
 80074f8:	6013      	str	r3, [r2, #0]
                ballVelY = -ballVelY;
            } else if (ballY + ball.getHeight() > 240) {
                ballY = 240 - ball.getHeight();
                ballVelY = -ballVelY;
 80074fa:	eef1 7a67 	vneg.f32	s15, s15
 80074fe:	edc1 7a00 	vstr	s15, [r1]
        return rect.x;
 8007502:	f9b5 20f4 	ldrsh.w	r2, [r5, #244]	@ 0xf4
            }

            // Xử lý va chạm với paddle1 (bên trái)
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8007506:	f9b5 30f8 	ldrsh.w	r3, [r5, #248]	@ 0xf8
 800750a:	4413      	add	r3, r2
 800750c:	ee07 3a90 	vmov	s15, r3
 8007510:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballX >= paddle1.getX() &&
                ballY + ball.getHeight() >= paddle1.getY() &&
 8007514:	eef4 6ae7 	vcmpe.f32	s13, s15
 8007518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800751c:	d835      	bhi.n	800758a <_ZN14HardScreenView15handleTickEventEv+0x19e>
                ballX >= paddle1.getX() &&
 800751e:	ee07 2a10 	vmov	s14, r2
 8007522:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8007526:	eef4 6ac7 	vcmpe.f32	s13, s14
 800752a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800752e:	db2c      	blt.n	800758a <_ZN14HardScreenView15handleTickEventEv+0x19e>
                ballY + ball.getHeight() >= paddle1.getY() &&
 8007530:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
 8007534:	edd3 6a00 	vldr	s13, [r3]
 8007538:	f9b5 3392 	ldrsh.w	r3, [r5, #914]	@ 0x392
        return rect.y;
 800753c:	f9b5 20f6 	ldrsh.w	r2, [r5, #246]	@ 0xf6
 8007540:	ee07 3a10 	vmov	s14, r3
 8007544:	ee05 2a90 	vmov	s11, r2
 8007548:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800754c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8007550:	ee37 7a26 	vadd.f32	s14, s14, s13
                ballX >= paddle1.getX() &&
 8007554:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8007558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800755c:	db15      	blt.n	800758a <_ZN14HardScreenView15handleTickEventEv+0x19e>
                ballY <= paddle1.getY() + paddle1.getHeight()) {
 800755e:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 8007562:	4413      	add	r3, r2
 8007564:	ee07 3a10 	vmov	s14, r3
 8007568:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle1.getY() &&
 800756c:	eef4 6ac7 	vcmpe.f32	s13, s14
 8007570:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007574:	d809      	bhi.n	800758a <_ZN14HardScreenView15handleTickEventEv+0x19e>
                ballX = paddle1.getX() + paddle1.getWidth();
 8007576:	f204 63cc 	addw	r3, r4, #1740	@ 0x6cc
 800757a:	edc3 7a00 	vstr	s15, [r3]
                ballVelX = -ballVelX;
 800757e:	eeb1 6a46 	vneg.f32	s12, s12
 8007582:	f204 63d4 	addw	r3, r4, #1748	@ 0x6d4
 8007586:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 800758a:	f9b5 0390 	ldrsh.w	r0, [r5, #912]	@ 0x390
        return rect.x;
 800758e:	f9b5 3120 	ldrsh.w	r3, [r5, #288]	@ 0x120
            }

            // Xử lý va chạm với paddle2 (bên phải)
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8007592:	ee07 0a90 	vmov	s15, r0
 8007596:	f204 61cc 	addw	r1, r4, #1740	@ 0x6cc
 800759a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800759e:	edd1 6a00 	vldr	s13, [r1]
 80075a2:	ee07 3a10 	vmov	s14, r3
 80075a6:	ee77 6aa6 	vadd.f32	s13, s15, s13
 80075aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
                ballY + ball.getHeight() >= paddle2.getY() &&
 80075ae:	eef4 6ac7 	vcmpe.f32	s13, s14
 80075b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80075b6:	db3d      	blt.n	8007634 <_ZN14HardScreenView15handleTickEventEv+0x248>
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 80075b8:	f9b5 2124 	ldrsh.w	r2, [r5, #292]	@ 0x124
 80075bc:	441a      	add	r2, r3
 80075be:	ee07 2a10 	vmov	s14, r2
 80075c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 80075c6:	eef4 6ac7 	vcmpe.f32	s13, s14
 80075ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80075ce:	d831      	bhi.n	8007634 <_ZN14HardScreenView15handleTickEventEv+0x248>
                ballY + ball.getHeight() >= paddle2.getY() &&
 80075d0:	f504 62da 	add.w	r2, r4, #1744	@ 0x6d0
 80075d4:	edd2 6a00 	vldr	s13, [r2]
 80075d8:	f9b5 2392 	ldrsh.w	r2, [r5, #914]	@ 0x392
        return rect.y;
 80075dc:	f9b5 7122 	ldrsh.w	r7, [r5, #290]	@ 0x122
 80075e0:	ee07 2a10 	vmov	s14, r2
 80075e4:	ee06 7a10 	vmov	s12, r7
 80075e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80075ec:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80075f0:	ee37 7a26 	vadd.f32	s14, s14, s13
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 80075f4:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80075f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80075fc:	db1a      	blt.n	8007634 <_ZN14HardScreenView15handleTickEventEv+0x248>
                ballY <= paddle2.getY() + paddle2.getHeight()) {
 80075fe:	f9b5 2126 	ldrsh.w	r2, [r5, #294]	@ 0x126
 8007602:	443a      	add	r2, r7
 8007604:	ee07 2a10 	vmov	s14, r2
 8007608:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle2.getY() &&
 800760c:	eef4 6ac7 	vcmpe.f32	s13, s14
 8007610:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007614:	d80e      	bhi.n	8007634 <_ZN14HardScreenView15handleTickEventEv+0x248>
                ballX = paddle2.getX() - ball.getWidth();
 8007616:	1a1b      	subs	r3, r3, r0
 8007618:	ee07 3a10 	vmov	s14, r3
 800761c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballVelX = -ballVelX;
 8007620:	f204 63d4 	addw	r3, r4, #1748	@ 0x6d4
                ballX = paddle2.getX() - ball.getWidth();
 8007624:	ed81 7a00 	vstr	s14, [r1]
                ballVelX = -ballVelX;
 8007628:	ed93 7a00 	vldr	s14, [r3]
 800762c:	eeb1 7a47 	vneg.f32	s14, s14
 8007630:	ed83 7a00 	vstr	s14, [r3]
        return rect.x;
 8007634:	f9b5 22dc 	ldrsh.w	r2, [r5, #732]	@ 0x2dc

            // Xử lý va chạm với các image
                   bool imageCollision = false;
                   int newServingPlayer = 0;
                   // Kiểm tra va chạm với image1
                   if (ballX + ball.getWidth() >= image1.getX() &&
 8007638:	f204 63cc 	addw	r3, r4, #1740	@ 0x6cc
 800763c:	ed93 7a00 	vldr	s14, [r3]
 8007640:	ee06 2a90 	vmov	s13, r2
 8007644:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007648:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image1.getX() + image1.getWidth() &&
                       ballY + ball.getHeight() >= image1.getY() &&
 800764c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8007650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007654:	f2c0 81e0 	blt.w	8007a18 <_ZN14HardScreenView15handleTickEventEv+0x62c>
                       ballX <= image1.getX() + image1.getWidth() &&
 8007658:	f9b5 32e0 	ldrsh.w	r3, [r5, #736]	@ 0x2e0
 800765c:	4413      	add	r3, r2
 800765e:	ee06 3a90 	vmov	s13, r3
 8007662:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image1.getX() &&
 8007666:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800766a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800766e:	f200 81d3 	bhi.w	8007a18 <_ZN14HardScreenView15handleTickEventEv+0x62c>
                       ballY + ball.getHeight() >= image1.getY() &&
 8007672:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
 8007676:	ed93 6a00 	vldr	s12, [r3]
 800767a:	f9b5 3392 	ldrsh.w	r3, [r5, #914]	@ 0x392
        return rect.y;
 800767e:	f9b5 22de 	ldrsh.w	r2, [r5, #734]	@ 0x2de
 8007682:	ee06 3a90 	vmov	s13, r3
 8007686:	ee05 2a90 	vmov	s11, r2
 800768a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800768e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8007692:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image1.getX() + image1.getWidth() &&
 8007696:	eef4 6ae5 	vcmpe.f32	s13, s11
 800769a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800769e:	f2c0 81bb 	blt.w	8007a18 <_ZN14HardScreenView15handleTickEventEv+0x62c>
                       ballY <= image1.getY() + image1.getHeight()) {
 80076a2:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
 80076a6:	4413      	add	r3, r2
 80076a8:	ee06 3a90 	vmov	s13, r3
 80076ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image1.getY() &&
 80076b0:	eeb4 6ae6 	vcmpe.f32	s12, s13
 80076b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80076b8:	f200 81ae 	bhi.w	8007a18 <_ZN14HardScreenView15handleTickEventEv+0x62c>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1; // Nếu bóng đi sang phải, người chơi 1 phát; ngược lại, người chơi 2
 80076bc:	f204 63d4 	addw	r3, r4, #1748	@ 0x6d4
 80076c0:	edd3 6a00 	vldr	s13, [r3]
 80076c4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80076c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80076cc:	f340 81a6 	ble.w	8007a1c <_ZN14HardScreenView15handleTickEventEv+0x630>
 80076d0:	2702      	movs	r7, #2
                       imageCollision = true;
 80076d2:	f04f 0801 	mov.w	r8, #1
        return rect.x;
 80076d6:	f9b5 2308 	ldrsh.w	r2, [r5, #776]	@ 0x308
                   }
                   // Kiểm tra va chạm với image1_1
                   if (ballX + ball.getWidth() >= image1_1.getX() &&
 80076da:	ee06 2a90 	vmov	s13, r2
 80076de:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
                       ballY + ball.getHeight() >= image1_1.getY() &&
 80076e2:	eef4 7ae6 	vcmpe.f32	s15, s13
 80076e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80076ea:	db3c      	blt.n	8007766 <_ZN14HardScreenView15handleTickEventEv+0x37a>
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
 80076ec:	f9b5 330c 	ldrsh.w	r3, [r5, #780]	@ 0x30c
 80076f0:	4413      	add	r3, r2
 80076f2:	ee06 3a90 	vmov	s13, r3
 80076f6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image1_1.getX() &&
 80076fa:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80076fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007702:	d830      	bhi.n	8007766 <_ZN14HardScreenView15handleTickEventEv+0x37a>
                       ballY + ball.getHeight() >= image1_1.getY() &&
 8007704:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
 8007708:	ed93 6a00 	vldr	s12, [r3]
 800770c:	f9b5 3392 	ldrsh.w	r3, [r5, #914]	@ 0x392
        return rect.y;
 8007710:	f9b5 230a 	ldrsh.w	r2, [r5, #778]	@ 0x30a
 8007714:	ee06 3a90 	vmov	s13, r3
 8007718:	ee05 2a90 	vmov	s11, r2
 800771c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8007720:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8007724:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
 8007728:	eef4 6ae5 	vcmpe.f32	s13, s11
 800772c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007730:	db19      	blt.n	8007766 <_ZN14HardScreenView15handleTickEventEv+0x37a>
                       ballY <= image1_1.getY() + image1_1.getHeight()) {
 8007732:	f9b5 330e 	ldrsh.w	r3, [r5, #782]	@ 0x30e
 8007736:	4413      	add	r3, r2
 8007738:	ee06 3a90 	vmov	s13, r3
 800773c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image1_1.getY() &&
 8007740:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8007744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007748:	d80d      	bhi.n	8007766 <_ZN14HardScreenView15handleTickEventEv+0x37a>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 800774a:	f204 63d4 	addw	r3, r4, #1748	@ 0x6d4
 800774e:	edd3 6a00 	vldr	s13, [r3]
 8007752:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8007756:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800775a:	bfd3      	iteet	le
 800775c:	2701      	movle	r7, #1
 800775e:	2702      	movgt	r7, #2
                       imageCollision = true;
 8007760:	f04f 0801 	movgt.w	r8, #1
 8007764:	46b8      	movle	r8, r7
        return rect.x;
 8007766:	f9b5 2334 	ldrsh.w	r2, [r5, #820]	@ 0x334
                   }
                   // Kiểm tra va chạm với image2
                   if (ballX + ball.getWidth() >= image2.getX() &&
 800776a:	ee06 2a90 	vmov	s13, r2
 800776e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image2.getX() + image2.getWidth() &&
                       ballY + ball.getHeight() >= image2.getY() &&
 8007772:	eef4 7ae6 	vcmpe.f32	s15, s13
 8007776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800777a:	db3c      	blt.n	80077f6 <_ZN14HardScreenView15handleTickEventEv+0x40a>
                       ballX <= image2.getX() + image2.getWidth() &&
 800777c:	f9b5 3338 	ldrsh.w	r3, [r5, #824]	@ 0x338
 8007780:	4413      	add	r3, r2
 8007782:	ee06 3a90 	vmov	s13, r3
 8007786:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image2.getX() &&
 800778a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800778e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007792:	d830      	bhi.n	80077f6 <_ZN14HardScreenView15handleTickEventEv+0x40a>
                       ballY + ball.getHeight() >= image2.getY() &&
 8007794:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
 8007798:	ed93 6a00 	vldr	s12, [r3]
 800779c:	f9b5 3392 	ldrsh.w	r3, [r5, #914]	@ 0x392
        return rect.y;
 80077a0:	f9b5 2336 	ldrsh.w	r2, [r5, #822]	@ 0x336
 80077a4:	ee06 3a90 	vmov	s13, r3
 80077a8:	ee05 2a90 	vmov	s11, r2
 80077ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80077b0:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80077b4:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image2.getX() + image2.getWidth() &&
 80077b8:	eef4 6ae5 	vcmpe.f32	s13, s11
 80077bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80077c0:	db19      	blt.n	80077f6 <_ZN14HardScreenView15handleTickEventEv+0x40a>
                       ballY <= image2.getY() + image2.getHeight()) {
 80077c2:	f9b5 333a 	ldrsh.w	r3, [r5, #826]	@ 0x33a
 80077c6:	4413      	add	r3, r2
 80077c8:	ee06 3a90 	vmov	s13, r3
 80077cc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image2.getY() &&
 80077d0:	eeb4 6ae6 	vcmpe.f32	s12, s13
 80077d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80077d8:	d80d      	bhi.n	80077f6 <_ZN14HardScreenView15handleTickEventEv+0x40a>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 80077da:	f204 63d4 	addw	r3, r4, #1748	@ 0x6d4
 80077de:	edd3 6a00 	vldr	s13, [r3]
 80077e2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80077e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80077ea:	bfd3      	iteet	le
 80077ec:	2701      	movle	r7, #1
 80077ee:	2702      	movgt	r7, #2
                       imageCollision = true;
 80077f0:	f04f 0801 	movgt.w	r8, #1
 80077f4:	46b8      	movle	r8, r7
        return rect.x;
 80077f6:	f9b5 2360 	ldrsh.w	r2, [r5, #864]	@ 0x360
                   }
                   // Kiểm tra va chạm với image2_2
                   if (ballX + ball.getWidth() >= image2_2.getX() &&
 80077fa:	ee06 2a90 	vmov	s13, r2
 80077fe:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
                       ballY + ball.getHeight() >= image2_2.getY() &&
 8007802:	eef4 7ae6 	vcmpe.f32	s15, s13
 8007806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800780a:	db2f      	blt.n	800786c <_ZN14HardScreenView15handleTickEventEv+0x480>
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
 800780c:	f9b5 3364 	ldrsh.w	r3, [r5, #868]	@ 0x364
 8007810:	4413      	add	r3, r2
 8007812:	ee07 3a90 	vmov	s15, r3
 8007816:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                   if (ballX + ball.getWidth() >= image2_2.getX() &&
 800781a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800781e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007822:	d823      	bhi.n	800786c <_ZN14HardScreenView15handleTickEventEv+0x480>
                       ballY + ball.getHeight() >= image2_2.getY() &&
 8007824:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
 8007828:	edd3 6a00 	vldr	s13, [r3]
 800782c:	f9b5 3392 	ldrsh.w	r3, [r5, #914]	@ 0x392
        return rect.y;
 8007830:	f9b5 2362 	ldrsh.w	r2, [r5, #866]	@ 0x362
 8007834:	ee07 3a90 	vmov	s15, r3
 8007838:	ee06 2a10 	vmov	s12, r2
 800783c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007840:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8007844:	ee77 7aa6 	vadd.f32	s15, s15, s13
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
 8007848:	eef4 7ac6 	vcmpe.f32	s15, s12
 800784c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007850:	db0c      	blt.n	800786c <_ZN14HardScreenView15handleTickEventEv+0x480>
                       ballY <= image2_2.getY() + image2_2.getHeight()) {
 8007852:	f9b5 3366 	ldrsh.w	r3, [r5, #870]	@ 0x366
 8007856:	4413      	add	r3, r2
 8007858:	ee07 3a90 	vmov	s15, r3
 800785c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                       ballY + ball.getHeight() >= image2_2.getY() &&
 8007860:	eef4 6ae7 	vcmpe.f32	s13, s15
 8007864:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007868:	f240 80dc 	bls.w	8007a24 <_ZN14HardScreenView15handleTickEventEv+0x638>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
                   }

                   if (imageCollision) {
 800786c:	f1b8 0f00 	cmp.w	r8, #0
 8007870:	f000 8180 	beq.w	8007b74 <_ZN14HardScreenView15handleTickEventEv+0x788>
                       // Cộng điểm cho người chơi còn lại
                       if (newServingPlayer == 2) {
 8007874:	2f02      	cmp	r7, #2
 8007876:	f040 80e0 	bne.w	8007a3a <_ZN14HardScreenView15handleTickEventEv+0x64e>
                           score2++;
 800787a:	f8d4 36ec 	ldr.w	r3, [r4, #1772]	@ 0x6ec
                           Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 800787e:	4ab5      	ldr	r2, [pc, #724]	@ (8007b54 <_ZN14HardScreenView15handleTickEventEv+0x768>)
                           score2++;
 8007880:	3301      	adds	r3, #1
 8007882:	f8c4 36ec 	str.w	r3, [r4, #1772]	@ 0x6ec
                           Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007886:	210a      	movs	r1, #10
 8007888:	f505 7079 	add.w	r0, r5, #996	@ 0x3e4
 800788c:	f010 faa0 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                           HardScreenViewBase::score2.invalidate();
 8007890:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
 8007894:	f00d ff64 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
                           buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
						   buzzerBeepState = true;
 8007898:	2701      	movs	r7, #1
                           buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 800789a:	2312      	movs	r3, #18
 800789c:	f8c4 36f4 	str.w	r3, [r4, #1780]	@ 0x6f4
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80078a0:	48ad      	ldr	r0, [pc, #692]	@ (8007b58 <_ZN14HardScreenView15handleTickEventEv+0x76c>)
						   buzzerBeepState = true;
 80078a2:	f884 76f8 	strb.w	r7, [r4, #1784]	@ 0x6f8
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80078a6:	463a      	mov	r2, r7
 80078a8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80078ac:	f001 fece 	bl	800964c <HAL_GPIO_WritePin>
                           if (score2 >= 11) {
 80078b0:	f8d4 36ec 	ldr.w	r3, [r4, #1772]	@ 0x6ec
 80078b4:	2b0a      	cmp	r3, #10
 80078b6:	dd05      	ble.n	80078c4 <_ZN14HardScreenView15handleTickEventEv+0x4d8>
                               gameOver = true;
                               presenter->goToEndScreen(2);
 80078b8:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
                               gameOver = true;
 80078ba:	f884 76f0 	strb.w	r7, [r4, #1776]	@ 0x6f0
                               presenter->goToEndScreen(2);
 80078be:	2102      	movs	r1, #2
 80078c0:	f7ff fcdc 	bl	800727c <_ZN19HardScreenPresenter13goToEndScreenEi>
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 80078c4:	2702      	movs	r7, #2
 80078c6:	e0de      	b.n	8007a86 <_ZN14HardScreenView15handleTickEventEv+0x69a>
 80078c8:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
					int16_t newY = paddle1.getY() - 2;
 80078cc:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 80078ce:	b236      	sxth	r6, r6
 80078d0:	2e02      	cmp	r6, #2
 80078d2:	bfb8      	it	lt
 80078d4:	2602      	movlt	r6, #2
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 80078d6:	42b3      	cmp	r3, r6
 80078d8:	e5cc      	b.n	8007474 <_ZN14HardScreenView15handleTickEventEv+0x88>
 80078da:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
					int16_t newY=paddle2.getY()+2;
 80078de:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 80078e0:	b236      	sxth	r6, r6
 80078e2:	2ec6      	cmp	r6, #198	@ 0xc6
 80078e4:	bfa8      	it	ge
 80078e6:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 80078e8:	429e      	cmp	r6, r3
 80078ea:	f43f add2 	beq.w	8007492 <_ZN14HardScreenView15handleTickEventEv+0xa6>
						paddle2.invalidate();
 80078ee:	f505 788e 	add.w	r8, r5, #284	@ 0x11c
 80078f2:	4640      	mov	r0, r8
 80078f4:	f00d ff34 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle2.moveTo(paddle2.getX(), newY);
 80078f8:	f9b5 1120 	ldrsh.w	r1, [r5, #288]	@ 0x120
 80078fc:	4632      	mov	r2, r6
 80078fe:	e5c2      	b.n	8007486 <_ZN14HardScreenView15handleTickEventEv+0x9a>
 8007900:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
					int16_t newY = paddle2.getY() - 2;
 8007904:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8007906:	b236      	sxth	r6, r6
 8007908:	2e02      	cmp	r6, #2
 800790a:	bfb8      	it	lt
 800790c:	2602      	movlt	r6, #2
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 800790e:	e7eb      	b.n	80078e8 <_ZN14HardScreenView15handleTickEventEv+0x4fc>
				if (waitingForServe && servingPlayer == 1) {
 8007910:	f894 36dc 	ldrb.w	r3, [r4, #1756]	@ 0x6dc
 8007914:	2b00      	cmp	r3, #0
 8007916:	f43f adbc 	beq.w	8007492 <_ZN14HardScreenView15handleTickEventEv+0xa6>
 800791a:	f8d4 16e4 	ldr.w	r1, [r4, #1764]	@ 0x6e4
 800791e:	2901      	cmp	r1, #1
 8007920:	f47f adb7 	bne.w	8007492 <_ZN14HardScreenView15handleTickEventEv+0xa6>
					ballVelX = 1.4f; // Phát bóng sang phải
 8007924:	ed9f 7a8d 	vldr	s14, [pc, #564]	@ 8007b5c <_ZN14HardScreenView15handleTickEventEv+0x770>
					waitingForServe = false;
 8007928:	2300      	movs	r3, #0
 800792a:	f884 36dc 	strb.w	r3, [r4, #1756]	@ 0x6dc
					ballVelX = 1.4f; // Phát bóng sang phải
 800792e:	f204 63d4 	addw	r3, r4, #1748	@ 0x6d4
 8007932:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle1.getY() + paddle1.getHeight()/2 > ballY) ? -1.4f : 1.4f;
 8007936:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 800793a:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 800793e:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
 8007942:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8007946:	ee07 3a90 	vmov	s15, r3
 800794a:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
 800794e:	edd3 6a00 	vldr	s13, [r3]
 8007952:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007956:	f504 63db 	add.w	r3, r4, #1752	@ 0x6d8
 800795a:	eef4 7ae6 	vcmpe.f32	s15, s13
 800795e:	eddf 7a80 	vldr	s15, [pc, #512]	@ 8007b60 <_ZN14HardScreenView15handleTickEventEv+0x774>
 8007962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007966:	bfd8      	it	le
 8007968:	eef0 7a47 	vmovle.f32	s15, s14
 800796c:	edc3 7a00 	vstr	s15, [r3]
        visible = vis;
 8007970:	f885 13ad 	strb.w	r1, [r5, #941]	@ 0x3ad
					ball.invalidate();
 8007974:	f505 7062 	add.w	r0, r5, #904	@ 0x388
 8007978:	f009 fb76 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 800797c:	e589      	b.n	8007492 <_ZN14HardScreenView15handleTickEventEv+0xa6>
				if (waitingForServe && servingPlayer == 2) {
 800797e:	f894 36dc 	ldrb.w	r3, [r4, #1756]	@ 0x6dc
 8007982:	2b00      	cmp	r3, #0
 8007984:	f43f ad85 	beq.w	8007492 <_ZN14HardScreenView15handleTickEventEv+0xa6>
 8007988:	f8d4 36e4 	ldr.w	r3, [r4, #1764]	@ 0x6e4
 800798c:	2b02      	cmp	r3, #2
 800798e:	f47f ad80 	bne.w	8007492 <_ZN14HardScreenView15handleTickEventEv+0xa6>
					ballVelX = -1.4f; // Phát bóng sang trái
 8007992:	ed9f 7a73 	vldr	s14, [pc, #460]	@ 8007b60 <_ZN14HardScreenView15handleTickEventEv+0x774>
					waitingForServe = false;
 8007996:	2300      	movs	r3, #0
 8007998:	f884 36dc 	strb.w	r3, [r4, #1756]	@ 0x6dc
					ballVelX = -1.4f; // Phát bóng sang trái
 800799c:	f204 63d4 	addw	r3, r4, #1748	@ 0x6d4
 80079a0:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle2.getY() + paddle2.getHeight()/2 > ballY) ? -1.4f : 1.4f;
 80079a4:	f9b5 3126 	ldrsh.w	r3, [r5, #294]	@ 0x126
 80079a8:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80079ac:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
 80079b0:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80079b4:	ee07 3a90 	vmov	s15, r3
 80079b8:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
 80079bc:	edd3 6a00 	vldr	s13, [r3]
 80079c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80079c4:	f504 63db 	add.w	r3, r4, #1752	@ 0x6d8
 80079c8:	eef4 7ae6 	vcmpe.f32	s15, s13
 80079cc:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8007b5c <_ZN14HardScreenView15handleTickEventEv+0x770>
 80079d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079d4:	bfd8      	it	le
 80079d6:	eeb0 7a67 	vmovle.f32	s14, s15
 80079da:	ed83 7a00 	vstr	s14, [r3]
 80079de:	2301      	movs	r3, #1
 80079e0:	f885 33ad 	strb.w	r3, [r5, #941]	@ 0x3ad
 80079e4:	e7c6      	b.n	8007974 <_ZN14HardScreenView15handleTickEventEv+0x588>
        return rect.height;
 80079e6:	f9b5 3392 	ldrsh.w	r3, [r5, #914]	@ 0x392
            } else if (ballY + ball.getHeight() > 240) {
 80079ea:	ee05 3a90 	vmov	s11, r3
 80079ee:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80079f2:	ee35 7a87 	vadd.f32	s14, s11, s14
 80079f6:	eddf 5a5b 	vldr	s11, [pc, #364]	@ 8007b64 <_ZN14HardScreenView15handleTickEventEv+0x778>
 80079fa:	eeb4 7ae5 	vcmpe.f32	s14, s11
 80079fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a02:	f77f ad7e 	ble.w	8007502 <_ZN14HardScreenView15handleTickEventEv+0x116>
                ballY = 240 - ball.getHeight();
 8007a06:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 8007a0a:	ee07 3a10 	vmov	s14, r3
 8007a0e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007a12:	ed82 7a00 	vstr	s14, [r2]
 8007a16:	e570      	b.n	80074fa <_ZN14HardScreenView15handleTickEventEv+0x10e>
                   int newServingPlayer = 0;
 8007a18:	2700      	movs	r7, #0
 8007a1a:	e65c      	b.n	80076d6 <_ZN14HardScreenView15handleTickEventEv+0x2ea>
                       newServingPlayer = ballVelX > 0 ? 2 : 1; // Nếu bóng đi sang phải, người chơi 1 phát; ngược lại, người chơi 2
 8007a1c:	f04f 0801 	mov.w	r8, #1
                       imageCollision = true;
 8007a20:	4647      	mov	r7, r8
 8007a22:	e658      	b.n	80076d6 <_ZN14HardScreenView15handleTickEventEv+0x2ea>
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8007a24:	f204 63d4 	addw	r3, r4, #1748	@ 0x6d4
 8007a28:	edd3 7a00 	vldr	s15, [r3]
 8007a2c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a34:	f73f af21 	bgt.w	800787a <_ZN14HardScreenView15handleTickEventEv+0x48e>
 8007a38:	2701      	movs	r7, #1
                           }
                       } else {
                           score1++;
 8007a3a:	f8d4 36e8 	ldr.w	r3, [r4, #1768]	@ 0x6e8
                           Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007a3e:	4a45      	ldr	r2, [pc, #276]	@ (8007b54 <_ZN14HardScreenView15handleTickEventEv+0x768>)
                           score1++;
 8007a40:	3301      	adds	r3, #1
 8007a42:	f8c4 36e8 	str.w	r3, [r4, #1768]	@ 0x6e8
                           Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007a46:	210a      	movs	r1, #10
 8007a48:	f505 707e 	add.w	r0, r5, #1016	@ 0x3f8
 8007a4c:	f010 f9c0 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                           HardScreenViewBase::score1.invalidate();
 8007a50:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8007a54:	f00d fe84 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
                           buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
						   buzzerBeepState = true;
 8007a58:	f04f 0801 	mov.w	r8, #1
                           buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8007a5c:	2312      	movs	r3, #18
 8007a5e:	f8c4 36f4 	str.w	r3, [r4, #1780]	@ 0x6f4
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8007a62:	483d      	ldr	r0, [pc, #244]	@ (8007b58 <_ZN14HardScreenView15handleTickEventEv+0x76c>)
						   buzzerBeepState = true;
 8007a64:	f884 86f8 	strb.w	r8, [r4, #1784]	@ 0x6f8
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8007a68:	4642      	mov	r2, r8
 8007a6a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8007a6e:	f001 fded 	bl	800964c <HAL_GPIO_WritePin>
                           if (score1 >= 11) {
 8007a72:	f8d4 36e8 	ldr.w	r3, [r4, #1768]	@ 0x6e8
 8007a76:	2b0a      	cmp	r3, #10
 8007a78:	dd05      	ble.n	8007a86 <_ZN14HardScreenView15handleTickEventEv+0x69a>
                               gameOver = true;
                               presenter->goToEndScreen(1);
 8007a7a:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
                               gameOver = true;
 8007a7c:	f884 86f0 	strb.w	r8, [r4, #1776]	@ 0x6f0
                               presenter->goToEndScreen(1);
 8007a80:	4641      	mov	r1, r8
 8007a82:	f7ff fbfb 	bl	800727c <_ZN19HardScreenPresenter13goToEndScreenEi>
        visible = vis;
 8007a86:	2300      	movs	r3, #0
 8007a88:	f885 33ad 	strb.w	r3, [r5, #941]	@ 0x3ad
                           }
                       }
                       // Thiết lập lại trạng thái phát bóng
                       ball.setVisible(false);
                       ball.invalidate();
 8007a8c:	4630      	mov	r0, r6
 8007a8e:	f009 faeb 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                       waitingForServe = true;
 8007a92:	2301      	movs	r3, #1
 8007a94:	f884 36dc 	strb.w	r3, [r4, #1756]	@ 0x6dc
                       serveDelayTicks = 60; // 1 giây với 60 FPS
                       servingPlayer = newServingPlayer;
                       if (newServingPlayer == 1) {
 8007a98:	2f01      	cmp	r7, #1
                       serveDelayTicks = 60; // 1 giây với 60 FPS
 8007a9a:	f04f 033c 	mov.w	r3, #60	@ 0x3c
 8007a9e:	f9b5 1392 	ldrsh.w	r1, [r5, #914]	@ 0x392
 8007aa2:	f8c4 36e0 	str.w	r3, [r4, #1760]	@ 0x6e0
                       servingPlayer = newServingPlayer;
 8007aa6:	f8c4 76e4 	str.w	r7, [r4, #1764]	@ 0x6e4
                       if (newServingPlayer == 1) {
 8007aaa:	f204 62cc 	addw	r2, r4, #1740	@ 0x6cc
 8007aae:	d136      	bne.n	8007b1e <_ZN14HardScreenView15handleTickEventEv+0x732>
                           ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8007ab0:	f9b5 30f4 	ldrsh.w	r3, [r5, #244]	@ 0xf4
 8007ab4:	f9b5 00f8 	ldrsh.w	r0, [r5, #248]	@ 0xf8
 8007ab8:	4403      	add	r3, r0
 8007aba:	330a      	adds	r3, #10
 8007abc:	ee07 3a90 	vmov	s15, r3
 8007ac0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007ac4:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
                           ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8007ac8:	edc2 7a00 	vstr	s15, [r2]
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007acc:	f9b5 20f6 	ldrsh.w	r2, [r5, #246]	@ 0xf6
 8007ad0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8007ad4:	eb02 0263 	add.w	r2, r2, r3, asr #1
 8007ad8:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8007adc:	eba2 0261 	sub.w	r2, r2, r1, asr #1
 8007ae0:	ee07 2a90 	vmov	s15, r2
                       } else {
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007ae4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007ae8:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
 8007aec:	edc3 7a00 	vstr	s15, [r3]
                       }
                       ball.moveTo(ballX, ballY);
 8007af0:	f204 64cc 	addw	r4, r4, #1740	@ 0x6cc
 8007af4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007af8:	ed94 7a00 	vldr	s14, [r4]
 8007afc:	ee17 3a90 	vmov	r3, s15
 8007b00:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007b04:	b21a      	sxth	r2, r3
 8007b06:	ee17 3a10 	vmov	r3, s14
            if (servingPlayer == 1) {
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
            } else if (servingPlayer == 2) {
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
            }
            ball.moveTo(ballX, ballY);
 8007b0a:	4630      	mov	r0, r6
 8007b0c:	b219      	sxth	r1, r3
 8007b0e:	f7f9 fbfe 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
            ball.invalidate();
 8007b12:	4630      	mov	r0, r6
 8007b14:	f009 faa8 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        }
}
 8007b18:	b002      	add	sp, #8
 8007b1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8007b1e:	f9b5 3120 	ldrsh.w	r3, [r5, #288]	@ 0x120
 8007b22:	f9b5 0390 	ldrsh.w	r0, [r5, #912]	@ 0x390
 8007b26:	1a1b      	subs	r3, r3, r0
 8007b28:	3b0a      	subs	r3, #10
 8007b2a:	ee07 3a90 	vmov	s15, r3
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007b2e:	f9b5 3126 	ldrsh.w	r3, [r5, #294]	@ 0x126
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8007b32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007b36:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8007b3a:	edc2 7a00 	vstr	s15, [r2]
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007b3e:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007b42:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
 8007b46:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8007b4a:	eba3 0361 	sub.w	r3, r3, r1, asr #1
 8007b4e:	ee07 3a90 	vmov	s15, r3
 8007b52:	e7c7      	b.n	8007ae4 <_ZN14HardScreenView15handleTickEventEv+0x6f8>
 8007b54:	0802a143 	.word	0x0802a143
 8007b58:	40020c00 	.word	0x40020c00
 8007b5c:	3fb33333 	.word	0x3fb33333
 8007b60:	bfb33333 	.word	0xbfb33333
 8007b64:	43700000 	.word	0x43700000
 8007b68:	439f8000 	.word	0x439f8000
 8007b6c:	42700000 	.word	0x42700000
 8007b70:	43350000 	.word	0x43350000
                if (ballX >319) {
 8007b74:	ed5f 6a04 	vldr	s13, [pc, #-16]	@ 8007b68 <_ZN14HardScreenView15handleTickEventEv+0x77c>
 8007b78:	eeb4 7ae6 	vcmpe.f32	s14, s13
                ballY + ball.getHeight() >= paddle1.getY() &&
 8007b7c:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
                if (ballX >319) {
 8007b80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                ballY + ball.getHeight() >= paddle1.getY() &&
 8007b84:	edd3 7a00 	vldr	s15, [r3]
                if (ballX >319) {
 8007b88:	dd70      	ble.n	8007c6c <_ZN14HardScreenView15handleTickEventEv+0x880>
                    if (ballY > 60 && ballY < 181) {
 8007b8a:	ed1f 7a08 	vldr	s14, [pc, #-32]	@ 8007b6c <_ZN14HardScreenView15handleTickEventEv+0x780>
 8007b8e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007b92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b96:	f340 80c8 	ble.w	8007d2a <_ZN14HardScreenView15handleTickEventEv+0x93e>
 8007b9a:	ed1f 7a0b 	vldr	s14, [pc, #-44]	@ 8007b70 <_ZN14HardScreenView15handleTickEventEv+0x784>
 8007b9e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007ba2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ba6:	f140 80c0 	bpl.w	8007d2a <_ZN14HardScreenView15handleTickEventEv+0x93e>
                        score1++;
 8007baa:	f8d4 36e8 	ldr.w	r3, [r4, #1768]	@ 0x6e8
                        Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007bae:	4a84      	ldr	r2, [pc, #528]	@ (8007dc0 <_ZN14HardScreenView15handleTickEventEv+0x9d4>)
                        score1++;
 8007bb0:	3301      	adds	r3, #1
 8007bb2:	f8c4 36e8 	str.w	r3, [r4, #1768]	@ 0x6e8
                        Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007bb6:	210a      	movs	r1, #10
 8007bb8:	f505 707e 	add.w	r0, r5, #1016	@ 0x3f8
 8007bbc:	f010 f908 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        HardScreenViewBase::score1.invalidate();
 8007bc0:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8007bc4:	f00d fdcc 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
						buzzerBeepState = true;
 8007bc8:	2701      	movs	r7, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8007bca:	2312      	movs	r3, #18
 8007bcc:	f8c4 36f4 	str.w	r3, [r4, #1780]	@ 0x6f4
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8007bd0:	487c      	ldr	r0, [pc, #496]	@ (8007dc4 <_ZN14HardScreenView15handleTickEventEv+0x9d8>)
						buzzerBeepState = true;
 8007bd2:	f884 76f8 	strb.w	r7, [r4, #1784]	@ 0x6f8
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8007bd6:	463a      	mov	r2, r7
 8007bd8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8007bdc:	f001 fd36 	bl	800964c <HAL_GPIO_WritePin>
                        if (score1 >= 11) {
 8007be0:	f8d4 36e8 	ldr.w	r3, [r4, #1768]	@ 0x6e8
 8007be4:	2b0a      	cmp	r3, #10
 8007be6:	dd05      	ble.n	8007bf4 <_ZN14HardScreenView15handleTickEventEv+0x808>
                            presenter->goToEndScreen(1);
 8007be8:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
                            gameOver = true;
 8007bea:	f884 76f0 	strb.w	r7, [r4, #1776]	@ 0x6f0
                            presenter->goToEndScreen(1);
 8007bee:	4639      	mov	r1, r7
 8007bf0:	f7ff fb44 	bl	800727c <_ZN19HardScreenPresenter13goToEndScreenEi>
 8007bf4:	2300      	movs	r3, #0
 8007bf6:	f885 33ad 	strb.w	r3, [r5, #941]	@ 0x3ad
                        ball.invalidate();
 8007bfa:	4630      	mov	r0, r6
 8007bfc:	f009 fa34 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 8007c00:	2301      	movs	r3, #1
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8007c02:	223c      	movs	r2, #60	@ 0x3c
                        waitingForServe = true;
 8007c04:	f884 36dc 	strb.w	r3, [r4, #1756]	@ 0x6dc
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8007c08:	f8c4 26e0 	str.w	r2, [r4, #1760]	@ 0x6e0
                        servingPlayer = 1; // Người chơi 1 phát bóng
 8007c0c:	f8c4 36e4 	str.w	r3, [r4, #1764]	@ 0x6e4
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8007c10:	f9b5 20f8 	ldrsh.w	r2, [r5, #248]	@ 0xf8
 8007c14:	f9b5 30f4 	ldrsh.w	r3, [r5, #244]	@ 0xf4
 8007c18:	4413      	add	r3, r2
 8007c1a:	330a      	adds	r3, #10
 8007c1c:	ee07 3a90 	vmov	s15, r3
 8007c20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c24:	f204 63cc 	addw	r3, r4, #1740	@ 0x6cc
 8007c28:	edc3 7a00 	vstr	s15, [r3]
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007c2c:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 8007c30:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007c34:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007c38:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8007c3c:	f9b5 2392 	ldrsh.w	r2, [r5, #914]	@ 0x392
 8007c40:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8007c44:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8007c48:	ee07 3a10 	vmov	s14, r3
 8007c4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007c50:	f504 64da 	add.w	r4, r4, #1744	@ 0x6d0
 8007c54:	ed84 7a00 	vstr	s14, [r4]
                        ball.moveTo(ballX, ballY);
 8007c58:	eebd 7ac7 	vcvt.s32.f32	s14, s14
            ball.moveTo(ballX, ballY);
 8007c5c:	ee17 3a10 	vmov	r3, s14
 8007c60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c64:	b21a      	sxth	r2, r3
 8007c66:	ee17 3a90 	vmov	r3, s15
 8007c6a:	e74e      	b.n	8007b0a <_ZN14HardScreenView15handleTickEventEv+0x71e>
                if (ballX <1) {
 8007c6c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007c70:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8007c74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c78:	f57f af3a 	bpl.w	8007af0 <_ZN14HardScreenView15handleTickEventEv+0x704>
                    if (ballY > 60 && ballY < 181) {
 8007c7c:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 8007dc8 <_ZN14HardScreenView15handleTickEventEv+0x9dc>
 8007c80:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007c84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c88:	dd4f      	ble.n	8007d2a <_ZN14HardScreenView15handleTickEventEv+0x93e>
 8007c8a:	ed9f 7a50 	vldr	s14, [pc, #320]	@ 8007dcc <_ZN14HardScreenView15handleTickEventEv+0x9e0>
 8007c8e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007c92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c96:	d548      	bpl.n	8007d2a <_ZN14HardScreenView15handleTickEventEv+0x93e>
                        score2++;
 8007c98:	f8d4 36ec 	ldr.w	r3, [r4, #1772]	@ 0x6ec
                        Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007c9c:	4a48      	ldr	r2, [pc, #288]	@ (8007dc0 <_ZN14HardScreenView15handleTickEventEv+0x9d4>)
                        score2++;
 8007c9e:	3301      	adds	r3, #1
 8007ca0:	f8c4 36ec 	str.w	r3, [r4, #1772]	@ 0x6ec
                        Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007ca4:	210a      	movs	r1, #10
 8007ca6:	f505 7079 	add.w	r0, r5, #996	@ 0x3e4
 8007caa:	f010 f891 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        HardScreenViewBase::score2.invalidate();
 8007cae:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
 8007cb2:	f00d fd55 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
						buzzerBeepState = true;
 8007cb6:	2701      	movs	r7, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8007cb8:	2312      	movs	r3, #18
 8007cba:	f8c4 36f4 	str.w	r3, [r4, #1780]	@ 0x6f4
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8007cbe:	4841      	ldr	r0, [pc, #260]	@ (8007dc4 <_ZN14HardScreenView15handleTickEventEv+0x9d8>)
						buzzerBeepState = true;
 8007cc0:	f884 76f8 	strb.w	r7, [r4, #1784]	@ 0x6f8
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8007cc4:	463a      	mov	r2, r7
 8007cc6:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8007cca:	f001 fcbf 	bl	800964c <HAL_GPIO_WritePin>
                        if (score2 >= 11) {
 8007cce:	f8d4 36ec 	ldr.w	r3, [r4, #1772]	@ 0x6ec
 8007cd2:	2b0a      	cmp	r3, #10
 8007cd4:	dd05      	ble.n	8007ce2 <_ZN14HardScreenView15handleTickEventEv+0x8f6>
                            presenter->goToEndScreen(2);
 8007cd6:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
                            gameOver = true;
 8007cd8:	f884 76f0 	strb.w	r7, [r4, #1776]	@ 0x6f0
                            presenter->goToEndScreen(2);
 8007cdc:	2102      	movs	r1, #2
 8007cde:	f7ff facd 	bl	800727c <_ZN19HardScreenPresenter13goToEndScreenEi>
 8007ce2:	2300      	movs	r3, #0
 8007ce4:	f885 33ad 	strb.w	r3, [r5, #941]	@ 0x3ad
                        ball.invalidate();
 8007ce8:	4630      	mov	r0, r6
 8007cea:	f009 f9bd 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 8007cee:	2301      	movs	r3, #1
 8007cf0:	f884 36dc 	strb.w	r3, [r4, #1756]	@ 0x6dc
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8007cf4:	233c      	movs	r3, #60	@ 0x3c
 8007cf6:	f8c4 36e0 	str.w	r3, [r4, #1760]	@ 0x6e0
                        servingPlayer = 2; // Người chơi 2 phát bóng
 8007cfa:	2302      	movs	r3, #2
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8007cfc:	f9b5 2390 	ldrsh.w	r2, [r5, #912]	@ 0x390
                        servingPlayer = 2; // Người chơi 2 phát bóng
 8007d00:	f8c4 36e4 	str.w	r3, [r4, #1764]	@ 0x6e4
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8007d04:	f9b5 3120 	ldrsh.w	r3, [r5, #288]	@ 0x120
 8007d08:	1a9b      	subs	r3, r3, r2
 8007d0a:	3b0a      	subs	r3, #10
 8007d0c:	ee07 3a90 	vmov	s15, r3
 8007d10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d14:	f204 63cc 	addw	r3, r4, #1740	@ 0x6cc
 8007d18:	edc3 7a00 	vstr	s15, [r3]
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007d1c:	f9b5 3126 	ldrsh.w	r3, [r5, #294]	@ 0x126
 8007d20:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007d24:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
 8007d28:	e786      	b.n	8007c38 <_ZN14HardScreenView15handleTickEventEv+0x84c>
                        ballX = 1;
 8007d2a:	f204 63cc 	addw	r3, r4, #1740	@ 0x6cc
 8007d2e:	edc3 6a00 	vstr	s13, [r3]
                        ballVelX = -ballVelX;
 8007d32:	f204 63d4 	addw	r3, r4, #1748	@ 0x6d4
 8007d36:	ed93 7a00 	vldr	s14, [r3]
 8007d3a:	eeb1 7a47 	vneg.f32	s14, s14
 8007d3e:	ed83 7a00 	vstr	s14, [r3]
            ball.moveTo(ballX, ballY);
 8007d42:	e6d5      	b.n	8007af0 <_ZN14HardScreenView15handleTickEventEv+0x704>
            if (serveDelayTicks > 0) {
 8007d44:	f8d4 36e0 	ldr.w	r3, [r4, #1760]	@ 0x6e0
 8007d48:	2b00      	cmp	r3, #0
 8007d4a:	dd09      	ble.n	8007d60 <_ZN14HardScreenView15handleTickEventEv+0x974>
                serveDelayTicks--;
 8007d4c:	3b01      	subs	r3, #1
 8007d4e:	f8c4 36e0 	str.w	r3, [r4, #1760]	@ 0x6e0
                if (serveDelayTicks == 0) {
 8007d52:	b92b      	cbnz	r3, 8007d60 <_ZN14HardScreenView15handleTickEventEv+0x974>
 8007d54:	2301      	movs	r3, #1
 8007d56:	f885 33ad 	strb.w	r3, [r5, #941]	@ 0x3ad
                    ball.invalidate();
 8007d5a:	4630      	mov	r0, r6
 8007d5c:	f009 f984 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            if (servingPlayer == 1) {
 8007d60:	f8d4 36e4 	ldr.w	r3, [r4, #1764]	@ 0x6e4
 8007d64:	2b01      	cmp	r3, #1
 8007d66:	d120      	bne.n	8007daa <_ZN14HardScreenView15handleTickEventEv+0x9be>
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8007d68:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 8007d6c:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007d70:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
 8007d74:	f504 61da 	add.w	r1, r4, #1744	@ 0x6d0
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007d78:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8007d7c:	f9b5 2392 	ldrsh.w	r2, [r5, #914]	@ 0x392
 8007d80:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8007d84:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8007d88:	ee07 3a90 	vmov	s15, r3
 8007d8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d90:	edc1 7a00 	vstr	s15, [r1]
            ball.moveTo(ballX, ballY);
 8007d94:	f504 63da 	add.w	r3, r4, #1744	@ 0x6d0
 8007d98:	ed93 7a00 	vldr	s14, [r3]
 8007d9c:	f204 64cc 	addw	r4, r4, #1740	@ 0x6cc
 8007da0:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007da4:	edd4 7a00 	vldr	s15, [r4]
 8007da8:	e758      	b.n	8007c5c <_ZN14HardScreenView15handleTickEventEv+0x870>
            } else if (servingPlayer == 2) {
 8007daa:	2b02      	cmp	r3, #2
 8007dac:	d1f2      	bne.n	8007d94 <_ZN14HardScreenView15handleTickEventEv+0x9a8>
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007dae:	f9b5 3126 	ldrsh.w	r3, [r5, #294]	@ 0x126
 8007db2:	f504 61da 	add.w	r1, r4, #1744	@ 0x6d0
 8007db6:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007dba:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
 8007dbe:	e7db      	b.n	8007d78 <_ZN14HardScreenView15handleTickEventEv+0x98c>
 8007dc0:	0802a143 	.word	0x0802a143
 8007dc4:	40020c00 	.word	0x40020c00
 8007dc8:	42700000 	.word	0x42700000
 8007dcc:	43350000 	.word	0x43350000

08007dd0 <_ZN26MediumReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MediumReadyScreenPresenter() {}
 8007dd0:	4770      	bx	lr

08007dd2 <_ZThn4_N26MediumReadyScreenPresenterD1Ev>:
 8007dd2:	3804      	subs	r0, #4
 8007dd4:	4770      	bx	lr

08007dd6 <_ZN26MediumReadyScreenPresenter10deactivateEv>:
}

void MediumReadyScreenPresenter::activate()
{

}
 8007dd6:	4770      	bx	lr

08007dd8 <_ZN26MediumReadyScreenPresenterD0Ev>:
 8007dd8:	b510      	push	{r4, lr}
 8007dda:	2110      	movs	r1, #16
 8007ddc:	4604      	mov	r4, r0
 8007dde:	f01f f8f9 	bl	8026fd4 <_ZdlPvj>
 8007de2:	4620      	mov	r0, r4
 8007de4:	bd10      	pop	{r4, pc}

08007de6 <_ZThn4_N26MediumReadyScreenPresenterD0Ev>:
 8007de6:	f1a0 0004 	sub.w	r0, r0, #4
 8007dea:	e7f5      	b.n	8007dd8 <_ZN26MediumReadyScreenPresenterD0Ev>

08007dec <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView>:
 8007dec:	2200      	movs	r2, #0
 8007dee:	6082      	str	r2, [r0, #8]
    : view(v)
 8007df0:	4a02      	ldr	r2, [pc, #8]	@ (8007dfc <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView+0x10>)
 8007df2:	6002      	str	r2, [r0, #0]
 8007df4:	3218      	adds	r2, #24
 8007df6:	6042      	str	r2, [r0, #4]
 8007df8:	60c1      	str	r1, [r0, #12]
}
 8007dfa:	4770      	bx	lr
 8007dfc:	0802ad34 	.word	0x0802ad34

08007e00 <_ZN21MediumReadyScreenView14tearDownScreenEv>:
}

void MediumReadyScreenView::tearDownScreen()
{
    MediumReadyScreenViewBase::tearDownScreen();
}
 8007e00:	4770      	bx	lr
	...

08007e04 <_ZN21MediumReadyScreenViewD1Ev>:

class MediumReadyScreenView : public MediumReadyScreenViewBase
{
public:
    MediumReadyScreenView();
    virtual ~MediumReadyScreenView() {}
 8007e04:	b510      	push	{r4, lr}
 8007e06:	4b03      	ldr	r3, [pc, #12]	@ (8007e14 <_ZN21MediumReadyScreenViewD1Ev+0x10>)
 8007e08:	6003      	str	r3, [r0, #0]
 8007e0a:	4604      	mov	r4, r0
 8007e0c:	f7fd f92e 	bl	800506c <_ZN25MediumReadyScreenViewBaseD1Ev>
 8007e10:	4620      	mov	r0, r4
 8007e12:	bd10      	pop	{r4, pc}
 8007e14:	0802ad74 	.word	0x0802ad74

08007e18 <_ZN21MediumReadyScreenViewD0Ev>:
 8007e18:	b510      	push	{r4, lr}
 8007e1a:	4604      	mov	r4, r0
 8007e1c:	f7ff fff2 	bl	8007e04 <_ZN21MediumReadyScreenViewD1Ev>
 8007e20:	4620      	mov	r0, r4
 8007e22:	f241 6124 	movw	r1, #5668	@ 0x1624
 8007e26:	f01f f8d5 	bl	8026fd4 <_ZdlPvj>
 8007e2a:	4620      	mov	r0, r4
 8007e2c:	bd10      	pop	{r4, pc}

08007e2e <_ZN21MediumReadyScreenView15handleTickEventEv>:
void MediumReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 8007e2e:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 8007e32:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 8007e34:	f8d2 1620 	ldr.w	r1, [r2, #1568]	@ 0x620
 8007e38:	2900      	cmp	r1, #0
 8007e3a:	dd07      	ble.n	8007e4c <_ZN21MediumReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 8007e3c:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 8007e3e:	3901      	subs	r1, #1

	    }else{
	    	application().gotoMediumScreenScreenNoTransition();
	    }

}
 8007e40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 8007e44:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 8007e46:	f8c2 1620 	str.w	r1, [r2, #1568]	@ 0x620
	        updateCounter(tickCounter);
 8007e4a:	4718      	bx	r3
 8007e4c:	f00c fbea 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007e50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoMediumScreenScreenNoTransition();
 8007e54:	f7fb bc28 	b.w	80036a8 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>

08007e58 <_ZN21MediumReadyScreenViewC1Ev>:
MediumReadyScreenView::MediumReadyScreenView()
 8007e58:	b510      	push	{r4, lr}
 8007e5a:	4604      	mov	r4, r0
 8007e5c:	f7fd f932 	bl	80050c4 <_ZN25MediumReadyScreenViewBaseC1Ev>
 8007e60:	4b04      	ldr	r3, [pc, #16]	@ (8007e74 <_ZN21MediumReadyScreenViewC1Ev+0x1c>)
 8007e62:	6023      	str	r3, [r4, #0]
 8007e64:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8007e68:	22b4      	movs	r2, #180	@ 0xb4
 8007e6a:	f8c3 2620 	str.w	r2, [r3, #1568]	@ 0x620
}
 8007e6e:	4620      	mov	r0, r4
 8007e70:	bd10      	pop	{r4, pc}
 8007e72:	bf00      	nop
 8007e74:	0802ad74 	.word	0x0802ad74

08007e78 <_ZN21MediumReadyScreenView11setupScreenEv>:
{
 8007e78:	b510      	push	{r4, lr}
 8007e7a:	4604      	mov	r4, r0
    MediumReadyScreenViewBase::setupScreen();
 8007e7c:	f7fd f8f4 	bl	8005068 <_ZN25MediumReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 8007e80:	6823      	ldr	r3, [r4, #0]
 8007e82:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 8007e86:	4620      	mov	r0, r4
 8007e88:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007e8a:	f8d2 1620 	ldr.w	r1, [r2, #1568]	@ 0x620
}
 8007e8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 8007e92:	4718      	bx	r3

08007e94 <_ZN21MediumReadyScreenView13updateCounterEi>:
void MediumReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 8007e94:	2978      	cmp	r1, #120	@ 0x78
{
 8007e96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007e98:	4605      	mov	r5, r0
	    if (value > 120)
 8007e9a:	dc23      	bgt.n	8007ee4 <_ZN21MediumReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 8007e9c:	293c      	cmp	r1, #60	@ 0x3c
 8007e9e:	dc23      	bgt.n	8007ee8 <_ZN21MediumReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 8007ea0:	2900      	cmp	r1, #0
 8007ea2:	bfd4      	ite	le
 8007ea4:	2400      	movle	r4, #0
 8007ea6:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8007ea8:	f505 774d 	add.w	r7, r5, #820	@ 0x334
 8007eac:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007eae:	f505 7652 	add.w	r6, r5, #840	@ 0x348
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8007eb2:	4a0e      	ldr	r2, [pc, #56]	@ (8007eec <_ZN21MediumReadyScreenView13updateCounterEi+0x58>)
 8007eb4:	210a      	movs	r1, #10
 8007eb6:	4638      	mov	r0, r7
 8007eb8:	f00f ff8a 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007ebc:	4623      	mov	r3, r4
 8007ebe:	4a0b      	ldr	r2, [pc, #44]	@ (8007eec <_ZN21MediumReadyScreenView13updateCounterEi+0x58>)
 8007ec0:	210a      	movs	r1, #10
 8007ec2:	4630      	mov	r0, r6
 8007ec4:	f00f ff84 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 8007ec8:	f505 700d 	add.w	r0, r5, #564	@ 0x234
 8007ecc:	f8c5 727c 	str.w	r7, [r5, #636]	@ 0x27c
 8007ed0:	f8c5 6330 	str.w	r6, [r5, #816]	@ 0x330
 8007ed4:	f00d fc44 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 8007ed8:	f505 703a 	add.w	r0, r5, #744	@ 0x2e8
}
 8007edc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 8007ee0:	f00d bc3e 	b.w	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 8007ee4:	2403      	movs	r4, #3
 8007ee6:	e7df      	b.n	8007ea8 <_ZN21MediumReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 8007ee8:	2402      	movs	r4, #2
 8007eea:	e7dd      	b.n	8007ea8 <_ZN21MediumReadyScreenView13updateCounterEi+0x14>
 8007eec:	0802a143 	.word	0x0802a143

08007ef0 <_ZN21MediumScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~MediumScreenPresenter() {}
 8007ef0:	4770      	bx	lr

08007ef2 <_ZThn4_N21MediumScreenPresenterD1Ev>:
 8007ef2:	3804      	subs	r0, #4
 8007ef4:	4770      	bx	lr

08007ef6 <_ZN21MediumScreenPresenter10deactivateEv>:
}

void MediumScreenPresenter::deactivate()
{

}
 8007ef6:	4770      	bx	lr

08007ef8 <_ZN21MediumScreenPresenterD0Ev>:
 8007ef8:	b510      	push	{r4, lr}
 8007efa:	2110      	movs	r1, #16
 8007efc:	4604      	mov	r4, r0
 8007efe:	f01f f869 	bl	8026fd4 <_ZdlPvj>
 8007f02:	4620      	mov	r0, r4
 8007f04:	bd10      	pop	{r4, pc}

08007f06 <_ZThn4_N21MediumScreenPresenterD0Ev>:
 8007f06:	f1a0 0004 	sub.w	r0, r0, #4
 8007f0a:	e7f5      	b.n	8007ef8 <_ZN21MediumScreenPresenterD0Ev>

08007f0c <_ZN21MediumScreenPresenter8activateEv>:
	model->resetGame();
 8007f0c:	6880      	ldr	r0, [r0, #8]
 8007f0e:	f000 bbf3 	b.w	80086f8 <_ZN5Model9resetGameEv>
	...

08007f14 <_ZN21MediumScreenPresenterC1ER16MediumScreenView>:
 8007f14:	2200      	movs	r2, #0
 8007f16:	6082      	str	r2, [r0, #8]
    : view(v)
 8007f18:	4a02      	ldr	r2, [pc, #8]	@ (8007f24 <_ZN21MediumScreenPresenterC1ER16MediumScreenView+0x10>)
 8007f1a:	6002      	str	r2, [r0, #0]
 8007f1c:	3218      	adds	r2, #24
 8007f1e:	6042      	str	r2, [r0, #4]
 8007f20:	60c1      	str	r1, [r0, #12]
}
 8007f22:	4770      	bx	lr
 8007f24:	0802adac 	.word	0x0802adac

08007f28 <_ZN21MediumScreenPresenter13goToEndScreenEi>:
void MediumScreenPresenter::handleTickEvent()
{

}
void MediumScreenPresenter::goToEndScreen(int winner){
 8007f28:	b508      	push	{r3, lr}
	model->setWinner(winner);
 8007f2a:	6880      	ldr	r0, [r0, #8]
 8007f2c:	f000 fbd0 	bl	80086d0 <_ZN5Model9setWinnerEi>
	static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8007f30:	f00c fb78 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007f34:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8007f38:	f7fb bbf6 	b.w	8003728 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

08007f3c <_ZN16MediumScreenView14tearDownScreenEv>:
}

void MediumScreenView::tearDownScreen()
{
    MediumScreenViewBase::tearDownScreen();
}
 8007f3c:	4770      	bx	lr
	...

08007f40 <_ZN16MediumScreenViewD1Ev>:

class MediumScreenView : public MediumScreenViewBase
{
public:
    MediumScreenView();
    virtual ~MediumScreenView() {}
 8007f40:	b510      	push	{r4, lr}
 8007f42:	4b03      	ldr	r3, [pc, #12]	@ (8007f50 <_ZN16MediumScreenViewD1Ev+0x10>)
 8007f44:	6003      	str	r3, [r0, #0]
 8007f46:	4604      	mov	r4, r0
 8007f48:	f7fd fb4c 	bl	80055e4 <_ZN20MediumScreenViewBaseD1Ev>
 8007f4c:	4620      	mov	r0, r4
 8007f4e:	bd10      	pop	{r4, pc}
 8007f50:	0802adec 	.word	0x0802adec

08007f54 <_ZN16MediumScreenViewD0Ev>:
 8007f54:	b510      	push	{r4, lr}
 8007f56:	4604      	mov	r4, r0
 8007f58:	f7ff fff2 	bl	8007f40 <_ZN16MediumScreenViewD1Ev>
 8007f5c:	4620      	mov	r0, r4
 8007f5e:	f241 614c 	movw	r1, #5708	@ 0x164c
 8007f62:	f01f f837 	bl	8026fd4 <_ZdlPvj>
 8007f66:	4620      	mov	r0, r4
 8007f68:	bd10      	pop	{r4, pc}
	...

08007f6c <_ZN16MediumScreenViewC1Ev>:
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.2f), ballVelY(1.2f),
 8007f6c:	b510      	push	{r4, lr}
 8007f6e:	4604      	mov	r4, r0
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false)
 8007f70:	f7fd fb52 	bl	8005618 <_ZN20MediumScreenViewBaseC1Ev>
 8007f74:	4b12      	ldr	r3, [pc, #72]	@ (8007fc0 <_ZN16MediumScreenViewC1Ev+0x54>)
 8007f76:	6023      	str	r3, [r4, #0]
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.2f), ballVelY(1.2f),
 8007f78:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8007f7c:	f203 621c 	addw	r2, r3, #1564	@ 0x61c
 8007f80:	4910      	ldr	r1, [pc, #64]	@ (8007fc4 <_ZN16MediumScreenViewC1Ev+0x58>)
 8007f82:	6011      	str	r1, [r2, #0]
 8007f84:	f504 52b1 	add.w	r2, r4, #5664	@ 0x1620
 8007f88:	490f      	ldr	r1, [pc, #60]	@ (8007fc8 <_ZN16MediumScreenViewC1Ev+0x5c>)
 8007f8a:	6011      	str	r1, [r2, #0]
 8007f8c:	f203 6124 	addw	r1, r3, #1572	@ 0x624
 8007f90:	4a0e      	ldr	r2, [pc, #56]	@ (8007fcc <_ZN16MediumScreenViewC1Ev+0x60>)
 8007f92:	600a      	str	r2, [r1, #0]
 8007f94:	f503 61c5 	add.w	r1, r3, #1576	@ 0x628
}
 8007f98:	4620      	mov	r0, r4
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.2f), ballVelY(1.2f),
 8007f9a:	600a      	str	r2, [r1, #0]
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 8007f9c:	2200      	movs	r2, #0
 8007f9e:	f883 262c 	strb.w	r2, [r3, #1580]	@ 0x62c
 8007fa2:	f8c3 2630 	str.w	r2, [r3, #1584]	@ 0x630
 8007fa6:	f8c3 2634 	str.w	r2, [r3, #1588]	@ 0x634
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false)
 8007faa:	f8c3 2638 	str.w	r2, [r3, #1592]	@ 0x638
 8007fae:	f8c3 263c 	str.w	r2, [r3, #1596]	@ 0x63c
 8007fb2:	f883 2640 	strb.w	r2, [r3, #1600]	@ 0x640
 8007fb6:	f8c3 2644 	str.w	r2, [r3, #1604]	@ 0x644
 8007fba:	f883 2648 	strb.w	r2, [r3, #1608]	@ 0x648
}
 8007fbe:	bd10      	pop	{r4, pc}
 8007fc0:	0802adec 	.word	0x0802adec
 8007fc4:	43200000 	.word	0x43200000
 8007fc8:	42f00000 	.word	0x42f00000
 8007fcc:	3f99999a 	.word	0x3f99999a

08007fd0 <_ZN16MediumScreenView11setupScreenEv>:
{
 8007fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007fd4:	4605      	mov	r5, r0
    score1 = 0;
 8007fd6:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
	ballX = 160;
 8007fda:	f204 671c 	addw	r7, r4, #1564	@ 0x61c
    MediumScreenViewBase::setupScreen();
 8007fde:	f7fd faff 	bl	80055e0 <_ZN20MediumScreenViewBase11setupScreenEv>
	ballY = 120;
 8007fe2:	f505 58b1 	add.w	r8, r5, #5664	@ 0x1620
    score1 = 0;
 8007fe6:	2300      	movs	r3, #0
	ballX = 160;
 8007fe8:	4a27      	ldr	r2, [pc, #156]	@ (8008088 <_ZN16MediumScreenView11setupScreenEv+0xb8>)
    score1 = 0;
 8007fea:	f8c4 3638 	str.w	r3, [r4, #1592]	@ 0x638
	score2 = 0;
 8007fee:	f8c4 363c 	str.w	r3, [r4, #1596]	@ 0x63c
	gameOver = false;
 8007ff2:	f884 3640 	strb.w	r3, [r4, #1600]	@ 0x640
	ballVelX = 1.2f;
 8007ff6:	f204 6124 	addw	r1, r4, #1572	@ 0x624
	ballX = 160;
 8007ffa:	603a      	str	r2, [r7, #0]
	ballY = 120;
 8007ffc:	4a23      	ldr	r2, [pc, #140]	@ (800808c <_ZN16MediumScreenView11setupScreenEv+0xbc>)
 8007ffe:	f8c8 2000 	str.w	r2, [r8]
	ballVelX = 1.2f;
 8008002:	4a23      	ldr	r2, [pc, #140]	@ (8008090 <_ZN16MediumScreenView11setupScreenEv+0xc0>)
 8008004:	600a      	str	r2, [r1, #0]
	ballVelY = 1.2f;
 8008006:	f504 61c5 	add.w	r1, r4, #1576	@ 0x628
	ball.invalidate();
 800800a:	f505 7636 	add.w	r6, r5, #728	@ 0x2d8
	ballVelY = 1.2f;
 800800e:	600a      	str	r2, [r1, #0]
	ball.invalidate();
 8008010:	4630      	mov	r0, r6
	waitingForServe = false;
 8008012:	f884 362c 	strb.w	r3, [r4, #1580]	@ 0x62c
	serveDelayTicks = 0;
 8008016:	f8c4 3630 	str.w	r3, [r4, #1584]	@ 0x630
	servingPlayer = 0;
 800801a:	f8c4 3634 	str.w	r3, [r4, #1588]	@ 0x634
    buzzerBeepCounter = 0;
 800801e:	f8c4 3644 	str.w	r3, [r4, #1604]	@ 0x644
    buzzerBeepState = false;
 8008022:	f884 3648 	strb.w	r3, [r4, #1608]	@ 0x648
	ball.invalidate();
 8008026:	f009 f81f 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.moveTo(ballX, ballY);
 800802a:	ed98 7a00 	vldr	s14, [r8]
 800802e:	edd7 7a00 	vldr	s15, [r7]
 8008032:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008036:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800803a:	ee17 3a10 	vmov	r3, s14
 800803e:	b21a      	sxth	r2, r3
 8008040:	ee17 3a90 	vmov	r3, s15
 8008044:	4630      	mov	r0, r6
 8008046:	b219      	sxth	r1, r3
 8008048:	f7f9 f961 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
	ball.invalidate();
 800804c:	4630      	mov	r0, r6
	Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 800804e:	4e11      	ldr	r6, [pc, #68]	@ (8008094 <_ZN16MediumScreenView11setupScreenEv+0xc4>)
	ball.invalidate();
 8008050:	f009 f80a 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008054:	f8d4 3638 	ldr.w	r3, [r4, #1592]	@ 0x638
 8008058:	4632      	mov	r2, r6
 800805a:	210a      	movs	r1, #10
 800805c:	f505 7052 	add.w	r0, r5, #840	@ 0x348
 8008060:	f00f feb6 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	MediumScreenViewBase::score1.invalidate();
 8008064:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8008068:	f00d fb7a 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 800806c:	f8d4 363c 	ldr.w	r3, [r4, #1596]	@ 0x63c
 8008070:	4632      	mov	r2, r6
 8008072:	f505 704d 	add.w	r0, r5, #820	@ 0x334
 8008076:	210a      	movs	r1, #10
 8008078:	f00f feaa 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	MediumScreenViewBase::score2.invalidate();
 800807c:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 8008080:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	MediumScreenViewBase::score2.invalidate();
 8008084:	f00d bb6c 	b.w	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008088:	43200000 	.word	0x43200000
 800808c:	42f00000 	.word	0x42f00000
 8008090:	3f99999a 	.word	0x3f99999a
 8008094:	0802a143 	.word	0x0802a143

08008098 <_ZN16MediumScreenView15handleTickEventEv>:

void MediumScreenView::handleTickEvent()
{
 8008098:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}

    if (gameOver) {
 800809c:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 80080a0:	4604      	mov	r4, r0
    if (gameOver) {
 80080a2:	f895 3640 	ldrb.w	r3, [r5, #1600]	@ 0x640
 80080a6:	2b00      	cmp	r3, #0
 80080a8:	f040 82c5 	bne.w	8008636 <_ZN16MediumScreenView15handleTickEventEv+0x59e>
        return; // Không xử lý nếu trò chơi kết thúc
    }
    // Xử lý bíp buzzer
	if (buzzerBeepCounter > 0) {
 80080ac:	f8d5 3644 	ldr.w	r3, [r5, #1604]	@ 0x644
 80080b0:	2b00      	cmp	r3, #0
 80080b2:	dd1b      	ble.n	80080ec <_ZN16MediumScreenView15handleTickEventEv+0x54>
		if (buzzerBeepCounter % 6 == 0) { // Bíp mỗi 100ms (6 ticks tại 60 FPS)
 80080b4:	2206      	movs	r2, #6
 80080b6:	fb93 f1f2 	sdiv	r1, r3, r2
 80080ba:	fb02 3311 	mls	r3, r2, r1, r3
 80080be:	b953      	cbnz	r3, 80080d6 <_ZN16MediumScreenView15handleTickEventEv+0x3e>
			buzzerBeepState = !buzzerBeepState;
 80080c0:	f895 2648 	ldrb.w	r2, [r5, #1608]	@ 0x648
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 80080c4:	48d1      	ldr	r0, [pc, #836]	@ (800840c <_ZN16MediumScreenView15handleTickEventEv+0x374>)
			buzzerBeepState = !buzzerBeepState;
 80080c6:	f082 0201 	eor.w	r2, r2, #1
 80080ca:	f885 2648 	strb.w	r2, [r5, #1608]	@ 0x648
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 80080ce:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80080d2:	f001 fabb 	bl	800964c <HAL_GPIO_WritePin>
		}
		buzzerBeepCounter--;
 80080d6:	f8d5 2644 	ldr.w	r2, [r5, #1604]	@ 0x644
 80080da:	3a01      	subs	r2, #1
 80080dc:	f8c5 2644 	str.w	r2, [r5, #1604]	@ 0x644
		if (buzzerBeepCounter == 0) {
 80080e0:	b922      	cbnz	r2, 80080ec <_ZN16MediumScreenView15handleTickEventEv+0x54>
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET); // Tắt buzzer sau khi bíp xong
 80080e2:	48ca      	ldr	r0, [pc, #808]	@ (800840c <_ZN16MediumScreenView15handleTickEventEv+0x374>)
 80080e4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80080e8:	f001 fab0 	bl	800964c <HAL_GPIO_WritePin>
		}
	}

    JoystickCommand_t command;
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 80080ec:	4fc8      	ldr	r7, [pc, #800]	@ (8008410 <_ZN16MediumScreenView15handleTickEventEv+0x378>)
 80080ee:	e022      	b.n	8008136 <_ZN16MediumScreenView15handleTickEventEv+0x9e>
        switch (command) {
 80080f0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80080f4:	2b05      	cmp	r3, #5
 80080f6:	d81e      	bhi.n	8008136 <_ZN16MediumScreenView15handleTickEventEv+0x9e>
 80080f8:	e8df f013 	tbh	[pc, r3, lsl #1]
 80080fc:	01630006 	.word	0x01630006
 8008100:	017f016c 	.word	0x017f016c
 8008104:	01d1019a 	.word	0x01d1019a
        return rect.y;
 8008108:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
            case JOY1_LEFT:
				{
					int16_t newY=paddle1.getY()+2;
 800810c:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 800810e:	b236      	sxth	r6, r6
 8008110:	2ec6      	cmp	r6, #198	@ 0xc6
 8008112:	bfa8      	it	ge
 8008114:	26c6      	movge	r6, #198	@ 0xc6
						newY = 198; // Dừng tại cạnh dưới
					}
                    if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008116:	42b3      	cmp	r3, r6
				{
					int16_t newY = paddle1.getY() - 2;
					if (newY < 2) {
						newY = 2; // Dừng tại cạnh trên
					}
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008118:	d00d      	beq.n	8008136 <_ZN16MediumScreenView15handleTickEventEv+0x9e>
						paddle1.invalidate();
 800811a:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 800811e:	4640      	mov	r0, r8
 8008120:	f00d fb1e 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle1.moveTo(paddle1.getX(), newY);
 8008124:	f9b4 10f4 	ldrsh.w	r1, [r4, #244]	@ 0xf4
 8008128:	4632      	mov	r2, r6
					if (newY >198) {
						newY = 198; // Dừng tại cạnh dưới
					}
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
						paddle2.invalidate();
						paddle2.moveTo(paddle2.getX(), newY);
 800812a:	4640      	mov	r0, r8
 800812c:	f7f9 f8ef 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
						paddle2.invalidate();
 8008130:	4640      	mov	r0, r8
 8008132:	f00d fb15 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8008136:	2300      	movs	r3, #0
 8008138:	6838      	ldr	r0, [r7, #0]
 800813a:	461a      	mov	r2, r3
 800813c:	f10d 0107 	add.w	r1, sp, #7
 8008140:	f003 fdf1 	bl	800bd26 <osMessageQueueGet>
 8008144:	2800      	cmp	r0, #0
 8008146:	d0d3      	beq.n	80080f0 <_ZN16MediumScreenView15handleTickEventEv+0x58>
				break;
        }
    }

    // Cập nhật bóng nếu không chờ phát
        if (!waitingForServe) {
 8008148:	f895 362c 	ldrb.w	r3, [r5, #1580]	@ 0x62c
 800814c:	f504 57b1 	add.w	r7, r4, #5664	@ 0x1620
 8008150:	f504 7636 	add.w	r6, r4, #728	@ 0x2d8
 8008154:	2b00      	cmp	r3, #0
 8008156:	f040 8271 	bne.w	800863c <_ZN16MediumScreenView15handleTickEventEv+0x5a4>
            ball.invalidate();
 800815a:	4630      	mov	r0, r6
 800815c:	f008 ff84 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ballX += ballVelX;
 8008160:	f205 6324 	addw	r3, r5, #1572	@ 0x624
 8008164:	ed93 6a00 	vldr	s12, [r3]
 8008168:	f205 631c 	addw	r3, r5, #1564	@ 0x61c
 800816c:	edd3 6a00 	vldr	s13, [r3]
 8008170:	ee76 6a26 	vadd.f32	s13, s12, s13
            ballY += ballVelY;
 8008174:	f505 62c5 	add.w	r2, r5, #1576	@ 0x628
            ballX += ballVelX;
 8008178:	edc3 6a00 	vstr	s13, [r3]
            ballY += ballVelY;
 800817c:	edd2 7a00 	vldr	s15, [r2]
 8008180:	ed97 7a00 	vldr	s14, [r7]
 8008184:	ee37 7a87 	vadd.f32	s14, s15, s14

            // Xử lý va chạm với cạnh trên/dưới
            if (ballY < 0) {
 8008188:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800818c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            ballY += ballVelY;
 8008190:	ed87 7a00 	vstr	s14, [r7]
            if (ballY < 0) {
 8008194:	f140 81b7 	bpl.w	8008506 <_ZN16MediumScreenView15handleTickEventEv+0x46e>
                ballY = 0;
 8008198:	2300      	movs	r3, #0
 800819a:	603b      	str	r3, [r7, #0]
                ballVelY = -ballVelY;
            } else if (ballY + ball.getHeight() > 240) {
                ballY = 240 - ball.getHeight();
                ballVelY = -ballVelY;
 800819c:	eef1 7a67 	vneg.f32	s15, s15
 80081a0:	edc2 7a00 	vstr	s15, [r2]
        return rect.x;
 80081a4:	f9b4 20f4 	ldrsh.w	r2, [r4, #244]	@ 0xf4
            }

            // Xử lý va chạm với paddle1 (bên trái)
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 80081a8:	f9b4 30f8 	ldrsh.w	r3, [r4, #248]	@ 0xf8
 80081ac:	4413      	add	r3, r2
 80081ae:	ee07 3a90 	vmov	s15, r3
 80081b2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
                ballX >= paddle1.getX() &&
                ballY + ball.getHeight() >= paddle1.getY() &&
 80081b6:	edd7 7a00 	vldr	s15, [r7]
 80081ba:	eef4 6ac7 	vcmpe.f32	s13, s14
 80081be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80081c2:	d831      	bhi.n	8008228 <_ZN16MediumScreenView15handleTickEventEv+0x190>
                ballX >= paddle1.getX() &&
 80081c4:	ee05 2a90 	vmov	s11, r2
 80081c8:	eef8 5ae5 	vcvt.f32.s32	s11, s11
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 80081cc:	eef4 6ae5 	vcmpe.f32	s13, s11
 80081d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80081d4:	db28      	blt.n	8008228 <_ZN16MediumScreenView15handleTickEventEv+0x190>
                ballY + ball.getHeight() >= paddle1.getY() &&
 80081d6:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 80081da:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 80081de:	ee06 3a90 	vmov	s13, r3
 80081e2:	ee05 2a90 	vmov	s11, r2
 80081e6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80081ea:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80081ee:	ee76 6aa7 	vadd.f32	s13, s13, s15
                ballX >= paddle1.getX() &&
 80081f2:	eef4 6ae5 	vcmpe.f32	s13, s11
 80081f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80081fa:	db15      	blt.n	8008228 <_ZN16MediumScreenView15handleTickEventEv+0x190>
                ballY <= paddle1.getY() + paddle1.getHeight()) {
 80081fc:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8008200:	4413      	add	r3, r2
 8008202:	ee06 3a90 	vmov	s13, r3
 8008206:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                ballY + ball.getHeight() >= paddle1.getY() &&
 800820a:	eef4 6ae7 	vcmpe.f32	s13, s15
 800820e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008212:	db09      	blt.n	8008228 <_ZN16MediumScreenView15handleTickEventEv+0x190>
                ballX = paddle1.getX() + paddle1.getWidth();
 8008214:	f205 631c 	addw	r3, r5, #1564	@ 0x61c
 8008218:	ed83 7a00 	vstr	s14, [r3]
                ballVelX = -ballVelX;
 800821c:	eeb1 6a46 	vneg.f32	s12, s12
 8008220:	f205 6324 	addw	r3, r5, #1572	@ 0x624
 8008224:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 8008228:	f9b4 02e0 	ldrsh.w	r0, [r4, #736]	@ 0x2e0
        return rect.x;
 800822c:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
            }

            // Xử lý va chạm với paddle2 (bên phải)
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8008230:	ee07 0a10 	vmov	s14, r0
 8008234:	f205 611c 	addw	r1, r5, #1564	@ 0x61c
 8008238:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800823c:	ed91 7a00 	vldr	s14, [r1]
 8008240:	ee76 6a87 	vadd.f32	s13, s13, s14
 8008244:	ee07 3a10 	vmov	s14, r3
 8008248:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
                ballY + ball.getHeight() >= paddle2.getY() &&
 800824c:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008250:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008254:	db39      	blt.n	80082ca <_ZN16MediumScreenView15handleTickEventEv+0x232>
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8008256:	f9b4 2124 	ldrsh.w	r2, [r4, #292]	@ 0x124
 800825a:	441a      	add	r2, r3
 800825c:	ee07 2a10 	vmov	s14, r2
 8008260:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8008264:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008268:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800826c:	d82d      	bhi.n	80082ca <_ZN16MediumScreenView15handleTickEventEv+0x232>
                ballY + ball.getHeight() >= paddle2.getY() &&
 800826e:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
        return rect.y;
 8008272:	f9b4 c122 	ldrsh.w	ip, [r4, #290]	@ 0x122
 8008276:	ee07 2a10 	vmov	s14, r2
 800827a:	ee06 ca90 	vmov	s13, ip
 800827e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008282:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008286:	ee37 7a27 	vadd.f32	s14, s14, s15
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 800828a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800828e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008292:	db1a      	blt.n	80082ca <_ZN16MediumScreenView15handleTickEventEv+0x232>
                ballY <= paddle2.getY() + paddle2.getHeight()) {
 8008294:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	@ 0x126
 8008298:	4462      	add	r2, ip
 800829a:	ee07 2a10 	vmov	s14, r2
 800829e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle2.getY() &&
 80082a2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80082a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082aa:	db0e      	blt.n	80082ca <_ZN16MediumScreenView15handleTickEventEv+0x232>
                ballX = paddle2.getX() - ball.getWidth();
 80082ac:	1a1b      	subs	r3, r3, r0
 80082ae:	ee07 3a10 	vmov	s14, r3
 80082b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballVelX = -ballVelX;
 80082b6:	f205 6324 	addw	r3, r5, #1572	@ 0x624
                ballX = paddle2.getX() - ball.getWidth();
 80082ba:	ed81 7a00 	vstr	s14, [r1]
                ballVelX = -ballVelX;
 80082be:	ed93 7a00 	vldr	s14, [r3]
 80082c2:	eeb1 7a47 	vneg.f32	s14, s14
 80082c6:	ed83 7a00 	vstr	s14, [r3]
            }

            // Xử lý va chạm với bên trái (ballX < 1)
                if (ballX >319) {
 80082ca:	f205 631c 	addw	r3, r5, #1564	@ 0x61c
 80082ce:	edd3 6a00 	vldr	s13, [r3]
 80082d2:	ed9f 7a50 	vldr	s14, [pc, #320]	@ 8008414 <_ZN16MediumScreenView15handleTickEventEv+0x37c>
 80082d6:	eef4 6ac7 	vcmpe.f32	s13, s14
 80082da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082de:	f340 812b 	ble.w	8008538 <_ZN16MediumScreenView15handleTickEventEv+0x4a0>
                    if (ballY > 60 && ballY < 181) {
 80082e2:	eddf 6a51 	vldr	s13, [pc, #324]	@ 8008428 <_ZN16MediumScreenView15handleTickEventEv+0x390>
 80082e6:	eef4 7ae6 	vcmpe.f32	s15, s13
 80082ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082ee:	f340 8182 	ble.w	80085f6 <_ZN16MediumScreenView15handleTickEventEv+0x55e>
 80082f2:	eddf 6a4e 	vldr	s13, [pc, #312]	@ 800842c <_ZN16MediumScreenView15handleTickEventEv+0x394>
 80082f6:	eef4 7ae6 	vcmpe.f32	s15, s13
 80082fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082fe:	f140 817a 	bpl.w	80085f6 <_ZN16MediumScreenView15handleTickEventEv+0x55e>
                        // Bóng trong vùng goal2, cộng điểm cho người chơi 1
                        score1++;
 8008302:	f8d5 3638 	ldr.w	r3, [r5, #1592]	@ 0x638
                        Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008306:	4a44      	ldr	r2, [pc, #272]	@ (8008418 <_ZN16MediumScreenView15handleTickEventEv+0x380>)
                        score1++;
 8008308:	3301      	adds	r3, #1
 800830a:	f8c5 3638 	str.w	r3, [r5, #1592]	@ 0x638
                        Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 800830e:	210a      	movs	r1, #10
 8008310:	f504 7052 	add.w	r0, r4, #840	@ 0x348
 8008314:	f00f fd5c 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        MediumScreenViewBase::score1.invalidate();
 8008318:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 800831c:	f00d fa20 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
						buzzerBeepState = true;
 8008320:	f04f 0801 	mov.w	r8, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8008324:	2312      	movs	r3, #18
 8008326:	f8c5 3644 	str.w	r3, [r5, #1604]	@ 0x644
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 800832a:	4838      	ldr	r0, [pc, #224]	@ (800840c <_ZN16MediumScreenView15handleTickEventEv+0x374>)
						buzzerBeepState = true;
 800832c:	f885 8648 	strb.w	r8, [r5, #1608]	@ 0x648
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8008330:	4642      	mov	r2, r8
 8008332:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008336:	f001 f989 	bl	800964c <HAL_GPIO_WritePin>
                        if (score1 >= 11) {
 800833a:	f8d5 3638 	ldr.w	r3, [r5, #1592]	@ 0x638
 800833e:	2b0a      	cmp	r3, #10
 8008340:	dd05      	ble.n	800834e <_ZN16MediumScreenView15handleTickEventEv+0x2b6>
                            gameOver = true;
                            presenter->goToEndScreen(1);
 8008342:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                            gameOver = true;
 8008344:	f885 8640 	strb.w	r8, [r5, #1600]	@ 0x640
                            presenter->goToEndScreen(1);
 8008348:	4641      	mov	r1, r8
 800834a:	f7ff fded 	bl	8007f28 <_ZN21MediumScreenPresenter13goToEndScreenEi>
        visible = vis;
 800834e:	2300      	movs	r3, #0
 8008350:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                        }
                        ball.setVisible(false);
                        ball.invalidate();
 8008354:	4630      	mov	r0, r6
 8008356:	f008 fe87 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 800835a:	2301      	movs	r3, #1
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 800835c:	223c      	movs	r2, #60	@ 0x3c
                        waitingForServe = true;
 800835e:	f885 362c 	strb.w	r3, [r5, #1580]	@ 0x62c
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8008362:	f8c5 2630 	str.w	r2, [r5, #1584]	@ 0x630
                        servingPlayer = 1; // Người chơi 1 phát bóng
 8008366:	f8c5 3634 	str.w	r3, [r5, #1588]	@ 0x634
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800836a:	f9b4 20f8 	ldrsh.w	r2, [r4, #248]	@ 0xf8
 800836e:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 8008372:	4413      	add	r3, r2
 8008374:	330a      	adds	r3, #10
 8008376:	ee07 3a90 	vmov	s15, r3
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800837a:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800837e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008382:	f205 651c 	addw	r5, r5, #1564	@ 0x61c
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8008386:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 800838a:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800838e:	edc5 7a00 	vstr	s15, [r5]
                        ball.invalidate();
                        waitingForServe = true;
                        serveDelayTicks = 60; // 1 giây với 60 FPS
                        servingPlayer = 2; // Người chơi 2 phát bóng
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8008392:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8008396:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
 800839a:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 800839e:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 80083a2:	ee07 3a10 	vmov	s14, r3
 80083a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80083aa:	ed87 7a00 	vstr	s14, [r7]
                        ball.moveTo(ballX, ballY);
 80083ae:	eebd 7ac7 	vcvt.s32.f32	s14, s14
            if (servingPlayer == 1) {
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
            } else if (servingPlayer == 2) {
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
            }
            ball.moveTo(ballX, ballY);
 80083b2:	ee17 3a10 	vmov	r3, s14
 80083b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80083ba:	b21a      	sxth	r2, r3
 80083bc:	ee17 3a90 	vmov	r3, s15
 80083c0:	e132      	b.n	8008628 <_ZN16MediumScreenView15handleTickEventEv+0x590>
        return rect.y;
 80083c2:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY = paddle1.getY() - 2;
 80083c6:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 80083c8:	b236      	sxth	r6, r6
 80083ca:	2e02      	cmp	r6, #2
 80083cc:	bfb8      	it	lt
 80083ce:	2602      	movlt	r6, #2
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 80083d0:	429e      	cmp	r6, r3
 80083d2:	e6a1      	b.n	8008118 <_ZN16MediumScreenView15handleTickEventEv+0x80>
 80083d4:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY=paddle2.getY()+2;
 80083d8:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 80083da:	b236      	sxth	r6, r6
 80083dc:	2ec6      	cmp	r6, #198	@ 0xc6
 80083de:	bfa8      	it	ge
 80083e0:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 80083e2:	429e      	cmp	r6, r3
 80083e4:	f43f aea7 	beq.w	8008136 <_ZN16MediumScreenView15handleTickEventEv+0x9e>
						paddle2.invalidate();
 80083e8:	f504 788e 	add.w	r8, r4, #284	@ 0x11c
 80083ec:	4640      	mov	r0, r8
 80083ee:	f00d f9b7 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle2.moveTo(paddle2.getX(), newY);
 80083f2:	f9b4 1120 	ldrsh.w	r1, [r4, #288]	@ 0x120
 80083f6:	4632      	mov	r2, r6
 80083f8:	e697      	b.n	800812a <_ZN16MediumScreenView15handleTickEventEv+0x92>
 80083fa:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY = paddle2.getY() - 2;
 80083fe:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8008400:	b236      	sxth	r6, r6
 8008402:	2e02      	cmp	r6, #2
 8008404:	bfb8      	it	lt
 8008406:	2602      	movlt	r6, #2
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008408:	e7eb      	b.n	80083e2 <_ZN16MediumScreenView15handleTickEventEv+0x34a>
 800840a:	bf00      	nop
 800840c:	40020c00 	.word	0x40020c00
 8008410:	20002dc0 	.word	0x20002dc0
 8008414:	439f8000 	.word	0x439f8000
 8008418:	0802a143 	.word	0x0802a143
 800841c:	bf99999a 	.word	0xbf99999a
 8008420:	3f99999a 	.word	0x3f99999a
 8008424:	43700000 	.word	0x43700000
 8008428:	42700000 	.word	0x42700000
 800842c:	43350000 	.word	0x43350000
				if (waitingForServe && servingPlayer == 1) {
 8008430:	f895 362c 	ldrb.w	r3, [r5, #1580]	@ 0x62c
 8008434:	2b00      	cmp	r3, #0
 8008436:	f43f ae7e 	beq.w	8008136 <_ZN16MediumScreenView15handleTickEventEv+0x9e>
 800843a:	f8d5 1634 	ldr.w	r1, [r5, #1588]	@ 0x634
 800843e:	2901      	cmp	r1, #1
 8008440:	f47f ae79 	bne.w	8008136 <_ZN16MediumScreenView15handleTickEventEv+0x9e>
					ballVelX = 1.2f; // Phát bóng sang phải
 8008444:	ed1f 7a0a 	vldr	s14, [pc, #-40]	@ 8008420 <_ZN16MediumScreenView15handleTickEventEv+0x388>
					waitingForServe = false;
 8008448:	2300      	movs	r3, #0
 800844a:	f885 362c 	strb.w	r3, [r5, #1580]	@ 0x62c
					ballVelX = 1.2f; // Phát bóng sang phải
 800844e:	f205 6324 	addw	r3, r5, #1572	@ 0x624
 8008452:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle1.getY() + paddle1.getHeight()/2 > ballY) ? -1.2f : 1.2f;
 8008456:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 800845a:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 800845e:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8008462:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8008466:	ee07 3a90 	vmov	s15, r3
 800846a:	f504 53b1 	add.w	r3, r4, #5664	@ 0x1620
 800846e:	edd3 6a00 	vldr	s13, [r3]
 8008472:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008476:	f505 63c5 	add.w	r3, r5, #1576	@ 0x628
 800847a:	eef4 7ae6 	vcmpe.f32	s15, s13
 800847e:	ed5f 7a19 	vldr	s15, [pc, #-100]	@ 800841c <_ZN16MediumScreenView15handleTickEventEv+0x384>
 8008482:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008486:	bfd8      	it	le
 8008488:	eef0 7a47 	vmovle.f32	s15, s14
 800848c:	edc3 7a00 	vstr	s15, [r3]
        visible = vis;
 8008490:	f884 12fd 	strb.w	r1, [r4, #765]	@ 0x2fd
					ball.invalidate();
 8008494:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
 8008498:	f008 fde6 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 800849c:	e64b      	b.n	8008136 <_ZN16MediumScreenView15handleTickEventEv+0x9e>
				if (waitingForServe && servingPlayer == 2) {
 800849e:	f895 362c 	ldrb.w	r3, [r5, #1580]	@ 0x62c
 80084a2:	2b00      	cmp	r3, #0
 80084a4:	f43f ae47 	beq.w	8008136 <_ZN16MediumScreenView15handleTickEventEv+0x9e>
 80084a8:	f8d5 3634 	ldr.w	r3, [r5, #1588]	@ 0x634
 80084ac:	2b02      	cmp	r3, #2
 80084ae:	f47f ae42 	bne.w	8008136 <_ZN16MediumScreenView15handleTickEventEv+0x9e>
					ballVelX = -1.2f; // Phát bóng sang trái
 80084b2:	ed1f 7a26 	vldr	s14, [pc, #-152]	@ 800841c <_ZN16MediumScreenView15handleTickEventEv+0x384>
					waitingForServe = false;
 80084b6:	2300      	movs	r3, #0
 80084b8:	f885 362c 	strb.w	r3, [r5, #1580]	@ 0x62c
					ballVelX = -1.2f; // Phát bóng sang trái
 80084bc:	f205 6324 	addw	r3, r5, #1572	@ 0x624
 80084c0:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle2.getY() + paddle2.getHeight()/2 > ballY) ? -1.2f : 1.2f;
 80084c4:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 80084c8:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80084cc:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 80084d0:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80084d4:	ee07 3a90 	vmov	s15, r3
 80084d8:	f504 53b1 	add.w	r3, r4, #5664	@ 0x1620
 80084dc:	edd3 6a00 	vldr	s13, [r3]
 80084e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80084e4:	f505 63c5 	add.w	r3, r5, #1576	@ 0x628
 80084e8:	eef4 7ae6 	vcmpe.f32	s15, s13
 80084ec:	ed5f 7a34 	vldr	s15, [pc, #-208]	@ 8008420 <_ZN16MediumScreenView15handleTickEventEv+0x388>
 80084f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80084f4:	bfd8      	it	le
 80084f6:	eeb0 7a67 	vmovle.f32	s14, s15
 80084fa:	ed83 7a00 	vstr	s14, [r3]
 80084fe:	2301      	movs	r3, #1
 8008500:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
 8008504:	e7c6      	b.n	8008494 <_ZN16MediumScreenView15handleTickEventEv+0x3fc>
        return rect.height;
 8008506:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
            } else if (ballY + ball.getHeight() > 240) {
 800850a:	ee05 3a90 	vmov	s11, r3
 800850e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008512:	ee35 7a87 	vadd.f32	s14, s11, s14
 8008516:	ed5f 5a3d 	vldr	s11, [pc, #-244]	@ 8008424 <_ZN16MediumScreenView15handleTickEventEv+0x38c>
 800851a:	eeb4 7ae5 	vcmpe.f32	s14, s11
 800851e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008522:	f77f ae3f 	ble.w	80081a4 <_ZN16MediumScreenView15handleTickEventEv+0x10c>
                ballY = 240 - ball.getHeight();
 8008526:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 800852a:	ee07 3a10 	vmov	s14, r3
 800852e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008532:	ed87 7a00 	vstr	s14, [r7]
 8008536:	e631      	b.n	800819c <_ZN16MediumScreenView15handleTickEventEv+0x104>
                if (ballX <1) {
 8008538:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800853c:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008544:	d563      	bpl.n	800860e <_ZN16MediumScreenView15handleTickEventEv+0x576>
                    if (ballY > 60 && ballY < 181) {
 8008546:	ed5f 6a48 	vldr	s13, [pc, #-288]	@ 8008428 <_ZN16MediumScreenView15handleTickEventEv+0x390>
 800854a:	eef4 7ae6 	vcmpe.f32	s15, s13
 800854e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008552:	dd50      	ble.n	80085f6 <_ZN16MediumScreenView15handleTickEventEv+0x55e>
 8008554:	ed5f 6a4b 	vldr	s13, [pc, #-300]	@ 800842c <_ZN16MediumScreenView15handleTickEventEv+0x394>
 8008558:	eef4 7ae6 	vcmpe.f32	s15, s13
 800855c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008560:	d549      	bpl.n	80085f6 <_ZN16MediumScreenView15handleTickEventEv+0x55e>
                        score2++;
 8008562:	f8d5 363c 	ldr.w	r3, [r5, #1596]	@ 0x63c
                        Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 8008566:	4a51      	ldr	r2, [pc, #324]	@ (80086ac <_ZN16MediumScreenView15handleTickEventEv+0x614>)
                        score2++;
 8008568:	3301      	adds	r3, #1
 800856a:	f8c5 363c 	str.w	r3, [r5, #1596]	@ 0x63c
                        Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 800856e:	210a      	movs	r1, #10
 8008570:	f504 704d 	add.w	r0, r4, #820	@ 0x334
 8008574:	f00f fc2c 	bl	8017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        MediumScreenViewBase::score2.invalidate();
 8008578:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800857c:	f00d f8f0 	bl	8015760 <_ZNK8touchgfx8Drawable10invalidateEv>
						buzzerBeepState = true;
 8008580:	f04f 0801 	mov.w	r8, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8008584:	2312      	movs	r3, #18
 8008586:	f8c5 3644 	str.w	r3, [r5, #1604]	@ 0x644
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 800858a:	4849      	ldr	r0, [pc, #292]	@ (80086b0 <_ZN16MediumScreenView15handleTickEventEv+0x618>)
						buzzerBeepState = true;
 800858c:	f885 8648 	strb.w	r8, [r5, #1608]	@ 0x648
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8008590:	4642      	mov	r2, r8
 8008592:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008596:	f001 f859 	bl	800964c <HAL_GPIO_WritePin>
                        if (score2 >= 11) {
 800859a:	f8d5 363c 	ldr.w	r3, [r5, #1596]	@ 0x63c
 800859e:	2b0a      	cmp	r3, #10
 80085a0:	dd05      	ble.n	80085ae <_ZN16MediumScreenView15handleTickEventEv+0x516>
                            presenter->goToEndScreen(2);
 80085a2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                            gameOver = true;
 80085a4:	f885 8640 	strb.w	r8, [r5, #1600]	@ 0x640
                            presenter->goToEndScreen(2);
 80085a8:	2102      	movs	r1, #2
 80085aa:	f7ff fcbd 	bl	8007f28 <_ZN21MediumScreenPresenter13goToEndScreenEi>
        visible = vis;
 80085ae:	2300      	movs	r3, #0
 80085b0:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                        ball.invalidate();
 80085b4:	4630      	mov	r0, r6
 80085b6:	f008 fd57 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 80085ba:	2301      	movs	r3, #1
 80085bc:	f885 362c 	strb.w	r3, [r5, #1580]	@ 0x62c
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 80085c0:	233c      	movs	r3, #60	@ 0x3c
 80085c2:	f8c5 3630 	str.w	r3, [r5, #1584]	@ 0x630
                        servingPlayer = 2; // Người chơi 2 phát bóng
 80085c6:	2302      	movs	r3, #2
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 80085c8:	f9b4 22e0 	ldrsh.w	r2, [r4, #736]	@ 0x2e0
                        servingPlayer = 2; // Người chơi 2 phát bóng
 80085cc:	f8c5 3634 	str.w	r3, [r5, #1588]	@ 0x634
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 80085d0:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 80085d4:	1a9b      	subs	r3, r3, r2
 80085d6:	3b0a      	subs	r3, #10
 80085d8:	ee07 3a90 	vmov	s15, r3
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 80085dc:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 80085e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80085e4:	f205 651c 	addw	r5, r5, #1564	@ 0x61c
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 80085e8:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 80085ec:	edc5 7a00 	vstr	s15, [r5]
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 80085f0:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 80085f4:	e6cd      	b.n	8008392 <_ZN16MediumScreenView15handleTickEventEv+0x2fa>
                        ballX = 1;
 80085f6:	f205 631c 	addw	r3, r5, #1564	@ 0x61c
 80085fa:	ed83 7a00 	vstr	s14, [r3]
                        ballVelX = -ballVelX;
 80085fe:	f205 6324 	addw	r3, r5, #1572	@ 0x624
 8008602:	ed93 7a00 	vldr	s14, [r3]
 8008606:	eeb1 7a47 	vneg.f32	s14, s14
 800860a:	ed83 7a00 	vstr	s14, [r3]
            ball.moveTo(ballX, ballY);
 800860e:	f205 651c 	addw	r5, r5, #1564	@ 0x61c
 8008612:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008616:	ed95 7a00 	vldr	s14, [r5]
 800861a:	ee17 3a90 	vmov	r3, s15
 800861e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008622:	b21a      	sxth	r2, r3
 8008624:	ee17 3a10 	vmov	r3, s14
            ball.moveTo(ballX, ballY);
 8008628:	4630      	mov	r0, r6
 800862a:	b219      	sxth	r1, r3
 800862c:	f7f8 fe6f 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
            ball.invalidate();
 8008630:	4630      	mov	r0, r6
 8008632:	f008 fd19 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        }
}
 8008636:	b002      	add	sp, #8
 8008638:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            if (serveDelayTicks > 0) {
 800863c:	f8d5 3630 	ldr.w	r3, [r5, #1584]	@ 0x630
 8008640:	2b00      	cmp	r3, #0
 8008642:	dd09      	ble.n	8008658 <_ZN16MediumScreenView15handleTickEventEv+0x5c0>
                serveDelayTicks--;
 8008644:	3b01      	subs	r3, #1
 8008646:	f8c5 3630 	str.w	r3, [r5, #1584]	@ 0x630
                if (serveDelayTicks == 0) {
 800864a:	b92b      	cbnz	r3, 8008658 <_ZN16MediumScreenView15handleTickEventEv+0x5c0>
 800864c:	2301      	movs	r3, #1
 800864e:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                    ball.invalidate();
 8008652:	4630      	mov	r0, r6
 8008654:	f008 fd08 	bl	8011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            if (servingPlayer == 1) {
 8008658:	f8d5 3634 	ldr.w	r3, [r5, #1588]	@ 0x634
 800865c:	2b01      	cmp	r3, #1
 800865e:	d11c      	bne.n	800869a <_ZN16MediumScreenView15handleTickEventEv+0x602>
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8008660:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8008664:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8008668:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 800866c:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8008670:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
 8008674:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8008678:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 800867c:	ee07 3a90 	vmov	s15, r3
 8008680:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008684:	edc7 7a00 	vstr	s15, [r7]
            ball.moveTo(ballX, ballY);
 8008688:	ed97 7a00 	vldr	s14, [r7]
 800868c:	f205 651c 	addw	r5, r5, #1564	@ 0x61c
 8008690:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008694:	edd5 7a00 	vldr	s15, [r5]
 8008698:	e68b      	b.n	80083b2 <_ZN16MediumScreenView15handleTickEventEv+0x31a>
            } else if (servingPlayer == 2) {
 800869a:	2b02      	cmp	r3, #2
 800869c:	d1f4      	bne.n	8008688 <_ZN16MediumScreenView15handleTickEventEv+0x5f0>
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 800869e:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 80086a2:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80086a6:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 80086aa:	e7df      	b.n	800866c <_ZN16MediumScreenView15handleTickEventEv+0x5d4>
 80086ac:	0802a143 	.word	0x0802a143
 80086b0:	40020c00 	.word	0x40020c00

080086b4 <_ZN5ModelC1Ev>:

#include <cstring>
#include <cstdio>

ModelListener* Model::staticListener = nullptr;
Model::Model() : modelListener(0), winner(0), player1Score(0), player2Score(0), gameOver(false)
 80086b4:	2200      	movs	r2, #0
 80086b6:	e9c0 2200 	strd	r2, r2, [r0]
 80086ba:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80086be:	7402      	strb	r2, [r0, #16]
{
}
 80086c0:	4770      	bx	lr
	...

080086c4 <_ZN5Model4tickEv>:

void Model::tick()
{
    // Tick xử lý định kỳ nếu cần
    staticListener = modelListener; // gán mỗi lần để sync
 80086c4:	4b01      	ldr	r3, [pc, #4]	@ (80086cc <_ZN5Model4tickEv+0x8>)
 80086c6:	6802      	ldr	r2, [r0, #0]
 80086c8:	601a      	str	r2, [r3, #0]
}
 80086ca:	4770      	bx	lr
 80086cc:	200031f4 	.word	0x200031f4

080086d0 <_ZN5Model9setWinnerEi>:
void Model::paddle2Action() {
    if (staticListener) staticListener->paddle2Action();
}
void Model::setWinner(int winnerId)
{
    winner = winnerId;
 80086d0:	6041      	str	r1, [r0, #4]
    printf("Model::setWinner: %d\n", winner);
 80086d2:	4801      	ldr	r0, [pc, #4]	@ (80086d8 <_ZN5Model9setWinnerEi+0x8>)
 80086d4:	f01f bd7e 	b.w	80281d4 <iprintf>
 80086d8:	0802a146 	.word	0x0802a146

080086dc <_ZN5Model9getWinnerEi>:
}

int Model::getWinner(int playerId)
{
 80086dc:	b510      	push	{r4, lr}
    int result = (winner == playerId) ? 1 : 0;
 80086de:	6844      	ldr	r4, [r0, #4]
    printf("Model::getWinner: playerId=%d, result=%d\n", playerId, result);
 80086e0:	4804      	ldr	r0, [pc, #16]	@ (80086f4 <_ZN5Model9getWinnerEi+0x18>)
    int result = (winner == playerId) ? 1 : 0;
 80086e2:	1a63      	subs	r3, r4, r1
 80086e4:	425c      	negs	r4, r3
 80086e6:	415c      	adcs	r4, r3
    printf("Model::getWinner: playerId=%d, result=%d\n", playerId, result);
 80086e8:	4622      	mov	r2, r4
 80086ea:	f01f fd73 	bl	80281d4 <iprintf>
    return result;
}
 80086ee:	4620      	mov	r0, r4
 80086f0:	bd10      	pop	{r4, pc}
 80086f2:	bf00      	nop
 80086f4:	0802a15c 	.word	0x0802a15c

080086f8 <_ZN5Model9resetGameEv>:

void Model::resetGame()
{

    player1Score = 0;
 80086f8:	2300      	movs	r3, #0
    player2Score = 0;
 80086fa:	e9c0 3302 	strd	r3, r3, [r0, #8]
    gameOver = false;
 80086fe:	7403      	strb	r3, [r0, #16]
    winner = 0; // Đặt lại winner về 0
 8008700:	6043      	str	r3, [r0, #4]
}
 8008702:	4770      	bx	lr

08008704 <_ZN20StartScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartScreenPresenter() {}
 8008704:	4770      	bx	lr

08008706 <_ZThn4_N20StartScreenPresenterD1Ev>:
 8008706:	3804      	subs	r0, #4
 8008708:	4770      	bx	lr

0800870a <_ZN20StartScreenPresenter10deactivateEv>:
}

void StartScreenPresenter::activate()
{

}
 800870a:	4770      	bx	lr

0800870c <_ZN20StartScreenPresenterD0Ev>:
 800870c:	b510      	push	{r4, lr}
 800870e:	2110      	movs	r1, #16
 8008710:	4604      	mov	r4, r0
 8008712:	f01e fc5f 	bl	8026fd4 <_ZdlPvj>
 8008716:	4620      	mov	r0, r4
 8008718:	bd10      	pop	{r4, pc}

0800871a <_ZThn4_N20StartScreenPresenterD0Ev>:
 800871a:	f1a0 0004 	sub.w	r0, r0, #4
 800871e:	e7f5      	b.n	800870c <_ZN20StartScreenPresenterD0Ev>

08008720 <_ZN20StartScreenPresenterC1ER15StartScreenView>:
 8008720:	2200      	movs	r2, #0
 8008722:	6082      	str	r2, [r0, #8]
    : view(v)
 8008724:	4a02      	ldr	r2, [pc, #8]	@ (8008730 <_ZN20StartScreenPresenterC1ER15StartScreenView+0x10>)
 8008726:	6002      	str	r2, [r0, #0]
 8008728:	3218      	adds	r2, #24
 800872a:	6042      	str	r2, [r0, #4]
 800872c:	60c1      	str	r1, [r0, #12]
}
 800872e:	4770      	bx	lr
 8008730:	0802ae20 	.word	0x0802ae20

08008734 <_ZN15StartScreenView14tearDownScreenEv>:
}

void StartScreenView::tearDownScreen()
{
    StartScreenViewBase::tearDownScreen();
}
 8008734:	4770      	bx	lr
	...

08008738 <_ZN15StartScreenViewD1Ev>:

class StartScreenView : public StartScreenViewBase
{
public:
    StartScreenView();
    virtual ~StartScreenView() {}
 8008738:	b510      	push	{r4, lr}
 800873a:	4b03      	ldr	r3, [pc, #12]	@ (8008748 <_ZN15StartScreenViewD1Ev+0x10>)
 800873c:	6003      	str	r3, [r0, #0]
 800873e:	4604      	mov	r4, r0
 8008740:	f7fd fa0a 	bl	8005b58 <_ZN19StartScreenViewBaseD1Ev>
 8008744:	4620      	mov	r0, r4
 8008746:	bd10      	pop	{r4, pc}
 8008748:	0802ae60 	.word	0x0802ae60

0800874c <_ZN15StartScreenViewD0Ev>:
 800874c:	b510      	push	{r4, lr}
 800874e:	4604      	mov	r4, r0
 8008750:	f7ff fff2 	bl	8008738 <_ZN15StartScreenViewD1Ev>
 8008754:	4620      	mov	r0, r4
 8008756:	f641 017c 	movw	r1, #6268	@ 0x187c
 800875a:	f01e fc3b 	bl	8026fd4 <_ZdlPvj>
 800875e:	4620      	mov	r0, r4
 8008760:	bd10      	pop	{r4, pc}
	...

08008764 <_ZN15StartScreenViewC1Ev>:
StartScreenView::StartScreenView()
 8008764:	b510      	push	{r4, lr}
 8008766:	4604      	mov	r4, r0
 8008768:	f7fd fa3c 	bl	8005be4 <_ZN19StartScreenViewBaseC1Ev>
 800876c:	4b01      	ldr	r3, [pc, #4]	@ (8008774 <_ZN15StartScreenViewC1Ev+0x10>)
 800876e:	6023      	str	r3, [r4, #0]
}
 8008770:	4620      	mov	r0, r4
 8008772:	bd10      	pop	{r4, pc}
 8008774:	0802ae60 	.word	0x0802ae60

08008778 <_ZN15StartScreenView11setupScreenEv>:
    StartScreenViewBase::setupScreen();
 8008778:	f7fd b9cc 	b.w	8005b14 <_ZN19StartScreenViewBase11setupScreenEv>

0800877c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800877c:	20f0      	movs	r0, #240	@ 0xf0
 800877e:	4770      	bx	lr

08008780 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008780:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8008784:	4770      	bx	lr

08008786 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008786:	2029      	movs	r0, #41	@ 0x29
 8008788:	f7f9 bb3c 	b.w	8001e04 <LCD_IO_WriteReg>

0800878c <ili9341_DisplayOff>:
 800878c:	2028      	movs	r0, #40	@ 0x28
 800878e:	f7f9 bb39 	b.w	8001e04 <LCD_IO_WriteReg>

08008792 <ili9341_Init>:
{
 8008792:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008794:	f7f9 fb0a 	bl	8001dac <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008798:	20ca      	movs	r0, #202	@ 0xca
 800879a:	f7f9 fb33 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800879e:	20c3      	movs	r0, #195	@ 0xc3
 80087a0:	f7f9 fb14 	bl	8001dcc <LCD_IO_WriteData>
 80087a4:	2008      	movs	r0, #8
 80087a6:	f7f9 fb11 	bl	8001dcc <LCD_IO_WriteData>
 80087aa:	2050      	movs	r0, #80	@ 0x50
 80087ac:	f7f9 fb0e 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80087b0:	20cf      	movs	r0, #207	@ 0xcf
 80087b2:	f7f9 fb27 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80087b6:	2000      	movs	r0, #0
 80087b8:	f7f9 fb08 	bl	8001dcc <LCD_IO_WriteData>
 80087bc:	20c1      	movs	r0, #193	@ 0xc1
 80087be:	f7f9 fb05 	bl	8001dcc <LCD_IO_WriteData>
 80087c2:	2030      	movs	r0, #48	@ 0x30
 80087c4:	f7f9 fb02 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80087c8:	20ed      	movs	r0, #237	@ 0xed
 80087ca:	f7f9 fb1b 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80087ce:	2064      	movs	r0, #100	@ 0x64
 80087d0:	f7f9 fafc 	bl	8001dcc <LCD_IO_WriteData>
 80087d4:	2003      	movs	r0, #3
 80087d6:	f7f9 faf9 	bl	8001dcc <LCD_IO_WriteData>
 80087da:	2012      	movs	r0, #18
 80087dc:	f7f9 faf6 	bl	8001dcc <LCD_IO_WriteData>
 80087e0:	2081      	movs	r0, #129	@ 0x81
 80087e2:	f7f9 faf3 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80087e6:	20e8      	movs	r0, #232	@ 0xe8
 80087e8:	f7f9 fb0c 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80087ec:	2085      	movs	r0, #133	@ 0x85
 80087ee:	f7f9 faed 	bl	8001dcc <LCD_IO_WriteData>
 80087f2:	2000      	movs	r0, #0
 80087f4:	f7f9 faea 	bl	8001dcc <LCD_IO_WriteData>
 80087f8:	2078      	movs	r0, #120	@ 0x78
 80087fa:	f7f9 fae7 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80087fe:	20cb      	movs	r0, #203	@ 0xcb
 8008800:	f7f9 fb00 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008804:	2039      	movs	r0, #57	@ 0x39
 8008806:	f7f9 fae1 	bl	8001dcc <LCD_IO_WriteData>
 800880a:	202c      	movs	r0, #44	@ 0x2c
 800880c:	f7f9 fade 	bl	8001dcc <LCD_IO_WriteData>
 8008810:	2000      	movs	r0, #0
 8008812:	f7f9 fadb 	bl	8001dcc <LCD_IO_WriteData>
 8008816:	2034      	movs	r0, #52	@ 0x34
 8008818:	f7f9 fad8 	bl	8001dcc <LCD_IO_WriteData>
 800881c:	2002      	movs	r0, #2
 800881e:	f7f9 fad5 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008822:	20f7      	movs	r0, #247	@ 0xf7
 8008824:	f7f9 faee 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008828:	2020      	movs	r0, #32
 800882a:	f7f9 facf 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800882e:	20ea      	movs	r0, #234	@ 0xea
 8008830:	f7f9 fae8 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008834:	2000      	movs	r0, #0
 8008836:	f7f9 fac9 	bl	8001dcc <LCD_IO_WriteData>
 800883a:	2000      	movs	r0, #0
 800883c:	f7f9 fac6 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008840:	20b1      	movs	r0, #177	@ 0xb1
 8008842:	f7f9 fadf 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008846:	2000      	movs	r0, #0
 8008848:	f7f9 fac0 	bl	8001dcc <LCD_IO_WriteData>
 800884c:	201b      	movs	r0, #27
 800884e:	f7f9 fabd 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008852:	20b6      	movs	r0, #182	@ 0xb6
 8008854:	f7f9 fad6 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008858:	200a      	movs	r0, #10
 800885a:	f7f9 fab7 	bl	8001dcc <LCD_IO_WriteData>
 800885e:	20a2      	movs	r0, #162	@ 0xa2
 8008860:	f7f9 fab4 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008864:	20c0      	movs	r0, #192	@ 0xc0
 8008866:	f7f9 facd 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800886a:	2010      	movs	r0, #16
 800886c:	f7f9 faae 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008870:	20c1      	movs	r0, #193	@ 0xc1
 8008872:	f7f9 fac7 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008876:	2010      	movs	r0, #16
 8008878:	f7f9 faa8 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800887c:	20c5      	movs	r0, #197	@ 0xc5
 800887e:	f7f9 fac1 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008882:	2045      	movs	r0, #69	@ 0x45
 8008884:	f7f9 faa2 	bl	8001dcc <LCD_IO_WriteData>
 8008888:	2015      	movs	r0, #21
 800888a:	f7f9 fa9f 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800888e:	20c7      	movs	r0, #199	@ 0xc7
 8008890:	f7f9 fab8 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008894:	2090      	movs	r0, #144	@ 0x90
 8008896:	f7f9 fa99 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800889a:	2036      	movs	r0, #54	@ 0x36
 800889c:	f7f9 fab2 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088a0:	20c8      	movs	r0, #200	@ 0xc8
 80088a2:	f7f9 fa93 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088a6:	20f2      	movs	r0, #242	@ 0xf2
 80088a8:	f7f9 faac 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088ac:	2000      	movs	r0, #0
 80088ae:	f7f9 fa8d 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088b2:	20b0      	movs	r0, #176	@ 0xb0
 80088b4:	f7f9 faa6 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088b8:	20c2      	movs	r0, #194	@ 0xc2
 80088ba:	f7f9 fa87 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088be:	20b6      	movs	r0, #182	@ 0xb6
 80088c0:	f7f9 faa0 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088c4:	200a      	movs	r0, #10
 80088c6:	f7f9 fa81 	bl	8001dcc <LCD_IO_WriteData>
 80088ca:	20a7      	movs	r0, #167	@ 0xa7
 80088cc:	f7f9 fa7e 	bl	8001dcc <LCD_IO_WriteData>
 80088d0:	2027      	movs	r0, #39	@ 0x27
 80088d2:	f7f9 fa7b 	bl	8001dcc <LCD_IO_WriteData>
 80088d6:	2004      	movs	r0, #4
 80088d8:	f7f9 fa78 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088dc:	202a      	movs	r0, #42	@ 0x2a
 80088de:	f7f9 fa91 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088e2:	2000      	movs	r0, #0
 80088e4:	f7f9 fa72 	bl	8001dcc <LCD_IO_WriteData>
 80088e8:	2000      	movs	r0, #0
 80088ea:	f7f9 fa6f 	bl	8001dcc <LCD_IO_WriteData>
 80088ee:	2000      	movs	r0, #0
 80088f0:	f7f9 fa6c 	bl	8001dcc <LCD_IO_WriteData>
 80088f4:	20ef      	movs	r0, #239	@ 0xef
 80088f6:	f7f9 fa69 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088fa:	202b      	movs	r0, #43	@ 0x2b
 80088fc:	f7f9 fa82 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008900:	2000      	movs	r0, #0
 8008902:	f7f9 fa63 	bl	8001dcc <LCD_IO_WriteData>
 8008906:	2000      	movs	r0, #0
 8008908:	f7f9 fa60 	bl	8001dcc <LCD_IO_WriteData>
 800890c:	2001      	movs	r0, #1
 800890e:	f7f9 fa5d 	bl	8001dcc <LCD_IO_WriteData>
 8008912:	203f      	movs	r0, #63	@ 0x3f
 8008914:	f7f9 fa5a 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008918:	20f6      	movs	r0, #246	@ 0xf6
 800891a:	f7f9 fa73 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800891e:	2001      	movs	r0, #1
 8008920:	f7f9 fa54 	bl	8001dcc <LCD_IO_WriteData>
 8008924:	2000      	movs	r0, #0
 8008926:	f7f9 fa51 	bl	8001dcc <LCD_IO_WriteData>
 800892a:	2006      	movs	r0, #6
 800892c:	f7f9 fa4e 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008930:	202c      	movs	r0, #44	@ 0x2c
 8008932:	f7f9 fa67 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008936:	20c8      	movs	r0, #200	@ 0xc8
 8008938:	f7f9 fab2 	bl	8001ea0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800893c:	2026      	movs	r0, #38	@ 0x26
 800893e:	f7f9 fa61 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008942:	2001      	movs	r0, #1
 8008944:	f7f9 fa42 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008948:	20e0      	movs	r0, #224	@ 0xe0
 800894a:	f7f9 fa5b 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800894e:	200f      	movs	r0, #15
 8008950:	f7f9 fa3c 	bl	8001dcc <LCD_IO_WriteData>
 8008954:	2029      	movs	r0, #41	@ 0x29
 8008956:	f7f9 fa39 	bl	8001dcc <LCD_IO_WriteData>
 800895a:	2024      	movs	r0, #36	@ 0x24
 800895c:	f7f9 fa36 	bl	8001dcc <LCD_IO_WriteData>
 8008960:	200c      	movs	r0, #12
 8008962:	f7f9 fa33 	bl	8001dcc <LCD_IO_WriteData>
 8008966:	200e      	movs	r0, #14
 8008968:	f7f9 fa30 	bl	8001dcc <LCD_IO_WriteData>
 800896c:	2009      	movs	r0, #9
 800896e:	f7f9 fa2d 	bl	8001dcc <LCD_IO_WriteData>
 8008972:	204e      	movs	r0, #78	@ 0x4e
 8008974:	f7f9 fa2a 	bl	8001dcc <LCD_IO_WriteData>
 8008978:	2078      	movs	r0, #120	@ 0x78
 800897a:	f7f9 fa27 	bl	8001dcc <LCD_IO_WriteData>
 800897e:	203c      	movs	r0, #60	@ 0x3c
 8008980:	f7f9 fa24 	bl	8001dcc <LCD_IO_WriteData>
 8008984:	2009      	movs	r0, #9
 8008986:	f7f9 fa21 	bl	8001dcc <LCD_IO_WriteData>
 800898a:	2013      	movs	r0, #19
 800898c:	f7f9 fa1e 	bl	8001dcc <LCD_IO_WriteData>
 8008990:	2005      	movs	r0, #5
 8008992:	f7f9 fa1b 	bl	8001dcc <LCD_IO_WriteData>
 8008996:	2017      	movs	r0, #23
 8008998:	f7f9 fa18 	bl	8001dcc <LCD_IO_WriteData>
 800899c:	2011      	movs	r0, #17
 800899e:	f7f9 fa15 	bl	8001dcc <LCD_IO_WriteData>
 80089a2:	2000      	movs	r0, #0
 80089a4:	f7f9 fa12 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089a8:	20e1      	movs	r0, #225	@ 0xe1
 80089aa:	f7f9 fa2b 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089ae:	2000      	movs	r0, #0
 80089b0:	f7f9 fa0c 	bl	8001dcc <LCD_IO_WriteData>
 80089b4:	2016      	movs	r0, #22
 80089b6:	f7f9 fa09 	bl	8001dcc <LCD_IO_WriteData>
 80089ba:	201b      	movs	r0, #27
 80089bc:	f7f9 fa06 	bl	8001dcc <LCD_IO_WriteData>
 80089c0:	2004      	movs	r0, #4
 80089c2:	f7f9 fa03 	bl	8001dcc <LCD_IO_WriteData>
 80089c6:	2011      	movs	r0, #17
 80089c8:	f7f9 fa00 	bl	8001dcc <LCD_IO_WriteData>
 80089cc:	2007      	movs	r0, #7
 80089ce:	f7f9 f9fd 	bl	8001dcc <LCD_IO_WriteData>
 80089d2:	2031      	movs	r0, #49	@ 0x31
 80089d4:	f7f9 f9fa 	bl	8001dcc <LCD_IO_WriteData>
 80089d8:	2033      	movs	r0, #51	@ 0x33
 80089da:	f7f9 f9f7 	bl	8001dcc <LCD_IO_WriteData>
 80089de:	2042      	movs	r0, #66	@ 0x42
 80089e0:	f7f9 f9f4 	bl	8001dcc <LCD_IO_WriteData>
 80089e4:	2005      	movs	r0, #5
 80089e6:	f7f9 f9f1 	bl	8001dcc <LCD_IO_WriteData>
 80089ea:	200c      	movs	r0, #12
 80089ec:	f7f9 f9ee 	bl	8001dcc <LCD_IO_WriteData>
 80089f0:	200a      	movs	r0, #10
 80089f2:	f7f9 f9eb 	bl	8001dcc <LCD_IO_WriteData>
 80089f6:	2028      	movs	r0, #40	@ 0x28
 80089f8:	f7f9 f9e8 	bl	8001dcc <LCD_IO_WriteData>
 80089fc:	202f      	movs	r0, #47	@ 0x2f
 80089fe:	f7f9 f9e5 	bl	8001dcc <LCD_IO_WriteData>
 8008a02:	200f      	movs	r0, #15
 8008a04:	f7f9 f9e2 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a08:	2011      	movs	r0, #17
 8008a0a:	f7f9 f9fb 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008a0e:	20c8      	movs	r0, #200	@ 0xc8
 8008a10:	f7f9 fa46 	bl	8001ea0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008a14:	2029      	movs	r0, #41	@ 0x29
 8008a16:	f7f9 f9f5 	bl	8001e04 <LCD_IO_WriteReg>
}
 8008a1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008a1e:	202c      	movs	r0, #44	@ 0x2c
 8008a20:	f7f9 b9f0 	b.w	8001e04 <LCD_IO_WriteReg>

08008a24 <ili9341_ReadID>:
{
 8008a24:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008a26:	f7f9 f9c1 	bl	8001dac <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008a2a:	2103      	movs	r1, #3
 8008a2c:	20d3      	movs	r0, #211	@ 0xd3
 8008a2e:	f7f9 fa05 	bl	8001e3c <LCD_IO_ReadData>
}
 8008a32:	b280      	uxth	r0, r0
 8008a34:	bd08      	pop	{r3, pc}

08008a36 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8008a36:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008a38:	b2c4      	uxtb	r4, r0
 8008a3a:	2202      	movs	r2, #2
 8008a3c:	2103      	movs	r1, #3
 8008a3e:	4620      	mov	r0, r4
 8008a40:	f7f9 f96a 	bl	8001d18 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8008a44:	200a      	movs	r0, #10
 8008a46:	f7f9 f9af 	bl	8001da8 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008a4a:	4620      	mov	r0, r4
 8008a4c:	2200      	movs	r2, #0
 8008a4e:	2103      	movs	r1, #3
 8008a50:	f7f9 f962 	bl	8001d18 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8008a54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008a58:	2002      	movs	r0, #2
 8008a5a:	f7f9 b9a5 	b.w	8001da8 <IOE_Delay>

08008a5e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8008a5e:	b538      	push	{r3, r4, r5, lr}
 8008a60:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008a62:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8008a64:	f7f9 f956 	bl	8001d14 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008a68:	2100      	movs	r1, #0
 8008a6a:	4620      	mov	r0, r4
 8008a6c:	f7f9 f96c 	bl	8001d48 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008a70:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008a72:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008a74:	4620      	mov	r0, r4
 8008a76:	f7f9 f967 	bl	8001d48 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008a7a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8008a7e:	b280      	uxth	r0, r0
 8008a80:	bd38      	pop	{r3, r4, r5, pc}

08008a82 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008a82:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008a84:	b2c4      	uxtb	r4, r0
 8008a86:	2140      	movs	r1, #64	@ 0x40
 8008a88:	4620      	mov	r0, r4
 8008a8a:	f7f9 f95d 	bl	8001d48 <IOE_Read>
  
  if(state > 0)
 8008a8e:	0603      	lsls	r3, r0, #24
 8008a90:	d507      	bpl.n	8008aa2 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008a92:	214c      	movs	r1, #76	@ 0x4c
 8008a94:	4620      	mov	r0, r4
 8008a96:	f7f9 f957 	bl	8001d48 <IOE_Read>
 8008a9a:	3800      	subs	r0, #0
 8008a9c:	bf18      	it	ne
 8008a9e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8008aa0:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008aa2:	2201      	movs	r2, #1
 8008aa4:	214b      	movs	r1, #75	@ 0x4b
 8008aa6:	4620      	mov	r0, r4
 8008aa8:	f7f9 f936 	bl	8001d18 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008aac:	4620      	mov	r0, r4
 8008aae:	2200      	movs	r2, #0
 8008ab0:	214b      	movs	r1, #75	@ 0x4b
 8008ab2:	f7f9 f931 	bl	8001d18 <IOE_Write>
  uint8_t ret = 0;
 8008ab6:	2000      	movs	r0, #0
 8008ab8:	e7f2      	b.n	8008aa0 <stmpe811_TS_DetectTouch+0x1e>

08008aba <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8008aba:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008abc:	2304      	movs	r3, #4
 8008abe:	b2c4      	uxtb	r4, r0
{
 8008ac0:	460e      	mov	r6, r1
 8008ac2:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008ac4:	21d7      	movs	r1, #215	@ 0xd7
 8008ac6:	eb0d 0203 	add.w	r2, sp, r3
 8008aca:	4620      	mov	r0, r4
 8008acc:	f7f9 f956 	bl	8001d7c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008ad0:	9b01      	ldr	r3, [sp, #4]
 8008ad2:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008ad4:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008ad6:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008ada:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008adc:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008ade:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008ae0:	2201      	movs	r2, #1
 8008ae2:	214b      	movs	r1, #75	@ 0x4b
 8008ae4:	f7f9 f918 	bl	8001d18 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008ae8:	2200      	movs	r2, #0
 8008aea:	214b      	movs	r1, #75	@ 0x4b
 8008aec:	4620      	mov	r0, r4
 8008aee:	f7f9 f913 	bl	8001d18 <IOE_Write>
}
 8008af2:	b002      	add	sp, #8
 8008af4:	bd70      	pop	{r4, r5, r6, pc}
	...

08008af8 <stmpe811_Init>:
{
 8008af8:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008afa:	4a0a      	ldr	r2, [pc, #40]	@ (8008b24 <stmpe811_Init+0x2c>)
 8008afc:	7813      	ldrb	r3, [r2, #0]
 8008afe:	4298      	cmp	r0, r3
{
 8008b00:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8008b02:	d00d      	beq.n	8008b20 <stmpe811_Init+0x28>
 8008b04:	7851      	ldrb	r1, [r2, #1]
 8008b06:	4288      	cmp	r0, r1
 8008b08:	d00a      	beq.n	8008b20 <stmpe811_Init+0x28>
 8008b0a:	b10b      	cbz	r3, 8008b10 <stmpe811_Init+0x18>
 8008b0c:	b941      	cbnz	r1, 8008b20 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8008b0e:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8008b10:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008b12:	f7f9 f8ff 	bl	8001d14 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8008b16:	4620      	mov	r0, r4
}
 8008b18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8008b1c:	f7ff bf8b 	b.w	8008a36 <stmpe811_Reset>
}
 8008b20:	bd10      	pop	{r4, pc}
 8008b22:	bf00      	nop
 8008b24:	200031f8 	.word	0x200031f8

08008b28 <stmpe811_EnableGlobalIT>:
{
 8008b28:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008b2a:	b2c4      	uxtb	r4, r0
 8008b2c:	2109      	movs	r1, #9
 8008b2e:	4620      	mov	r0, r4
 8008b30:	f7f9 f90a 	bl	8001d48 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008b34:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008b38:	b2d2      	uxtb	r2, r2
 8008b3a:	4620      	mov	r0, r4
 8008b3c:	2109      	movs	r1, #9
}
 8008b3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008b42:	f7f9 b8e9 	b.w	8001d18 <IOE_Write>

08008b46 <stmpe811_DisableGlobalIT>:
{
 8008b46:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008b48:	b2c4      	uxtb	r4, r0
 8008b4a:	2109      	movs	r1, #9
 8008b4c:	4620      	mov	r0, r4
 8008b4e:	f7f9 f8fb 	bl	8001d48 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008b52:	2109      	movs	r1, #9
 8008b54:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8008b58:	4620      	mov	r0, r4
}
 8008b5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008b5e:	f7f9 b8db 	b.w	8001d18 <IOE_Write>

08008b62 <stmpe811_EnableITSource>:
{
 8008b62:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008b64:	b2c4      	uxtb	r4, r0
{
 8008b66:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008b68:	4620      	mov	r0, r4
 8008b6a:	210a      	movs	r1, #10
 8008b6c:	f7f9 f8ec 	bl	8001d48 <IOE_Read>
  tmp |= Source; 
 8008b70:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008b74:	b2d2      	uxtb	r2, r2
 8008b76:	4620      	mov	r0, r4
 8008b78:	210a      	movs	r1, #10
}
 8008b7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008b7e:	f7f9 b8cb 	b.w	8001d18 <IOE_Write>

08008b82 <stmpe811_TS_EnableIT>:
{
 8008b82:	b510      	push	{r4, lr}
 8008b84:	4604      	mov	r4, r0
  IOE_ITConfig();
 8008b86:	f7f9 f8c6 	bl	8001d16 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8008b8a:	4620      	mov	r0, r4
 8008b8c:	211f      	movs	r1, #31
 8008b8e:	f7ff ffe8 	bl	8008b62 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8008b92:	4620      	mov	r0, r4
}
 8008b94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8008b98:	f7ff bfc6 	b.w	8008b28 <stmpe811_EnableGlobalIT>

08008b9c <stmpe811_DisableITSource>:
{
 8008b9c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008b9e:	b2c4      	uxtb	r4, r0
{
 8008ba0:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008ba2:	4620      	mov	r0, r4
 8008ba4:	210a      	movs	r1, #10
 8008ba6:	f7f9 f8cf 	bl	8001d48 <IOE_Read>
  tmp &= ~Source; 
 8008baa:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008bae:	b2d2      	uxtb	r2, r2
 8008bb0:	4620      	mov	r0, r4
 8008bb2:	210a      	movs	r1, #10
}
 8008bb4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008bb8:	f7f9 b8ae 	b.w	8001d18 <IOE_Write>

08008bbc <stmpe811_TS_DisableIT>:
{
 8008bbc:	b510      	push	{r4, lr}
 8008bbe:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8008bc0:	f7ff ffc1 	bl	8008b46 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8008bc4:	4620      	mov	r0, r4
 8008bc6:	211f      	movs	r1, #31
}
 8008bc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8008bcc:	f7ff bfe6 	b.w	8008b9c <stmpe811_DisableITSource>

08008bd0 <stmpe811_ReadGITStatus>:
{
 8008bd0:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008bd2:	b2c0      	uxtb	r0, r0
{
 8008bd4:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008bd6:	210b      	movs	r1, #11
 8008bd8:	f7f9 f8b6 	bl	8001d48 <IOE_Read>
}
 8008bdc:	4020      	ands	r0, r4
 8008bde:	bd10      	pop	{r4, pc}

08008be0 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8008be0:	211f      	movs	r1, #31
 8008be2:	f7ff bff5 	b.w	8008bd0 <stmpe811_ReadGITStatus>

08008be6 <stmpe811_ClearGlobalIT>:
{
 8008be6:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008be8:	b2c0      	uxtb	r0, r0
 8008bea:	210b      	movs	r1, #11
 8008bec:	f7f9 b894 	b.w	8001d18 <IOE_Write>

08008bf0 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8008bf0:	211f      	movs	r1, #31
 8008bf2:	f7ff bff8 	b.w	8008be6 <stmpe811_ClearGlobalIT>

08008bf6 <stmpe811_IO_EnableAF>:
{
 8008bf6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008bf8:	b2c4      	uxtb	r4, r0
{
 8008bfa:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008bfc:	4620      	mov	r0, r4
 8008bfe:	2117      	movs	r1, #23
 8008c00:	f7f9 f8a2 	bl	8001d48 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8008c04:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008c08:	b2d2      	uxtb	r2, r2
 8008c0a:	4620      	mov	r0, r4
 8008c0c:	2117      	movs	r1, #23
}
 8008c0e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008c12:	f7f9 b881 	b.w	8001d18 <IOE_Write>

08008c16 <stmpe811_TS_Start>:
{
 8008c16:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008c18:	b2c4      	uxtb	r4, r0
{
 8008c1a:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008c1c:	2104      	movs	r1, #4
 8008c1e:	4620      	mov	r0, r4
 8008c20:	f7f9 f892 	bl	8001d48 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008c24:	2104      	movs	r1, #4
 8008c26:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008c2a:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008c2c:	4620      	mov	r0, r4
 8008c2e:	f7f9 f873 	bl	8001d18 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8008c32:	4630      	mov	r0, r6
 8008c34:	21f0      	movs	r1, #240	@ 0xf0
 8008c36:	f7ff ffde 	bl	8008bf6 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008c3a:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8008c3e:	4620      	mov	r0, r4
 8008c40:	2104      	movs	r1, #4
 8008c42:	f7f9 f869 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008c46:	2249      	movs	r2, #73	@ 0x49
 8008c48:	2120      	movs	r1, #32
 8008c4a:	4620      	mov	r0, r4
 8008c4c:	f7f9 f864 	bl	8001d18 <IOE_Write>
  IOE_Delay(2); 
 8008c50:	2002      	movs	r0, #2
 8008c52:	f7f9 f8a9 	bl	8001da8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008c56:	4620      	mov	r0, r4
 8008c58:	2201      	movs	r2, #1
 8008c5a:	2121      	movs	r1, #33	@ 0x21
 8008c5c:	f7f9 f85c 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008c60:	4620      	mov	r0, r4
 8008c62:	229a      	movs	r2, #154	@ 0x9a
 8008c64:	2141      	movs	r1, #65	@ 0x41
 8008c66:	f7f9 f857 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008c6a:	4620      	mov	r0, r4
 8008c6c:	2201      	movs	r2, #1
 8008c6e:	214a      	movs	r1, #74	@ 0x4a
 8008c70:	f7f9 f852 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008c74:	4620      	mov	r0, r4
 8008c76:	2201      	movs	r2, #1
 8008c78:	214b      	movs	r1, #75	@ 0x4b
 8008c7a:	f7f9 f84d 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008c7e:	4620      	mov	r0, r4
 8008c80:	2200      	movs	r2, #0
 8008c82:	214b      	movs	r1, #75	@ 0x4b
 8008c84:	f7f9 f848 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008c88:	4620      	mov	r0, r4
 8008c8a:	2201      	movs	r2, #1
 8008c8c:	2156      	movs	r1, #86	@ 0x56
 8008c8e:	f7f9 f843 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008c92:	4620      	mov	r0, r4
 8008c94:	2201      	movs	r2, #1
 8008c96:	2158      	movs	r1, #88	@ 0x58
 8008c98:	f7f9 f83e 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008c9c:	4620      	mov	r0, r4
 8008c9e:	2201      	movs	r2, #1
 8008ca0:	2140      	movs	r1, #64	@ 0x40
 8008ca2:	f7f9 f839 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008ca6:	4620      	mov	r0, r4
 8008ca8:	22ff      	movs	r2, #255	@ 0xff
 8008caa:	210b      	movs	r1, #11
 8008cac:	f7f9 f834 	bl	8001d18 <IOE_Write>
}
 8008cb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8008cb4:	2002      	movs	r0, #2
 8008cb6:	f7f9 b877 	b.w	8001da8 <IOE_Delay>
	...

08008cbc <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008cbc:	4b05      	ldr	r3, [pc, #20]	@ (8008cd4 <SystemInit+0x18>)
 8008cbe:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8008cc2:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8008cc6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008cca:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8008cce:	609a      	str	r2, [r3, #8]
#endif
}
 8008cd0:	4770      	bx	lr
 8008cd2:	bf00      	nop
 8008cd4:	e000ed00 	.word	0xe000ed00

08008cd8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8008cd8:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8008cda:	4b0b      	ldr	r3, [pc, #44]	@ (8008d08 <HAL_Init+0x30>)
 8008cdc:	681a      	ldr	r2, [r3, #0]
 8008cde:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8008ce2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008ce4:	681a      	ldr	r2, [r3, #0]
 8008ce6:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8008cea:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008cec:	681a      	ldr	r2, [r3, #0]
 8008cee:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8008cf2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008cf4:	2003      	movs	r0, #3
 8008cf6:	f000 fa63 	bl	80091c0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8008cfa:	2000      	movs	r0, #0
 8008cfc:	f7f9 fb12 	bl	8002324 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8008d00:	f7f9 f8dc 	bl	8001ebc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8008d04:	2000      	movs	r0, #0
 8008d06:	bd08      	pop	{r3, pc}
 8008d08:	40023c00 	.word	0x40023c00

08008d0c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008d0c:	4a03      	ldr	r2, [pc, #12]	@ (8008d1c <HAL_IncTick+0x10>)
 8008d0e:	4b04      	ldr	r3, [pc, #16]	@ (8008d20 <HAL_IncTick+0x14>)
 8008d10:	6811      	ldr	r1, [r2, #0]
 8008d12:	781b      	ldrb	r3, [r3, #0]
 8008d14:	440b      	add	r3, r1
 8008d16:	6013      	str	r3, [r2, #0]
}
 8008d18:	4770      	bx	lr
 8008d1a:	bf00      	nop
 8008d1c:	200031fc 	.word	0x200031fc
 8008d20:	20000078 	.word	0x20000078

08008d24 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008d24:	4b01      	ldr	r3, [pc, #4]	@ (8008d2c <HAL_GetTick+0x8>)
 8008d26:	6818      	ldr	r0, [r3, #0]
}
 8008d28:	4770      	bx	lr
 8008d2a:	bf00      	nop
 8008d2c:	200031fc 	.word	0x200031fc

08008d30 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8008d30:	b538      	push	{r3, r4, r5, lr}
 8008d32:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008d34:	f7ff fff6 	bl	8008d24 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8008d38:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8008d3a:	bf1c      	itt	ne
 8008d3c:	4b05      	ldrne	r3, [pc, #20]	@ (8008d54 <HAL_Delay+0x24>)
 8008d3e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8008d40:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8008d42:	bf18      	it	ne
 8008d44:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8008d46:	f7ff ffed 	bl	8008d24 <HAL_GetTick>
 8008d4a:	1b43      	subs	r3, r0, r5
 8008d4c:	42a3      	cmp	r3, r4
 8008d4e:	d3fa      	bcc.n	8008d46 <HAL_Delay+0x16>
  {
  }
}
 8008d50:	bd38      	pop	{r3, r4, r5, pc}
 8008d52:	bf00      	nop
 8008d54:	20000078 	.word	0x20000078

08008d58 <HAL_ADC_MspInit>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_MspInit could be implemented in the user file
   */
}
 8008d58:	4770      	bx	lr
	...

08008d5c <HAL_ADC_Init>:
{
 8008d5c:	b538      	push	{r3, r4, r5, lr}
  if (hadc == NULL)
 8008d5e:	4604      	mov	r4, r0
 8008d60:	2800      	cmp	r0, #0
 8008d62:	f000 809b 	beq.w	8008e9c <HAL_ADC_Init+0x140>
  if (hadc->State == HAL_ADC_STATE_RESET)
 8008d66:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8008d68:	b925      	cbnz	r5, 8008d74 <HAL_ADC_Init+0x18>
    HAL_ADC_MspInit(hadc);
 8008d6a:	f7ff fff5 	bl	8008d58 <HAL_ADC_MspInit>
    ADC_CLEAR_ERRORCODE(hadc);
 8008d6e:	6465      	str	r5, [r4, #68]	@ 0x44
    hadc->Lock = HAL_UNLOCKED;
 8008d70:	f884 503c 	strb.w	r5, [r4, #60]	@ 0x3c
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8008d74:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008d76:	06db      	lsls	r3, r3, #27
 8008d78:	f100 808e 	bmi.w	8008e98 <HAL_ADC_Init+0x13c>
    ADC_STATE_CLR_SET(hadc->State,
 8008d7c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008d7e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8008d82:	f023 0302 	bic.w	r3, r3, #2
 8008d86:	f043 0302 	orr.w	r3, r3, #2
 8008d8a:	6423      	str	r3, [r4, #64]	@ 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8008d8c:	4b44      	ldr	r3, [pc, #272]	@ (8008ea0 <HAL_ADC_Init+0x144>)
 8008d8e:	685a      	ldr	r2, [r3, #4]
 8008d90:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8008d94:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8008d96:	685a      	ldr	r2, [r3, #4]
 8008d98:	6861      	ldr	r1, [r4, #4]
 8008d9a:	430a      	orrs	r2, r1
 8008d9c:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8008d9e:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8008da0:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8008da2:	685a      	ldr	r2, [r3, #4]
 8008da4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8008da8:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8008daa:	685a      	ldr	r2, [r3, #4]
 8008dac:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8008db0:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8008db2:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8008db4:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8008db6:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8008dba:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8008dbc:	685a      	ldr	r2, [r3, #4]
 8008dbe:	430a      	orrs	r2, r1
 8008dc0:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8008dc2:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8008dc4:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8008dc6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8008dca:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8008dcc:	689a      	ldr	r2, [r3, #8]
 8008dce:	430a      	orrs	r2, r1
 8008dd0:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8008dd2:	4934      	ldr	r1, [pc, #208]	@ (8008ea4 <HAL_ADC_Init+0x148>)
 8008dd4:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8008dd6:	428a      	cmp	r2, r1
 8008dd8:	d052      	beq.n	8008e80 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8008dda:	6899      	ldr	r1, [r3, #8]
 8008ddc:	f021 6170 	bic.w	r1, r1, #251658240	@ 0xf000000
 8008de0:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8008de2:	6899      	ldr	r1, [r3, #8]
 8008de4:	430a      	orrs	r2, r1
 8008de6:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8008de8:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8008dea:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8008dec:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8008df0:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8008df2:	689a      	ldr	r2, [r3, #8]
 8008df4:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8008df6:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8008df8:	689a      	ldr	r2, [r3, #8]
 8008dfa:	f022 0202 	bic.w	r2, r2, #2
 8008dfe:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8008e00:	689a      	ldr	r2, [r3, #8]
 8008e02:	7e21      	ldrb	r1, [r4, #24]
 8008e04:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8008e08:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 8008e0a:	f894 2020 	ldrb.w	r2, [r4, #32]
 8008e0e:	2a00      	cmp	r2, #0
 8008e10:	d03e      	beq.n	8008e90 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8008e12:	685a      	ldr	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8008e14:	6a61      	ldr	r1, [r4, #36]	@ 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8008e16:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008e1a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8008e1c:	685a      	ldr	r2, [r3, #4]
 8008e1e:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8008e22:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8008e24:	685a      	ldr	r2, [r3, #4]
 8008e26:	3901      	subs	r1, #1
 8008e28:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8008e2c:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8008e2e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8008e30:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8008e32:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8008e36:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8008e38:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008e3a:	3901      	subs	r1, #1
 8008e3c:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8008e40:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8008e42:	689a      	ldr	r2, [r3, #8]
 8008e44:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8008e48:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8008e4a:	689a      	ldr	r2, [r3, #8]
 8008e4c:	f894 1030 	ldrb.w	r1, [r4, #48]	@ 0x30
 8008e50:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8008e54:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8008e56:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8008e58:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8008e5a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008e5e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8008e60:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8008e62:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8008e64:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8008e68:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8008e6a:	6460      	str	r0, [r4, #68]	@ 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8008e6c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008e6e:	f023 0303 	bic.w	r3, r3, #3
 8008e72:	f043 0301 	orr.w	r3, r3, #1
 8008e76:	6423      	str	r3, [r4, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 8008e78:	2300      	movs	r3, #0
 8008e7a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 8008e7e:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8008e80:	689a      	ldr	r2, [r3, #8]
 8008e82:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8008e86:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8008e88:	689a      	ldr	r2, [r3, #8]
 8008e8a:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8008e8e:	e7b2      	b.n	8008df6 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8008e90:	685a      	ldr	r2, [r3, #4]
 8008e92:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8008e96:	e7c9      	b.n	8008e2c <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8008e98:	2001      	movs	r0, #1
 8008e9a:	e7ed      	b.n	8008e78 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8008e9c:	2001      	movs	r0, #1
 8008e9e:	e7ee      	b.n	8008e7e <HAL_ADC_Init+0x122>
 8008ea0:	40012300 	.word	0x40012300
 8008ea4:	0f000001 	.word	0x0f000001

08008ea8 <HAL_ADC_Start>:
{
 8008ea8:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8008eaa:	2300      	movs	r3, #0
 8008eac:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8008eae:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8008eb2:	2b01      	cmp	r3, #1
 8008eb4:	d069      	beq.n	8008f8a <HAL_ADC_Start+0xe2>
 8008eb6:	2301      	movs	r3, #1
 8008eb8:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8008ebc:	6803      	ldr	r3, [r0, #0]
 8008ebe:	689a      	ldr	r2, [r3, #8]
 8008ec0:	07d2      	lsls	r2, r2, #31
 8008ec2:	d50b      	bpl.n	8008edc <HAL_ADC_Start+0x34>
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8008ec4:	689a      	ldr	r2, [r3, #8]
 8008ec6:	07d1      	lsls	r1, r2, #31
 8008ec8:	d41a      	bmi.n	8008f00 <HAL_ADC_Start+0x58>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8008eca:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008ecc:	f043 0310 	orr.w	r3, r3, #16
 8008ed0:	6403      	str	r3, [r0, #64]	@ 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8008ed2:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8008ed4:	f043 0301 	orr.w	r3, r3, #1
 8008ed8:	6443      	str	r3, [r0, #68]	@ 0x44
 8008eda:	e04c      	b.n	8008f76 <HAL_ADC_Start+0xce>
    __HAL_ADC_ENABLE(hadc);
 8008edc:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8008ede:	492c      	ldr	r1, [pc, #176]	@ (8008f90 <HAL_ADC_Start+0xe8>)
    __HAL_ADC_ENABLE(hadc);
 8008ee0:	f042 0201 	orr.w	r2, r2, #1
 8008ee4:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8008ee6:	4a2b      	ldr	r2, [pc, #172]	@ (8008f94 <HAL_ADC_Start+0xec>)
 8008ee8:	6812      	ldr	r2, [r2, #0]
 8008eea:	fbb2 f2f1 	udiv	r2, r2, r1
 8008eee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8008ef2:	9201      	str	r2, [sp, #4]
    while (counter != 0U)
 8008ef4:	9a01      	ldr	r2, [sp, #4]
 8008ef6:	2a00      	cmp	r2, #0
 8008ef8:	d0e4      	beq.n	8008ec4 <HAL_ADC_Start+0x1c>
      counter--;
 8008efa:	9a01      	ldr	r2, [sp, #4]
 8008efc:	3a01      	subs	r2, #1
 8008efe:	e7f8      	b.n	8008ef2 <HAL_ADC_Start+0x4a>
    ADC_STATE_CLR_SET(hadc->State,
 8008f00:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8008f02:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8008f06:	f022 0201 	bic.w	r2, r2, #1
 8008f0a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8008f0e:	6402      	str	r2, [r0, #64]	@ 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8008f10:	685a      	ldr	r2, [r3, #4]
 8008f12:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8008f14:	bf41      	itttt	mi
 8008f16:	6c02      	ldrmi	r2, [r0, #64]	@ 0x40
 8008f18:	f422 5240 	bicmi.w	r2, r2, #12288	@ 0x3000
 8008f1c:	f442 5280 	orrmi.w	r2, r2, #4096	@ 0x1000
 8008f20:	6402      	strmi	r2, [r0, #64]	@ 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8008f22:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8008f24:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8008f28:	bf1c      	itt	ne
 8008f2a:	6c42      	ldrne	r2, [r0, #68]	@ 0x44
 8008f2c:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8008f30:	6442      	str	r2, [r0, #68]	@ 0x44
    __HAL_UNLOCK(hadc);
 8008f32:	2200      	movs	r2, #0
 8008f34:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8008f38:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8008f3c:	601a      	str	r2, [r3, #0]
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8008f3e:	4a16      	ldr	r2, [pc, #88]	@ (8008f98 <HAL_ADC_Start+0xf0>)
 8008f40:	6851      	ldr	r1, [r2, #4]
 8008f42:	f011 0f1f 	tst.w	r1, #31
 8008f46:	4915      	ldr	r1, [pc, #84]	@ (8008f9c <HAL_ADC_Start+0xf4>)
 8008f48:	d11c      	bne.n	8008f84 <HAL_ADC_Start+0xdc>
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8008f4a:	428b      	cmp	r3, r1
 8008f4c:	d007      	beq.n	8008f5e <HAL_ADC_Start+0xb6>
 8008f4e:	f501 7180 	add.w	r1, r1, #256	@ 0x100
 8008f52:	428b      	cmp	r3, r1
 8008f54:	d10c      	bne.n	8008f70 <HAL_ADC_Start+0xc8>
 8008f56:	6852      	ldr	r2, [r2, #4]
 8008f58:	f012 0f1f 	tst.w	r2, #31
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8008f5c:	d10b      	bne.n	8008f76 <HAL_ADC_Start+0xce>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8008f5e:	689a      	ldr	r2, [r3, #8]
 8008f60:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8008f64:	d107      	bne.n	8008f76 <HAL_ADC_Start+0xce>
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8008f66:	689a      	ldr	r2, [r3, #8]
 8008f68:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8008f6c:	609a      	str	r2, [r3, #8]
 8008f6e:	e002      	b.n	8008f76 <HAL_ADC_Start+0xce>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8008f70:	490b      	ldr	r1, [pc, #44]	@ (8008fa0 <HAL_ADC_Start+0xf8>)
 8008f72:	428b      	cmp	r3, r1
 8008f74:	d002      	beq.n	8008f7c <HAL_ADC_Start+0xd4>
  return HAL_OK;
 8008f76:	2000      	movs	r0, #0
}
 8008f78:	b002      	add	sp, #8
 8008f7a:	4770      	bx	lr
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8008f7c:	6852      	ldr	r2, [r2, #4]
 8008f7e:	f012 0f10 	tst.w	r2, #16
 8008f82:	e7eb      	b.n	8008f5c <HAL_ADC_Start+0xb4>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8008f84:	428b      	cmp	r3, r1
 8008f86:	d1f6      	bne.n	8008f76 <HAL_ADC_Start+0xce>
 8008f88:	e7e9      	b.n	8008f5e <HAL_ADC_Start+0xb6>
  __HAL_LOCK(hadc);
 8008f8a:	2002      	movs	r0, #2
 8008f8c:	e7f4      	b.n	8008f78 <HAL_ADC_Start+0xd0>
 8008f8e:	bf00      	nop
 8008f90:	000f4240 	.word	0x000f4240
 8008f94:	20000074 	.word	0x20000074
 8008f98:	40012300 	.word	0x40012300
 8008f9c:	40012000 	.word	0x40012000
 8008fa0:	40012200 	.word	0x40012200

08008fa4 <HAL_ADC_Stop>:
  __HAL_LOCK(hadc);
 8008fa4:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8008fa8:	2b01      	cmp	r3, #1
 8008faa:	d014      	beq.n	8008fd6 <HAL_ADC_Stop+0x32>
  __HAL_ADC_DISABLE(hadc);
 8008fac:	6803      	ldr	r3, [r0, #0]
 8008fae:	689a      	ldr	r2, [r3, #8]
 8008fb0:	f022 0201 	bic.w	r2, r2, #1
 8008fb4:	609a      	str	r2, [r3, #8]
  if (HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 8008fb6:	689b      	ldr	r3, [r3, #8]
 8008fb8:	07db      	lsls	r3, r3, #31
 8008fba:	d407      	bmi.n	8008fcc <HAL_ADC_Stop+0x28>
    ADC_STATE_CLR_SET(hadc->State,
 8008fbc:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008fbe:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8008fc2:	f023 0301 	bic.w	r3, r3, #1
 8008fc6:	f043 0301 	orr.w	r3, r3, #1
 8008fca:	6403      	str	r3, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 8008fcc:	2300      	movs	r3, #0
 8008fce:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  return HAL_OK;
 8008fd2:	4618      	mov	r0, r3
 8008fd4:	4770      	bx	lr
  __HAL_LOCK(hadc);
 8008fd6:	2002      	movs	r0, #2
}
 8008fd8:	4770      	bx	lr

08008fda <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8008fda:	6803      	ldr	r3, [r0, #0]
 8008fdc:	689a      	ldr	r2, [r3, #8]
 8008fde:	0552      	lsls	r2, r2, #21
{
 8008fe0:	b570      	push	{r4, r5, r6, lr}
 8008fe2:	4604      	mov	r4, r0
 8008fe4:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8008fe6:	d50b      	bpl.n	8009000 <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 8008fe8:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8008fea:	05de      	lsls	r6, r3, #23
 8008fec:	d508      	bpl.n	8009000 <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8008fee:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008ff0:	f043 0320 	orr.w	r3, r3, #32
 8008ff4:	6403      	str	r3, [r0, #64]	@ 0x40
    __HAL_UNLOCK(hadc);
 8008ff6:	2300      	movs	r3, #0
 8008ff8:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
    return HAL_ERROR;
 8008ffc:	2001      	movs	r0, #1
}
 8008ffe:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 8009000:	f7ff fe90 	bl	8008d24 <HAL_GetTick>
 8009004:	4606      	mov	r6, r0
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8009006:	6823      	ldr	r3, [r4, #0]
 8009008:	681a      	ldr	r2, [r3, #0]
 800900a:	0791      	lsls	r1, r2, #30
 800900c:	d50c      	bpl.n	8009028 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 800900e:	f06f 0212 	mvn.w	r2, #18
 8009012:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8009014:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8009016:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800901a:	6422      	str	r2, [r4, #64]	@ 0x40
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800901c:	689a      	ldr	r2, [r3, #8]
 800901e:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8009022:	d017      	beq.n	8009054 <HAL_ADC_PollForConversion+0x7a>
  return HAL_OK;
 8009024:	2000      	movs	r0, #0
 8009026:	e7ea      	b.n	8008ffe <HAL_ADC_PollForConversion+0x24>
    if (Timeout != HAL_MAX_DELAY)
 8009028:	1c68      	adds	r0, r5, #1
 800902a:	d0ed      	beq.n	8009008 <HAL_ADC_PollForConversion+0x2e>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800902c:	b965      	cbnz	r5, 8009048 <HAL_ADC_PollForConversion+0x6e>
        if (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800902e:	6823      	ldr	r3, [r4, #0]
 8009030:	681b      	ldr	r3, [r3, #0]
 8009032:	f013 0302 	ands.w	r3, r3, #2
 8009036:	d1e6      	bne.n	8009006 <HAL_ADC_PollForConversion+0x2c>
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8009038:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hadc);
 800903a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800903e:	f042 0204 	orr.w	r2, r2, #4
 8009042:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_TIMEOUT;
 8009044:	2003      	movs	r0, #3
 8009046:	e7da      	b.n	8008ffe <HAL_ADC_PollForConversion+0x24>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8009048:	f7ff fe6c 	bl	8008d24 <HAL_GetTick>
 800904c:	1b80      	subs	r0, r0, r6
 800904e:	42a8      	cmp	r0, r5
 8009050:	d8ed      	bhi.n	800902e <HAL_ADC_PollForConversion+0x54>
 8009052:	e7d8      	b.n	8009006 <HAL_ADC_PollForConversion+0x2c>
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8009054:	7e22      	ldrb	r2, [r4, #24]
 8009056:	2a00      	cmp	r2, #0
 8009058:	d1e4      	bne.n	8009024 <HAL_ADC_PollForConversion+0x4a>
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800905a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800905c:	f412 0f70 	tst.w	r2, #15728640	@ 0xf00000
 8009060:	d002      	beq.n	8009068 <HAL_ADC_PollForConversion+0x8e>
       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8009062:	689b      	ldr	r3, [r3, #8]
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8009064:	055a      	lsls	r2, r3, #21
 8009066:	d4dd      	bmi.n	8009024 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8009068:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800906a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800906e:	6423      	str	r3, [r4, #64]	@ 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8009070:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009072:	04db      	lsls	r3, r3, #19
 8009074:	d4d6      	bmi.n	8009024 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8009076:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009078:	f043 0301 	orr.w	r3, r3, #1
 800907c:	6423      	str	r3, [r4, #64]	@ 0x40
 800907e:	e7d1      	b.n	8009024 <HAL_ADC_PollForConversion+0x4a>

08009080 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8009080:	6803      	ldr	r3, [r0, #0]
 8009082:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
}
 8009084:	4770      	bx	lr
	...

08009088 <HAL_ADC_ConfigChannel>:
{
 8009088:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800908a:	2300      	movs	r3, #0
 800908c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800908e:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8009092:	2b01      	cmp	r3, #1
{
 8009094:	4605      	mov	r5, r0
  __HAL_LOCK(hadc);
 8009096:	f000 8086 	beq.w	80091a6 <HAL_ADC_ConfigChannel+0x11e>
 800909a:	2301      	movs	r3, #1
 800909c:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 80090a0:	6808      	ldr	r0, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80090a2:	682b      	ldr	r3, [r5, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80090a4:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 80090a6:	2809      	cmp	r0, #9
 80090a8:	b284      	uxth	r4, r0
 80090aa:	d933      	bls.n	8009114 <HAL_ADC_ConfigChannel+0x8c>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80090ac:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 80090b0:	68df      	ldr	r7, [r3, #12]
 80090b2:	3a1e      	subs	r2, #30
 80090b4:	f04f 0c07 	mov.w	ip, #7
 80090b8:	fa0c fc02 	lsl.w	ip, ip, r2
 80090bc:	ea27 070c 	bic.w	r7, r7, ip
 80090c0:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80090c2:	68df      	ldr	r7, [r3, #12]
 80090c4:	fa06 f202 	lsl.w	r2, r6, r2
 80090c8:	433a      	orrs	r2, r7
 80090ca:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 80090cc:	6849      	ldr	r1, [r1, #4]
 80090ce:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80090d0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 80090d4:	d82d      	bhi.n	8009132 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80090d6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80090d8:	3a05      	subs	r2, #5
 80090da:	261f      	movs	r6, #31
 80090dc:	4096      	lsls	r6, r2
 80090de:	ea21 0106 	bic.w	r1, r1, r6
 80090e2:	6359      	str	r1, [r3, #52]	@ 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80090e4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80090e6:	fa04 f202 	lsl.w	r2, r4, r2
 80090ea:	430a      	orrs	r2, r1
 80090ec:	635a      	str	r2, [r3, #52]	@ 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80090ee:	4a2f      	ldr	r2, [pc, #188]	@ (80091ac <HAL_ADC_ConfigChannel+0x124>)
 80090f0:	4293      	cmp	r3, r2
 80090f2:	d10a      	bne.n	800910a <HAL_ADC_ConfigChannel+0x82>
 80090f4:	2812      	cmp	r0, #18
 80090f6:	d137      	bne.n	8009168 <HAL_ADC_ConfigChannel+0xe0>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 80090f8:	4b2d      	ldr	r3, [pc, #180]	@ (80091b0 <HAL_ADC_ConfigChannel+0x128>)
 80090fa:	685a      	ldr	r2, [r3, #4]
 80090fc:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8009100:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8009102:	685a      	ldr	r2, [r3, #4]
 8009104:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8009108:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 800910a:	2000      	movs	r0, #0
 800910c:	f885 003c 	strb.w	r0, [r5, #60]	@ 0x3c
}
 8009110:	b003      	add	sp, #12
 8009112:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8009114:	691a      	ldr	r2, [r3, #16]
 8009116:	eb00 0c40 	add.w	ip, r0, r0, lsl #1
 800911a:	2707      	movs	r7, #7
 800911c:	fa07 f70c 	lsl.w	r7, r7, ip
 8009120:	ea22 0207 	bic.w	r2, r2, r7
 8009124:	611a      	str	r2, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8009126:	691a      	ldr	r2, [r3, #16]
 8009128:	fa06 f60c 	lsl.w	r6, r6, ip
 800912c:	4316      	orrs	r6, r2
 800912e:	611e      	str	r6, [r3, #16]
 8009130:	e7cc      	b.n	80090cc <HAL_ADC_ConfigChannel+0x44>
  else if (sConfig->Rank < 13U)
 8009132:	290c      	cmp	r1, #12
 8009134:	f04f 011f 	mov.w	r1, #31
 8009138:	d80b      	bhi.n	8009152 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800913a:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 800913c:	3a23      	subs	r2, #35	@ 0x23
 800913e:	4091      	lsls	r1, r2
 8009140:	ea26 0101 	bic.w	r1, r6, r1
 8009144:	6319      	str	r1, [r3, #48]	@ 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8009146:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8009148:	fa04 f202 	lsl.w	r2, r4, r2
 800914c:	430a      	orrs	r2, r1
 800914e:	631a      	str	r2, [r3, #48]	@ 0x30
 8009150:	e7cd      	b.n	80090ee <HAL_ADC_ConfigChannel+0x66>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8009152:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 8009154:	3a41      	subs	r2, #65	@ 0x41
 8009156:	4091      	lsls	r1, r2
 8009158:	ea26 0101 	bic.w	r1, r6, r1
 800915c:	62d9      	str	r1, [r3, #44]	@ 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800915e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8009160:	4094      	lsls	r4, r2
 8009162:	430c      	orrs	r4, r1
 8009164:	62dc      	str	r4, [r3, #44]	@ 0x2c
 8009166:	e7c2      	b.n	80090ee <HAL_ADC_ConfigChannel+0x66>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8009168:	4b12      	ldr	r3, [pc, #72]	@ (80091b4 <HAL_ADC_ConfigChannel+0x12c>)
 800916a:	4298      	cmp	r0, r3
 800916c:	d001      	beq.n	8009172 <HAL_ADC_ConfigChannel+0xea>
 800916e:	2811      	cmp	r0, #17
 8009170:	d1cb      	bne.n	800910a <HAL_ADC_ConfigChannel+0x82>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8009172:	4b0f      	ldr	r3, [pc, #60]	@ (80091b0 <HAL_ADC_ConfigChannel+0x128>)
 8009174:	685a      	ldr	r2, [r3, #4]
 8009176:	f422 0280 	bic.w	r2, r2, #4194304	@ 0x400000
 800917a:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800917c:	685a      	ldr	r2, [r3, #4]
 800917e:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8009182:	605a      	str	r2, [r3, #4]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8009184:	4b0b      	ldr	r3, [pc, #44]	@ (80091b4 <HAL_ADC_ConfigChannel+0x12c>)
 8009186:	4298      	cmp	r0, r3
 8009188:	d1bf      	bne.n	800910a <HAL_ADC_ConfigChannel+0x82>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800918a:	4b0b      	ldr	r3, [pc, #44]	@ (80091b8 <HAL_ADC_ConfigChannel+0x130>)
 800918c:	4a0b      	ldr	r2, [pc, #44]	@ (80091bc <HAL_ADC_ConfigChannel+0x134>)
 800918e:	681b      	ldr	r3, [r3, #0]
 8009190:	fbb3 f3f2 	udiv	r3, r3, r2
 8009194:	220a      	movs	r2, #10
 8009196:	4353      	muls	r3, r2
        counter--;
 8009198:	9301      	str	r3, [sp, #4]
      while (counter != 0U)
 800919a:	9b01      	ldr	r3, [sp, #4]
 800919c:	2b00      	cmp	r3, #0
 800919e:	d0b4      	beq.n	800910a <HAL_ADC_ConfigChannel+0x82>
        counter--;
 80091a0:	9b01      	ldr	r3, [sp, #4]
 80091a2:	3b01      	subs	r3, #1
 80091a4:	e7f8      	b.n	8009198 <HAL_ADC_ConfigChannel+0x110>
  __HAL_LOCK(hadc);
 80091a6:	2002      	movs	r0, #2
 80091a8:	e7b2      	b.n	8009110 <HAL_ADC_ConfigChannel+0x88>
 80091aa:	bf00      	nop
 80091ac:	40012000 	.word	0x40012000
 80091b0:	40012300 	.word	0x40012300
 80091b4:	10000012 	.word	0x10000012
 80091b8:	20000074 	.word	0x20000074
 80091bc:	000f4240 	.word	0x000f4240

080091c0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80091c0:	4907      	ldr	r1, [pc, #28]	@ (80091e0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80091c2:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80091c4:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80091c8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80091ca:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80091cc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80091d0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80091d2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80091d4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80091d8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 80091dc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80091de:	4770      	bx	lr
 80091e0:	e000ed00 	.word	0xe000ed00

080091e4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80091e4:	4b16      	ldr	r3, [pc, #88]	@ (8009240 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80091e6:	b530      	push	{r4, r5, lr}
 80091e8:	68dc      	ldr	r4, [r3, #12]
 80091ea:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80091ee:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80091f2:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80091f4:	2b04      	cmp	r3, #4
 80091f6:	bf28      	it	cs
 80091f8:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80091fa:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80091fc:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009200:	bf8c      	ite	hi
 8009202:	3c03      	subhi	r4, #3
 8009204:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009206:	fa05 f303 	lsl.w	r3, r5, r3
 800920a:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800920e:	40a5      	lsls	r5, r4
 8009210:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009214:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8009216:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009218:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800921c:	bfac      	ite	ge
 800921e:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009222:	4a08      	ldrlt	r2, [pc, #32]	@ (8009244 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009224:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009228:	bfb8      	it	lt
 800922a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800922e:	b2db      	uxtb	r3, r3
 8009230:	bfaa      	itet	ge
 8009232:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009236:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009238:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800923c:	bd30      	pop	{r4, r5, pc}
 800923e:	bf00      	nop
 8009240:	e000ed00 	.word	0xe000ed00
 8009244:	e000ed14 	.word	0xe000ed14

08009248 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009248:	2800      	cmp	r0, #0
 800924a:	db07      	blt.n	800925c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800924c:	4a04      	ldr	r2, [pc, #16]	@ (8009260 <HAL_NVIC_EnableIRQ+0x18>)
 800924e:	0941      	lsrs	r1, r0, #5
 8009250:	2301      	movs	r3, #1
 8009252:	f000 001f 	and.w	r0, r0, #31
 8009256:	4083      	lsls	r3, r0
 8009258:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800925c:	4770      	bx	lr
 800925e:	bf00      	nop
 8009260:	e000e100 	.word	0xe000e100

08009264 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8009264:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009266:	4604      	mov	r4, r0
 8009268:	b150      	cbz	r0, 8009280 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800926a:	7943      	ldrb	r3, [r0, #5]
 800926c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8009270:	b913      	cbnz	r3, 8009278 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8009272:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8009274:	f7f8 fe42 	bl	8001efc <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009278:	2301      	movs	r3, #1
 800927a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800927c:	2000      	movs	r0, #0
}
 800927e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009280:	2001      	movs	r0, #1
 8009282:	e7fc      	b.n	800927e <HAL_CRC_Init+0x1a>

08009284 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8009284:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8009286:	4604      	mov	r4, r0
 8009288:	b320      	cbz	r0, 80092d4 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800928a:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800928e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8009292:	b91b      	cbnz	r3, 800929c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8009294:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8009298:	f7f8 fe48 	bl	8001f2c <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800929c:	2302      	movs	r3, #2
 800929e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80092a2:	6823      	ldr	r3, [r4, #0]
 80092a4:	6861      	ldr	r1, [r4, #4]
 80092a6:	681a      	ldr	r2, [r3, #0]
 80092a8:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 80092ac:	430a      	orrs	r2, r1
 80092ae:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80092b0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80092b2:	68a1      	ldr	r1, [r4, #8]
 80092b4:	f022 0207 	bic.w	r2, r2, #7
 80092b8:	430a      	orrs	r2, r1
 80092ba:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80092bc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80092be:	68e1      	ldr	r1, [r4, #12]
 80092c0:	f36f 020d 	bfc	r2, #0, #14
 80092c4:	430a      	orrs	r2, r1
 80092c6:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80092c8:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80092ca:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80092cc:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80092ce:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 80092d2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80092d4:	2001      	movs	r0, #1
 80092d6:	e7fc      	b.n	80092d2 <HAL_DMA2D_Init+0x4e>

080092d8 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 80092d8:	4770      	bx	lr

080092da <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 80092da:	4770      	bx	lr

080092dc <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80092dc:	6803      	ldr	r3, [r0, #0]
{
 80092de:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80092e0:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80092e2:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80092e4:	07f2      	lsls	r2, r6, #31
{
 80092e6:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80092e8:	d514      	bpl.n	8009314 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80092ea:	05e9      	lsls	r1, r5, #23
 80092ec:	d512      	bpl.n	8009314 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80092ee:	681a      	ldr	r2, [r3, #0]
 80092f0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80092f4:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80092f6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80092f8:	f042 0201 	orr.w	r2, r2, #1
 80092fc:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80092fe:	2201      	movs	r2, #1
 8009300:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009302:	2304      	movs	r3, #4
 8009304:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8009308:	2300      	movs	r3, #0
 800930a:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800930e:	6943      	ldr	r3, [r0, #20]
 8009310:	b103      	cbz	r3, 8009314 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8009312:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8009314:	06b2      	lsls	r2, r6, #26
 8009316:	d516      	bpl.n	8009346 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8009318:	04ab      	lsls	r3, r5, #18
 800931a:	d514      	bpl.n	8009346 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800931c:	6823      	ldr	r3, [r4, #0]
 800931e:	681a      	ldr	r2, [r3, #0]
 8009320:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8009324:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8009326:	2220      	movs	r2, #32
 8009328:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800932a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800932c:	f043 0302 	orr.w	r3, r3, #2
 8009330:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009332:	2304      	movs	r3, #4
 8009334:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8009338:	2300      	movs	r3, #0
 800933a:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800933e:	6963      	ldr	r3, [r4, #20]
 8009340:	b10b      	cbz	r3, 8009346 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8009342:	4620      	mov	r0, r4
 8009344:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8009346:	0730      	lsls	r0, r6, #28
 8009348:	d516      	bpl.n	8009378 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800934a:	0529      	lsls	r1, r5, #20
 800934c:	d514      	bpl.n	8009378 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800934e:	6823      	ldr	r3, [r4, #0]
 8009350:	681a      	ldr	r2, [r3, #0]
 8009352:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8009356:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8009358:	2208      	movs	r2, #8
 800935a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800935c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800935e:	f043 0304 	orr.w	r3, r3, #4
 8009362:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009364:	2304      	movs	r3, #4
 8009366:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800936a:	2300      	movs	r3, #0
 800936c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8009370:	6963      	ldr	r3, [r4, #20]
 8009372:	b10b      	cbz	r3, 8009378 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8009374:	4620      	mov	r0, r4
 8009376:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8009378:	0772      	lsls	r2, r6, #29
 800937a:	d50b      	bpl.n	8009394 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800937c:	056b      	lsls	r3, r5, #21
 800937e:	d509      	bpl.n	8009394 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8009380:	6823      	ldr	r3, [r4, #0]
 8009382:	681a      	ldr	r2, [r3, #0]
 8009384:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8009388:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800938a:	2204      	movs	r2, #4
 800938c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800938e:	4620      	mov	r0, r4
 8009390:	f7ff ffa2 	bl	80092d8 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8009394:	07b0      	lsls	r0, r6, #30
 8009396:	d514      	bpl.n	80093c2 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8009398:	05a9      	lsls	r1, r5, #22
 800939a:	d512      	bpl.n	80093c2 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800939c:	6823      	ldr	r3, [r4, #0]
 800939e:	681a      	ldr	r2, [r3, #0]
 80093a0:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80093a4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80093a6:	2202      	movs	r2, #2
 80093a8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80093aa:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80093ac:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80093ae:	2301      	movs	r3, #1
 80093b0:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80093b4:	2300      	movs	r3, #0
 80093b6:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 80093ba:	6923      	ldr	r3, [r4, #16]
 80093bc:	b10b      	cbz	r3, 80093c2 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80093be:	4620      	mov	r0, r4
 80093c0:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80093c2:	06f2      	lsls	r2, r6, #27
 80093c4:	d513      	bpl.n	80093ee <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80093c6:	04eb      	lsls	r3, r5, #19
 80093c8:	d511      	bpl.n	80093ee <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80093ca:	6823      	ldr	r3, [r4, #0]
 80093cc:	681a      	ldr	r2, [r3, #0]
 80093ce:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80093d2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80093d4:	2210      	movs	r2, #16
 80093d6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80093d8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80093da:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80093dc:	2301      	movs	r3, #1
 80093de:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80093e2:	2300      	movs	r3, #0
 80093e4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80093e8:	4620      	mov	r0, r4
 80093ea:	f7ff ff76 	bl	80092da <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80093ee:	bd70      	pop	{r4, r5, r6, pc}

080093f0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80093f0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80093f2:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 80093f6:	2a01      	cmp	r2, #1
{
 80093f8:	4603      	mov	r3, r0
 80093fa:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 80093fe:	d02b      	beq.n	8009458 <HAL_DMA2D_ConfigLayer+0x68>
 8009400:	2201      	movs	r2, #1
 8009402:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009406:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800940a:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 800940e:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8009412:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8009414:	4f17      	ldr	r7, [pc, #92]	@ (8009474 <HAL_DMA2D_ConfigLayer+0x84>)
 8009416:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800941a:	3c09      	subs	r4, #9
 800941c:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800941e:	bf9c      	itt	ls
 8009420:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8009424:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009426:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800942a:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800942c:	bf88      	it	hi
 800942e:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8009432:	b991      	cbnz	r1, 800945a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009434:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8009436:	4039      	ands	r1, r7
 8009438:	4301      	orrs	r1, r0
 800943a:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800943c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800943e:	6999      	ldr	r1, [r3, #24]
 8009440:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009442:	d803      	bhi.n	800944c <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8009444:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8009446:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 800944a:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800944c:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800944e:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8009450:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8009454:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8009458:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800945a:	69d1      	ldr	r1, [r2, #28]
 800945c:	4039      	ands	r1, r7
 800945e:	4301      	orrs	r1, r0
 8009460:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009462:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009464:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009466:	6989      	ldr	r1, [r1, #24]
 8009468:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800946a:	bf9c      	itt	ls
 800946c:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8009470:	6215      	strls	r5, [r2, #32]
 8009472:	e7eb      	b.n	800944c <HAL_DMA2D_ConfigLayer+0x5c>
 8009474:	00fcfff0 	.word	0x00fcfff0

08009478 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009478:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800947c:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 800963c <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009480:	4a6c      	ldr	r2, [pc, #432]	@ (8009634 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009482:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009484:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8009486:	2401      	movs	r4, #1
 8009488:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800948a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800948e:	43ac      	bics	r4, r5
 8009490:	f040 80b7 	bne.w	8009602 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009494:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009496:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009498:	f005 0403 	and.w	r4, r5, #3
 800949c:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80094a0:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80094a4:	1e67      	subs	r7, r4, #1
 80094a6:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80094a8:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80094ac:	d834      	bhi.n	8009518 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80094ae:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80094b0:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 80094b4:	68cf      	ldr	r7, [r1, #12]
 80094b6:	fa07 f708 	lsl.w	r7, r7, r8
 80094ba:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80094be:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80094c0:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80094c2:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80094c6:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80094ca:	409f      	lsls	r7, r3
 80094cc:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80094d0:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80094d2:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80094d4:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80094d8:	688f      	ldr	r7, [r1, #8]
 80094da:	fa07 f708 	lsl.w	r7, r7, r8
 80094de:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80094e2:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80094e4:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80094e6:	d119      	bne.n	800951c <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 80094e8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80094ec:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80094f0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80094f4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80094f8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80094fc:	f04f 0e0f 	mov.w	lr, #15
 8009500:	fa0e fe0b 	lsl.w	lr, lr, fp
 8009504:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009508:	690f      	ldr	r7, [r1, #16]
 800950a:	fa07 f70b 	lsl.w	r7, r7, fp
 800950e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8009512:	f8ca 7020 	str.w	r7, [sl, #32]
 8009516:	e001      	b.n	800951c <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009518:	2c03      	cmp	r4, #3
 800951a:	d1da      	bne.n	80094d2 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800951c:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800951e:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009522:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009526:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009528:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 800952c:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800952e:	d068      	beq.n	8009602 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009530:	2400      	movs	r4, #0
 8009532:	9401      	str	r4, [sp, #4]
 8009534:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8009538:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 800953c:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8009540:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8009544:	f023 0703 	bic.w	r7, r3, #3
 8009548:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 800954c:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8009550:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8009554:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009556:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800955a:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800955c:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009560:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8009564:	240f      	movs	r4, #15
 8009566:	fa04 f40c 	lsl.w	r4, r4, ip
 800956a:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800956e:	4c32      	ldr	r4, [pc, #200]	@ (8009638 <HAL_GPIO_Init+0x1c0>)
 8009570:	42a0      	cmp	r0, r4
 8009572:	d04d      	beq.n	8009610 <HAL_GPIO_Init+0x198>
 8009574:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8009578:	42a0      	cmp	r0, r4
 800957a:	d04b      	beq.n	8009614 <HAL_GPIO_Init+0x19c>
 800957c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8009580:	42a0      	cmp	r0, r4
 8009582:	d049      	beq.n	8009618 <HAL_GPIO_Init+0x1a0>
 8009584:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8009588:	42a0      	cmp	r0, r4
 800958a:	d047      	beq.n	800961c <HAL_GPIO_Init+0x1a4>
 800958c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8009590:	42a0      	cmp	r0, r4
 8009592:	d045      	beq.n	8009620 <HAL_GPIO_Init+0x1a8>
 8009594:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8009598:	42a0      	cmp	r0, r4
 800959a:	d043      	beq.n	8009624 <HAL_GPIO_Init+0x1ac>
 800959c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80095a0:	42a0      	cmp	r0, r4
 80095a2:	d041      	beq.n	8009628 <HAL_GPIO_Init+0x1b0>
 80095a4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80095a8:	42a0      	cmp	r0, r4
 80095aa:	d03f      	beq.n	800962c <HAL_GPIO_Init+0x1b4>
 80095ac:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80095b0:	42a0      	cmp	r0, r4
 80095b2:	d03d      	beq.n	8009630 <HAL_GPIO_Init+0x1b8>
 80095b4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80095b8:	42a0      	cmp	r0, r4
 80095ba:	bf14      	ite	ne
 80095bc:	240a      	movne	r4, #10
 80095be:	2409      	moveq	r4, #9
 80095c0:	fa04 f40c 	lsl.w	r4, r4, ip
 80095c4:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 80095c8:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 80095ca:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80095cc:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80095ce:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 80095d2:	bf0c      	ite	eq
 80095d4:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80095d6:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 80095d8:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 80095da:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80095dc:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 80095e0:	bf0c      	ite	eq
 80095e2:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80095e4:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 80095e6:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 80095e8:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80095ea:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 80095ee:	bf0c      	ite	eq
 80095f0:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80095f2:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 80095f4:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80095f6:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80095f8:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80095fa:	bf54      	ite	pl
 80095fc:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 80095fe:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8009600:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009602:	3301      	adds	r3, #1
 8009604:	2b10      	cmp	r3, #16
 8009606:	f47f af3d 	bne.w	8009484 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800960a:	b003      	add	sp, #12
 800960c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009610:	2400      	movs	r4, #0
 8009612:	e7d5      	b.n	80095c0 <HAL_GPIO_Init+0x148>
 8009614:	2401      	movs	r4, #1
 8009616:	e7d3      	b.n	80095c0 <HAL_GPIO_Init+0x148>
 8009618:	2402      	movs	r4, #2
 800961a:	e7d1      	b.n	80095c0 <HAL_GPIO_Init+0x148>
 800961c:	2403      	movs	r4, #3
 800961e:	e7cf      	b.n	80095c0 <HAL_GPIO_Init+0x148>
 8009620:	2404      	movs	r4, #4
 8009622:	e7cd      	b.n	80095c0 <HAL_GPIO_Init+0x148>
 8009624:	2405      	movs	r4, #5
 8009626:	e7cb      	b.n	80095c0 <HAL_GPIO_Init+0x148>
 8009628:	2406      	movs	r4, #6
 800962a:	e7c9      	b.n	80095c0 <HAL_GPIO_Init+0x148>
 800962c:	2407      	movs	r4, #7
 800962e:	e7c7      	b.n	80095c0 <HAL_GPIO_Init+0x148>
 8009630:	2408      	movs	r4, #8
 8009632:	e7c5      	b.n	80095c0 <HAL_GPIO_Init+0x148>
 8009634:	40013c00 	.word	0x40013c00
 8009638:	40020000 	.word	0x40020000
 800963c:	40023800 	.word	0x40023800

08009640 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8009640:	6903      	ldr	r3, [r0, #16]
 8009642:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009644:	bf14      	ite	ne
 8009646:	2001      	movne	r0, #1
 8009648:	2000      	moveq	r0, #0
 800964a:	4770      	bx	lr

0800964c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800964c:	b10a      	cbz	r2, 8009652 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800964e:	6181      	str	r1, [r0, #24]
  }
}
 8009650:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8009652:	0409      	lsls	r1, r1, #16
 8009654:	e7fb      	b.n	800964e <HAL_GPIO_WritePin+0x2>

08009656 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009656:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8009658:	ea01 0203 	and.w	r2, r1, r3
 800965c:	ea21 0103 	bic.w	r1, r1, r3
 8009660:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8009664:	6181      	str	r1, [r0, #24]
}
 8009666:	4770      	bx	lr

08009668 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009668:	6801      	ldr	r1, [r0, #0]
 800966a:	694b      	ldr	r3, [r1, #20]
 800966c:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8009670:	f04f 0200 	mov.w	r2, #0
 8009674:	d010      	beq.n	8009698 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009676:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800967a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800967c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800967e:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009680:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009684:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009688:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800968a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800968e:	f043 0304 	orr.w	r3, r3, #4
 8009692:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8009694:	2001      	movs	r0, #1
 8009696:	4770      	bx	lr
  }
  return HAL_OK;
 8009698:	4618      	mov	r0, r3
}
 800969a:	4770      	bx	lr

0800969c <I2C_WaitOnFlagUntilTimeout>:
{
 800969c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80096a0:	4606      	mov	r6, r0
 80096a2:	460f      	mov	r7, r1
 80096a4:	4691      	mov	r9, r2
 80096a6:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80096a8:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80096ac:	6833      	ldr	r3, [r6, #0]
 80096ae:	f1ba 0f01 	cmp.w	sl, #1
 80096b2:	bf0c      	ite	eq
 80096b4:	695c      	ldreq	r4, [r3, #20]
 80096b6:	699c      	ldrne	r4, [r3, #24]
 80096b8:	ea27 0404 	bic.w	r4, r7, r4
 80096bc:	b2a4      	uxth	r4, r4
 80096be:	fab4 f484 	clz	r4, r4
 80096c2:	0964      	lsrs	r4, r4, #5
 80096c4:	45a1      	cmp	r9, r4
 80096c6:	d001      	beq.n	80096cc <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80096c8:	2000      	movs	r0, #0
 80096ca:	e025      	b.n	8009718 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 80096cc:	1c6a      	adds	r2, r5, #1
 80096ce:	d0ee      	beq.n	80096ae <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80096d0:	f7ff fb28 	bl	8008d24 <HAL_GetTick>
 80096d4:	9b08      	ldr	r3, [sp, #32]
 80096d6:	1ac0      	subs	r0, r0, r3
 80096d8:	42a8      	cmp	r0, r5
 80096da:	d801      	bhi.n	80096e0 <I2C_WaitOnFlagUntilTimeout+0x44>
 80096dc:	2d00      	cmp	r5, #0
 80096de:	d1e5      	bne.n	80096ac <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 80096e0:	6833      	ldr	r3, [r6, #0]
 80096e2:	f1ba 0f01 	cmp.w	sl, #1
 80096e6:	bf0c      	ite	eq
 80096e8:	695b      	ldreq	r3, [r3, #20]
 80096ea:	699b      	ldrne	r3, [r3, #24]
 80096ec:	ea27 0303 	bic.w	r3, r7, r3
 80096f0:	b29b      	uxth	r3, r3
 80096f2:	fab3 f383 	clz	r3, r3
 80096f6:	095b      	lsrs	r3, r3, #5
 80096f8:	4599      	cmp	r9, r3
 80096fa:	d1d7      	bne.n	80096ac <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 80096fc:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 80096fe:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8009700:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8009702:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009706:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800970a:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800970c:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009710:	f042 0220 	orr.w	r2, r2, #32
 8009714:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 8009716:	2001      	movs	r0, #1
}
 8009718:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800971c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800971c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009720:	4604      	mov	r4, r0
 8009722:	460f      	mov	r7, r1
 8009724:	4616      	mov	r6, r2
 8009726:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009728:	6825      	ldr	r5, [r4, #0]
 800972a:	6968      	ldr	r0, [r5, #20]
 800972c:	ea27 0000 	bic.w	r0, r7, r0
 8009730:	b280      	uxth	r0, r0
 8009732:	b1c0      	cbz	r0, 8009766 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009734:	696b      	ldr	r3, [r5, #20]
 8009736:	055a      	lsls	r2, r3, #21
 8009738:	d517      	bpl.n	800976a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800973a:	682b      	ldr	r3, [r5, #0]
 800973c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8009740:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009742:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8009746:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8009748:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800974a:	2300      	movs	r3, #0
 800974c:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800974e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009752:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009756:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009758:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800975c:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800975e:	2300      	movs	r3, #0
 8009760:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8009764:	2001      	movs	r0, #1
}
 8009766:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800976a:	1c73      	adds	r3, r6, #1
 800976c:	d0dd      	beq.n	800972a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800976e:	f7ff fad9 	bl	8008d24 <HAL_GetTick>
 8009772:	eba0 0008 	sub.w	r0, r0, r8
 8009776:	42b0      	cmp	r0, r6
 8009778:	d801      	bhi.n	800977e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 800977a:	2e00      	cmp	r6, #0
 800977c:	d1d4      	bne.n	8009728 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 800977e:	6823      	ldr	r3, [r4, #0]
 8009780:	695a      	ldr	r2, [r3, #20]
 8009782:	ea27 0202 	bic.w	r2, r7, r2
 8009786:	b292      	uxth	r2, r2
 8009788:	2a00      	cmp	r2, #0
 800978a:	d0cd      	beq.n	8009728 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 800978c:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 800978e:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8009790:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8009792:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009796:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800979a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800979c:	4313      	orrs	r3, r2
 800979e:	e7dd      	b.n	800975c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080097a0 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80097a0:	b570      	push	{r4, r5, r6, lr}
 80097a2:	4604      	mov	r4, r0
 80097a4:	460d      	mov	r5, r1
 80097a6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097a8:	6823      	ldr	r3, [r4, #0]
 80097aa:	695b      	ldr	r3, [r3, #20]
 80097ac:	061b      	lsls	r3, r3, #24
 80097ae:	d501      	bpl.n	80097b4 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80097b0:	2000      	movs	r0, #0
 80097b2:	e01e      	b.n	80097f2 <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80097b4:	4620      	mov	r0, r4
 80097b6:	f7ff ff57 	bl	8009668 <I2C_IsAcknowledgeFailed>
 80097ba:	b9c8      	cbnz	r0, 80097f0 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80097bc:	1c6a      	adds	r2, r5, #1
 80097be:	d0f3      	beq.n	80097a8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097c0:	f7ff fab0 	bl	8008d24 <HAL_GetTick>
 80097c4:	1b80      	subs	r0, r0, r6
 80097c6:	42a8      	cmp	r0, r5
 80097c8:	d801      	bhi.n	80097ce <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80097ca:	2d00      	cmp	r5, #0
 80097cc:	d1ec      	bne.n	80097a8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 80097ce:	6823      	ldr	r3, [r4, #0]
 80097d0:	695b      	ldr	r3, [r3, #20]
 80097d2:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 80097d6:	d1e7      	bne.n	80097a8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 80097d8:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 80097da:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80097dc:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80097e0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80097e4:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80097e6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80097ea:	f042 0220 	orr.w	r2, r2, #32
 80097ee:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80097f0:	2001      	movs	r0, #1
}
 80097f2:	bd70      	pop	{r4, r5, r6, pc}

080097f4 <I2C_RequestMemoryWrite>:
{
 80097f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80097f8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097fa:	6802      	ldr	r2, [r0, #0]
{
 80097fc:	b085      	sub	sp, #20
 80097fe:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 8009802:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009804:	6813      	ldr	r3, [r2, #0]
 8009806:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800980a:	6013      	str	r3, [r2, #0]
{
 800980c:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800980e:	463b      	mov	r3, r7
 8009810:	f8cd 8000 	str.w	r8, [sp]
 8009814:	2200      	movs	r2, #0
 8009816:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 800981a:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800981c:	f7ff ff3e 	bl	800969c <I2C_WaitOnFlagUntilTimeout>
 8009820:	6823      	ldr	r3, [r4, #0]
 8009822:	b138      	cbz	r0, 8009834 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009824:	681b      	ldr	r3, [r3, #0]
 8009826:	05db      	lsls	r3, r3, #23
 8009828:	d502      	bpl.n	8009830 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800982a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800982e:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8009830:	2603      	movs	r6, #3
 8009832:	e020      	b.n	8009876 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009834:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8009838:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800983a:	491a      	ldr	r1, [pc, #104]	@ (80098a4 <I2C_RequestMemoryWrite+0xb0>)
 800983c:	4643      	mov	r3, r8
 800983e:	463a      	mov	r2, r7
 8009840:	4620      	mov	r0, r4
 8009842:	f7ff ff6b 	bl	800971c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8009846:	b9a8      	cbnz	r0, 8009874 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009848:	6823      	ldr	r3, [r4, #0]
 800984a:	9003      	str	r0, [sp, #12]
 800984c:	695a      	ldr	r2, [r3, #20]
 800984e:	9203      	str	r2, [sp, #12]
 8009850:	699b      	ldr	r3, [r3, #24]
 8009852:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8009854:	4642      	mov	r2, r8
 8009856:	4639      	mov	r1, r7
 8009858:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800985a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800985c:	f7ff ffa0 	bl	80097a0 <I2C_WaitOnTXEFlagUntilTimeout>
 8009860:	4606      	mov	r6, r0
 8009862:	b160      	cbz	r0, 800987e <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009864:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009866:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009868:	bf01      	itttt	eq
 800986a:	6822      	ldreq	r2, [r4, #0]
 800986c:	6813      	ldreq	r3, [r2, #0]
 800986e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8009872:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8009874:	2601      	movs	r6, #1
}
 8009876:	4630      	mov	r0, r6
 8009878:	b005      	add	sp, #20
 800987a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800987e:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009882:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009884:	d102      	bne.n	800988c <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009886:	b2ed      	uxtb	r5, r5
 8009888:	611d      	str	r5, [r3, #16]
 800988a:	e7f4      	b.n	8009876 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800988c:	0a2a      	lsrs	r2, r5, #8
 800988e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8009890:	4639      	mov	r1, r7
 8009892:	4642      	mov	r2, r8
 8009894:	4620      	mov	r0, r4
 8009896:	f7ff ff83 	bl	80097a0 <I2C_WaitOnTXEFlagUntilTimeout>
 800989a:	2800      	cmp	r0, #0
 800989c:	d1e2      	bne.n	8009864 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800989e:	6823      	ldr	r3, [r4, #0]
 80098a0:	e7f1      	b.n	8009886 <I2C_RequestMemoryWrite+0x92>
 80098a2:	bf00      	nop
 80098a4:	00010002 	.word	0x00010002

080098a8 <I2C_RequestMemoryRead>:
{
 80098a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80098ac:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80098ae:	6803      	ldr	r3, [r0, #0]
{
 80098b0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80098b2:	681a      	ldr	r2, [r3, #0]
 80098b4:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80098b8:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80098ba:	681a      	ldr	r2, [r3, #0]
{
 80098bc:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80098c0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80098c4:	601a      	str	r2, [r3, #0]
{
 80098c6:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80098c8:	463b      	mov	r3, r7
 80098ca:	f8cd 8000 	str.w	r8, [sp]
 80098ce:	2200      	movs	r2, #0
 80098d0:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 80098d4:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80098d6:	f7ff fee1 	bl	800969c <I2C_WaitOnFlagUntilTimeout>
 80098da:	6823      	ldr	r3, [r4, #0]
 80098dc:	b138      	cbz	r0, 80098ee <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80098de:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80098e0:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80098e2:	bf44      	itt	mi
 80098e4:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 80098e8:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 80098ea:	2003      	movs	r0, #3
 80098ec:	e021      	b.n	8009932 <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80098ee:	fa5f f986 	uxtb.w	r9, r6
 80098f2:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 80098f6:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80098f8:	492b      	ldr	r1, [pc, #172]	@ (80099a8 <I2C_RequestMemoryRead+0x100>)
 80098fa:	4643      	mov	r3, r8
 80098fc:	463a      	mov	r2, r7
 80098fe:	4620      	mov	r0, r4
 8009900:	f7ff ff0c 	bl	800971c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8009904:	b9a0      	cbnz	r0, 8009930 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009906:	6823      	ldr	r3, [r4, #0]
 8009908:	9003      	str	r0, [sp, #12]
 800990a:	695a      	ldr	r2, [r3, #20]
 800990c:	9203      	str	r2, [sp, #12]
 800990e:	699b      	ldr	r3, [r3, #24]
 8009910:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8009912:	4642      	mov	r2, r8
 8009914:	4639      	mov	r1, r7
 8009916:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009918:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800991a:	f7ff ff41 	bl	80097a0 <I2C_WaitOnTXEFlagUntilTimeout>
 800991e:	b158      	cbz	r0, 8009938 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009920:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009922:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009924:	bf01      	itttt	eq
 8009926:	6822      	ldreq	r2, [r4, #0]
 8009928:	6813      	ldreq	r3, [r2, #0]
 800992a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800992e:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8009930:	2001      	movs	r0, #1
}
 8009932:	b004      	add	sp, #16
 8009934:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009938:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800993c:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800993e:	d11a      	bne.n	8009976 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009940:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8009942:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009944:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8009946:	4639      	mov	r1, r7
 8009948:	4620      	mov	r0, r4
 800994a:	f7ff ff29 	bl	80097a0 <I2C_WaitOnTXEFlagUntilTimeout>
 800994e:	4602      	mov	r2, r0
 8009950:	2800      	cmp	r0, #0
 8009952:	d1e5      	bne.n	8009920 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009954:	6821      	ldr	r1, [r4, #0]
 8009956:	680b      	ldr	r3, [r1, #0]
 8009958:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800995c:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800995e:	4620      	mov	r0, r4
 8009960:	f8cd 8000 	str.w	r8, [sp]
 8009964:	463b      	mov	r3, r7
 8009966:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800996a:	f7ff fe97 	bl	800969c <I2C_WaitOnFlagUntilTimeout>
 800996e:	6822      	ldr	r2, [r4, #0]
 8009970:	b160      	cbz	r0, 800998c <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009972:	6813      	ldr	r3, [r2, #0]
 8009974:	e7b4      	b.n	80098e0 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009976:	0a2a      	lsrs	r2, r5, #8
 8009978:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800997a:	4639      	mov	r1, r7
 800997c:	4642      	mov	r2, r8
 800997e:	4620      	mov	r0, r4
 8009980:	f7ff ff0e 	bl	80097a0 <I2C_WaitOnTXEFlagUntilTimeout>
 8009984:	2800      	cmp	r0, #0
 8009986:	d1cb      	bne.n	8009920 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009988:	6823      	ldr	r3, [r4, #0]
 800998a:	e7d9      	b.n	8009940 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800998c:	f049 0301 	orr.w	r3, r9, #1
 8009990:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8009992:	4905      	ldr	r1, [pc, #20]	@ (80099a8 <I2C_RequestMemoryRead+0x100>)
 8009994:	4643      	mov	r3, r8
 8009996:	463a      	mov	r2, r7
 8009998:	4620      	mov	r0, r4
 800999a:	f7ff febf 	bl	800971c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800999e:	3800      	subs	r0, #0
 80099a0:	bf18      	it	ne
 80099a2:	2001      	movne	r0, #1
 80099a4:	e7c5      	b.n	8009932 <I2C_RequestMemoryRead+0x8a>
 80099a6:	bf00      	nop
 80099a8:	00010002 	.word	0x00010002

080099ac <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80099ac:	b570      	push	{r4, r5, r6, lr}
 80099ae:	4604      	mov	r4, r0
 80099b0:	460d      	mov	r5, r1
 80099b2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80099b4:	6823      	ldr	r3, [r4, #0]
 80099b6:	695b      	ldr	r3, [r3, #20]
 80099b8:	075b      	lsls	r3, r3, #29
 80099ba:	d501      	bpl.n	80099c0 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80099bc:	2000      	movs	r0, #0
 80099be:	e01e      	b.n	80099fe <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80099c0:	4620      	mov	r0, r4
 80099c2:	f7ff fe51 	bl	8009668 <I2C_IsAcknowledgeFailed>
 80099c6:	b9c8      	cbnz	r0, 80099fc <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80099c8:	1c6a      	adds	r2, r5, #1
 80099ca:	d0f3      	beq.n	80099b4 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099cc:	f7ff f9aa 	bl	8008d24 <HAL_GetTick>
 80099d0:	1b80      	subs	r0, r0, r6
 80099d2:	42a8      	cmp	r0, r5
 80099d4:	d801      	bhi.n	80099da <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80099d6:	2d00      	cmp	r5, #0
 80099d8:	d1ec      	bne.n	80099b4 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 80099da:	6823      	ldr	r3, [r4, #0]
 80099dc:	695b      	ldr	r3, [r3, #20]
 80099de:	f013 0304 	ands.w	r3, r3, #4
 80099e2:	d1e7      	bne.n	80099b4 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 80099e4:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 80099e6:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80099e8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80099ec:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80099f0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80099f2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80099f6:	f042 0220 	orr.w	r2, r2, #32
 80099fa:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80099fc:	2001      	movs	r0, #1
}
 80099fe:	bd70      	pop	{r4, r5, r6, pc}

08009a00 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8009a00:	b570      	push	{r4, r5, r6, lr}
 8009a02:	4604      	mov	r4, r0
 8009a04:	460d      	mov	r5, r1
 8009a06:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009a08:	6821      	ldr	r1, [r4, #0]
 8009a0a:	694b      	ldr	r3, [r1, #20]
 8009a0c:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8009a10:	d001      	beq.n	8009a16 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8009a12:	2000      	movs	r0, #0
 8009a14:	e011      	b.n	8009a3a <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009a16:	694a      	ldr	r2, [r1, #20]
 8009a18:	06d2      	lsls	r2, r2, #27
 8009a1a:	d50f      	bpl.n	8009a3c <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009a1c:	f06f 0210 	mvn.w	r2, #16
 8009a20:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8009a22:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009a24:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009a26:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009a2a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8009a2e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009a30:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 8009a32:	2300      	movs	r3, #0
 8009a34:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8009a38:	2001      	movs	r0, #1
}
 8009a3a:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a3c:	f7ff f972 	bl	8008d24 <HAL_GetTick>
 8009a40:	1b80      	subs	r0, r0, r6
 8009a42:	42a8      	cmp	r0, r5
 8009a44:	d801      	bhi.n	8009a4a <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8009a46:	2d00      	cmp	r5, #0
 8009a48:	d1de      	bne.n	8009a08 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8009a4a:	6823      	ldr	r3, [r4, #0]
 8009a4c:	695b      	ldr	r3, [r3, #20]
 8009a4e:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8009a52:	d1d9      	bne.n	8009a08 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8009a54:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009a56:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009a58:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009a5c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009a60:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009a62:	4313      	orrs	r3, r2
 8009a64:	e7e4      	b.n	8009a30 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08009a68 <HAL_I2C_Init>:
{
 8009a68:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8009a6a:	4604      	mov	r4, r0
 8009a6c:	b908      	cbnz	r0, 8009a72 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8009a6e:	2001      	movs	r0, #1
}
 8009a70:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009a72:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8009a76:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8009a7a:	b91b      	cbnz	r3, 8009a84 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8009a7c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8009a80:	f7f8 fa76 	bl	8001f70 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009a84:	2324      	movs	r3, #36	@ 0x24
 8009a86:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009a8a:	6823      	ldr	r3, [r4, #0]
 8009a8c:	681a      	ldr	r2, [r3, #0]
 8009a8e:	f022 0201 	bic.w	r2, r2, #1
 8009a92:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009a94:	681a      	ldr	r2, [r3, #0]
 8009a96:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8009a9a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009a9c:	681a      	ldr	r2, [r3, #0]
 8009a9e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8009aa2:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009aa4:	f000 fea8 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009aa8:	4b3f      	ldr	r3, [pc, #252]	@ (8009ba8 <HAL_I2C_Init+0x140>)
 8009aaa:	6865      	ldr	r5, [r4, #4]
 8009aac:	429d      	cmp	r5, r3
 8009aae:	bf94      	ite	ls
 8009ab0:	4b3e      	ldrls	r3, [pc, #248]	@ (8009bac <HAL_I2C_Init+0x144>)
 8009ab2:	4b3f      	ldrhi	r3, [pc, #252]	@ (8009bb0 <HAL_I2C_Init+0x148>)
 8009ab4:	4298      	cmp	r0, r3
 8009ab6:	bf8c      	ite	hi
 8009ab8:	2300      	movhi	r3, #0
 8009aba:	2301      	movls	r3, #1
 8009abc:	2b00      	cmp	r3, #0
 8009abe:	d1d6      	bne.n	8009a6e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009ac0:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009ac2:	4e39      	ldr	r6, [pc, #228]	@ (8009ba8 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009ac4:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009ac6:	4b3b      	ldr	r3, [pc, #236]	@ (8009bb4 <HAL_I2C_Init+0x14c>)
 8009ac8:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009acc:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8009ad0:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009ad2:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009ad4:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009ad6:	bf88      	it	hi
 8009ad8:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8009adc:	6a11      	ldr	r1, [r2, #32]
 8009ade:	bf88      	it	hi
 8009ae0:	4373      	mulhi	r3, r6
 8009ae2:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8009ae6:	bf84      	itt	hi
 8009ae8:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8009aec:	fbb3 f3f6 	udivhi	r3, r3, r6
 8009af0:	3301      	adds	r3, #1
 8009af2:	430b      	orrs	r3, r1
 8009af4:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009af6:	69d1      	ldr	r1, [r2, #28]
 8009af8:	1e43      	subs	r3, r0, #1
 8009afa:	482b      	ldr	r0, [pc, #172]	@ (8009ba8 <HAL_I2C_Init+0x140>)
 8009afc:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8009b00:	4285      	cmp	r5, r0
 8009b02:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8009b06:	d832      	bhi.n	8009b6e <HAL_I2C_Init+0x106>
 8009b08:	006d      	lsls	r5, r5, #1
 8009b0a:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8009b0e:	fbb3 f3f5 	udiv	r3, r3, r5
 8009b12:	3301      	adds	r3, #1
 8009b14:	4203      	tst	r3, r0
 8009b16:	d042      	beq.n	8009b9e <HAL_I2C_Init+0x136>
 8009b18:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009b1c:	4319      	orrs	r1, r3
 8009b1e:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009b20:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009b24:	6811      	ldr	r1, [r2, #0]
 8009b26:	4303      	orrs	r3, r0
 8009b28:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8009b2c:	430b      	orrs	r3, r1
 8009b2e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009b30:	6891      	ldr	r1, [r2, #8]
 8009b32:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009b36:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8009b3a:	4303      	orrs	r3, r0
 8009b3c:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8009b40:	430b      	orrs	r3, r1
 8009b42:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009b44:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009b48:	68d1      	ldr	r1, [r2, #12]
 8009b4a:	4303      	orrs	r3, r0
 8009b4c:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8009b50:	430b      	orrs	r3, r1
 8009b52:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009b54:	6813      	ldr	r3, [r2, #0]
 8009b56:	f043 0301 	orr.w	r3, r3, #1
 8009b5a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009b5c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8009b5e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009b60:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8009b62:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009b66:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009b68:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8009b6c:	e780      	b.n	8009a70 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009b6e:	68a0      	ldr	r0, [r4, #8]
 8009b70:	b950      	cbnz	r0, 8009b88 <HAL_I2C_Init+0x120>
 8009b72:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009b76:	fbb3 f3f5 	udiv	r3, r3, r5
 8009b7a:	3301      	adds	r3, #1
 8009b7c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009b80:	b17b      	cbz	r3, 8009ba2 <HAL_I2C_Init+0x13a>
 8009b82:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8009b86:	e7c9      	b.n	8009b1c <HAL_I2C_Init+0xb4>
 8009b88:	2019      	movs	r0, #25
 8009b8a:	4368      	muls	r0, r5
 8009b8c:	fbb3 f3f0 	udiv	r3, r3, r0
 8009b90:	3301      	adds	r3, #1
 8009b92:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009b96:	b123      	cbz	r3, 8009ba2 <HAL_I2C_Init+0x13a>
 8009b98:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8009b9c:	e7be      	b.n	8009b1c <HAL_I2C_Init+0xb4>
 8009b9e:	2304      	movs	r3, #4
 8009ba0:	e7bc      	b.n	8009b1c <HAL_I2C_Init+0xb4>
 8009ba2:	2301      	movs	r3, #1
 8009ba4:	e7ba      	b.n	8009b1c <HAL_I2C_Init+0xb4>
 8009ba6:	bf00      	nop
 8009ba8:	000186a0 	.word	0x000186a0
 8009bac:	001e847f 	.word	0x001e847f
 8009bb0:	003d08ff 	.word	0x003d08ff
 8009bb4:	000f4240 	.word	0x000f4240

08009bb8 <HAL_I2C_Mem_Write>:
{
 8009bb8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009bbc:	4604      	mov	r4, r0
 8009bbe:	4699      	mov	r9, r3
 8009bc0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8009bc2:	460f      	mov	r7, r1
 8009bc4:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009bc6:	f7ff f8ad 	bl	8008d24 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009bca:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8009bce:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8009bd0:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009bd2:	d003      	beq.n	8009bdc <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8009bd4:	2002      	movs	r0, #2
}
 8009bd6:	b003      	add	sp, #12
 8009bd8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8009bdc:	9000      	str	r0, [sp, #0]
 8009bde:	493c      	ldr	r1, [pc, #240]	@ (8009cd0 <HAL_I2C_Mem_Write+0x118>)
 8009be0:	2319      	movs	r3, #25
 8009be2:	2201      	movs	r2, #1
 8009be4:	4620      	mov	r0, r4
 8009be6:	f7ff fd59 	bl	800969c <I2C_WaitOnFlagUntilTimeout>
 8009bea:	2800      	cmp	r0, #0
 8009bec:	d1f2      	bne.n	8009bd4 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8009bee:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8009bf2:	2b01      	cmp	r3, #1
 8009bf4:	d0ee      	beq.n	8009bd4 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009bf6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8009bf8:	2301      	movs	r3, #1
 8009bfa:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009bfe:	6803      	ldr	r3, [r0, #0]
 8009c00:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8009c02:	bf5e      	ittt	pl
 8009c04:	6803      	ldrpl	r3, [r0, #0]
 8009c06:	f043 0301 	orrpl.w	r3, r3, #1
 8009c0a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009c0c:	6803      	ldr	r3, [r0, #0]
 8009c0e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8009c12:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009c14:	2321      	movs	r3, #33	@ 0x21
 8009c16:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009c1a:	2340      	movs	r3, #64	@ 0x40
 8009c1c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009c20:	2300      	movs	r3, #0
 8009c22:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8009c24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009c26:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8009c28:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8009c2c:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009c2e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009c30:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009c32:	4b28      	ldr	r3, [pc, #160]	@ (8009cd4 <HAL_I2C_Mem_Write+0x11c>)
 8009c34:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c36:	4642      	mov	r2, r8
 8009c38:	e9cd 6500 	strd	r6, r5, [sp]
 8009c3c:	464b      	mov	r3, r9
 8009c3e:	4639      	mov	r1, r7
 8009c40:	4620      	mov	r0, r4
 8009c42:	f7ff fdd7 	bl	80097f4 <I2C_RequestMemoryWrite>
 8009c46:	2800      	cmp	r0, #0
 8009c48:	d02a      	beq.n	8009ca0 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8009c4a:	2001      	movs	r0, #1
 8009c4c:	e7c3      	b.n	8009bd6 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8009c4e:	f7ff fda7 	bl	80097a0 <I2C_WaitOnTXEFlagUntilTimeout>
 8009c52:	b140      	cbz	r0, 8009c66 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c54:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009c56:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c58:	bf01      	itttt	eq
 8009c5a:	6822      	ldreq	r2, [r4, #0]
 8009c5c:	6813      	ldreq	r3, [r2, #0]
 8009c5e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8009c62:	6013      	streq	r3, [r2, #0]
 8009c64:	e7f1      	b.n	8009c4a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c66:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009c68:	6827      	ldr	r7, [r4, #0]
 8009c6a:	461a      	mov	r2, r3
 8009c6c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009c70:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8009c72:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8009c74:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8009c76:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8009c78:	3a01      	subs	r2, #1
 8009c7a:	b292      	uxth	r2, r2
 8009c7c:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009c7e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8009c80:	1e48      	subs	r0, r1, #1
 8009c82:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009c84:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8009c86:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009c88:	d50a      	bpl.n	8009ca0 <HAL_I2C_Mem_Write+0xe8>
 8009c8a:	b148      	cbz	r0, 8009ca0 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c8c:	785a      	ldrb	r2, [r3, #1]
 8009c8e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8009c90:	3302      	adds	r3, #2
 8009c92:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8009c94:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009c96:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8009c98:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8009c9a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8009c9c:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8009c9e:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8009ca0:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8009ca2:	462a      	mov	r2, r5
 8009ca4:	4631      	mov	r1, r6
 8009ca6:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8009ca8:	2b00      	cmp	r3, #0
 8009caa:	d1d0      	bne.n	8009c4e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8009cac:	f7ff fe7e 	bl	80099ac <I2C_WaitOnBTFFlagUntilTimeout>
 8009cb0:	2800      	cmp	r0, #0
 8009cb2:	d1cf      	bne.n	8009c54 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009cb4:	6822      	ldr	r2, [r4, #0]
 8009cb6:	6813      	ldr	r3, [r2, #0]
 8009cb8:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8009cbc:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009cbe:	2320      	movs	r3, #32
 8009cc0:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8009cc4:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009cc8:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8009ccc:	e783      	b.n	8009bd6 <HAL_I2C_Mem_Write+0x1e>
 8009cce:	bf00      	nop
 8009cd0:	00100002 	.word	0x00100002
 8009cd4:	ffff0000 	.word	0xffff0000

08009cd8 <HAL_I2C_Mem_Read>:
{
 8009cd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009cdc:	4604      	mov	r4, r0
 8009cde:	b087      	sub	sp, #28
 8009ce0:	4699      	mov	r9, r3
 8009ce2:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8009ce4:	460d      	mov	r5, r1
 8009ce6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009ce8:	f7ff f81c 	bl	8008d24 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009cec:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8009cf0:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8009cf2:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009cf4:	d004      	beq.n	8009d00 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8009cf6:	2502      	movs	r5, #2
}
 8009cf8:	4628      	mov	r0, r5
 8009cfa:	b007      	add	sp, #28
 8009cfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8009d00:	9000      	str	r0, [sp, #0]
 8009d02:	497a      	ldr	r1, [pc, #488]	@ (8009eec <HAL_I2C_Mem_Read+0x214>)
 8009d04:	2319      	movs	r3, #25
 8009d06:	2201      	movs	r2, #1
 8009d08:	4620      	mov	r0, r4
 8009d0a:	f7ff fcc7 	bl	800969c <I2C_WaitOnFlagUntilTimeout>
 8009d0e:	2800      	cmp	r0, #0
 8009d10:	d1f1      	bne.n	8009cf6 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8009d12:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8009d16:	2b01      	cmp	r3, #1
 8009d18:	d0ed      	beq.n	8009cf6 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009d1a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8009d1c:	2301      	movs	r3, #1
 8009d1e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009d22:	6803      	ldr	r3, [r0, #0]
 8009d24:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8009d26:	bf5e      	ittt	pl
 8009d28:	6803      	ldrpl	r3, [r0, #0]
 8009d2a:	f043 0301 	orrpl.w	r3, r3, #1
 8009d2e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009d30:	6803      	ldr	r3, [r0, #0]
 8009d32:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8009d36:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009d38:	2322      	movs	r3, #34	@ 0x22
 8009d3a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009d3e:	2340      	movs	r3, #64	@ 0x40
 8009d40:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009d44:	2300      	movs	r3, #0
 8009d46:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8009d48:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009d4a:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8009d4c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8009d50:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009d52:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009d54:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009d56:	4b66      	ldr	r3, [pc, #408]	@ (8009ef0 <HAL_I2C_Mem_Read+0x218>)
 8009d58:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009d5a:	4629      	mov	r1, r5
 8009d5c:	e9cd 7600 	strd	r7, r6, [sp]
 8009d60:	464b      	mov	r3, r9
 8009d62:	4642      	mov	r2, r8
 8009d64:	4620      	mov	r0, r4
 8009d66:	f7ff fd9f 	bl	80098a8 <I2C_RequestMemoryRead>
 8009d6a:	4605      	mov	r5, r0
 8009d6c:	b108      	cbz	r0, 8009d72 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8009d6e:	2501      	movs	r5, #1
 8009d70:	e7c2      	b.n	8009cf8 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8009d72:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009d74:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8009d76:	b9b2      	cbnz	r2, 8009da6 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009d78:	9002      	str	r0, [sp, #8]
 8009d7a:	695a      	ldr	r2, [r3, #20]
 8009d7c:	9202      	str	r2, [sp, #8]
 8009d7e:	699a      	ldr	r2, [r3, #24]
 8009d80:	9202      	str	r2, [sp, #8]
 8009d82:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d84:	681a      	ldr	r2, [r3, #0]
 8009d86:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8009d8a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8009d8c:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 8009ef4 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8009d90:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8009d92:	2b00      	cmp	r3, #0
 8009d94:	d12c      	bne.n	8009df0 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8009d96:	2220      	movs	r2, #32
 8009d98:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8009d9c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009da0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8009da4:	e7a8      	b.n	8009cf8 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8009da6:	2a01      	cmp	r2, #1
 8009da8:	d10a      	bne.n	8009dc0 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009daa:	681a      	ldr	r2, [r3, #0]
 8009dac:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8009db0:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009db2:	9003      	str	r0, [sp, #12]
 8009db4:	695a      	ldr	r2, [r3, #20]
 8009db6:	9203      	str	r2, [sp, #12]
 8009db8:	699a      	ldr	r2, [r3, #24]
 8009dba:	9203      	str	r2, [sp, #12]
 8009dbc:	9a03      	ldr	r2, [sp, #12]
 8009dbe:	e7e1      	b.n	8009d84 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8009dc0:	2a02      	cmp	r2, #2
 8009dc2:	d10e      	bne.n	8009de2 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009dc4:	681a      	ldr	r2, [r3, #0]
 8009dc6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8009dca:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009dcc:	681a      	ldr	r2, [r3, #0]
 8009dce:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8009dd2:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009dd4:	9004      	str	r0, [sp, #16]
 8009dd6:	695a      	ldr	r2, [r3, #20]
 8009dd8:	9204      	str	r2, [sp, #16]
 8009dda:	699b      	ldr	r3, [r3, #24]
 8009ddc:	9304      	str	r3, [sp, #16]
 8009dde:	9b04      	ldr	r3, [sp, #16]
 8009de0:	e7d4      	b.n	8009d8c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009de2:	9005      	str	r0, [sp, #20]
 8009de4:	695a      	ldr	r2, [r3, #20]
 8009de6:	9205      	str	r2, [sp, #20]
 8009de8:	699b      	ldr	r3, [r3, #24]
 8009dea:	9305      	str	r3, [sp, #20]
 8009dec:	9b05      	ldr	r3, [sp, #20]
 8009dee:	e7cd      	b.n	8009d8c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8009df0:	2b03      	cmp	r3, #3
 8009df2:	d856      	bhi.n	8009ea2 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8009df4:	2b01      	cmp	r3, #1
 8009df6:	d115      	bne.n	8009e24 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8009df8:	4632      	mov	r2, r6
 8009dfa:	4639      	mov	r1, r7
 8009dfc:	4620      	mov	r0, r4
 8009dfe:	f7ff fdff 	bl	8009a00 <I2C_WaitOnRXNEFlagUntilTimeout>
 8009e02:	2800      	cmp	r0, #0
 8009e04:	d1b3      	bne.n	8009d6e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e06:	6823      	ldr	r3, [r4, #0]
 8009e08:	691a      	ldr	r2, [r3, #16]
 8009e0a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009e0c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009e0e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009e10:	3301      	adds	r3, #1
 8009e12:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8009e14:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8009e16:	3b01      	subs	r3, #1
 8009e18:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8009e1a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009e1c:	3b01      	subs	r3, #1
 8009e1e:	b29b      	uxth	r3, r3
 8009e20:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8009e22:	e7b5      	b.n	8009d90 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8009e24:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8009e26:	9600      	str	r6, [sp, #0]
 8009e28:	463b      	mov	r3, r7
 8009e2a:	f04f 0200 	mov.w	r2, #0
 8009e2e:	4641      	mov	r1, r8
 8009e30:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8009e32:	d119      	bne.n	8009e68 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8009e34:	f7ff fc32 	bl	800969c <I2C_WaitOnFlagUntilTimeout>
 8009e38:	2800      	cmp	r0, #0
 8009e3a:	d198      	bne.n	8009d6e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009e3c:	6823      	ldr	r3, [r4, #0]
 8009e3e:	681a      	ldr	r2, [r3, #0]
 8009e40:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8009e44:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e46:	691a      	ldr	r2, [r3, #16]
 8009e48:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009e4a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009e4c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8009e4e:	1c53      	adds	r3, r2, #1
 8009e50:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8009e52:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8009e54:	3b01      	subs	r3, #1
 8009e56:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8009e58:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009e5a:	3b01      	subs	r3, #1
 8009e5c:	b29b      	uxth	r3, r3
 8009e5e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e60:	6823      	ldr	r3, [r4, #0]
 8009e62:	691b      	ldr	r3, [r3, #16]
 8009e64:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009e66:	e7d2      	b.n	8009e0e <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8009e68:	f7ff fc18 	bl	800969c <I2C_WaitOnFlagUntilTimeout>
 8009e6c:	4602      	mov	r2, r0
 8009e6e:	2800      	cmp	r0, #0
 8009e70:	f47f af7d 	bne.w	8009d6e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009e74:	6823      	ldr	r3, [r4, #0]
 8009e76:	6819      	ldr	r1, [r3, #0]
 8009e78:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8009e7c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e7e:	6919      	ldr	r1, [r3, #16]
 8009e80:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009e82:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8009e84:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009e86:	3301      	adds	r3, #1
 8009e88:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8009e8a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8009e8c:	3b01      	subs	r3, #1
 8009e8e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8009e90:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009e92:	3b01      	subs	r3, #1
 8009e94:	b29b      	uxth	r3, r3
 8009e96:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8009e98:	4641      	mov	r1, r8
 8009e9a:	9600      	str	r6, [sp, #0]
 8009e9c:	463b      	mov	r3, r7
 8009e9e:	4620      	mov	r0, r4
 8009ea0:	e7c8      	b.n	8009e34 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8009ea2:	4632      	mov	r2, r6
 8009ea4:	4639      	mov	r1, r7
 8009ea6:	4620      	mov	r0, r4
 8009ea8:	f7ff fdaa 	bl	8009a00 <I2C_WaitOnRXNEFlagUntilTimeout>
 8009eac:	2800      	cmp	r0, #0
 8009eae:	f47f af5e 	bne.w	8009d6e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009eb2:	6823      	ldr	r3, [r4, #0]
 8009eb4:	691a      	ldr	r2, [r3, #16]
 8009eb6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009eb8:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8009eba:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8009ebc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8009ebe:	3a01      	subs	r2, #1
 8009ec0:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009ec2:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8009ec4:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009ec6:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8009ec8:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8009eca:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009ecc:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 8009ece:	3b01      	subs	r3, #1
 8009ed0:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009ed2:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8009ed4:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009ed6:	f57f af5b 	bpl.w	8009d90 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 8009eda:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009edc:	bf02      	ittt	eq
 8009ede:	6813      	ldreq	r3, [r2, #0]
 8009ee0:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8009ee4:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ee6:	6913      	ldr	r3, [r2, #16]
 8009ee8:	704b      	strb	r3, [r1, #1]
 8009eea:	e790      	b.n	8009e0e <HAL_I2C_Mem_Read+0x136>
 8009eec:	00100002 	.word	0x00100002
 8009ef0:	ffff0000 	.word	0xffff0000
 8009ef4:	00010004 	.word	0x00010004

08009ef8 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8009ef8:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8009efa:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8009efe:	2b20      	cmp	r3, #32
 8009f00:	b2dc      	uxtb	r4, r3
 8009f02:	d116      	bne.n	8009f32 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009f04:	2324      	movs	r3, #36	@ 0x24
 8009f06:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8009f0a:	6803      	ldr	r3, [r0, #0]
 8009f0c:	681a      	ldr	r2, [r3, #0]
 8009f0e:	f022 0201 	bic.w	r2, r2, #1
 8009f12:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8009f14:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8009f16:	f022 0210 	bic.w	r2, r2, #16
 8009f1a:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8009f1c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8009f1e:	4311      	orrs	r1, r2
 8009f20:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8009f22:	681a      	ldr	r2, [r3, #0]
 8009f24:	f042 0201 	orr.w	r2, r2, #1
 8009f28:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8009f2a:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8009f2e:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8009f30:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8009f32:	2002      	movs	r0, #2
 8009f34:	e7fc      	b.n	8009f30 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08009f36 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8009f36:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8009f38:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8009f3c:	2b20      	cmp	r3, #32
 8009f3e:	b2dc      	uxtb	r4, r3
 8009f40:	d116      	bne.n	8009f70 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8009f42:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009f44:	2324      	movs	r3, #36	@ 0x24
 8009f46:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8009f4a:	6813      	ldr	r3, [r2, #0]
 8009f4c:	f023 0301 	bic.w	r3, r3, #1
 8009f50:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8009f52:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8009f54:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8009f58:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8009f5a:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8009f5c:	b29b      	uxth	r3, r3
 8009f5e:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8009f60:	6813      	ldr	r3, [r2, #0]
 8009f62:	f043 0301 	orr.w	r3, r3, #1
 8009f66:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8009f68:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8009f6c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8009f6e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8009f70:	2002      	movs	r0, #2
 8009f72:	e7fc      	b.n	8009f6e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08009f74 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009f74:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8009f76:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009f7a:	01d2      	lsls	r2, r2, #7
 8009f7c:	3284      	adds	r2, #132	@ 0x84
 8009f7e:	1883      	adds	r3, r0, r2
{
 8009f80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009f84:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009f86:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009f88:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8009f8a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009f8e:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8009f92:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8009f94:	68c5      	ldr	r5, [r0, #12]
 8009f96:	f10c 0701 	add.w	r7, ip, #1
 8009f9a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009f9e:	f3c6 460b 	ubfx	r6, r6, #16, #12
 8009fa2:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8009fa4:	443d      	add	r5, r7
 8009fa6:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8009faa:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009fac:	68c6      	ldr	r6, [r0, #12]
 8009fae:	68cd      	ldr	r5, [r1, #12]
 8009fb0:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8009fb4:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8009fb6:	689d      	ldr	r5, [r3, #8]
 8009fb8:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8009fbc:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8009fbe:	68c7      	ldr	r7, [r0, #12]
 8009fc0:	688d      	ldr	r5, [r1, #8]
 8009fc2:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8009fc6:	3501      	adds	r5, #1
 8009fc8:	443d      	add	r5, r7
 8009fca:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8009fce:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009fd0:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009fd2:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009fd4:	f025 0507 	bic.w	r5, r5, #7
 8009fd8:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009fda:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009fde:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8009fe0:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009fe4:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8009fe6:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009fea:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8009fee:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8009ff2:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8009ff6:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8009ffa:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8009ffe:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800a000:	695d      	ldr	r5, [r3, #20]
 800a002:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 800a006:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800a008:	694d      	ldr	r5, [r1, #20]
 800a00a:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800a00c:	69dd      	ldr	r5, [r3, #28]
 800a00e:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 800a012:	f025 0507 	bic.w	r5, r5, #7
 800a016:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800a018:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800a01c:	433d      	orrs	r5, r7
 800a01e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800a020:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800a022:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800a024:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800a028:	2e07      	cmp	r6, #7
 800a02a:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800a02c:	bf9c      	itt	ls
 800a02e:	4d0e      	ldrls	r5, [pc, #56]	@ (800a068 <LTDC_SetConfig+0xf4>)
 800a030:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800a032:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800a034:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 800a038:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800a03a:	bf88      	it	hi
 800a03c:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800a03e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800a040:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800a042:	eba4 040c 	sub.w	r4, r4, ip
 800a046:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800a048:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800a04a:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800a04c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800a050:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800a052:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 800a054:	f36f 040a 	bfc	r4, #0, #11
 800a058:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800a05a:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800a05c:	5883      	ldr	r3, [r0, r2]
 800a05e:	f043 0301 	orr.w	r3, r3, #1
 800a062:	5083      	str	r3, [r0, r2]
}
 800a064:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a068:	0802aea8 	.word	0x0802aea8

0800a06c <HAL_LTDC_Init>:
{
 800a06c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800a06e:	4604      	mov	r4, r0
 800a070:	2800      	cmp	r0, #0
 800a072:	d063      	beq.n	800a13c <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800a074:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 800a078:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800a07c:	b91b      	cbnz	r3, 800a086 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800a07e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 800a082:	f7f7 ffd1 	bl	8002028 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a086:	2302      	movs	r3, #2
 800a088:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800a08c:	6823      	ldr	r3, [r4, #0]
 800a08e:	699a      	ldr	r2, [r3, #24]
 800a090:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 800a094:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a096:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800a09a:	4302      	orrs	r2, r0
 800a09c:	68e0      	ldr	r0, [r4, #12]
 800a09e:	6999      	ldr	r1, [r3, #24]
 800a0a0:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800a0a2:	6920      	ldr	r0, [r4, #16]
 800a0a4:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a0a6:	430a      	orrs	r2, r1
 800a0a8:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800a0aa:	689a      	ldr	r2, [r3, #8]
 800a0ac:	4924      	ldr	r1, [pc, #144]	@ (800a140 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800a0ae:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800a0b0:	400a      	ands	r2, r1
 800a0b2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800a0b4:	689a      	ldr	r2, [r3, #8]
 800a0b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a0ba:	69a0      	ldr	r0, [r4, #24]
 800a0bc:	4302      	orrs	r2, r0
 800a0be:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800a0c0:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800a0c2:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800a0c4:	400a      	ands	r2, r1
 800a0c6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800a0c8:	68da      	ldr	r2, [r3, #12]
 800a0ca:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a0ce:	6a20      	ldr	r0, [r4, #32]
 800a0d0:	4302      	orrs	r2, r0
 800a0d2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800a0d4:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800a0d6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800a0d8:	400a      	ands	r2, r1
 800a0da:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800a0dc:	691a      	ldr	r2, [r3, #16]
 800a0de:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a0e2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800a0e4:	4302      	orrs	r2, r0
 800a0e6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800a0e8:	695a      	ldr	r2, [r3, #20]
 800a0ea:	400a      	ands	r2, r1
 800a0ec:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800a0ee:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800a0f0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800a0f2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a0f6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800a0f8:	430a      	orrs	r2, r1
 800a0fa:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800a0fc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800a0fe:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800a102:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800a106:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 800a10a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800a10c:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800a10e:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 800a112:	432a      	orrs	r2, r5
 800a114:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800a118:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a11c:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800a11e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a120:	f042 0206 	orr.w	r2, r2, #6
 800a124:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800a126:	699a      	ldr	r2, [r3, #24]
 800a128:	f042 0201 	orr.w	r2, r2, #1
 800a12c:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800a12e:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800a130:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800a132:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800a136:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 800a13a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800a13c:	2001      	movs	r0, #1
 800a13e:	e7fc      	b.n	800a13a <HAL_LTDC_Init+0xce>
 800a140:	f000f800 	.word	0xf000f800

0800a144 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 800a144:	4770      	bx	lr

0800a146 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 800a146:	4770      	bx	lr

0800a148 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800a148:	6803      	ldr	r3, [r0, #0]
{
 800a14a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800a14c:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800a14e:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800a150:	0772      	lsls	r2, r6, #29
{
 800a152:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800a154:	d514      	bpl.n	800a180 <HAL_LTDC_IRQHandler+0x38>
 800a156:	0769      	lsls	r1, r5, #29
 800a158:	d512      	bpl.n	800a180 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800a15a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a15c:	f022 0204 	bic.w	r2, r2, #4
 800a160:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800a162:	2204      	movs	r2, #4
 800a164:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800a166:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800a16a:	f043 0301 	orr.w	r3, r3, #1
 800a16e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 800a172:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800a174:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800a178:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800a17c:	f7ff ffe2 	bl	800a144 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800a180:	07b2      	lsls	r2, r6, #30
 800a182:	d516      	bpl.n	800a1b2 <HAL_LTDC_IRQHandler+0x6a>
 800a184:	07ab      	lsls	r3, r5, #30
 800a186:	d514      	bpl.n	800a1b2 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800a188:	6823      	ldr	r3, [r4, #0]
 800a18a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a18c:	f022 0202 	bic.w	r2, r2, #2
 800a190:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800a192:	2202      	movs	r2, #2
 800a194:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800a196:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800a19a:	4313      	orrs	r3, r2
 800a19c:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800a1a0:	2304      	movs	r3, #4
 800a1a2:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800a1a6:	2300      	movs	r3, #0
 800a1a8:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800a1ac:	4620      	mov	r0, r4
 800a1ae:	f7ff ffc9 	bl	800a144 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800a1b2:	07f0      	lsls	r0, r6, #31
 800a1b4:	d510      	bpl.n	800a1d8 <HAL_LTDC_IRQHandler+0x90>
 800a1b6:	07e9      	lsls	r1, r5, #31
 800a1b8:	d50e      	bpl.n	800a1d8 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800a1ba:	6823      	ldr	r3, [r4, #0]
 800a1bc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a1be:	f022 0201 	bic.w	r2, r2, #1
 800a1c2:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800a1c4:	2201      	movs	r2, #1
 800a1c6:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800a1c8:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800a1ca:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800a1ce:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800a1d2:	4620      	mov	r0, r4
 800a1d4:	f7f7 fa02 	bl	80015dc <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800a1d8:	0732      	lsls	r2, r6, #28
 800a1da:	d511      	bpl.n	800a200 <HAL_LTDC_IRQHandler+0xb8>
 800a1dc:	072b      	lsls	r3, r5, #28
 800a1de:	d50f      	bpl.n	800a200 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800a1e0:	6823      	ldr	r3, [r4, #0]
 800a1e2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a1e4:	f022 0208 	bic.w	r2, r2, #8
 800a1e8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800a1ea:	2208      	movs	r2, #8
 800a1ec:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800a1ee:	2301      	movs	r3, #1
 800a1f0:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800a1f4:	2300      	movs	r3, #0
 800a1f6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800a1fa:	4620      	mov	r0, r4
 800a1fc:	f7ff ffa3 	bl	800a146 <HAL_LTDC_ReloadEventCallback>
}
 800a200:	bd70      	pop	{r4, r5, r6, pc}

0800a202 <HAL_LTDC_ConfigLayer>:
{
 800a202:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800a206:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 800a20a:	2b01      	cmp	r3, #1
{
 800a20c:	4606      	mov	r6, r0
 800a20e:	460f      	mov	r7, r1
 800a210:	4694      	mov	ip, r2
 800a212:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800a216:	d01f      	beq.n	800a258 <HAL_LTDC_ConfigLayer+0x56>
 800a218:	f04f 0801 	mov.w	r8, #1
 800a21c:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a220:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800a224:	2434      	movs	r4, #52	@ 0x34
 800a226:	460d      	mov	r5, r1
 800a228:	fb04 6402 	mla	r4, r4, r2, r6
 800a22c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a22e:	3438      	adds	r4, #56	@ 0x38
 800a230:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a232:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a234:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a236:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a238:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a23a:	682b      	ldr	r3, [r5, #0]
 800a23c:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800a23e:	4630      	mov	r0, r6
 800a240:	4662      	mov	r2, ip
 800a242:	4639      	mov	r1, r7
 800a244:	f7ff fe96 	bl	8009f74 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800a248:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800a24a:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800a24c:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800a250:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800a254:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 800a258:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a25c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800a25c:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 800a260:	2a01      	cmp	r2, #1
{
 800a262:	4603      	mov	r3, r0
 800a264:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800a268:	d012      	beq.n	800a290 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800a26a:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a26c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800a270:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 800a272:	f020 0001 	bic.w	r0, r0, #1
 800a276:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800a278:	4806      	ldr	r0, [pc, #24]	@ (800a294 <HAL_LTDC_ProgramLineEvent+0x38>)
 800a27a:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800a27c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800a27e:	f041 0101 	orr.w	r1, r1, #1
 800a282:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 800a284:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800a286:	2201      	movs	r2, #1
 800a288:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800a28c:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 800a290:	4770      	bx	lr
 800a292:	bf00      	nop
 800a294:	40016800 	.word	0x40016800

0800a298 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800a298:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800a29a:	2300      	movs	r3, #0
 800a29c:	9301      	str	r3, [sp, #4]
 800a29e:	4b18      	ldr	r3, [pc, #96]	@ (800a300 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800a2a0:	4d18      	ldr	r5, [pc, #96]	@ (800a304 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800a2a2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a2a4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800a2a8:	641a      	str	r2, [r3, #64]	@ 0x40
 800a2aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a2ac:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800a2b0:	9301      	str	r3, [sp, #4]
 800a2b2:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800a2b4:	4b14      	ldr	r3, [pc, #80]	@ (800a308 <HAL_PWREx_EnableOverDrive+0x70>)
 800a2b6:	2201      	movs	r2, #1
 800a2b8:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 800a2ba:	f7fe fd33 	bl	8008d24 <HAL_GetTick>
 800a2be:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800a2c0:	686b      	ldr	r3, [r5, #4]
 800a2c2:	03da      	lsls	r2, r3, #15
 800a2c4:	d50b      	bpl.n	800a2de <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800a2c6:	4b10      	ldr	r3, [pc, #64]	@ (800a308 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800a2c8:	4d0e      	ldr	r5, [pc, #56]	@ (800a304 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800a2ca:	2201      	movs	r2, #1
 800a2cc:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 800a2ce:	f7fe fd29 	bl	8008d24 <HAL_GetTick>
 800a2d2:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800a2d4:	686b      	ldr	r3, [r5, #4]
 800a2d6:	039b      	lsls	r3, r3, #14
 800a2d8:	d50a      	bpl.n	800a2f0 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800a2da:	2000      	movs	r0, #0
 800a2dc:	e006      	b.n	800a2ec <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800a2de:	f7fe fd21 	bl	8008d24 <HAL_GetTick>
 800a2e2:	1b00      	subs	r0, r0, r4
 800a2e4:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800a2e8:	d9ea      	bls.n	800a2c0 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800a2ea:	2003      	movs	r0, #3
}
 800a2ec:	b003      	add	sp, #12
 800a2ee:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800a2f0:	f7fe fd18 	bl	8008d24 <HAL_GetTick>
 800a2f4:	1b00      	subs	r0, r0, r4
 800a2f6:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800a2fa:	d9eb      	bls.n	800a2d4 <HAL_PWREx_EnableOverDrive+0x3c>
 800a2fc:	e7f5      	b.n	800a2ea <HAL_PWREx_EnableOverDrive+0x52>
 800a2fe:	bf00      	nop
 800a300:	40023800 	.word	0x40023800
 800a304:	40007000 	.word	0x40007000
 800a308:	420e0000 	.word	0x420e0000

0800a30c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800a30c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800a310:	4604      	mov	r4, r0
 800a312:	b340      	cbz	r0, 800a366 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800a314:	6803      	ldr	r3, [r0, #0]
 800a316:	07de      	lsls	r6, r3, #31
 800a318:	d410      	bmi.n	800a33c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800a31a:	6823      	ldr	r3, [r4, #0]
 800a31c:	079d      	lsls	r5, r3, #30
 800a31e:	d45b      	bmi.n	800a3d8 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a320:	6823      	ldr	r3, [r4, #0]
 800a322:	0719      	lsls	r1, r3, #28
 800a324:	f100 809d 	bmi.w	800a462 <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800a328:	6823      	ldr	r3, [r4, #0]
 800a32a:	075a      	lsls	r2, r3, #29
 800a32c:	f100 80bd 	bmi.w	800a4aa <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800a330:	69a3      	ldr	r3, [r4, #24]
 800a332:	2b00      	cmp	r3, #0
 800a334:	f040 8124 	bne.w	800a580 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800a338:	2000      	movs	r0, #0
 800a33a:	e02c      	b.n	800a396 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800a33c:	4b8d      	ldr	r3, [pc, #564]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
 800a33e:	689a      	ldr	r2, [r3, #8]
 800a340:	f002 020c 	and.w	r2, r2, #12
 800a344:	2a04      	cmp	r2, #4
 800a346:	d007      	beq.n	800a358 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800a348:	689a      	ldr	r2, [r3, #8]
 800a34a:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800a34e:	2a08      	cmp	r2, #8
 800a350:	d10b      	bne.n	800a36a <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800a352:	685b      	ldr	r3, [r3, #4]
 800a354:	0259      	lsls	r1, r3, #9
 800a356:	d508      	bpl.n	800a36a <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800a358:	4b86      	ldr	r3, [pc, #536]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
 800a35a:	681b      	ldr	r3, [r3, #0]
 800a35c:	039a      	lsls	r2, r3, #14
 800a35e:	d5dc      	bpl.n	800a31a <HAL_RCC_OscConfig+0xe>
 800a360:	6863      	ldr	r3, [r4, #4]
 800a362:	2b00      	cmp	r3, #0
 800a364:	d1d9      	bne.n	800a31a <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 800a366:	2001      	movs	r0, #1
 800a368:	e015      	b.n	800a396 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a36a:	6863      	ldr	r3, [r4, #4]
 800a36c:	4d81      	ldr	r5, [pc, #516]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
 800a36e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800a372:	d113      	bne.n	800a39c <HAL_RCC_OscConfig+0x90>
 800a374:	682b      	ldr	r3, [r5, #0]
 800a376:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800a37a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800a37c:	f7fe fcd2 	bl	8008d24 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a380:	4e7c      	ldr	r6, [pc, #496]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800a382:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a384:	6833      	ldr	r3, [r6, #0]
 800a386:	039b      	lsls	r3, r3, #14
 800a388:	d4c7      	bmi.n	800a31a <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800a38a:	f7fe fccb 	bl	8008d24 <HAL_GetTick>
 800a38e:	1b40      	subs	r0, r0, r5
 800a390:	2864      	cmp	r0, #100	@ 0x64
 800a392:	d9f7      	bls.n	800a384 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 800a394:	2003      	movs	r0, #3
}
 800a396:	b002      	add	sp, #8
 800a398:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a39c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800a3a0:	d104      	bne.n	800a3ac <HAL_RCC_OscConfig+0xa0>
 800a3a2:	682b      	ldr	r3, [r5, #0]
 800a3a4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800a3a8:	602b      	str	r3, [r5, #0]
 800a3aa:	e7e3      	b.n	800a374 <HAL_RCC_OscConfig+0x68>
 800a3ac:	682a      	ldr	r2, [r5, #0]
 800a3ae:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800a3b2:	602a      	str	r2, [r5, #0]
 800a3b4:	682a      	ldr	r2, [r5, #0]
 800a3b6:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800a3ba:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800a3bc:	2b00      	cmp	r3, #0
 800a3be:	d1dd      	bne.n	800a37c <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 800a3c0:	f7fe fcb0 	bl	8008d24 <HAL_GetTick>
 800a3c4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800a3c6:	682b      	ldr	r3, [r5, #0]
 800a3c8:	039f      	lsls	r7, r3, #14
 800a3ca:	d5a6      	bpl.n	800a31a <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800a3cc:	f7fe fcaa 	bl	8008d24 <HAL_GetTick>
 800a3d0:	1b80      	subs	r0, r0, r6
 800a3d2:	2864      	cmp	r0, #100	@ 0x64
 800a3d4:	d9f7      	bls.n	800a3c6 <HAL_RCC_OscConfig+0xba>
 800a3d6:	e7dd      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800a3d8:	4b66      	ldr	r3, [pc, #408]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
 800a3da:	689a      	ldr	r2, [r3, #8]
 800a3dc:	f012 0f0c 	tst.w	r2, #12
 800a3e0:	d007      	beq.n	800a3f2 <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a3e2:	689a      	ldr	r2, [r3, #8]
 800a3e4:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800a3e8:	2a08      	cmp	r2, #8
 800a3ea:	d111      	bne.n	800a410 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a3ec:	685b      	ldr	r3, [r3, #4]
 800a3ee:	025d      	lsls	r5, r3, #9
 800a3f0:	d40e      	bmi.n	800a410 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a3f2:	4a60      	ldr	r2, [pc, #384]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
 800a3f4:	6813      	ldr	r3, [r2, #0]
 800a3f6:	0799      	lsls	r1, r3, #30
 800a3f8:	d502      	bpl.n	800a400 <HAL_RCC_OscConfig+0xf4>
 800a3fa:	68e3      	ldr	r3, [r4, #12]
 800a3fc:	2b01      	cmp	r3, #1
 800a3fe:	d1b2      	bne.n	800a366 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a400:	6813      	ldr	r3, [r2, #0]
 800a402:	6921      	ldr	r1, [r4, #16]
 800a404:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800a408:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800a40c:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a40e:	e787      	b.n	800a320 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800a410:	68e2      	ldr	r2, [r4, #12]
 800a412:	4b59      	ldr	r3, [pc, #356]	@ (800a578 <HAL_RCC_OscConfig+0x26c>)
 800a414:	b1b2      	cbz	r2, 800a444 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 800a416:	2201      	movs	r2, #1
 800a418:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800a41a:	f7fe fc83 	bl	8008d24 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a41e:	4d55      	ldr	r5, [pc, #340]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800a420:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a422:	682b      	ldr	r3, [r5, #0]
 800a424:	079b      	lsls	r3, r3, #30
 800a426:	d507      	bpl.n	800a438 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a428:	682b      	ldr	r3, [r5, #0]
 800a42a:	6922      	ldr	r2, [r4, #16]
 800a42c:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800a430:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800a434:	602b      	str	r3, [r5, #0]
 800a436:	e773      	b.n	800a320 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800a438:	f7fe fc74 	bl	8008d24 <HAL_GetTick>
 800a43c:	1b80      	subs	r0, r0, r6
 800a43e:	2802      	cmp	r0, #2
 800a440:	d9ef      	bls.n	800a422 <HAL_RCC_OscConfig+0x116>
 800a442:	e7a7      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800a444:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800a446:	f7fe fc6d 	bl	8008d24 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a44a:	4e4a      	ldr	r6, [pc, #296]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800a44c:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a44e:	6833      	ldr	r3, [r6, #0]
 800a450:	079f      	lsls	r7, r3, #30
 800a452:	f57f af65 	bpl.w	800a320 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800a456:	f7fe fc65 	bl	8008d24 <HAL_GetTick>
 800a45a:	1b40      	subs	r0, r0, r5
 800a45c:	2802      	cmp	r0, #2
 800a45e:	d9f6      	bls.n	800a44e <HAL_RCC_OscConfig+0x142>
 800a460:	e798      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800a462:	6962      	ldr	r2, [r4, #20]
 800a464:	4b44      	ldr	r3, [pc, #272]	@ (800a578 <HAL_RCC_OscConfig+0x26c>)
 800a466:	b182      	cbz	r2, 800a48a <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 800a468:	2201      	movs	r2, #1
 800a46a:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800a46e:	f7fe fc59 	bl	8008d24 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a472:	4e40      	ldr	r6, [pc, #256]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800a474:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a476:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800a478:	079b      	lsls	r3, r3, #30
 800a47a:	f53f af55 	bmi.w	800a328 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800a47e:	f7fe fc51 	bl	8008d24 <HAL_GetTick>
 800a482:	1b40      	subs	r0, r0, r5
 800a484:	2802      	cmp	r0, #2
 800a486:	d9f6      	bls.n	800a476 <HAL_RCC_OscConfig+0x16a>
 800a488:	e784      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 800a48a:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800a48e:	f7fe fc49 	bl	8008d24 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a492:	4e38      	ldr	r6, [pc, #224]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800a494:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a496:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800a498:	079f      	lsls	r7, r3, #30
 800a49a:	f57f af45 	bpl.w	800a328 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800a49e:	f7fe fc41 	bl	8008d24 <HAL_GetTick>
 800a4a2:	1b40      	subs	r0, r0, r5
 800a4a4:	2802      	cmp	r0, #2
 800a4a6:	d9f6      	bls.n	800a496 <HAL_RCC_OscConfig+0x18a>
 800a4a8:	e774      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800a4aa:	4b32      	ldr	r3, [pc, #200]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
 800a4ac:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a4ae:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 800a4b2:	d128      	bne.n	800a506 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 800a4b4:	9201      	str	r2, [sp, #4]
 800a4b6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a4b8:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800a4bc:	641a      	str	r2, [r3, #64]	@ 0x40
 800a4be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a4c0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800a4c4:	9301      	str	r3, [sp, #4]
 800a4c6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800a4c8:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a4ca:	4d2c      	ldr	r5, [pc, #176]	@ (800a57c <HAL_RCC_OscConfig+0x270>)
 800a4cc:	682b      	ldr	r3, [r5, #0]
 800a4ce:	05d8      	lsls	r0, r3, #23
 800a4d0:	d51b      	bpl.n	800a50a <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a4d2:	68a3      	ldr	r3, [r4, #8]
 800a4d4:	4d27      	ldr	r5, [pc, #156]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
 800a4d6:	2b01      	cmp	r3, #1
 800a4d8:	d127      	bne.n	800a52a <HAL_RCC_OscConfig+0x21e>
 800a4da:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800a4dc:	f043 0301 	orr.w	r3, r3, #1
 800a4e0:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 800a4e2:	f7fe fc1f 	bl	8008d24 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a4e6:	4e23      	ldr	r6, [pc, #140]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800a4e8:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800a4ea:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a4ee:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 800a4f0:	079a      	lsls	r2, r3, #30
 800a4f2:	d539      	bpl.n	800a568 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 800a4f4:	2f00      	cmp	r7, #0
 800a4f6:	f43f af1b 	beq.w	800a330 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800a4fa:	4a1e      	ldr	r2, [pc, #120]	@ (800a574 <HAL_RCC_OscConfig+0x268>)
 800a4fc:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800a4fe:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800a502:	6413      	str	r3, [r2, #64]	@ 0x40
 800a504:	e714      	b.n	800a330 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800a506:	2700      	movs	r7, #0
 800a508:	e7df      	b.n	800a4ca <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800a50a:	682b      	ldr	r3, [r5, #0]
 800a50c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800a510:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800a512:	f7fe fc07 	bl	8008d24 <HAL_GetTick>
 800a516:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a518:	682b      	ldr	r3, [r5, #0]
 800a51a:	05d9      	lsls	r1, r3, #23
 800a51c:	d4d9      	bmi.n	800a4d2 <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800a51e:	f7fe fc01 	bl	8008d24 <HAL_GetTick>
 800a522:	1b80      	subs	r0, r0, r6
 800a524:	2802      	cmp	r0, #2
 800a526:	d9f7      	bls.n	800a518 <HAL_RCC_OscConfig+0x20c>
 800a528:	e734      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a52a:	2b05      	cmp	r3, #5
 800a52c:	d104      	bne.n	800a538 <HAL_RCC_OscConfig+0x22c>
 800a52e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800a530:	f043 0304 	orr.w	r3, r3, #4
 800a534:	672b      	str	r3, [r5, #112]	@ 0x70
 800a536:	e7d0      	b.n	800a4da <HAL_RCC_OscConfig+0x1ce>
 800a538:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800a53a:	f022 0201 	bic.w	r2, r2, #1
 800a53e:	672a      	str	r2, [r5, #112]	@ 0x70
 800a540:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800a542:	f022 0204 	bic.w	r2, r2, #4
 800a546:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800a548:	2b00      	cmp	r3, #0
 800a54a:	d1ca      	bne.n	800a4e2 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 800a54c:	f7fe fbea 	bl	8008d24 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800a550:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 800a554:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a556:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800a558:	079b      	lsls	r3, r3, #30
 800a55a:	d5cb      	bpl.n	800a4f4 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800a55c:	f7fe fbe2 	bl	8008d24 <HAL_GetTick>
 800a560:	1b80      	subs	r0, r0, r6
 800a562:	4540      	cmp	r0, r8
 800a564:	d9f7      	bls.n	800a556 <HAL_RCC_OscConfig+0x24a>
 800a566:	e715      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800a568:	f7fe fbdc 	bl	8008d24 <HAL_GetTick>
 800a56c:	1b40      	subs	r0, r0, r5
 800a56e:	4540      	cmp	r0, r8
 800a570:	d9bd      	bls.n	800a4ee <HAL_RCC_OscConfig+0x1e2>
 800a572:	e70f      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
 800a574:	40023800 	.word	0x40023800
 800a578:	42470000 	.word	0x42470000
 800a57c:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800a580:	4d37      	ldr	r5, [pc, #220]	@ (800a660 <HAL_RCC_OscConfig+0x354>)
 800a582:	68aa      	ldr	r2, [r5, #8]
 800a584:	f002 020c 	and.w	r2, r2, #12
 800a588:	2a08      	cmp	r2, #8
 800a58a:	d03e      	beq.n	800a60a <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a58c:	2b02      	cmp	r3, #2
 800a58e:	4b35      	ldr	r3, [pc, #212]	@ (800a664 <HAL_RCC_OscConfig+0x358>)
 800a590:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 800a594:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a596:	d12b      	bne.n	800a5f0 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 800a598:	f7fe fbc4 	bl	8008d24 <HAL_GetTick>
 800a59c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a59e:	682b      	ldr	r3, [r5, #0]
 800a5a0:	0199      	lsls	r1, r3, #6
 800a5a2:	d41f      	bmi.n	800a5e4 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800a5a4:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800a5a8:	4313      	orrs	r3, r2
 800a5aa:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800a5ac:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800a5b0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800a5b2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800a5b6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800a5b8:	0852      	lsrs	r2, r2, #1
 800a5ba:	3a01      	subs	r2, #1
 800a5bc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a5c0:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800a5c2:	4b28      	ldr	r3, [pc, #160]	@ (800a664 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a5c4:	4d26      	ldr	r5, [pc, #152]	@ (800a660 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 800a5c6:	2201      	movs	r2, #1
 800a5c8:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800a5ca:	f7fe fbab 	bl	8008d24 <HAL_GetTick>
 800a5ce:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a5d0:	682b      	ldr	r3, [r5, #0]
 800a5d2:	019a      	lsls	r2, r3, #6
 800a5d4:	f53f aeb0 	bmi.w	800a338 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800a5d8:	f7fe fba4 	bl	8008d24 <HAL_GetTick>
 800a5dc:	1b00      	subs	r0, r0, r4
 800a5de:	2802      	cmp	r0, #2
 800a5e0:	d9f6      	bls.n	800a5d0 <HAL_RCC_OscConfig+0x2c4>
 800a5e2:	e6d7      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800a5e4:	f7fe fb9e 	bl	8008d24 <HAL_GetTick>
 800a5e8:	1b80      	subs	r0, r0, r6
 800a5ea:	2802      	cmp	r0, #2
 800a5ec:	d9d7      	bls.n	800a59e <HAL_RCC_OscConfig+0x292>
 800a5ee:	e6d1      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 800a5f0:	f7fe fb98 	bl	8008d24 <HAL_GetTick>
 800a5f4:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a5f6:	682b      	ldr	r3, [r5, #0]
 800a5f8:	019b      	lsls	r3, r3, #6
 800a5fa:	f57f ae9d 	bpl.w	800a338 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800a5fe:	f7fe fb91 	bl	8008d24 <HAL_GetTick>
 800a602:	1b00      	subs	r0, r0, r4
 800a604:	2802      	cmp	r0, #2
 800a606:	d9f6      	bls.n	800a5f6 <HAL_RCC_OscConfig+0x2ea>
 800a608:	e6c4      	b.n	800a394 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800a60a:	2b01      	cmp	r3, #1
 800a60c:	f43f aeab 	beq.w	800a366 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 800a610:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a612:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a614:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a618:	4291      	cmp	r1, r2
 800a61a:	f47f aea4 	bne.w	800a366 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a61e:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a620:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a624:	428a      	cmp	r2, r1
 800a626:	f47f ae9e 	bne.w	800a366 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a62a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a62c:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 800a630:	401a      	ands	r2, r3
 800a632:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800a636:	f47f ae96 	bne.w	800a366 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a63a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800a63c:	0852      	lsrs	r2, r2, #1
 800a63e:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 800a642:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a644:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800a648:	f47f ae8d 	bne.w	800a366 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800a64c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800a64e:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a652:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 800a656:	bf14      	ite	ne
 800a658:	2001      	movne	r0, #1
 800a65a:	2000      	moveq	r0, #0
 800a65c:	e69b      	b.n	800a396 <HAL_RCC_OscConfig+0x8a>
 800a65e:	bf00      	nop
 800a660:	40023800 	.word	0x40023800
 800a664:	42470000 	.word	0x42470000

0800a668 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a668:	4913      	ldr	r1, [pc, #76]	@ (800a6b8 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800a66a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a66c:	688b      	ldr	r3, [r1, #8]
 800a66e:	f003 030c 	and.w	r3, r3, #12
 800a672:	2b04      	cmp	r3, #4
 800a674:	d01c      	beq.n	800a6b0 <HAL_RCC_GetSysClockFreq+0x48>
 800a676:	2b08      	cmp	r3, #8
 800a678:	d11c      	bne.n	800a6b4 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a67a:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a67c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a67e:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a680:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a684:	bf14      	ite	ne
 800a686:	480d      	ldrne	r0, [pc, #52]	@ (800a6bc <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a688:	480d      	ldreq	r0, [pc, #52]	@ (800a6c0 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a68a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800a68e:	bf18      	it	ne
 800a690:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a692:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a696:	fba1 0100 	umull	r0, r1, r1, r0
 800a69a:	f7f5 fe49 	bl	8000330 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 800a69e:	4b06      	ldr	r3, [pc, #24]	@ (800a6b8 <HAL_RCC_GetSysClockFreq+0x50>)
 800a6a0:	685b      	ldr	r3, [r3, #4]
 800a6a2:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800a6a6:	3301      	adds	r3, #1
 800a6a8:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800a6aa:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800a6ae:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a6b0:	4802      	ldr	r0, [pc, #8]	@ (800a6bc <HAL_RCC_GetSysClockFreq+0x54>)
 800a6b2:	e7fc      	b.n	800a6ae <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800a6b4:	4802      	ldr	r0, [pc, #8]	@ (800a6c0 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800a6b6:	e7fa      	b.n	800a6ae <HAL_RCC_GetSysClockFreq+0x46>
 800a6b8:	40023800 	.word	0x40023800
 800a6bc:	007a1200 	.word	0x007a1200
 800a6c0:	00f42400 	.word	0x00f42400

0800a6c4 <HAL_RCC_ClockConfig>:
{
 800a6c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6c8:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800a6ca:	4604      	mov	r4, r0
 800a6cc:	b910      	cbnz	r0, 800a6d4 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800a6ce:	2001      	movs	r0, #1
}
 800a6d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800a6d4:	4b43      	ldr	r3, [pc, #268]	@ (800a7e4 <HAL_RCC_ClockConfig+0x120>)
 800a6d6:	681a      	ldr	r2, [r3, #0]
 800a6d8:	f002 020f 	and.w	r2, r2, #15
 800a6dc:	428a      	cmp	r2, r1
 800a6de:	d328      	bcc.n	800a732 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800a6e0:	6821      	ldr	r1, [r4, #0]
 800a6e2:	078f      	lsls	r7, r1, #30
 800a6e4:	d42d      	bmi.n	800a742 <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800a6e6:	07c8      	lsls	r0, r1, #31
 800a6e8:	d440      	bmi.n	800a76c <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800a6ea:	4b3e      	ldr	r3, [pc, #248]	@ (800a7e4 <HAL_RCC_ClockConfig+0x120>)
 800a6ec:	681a      	ldr	r2, [r3, #0]
 800a6ee:	f002 020f 	and.w	r2, r2, #15
 800a6f2:	42aa      	cmp	r2, r5
 800a6f4:	d865      	bhi.n	800a7c2 <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a6f6:	6822      	ldr	r2, [r4, #0]
 800a6f8:	0751      	lsls	r1, r2, #29
 800a6fa:	d46b      	bmi.n	800a7d4 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a6fc:	0713      	lsls	r3, r2, #28
 800a6fe:	d507      	bpl.n	800a710 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800a700:	4a39      	ldr	r2, [pc, #228]	@ (800a7e8 <HAL_RCC_ClockConfig+0x124>)
 800a702:	6921      	ldr	r1, [r4, #16]
 800a704:	6893      	ldr	r3, [r2, #8]
 800a706:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800a70a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800a70e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800a710:	f7ff ffaa 	bl	800a668 <HAL_RCC_GetSysClockFreq>
 800a714:	4b34      	ldr	r3, [pc, #208]	@ (800a7e8 <HAL_RCC_ClockConfig+0x124>)
 800a716:	4a35      	ldr	r2, [pc, #212]	@ (800a7ec <HAL_RCC_ClockConfig+0x128>)
 800a718:	689b      	ldr	r3, [r3, #8]
 800a71a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800a71e:	5cd3      	ldrb	r3, [r2, r3]
 800a720:	40d8      	lsrs	r0, r3
 800a722:	4b33      	ldr	r3, [pc, #204]	@ (800a7f0 <HAL_RCC_ClockConfig+0x12c>)
 800a724:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 800a726:	4b33      	ldr	r3, [pc, #204]	@ (800a7f4 <HAL_RCC_ClockConfig+0x130>)
 800a728:	6818      	ldr	r0, [r3, #0]
 800a72a:	f7f7 fdfb 	bl	8002324 <HAL_InitTick>
  return HAL_OK;
 800a72e:	2000      	movs	r0, #0
 800a730:	e7ce      	b.n	800a6d0 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a732:	b2ca      	uxtb	r2, r1
 800a734:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800a736:	681b      	ldr	r3, [r3, #0]
 800a738:	f003 030f 	and.w	r3, r3, #15
 800a73c:	428b      	cmp	r3, r1
 800a73e:	d1c6      	bne.n	800a6ce <HAL_RCC_ClockConfig+0xa>
 800a740:	e7ce      	b.n	800a6e0 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a742:	4b29      	ldr	r3, [pc, #164]	@ (800a7e8 <HAL_RCC_ClockConfig+0x124>)
 800a744:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800a748:	bf1e      	ittt	ne
 800a74a:	689a      	ldrne	r2, [r3, #8]
 800a74c:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 800a750:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a752:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800a754:	bf42      	ittt	mi
 800a756:	689a      	ldrmi	r2, [r3, #8]
 800a758:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 800a75c:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800a75e:	689a      	ldr	r2, [r3, #8]
 800a760:	68a0      	ldr	r0, [r4, #8]
 800a762:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 800a766:	4302      	orrs	r2, r0
 800a768:	609a      	str	r2, [r3, #8]
 800a76a:	e7bc      	b.n	800a6e6 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800a76c:	6862      	ldr	r2, [r4, #4]
 800a76e:	4b1e      	ldr	r3, [pc, #120]	@ (800a7e8 <HAL_RCC_ClockConfig+0x124>)
 800a770:	2a01      	cmp	r2, #1
 800a772:	d11c      	bne.n	800a7ae <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a774:	681b      	ldr	r3, [r3, #0]
 800a776:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a77a:	d0a8      	beq.n	800a6ce <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800a77c:	4e1a      	ldr	r6, [pc, #104]	@ (800a7e8 <HAL_RCC_ClockConfig+0x124>)
 800a77e:	68b3      	ldr	r3, [r6, #8]
 800a780:	f023 0303 	bic.w	r3, r3, #3
 800a784:	4313      	orrs	r3, r2
 800a786:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800a788:	f7fe facc 	bl	8008d24 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a78c:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 800a790:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a792:	68b3      	ldr	r3, [r6, #8]
 800a794:	6862      	ldr	r2, [r4, #4]
 800a796:	f003 030c 	and.w	r3, r3, #12
 800a79a:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800a79e:	d0a4      	beq.n	800a6ea <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a7a0:	f7fe fac0 	bl	8008d24 <HAL_GetTick>
 800a7a4:	1bc0      	subs	r0, r0, r7
 800a7a6:	4540      	cmp	r0, r8
 800a7a8:	d9f3      	bls.n	800a792 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800a7aa:	2003      	movs	r0, #3
 800a7ac:	e790      	b.n	800a6d0 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800a7ae:	1e91      	subs	r1, r2, #2
 800a7b0:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a7b2:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800a7b4:	d802      	bhi.n	800a7bc <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a7b6:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 800a7ba:	e7de      	b.n	800a77a <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a7bc:	f013 0f02 	tst.w	r3, #2
 800a7c0:	e7db      	b.n	800a77a <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a7c2:	b2ea      	uxtb	r2, r5
 800a7c4:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800a7c6:	681b      	ldr	r3, [r3, #0]
 800a7c8:	f003 030f 	and.w	r3, r3, #15
 800a7cc:	42ab      	cmp	r3, r5
 800a7ce:	f47f af7e 	bne.w	800a6ce <HAL_RCC_ClockConfig+0xa>
 800a7d2:	e790      	b.n	800a6f6 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800a7d4:	4904      	ldr	r1, [pc, #16]	@ (800a7e8 <HAL_RCC_ClockConfig+0x124>)
 800a7d6:	68e0      	ldr	r0, [r4, #12]
 800a7d8:	688b      	ldr	r3, [r1, #8]
 800a7da:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 800a7de:	4303      	orrs	r3, r0
 800a7e0:	608b      	str	r3, [r1, #8]
 800a7e2:	e78b      	b.n	800a6fc <HAL_RCC_ClockConfig+0x38>
 800a7e4:	40023c00 	.word	0x40023c00
 800a7e8:	40023800 	.word	0x40023800
 800a7ec:	0802ae98 	.word	0x0802ae98
 800a7f0:	20000074 	.word	0x20000074
 800a7f4:	2000007c 	.word	0x2000007c

0800a7f8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 800a7f8:	4b04      	ldr	r3, [pc, #16]	@ (800a80c <HAL_RCC_GetPCLK1Freq+0x14>)
 800a7fa:	4a05      	ldr	r2, [pc, #20]	@ (800a810 <HAL_RCC_GetPCLK1Freq+0x18>)
 800a7fc:	689b      	ldr	r3, [r3, #8]
 800a7fe:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800a802:	5cd3      	ldrb	r3, [r2, r3]
 800a804:	4a03      	ldr	r2, [pc, #12]	@ (800a814 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800a806:	6810      	ldr	r0, [r2, #0]
}
 800a808:	40d8      	lsrs	r0, r3
 800a80a:	4770      	bx	lr
 800a80c:	40023800 	.word	0x40023800
 800a810:	0802ae90 	.word	0x0802ae90
 800a814:	20000074 	.word	0x20000074

0800a818 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 800a818:	4b04      	ldr	r3, [pc, #16]	@ (800a82c <HAL_RCC_GetPCLK2Freq+0x14>)
 800a81a:	4a05      	ldr	r2, [pc, #20]	@ (800a830 <HAL_RCC_GetPCLK2Freq+0x18>)
 800a81c:	689b      	ldr	r3, [r3, #8]
 800a81e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800a822:	5cd3      	ldrb	r3, [r2, r3]
 800a824:	4a03      	ldr	r2, [pc, #12]	@ (800a834 <HAL_RCC_GetPCLK2Freq+0x1c>)
 800a826:	6810      	ldr	r0, [r2, #0]
}
 800a828:	40d8      	lsrs	r0, r3
 800a82a:	4770      	bx	lr
 800a82c:	40023800 	.word	0x40023800
 800a830:	0802ae90 	.word	0x0802ae90
 800a834:	20000074 	.word	0x20000074

0800a838 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800a838:	230f      	movs	r3, #15
 800a83a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800a83c:	4b0b      	ldr	r3, [pc, #44]	@ (800a86c <HAL_RCC_GetClockConfig+0x34>)
 800a83e:	689a      	ldr	r2, [r3, #8]
 800a840:	f002 0203 	and.w	r2, r2, #3
 800a844:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800a846:	689a      	ldr	r2, [r3, #8]
 800a848:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 800a84c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800a84e:	689a      	ldr	r2, [r3, #8]
 800a850:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 800a854:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a856:	689b      	ldr	r3, [r3, #8]
 800a858:	08db      	lsrs	r3, r3, #3
 800a85a:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 800a85e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a860:	4b03      	ldr	r3, [pc, #12]	@ (800a870 <HAL_RCC_GetClockConfig+0x38>)
 800a862:	681b      	ldr	r3, [r3, #0]
 800a864:	f003 030f 	and.w	r3, r3, #15
 800a868:	600b      	str	r3, [r1, #0]
}
 800a86a:	4770      	bx	lr
 800a86c:	40023800 	.word	0x40023800
 800a870:	40023c00 	.word	0x40023c00

0800a874 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800a874:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800a876:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 800a87a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a87c:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800a87e:	f040 8088 	bne.w	800a992 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800a882:	6823      	ldr	r3, [r4, #0]
 800a884:	f013 0f0c 	tst.w	r3, #12
 800a888:	d045      	beq.n	800a916 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800a88a:	4b8c      	ldr	r3, [pc, #560]	@ (800aabc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a88c:	4d8c      	ldr	r5, [pc, #560]	@ (800aac0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 800a88e:	2200      	movs	r2, #0
 800a890:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800a892:	f7fe fa47 	bl	8008d24 <HAL_GetTick>
 800a896:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a898:	682b      	ldr	r3, [r5, #0]
 800a89a:	0099      	lsls	r1, r3, #2
 800a89c:	f100 80cb 	bmi.w	800aa36 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800a8a0:	6821      	ldr	r1, [r4, #0]
 800a8a2:	074a      	lsls	r2, r1, #29
 800a8a4:	d515      	bpl.n	800a8d2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a8a6:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800a8aa:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a8ae:	061b      	lsls	r3, r3, #24
 800a8b0:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 800a8b4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a8b8:	4313      	orrs	r3, r2
 800a8ba:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800a8be:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 800a8c2:	6a22      	ldr	r2, [r4, #32]
 800a8c4:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 800a8c8:	3a01      	subs	r2, #1
 800a8ca:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800a8ce:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800a8d2:	070b      	lsls	r3, r1, #28
 800a8d4:	d514      	bpl.n	800a900 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a8d6:	4a7a      	ldr	r2, [pc, #488]	@ (800aac0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800a8d8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a8da:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800a8de:	6920      	ldr	r0, [r4, #16]
 800a8e0:	071b      	lsls	r3, r3, #28
 800a8e2:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 800a8e6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a8ea:	430b      	orrs	r3, r1
 800a8ec:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800a8f0:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800a8f4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800a8f6:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800a8fa:	430b      	orrs	r3, r1
 800a8fc:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800a900:	4b6e      	ldr	r3, [pc, #440]	@ (800aabc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a902:	4e6f      	ldr	r6, [pc, #444]	@ (800aac0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 800a904:	2201      	movs	r2, #1
 800a906:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800a908:	f7fe fa0c 	bl	8008d24 <HAL_GetTick>
 800a90c:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a90e:	6833      	ldr	r3, [r6, #0]
 800a910:	009f      	lsls	r7, r3, #2
 800a912:	f140 8097 	bpl.w	800aa44 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800a916:	6823      	ldr	r3, [r4, #0]
 800a918:	0698      	lsls	r0, r3, #26
 800a91a:	d534      	bpl.n	800a986 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800a91c:	2300      	movs	r3, #0
 800a91e:	9301      	str	r3, [sp, #4]
 800a920:	4b67      	ldr	r3, [pc, #412]	@ (800aac0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800a922:	4d68      	ldr	r5, [pc, #416]	@ (800aac4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800a924:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a926:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800a92a:	641a      	str	r2, [r3, #64]	@ 0x40
 800a92c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a92e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800a932:	9301      	str	r3, [sp, #4]
 800a934:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800a936:	682b      	ldr	r3, [r5, #0]
 800a938:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800a93c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800a93e:	f7fe f9f1 	bl	8008d24 <HAL_GetTick>
 800a942:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 800a944:	682b      	ldr	r3, [r5, #0]
 800a946:	05d8      	lsls	r0, r3, #23
 800a948:	f140 8083 	bpl.w	800aa52 <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a94c:	4d5c      	ldr	r5, [pc, #368]	@ (800aac0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a94e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a950:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a952:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 800a956:	f040 8083 	bne.w	800aa60 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800a95a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800a95c:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 800a960:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 800a964:	4a56      	ldr	r2, [pc, #344]	@ (800aac0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800a966:	f040 809e 	bne.w	800aaa6 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800a96a:	6891      	ldr	r1, [r2, #8]
 800a96c:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 800a970:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800a974:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 800a978:	4301      	orrs	r1, r0
 800a97a:	6091      	str	r1, [r2, #8]
 800a97c:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 800a97e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a982:	430b      	orrs	r3, r1
 800a984:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800a986:	6823      	ldr	r3, [r4, #0]
 800a988:	06db      	lsls	r3, r3, #27
 800a98a:	f100 8090 	bmi.w	800aaae <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 800a98e:	2000      	movs	r0, #0
 800a990:	e04f      	b.n	800aa32 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800a992:	4b4a      	ldr	r3, [pc, #296]	@ (800aabc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a994:	4e4a      	ldr	r6, [pc, #296]	@ (800aac0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 800a996:	2200      	movs	r2, #0
 800a998:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800a99a:	f7fe f9c3 	bl	8008d24 <HAL_GetTick>
 800a99e:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a9a0:	6833      	ldr	r3, [r6, #0]
 800a9a2:	011f      	lsls	r7, r3, #4
 800a9a4:	d43f      	bmi.n	800aa26 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800a9a6:	6821      	ldr	r1, [r4, #0]
 800a9a8:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 800a9aa:	bf41      	itttt	mi
 800a9ac:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800a9b0:	071b      	lslmi	r3, r3, #28
 800a9b2:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800a9b6:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800a9ba:	078a      	lsls	r2, r1, #30
 800a9bc:	d515      	bpl.n	800a9ea <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a9be:	4a40      	ldr	r2, [pc, #256]	@ (800aac0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800a9c0:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a9c2:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800a9c6:	6865      	ldr	r5, [r4, #4]
 800a9c8:	061b      	lsls	r3, r3, #24
 800a9ca:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800a9ce:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800a9d2:	4303      	orrs	r3, r0
 800a9d4:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800a9d8:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 800a9dc:	69e3      	ldr	r3, [r4, #28]
 800a9de:	f020 001f 	bic.w	r0, r0, #31
 800a9e2:	3b01      	subs	r3, #1
 800a9e4:	4303      	orrs	r3, r0
 800a9e6:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800a9ea:	064b      	lsls	r3, r1, #25
 800a9ec:	d50a      	bpl.n	800aa04 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 800a9ee:	68e3      	ldr	r3, [r4, #12]
 800a9f0:	6862      	ldr	r2, [r4, #4]
 800a9f2:	061b      	lsls	r3, r3, #24
 800a9f4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800a9f8:	68a2      	ldr	r2, [r4, #8]
 800a9fa:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800a9fe:	4a30      	ldr	r2, [pc, #192]	@ (800aac0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800aa00:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800aa04:	4b2d      	ldr	r3, [pc, #180]	@ (800aabc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800aa06:	4e2e      	ldr	r6, [pc, #184]	@ (800aac0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 800aa08:	2201      	movs	r2, #1
 800aa0a:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800aa0c:	f7fe f98a 	bl	8008d24 <HAL_GetTick>
 800aa10:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800aa12:	6833      	ldr	r3, [r6, #0]
 800aa14:	011f      	lsls	r7, r3, #4
 800aa16:	f53f af34 	bmi.w	800a882 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800aa1a:	f7fe f983 	bl	8008d24 <HAL_GetTick>
 800aa1e:	1b40      	subs	r0, r0, r5
 800aa20:	2802      	cmp	r0, #2
 800aa22:	d9f6      	bls.n	800aa12 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 800aa24:	e004      	b.n	800aa30 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800aa26:	f7fe f97d 	bl	8008d24 <HAL_GetTick>
 800aa2a:	1b40      	subs	r0, r0, r5
 800aa2c:	2802      	cmp	r0, #2
 800aa2e:	d9b7      	bls.n	800a9a0 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800aa30:	2003      	movs	r0, #3
}
 800aa32:	b003      	add	sp, #12
 800aa34:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800aa36:	f7fe f975 	bl	8008d24 <HAL_GetTick>
 800aa3a:	1b80      	subs	r0, r0, r6
 800aa3c:	2802      	cmp	r0, #2
 800aa3e:	f67f af2b 	bls.w	800a898 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800aa42:	e7f5      	b.n	800aa30 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800aa44:	f7fe f96e 	bl	8008d24 <HAL_GetTick>
 800aa48:	1b40      	subs	r0, r0, r5
 800aa4a:	2802      	cmp	r0, #2
 800aa4c:	f67f af5f 	bls.w	800a90e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800aa50:	e7ee      	b.n	800aa30 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800aa52:	f7fe f967 	bl	8008d24 <HAL_GetTick>
 800aa56:	1b80      	subs	r0, r0, r6
 800aa58:	2802      	cmp	r0, #2
 800aa5a:	f67f af73 	bls.w	800a944 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800aa5e:	e7e7      	b.n	800aa30 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800aa60:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 800aa64:	4293      	cmp	r3, r2
 800aa66:	f43f af78 	beq.w	800a95a <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800aa6a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800aa6c:	4a13      	ldr	r2, [pc, #76]	@ (800aabc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800aa6e:	2101      	movs	r1, #1
 800aa70:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800aa74:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800aa78:	2100      	movs	r1, #0
 800aa7a:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 800aa7e:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800aa80:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800aa82:	07d9      	lsls	r1, r3, #31
 800aa84:	f57f af69 	bpl.w	800a95a <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 800aa88:	f7fe f94c 	bl	8008d24 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800aa8c:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 800aa90:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800aa92:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800aa94:	079a      	lsls	r2, r3, #30
 800aa96:	f53f af60 	bmi.w	800a95a <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800aa9a:	f7fe f943 	bl	8008d24 <HAL_GetTick>
 800aa9e:	1b80      	subs	r0, r0, r6
 800aaa0:	42b8      	cmp	r0, r7
 800aaa2:	d9f6      	bls.n	800aa92 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 800aaa4:	e7c4      	b.n	800aa30 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800aaa6:	6891      	ldr	r1, [r2, #8]
 800aaa8:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800aaac:	e765      	b.n	800a97a <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800aaae:	4b06      	ldr	r3, [pc, #24]	@ (800aac8 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800aab0:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800aab4:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 800aab8:	e769      	b.n	800a98e <HAL_RCCEx_PeriphCLKConfig+0x11a>
 800aaba:	bf00      	nop
 800aabc:	42470000 	.word	0x42470000
 800aac0:	40023800 	.word	0x40023800
 800aac4:	40007000 	.word	0x40007000
 800aac8:	42471000 	.word	0x42471000

0800aacc <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800aacc:	b538      	push	{r3, r4, r5, lr}
 800aace:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800aad0:	4604      	mov	r4, r0
 800aad2:	b1c8      	cbz	r0, 800ab08 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800aad4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800aad8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800aadc:	b91b      	cbnz	r3, 800aae6 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800aade:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800aae2:	f7f7 fbb3 	bl	800224c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800aae6:	2302      	movs	r3, #2
 800aae8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800aaec:	1d21      	adds	r1, r4, #4
 800aaee:	6820      	ldr	r0, [r4, #0]
 800aaf0:	f000 feed 	bl	800b8ce <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800aaf4:	6862      	ldr	r2, [r4, #4]
 800aaf6:	6820      	ldr	r0, [r4, #0]
 800aaf8:	4629      	mov	r1, r5
 800aafa:	f000 ff1e 	bl	800b93a <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800aafe:	2301      	movs	r3, #1
 800ab00:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 800ab04:	2000      	movs	r0, #0
}
 800ab06:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800ab08:	2001      	movs	r0, #1
 800ab0a:	e7fc      	b.n	800ab06 <HAL_SDRAM_Init+0x3a>

0800ab0c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800ab0c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800ab0e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800ab12:	2b02      	cmp	r3, #2
{
 800ab14:	4605      	mov	r5, r0
 800ab16:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800ab18:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800ab1a:	d012      	beq.n	800ab42 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800ab1c:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 800ab20:	2c01      	cmp	r4, #1
 800ab22:	d10f      	bne.n	800ab44 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ab24:	2302      	movs	r3, #2
 800ab26:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800ab2a:	6828      	ldr	r0, [r5, #0]
 800ab2c:	f000 ff3b 	bl	800b9a6 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800ab30:	6833      	ldr	r3, [r6, #0]
 800ab32:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800ab34:	bf06      	itte	eq
 800ab36:	2305      	moveq	r3, #5
 800ab38:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800ab3c:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800ab40:	2000      	movs	r0, #0
}
 800ab42:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800ab44:	2001      	movs	r0, #1
 800ab46:	e7fc      	b.n	800ab42 <HAL_SDRAM_SendCommand+0x36>

0800ab48 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800ab48:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ab4a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800ab4e:	2b02      	cmp	r3, #2
{
 800ab50:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ab52:	b2d8      	uxtb	r0, r3
 800ab54:	d00d      	beq.n	800ab72 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800ab56:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800ab5a:	2b01      	cmp	r3, #1
 800ab5c:	b2dd      	uxtb	r5, r3
 800ab5e:	d109      	bne.n	800ab74 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ab60:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800ab62:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ab64:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800ab68:	f000 ff41 	bl	800b9ee <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800ab6c:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800ab70:	2000      	movs	r0, #0
}
 800ab72:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800ab74:	2001      	movs	r0, #1
 800ab76:	e7fc      	b.n	800ab72 <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800ab78 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 800ab78:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ab7c:	461f      	mov	r7, r3
 800ab7e:	4689      	mov	r9, r1
 800ab80:	4690      	mov	r8, r2
 800ab82:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800ab84:	f7fe f8ce 	bl	8008d24 <HAL_GetTick>
 800ab88:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800ab8a:	443d      	add	r5, r7
 800ab8c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800ab8e:	f7fe f8c9 	bl	8008d24 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800ab92:	4b26      	ldr	r3, [pc, #152]	@ (800ac2c <SPI_WaitFlagStateUntilTimeout+0xb4>)
 800ab94:	681e      	ldr	r6, [r3, #0]
 800ab96:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 800ab9a:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 800ab9c:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800ab9e:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800aba0:	6822      	ldr	r2, [r4, #0]
 800aba2:	6893      	ldr	r3, [r2, #8]
 800aba4:	ea39 0303 	bics.w	r3, r9, r3
 800aba8:	bf0c      	ite	eq
 800abaa:	2301      	moveq	r3, #1
 800abac:	2300      	movne	r3, #0
 800abae:	4543      	cmp	r3, r8
 800abb0:	d101      	bne.n	800abb6 <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 800abb2:	2000      	movs	r0, #0
 800abb4:	e02e      	b.n	800ac14 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 800abb6:	1c7b      	adds	r3, r7, #1
 800abb8:	d0f3      	beq.n	800aba2 <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800abba:	f7fe f8b3 	bl	8008d24 <HAL_GetTick>
 800abbe:	eba0 000a 	sub.w	r0, r0, sl
 800abc2:	42a8      	cmp	r0, r5
 800abc4:	d329      	bcc.n	800ac1a <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800abc6:	6823      	ldr	r3, [r4, #0]
 800abc8:	685a      	ldr	r2, [r3, #4]
 800abca:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800abce:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800abd0:	6862      	ldr	r2, [r4, #4]
 800abd2:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800abd6:	d10a      	bne.n	800abee <SPI_WaitFlagStateUntilTimeout+0x76>
 800abd8:	68a2      	ldr	r2, [r4, #8]
 800abda:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800abde:	d002      	beq.n	800abe6 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800abe0:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800abe4:	d103      	bne.n	800abee <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 800abe6:	681a      	ldr	r2, [r3, #0]
 800abe8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800abec:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800abee:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800abf0:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 800abf4:	d107      	bne.n	800ac06 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 800abf6:	681a      	ldr	r2, [r3, #0]
 800abf8:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800abfc:	601a      	str	r2, [r3, #0]
 800abfe:	681a      	ldr	r2, [r3, #0]
 800ac00:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800ac04:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800ac06:	2301      	movs	r3, #1
 800ac08:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800ac0c:	2300      	movs	r3, #0
 800ac0e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800ac12:	2003      	movs	r0, #3
}
 800ac14:	b002      	add	sp, #8
 800ac16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 800ac1a:	9a01      	ldr	r2, [sp, #4]
      count--;
 800ac1c:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 800ac1e:	2a00      	cmp	r2, #0
      count--;
 800ac20:	f103 33ff 	add.w	r3, r3, #4294967295
 800ac24:	9301      	str	r3, [sp, #4]
 800ac26:	bf08      	it	eq
 800ac28:	4615      	moveq	r5, r2
 800ac2a:	e7b9      	b.n	800aba0 <SPI_WaitFlagStateUntilTimeout+0x28>
 800ac2c:	20000074 	.word	0x20000074

0800ac30 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800ac30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ac32:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800ac34:	460b      	mov	r3, r1
 800ac36:	9200      	str	r2, [sp, #0]
{
 800ac38:	460e      	mov	r6, r1
 800ac3a:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800ac3c:	2102      	movs	r1, #2
 800ac3e:	2201      	movs	r2, #1
{
 800ac40:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800ac42:	f7ff ff99 	bl	800ab78 <SPI_WaitFlagStateUntilTimeout>
 800ac46:	4605      	mov	r5, r0
 800ac48:	b128      	cbz	r0, 800ac56 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ac4a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800ac4c:	f043 0320 	orr.w	r3, r3, #32
 800ac50:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 800ac52:	2503      	movs	r5, #3
 800ac54:	e015      	b.n	800ac82 <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ac56:	4b12      	ldr	r3, [pc, #72]	@ (800aca0 <SPI_EndRxTxTransaction+0x70>)
 800ac58:	6818      	ldr	r0, [r3, #0]
 800ac5a:	4b12      	ldr	r3, [pc, #72]	@ (800aca4 <SPI_EndRxTxTransaction+0x74>)
 800ac5c:	fbb0 f0f3 	udiv	r0, r0, r3
 800ac60:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800ac64:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ac66:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ac68:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ac6a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800ac6e:	d10b      	bne.n	800ac88 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ac70:	9700      	str	r7, [sp, #0]
 800ac72:	4633      	mov	r3, r6
 800ac74:	462a      	mov	r2, r5
 800ac76:	2180      	movs	r1, #128	@ 0x80
 800ac78:	4620      	mov	r0, r4
 800ac7a:	f7ff ff7d 	bl	800ab78 <SPI_WaitFlagStateUntilTimeout>
 800ac7e:	2800      	cmp	r0, #0
 800ac80:	d1e3      	bne.n	800ac4a <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800ac82:	4628      	mov	r0, r5
 800ac84:	b005      	add	sp, #20
 800ac86:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 800ac88:	9b03      	ldr	r3, [sp, #12]
 800ac8a:	2b00      	cmp	r3, #0
 800ac8c:	d0f9      	beq.n	800ac82 <SPI_EndRxTxTransaction+0x52>
      count--;
 800ac8e:	9b03      	ldr	r3, [sp, #12]
 800ac90:	3b01      	subs	r3, #1
 800ac92:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ac94:	6823      	ldr	r3, [r4, #0]
 800ac96:	689b      	ldr	r3, [r3, #8]
 800ac98:	061b      	lsls	r3, r3, #24
 800ac9a:	d4f5      	bmi.n	800ac88 <SPI_EndRxTxTransaction+0x58>
 800ac9c:	e7f1      	b.n	800ac82 <SPI_EndRxTxTransaction+0x52>
 800ac9e:	bf00      	nop
 800aca0:	20000074 	.word	0x20000074
 800aca4:	016e3600 	.word	0x016e3600

0800aca8 <SPI_EndRxTransaction>:
{
 800aca8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800acaa:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800acac:	6841      	ldr	r1, [r0, #4]
 800acae:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 800acb2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800acb4:	d008      	beq.n	800acc8 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800acb6:	9200      	str	r2, [sp, #0]
 800acb8:	2101      	movs	r1, #1
 800acba:	2200      	movs	r2, #0
 800acbc:	f7ff ff5c 	bl	800ab78 <SPI_WaitFlagStateUntilTimeout>
 800acc0:	b9d0      	cbnz	r0, 800acf8 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 800acc2:	2000      	movs	r0, #0
}
 800acc4:	b003      	add	sp, #12
 800acc6:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800acc8:	6881      	ldr	r1, [r0, #8]
 800acca:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 800acce:	d002      	beq.n	800acd6 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800acd0:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800acd4:	d107      	bne.n	800ace6 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 800acd6:	6825      	ldr	r5, [r4, #0]
 800acd8:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800acda:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 800acde:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800ace2:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800ace4:	d004      	beq.n	800acf0 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ace6:	9200      	str	r2, [sp, #0]
 800ace8:	2180      	movs	r1, #128	@ 0x80
 800acea:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800acec:	4620      	mov	r0, r4
 800acee:	e7e5      	b.n	800acbc <SPI_EndRxTransaction+0x14>
 800acf0:	9200      	str	r2, [sp, #0]
 800acf2:	2101      	movs	r1, #1
 800acf4:	2200      	movs	r2, #0
 800acf6:	e7f9      	b.n	800acec <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800acf8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800acfa:	f043 0320 	orr.w	r3, r3, #32
 800acfe:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 800ad00:	2003      	movs	r0, #3
 800ad02:	e7df      	b.n	800acc4 <SPI_EndRxTransaction+0x1c>

0800ad04 <HAL_SPI_Init>:
{
 800ad04:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800ad06:	4604      	mov	r4, r0
 800ad08:	2800      	cmp	r0, #0
 800ad0a:	d055      	beq.n	800adb8 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800ad0c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ad0e:	2b00      	cmp	r3, #0
 800ad10:	d14e      	bne.n	800adb0 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ad12:	6842      	ldr	r2, [r0, #4]
 800ad14:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800ad18:	d000      	beq.n	800ad1c <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800ad1a:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800ad1c:	2300      	movs	r3, #0
 800ad1e:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ad20:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800ad24:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800ad28:	b923      	cbnz	r3, 800ad34 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 800ad2a:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 800ad2e:	4620      	mov	r0, r4
 800ad30:	f7f7 fa56 	bl	80021e0 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800ad34:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ad36:	68a0      	ldr	r0, [r4, #8]
 800ad38:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800ad3a:	2302      	movs	r3, #2
 800ad3c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 800ad40:	680b      	ldr	r3, [r1, #0]
 800ad42:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800ad46:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ad48:	6863      	ldr	r3, [r4, #4]
 800ad4a:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 800ad4e:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800ad52:	4303      	orrs	r3, r0
 800ad54:	68e0      	ldr	r0, [r4, #12]
 800ad56:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 800ad5a:	4303      	orrs	r3, r0
 800ad5c:	6920      	ldr	r0, [r4, #16]
 800ad5e:	f000 0002 	and.w	r0, r0, #2
 800ad62:	4303      	orrs	r3, r0
 800ad64:	6960      	ldr	r0, [r4, #20]
 800ad66:	f000 0001 	and.w	r0, r0, #1
 800ad6a:	4303      	orrs	r3, r0
 800ad6c:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 800ad70:	4303      	orrs	r3, r0
 800ad72:	69e0      	ldr	r0, [r4, #28]
 800ad74:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 800ad78:	4303      	orrs	r3, r0
 800ad7a:	6a20      	ldr	r0, [r4, #32]
 800ad7c:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 800ad80:	4303      	orrs	r3, r0
 800ad82:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800ad84:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 800ad88:	4303      	orrs	r3, r0
 800ad8a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ad8c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ad8e:	0c12      	lsrs	r2, r2, #16
 800ad90:	f003 0310 	and.w	r3, r3, #16
 800ad94:	f002 0204 	and.w	r2, r2, #4
 800ad98:	431a      	orrs	r2, r3
 800ad9a:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ad9c:	69cb      	ldr	r3, [r1, #28]
 800ad9e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800ada2:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800ada4:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800ada6:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800ada8:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800adaa:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 800adae:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800adb0:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800adb2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800adb6:	e7b1      	b.n	800ad1c <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800adb8:	2001      	movs	r0, #1
 800adba:	e7f8      	b.n	800adae <HAL_SPI_Init+0xaa>

0800adbc <HAL_SPI_Transmit>:
{
 800adbc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800adc0:	4604      	mov	r4, r0
 800adc2:	461f      	mov	r7, r3
 800adc4:	460d      	mov	r5, r1
 800adc6:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 800adc8:	f7fd ffac 	bl	8008d24 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800adcc:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800add0:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800add2:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800add4:	b2d8      	uxtb	r0, r3
 800add6:	f040 809f 	bne.w	800af18 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 800adda:	2d00      	cmp	r5, #0
 800addc:	d074      	beq.n	800aec8 <HAL_SPI_Transmit+0x10c>
 800adde:	f1b8 0f00 	cmp.w	r8, #0
 800ade2:	d071      	beq.n	800aec8 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 800ade4:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800ade8:	2b01      	cmp	r3, #1
 800adea:	f000 8095 	beq.w	800af18 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800adee:	2303      	movs	r3, #3
 800adf0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800adf4:	2300      	movs	r3, #0
 800adf6:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 800adf8:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 800adfc:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800ae00:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 800ae02:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800ae04:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ae06:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800ae08:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 800ae0a:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ae0e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800ae12:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 800ae14:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ae18:	d107      	bne.n	800ae2a <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 800ae1a:	6833      	ldr	r3, [r6, #0]
 800ae1c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800ae20:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 800ae22:	6833      	ldr	r3, [r6, #0]
 800ae24:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800ae28:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ae2a:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ae2c:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ae2e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 800ae30:	bf5e      	ittt	pl
 800ae32:	6833      	ldrpl	r3, [r6, #0]
 800ae34:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 800ae38:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ae3a:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ae3e:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ae40:	d145      	bne.n	800aece <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ae42:	b113      	cbz	r3, 800ae4a <HAL_SPI_Transmit+0x8e>
 800ae44:	f1b8 0f01 	cmp.w	r8, #1
 800ae48:	d107      	bne.n	800ae5a <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800ae4a:	f835 3b02 	ldrh.w	r3, [r5], #2
 800ae4e:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ae50:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800ae52:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ae54:	3b01      	subs	r3, #1
 800ae56:	b29b      	uxth	r3, r3
 800ae58:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800ae5a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ae5c:	b29b      	uxth	r3, r3
 800ae5e:	b9d3      	cbnz	r3, 800ae96 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ae60:	464a      	mov	r2, r9
 800ae62:	4639      	mov	r1, r7
 800ae64:	4620      	mov	r0, r4
 800ae66:	f7ff fee3 	bl	800ac30 <SPI_EndRxTxTransaction>
 800ae6a:	2800      	cmp	r0, #0
 800ae6c:	d151      	bne.n	800af12 <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ae6e:	68a3      	ldr	r3, [r4, #8]
 800ae70:	b933      	cbnz	r3, 800ae80 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800ae72:	9301      	str	r3, [sp, #4]
 800ae74:	6823      	ldr	r3, [r4, #0]
 800ae76:	68da      	ldr	r2, [r3, #12]
 800ae78:	9201      	str	r2, [sp, #4]
 800ae7a:	689b      	ldr	r3, [r3, #8]
 800ae7c:	9301      	str	r3, [sp, #4]
 800ae7e:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800ae80:	2301      	movs	r3, #1
 800ae82:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ae86:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800ae88:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ae8a:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800ae8c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ae90:	bf18      	it	ne
 800ae92:	2001      	movne	r0, #1
 800ae94:	e018      	b.n	800aec8 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ae96:	6822      	ldr	r2, [r4, #0]
 800ae98:	6893      	ldr	r3, [r2, #8]
 800ae9a:	0798      	lsls	r0, r3, #30
 800ae9c:	d505      	bpl.n	800aeaa <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800ae9e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800aea0:	f833 1b02 	ldrh.w	r1, [r3], #2
 800aea4:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800aea6:	6323      	str	r3, [r4, #48]	@ 0x30
 800aea8:	e7d3      	b.n	800ae52 <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800aeaa:	f7fd ff3b 	bl	8008d24 <HAL_GetTick>
 800aeae:	eba0 0009 	sub.w	r0, r0, r9
 800aeb2:	42b8      	cmp	r0, r7
 800aeb4:	d3d1      	bcc.n	800ae5a <HAL_SPI_Transmit+0x9e>
 800aeb6:	1c79      	adds	r1, r7, #1
 800aeb8:	d0cf      	beq.n	800ae5a <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 800aeba:	2301      	movs	r3, #1
 800aebc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800aec0:	2300      	movs	r3, #0
 800aec2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800aec6:	2003      	movs	r0, #3
}
 800aec8:	b003      	add	sp, #12
 800aeca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800aece:	b113      	cbz	r3, 800aed6 <HAL_SPI_Transmit+0x11a>
 800aed0:	f1b8 0f01 	cmp.w	r8, #1
 800aed4:	d108      	bne.n	800aee8 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800aed6:	782b      	ldrb	r3, [r5, #0]
 800aed8:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800aeda:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800aedc:	3301      	adds	r3, #1
 800aede:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800aee0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800aee2:	3b01      	subs	r3, #1
 800aee4:	b29b      	uxth	r3, r3
 800aee6:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800aee8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800aeea:	b29b      	uxth	r3, r3
 800aeec:	2b00      	cmp	r3, #0
 800aeee:	d0b7      	beq.n	800ae60 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800aef0:	6823      	ldr	r3, [r4, #0]
 800aef2:	689a      	ldr	r2, [r3, #8]
 800aef4:	0792      	lsls	r2, r2, #30
 800aef6:	d503      	bpl.n	800af00 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800aef8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800aefa:	7812      	ldrb	r2, [r2, #0]
 800aefc:	731a      	strb	r2, [r3, #12]
 800aefe:	e7ec      	b.n	800aeda <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800af00:	f7fd ff10 	bl	8008d24 <HAL_GetTick>
 800af04:	eba0 0009 	sub.w	r0, r0, r9
 800af08:	42b8      	cmp	r0, r7
 800af0a:	d3ed      	bcc.n	800aee8 <HAL_SPI_Transmit+0x12c>
 800af0c:	1c7b      	adds	r3, r7, #1
 800af0e:	d0eb      	beq.n	800aee8 <HAL_SPI_Transmit+0x12c>
 800af10:	e7d3      	b.n	800aeba <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800af12:	2320      	movs	r3, #32
 800af14:	6563      	str	r3, [r4, #84]	@ 0x54
 800af16:	e7aa      	b.n	800ae6e <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 800af18:	2002      	movs	r0, #2
 800af1a:	e7d5      	b.n	800aec8 <HAL_SPI_Transmit+0x10c>

0800af1c <HAL_SPI_TransmitReceive>:
{
 800af1c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800af20:	4604      	mov	r4, r0
 800af22:	460d      	mov	r5, r1
 800af24:	4691      	mov	r9, r2
 800af26:	461e      	mov	r6, r3
 800af28:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 800af2c:	f7fd fefa 	bl	8008d24 <HAL_GetTick>
  tmp_state           = hspi->State;
 800af30:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 800af34:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800af36:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800af38:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 800af3a:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800af3c:	d00a      	beq.n	800af54 <HAL_SPI_TransmitReceive+0x38>
 800af3e:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800af42:	f040 80e5 	bne.w	800b110 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800af46:	68a3      	ldr	r3, [r4, #8]
 800af48:	2b00      	cmp	r3, #0
 800af4a:	f040 80e1 	bne.w	800b110 <HAL_SPI_TransmitReceive+0x1f4>
 800af4e:	2904      	cmp	r1, #4
 800af50:	f040 80de 	bne.w	800b110 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800af54:	2d00      	cmp	r5, #0
 800af56:	d04b      	beq.n	800aff0 <HAL_SPI_TransmitReceive+0xd4>
 800af58:	f1b9 0f00 	cmp.w	r9, #0
 800af5c:	d048      	beq.n	800aff0 <HAL_SPI_TransmitReceive+0xd4>
 800af5e:	2e00      	cmp	r6, #0
 800af60:	d046      	beq.n	800aff0 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 800af62:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800af66:	2b01      	cmp	r3, #1
 800af68:	f000 80d2 	beq.w	800b110 <HAL_SPI_TransmitReceive+0x1f4>
 800af6c:	2301      	movs	r3, #1
 800af6e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800af72:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800af76:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800af7a:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800af7c:	bf1c      	itt	ne
 800af7e:	2305      	movne	r3, #5
 800af80:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800af84:	2300      	movs	r3, #0
 800af86:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 800af88:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800af8c:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800af8e:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 800af90:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800af92:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800af94:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800af96:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800af98:	bf58      	it	pl
 800af9a:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800af9c:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 800af9e:	bf58      	it	pl
 800afa0:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 800afa4:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 800afa6:	bf58      	it	pl
 800afa8:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800afaa:	68e1      	ldr	r1, [r4, #12]
 800afac:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 800afb0:	d155      	bne.n	800b05e <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800afb2:	b10a      	cbz	r2, 800afb8 <HAL_SPI_TransmitReceive+0x9c>
 800afb4:	2e01      	cmp	r6, #1
 800afb6:	d107      	bne.n	800afc8 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800afb8:	f835 2b02 	ldrh.w	r2, [r5], #2
 800afbc:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800afbe:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800afc0:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800afc2:	3b01      	subs	r3, #1
 800afc4:	b29b      	uxth	r3, r3
 800afc6:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800afc8:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800afca:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800afcc:	b29b      	uxth	r3, r3
 800afce:	b98b      	cbnz	r3, 800aff4 <HAL_SPI_TransmitReceive+0xd8>
 800afd0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800afd2:	b29b      	uxth	r3, r3
 800afd4:	b973      	cbnz	r3, 800aff4 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800afd6:	463a      	mov	r2, r7
 800afd8:	4641      	mov	r1, r8
 800afda:	4620      	mov	r0, r4
 800afdc:	f7ff fe28 	bl	800ac30 <SPI_EndRxTxTransaction>
 800afe0:	2800      	cmp	r0, #0
 800afe2:	f000 8081 	beq.w	800b0e8 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800afe6:	2320      	movs	r3, #32
 800afe8:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800afea:	2300      	movs	r3, #0
 800afec:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 800aff0:	2001      	movs	r0, #1
 800aff2:	e031      	b.n	800b058 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800aff4:	6821      	ldr	r1, [r4, #0]
 800aff6:	688b      	ldr	r3, [r1, #8]
 800aff8:	079a      	lsls	r2, r3, #30
 800affa:	d50d      	bpl.n	800b018 <HAL_SPI_TransmitReceive+0xfc>
 800affc:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800affe:	b29b      	uxth	r3, r3
 800b000:	b153      	cbz	r3, 800b018 <HAL_SPI_TransmitReceive+0xfc>
 800b002:	b145      	cbz	r5, 800b016 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800b004:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800b006:	f833 2b02 	ldrh.w	r2, [r3], #2
 800b00a:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800b00c:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800b00e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800b010:	3b01      	subs	r3, #1
 800b012:	b29b      	uxth	r3, r3
 800b014:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 800b016:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800b018:	688a      	ldr	r2, [r1, #8]
 800b01a:	f012 0201 	ands.w	r2, r2, #1
 800b01e:	d00c      	beq.n	800b03a <HAL_SPI_TransmitReceive+0x11e>
 800b020:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b022:	b29b      	uxth	r3, r3
 800b024:	b14b      	cbz	r3, 800b03a <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800b026:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800b028:	68c9      	ldr	r1, [r1, #12]
 800b02a:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b02e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800b030:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b032:	3b01      	subs	r3, #1
 800b034:	b29b      	uxth	r3, r3
 800b036:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800b038:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800b03a:	f7fd fe73 	bl	8008d24 <HAL_GetTick>
 800b03e:	1bc0      	subs	r0, r0, r7
 800b040:	4540      	cmp	r0, r8
 800b042:	d3c2      	bcc.n	800afca <HAL_SPI_TransmitReceive+0xae>
 800b044:	f1b8 3fff 	cmp.w	r8, #4294967295
 800b048:	d0bf      	beq.n	800afca <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 800b04a:	2301      	movs	r3, #1
 800b04c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800b050:	2300      	movs	r3, #0
 800b052:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800b056:	2003      	movs	r0, #3
}
 800b058:	b003      	add	sp, #12
 800b05a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b05e:	b10a      	cbz	r2, 800b064 <HAL_SPI_TransmitReceive+0x148>
 800b060:	2e01      	cmp	r6, #1
 800b062:	d108      	bne.n	800b076 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800b064:	782a      	ldrb	r2, [r5, #0]
 800b066:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b068:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800b06a:	3301      	adds	r3, #1
 800b06c:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800b06e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800b070:	3b01      	subs	r3, #1
 800b072:	b29b      	uxth	r3, r3
 800b074:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800b076:	2501      	movs	r5, #1
 800b078:	e02d      	b.n	800b0d6 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800b07a:	6822      	ldr	r2, [r4, #0]
 800b07c:	6893      	ldr	r3, [r2, #8]
 800b07e:	079b      	lsls	r3, r3, #30
 800b080:	d50e      	bpl.n	800b0a0 <HAL_SPI_TransmitReceive+0x184>
 800b082:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800b084:	b29b      	uxth	r3, r3
 800b086:	b15b      	cbz	r3, 800b0a0 <HAL_SPI_TransmitReceive+0x184>
 800b088:	b14d      	cbz	r5, 800b09e <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 800b08a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800b08c:	781b      	ldrb	r3, [r3, #0]
 800b08e:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800b090:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800b092:	3301      	adds	r3, #1
 800b094:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800b096:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800b098:	3b01      	subs	r3, #1
 800b09a:	b29b      	uxth	r3, r3
 800b09c:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800b09e:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800b0a0:	6822      	ldr	r2, [r4, #0]
 800b0a2:	6891      	ldr	r1, [r2, #8]
 800b0a4:	f011 0101 	ands.w	r1, r1, #1
 800b0a8:	d00d      	beq.n	800b0c6 <HAL_SPI_TransmitReceive+0x1aa>
 800b0aa:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b0ac:	b29b      	uxth	r3, r3
 800b0ae:	b153      	cbz	r3, 800b0c6 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800b0b0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800b0b2:	68d2      	ldr	r2, [r2, #12]
 800b0b4:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800b0b6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800b0b8:	3301      	adds	r3, #1
 800b0ba:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800b0bc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b0be:	3b01      	subs	r3, #1
 800b0c0:	b29b      	uxth	r3, r3
 800b0c2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800b0c4:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800b0c6:	f7fd fe2d 	bl	8008d24 <HAL_GetTick>
 800b0ca:	1bc0      	subs	r0, r0, r7
 800b0cc:	4540      	cmp	r0, r8
 800b0ce:	d302      	bcc.n	800b0d6 <HAL_SPI_TransmitReceive+0x1ba>
 800b0d0:	f1b8 3fff 	cmp.w	r8, #4294967295
 800b0d4:	d1b9      	bne.n	800b04a <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800b0d6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800b0d8:	b29b      	uxth	r3, r3
 800b0da:	2b00      	cmp	r3, #0
 800b0dc:	d1cd      	bne.n	800b07a <HAL_SPI_TransmitReceive+0x15e>
 800b0de:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b0e0:	b29b      	uxth	r3, r3
 800b0e2:	2b00      	cmp	r3, #0
 800b0e4:	d1c9      	bne.n	800b07a <HAL_SPI_TransmitReceive+0x15e>
 800b0e6:	e776      	b.n	800afd6 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800b0e8:	68a3      	ldr	r3, [r4, #8]
 800b0ea:	b933      	cbnz	r3, 800b0fa <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800b0ec:	9301      	str	r3, [sp, #4]
 800b0ee:	6823      	ldr	r3, [r4, #0]
 800b0f0:	68da      	ldr	r2, [r3, #12]
 800b0f2:	9201      	str	r2, [sp, #4]
 800b0f4:	689b      	ldr	r3, [r3, #8]
 800b0f6:	9301      	str	r3, [sp, #4]
 800b0f8:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800b0fa:	2301      	movs	r3, #1
 800b0fc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b100:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800b102:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b104:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800b106:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b10a:	bf18      	it	ne
 800b10c:	2001      	movne	r0, #1
 800b10e:	e7a3      	b.n	800b058 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 800b110:	2002      	movs	r0, #2
 800b112:	e7a1      	b.n	800b058 <HAL_SPI_TransmitReceive+0x13c>

0800b114 <HAL_SPI_Receive>:
{
 800b114:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b118:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 800b11a:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 800b11e:	2b01      	cmp	r3, #1
{
 800b120:	4604      	mov	r4, r0
 800b122:	4689      	mov	r9, r1
 800b124:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 800b126:	b2dd      	uxtb	r5, r3
 800b128:	d004      	beq.n	800b134 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 800b12a:	2502      	movs	r5, #2
}
 800b12c:	4628      	mov	r0, r5
 800b12e:	b003      	add	sp, #12
 800b130:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800b134:	6843      	ldr	r3, [r0, #4]
 800b136:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800b13a:	d10b      	bne.n	800b154 <HAL_SPI_Receive+0x40>
 800b13c:	6883      	ldr	r3, [r0, #8]
 800b13e:	b94b      	cbnz	r3, 800b154 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800b140:	2304      	movs	r3, #4
 800b142:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800b146:	4613      	mov	r3, r2
 800b148:	9600      	str	r6, [sp, #0]
 800b14a:	460a      	mov	r2, r1
 800b14c:	f7ff fee6 	bl	800af1c <HAL_SPI_TransmitReceive>
 800b150:	4605      	mov	r5, r0
 800b152:	e7eb      	b.n	800b12c <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 800b154:	f7fd fde6 	bl	8008d24 <HAL_GetTick>
 800b158:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 800b15a:	f1b9 0f00 	cmp.w	r9, #0
 800b15e:	d0e5      	beq.n	800b12c <HAL_SPI_Receive+0x18>
 800b160:	2f00      	cmp	r7, #0
 800b162:	d0e3      	beq.n	800b12c <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 800b164:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800b168:	2b01      	cmp	r3, #1
 800b16a:	d0de      	beq.n	800b12a <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b16c:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800b16e:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 800b172:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b174:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 800b176:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b17a:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800b17e:	f04f 0304 	mov.w	r3, #4
 800b182:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 800b186:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b18a:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 800b18c:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800b18e:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 800b190:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800b192:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 800b194:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 800b196:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b198:	d107      	bne.n	800b1aa <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 800b19a:	681a      	ldr	r2, [r3, #0]
 800b19c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b1a0:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800b1a2:	681a      	ldr	r2, [r3, #0]
 800b1a4:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800b1a8:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b1aa:	681a      	ldr	r2, [r3, #0]
 800b1ac:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800b1ae:	bf5e      	ittt	pl
 800b1b0:	681a      	ldrpl	r2, [r3, #0]
 800b1b2:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 800b1b6:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800b1b8:	68e3      	ldr	r3, [r4, #12]
 800b1ba:	b1f3      	cbz	r3, 800b1fa <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 800b1bc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b1be:	b29b      	uxth	r3, r3
 800b1c0:	b1fb      	cbz	r3, 800b202 <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b1c2:	6823      	ldr	r3, [r4, #0]
 800b1c4:	689a      	ldr	r2, [r3, #8]
 800b1c6:	07d2      	lsls	r2, r2, #31
 800b1c8:	d53c      	bpl.n	800b244 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800b1ca:	68da      	ldr	r2, [r3, #12]
 800b1cc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800b1ce:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b1d2:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800b1d4:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b1d6:	3b01      	subs	r3, #1
 800b1d8:	b29b      	uxth	r3, r3
 800b1da:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800b1dc:	e7ee      	b.n	800b1bc <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b1de:	6823      	ldr	r3, [r4, #0]
 800b1e0:	689a      	ldr	r2, [r3, #8]
 800b1e2:	07d0      	lsls	r0, r2, #31
 800b1e4:	d51e      	bpl.n	800b224 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800b1e6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800b1e8:	7b1b      	ldrb	r3, [r3, #12]
 800b1ea:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b1ec:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800b1ee:	3301      	adds	r3, #1
 800b1f0:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800b1f2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b1f4:	3b01      	subs	r3, #1
 800b1f6:	b29b      	uxth	r3, r3
 800b1f8:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 800b1fa:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b1fc:	b29b      	uxth	r3, r3
 800b1fe:	2b00      	cmp	r3, #0
 800b200:	d1ed      	bne.n	800b1de <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800b202:	4642      	mov	r2, r8
 800b204:	4631      	mov	r1, r6
 800b206:	4620      	mov	r0, r4
 800b208:	f7ff fd4e 	bl	800aca8 <SPI_EndRxTransaction>
 800b20c:	bb18      	cbnz	r0, 800b256 <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 800b20e:	2301      	movs	r3, #1
 800b210:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b214:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800b216:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b218:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 800b21a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b21e:	bf18      	it	ne
 800b220:	2501      	movne	r5, #1
 800b222:	e783      	b.n	800b12c <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b224:	f7fd fd7e 	bl	8008d24 <HAL_GetTick>
 800b228:	eba0 0008 	sub.w	r0, r0, r8
 800b22c:	42b0      	cmp	r0, r6
 800b22e:	d3e4      	bcc.n	800b1fa <HAL_SPI_Receive+0xe6>
 800b230:	1c71      	adds	r1, r6, #1
 800b232:	d0e2      	beq.n	800b1fa <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 800b234:	2301      	movs	r3, #1
 800b236:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800b23a:	2300      	movs	r3, #0
 800b23c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800b240:	2503      	movs	r5, #3
 800b242:	e773      	b.n	800b12c <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b244:	f7fd fd6e 	bl	8008d24 <HAL_GetTick>
 800b248:	eba0 0008 	sub.w	r0, r0, r8
 800b24c:	42b0      	cmp	r0, r6
 800b24e:	d3b5      	bcc.n	800b1bc <HAL_SPI_Receive+0xa8>
 800b250:	1c73      	adds	r3, r6, #1
 800b252:	d0b3      	beq.n	800b1bc <HAL_SPI_Receive+0xa8>
 800b254:	e7ee      	b.n	800b234 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b256:	2320      	movs	r3, #32
 800b258:	6563      	str	r3, [r4, #84]	@ 0x54
 800b25a:	e7d8      	b.n	800b20e <HAL_SPI_Receive+0xfa>

0800b25c <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800b25c:	4770      	bx	lr
	...

0800b260 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800b260:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800b264:	2b01      	cmp	r3, #1
 800b266:	d130      	bne.n	800b2ca <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800b268:	2302      	movs	r3, #2
 800b26a:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b26e:	6803      	ldr	r3, [r0, #0]
 800b270:	68da      	ldr	r2, [r3, #12]
 800b272:	f042 0201 	orr.w	r2, r2, #1
 800b276:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b278:	4a15      	ldr	r2, [pc, #84]	@ (800b2d0 <HAL_TIM_Base_Start_IT+0x70>)
 800b27a:	4293      	cmp	r3, r2
 800b27c:	d01a      	beq.n	800b2b4 <HAL_TIM_Base_Start_IT+0x54>
 800b27e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800b282:	d017      	beq.n	800b2b4 <HAL_TIM_Base_Start_IT+0x54>
 800b284:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800b288:	4293      	cmp	r3, r2
 800b28a:	d013      	beq.n	800b2b4 <HAL_TIM_Base_Start_IT+0x54>
 800b28c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b290:	4293      	cmp	r3, r2
 800b292:	d00f      	beq.n	800b2b4 <HAL_TIM_Base_Start_IT+0x54>
 800b294:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b298:	4293      	cmp	r3, r2
 800b29a:	d00b      	beq.n	800b2b4 <HAL_TIM_Base_Start_IT+0x54>
 800b29c:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800b2a0:	4293      	cmp	r3, r2
 800b2a2:	d007      	beq.n	800b2b4 <HAL_TIM_Base_Start_IT+0x54>
 800b2a4:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 800b2a8:	4293      	cmp	r3, r2
 800b2aa:	d003      	beq.n	800b2b4 <HAL_TIM_Base_Start_IT+0x54>
 800b2ac:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800b2b0:	4293      	cmp	r3, r2
 800b2b2:	d104      	bne.n	800b2be <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800b2b4:	689a      	ldr	r2, [r3, #8]
 800b2b6:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800b2ba:	2a06      	cmp	r2, #6
 800b2bc:	d003      	beq.n	800b2c6 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 800b2be:	681a      	ldr	r2, [r3, #0]
 800b2c0:	f042 0201 	orr.w	r2, r2, #1
 800b2c4:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 800b2c6:	2000      	movs	r0, #0
 800b2c8:	4770      	bx	lr
    return HAL_ERROR;
 800b2ca:	2001      	movs	r0, #1
}
 800b2cc:	4770      	bx	lr
 800b2ce:	bf00      	nop
 800b2d0:	40010000 	.word	0x40010000

0800b2d4 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 800b2d4:	4770      	bx	lr

0800b2d6 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 800b2d6:	4770      	bx	lr

0800b2d8 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 800b2d8:	4770      	bx	lr

0800b2da <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800b2da:	4770      	bx	lr

0800b2dc <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 800b2dc:	6803      	ldr	r3, [r0, #0]
{
 800b2de:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 800b2e0:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 800b2e2:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800b2e4:	07b1      	lsls	r1, r6, #30
{
 800b2e6:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800b2e8:	d50d      	bpl.n	800b306 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800b2ea:	07aa      	lsls	r2, r5, #30
 800b2ec:	d50b      	bpl.n	800b306 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800b2ee:	f06f 0202 	mvn.w	r2, #2
 800b2f2:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800b2f4:	2201      	movs	r2, #1
 800b2f6:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800b2f8:	699b      	ldr	r3, [r3, #24]
 800b2fa:	079b      	lsls	r3, r3, #30
 800b2fc:	d069      	beq.n	800b3d2 <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 800b2fe:	f7ff ffea 	bl	800b2d6 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b302:	2300      	movs	r3, #0
 800b304:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800b306:	0771      	lsls	r1, r6, #29
 800b308:	d510      	bpl.n	800b32c <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800b30a:	076a      	lsls	r2, r5, #29
 800b30c:	d50e      	bpl.n	800b32c <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800b30e:	6823      	ldr	r3, [r4, #0]
 800b310:	f06f 0204 	mvn.w	r2, #4
 800b314:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800b316:	2202      	movs	r2, #2
 800b318:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800b31a:	699b      	ldr	r3, [r3, #24]
 800b31c:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800b320:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800b322:	d05c      	beq.n	800b3de <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 800b324:	f7ff ffd7 	bl	800b2d6 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b328:	2300      	movs	r3, #0
 800b32a:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800b32c:	0733      	lsls	r3, r6, #28
 800b32e:	d50f      	bpl.n	800b350 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800b330:	0728      	lsls	r0, r5, #28
 800b332:	d50d      	bpl.n	800b350 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 800b334:	6823      	ldr	r3, [r4, #0]
 800b336:	f06f 0208 	mvn.w	r2, #8
 800b33a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800b33c:	2204      	movs	r2, #4
 800b33e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800b340:	69db      	ldr	r3, [r3, #28]
 800b342:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800b344:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800b346:	d050      	beq.n	800b3ea <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 800b348:	f7ff ffc5 	bl	800b2d6 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b34c:	2300      	movs	r3, #0
 800b34e:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800b350:	06f2      	lsls	r2, r6, #27
 800b352:	d510      	bpl.n	800b376 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 800b354:	06eb      	lsls	r3, r5, #27
 800b356:	d50e      	bpl.n	800b376 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 800b358:	6823      	ldr	r3, [r4, #0]
 800b35a:	f06f 0210 	mvn.w	r2, #16
 800b35e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800b360:	2208      	movs	r2, #8
 800b362:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800b364:	69db      	ldr	r3, [r3, #28]
 800b366:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800b36a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800b36c:	d043      	beq.n	800b3f6 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 800b36e:	f7ff ffb2 	bl	800b2d6 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b372:	2300      	movs	r3, #0
 800b374:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 800b376:	07f0      	lsls	r0, r6, #31
 800b378:	d508      	bpl.n	800b38c <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800b37a:	07e9      	lsls	r1, r5, #31
 800b37c:	d506      	bpl.n	800b38c <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800b37e:	6823      	ldr	r3, [r4, #0]
 800b380:	f06f 0201 	mvn.w	r2, #1
 800b384:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800b386:	4620      	mov	r0, r4
 800b388:	f7f6 fd8c 	bl	8001ea4 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 800b38c:	0632      	lsls	r2, r6, #24
 800b38e:	d508      	bpl.n	800b3a2 <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800b390:	062b      	lsls	r3, r5, #24
 800b392:	d506      	bpl.n	800b3a2 <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 800b394:	6823      	ldr	r3, [r4, #0]
 800b396:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800b39a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800b39c:	4620      	mov	r0, r4
 800b39e:	f000 f8b6 	bl	800b50e <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800b3a2:	0670      	lsls	r0, r6, #25
 800b3a4:	d508      	bpl.n	800b3b8 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800b3a6:	0669      	lsls	r1, r5, #25
 800b3a8:	d506      	bpl.n	800b3b8 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800b3aa:	6823      	ldr	r3, [r4, #0]
 800b3ac:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800b3b0:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800b3b2:	4620      	mov	r0, r4
 800b3b4:	f7ff ff91 	bl	800b2da <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800b3b8:	06b2      	lsls	r2, r6, #26
 800b3ba:	d522      	bpl.n	800b402 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800b3bc:	06ab      	lsls	r3, r5, #26
 800b3be:	d520      	bpl.n	800b402 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800b3c0:	6823      	ldr	r3, [r4, #0]
 800b3c2:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800b3c6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800b3c8:	611a      	str	r2, [r3, #16]
}
 800b3ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800b3ce:	f000 b89d 	b.w	800b50c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800b3d2:	f7ff ff7f 	bl	800b2d4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b3d6:	4620      	mov	r0, r4
 800b3d8:	f7ff ff7e 	bl	800b2d8 <HAL_TIM_PWM_PulseFinishedCallback>
 800b3dc:	e791      	b.n	800b302 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b3de:	f7ff ff79 	bl	800b2d4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b3e2:	4620      	mov	r0, r4
 800b3e4:	f7ff ff78 	bl	800b2d8 <HAL_TIM_PWM_PulseFinishedCallback>
 800b3e8:	e79e      	b.n	800b328 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b3ea:	f7ff ff73 	bl	800b2d4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b3ee:	4620      	mov	r0, r4
 800b3f0:	f7ff ff72 	bl	800b2d8 <HAL_TIM_PWM_PulseFinishedCallback>
 800b3f4:	e7aa      	b.n	800b34c <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b3f6:	f7ff ff6d 	bl	800b2d4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b3fa:	4620      	mov	r0, r4
 800b3fc:	f7ff ff6c 	bl	800b2d8 <HAL_TIM_PWM_PulseFinishedCallback>
 800b400:	e7b7      	b.n	800b372 <HAL_TIM_IRQHandler+0x96>
}
 800b402:	bd70      	pop	{r4, r5, r6, pc}

0800b404 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b404:	4a29      	ldr	r2, [pc, #164]	@ (800b4ac <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 800b406:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b408:	4290      	cmp	r0, r2
 800b40a:	d012      	beq.n	800b432 <TIM_Base_SetConfig+0x2e>
 800b40c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800b410:	d00f      	beq.n	800b432 <TIM_Base_SetConfig+0x2e>
 800b412:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800b416:	4290      	cmp	r0, r2
 800b418:	d00b      	beq.n	800b432 <TIM_Base_SetConfig+0x2e>
 800b41a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b41e:	4290      	cmp	r0, r2
 800b420:	d007      	beq.n	800b432 <TIM_Base_SetConfig+0x2e>
 800b422:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b426:	4290      	cmp	r0, r2
 800b428:	d003      	beq.n	800b432 <TIM_Base_SetConfig+0x2e>
 800b42a:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800b42e:	4290      	cmp	r0, r2
 800b430:	d108      	bne.n	800b444 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800b432:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b434:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 800b438:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b43a:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800b43c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b440:	4313      	orrs	r3, r2
 800b442:	e016      	b.n	800b472 <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800b444:	4a1a      	ldr	r2, [pc, #104]	@ (800b4b0 <TIM_Base_SetConfig+0xac>)
 800b446:	4290      	cmp	r0, r2
 800b448:	d0f7      	beq.n	800b43a <TIM_Base_SetConfig+0x36>
 800b44a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b44e:	4290      	cmp	r0, r2
 800b450:	d0f3      	beq.n	800b43a <TIM_Base_SetConfig+0x36>
 800b452:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b456:	4290      	cmp	r0, r2
 800b458:	d0ef      	beq.n	800b43a <TIM_Base_SetConfig+0x36>
 800b45a:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 800b45e:	4290      	cmp	r0, r2
 800b460:	d0eb      	beq.n	800b43a <TIM_Base_SetConfig+0x36>
 800b462:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b466:	4290      	cmp	r0, r2
 800b468:	d0e7      	beq.n	800b43a <TIM_Base_SetConfig+0x36>
 800b46a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b46e:	4290      	cmp	r0, r2
 800b470:	d0e3      	beq.n	800b43a <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b472:	694a      	ldr	r2, [r1, #20]
 800b474:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800b478:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800b47a:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b47c:	688b      	ldr	r3, [r1, #8]
 800b47e:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800b480:	680b      	ldr	r3, [r1, #0]
 800b482:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800b484:	4b09      	ldr	r3, [pc, #36]	@ (800b4ac <TIM_Base_SetConfig+0xa8>)
 800b486:	4298      	cmp	r0, r3
 800b488:	d003      	beq.n	800b492 <TIM_Base_SetConfig+0x8e>
 800b48a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800b48e:	4298      	cmp	r0, r3
 800b490:	d101      	bne.n	800b496 <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800b492:	690b      	ldr	r3, [r1, #16]
 800b494:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800b496:	2301      	movs	r3, #1
 800b498:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800b49a:	6903      	ldr	r3, [r0, #16]
 800b49c:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800b49e:	bf42      	ittt	mi
 800b4a0:	6903      	ldrmi	r3, [r0, #16]
 800b4a2:	f023 0301 	bicmi.w	r3, r3, #1
 800b4a6:	6103      	strmi	r3, [r0, #16]
  }
}
 800b4a8:	4770      	bx	lr
 800b4aa:	bf00      	nop
 800b4ac:	40010000 	.word	0x40010000
 800b4b0:	40014000 	.word	0x40014000

0800b4b4 <HAL_TIM_Base_Init>:
{
 800b4b4:	b510      	push	{r4, lr}
  if (htim == NULL)
 800b4b6:	4604      	mov	r4, r0
 800b4b8:	b330      	cbz	r0, 800b508 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800b4ba:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800b4be:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800b4c2:	b91b      	cbnz	r3, 800b4cc <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800b4c4:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800b4c8:	f7ff fec8 	bl	800b25c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800b4cc:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800b4ce:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800b4d0:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800b4d4:	1d21      	adds	r1, r4, #4
 800b4d6:	f7ff ff95 	bl	800b404 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800b4da:	2301      	movs	r3, #1
 800b4dc:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 800b4e0:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800b4e2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800b4e6:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800b4ea:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800b4ee:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800b4f2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800b4f6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800b4fa:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800b4fe:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 800b502:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800b506:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b508:	2001      	movs	r0, #1
 800b50a:	e7fc      	b.n	800b506 <HAL_TIM_Base_Init+0x52>

0800b50c <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 800b50c:	4770      	bx	lr

0800b50e <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 800b50e:	4770      	bx	lr

0800b510 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800b510:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800b514:	6803      	ldr	r3, [r0, #0]
 800b516:	68c1      	ldr	r1, [r0, #12]
 800b518:	691a      	ldr	r2, [r3, #16]
{
 800b51a:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800b51c:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 800b520:	430a      	orrs	r2, r1
 800b522:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b524:	6925      	ldr	r5, [r4, #16]
 800b526:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1,
 800b528:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b52a:	69c0      	ldr	r0, [r0, #28]
 800b52c:	432a      	orrs	r2, r5
 800b52e:	6965      	ldr	r5, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 800b530:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b534:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1,
 800b536:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b53a:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 800b53c:	430a      	orrs	r2, r1
 800b53e:	60da      	str	r2, [r3, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800b540:	695a      	ldr	r2, [r3, #20]
 800b542:	69a1      	ldr	r1, [r4, #24]
 800b544:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800b548:	430a      	orrs	r2, r1

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b54a:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800b54e:	615a      	str	r2, [r3, #20]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b550:	4a83      	ldr	r2, [pc, #524]	@ (800b760 <UART_SetConfig+0x250>)
 800b552:	f040 8085 	bne.w	800b660 <UART_SetConfig+0x150>
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
#if defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800b556:	4293      	cmp	r3, r2
 800b558:	d003      	beq.n	800b562 <UART_SetConfig+0x52>
 800b55a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b55e:	4293      	cmp	r3, r2
 800b560:	d149      	bne.n	800b5f6 <UART_SetConfig+0xe6>
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 800b562:	f7ff f959 	bl	800a818 <HAL_RCC_GetPCLK2Freq>
 800b566:	6863      	ldr	r3, [r4, #4]
 800b568:	f04f 0919 	mov.w	r9, #25
 800b56c:	005b      	lsls	r3, r3, #1
 800b56e:	fb09 f700 	mul.w	r7, r9, r0
 800b572:	fbb7 f7f3 	udiv	r7, r7, r3
 800b576:	f7ff f94f 	bl	800a818 <HAL_RCC_GetPCLK2Freq>
 800b57a:	6863      	ldr	r3, [r4, #4]
 800b57c:	fb09 f500 	mul.w	r5, r9, r0
 800b580:	005b      	lsls	r3, r3, #1
 800b582:	fbb5 f5f3 	udiv	r5, r5, r3
 800b586:	f7ff f947 	bl	800a818 <HAL_RCC_GetPCLK2Freq>
 800b58a:	6863      	ldr	r3, [r4, #4]
 800b58c:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800b590:	005b      	lsls	r3, r3, #1
 800b592:	fb09 f000 	mul.w	r0, r9, r0
 800b596:	fbb0 f0f3 	udiv	r0, r0, r3
 800b59a:	fbb0 f0f8 	udiv	r0, r0, r8
 800b59e:	fb08 5610 	mls	r6, r8, r0, r5
 800b5a2:	f7ff f939 	bl	800a818 <HAL_RCC_GetPCLK2Freq>
 800b5a6:	fbb7 f7f8 	udiv	r7, r7, r8
 800b5aa:	6863      	ldr	r3, [r4, #4]
 800b5ac:	00f6      	lsls	r6, r6, #3
 800b5ae:	3632      	adds	r6, #50	@ 0x32
 800b5b0:	fbb6 f6f8 	udiv	r6, r6, r8
 800b5b4:	0076      	lsls	r6, r6, #1
 800b5b6:	fb09 f500 	mul.w	r5, r9, r0
 800b5ba:	005b      	lsls	r3, r3, #1
 800b5bc:	013f      	lsls	r7, r7, #4
 800b5be:	f406 76f8 	and.w	r6, r6, #496	@ 0x1f0
 800b5c2:	fbb5 f5f3 	udiv	r5, r5, r3
 800b5c6:	f7ff f927 	bl	800a818 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800b5ca:	6863      	ldr	r3, [r4, #4]
 800b5cc:	6822      	ldr	r2, [r4, #0]
 800b5ce:	005b      	lsls	r3, r3, #1
 800b5d0:	fb09 f000 	mul.w	r0, r9, r0
 800b5d4:	fbb0 f0f3 	udiv	r0, r0, r3
 800b5d8:	fbb0 f0f8 	udiv	r0, r0, r8
 800b5dc:	fb08 5310 	mls	r3, r8, r0, r5
 800b5e0:	00db      	lsls	r3, r3, #3
 800b5e2:	3332      	adds	r3, #50	@ 0x32
 800b5e4:	fbb3 f3f8 	udiv	r3, r3, r8
 800b5e8:	f003 0307 	and.w	r3, r3, #7
 800b5ec:	443b      	add	r3, r7
 800b5ee:	4433      	add	r3, r6
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800b5f0:	6093      	str	r3, [r2, #8]
    }
  }
}
 800b5f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800b5f6:	f7ff f8ff 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 800b5fa:	6863      	ldr	r3, [r4, #4]
 800b5fc:	f04f 0919 	mov.w	r9, #25
 800b600:	fb09 f700 	mul.w	r7, r9, r0
 800b604:	005b      	lsls	r3, r3, #1
 800b606:	fbb7 f7f3 	udiv	r7, r7, r3
 800b60a:	f7ff f8f5 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 800b60e:	6863      	ldr	r3, [r4, #4]
 800b610:	fb09 f500 	mul.w	r5, r9, r0
 800b614:	005b      	lsls	r3, r3, #1
 800b616:	fbb5 f5f3 	udiv	r5, r5, r3
 800b61a:	f7ff f8ed 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 800b61e:	6863      	ldr	r3, [r4, #4]
 800b620:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800b624:	005b      	lsls	r3, r3, #1
 800b626:	fb09 f000 	mul.w	r0, r9, r0
 800b62a:	fbb0 f0f3 	udiv	r0, r0, r3
 800b62e:	fbb0 f0f8 	udiv	r0, r0, r8
 800b632:	fb08 5610 	mls	r6, r8, r0, r5
 800b636:	f7ff f8df 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 800b63a:	fbb7 f7f8 	udiv	r7, r7, r8
 800b63e:	6863      	ldr	r3, [r4, #4]
 800b640:	00f6      	lsls	r6, r6, #3
 800b642:	3632      	adds	r6, #50	@ 0x32
 800b644:	fbb6 f6f8 	udiv	r6, r6, r8
 800b648:	0076      	lsls	r6, r6, #1
 800b64a:	fb09 f500 	mul.w	r5, r9, r0
 800b64e:	005b      	lsls	r3, r3, #1
 800b650:	013f      	lsls	r7, r7, #4
 800b652:	f406 76f8 	and.w	r6, r6, #496	@ 0x1f0
 800b656:	fbb5 f5f3 	udiv	r5, r5, r3
 800b65a:	f7ff f8cd 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 800b65e:	e7b4      	b.n	800b5ca <UART_SetConfig+0xba>
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800b660:	4293      	cmp	r3, r2
 800b662:	d002      	beq.n	800b66a <UART_SetConfig+0x15a>
 800b664:	4a3f      	ldr	r2, [pc, #252]	@ (800b764 <UART_SetConfig+0x254>)
 800b666:	4293      	cmp	r3, r2
 800b668:	d146      	bne.n	800b6f8 <UART_SetConfig+0x1e8>
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 800b66a:	f7ff f8d5 	bl	800a818 <HAL_RCC_GetPCLK2Freq>
 800b66e:	6863      	ldr	r3, [r4, #4]
 800b670:	f04f 0919 	mov.w	r9, #25
 800b674:	009b      	lsls	r3, r3, #2
 800b676:	fb09 f700 	mul.w	r7, r9, r0
 800b67a:	fbb7 f7f3 	udiv	r7, r7, r3
 800b67e:	f7ff f8cb 	bl	800a818 <HAL_RCC_GetPCLK2Freq>
 800b682:	6863      	ldr	r3, [r4, #4]
 800b684:	fb09 f500 	mul.w	r5, r9, r0
 800b688:	009b      	lsls	r3, r3, #2
 800b68a:	fbb5 f5f3 	udiv	r5, r5, r3
 800b68e:	f7ff f8c3 	bl	800a818 <HAL_RCC_GetPCLK2Freq>
 800b692:	6863      	ldr	r3, [r4, #4]
 800b694:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800b698:	009b      	lsls	r3, r3, #2
 800b69a:	fb09 f000 	mul.w	r0, r9, r0
 800b69e:	fbb0 f0f3 	udiv	r0, r0, r3
 800b6a2:	fbb0 f0f8 	udiv	r0, r0, r8
 800b6a6:	fb08 5610 	mls	r6, r8, r0, r5
 800b6aa:	f7ff f8b5 	bl	800a818 <HAL_RCC_GetPCLK2Freq>
 800b6ae:	fbb7 f7f8 	udiv	r7, r7, r8
 800b6b2:	6863      	ldr	r3, [r4, #4]
 800b6b4:	0136      	lsls	r6, r6, #4
 800b6b6:	3632      	adds	r6, #50	@ 0x32
 800b6b8:	fb09 f500 	mul.w	r5, r9, r0
 800b6bc:	009b      	lsls	r3, r3, #2
 800b6be:	fbb6 f6f8 	udiv	r6, r6, r8
 800b6c2:	013f      	lsls	r7, r7, #4
 800b6c4:	f006 06f0 	and.w	r6, r6, #240	@ 0xf0
 800b6c8:	fbb5 f5f3 	udiv	r5, r5, r3
 800b6cc:	f7ff f8a4 	bl	800a818 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800b6d0:	6863      	ldr	r3, [r4, #4]
 800b6d2:	6822      	ldr	r2, [r4, #0]
 800b6d4:	009b      	lsls	r3, r3, #2
 800b6d6:	fb09 f000 	mul.w	r0, r9, r0
 800b6da:	fbb0 f0f3 	udiv	r0, r0, r3
 800b6de:	fbb0 f0f8 	udiv	r0, r0, r8
 800b6e2:	fb08 5310 	mls	r3, r8, r0, r5
 800b6e6:	011b      	lsls	r3, r3, #4
 800b6e8:	3332      	adds	r3, #50	@ 0x32
 800b6ea:	fbb3 f3f8 	udiv	r3, r3, r8
 800b6ee:	f003 030f 	and.w	r3, r3, #15
 800b6f2:	4333      	orrs	r3, r6
 800b6f4:	443b      	add	r3, r7
 800b6f6:	e77b      	b.n	800b5f0 <UART_SetConfig+0xe0>
 800b6f8:	f7ff f87e 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 800b6fc:	6863      	ldr	r3, [r4, #4]
 800b6fe:	f04f 0919 	mov.w	r9, #25
 800b702:	fb09 f700 	mul.w	r7, r9, r0
 800b706:	009b      	lsls	r3, r3, #2
 800b708:	fbb7 f7f3 	udiv	r7, r7, r3
 800b70c:	f7ff f874 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 800b710:	6863      	ldr	r3, [r4, #4]
 800b712:	fb09 f500 	mul.w	r5, r9, r0
 800b716:	009b      	lsls	r3, r3, #2
 800b718:	fbb5 f5f3 	udiv	r5, r5, r3
 800b71c:	f7ff f86c 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 800b720:	6863      	ldr	r3, [r4, #4]
 800b722:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800b726:	009b      	lsls	r3, r3, #2
 800b728:	fb09 f000 	mul.w	r0, r9, r0
 800b72c:	fbb0 f0f3 	udiv	r0, r0, r3
 800b730:	fbb0 f0f8 	udiv	r0, r0, r8
 800b734:	fb08 5610 	mls	r6, r8, r0, r5
 800b738:	f7ff f85e 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 800b73c:	fbb7 f7f8 	udiv	r7, r7, r8
 800b740:	6863      	ldr	r3, [r4, #4]
 800b742:	0136      	lsls	r6, r6, #4
 800b744:	fb09 f500 	mul.w	r5, r9, r0
 800b748:	009b      	lsls	r3, r3, #2
 800b74a:	013f      	lsls	r7, r7, #4
 800b74c:	3632      	adds	r6, #50	@ 0x32
 800b74e:	fbb5 f5f3 	udiv	r5, r5, r3
 800b752:	fbb6 f6f8 	udiv	r6, r6, r8
 800b756:	f006 06f0 	and.w	r6, r6, #240	@ 0xf0
 800b75a:	f7ff f84d 	bl	800a7f8 <HAL_RCC_GetPCLK1Freq>
 800b75e:	e7b7      	b.n	800b6d0 <UART_SetConfig+0x1c0>
 800b760:	40011000 	.word	0x40011000
 800b764:	40011400 	.word	0x40011400

0800b768 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
 800b768:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b76a:	4604      	mov	r4, r0
 800b76c:	460e      	mov	r6, r1
 800b76e:	4617      	mov	r7, r2
 800b770:	461d      	mov	r5, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800b772:	6822      	ldr	r2, [r4, #0]
 800b774:	6813      	ldr	r3, [r2, #0]
 800b776:	ea36 0303 	bics.w	r3, r6, r3
 800b77a:	d101      	bne.n	800b780 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 800b77c:	2000      	movs	r0, #0
 800b77e:	e014      	b.n	800b7aa <UART_WaitOnFlagUntilTimeout.constprop.0+0x42>
    if (Timeout != HAL_MAX_DELAY)
 800b780:	1c6b      	adds	r3, r5, #1
 800b782:	d0f7      	beq.n	800b774 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800b784:	b995      	cbnz	r5, 800b7ac <UART_WaitOnFlagUntilTimeout.constprop.0+0x44>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800b786:	6823      	ldr	r3, [r4, #0]
 800b788:	68da      	ldr	r2, [r3, #12]
 800b78a:	f422 72d0 	bic.w	r2, r2, #416	@ 0x1a0
 800b78e:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800b790:	695a      	ldr	r2, [r3, #20]
 800b792:	f022 0201 	bic.w	r2, r2, #1
 800b796:	615a      	str	r2, [r3, #20]
        huart->gState  = HAL_UART_STATE_READY;
 800b798:	2320      	movs	r3, #32
 800b79a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
        huart->RxState = HAL_UART_STATE_READY;
 800b79e:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
        __HAL_UNLOCK(huart);
 800b7a2:	2300      	movs	r3, #0
 800b7a4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800b7a8:	2003      	movs	r0, #3
}
 800b7aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800b7ac:	f7fd faba 	bl	8008d24 <HAL_GetTick>
 800b7b0:	1bc0      	subs	r0, r0, r7
 800b7b2:	4285      	cmp	r5, r0
 800b7b4:	d2dd      	bcs.n	800b772 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 800b7b6:	e7e6      	b.n	800b786 <UART_WaitOnFlagUntilTimeout.constprop.0+0x1e>

0800b7b8 <HAL_UART_MspInit>:
}
 800b7b8:	4770      	bx	lr

0800b7ba <HAL_UART_Init>:
{
 800b7ba:	b510      	push	{r4, lr}
  if (huart == NULL)
 800b7bc:	4604      	mov	r4, r0
 800b7be:	b340      	cbz	r0, 800b812 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 800b7c0:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800b7c4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800b7c8:	b91b      	cbnz	r3, 800b7d2 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 800b7ca:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    HAL_UART_MspInit(huart);
 800b7ce:	f7ff fff3 	bl	800b7b8 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800b7d2:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800b7d4:	2324      	movs	r3, #36	@ 0x24
 800b7d6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  __HAL_UART_DISABLE(huart);
 800b7da:	68d3      	ldr	r3, [r2, #12]
 800b7dc:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800b7e0:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800b7e2:	4620      	mov	r0, r4
 800b7e4:	f7ff fe94 	bl	800b510 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800b7e8:	6823      	ldr	r3, [r4, #0]
 800b7ea:	691a      	ldr	r2, [r3, #16]
 800b7ec:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800b7f0:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800b7f2:	695a      	ldr	r2, [r3, #20]
 800b7f4:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800b7f8:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 800b7fa:	68da      	ldr	r2, [r3, #12]
 800b7fc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800b800:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b802:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800b804:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b806:	63e0      	str	r0, [r4, #60]	@ 0x3c
  huart->gState = HAL_UART_STATE_READY;
 800b808:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  huart->RxState = HAL_UART_STATE_READY;
 800b80c:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
}
 800b810:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b812:	2001      	movs	r0, #1
 800b814:	e7fc      	b.n	800b810 <HAL_UART_Init+0x56>

0800b816 <HAL_UART_Transmit>:
{
 800b816:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b81a:	461f      	mov	r7, r3
  if (huart->gState == HAL_UART_STATE_READY)
 800b81c:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800b820:	2b20      	cmp	r3, #32
{
 800b822:	4604      	mov	r4, r0
 800b824:	460d      	mov	r5, r1
 800b826:	4690      	mov	r8, r2
  if (huart->gState == HAL_UART_STATE_READY)
 800b828:	d14f      	bne.n	800b8ca <HAL_UART_Transmit+0xb4>
    if ((pData == NULL) || (Size == 0U))
 800b82a:	2900      	cmp	r1, #0
 800b82c:	d04b      	beq.n	800b8c6 <HAL_UART_Transmit+0xb0>
 800b82e:	2a00      	cmp	r2, #0
 800b830:	d049      	beq.n	800b8c6 <HAL_UART_Transmit+0xb0>
    __HAL_LOCK(huart);
 800b832:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800b836:	2b01      	cmp	r3, #1
 800b838:	d047      	beq.n	800b8ca <HAL_UART_Transmit+0xb4>
 800b83a:	2301      	movs	r3, #1
 800b83c:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b840:	2300      	movs	r3, #0
 800b842:	63c3      	str	r3, [r0, #60]	@ 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800b844:	2321      	movs	r3, #33	@ 0x21
 800b846:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
    tickstart = HAL_GetTick();
 800b84a:	f7fd fa6b 	bl	8008d24 <HAL_GetTick>
    huart->TxXferSize = Size;
 800b84e:	f8a4 8024 	strh.w	r8, [r4, #36]	@ 0x24
    tickstart = HAL_GetTick();
 800b852:	4606      	mov	r6, r0
    huart->TxXferCount = Size;
 800b854:	f8a4 8026 	strh.w	r8, [r4, #38]	@ 0x26
    while (huart->TxXferCount > 0U)
 800b858:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800b85a:	b29b      	uxth	r3, r3
 800b85c:	b963      	cbnz	r3, 800b878 <HAL_UART_Transmit+0x62>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 800b85e:	463b      	mov	r3, r7
 800b860:	4632      	mov	r2, r6
 800b862:	2140      	movs	r1, #64	@ 0x40
 800b864:	4620      	mov	r0, r4
 800b866:	f7ff ff7f 	bl	800b768 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800b86a:	b9a8      	cbnz	r0, 800b898 <HAL_UART_Transmit+0x82>
    huart->gState = HAL_UART_STATE_READY;
 800b86c:	2320      	movs	r3, #32
 800b86e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
    __HAL_UNLOCK(huart);
 800b872:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
    return HAL_OK;
 800b876:	e010      	b.n	800b89a <HAL_UART_Transmit+0x84>
      huart->TxXferCount--;
 800b878:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800b87a:	3b01      	subs	r3, #1
 800b87c:	b29b      	uxth	r3, r3
 800b87e:	84e3      	strh	r3, [r4, #38]	@ 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800b880:	68a3      	ldr	r3, [r4, #8]
 800b882:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800b886:	4632      	mov	r2, r6
 800b888:	463b      	mov	r3, r7
 800b88a:	f04f 0180 	mov.w	r1, #128	@ 0x80
 800b88e:	4620      	mov	r0, r4
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800b890:	d110      	bne.n	800b8b4 <HAL_UART_Transmit+0x9e>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800b892:	f7ff ff69 	bl	800b768 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800b896:	b110      	cbz	r0, 800b89e <HAL_UART_Transmit+0x88>
          return HAL_TIMEOUT;
 800b898:	2003      	movs	r0, #3
}
 800b89a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 800b89e:	882b      	ldrh	r3, [r5, #0]
 800b8a0:	6822      	ldr	r2, [r4, #0]
 800b8a2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800b8a6:	6053      	str	r3, [r2, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 800b8a8:	6923      	ldr	r3, [r4, #16]
 800b8aa:	b90b      	cbnz	r3, 800b8b0 <HAL_UART_Transmit+0x9a>
          pData += 2U;
 800b8ac:	3502      	adds	r5, #2
 800b8ae:	e7d3      	b.n	800b858 <HAL_UART_Transmit+0x42>
          pData += 1U;
 800b8b0:	3501      	adds	r5, #1
 800b8b2:	e7d1      	b.n	800b858 <HAL_UART_Transmit+0x42>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800b8b4:	f7ff ff58 	bl	800b768 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800b8b8:	2800      	cmp	r0, #0
 800b8ba:	d1ed      	bne.n	800b898 <HAL_UART_Transmit+0x82>
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 800b8bc:	6823      	ldr	r3, [r4, #0]
 800b8be:	f815 2b01 	ldrb.w	r2, [r5], #1
 800b8c2:	605a      	str	r2, [r3, #4]
 800b8c4:	e7c8      	b.n	800b858 <HAL_UART_Transmit+0x42>
      return  HAL_ERROR;
 800b8c6:	2001      	movs	r0, #1
 800b8c8:	e7e7      	b.n	800b89a <HAL_UART_Transmit+0x84>
    __HAL_LOCK(huart);
 800b8ca:	2002      	movs	r0, #2
 800b8cc:	e7e5      	b.n	800b89a <HAL_UART_Transmit+0x84>

0800b8ce <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800b8ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b8d2:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 800b8d6:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 800b8da:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 800b8de:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 800b8e2:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800b8e6:	6809      	ldr	r1, [r1, #0]
 800b8e8:	ea43 0308 	orr.w	r3, r3, r8
 800b8ec:	b981      	cbnz	r1, 800b910 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b8ee:	ea43 030e 	orr.w	r3, r3, lr
 800b8f2:	4313      	orrs	r3, r2
 800b8f4:	ea43 030c 	orr.w	r3, r3, ip
 800b8f8:	433b      	orrs	r3, r7
 800b8fa:	6801      	ldr	r1, [r0, #0]
 800b8fc:	4333      	orrs	r3, r6
 800b8fe:	432b      	orrs	r3, r5
 800b900:	4323      	orrs	r3, r4
 800b902:	f36f 010e 	bfc	r1, #0, #15
 800b906:	430b      	orrs	r3, r1
 800b908:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800b90a:	2000      	movs	r0, #0
 800b90c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b910:	6801      	ldr	r1, [r0, #0]
 800b912:	ea43 030e 	orr.w	r3, r3, lr
 800b916:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 800b91a:	430b      	orrs	r3, r1
 800b91c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800b91e:	ea42 030c 	orr.w	r3, r2, ip
 800b922:	6841      	ldr	r1, [r0, #4]
 800b924:	433b      	orrs	r3, r7
 800b926:	4333      	orrs	r3, r6
 800b928:	432b      	orrs	r3, r5
 800b92a:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 800b92e:	4323      	orrs	r3, r4
 800b930:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800b934:	4313      	orrs	r3, r2
 800b936:	6043      	str	r3, [r0, #4]
 800b938:	e7e7      	b.n	800b90a <FMC_SDRAM_Init+0x3c>

0800b93a <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b93a:	68cb      	ldr	r3, [r1, #12]
 800b93c:	f103 3cff 	add.w	ip, r3, #4294967295
 800b940:	694b      	ldr	r3, [r1, #20]
{
 800b942:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b944:	684c      	ldr	r4, [r1, #4]
 800b946:	688f      	ldr	r7, [r1, #8]
 800b948:	690e      	ldr	r6, [r1, #16]
 800b94a:	698d      	ldr	r5, [r1, #24]
 800b94c:	6809      	ldr	r1, [r1, #0]
 800b94e:	3b01      	subs	r3, #1
 800b950:	051b      	lsls	r3, r3, #20
 800b952:	3c01      	subs	r4, #1
 800b954:	3f01      	subs	r7, #1
 800b956:	3e01      	subs	r6, #1
 800b958:	3d01      	subs	r5, #1
 800b95a:	0124      	lsls	r4, r4, #4
 800b95c:	023f      	lsls	r7, r7, #8
 800b95e:	0436      	lsls	r6, r6, #16
 800b960:	062d      	lsls	r5, r5, #24
 800b962:	3901      	subs	r1, #1
 800b964:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800b968:	b95a      	cbnz	r2, 800b982 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b96a:	430b      	orrs	r3, r1
 800b96c:	4323      	orrs	r3, r4
 800b96e:	6882      	ldr	r2, [r0, #8]
 800b970:	433b      	orrs	r3, r7
 800b972:	4333      	orrs	r3, r6
 800b974:	432b      	orrs	r3, r5
 800b976:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800b97a:	4313      	orrs	r3, r2
 800b97c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800b97e:	2000      	movs	r0, #0
 800b980:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b982:	6882      	ldr	r2, [r0, #8]
 800b984:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800b988:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 800b98c:	4313      	orrs	r3, r2
 800b98e:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800b990:	ea44 0307 	orr.w	r3, r4, r7
 800b994:	68c2      	ldr	r2, [r0, #12]
 800b996:	430b      	orrs	r3, r1
 800b998:	4333      	orrs	r3, r6
 800b99a:	432b      	orrs	r3, r5
 800b99c:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800b9a0:	4313      	orrs	r3, r2
 800b9a2:	60c3      	str	r3, [r0, #12]
 800b9a4:	e7eb      	b.n	800b97e <FMC_SDRAM_Timing_Init+0x44>

0800b9a6 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800b9a6:	b570      	push	{r4, r5, r6, lr}
 800b9a8:	4604      	mov	r4, r0
 800b9aa:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b9ac:	6902      	ldr	r2, [r0, #16]
 800b9ae:	e9d1 3000 	ldrd	r3, r0, [r1]
 800b9b2:	4303      	orrs	r3, r0
 800b9b4:	68c8      	ldr	r0, [r1, #12]
 800b9b6:	f36f 0215 	bfc	r2, #0, #22
 800b9ba:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800b9be:	4313      	orrs	r3, r2
 800b9c0:	688a      	ldr	r2, [r1, #8]
 800b9c2:	3a01      	subs	r2, #1
 800b9c4:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800b9c8:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800b9ca:	f7fd f9ab 	bl	8008d24 <HAL_GetTick>
 800b9ce:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800b9d0:	69a0      	ldr	r0, [r4, #24]
 800b9d2:	f010 0020 	ands.w	r0, r0, #32
 800b9d6:	d003      	beq.n	800b9e0 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800b9d8:	1c6b      	adds	r3, r5, #1
 800b9da:	d0f9      	beq.n	800b9d0 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b9dc:	b90d      	cbnz	r5, 800b9e2 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 800b9de:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 800b9e0:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b9e2:	f7fd f99f 	bl	8008d24 <HAL_GetTick>
 800b9e6:	1b80      	subs	r0, r0, r6
 800b9e8:	42a8      	cmp	r0, r5
 800b9ea:	d9f1      	bls.n	800b9d0 <FMC_SDRAM_SendCommand+0x2a>
 800b9ec:	e7f7      	b.n	800b9de <FMC_SDRAM_SendCommand+0x38>

0800b9ee <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b9ee:	6943      	ldr	r3, [r0, #20]
 800b9f0:	f36f 034d 	bfc	r3, #1, #13
 800b9f4:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 800b9f8:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 800b9fa:	2000      	movs	r0, #0
 800b9fc:	4770      	bx	lr

0800b9fe <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800b9fe:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800ba00:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ba04:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800ba06:	f001 fdf1 	bl	800d5ec <xTaskGetSchedulerState>
 800ba0a:	2801      	cmp	r0, #1
 800ba0c:	d003      	beq.n	800ba16 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800ba0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800ba12:	f000 bbdf 	b.w	800c1d4 <xPortSysTickHandler>
}
 800ba16:	bd08      	pop	{r3, pc}

0800ba18 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ba18:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800ba1c:	b92b      	cbnz	r3, 800ba2a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800ba1e:	4b06      	ldr	r3, [pc, #24]	@ (800ba38 <osKernelInitialize+0x20>)
 800ba20:	6818      	ldr	r0, [r3, #0]
 800ba22:	b928      	cbnz	r0, 800ba30 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800ba24:	2201      	movs	r2, #1
 800ba26:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800ba28:	4770      	bx	lr
    stat = osErrorISR;
 800ba2a:	f06f 0005 	mvn.w	r0, #5
 800ba2e:	4770      	bx	lr
    } else {
      stat = osError;
 800ba30:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800ba34:	4770      	bx	lr
 800ba36:	bf00      	nop
 800ba38:	200038c0 	.word	0x200038c0

0800ba3c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800ba3c:	b510      	push	{r4, lr}
 800ba3e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ba42:	b95c      	cbnz	r4, 800ba5c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800ba44:	4b08      	ldr	r3, [pc, #32]	@ (800ba68 <osKernelStart+0x2c>)
 800ba46:	681a      	ldr	r2, [r3, #0]
 800ba48:	2a01      	cmp	r2, #1
 800ba4a:	d10a      	bne.n	800ba62 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ba4c:	4a07      	ldr	r2, [pc, #28]	@ (800ba6c <osKernelStart+0x30>)
 800ba4e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800ba50:	2202      	movs	r2, #2
 800ba52:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800ba54:	f001 fb48 	bl	800d0e8 <vTaskStartScheduler>
      stat = osOK;
 800ba58:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800ba5a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ba5c:	f06f 0005 	mvn.w	r0, #5
 800ba60:	e7fb      	b.n	800ba5a <osKernelStart+0x1e>
      stat = osError;
 800ba62:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800ba66:	e7f8      	b.n	800ba5a <osKernelStart+0x1e>
 800ba68:	200038c0 	.word	0x200038c0
 800ba6c:	e000ed00 	.word	0xe000ed00

0800ba70 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ba70:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba72:	b087      	sub	sp, #28
 800ba74:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800ba76:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ba78:	460b      	mov	r3, r1
  hTask = NULL;
 800ba7a:	9205      	str	r2, [sp, #20]
 800ba7c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800ba80:	b9fa      	cbnz	r2, 800bac2 <osThreadNew+0x52>
 800ba82:	b1f0      	cbz	r0, 800bac2 <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800ba84:	b354      	cbz	r4, 800badc <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800ba86:	69a5      	ldr	r5, [r4, #24]
 800ba88:	b125      	cbz	r5, 800ba94 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800ba8a:	1e69      	subs	r1, r5, #1
 800ba8c:	2937      	cmp	r1, #55	@ 0x37
 800ba8e:	d902      	bls.n	800ba96 <osThreadNew+0x26>
        return (NULL);
 800ba90:	2000      	movs	r0, #0
 800ba92:	e017      	b.n	800bac4 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 800ba94:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800ba96:	6862      	ldr	r2, [r4, #4]
 800ba98:	07d2      	lsls	r2, r2, #31
 800ba9a:	d4f9      	bmi.n	800ba90 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 800ba9c:	6966      	ldr	r6, [r4, #20]
 800ba9e:	b19e      	cbz	r6, 800bac8 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800baa0:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800baa2:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 800baa6:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800baa8:	b187      	cbz	r7, 800bacc <osThreadNew+0x5c>
 800baaa:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 800baae:	d908      	bls.n	800bac2 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800bab0:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800bab2:	b134      	cbz	r4, 800bac2 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800bab4:	b12e      	cbz	r6, 800bac2 <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800bab6:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800baba:	9500      	str	r5, [sp, #0]
 800babc:	f001 faad 	bl	800d01a <xTaskCreateStatic>
 800bac0:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800bac2:	9805      	ldr	r0, [sp, #20]
}
 800bac4:	b007      	add	sp, #28
 800bac6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800bac8:	2280      	movs	r2, #128	@ 0x80
 800baca:	e7ea      	b.n	800baa2 <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800bacc:	f1bc 0f00 	cmp.w	ip, #0
 800bad0:	d1f7      	bne.n	800bac2 <osThreadNew+0x52>
 800bad2:	6924      	ldr	r4, [r4, #16]
 800bad4:	2c00      	cmp	r4, #0
 800bad6:	d1f4      	bne.n	800bac2 <osThreadNew+0x52>
 800bad8:	460c      	mov	r4, r1
 800bada:	e001      	b.n	800bae0 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 800badc:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 800bade:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800bae0:	a905      	add	r1, sp, #20
 800bae2:	e9cd 5100 	strd	r5, r1, [sp]
 800bae6:	b292      	uxth	r2, r2
 800bae8:	4621      	mov	r1, r4
 800baea:	f001 face 	bl	800d08a <xTaskCreate>
 800baee:	2801      	cmp	r0, #1
            hTask = NULL;
 800baf0:	bf1c      	itt	ne
 800baf2:	2300      	movne	r3, #0
 800baf4:	9305      	strne	r3, [sp, #20]
 800baf6:	e7e4      	b.n	800bac2 <osThreadNew+0x52>

0800baf8 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800baf8:	b508      	push	{r3, lr}
 800bafa:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800bafe:	b922      	cbnz	r2, 800bb0a <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800bb00:	b108      	cbz	r0, 800bb06 <osDelay+0xe>
      vTaskDelay(ticks);
 800bb02:	f001 fc4f 	bl	800d3a4 <vTaskDelay>
    stat = osOK;
 800bb06:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800bb08:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 800bb0a:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 800bb0e:	e7fb      	b.n	800bb08 <osDelay+0x10>

0800bb10 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800bb10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bb12:	4604      	mov	r4, r0
 800bb14:	460e      	mov	r6, r1
 800bb16:	4615      	mov	r5, r2
 800bb18:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800bb1c:	b942      	cbnz	r2, 800bb30 <osSemaphoreNew+0x20>
 800bb1e:	b138      	cbz	r0, 800bb30 <osSemaphoreNew+0x20>
 800bb20:	4288      	cmp	r0, r1
 800bb22:	d305      	bcc.n	800bb30 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800bb24:	b155      	cbz	r5, 800bb3c <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800bb26:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800bb2a:	b12b      	cbz	r3, 800bb38 <osSemaphoreNew+0x28>
 800bb2c:	2f4f      	cmp	r7, #79	@ 0x4f
 800bb2e:	d822      	bhi.n	800bb76 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 800bb30:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800bb32:	4620      	mov	r0, r4
 800bb34:	b003      	add	sp, #12
 800bb36:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800bb38:	2f00      	cmp	r7, #0
 800bb3a:	d1f9      	bne.n	800bb30 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 800bb3c:	2c01      	cmp	r4, #1
 800bb3e:	d00c      	beq.n	800bb5a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800bb40:	4620      	mov	r0, r4
 800bb42:	4631      	mov	r1, r6
 800bb44:	f000 fd7e 	bl	800c644 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800bb48:	4604      	mov	r4, r0
 800bb4a:	2800      	cmp	r0, #0
 800bb4c:	d0f0      	beq.n	800bb30 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 800bb4e:	b985      	cbnz	r5, 800bb72 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 800bb50:	4629      	mov	r1, r5
 800bb52:	4620      	mov	r0, r4
 800bb54:	f001 f89c 	bl	800cc90 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800bb58:	e7eb      	b.n	800bb32 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 800bb5a:	2203      	movs	r2, #3
 800bb5c:	2100      	movs	r1, #0
 800bb5e:	2001      	movs	r0, #1
 800bb60:	f000 fd27 	bl	800c5b2 <xQueueGenericCreate>
 800bb64:	e00e      	b.n	800bb84 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800bb66:	461a      	mov	r2, r3
 800bb68:	f000 fd4a 	bl	800c600 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800bb6c:	4604      	mov	r4, r0
 800bb6e:	2800      	cmp	r0, #0
 800bb70:	d0de      	beq.n	800bb30 <osSemaphoreNew+0x20>
          name = attr->name;
 800bb72:	682d      	ldr	r5, [r5, #0]
 800bb74:	e7ec      	b.n	800bb50 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 800bb76:	2801      	cmp	r0, #1
 800bb78:	d1f5      	bne.n	800bb66 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800bb7a:	2103      	movs	r1, #3
 800bb7c:	9100      	str	r1, [sp, #0]
 800bb7e:	4611      	mov	r1, r2
 800bb80:	f000 fcc9 	bl	800c516 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800bb84:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800bb86:	2800      	cmp	r0, #0
 800bb88:	d0d2      	beq.n	800bb30 <osSemaphoreNew+0x20>
 800bb8a:	2e00      	cmp	r6, #0
 800bb8c:	d0df      	beq.n	800bb4e <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800bb8e:	2300      	movs	r3, #0
 800bb90:	461a      	mov	r2, r3
 800bb92:	4619      	mov	r1, r3
 800bb94:	f000 fd74 	bl	800c680 <xQueueGenericSend>
 800bb98:	2801      	cmp	r0, #1
 800bb9a:	d0d8      	beq.n	800bb4e <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 800bb9c:	4620      	mov	r0, r4
 800bb9e:	f001 f8a1 	bl	800cce4 <vQueueDelete>
      if (hSemaphore != NULL) {
 800bba2:	e7c5      	b.n	800bb30 <osSemaphoreNew+0x20>

0800bba4 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800bba4:	b513      	push	{r0, r1, r4, lr}
 800bba6:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800bba8:	b328      	cbz	r0, 800bbf6 <osSemaphoreAcquire+0x52>
 800bbaa:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800bbae:	b1cb      	cbz	r3, 800bbe4 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800bbb0:	bb09      	cbnz	r1, 800bbf6 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800bbb2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800bbb4:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800bbb6:	f001 f81e 	bl	800cbf6 <xQueueReceiveFromISR>
 800bbba:	2801      	cmp	r0, #1
 800bbbc:	d003      	beq.n	800bbc6 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 800bbbe:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800bbc2:	b002      	add	sp, #8
 800bbc4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800bbc6:	9b01      	ldr	r3, [sp, #4]
 800bbc8:	b90b      	cbnz	r3, 800bbce <osSemaphoreAcquire+0x2a>
  stat = osOK;
 800bbca:	2000      	movs	r0, #0
 800bbcc:	e7f9      	b.n	800bbc2 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 800bbce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800bbd2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800bbd6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800bbda:	f3bf 8f4f 	dsb	sy
 800bbde:	f3bf 8f6f 	isb	sy
 800bbe2:	e7f2      	b.n	800bbca <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800bbe4:	f000 ff4a 	bl	800ca7c <xQueueSemaphoreTake>
 800bbe8:	2801      	cmp	r0, #1
 800bbea:	d0ee      	beq.n	800bbca <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 800bbec:	2c00      	cmp	r4, #0
 800bbee:	d0e6      	beq.n	800bbbe <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 800bbf0:	f06f 0001 	mvn.w	r0, #1
 800bbf4:	e7e5      	b.n	800bbc2 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800bbf6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800bbfa:	e7e2      	b.n	800bbc2 <osSemaphoreAcquire+0x1e>

0800bbfc <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800bbfc:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800bbfe:	b318      	cbz	r0, 800bc48 <osSemaphoreRelease+0x4c>
 800bc00:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800bc04:	b1cb      	cbz	r3, 800bc3a <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800bc06:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800bc08:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800bc0a:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800bc0c:	f000 fe47 	bl	800c89e <xQueueGiveFromISR>
 800bc10:	2801      	cmp	r0, #1
 800bc12:	d004      	beq.n	800bc1e <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800bc14:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 800bc18:	b003      	add	sp, #12
 800bc1a:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 800bc1e:	9b01      	ldr	r3, [sp, #4]
 800bc20:	b14b      	cbz	r3, 800bc36 <osSemaphoreRelease+0x3a>
 800bc22:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800bc26:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800bc2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800bc2e:	f3bf 8f4f 	dsb	sy
 800bc32:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800bc36:	2000      	movs	r0, #0
 800bc38:	e7ee      	b.n	800bc18 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800bc3a:	461a      	mov	r2, r3
 800bc3c:	4619      	mov	r1, r3
 800bc3e:	f000 fd1f 	bl	800c680 <xQueueGenericSend>
 800bc42:	2801      	cmp	r0, #1
 800bc44:	d0f7      	beq.n	800bc36 <osSemaphoreRelease+0x3a>
 800bc46:	e7e5      	b.n	800bc14 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 800bc48:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800bc4c:	e7e4      	b.n	800bc18 <osSemaphoreRelease+0x1c>

0800bc4e <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800bc4e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bc50:	4605      	mov	r5, r0
 800bc52:	460e      	mov	r6, r1
 800bc54:	4614      	mov	r4, r2
 800bc56:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800bc5a:	b11f      	cbz	r7, 800bc64 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800bc5c:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800bc5e:	4628      	mov	r0, r5
 800bc60:	b003      	add	sp, #12
 800bc62:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800bc64:	2800      	cmp	r0, #0
 800bc66:	d0f9      	beq.n	800bc5c <osMessageQueueNew+0xe>
 800bc68:	2900      	cmp	r1, #0
 800bc6a:	d0f7      	beq.n	800bc5c <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800bc6c:	b1da      	cbz	r2, 800bca6 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800bc6e:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800bc72:	b183      	cbz	r3, 800bc96 <osMessageQueueNew+0x48>
 800bc74:	2a4f      	cmp	r2, #79	@ 0x4f
 800bc76:	d9f1      	bls.n	800bc5c <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800bc78:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800bc7a:	2a00      	cmp	r2, #0
 800bc7c:	d0ee      	beq.n	800bc5c <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800bc7e:	6966      	ldr	r6, [r4, #20]
 800bc80:	434d      	muls	r5, r1
 800bc82:	42ae      	cmp	r6, r5
 800bc84:	d3ea      	bcc.n	800bc5c <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800bc86:	9700      	str	r7, [sp, #0]
 800bc88:	f000 fc45 	bl	800c516 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800bc8c:	4605      	mov	r5, r0
 800bc8e:	2800      	cmp	r0, #0
 800bc90:	d0e4      	beq.n	800bc5c <osMessageQueueNew+0xe>
        name = attr->name;
 800bc92:	6824      	ldr	r4, [r4, #0]
 800bc94:	e011      	b.n	800bcba <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800bc96:	2a00      	cmp	r2, #0
 800bc98:	d1e0      	bne.n	800bc5c <osMessageQueueNew+0xe>
 800bc9a:	6923      	ldr	r3, [r4, #16]
 800bc9c:	2b00      	cmp	r3, #0
 800bc9e:	d1dd      	bne.n	800bc5c <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800bca0:	6963      	ldr	r3, [r4, #20]
 800bca2:	2b00      	cmp	r3, #0
 800bca4:	d1da      	bne.n	800bc5c <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800bca6:	4628      	mov	r0, r5
 800bca8:	2200      	movs	r2, #0
 800bcaa:	4631      	mov	r1, r6
 800bcac:	f000 fc81 	bl	800c5b2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800bcb0:	4605      	mov	r5, r0
 800bcb2:	2800      	cmp	r0, #0
 800bcb4:	d0d2      	beq.n	800bc5c <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800bcb6:	2c00      	cmp	r4, #0
 800bcb8:	d1eb      	bne.n	800bc92 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800bcba:	4621      	mov	r1, r4
 800bcbc:	4628      	mov	r0, r5
 800bcbe:	f000 ffe7 	bl	800cc90 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800bcc2:	e7cc      	b.n	800bc5e <osMessageQueueNew+0x10>

0800bcc4 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800bcc4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bcc6:	461c      	mov	r4, r3
 800bcc8:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800bccc:	b1de      	cbz	r6, 800bd06 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800bcce:	b338      	cbz	r0, 800bd20 <osMessageQueuePut+0x5c>
 800bcd0:	b331      	cbz	r1, 800bd20 <osMessageQueuePut+0x5c>
 800bcd2:	bb2b      	cbnz	r3, 800bd20 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800bcd4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800bcd6:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800bcd8:	f000 fd84 	bl	800c7e4 <xQueueGenericSendFromISR>
 800bcdc:	2801      	cmp	r0, #1
 800bcde:	d003      	beq.n	800bce8 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 800bce0:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800bce4:	b002      	add	sp, #8
 800bce6:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800bce8:	9b01      	ldr	r3, [sp, #4]
 800bcea:	b90b      	cbnz	r3, 800bcf0 <osMessageQueuePut+0x2c>
  stat = osOK;
 800bcec:	2000      	movs	r0, #0
 800bcee:	e7f9      	b.n	800bce4 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 800bcf0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800bcf4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800bcf8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800bcfc:	f3bf 8f4f 	dsb	sy
 800bd00:	f3bf 8f6f 	isb	sy
 800bd04:	e7f2      	b.n	800bcec <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800bd06:	b158      	cbz	r0, 800bd20 <osMessageQueuePut+0x5c>
 800bd08:	b151      	cbz	r1, 800bd20 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800bd0a:	4633      	mov	r3, r6
 800bd0c:	4622      	mov	r2, r4
 800bd0e:	f000 fcb7 	bl	800c680 <xQueueGenericSend>
 800bd12:	2801      	cmp	r0, #1
 800bd14:	d0ea      	beq.n	800bcec <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800bd16:	2c00      	cmp	r4, #0
 800bd18:	d0e2      	beq.n	800bce0 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 800bd1a:	f06f 0001 	mvn.w	r0, #1
 800bd1e:	e7e1      	b.n	800bce4 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 800bd20:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800bd24:	e7de      	b.n	800bce4 <osMessageQueuePut+0x20>

0800bd26 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800bd26:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bd28:	461c      	mov	r4, r3
 800bd2a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800bd2e:	b1db      	cbz	r3, 800bd68 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800bd30:	b330      	cbz	r0, 800bd80 <osMessageQueueGet+0x5a>
 800bd32:	b329      	cbz	r1, 800bd80 <osMessageQueueGet+0x5a>
 800bd34:	bb24      	cbnz	r4, 800bd80 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800bd36:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800bd38:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800bd3a:	f000 ff5c 	bl	800cbf6 <xQueueReceiveFromISR>
 800bd3e:	2801      	cmp	r0, #1
 800bd40:	d003      	beq.n	800bd4a <osMessageQueueGet+0x24>
        stat = osErrorResource;
 800bd42:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800bd46:	b003      	add	sp, #12
 800bd48:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800bd4a:	9b01      	ldr	r3, [sp, #4]
 800bd4c:	b90b      	cbnz	r3, 800bd52 <osMessageQueueGet+0x2c>
  stat = osOK;
 800bd4e:	2000      	movs	r0, #0
 800bd50:	e7f9      	b.n	800bd46 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 800bd52:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800bd56:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800bd5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800bd5e:	f3bf 8f4f 	dsb	sy
 800bd62:	f3bf 8f6f 	isb	sy
 800bd66:	e7f2      	b.n	800bd4e <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800bd68:	b150      	cbz	r0, 800bd80 <osMessageQueueGet+0x5a>
 800bd6a:	b149      	cbz	r1, 800bd80 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800bd6c:	4622      	mov	r2, r4
 800bd6e:	f000 fde7 	bl	800c940 <xQueueReceive>
 800bd72:	2801      	cmp	r0, #1
 800bd74:	d0eb      	beq.n	800bd4e <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 800bd76:	2c00      	cmp	r4, #0
 800bd78:	d0e3      	beq.n	800bd42 <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 800bd7a:	f06f 0001 	mvn.w	r0, #1
 800bd7e:	e7e2      	b.n	800bd46 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 800bd80:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800bd84:	e7df      	b.n	800bd46 <osMessageQueueGet+0x20>
	...

0800bd88 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800bd88:	4b03      	ldr	r3, [pc, #12]	@ (800bd98 <vApplicationGetIdleTaskMemory+0x10>)
 800bd8a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800bd8c:	4b03      	ldr	r3, [pc, #12]	@ (800bd9c <vApplicationGetIdleTaskMemory+0x14>)
 800bd8e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800bd90:	2380      	movs	r3, #128	@ 0x80
 800bd92:	6013      	str	r3, [r2, #0]
}
 800bd94:	4770      	bx	lr
 800bd96:	bf00      	nop
 800bd98:	20003860 	.word	0x20003860
 800bd9c:	20003660 	.word	0x20003660

0800bda0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800bda0:	4b03      	ldr	r3, [pc, #12]	@ (800bdb0 <vApplicationGetTimerTaskMemory+0x10>)
 800bda2:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800bda4:	4b03      	ldr	r3, [pc, #12]	@ (800bdb4 <vApplicationGetTimerTaskMemory+0x14>)
 800bda6:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800bda8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800bdac:	6013      	str	r3, [r2, #0]
}
 800bdae:	4770      	bx	lr
 800bdb0:	20003600 	.word	0x20003600
 800bdb4:	20003200 	.word	0x20003200

0800bdb8 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800bdb8:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800bdba:	4b10      	ldr	r3, [pc, #64]	@ (800bdfc <prvInsertBlockIntoFreeList+0x44>)
 800bdbc:	461a      	mov	r2, r3
 800bdbe:	681b      	ldr	r3, [r3, #0]
 800bdc0:	4283      	cmp	r3, r0
 800bdc2:	d3fb      	bcc.n	800bdbc <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800bdc4:	6854      	ldr	r4, [r2, #4]
 800bdc6:	1911      	adds	r1, r2, r4
 800bdc8:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bdca:	bf01      	itttt	eq
 800bdcc:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 800bdce:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bdd0:	1909      	addeq	r1, r1, r4
 800bdd2:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bdd4:	6844      	ldr	r4, [r0, #4]
 800bdd6:	1901      	adds	r1, r0, r4
 800bdd8:	428b      	cmp	r3, r1
 800bdda:	d10c      	bne.n	800bdf6 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800bddc:	4908      	ldr	r1, [pc, #32]	@ (800be00 <prvInsertBlockIntoFreeList+0x48>)
 800bdde:	6809      	ldr	r1, [r1, #0]
 800bde0:	428b      	cmp	r3, r1
 800bde2:	d003      	beq.n	800bdec <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800bde4:	6859      	ldr	r1, [r3, #4]
 800bde6:	4421      	add	r1, r4
 800bde8:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bdea:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800bdec:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800bdee:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800bdf0:	bf18      	it	ne
 800bdf2:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800bdf4:	bd10      	pop	{r4, pc}
 800bdf6:	4619      	mov	r1, r3
 800bdf8:	e7f8      	b.n	800bdec <prvInsertBlockIntoFreeList+0x34>
 800bdfa:	bf00      	nop
 800bdfc:	200038dc 	.word	0x200038dc
 800be00:	200038d8 	.word	0x200038d8

0800be04 <pvPortMalloc>:
{
 800be04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be08:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800be0a:	f001 f9b3 	bl	800d174 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800be0e:	4942      	ldr	r1, [pc, #264]	@ (800bf18 <pvPortMalloc+0x114>)
 800be10:	4d42      	ldr	r5, [pc, #264]	@ (800bf1c <pvPortMalloc+0x118>)
 800be12:	680b      	ldr	r3, [r1, #0]
 800be14:	bb0b      	cbnz	r3, 800be5a <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800be16:	4a42      	ldr	r2, [pc, #264]	@ (800bf20 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800be18:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800be1a:	bf1f      	itttt	ne
 800be1c:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800be1e:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800be22:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800be26:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800be28:	bf0c      	ite	eq
 800be2a:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800be2e:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800be30:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800be32:	4e3c      	ldr	r6, [pc, #240]	@ (800bf24 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800be34:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800be36:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 800be3a:	2000      	movs	r0, #0
 800be3c:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800be3e:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800be40:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800be44:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800be46:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 800be4a:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800be4c:	4b36      	ldr	r3, [pc, #216]	@ (800bf28 <pvPortMalloc+0x124>)
 800be4e:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800be50:	4b36      	ldr	r3, [pc, #216]	@ (800bf2c <pvPortMalloc+0x128>)
 800be52:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800be54:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800be58:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800be5a:	682e      	ldr	r6, [r5, #0]
 800be5c:	4226      	tst	r6, r4
 800be5e:	d155      	bne.n	800bf0c <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800be60:	2c00      	cmp	r4, #0
 800be62:	d046      	beq.n	800bef2 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800be64:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800be68:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800be6a:	bf1c      	itt	ne
 800be6c:	f023 0307 	bicne.w	r3, r3, #7
 800be70:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800be72:	2b00      	cmp	r3, #0
 800be74:	d04a      	beq.n	800bf0c <pvPortMalloc+0x108>
 800be76:	4f2d      	ldr	r7, [pc, #180]	@ (800bf2c <pvPortMalloc+0x128>)
 800be78:	683c      	ldr	r4, [r7, #0]
 800be7a:	429c      	cmp	r4, r3
 800be7c:	d346      	bcc.n	800bf0c <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800be7e:	4a29      	ldr	r2, [pc, #164]	@ (800bf24 <pvPortMalloc+0x120>)
 800be80:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800be82:	6868      	ldr	r0, [r5, #4]
 800be84:	4298      	cmp	r0, r3
 800be86:	d204      	bcs.n	800be92 <pvPortMalloc+0x8e>
 800be88:	f8d5 c000 	ldr.w	ip, [r5]
 800be8c:	f1bc 0f00 	cmp.w	ip, #0
 800be90:	d115      	bne.n	800bebe <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800be92:	6809      	ldr	r1, [r1, #0]
 800be94:	42a9      	cmp	r1, r5
 800be96:	d039      	beq.n	800bf0c <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800be98:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800be9a:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800be9e:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800bea0:	1ac2      	subs	r2, r0, r3
 800bea2:	2a10      	cmp	r2, #16
 800bea4:	d912      	bls.n	800becc <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800bea6:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800bea8:	0741      	lsls	r1, r0, #29
 800beaa:	d00b      	beq.n	800bec4 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800beac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800beb0:	f383 8811 	msr	BASEPRI, r3
 800beb4:	f3bf 8f6f 	isb	sy
 800beb8:	f3bf 8f4f 	dsb	sy
 800bebc:	e7fe      	b.n	800bebc <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 800bebe:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 800bec0:	4665      	mov	r5, ip
 800bec2:	e7de      	b.n	800be82 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800bec4:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800bec6:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800bec8:	f7ff ff76 	bl	800bdb8 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800becc:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bece:	4916      	ldr	r1, [pc, #88]	@ (800bf28 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bed0:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800bed2:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 800bed4:	4a16      	ldr	r2, [pc, #88]	@ (800bf30 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bed6:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bed8:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 800beda:	2300      	movs	r3, #0
 800bedc:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800bede:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800bee0:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bee2:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 800bee4:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800bee8:	bf38      	it	cc
 800beea:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 800beec:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800beee:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800bef2:	f001 f9e3 	bl	800d2bc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800bef6:	0763      	lsls	r3, r4, #29
 800bef8:	d00a      	beq.n	800bf10 <pvPortMalloc+0x10c>
 800befa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800befe:	f383 8811 	msr	BASEPRI, r3
 800bf02:	f3bf 8f6f 	isb	sy
 800bf06:	f3bf 8f4f 	dsb	sy
 800bf0a:	e7fe      	b.n	800bf0a <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800bf0c:	2400      	movs	r4, #0
 800bf0e:	e7f0      	b.n	800bef2 <pvPortMalloc+0xee>
}
 800bf10:	4620      	mov	r0, r4
 800bf12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bf16:	bf00      	nop
 800bf18:	200038d8 	.word	0x200038d8
 800bf1c:	200038c4 	.word	0x200038c4
 800bf20:	200038e4 	.word	0x200038e4
 800bf24:	200038dc 	.word	0x200038dc
 800bf28:	200038d0 	.word	0x200038d0
 800bf2c:	200038d4 	.word	0x200038d4
 800bf30:	200038cc 	.word	0x200038cc

0800bf34 <vPortFree>:
{
 800bf34:	b510      	push	{r4, lr}
	if( pv != NULL )
 800bf36:	4604      	mov	r4, r0
 800bf38:	b390      	cbz	r0, 800bfa0 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800bf3a:	4a1a      	ldr	r2, [pc, #104]	@ (800bfa4 <vPortFree+0x70>)
 800bf3c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800bf40:	6812      	ldr	r2, [r2, #0]
 800bf42:	4213      	tst	r3, r2
 800bf44:	d108      	bne.n	800bf58 <vPortFree+0x24>
 800bf46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bf4a:	f383 8811 	msr	BASEPRI, r3
 800bf4e:	f3bf 8f6f 	isb	sy
 800bf52:	f3bf 8f4f 	dsb	sy
 800bf56:	e7fe      	b.n	800bf56 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800bf58:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800bf5c:	b141      	cbz	r1, 800bf70 <vPortFree+0x3c>
 800bf5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bf62:	f383 8811 	msr	BASEPRI, r3
 800bf66:	f3bf 8f6f 	isb	sy
 800bf6a:	f3bf 8f4f 	dsb	sy
 800bf6e:	e7fe      	b.n	800bf6e <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800bf70:	ea23 0302 	bic.w	r3, r3, r2
 800bf74:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800bf78:	f001 f8fc 	bl	800d174 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800bf7c:	4a0a      	ldr	r2, [pc, #40]	@ (800bfa8 <vPortFree+0x74>)
 800bf7e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800bf82:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800bf84:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800bf88:	440b      	add	r3, r1
 800bf8a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800bf8c:	f7ff ff14 	bl	800bdb8 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800bf90:	4a06      	ldr	r2, [pc, #24]	@ (800bfac <vPortFree+0x78>)
 800bf92:	6813      	ldr	r3, [r2, #0]
}
 800bf94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800bf98:	3301      	adds	r3, #1
 800bf9a:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800bf9c:	f001 b98e 	b.w	800d2bc <xTaskResumeAll>
}
 800bfa0:	bd10      	pop	{r4, pc}
 800bfa2:	bf00      	nop
 800bfa4:	200038c4 	.word	0x200038c4
 800bfa8:	200038d4 	.word	0x200038d4
 800bfac:	200038c8 	.word	0x200038c8

0800bfb0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bfb0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800bfb4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bfb8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bfbc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bfbe:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800bfc0:	2300      	movs	r3, #0
 800bfc2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800bfc4:	4770      	bx	lr

0800bfc6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800bfc6:	2300      	movs	r3, #0
 800bfc8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800bfca:	4770      	bx	lr

0800bfcc <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800bfcc:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800bfce:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800bfd0:	689a      	ldr	r2, [r3, #8]
 800bfd2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800bfd4:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800bfd6:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800bfd8:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800bfda:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800bfdc:	3301      	adds	r3, #1
 800bfde:	6003      	str	r3, [r0, #0]
}
 800bfe0:	4770      	bx	lr

0800bfe2 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800bfe2:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800bfe4:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800bfe6:	1c63      	adds	r3, r4, #1
 800bfe8:	d10a      	bne.n	800c000 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800bfea:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800bfec:	685a      	ldr	r2, [r3, #4]
 800bfee:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800bff0:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800bff2:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800bff4:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800bff6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800bff8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800bffa:	3301      	adds	r3, #1
 800bffc:	6003      	str	r3, [r0, #0]
}
 800bffe:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800c000:	f100 0208 	add.w	r2, r0, #8
 800c004:	4613      	mov	r3, r2
 800c006:	6852      	ldr	r2, [r2, #4]
 800c008:	6815      	ldr	r5, [r2, #0]
 800c00a:	42a5      	cmp	r5, r4
 800c00c:	d9fa      	bls.n	800c004 <vListInsert+0x22>
 800c00e:	e7ed      	b.n	800bfec <vListInsert+0xa>

0800c010 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800c010:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800c014:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800c016:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800c018:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800c01a:	6859      	ldr	r1, [r3, #4]
 800c01c:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800c01e:	bf08      	it	eq
 800c020:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800c022:	2200      	movs	r2, #0
 800c024:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800c026:	681a      	ldr	r2, [r3, #0]
 800c028:	3a01      	subs	r2, #1
 800c02a:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800c02c:	6818      	ldr	r0, [r3, #0]
}
 800c02e:	4770      	bx	lr

0800c030 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800c030:	4808      	ldr	r0, [pc, #32]	@ (800c054 <prvPortStartFirstTask+0x24>)
 800c032:	6800      	ldr	r0, [r0, #0]
 800c034:	6800      	ldr	r0, [r0, #0]
 800c036:	f380 8808 	msr	MSP, r0
 800c03a:	f04f 0000 	mov.w	r0, #0
 800c03e:	f380 8814 	msr	CONTROL, r0
 800c042:	b662      	cpsie	i
 800c044:	b661      	cpsie	f
 800c046:	f3bf 8f4f 	dsb	sy
 800c04a:	f3bf 8f6f 	isb	sy
 800c04e:	df00      	svc	0
 800c050:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800c052:	0000      	.short	0x0000
 800c054:	e000ed08 	.word	0xe000ed08

0800c058 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800c058:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800c068 <vPortEnableVFP+0x10>
 800c05c:	6801      	ldr	r1, [r0, #0]
 800c05e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800c062:	6001      	str	r1, [r0, #0]
 800c064:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800c066:	0000      	.short	0x0000
 800c068:	e000ed88 	.word	0xe000ed88

0800c06c <prvTaskExitError>:
{
 800c06c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800c06e:	2300      	movs	r3, #0
 800c070:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800c072:	4b0d      	ldr	r3, [pc, #52]	@ (800c0a8 <prvTaskExitError+0x3c>)
 800c074:	681b      	ldr	r3, [r3, #0]
 800c076:	3301      	adds	r3, #1
 800c078:	d008      	beq.n	800c08c <prvTaskExitError+0x20>
 800c07a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c07e:	f383 8811 	msr	BASEPRI, r3
 800c082:	f3bf 8f6f 	isb	sy
 800c086:	f3bf 8f4f 	dsb	sy
 800c08a:	e7fe      	b.n	800c08a <prvTaskExitError+0x1e>
 800c08c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c090:	f383 8811 	msr	BASEPRI, r3
 800c094:	f3bf 8f6f 	isb	sy
 800c098:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800c09c:	9b01      	ldr	r3, [sp, #4]
 800c09e:	2b00      	cmp	r3, #0
 800c0a0:	d0fc      	beq.n	800c09c <prvTaskExitError+0x30>
}
 800c0a2:	b002      	add	sp, #8
 800c0a4:	4770      	bx	lr
 800c0a6:	bf00      	nop
 800c0a8:	20000080 	.word	0x20000080

0800c0ac <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800c0ac:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800c0b0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800c0b4:	4b07      	ldr	r3, [pc, #28]	@ (800c0d4 <pxPortInitialiseStack+0x28>)
 800c0b6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800c0ba:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800c0be:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800c0c2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800c0c6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800c0ca:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800c0ce:	3844      	subs	r0, #68	@ 0x44
 800c0d0:	4770      	bx	lr
 800c0d2:	bf00      	nop
 800c0d4:	0800c06d 	.word	0x0800c06d
	...

0800c0e0 <SVC_Handler>:
	__asm volatile (
 800c0e0:	4b07      	ldr	r3, [pc, #28]	@ (800c100 <pxCurrentTCBConst2>)
 800c0e2:	6819      	ldr	r1, [r3, #0]
 800c0e4:	6808      	ldr	r0, [r1, #0]
 800c0e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0ea:	f380 8809 	msr	PSP, r0
 800c0ee:	f3bf 8f6f 	isb	sy
 800c0f2:	f04f 0000 	mov.w	r0, #0
 800c0f6:	f380 8811 	msr	BASEPRI, r0
 800c0fa:	4770      	bx	lr
 800c0fc:	f3af 8000 	nop.w

0800c100 <pxCurrentTCBConst2>:
 800c100:	20013e24 	.word	0x20013e24

0800c104 <vPortEnterCritical>:
 800c104:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c108:	f383 8811 	msr	BASEPRI, r3
 800c10c:	f3bf 8f6f 	isb	sy
 800c110:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800c114:	4a0a      	ldr	r2, [pc, #40]	@ (800c140 <vPortEnterCritical+0x3c>)
 800c116:	6813      	ldr	r3, [r2, #0]
 800c118:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800c11a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800c11c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800c11e:	d10e      	bne.n	800c13e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800c120:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c124:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800c128:	b2db      	uxtb	r3, r3
 800c12a:	b143      	cbz	r3, 800c13e <vPortEnterCritical+0x3a>
 800c12c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c130:	f383 8811 	msr	BASEPRI, r3
 800c134:	f3bf 8f6f 	isb	sy
 800c138:	f3bf 8f4f 	dsb	sy
 800c13c:	e7fe      	b.n	800c13c <vPortEnterCritical+0x38>
}
 800c13e:	4770      	bx	lr
 800c140:	20000080 	.word	0x20000080

0800c144 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800c144:	4a08      	ldr	r2, [pc, #32]	@ (800c168 <vPortExitCritical+0x24>)
 800c146:	6813      	ldr	r3, [r2, #0]
 800c148:	b943      	cbnz	r3, 800c15c <vPortExitCritical+0x18>
 800c14a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c14e:	f383 8811 	msr	BASEPRI, r3
 800c152:	f3bf 8f6f 	isb	sy
 800c156:	f3bf 8f4f 	dsb	sy
 800c15a:	e7fe      	b.n	800c15a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800c15c:	3b01      	subs	r3, #1
 800c15e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800c160:	b90b      	cbnz	r3, 800c166 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800c162:	f383 8811 	msr	BASEPRI, r3
}
 800c166:	4770      	bx	lr
 800c168:	20000080 	.word	0x20000080
 800c16c:	00000000 	.word	0x00000000

0800c170 <PendSV_Handler>:
	__asm volatile
 800c170:	f3ef 8009 	mrs	r0, PSP
 800c174:	f3bf 8f6f 	isb	sy
 800c178:	4b15      	ldr	r3, [pc, #84]	@ (800c1d0 <pxCurrentTCBConst>)
 800c17a:	681a      	ldr	r2, [r3, #0]
 800c17c:	f01e 0f10 	tst.w	lr, #16
 800c180:	bf08      	it	eq
 800c182:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800c186:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c18a:	6010      	str	r0, [r2, #0]
 800c18c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800c190:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800c194:	f380 8811 	msr	BASEPRI, r0
 800c198:	f3bf 8f4f 	dsb	sy
 800c19c:	f3bf 8f6f 	isb	sy
 800c1a0:	f001 f924 	bl	800d3ec <vTaskSwitchContext>
 800c1a4:	f04f 0000 	mov.w	r0, #0
 800c1a8:	f380 8811 	msr	BASEPRI, r0
 800c1ac:	bc09      	pop	{r0, r3}
 800c1ae:	6819      	ldr	r1, [r3, #0]
 800c1b0:	6808      	ldr	r0, [r1, #0]
 800c1b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1b6:	f01e 0f10 	tst.w	lr, #16
 800c1ba:	bf08      	it	eq
 800c1bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800c1c0:	f380 8809 	msr	PSP, r0
 800c1c4:	f3bf 8f6f 	isb	sy
 800c1c8:	4770      	bx	lr
 800c1ca:	bf00      	nop
 800c1cc:	f3af 8000 	nop.w

0800c1d0 <pxCurrentTCBConst>:
 800c1d0:	20013e24 	.word	0x20013e24

0800c1d4 <xPortSysTickHandler>:
{
 800c1d4:	b508      	push	{r3, lr}
	__asm volatile
 800c1d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c1da:	f383 8811 	msr	BASEPRI, r3
 800c1de:	f3bf 8f6f 	isb	sy
 800c1e2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800c1e6:	f000 ffd3 	bl	800d190 <xTaskIncrementTick>
 800c1ea:	b128      	cbz	r0, 800c1f8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800c1ec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c1f0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c1f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 800c1f8:	2300      	movs	r3, #0
 800c1fa:	f383 8811 	msr	BASEPRI, r3
}
 800c1fe:	bd08      	pop	{r3, pc}

0800c200 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800c200:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800c204:	2300      	movs	r3, #0
 800c206:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800c208:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c20a:	4b05      	ldr	r3, [pc, #20]	@ (800c220 <vPortSetupTimerInterrupt+0x20>)
 800c20c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800c210:	681b      	ldr	r3, [r3, #0]
 800c212:	fbb3 f3f1 	udiv	r3, r3, r1
 800c216:	3b01      	subs	r3, #1
 800c218:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800c21a:	2307      	movs	r3, #7
 800c21c:	6113      	str	r3, [r2, #16]
}
 800c21e:	4770      	bx	lr
 800c220:	20000074 	.word	0x20000074

0800c224 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800c224:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 800c228:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800c22a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800c22e:	4a38      	ldr	r2, [pc, #224]	@ (800c310 <xPortStartScheduler+0xec>)
 800c230:	4291      	cmp	r1, r2
 800c232:	d108      	bne.n	800c246 <xPortStartScheduler+0x22>
	__asm volatile
 800c234:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c238:	f383 8811 	msr	BASEPRI, r3
 800c23c:	f3bf 8f6f 	isb	sy
 800c240:	f3bf 8f4f 	dsb	sy
 800c244:	e7fe      	b.n	800c244 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800c246:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800c24a:	4b32      	ldr	r3, [pc, #200]	@ (800c314 <xPortStartScheduler+0xf0>)
 800c24c:	429a      	cmp	r2, r3
 800c24e:	d108      	bne.n	800c262 <xPortStartScheduler+0x3e>
 800c250:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c254:	f383 8811 	msr	BASEPRI, r3
 800c258:	f3bf 8f6f 	isb	sy
 800c25c:	f3bf 8f4f 	dsb	sy
 800c260:	e7fe      	b.n	800c260 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c262:	4b2d      	ldr	r3, [pc, #180]	@ (800c318 <xPortStartScheduler+0xf4>)
 800c264:	781a      	ldrb	r2, [r3, #0]
 800c266:	b2d2      	uxtb	r2, r2
 800c268:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800c26a:	22ff      	movs	r2, #255	@ 0xff
 800c26c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800c26e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c270:	4a2a      	ldr	r2, [pc, #168]	@ (800c31c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800c272:	b2db      	uxtb	r3, r3
 800c274:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c278:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800c27c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800c280:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c282:	4a27      	ldr	r2, [pc, #156]	@ (800c320 <xPortStartScheduler+0xfc>)
 800c284:	2307      	movs	r3, #7
 800c286:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c288:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800c28c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c28e:	0609      	lsls	r1, r1, #24
 800c290:	d40a      	bmi.n	800c2a8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800c292:	2b03      	cmp	r3, #3
 800c294:	d011      	beq.n	800c2ba <xPortStartScheduler+0x96>
 800c296:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c29a:	f383 8811 	msr	BASEPRI, r3
 800c29e:	f3bf 8f6f 	isb	sy
 800c2a2:	f3bf 8f4f 	dsb	sy
 800c2a6:	e7fe      	b.n	800c2a6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 800c2a8:	3b01      	subs	r3, #1
 800c2aa:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800c2ac:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800c2b0:	005b      	lsls	r3, r3, #1
 800c2b2:	b2db      	uxtb	r3, r3
 800c2b4:	f88d 3003 	strb.w	r3, [sp, #3]
 800c2b8:	e7e6      	b.n	800c288 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800c2ba:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800c2be:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c2c0:	9b01      	ldr	r3, [sp, #4]
 800c2c2:	4a15      	ldr	r2, [pc, #84]	@ (800c318 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c2c4:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c2c8:	b2db      	uxtb	r3, r3
 800c2ca:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c2cc:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800c2d0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800c2d4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800c2d8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800c2dc:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800c2e0:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 800c2e4:	f7ff ff8c 	bl	800c200 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800c2e8:	4b0e      	ldr	r3, [pc, #56]	@ (800c324 <xPortStartScheduler+0x100>)
 800c2ea:	2500      	movs	r5, #0
 800c2ec:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800c2ee:	f7ff feb3 	bl	800c058 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800c2f2:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 800c2f6:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800c2fa:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800c2fe:	f7ff fe97 	bl	800c030 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800c302:	f001 f873 	bl	800d3ec <vTaskSwitchContext>
	prvTaskExitError();
 800c306:	f7ff feb1 	bl	800c06c <prvTaskExitError>
}
 800c30a:	4628      	mov	r0, r5
 800c30c:	b003      	add	sp, #12
 800c30e:	bd30      	pop	{r4, r5, pc}
 800c310:	410fc271 	.word	0x410fc271
 800c314:	410fc270 	.word	0x410fc270
 800c318:	e000e400 	.word	0xe000e400
 800c31c:	200138e8 	.word	0x200138e8
 800c320:	200138e4 	.word	0x200138e4
 800c324:	20000080 	.word	0x20000080

0800c328 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800c328:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800c32c:	2b0f      	cmp	r3, #15
 800c32e:	d90e      	bls.n	800c34e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800c330:	4a11      	ldr	r2, [pc, #68]	@ (800c378 <vPortValidateInterruptPriority+0x50>)
 800c332:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800c334:	4a11      	ldr	r2, [pc, #68]	@ (800c37c <vPortValidateInterruptPriority+0x54>)
 800c336:	7812      	ldrb	r2, [r2, #0]
 800c338:	429a      	cmp	r2, r3
 800c33a:	d908      	bls.n	800c34e <vPortValidateInterruptPriority+0x26>
 800c33c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c340:	f383 8811 	msr	BASEPRI, r3
 800c344:	f3bf 8f6f 	isb	sy
 800c348:	f3bf 8f4f 	dsb	sy
 800c34c:	e7fe      	b.n	800c34c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800c34e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c352:	4a0b      	ldr	r2, [pc, #44]	@ (800c380 <vPortValidateInterruptPriority+0x58>)
 800c354:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 800c358:	6812      	ldr	r2, [r2, #0]
 800c35a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800c35e:	4293      	cmp	r3, r2
 800c360:	d908      	bls.n	800c374 <vPortValidateInterruptPriority+0x4c>
 800c362:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c366:	f383 8811 	msr	BASEPRI, r3
 800c36a:	f3bf 8f6f 	isb	sy
 800c36e:	f3bf 8f4f 	dsb	sy
 800c372:	e7fe      	b.n	800c372 <vPortValidateInterruptPriority+0x4a>
	}
 800c374:	4770      	bx	lr
 800c376:	bf00      	nop
 800c378:	e000e3f0 	.word	0xe000e3f0
 800c37c:	200138e8 	.word	0x200138e8
 800c380:	200138e4 	.word	0x200138e4

0800c384 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800c384:	b510      	push	{r4, lr}
 800c386:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800c388:	f7ff febc 	bl	800c104 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800c38c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800c38e:	f7ff fed9 	bl	800c144 <vPortExitCritical>

	return xReturn;
}
 800c392:	fab4 f084 	clz	r0, r4
 800c396:	0940      	lsrs	r0, r0, #5
 800c398:	bd10      	pop	{r4, pc}

0800c39a <prvCopyDataToQueue>:
{
 800c39a:	b570      	push	{r4, r5, r6, lr}
 800c39c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800c39e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c3a0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 800c3a2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800c3a4:	b942      	cbnz	r2, 800c3b8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800c3a6:	6806      	ldr	r6, [r0, #0]
 800c3a8:	b99e      	cbnz	r6, 800c3d2 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800c3aa:	6880      	ldr	r0, [r0, #8]
 800c3ac:	f001 f96c 	bl	800d688 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800c3b0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c3b2:	3501      	adds	r5, #1
 800c3b4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 800c3b6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800c3b8:	b96e      	cbnz	r6, 800c3d6 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c3ba:	6840      	ldr	r0, [r0, #4]
 800c3bc:	f01c f82f 	bl	802841e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c3c0:	6863      	ldr	r3, [r4, #4]
 800c3c2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800c3c4:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c3c6:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c3c8:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c3ca:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800c3cc:	bf24      	itt	cs
 800c3ce:	6823      	ldrcs	r3, [r4, #0]
 800c3d0:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800c3d2:	2000      	movs	r0, #0
 800c3d4:	e7ed      	b.n	800c3b2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800c3d6:	68c0      	ldr	r0, [r0, #12]
 800c3d8:	f01c f821 	bl	802841e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800c3dc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800c3de:	68e3      	ldr	r3, [r4, #12]
 800c3e0:	4251      	negs	r1, r2
 800c3e2:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c3e4:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800c3e6:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c3e8:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800c3ea:	bf3e      	ittt	cc
 800c3ec:	68a3      	ldrcc	r3, [r4, #8]
 800c3ee:	185b      	addcc	r3, r3, r1
 800c3f0:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800c3f2:	2e02      	cmp	r6, #2
 800c3f4:	d1ed      	bne.n	800c3d2 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800c3f6:	b10d      	cbz	r5, 800c3fc <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 800c3f8:	3d01      	subs	r5, #1
 800c3fa:	e7ea      	b.n	800c3d2 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800c3fc:	4628      	mov	r0, r5
 800c3fe:	e7d8      	b.n	800c3b2 <prvCopyDataToQueue+0x18>

0800c400 <prvCopyDataFromQueue>:
{
 800c400:	4603      	mov	r3, r0
 800c402:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800c404:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 800c406:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800c408:	b16a      	cbz	r2, 800c426 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c40a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800c40c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c40e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800c410:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800c412:	bf28      	it	cs
 800c414:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c416:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800c418:	bf28      	it	cs
 800c41a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c41c:	68d9      	ldr	r1, [r3, #12]
}
 800c41e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c422:	f01b bffc 	b.w	802841e <memcpy>
}
 800c426:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c42a:	4770      	bx	lr

0800c42c <prvUnlockQueue>:
{
 800c42c:	b570      	push	{r4, r5, r6, lr}
 800c42e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800c430:	f7ff fe68 	bl	800c104 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c434:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c438:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800c43c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c43e:	2d00      	cmp	r5, #0
 800c440:	dd01      	ble.n	800c446 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c442:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c444:	b9b3      	cbnz	r3, 800c474 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 800c446:	23ff      	movs	r3, #255	@ 0xff
 800c448:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800c44c:	f7ff fe7a 	bl	800c144 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c450:	f7ff fe58 	bl	800c104 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c454:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c458:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800c45c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c45e:	2d00      	cmp	r5, #0
 800c460:	dd01      	ble.n	800c466 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c462:	6923      	ldr	r3, [r4, #16]
 800c464:	b97b      	cbnz	r3, 800c486 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 800c466:	23ff      	movs	r3, #255	@ 0xff
 800c468:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800c46c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800c470:	f7ff be68 	b.w	800c144 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c474:	4630      	mov	r0, r6
 800c476:	f001 f82b 	bl	800d4d0 <xTaskRemoveFromEventList>
 800c47a:	b108      	cbz	r0, 800c480 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 800c47c:	f001 f8b0 	bl	800d5e0 <vTaskMissedYield>
			--cTxLock;
 800c480:	3d01      	subs	r5, #1
 800c482:	b26d      	sxtb	r5, r5
 800c484:	e7db      	b.n	800c43e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c486:	4630      	mov	r0, r6
 800c488:	f001 f822 	bl	800d4d0 <xTaskRemoveFromEventList>
 800c48c:	b108      	cbz	r0, 800c492 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 800c48e:	f001 f8a7 	bl	800d5e0 <vTaskMissedYield>
				--cRxLock;
 800c492:	3d01      	subs	r5, #1
 800c494:	b26d      	sxtb	r5, r5
 800c496:	e7e2      	b.n	800c45e <prvUnlockQueue+0x32>

0800c498 <xQueueGenericReset>:
{
 800c498:	b538      	push	{r3, r4, r5, lr}
 800c49a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800c49c:	4604      	mov	r4, r0
 800c49e:	b940      	cbnz	r0, 800c4b2 <xQueueGenericReset+0x1a>
 800c4a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c4a4:	f383 8811 	msr	BASEPRI, r3
 800c4a8:	f3bf 8f6f 	isb	sy
 800c4ac:	f3bf 8f4f 	dsb	sy
 800c4b0:	e7fe      	b.n	800c4b0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800c4b2:	f7ff fe27 	bl	800c104 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c4b6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800c4ba:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c4bc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c4be:	434b      	muls	r3, r1
 800c4c0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c4c2:	1a5b      	subs	r3, r3, r1
 800c4c4:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c4c6:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800c4c8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c4ca:	2000      	movs	r0, #0
 800c4cc:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c4ce:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 800c4d0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800c4d4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 800c4d8:	b9a5      	cbnz	r5, 800c504 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c4da:	6923      	ldr	r3, [r4, #16]
 800c4dc:	b173      	cbz	r3, 800c4fc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c4de:	f104 0010 	add.w	r0, r4, #16
 800c4e2:	f000 fff5 	bl	800d4d0 <xTaskRemoveFromEventList>
 800c4e6:	b148      	cbz	r0, 800c4fc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800c4e8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c4ec:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c4f0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c4f4:	f3bf 8f4f 	dsb	sy
 800c4f8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800c4fc:	f7ff fe22 	bl	800c144 <vPortExitCritical>
}
 800c500:	2001      	movs	r0, #1
 800c502:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c504:	f104 0010 	add.w	r0, r4, #16
 800c508:	f7ff fd52 	bl	800bfb0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c50c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c510:	f7ff fd4e 	bl	800bfb0 <vListInitialise>
 800c514:	e7f2      	b.n	800c4fc <xQueueGenericReset+0x64>

0800c516 <xQueueGenericCreateStatic>:
	{
 800c516:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c518:	460d      	mov	r5, r1
 800c51a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800c51c:	b940      	cbnz	r0, 800c530 <xQueueGenericCreateStatic+0x1a>
 800c51e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c522:	f383 8811 	msr	BASEPRI, r3
 800c526:	f3bf 8f6f 	isb	sy
 800c52a:	f3bf 8f4f 	dsb	sy
 800c52e:	e7fe      	b.n	800c52e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 800c530:	b943      	cbnz	r3, 800c544 <xQueueGenericCreateStatic+0x2e>
 800c532:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c536:	f383 8811 	msr	BASEPRI, r3
 800c53a:	f3bf 8f6f 	isb	sy
 800c53e:	f3bf 8f4f 	dsb	sy
 800c542:	e7fe      	b.n	800c542 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800c544:	b14a      	cbz	r2, 800c55a <xQueueGenericCreateStatic+0x44>
 800c546:	b991      	cbnz	r1, 800c56e <xQueueGenericCreateStatic+0x58>
 800c548:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c54c:	f383 8811 	msr	BASEPRI, r3
 800c550:	f3bf 8f6f 	isb	sy
 800c554:	f3bf 8f4f 	dsb	sy
 800c558:	e7fe      	b.n	800c558 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800c55a:	b141      	cbz	r1, 800c56e <xQueueGenericCreateStatic+0x58>
 800c55c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c560:	f383 8811 	msr	BASEPRI, r3
 800c564:	f3bf 8f6f 	isb	sy
 800c568:	f3bf 8f4f 	dsb	sy
 800c56c:	e7fe      	b.n	800c56c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800c56e:	2350      	movs	r3, #80	@ 0x50
 800c570:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800c572:	9b01      	ldr	r3, [sp, #4]
 800c574:	2b50      	cmp	r3, #80	@ 0x50
 800c576:	d008      	beq.n	800c58a <xQueueGenericCreateStatic+0x74>
 800c578:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c57c:	f383 8811 	msr	BASEPRI, r3
 800c580:	f3bf 8f6f 	isb	sy
 800c584:	f3bf 8f4f 	dsb	sy
 800c588:	e7fe      	b.n	800c588 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c58a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800c58c:	2d00      	cmp	r5, #0
 800c58e:	bf08      	it	eq
 800c590:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 800c592:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c596:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 800c59a:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800c59c:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800c59e:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800c5a0:	f7ff ff7a 	bl	800c498 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800c5a4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800c5a8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 800c5ac:	4620      	mov	r0, r4
 800c5ae:	b003      	add	sp, #12
 800c5b0:	bd30      	pop	{r4, r5, pc}

0800c5b2 <xQueueGenericCreate>:
	{
 800c5b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c5b4:	460d      	mov	r5, r1
 800c5b6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800c5b8:	4606      	mov	r6, r0
 800c5ba:	b940      	cbnz	r0, 800c5ce <xQueueGenericCreate+0x1c>
 800c5bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c5c0:	f383 8811 	msr	BASEPRI, r3
 800c5c4:	f3bf 8f6f 	isb	sy
 800c5c8:	f3bf 8f4f 	dsb	sy
 800c5cc:	e7fe      	b.n	800c5cc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c5ce:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800c5d0:	3050      	adds	r0, #80	@ 0x50
 800c5d2:	f7ff fc17 	bl	800be04 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800c5d6:	4604      	mov	r4, r0
 800c5d8:	b170      	cbz	r0, 800c5f8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c5da:	2300      	movs	r3, #0
 800c5dc:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800c5e0:	b165      	cbz	r5, 800c5fc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5e2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800c5e6:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800c5ea:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800c5ec:	2101      	movs	r1, #1
 800c5ee:	4620      	mov	r0, r4
 800c5f0:	f7ff ff52 	bl	800c498 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800c5f4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 800c5f8:	4620      	mov	r0, r4
 800c5fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800c5fc:	4603      	mov	r3, r0
 800c5fe:	e7f2      	b.n	800c5e6 <xQueueGenericCreate+0x34>

0800c600 <xQueueCreateCountingSemaphoreStatic>:
	{
 800c600:	b513      	push	{r0, r1, r4, lr}
 800c602:	4613      	mov	r3, r2
 800c604:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800c606:	b940      	cbnz	r0, 800c61a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800c608:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c60c:	f383 8811 	msr	BASEPRI, r3
 800c610:	f3bf 8f6f 	isb	sy
 800c614:	f3bf 8f4f 	dsb	sy
 800c618:	e7fe      	b.n	800c618 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800c61a:	4288      	cmp	r0, r1
 800c61c:	d208      	bcs.n	800c630 <xQueueCreateCountingSemaphoreStatic+0x30>
 800c61e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c622:	f383 8811 	msr	BASEPRI, r3
 800c626:	f3bf 8f6f 	isb	sy
 800c62a:	f3bf 8f4f 	dsb	sy
 800c62e:	e7fe      	b.n	800c62e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800c630:	2202      	movs	r2, #2
 800c632:	9200      	str	r2, [sp, #0]
 800c634:	2200      	movs	r2, #0
 800c636:	4611      	mov	r1, r2
 800c638:	f7ff ff6d 	bl	800c516 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800c63c:	b100      	cbz	r0, 800c640 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800c63e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800c640:	b002      	add	sp, #8
 800c642:	bd10      	pop	{r4, pc}

0800c644 <xQueueCreateCountingSemaphore>:
	{
 800c644:	b510      	push	{r4, lr}
 800c646:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800c648:	b940      	cbnz	r0, 800c65c <xQueueCreateCountingSemaphore+0x18>
 800c64a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c64e:	f383 8811 	msr	BASEPRI, r3
 800c652:	f3bf 8f6f 	isb	sy
 800c656:	f3bf 8f4f 	dsb	sy
 800c65a:	e7fe      	b.n	800c65a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800c65c:	4288      	cmp	r0, r1
 800c65e:	d208      	bcs.n	800c672 <xQueueCreateCountingSemaphore+0x2e>
 800c660:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c664:	f383 8811 	msr	BASEPRI, r3
 800c668:	f3bf 8f6f 	isb	sy
 800c66c:	f3bf 8f4f 	dsb	sy
 800c670:	e7fe      	b.n	800c670 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800c672:	2202      	movs	r2, #2
 800c674:	2100      	movs	r1, #0
 800c676:	f7ff ff9c 	bl	800c5b2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800c67a:	b100      	cbz	r0, 800c67e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800c67c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800c67e:	bd10      	pop	{r4, pc}

0800c680 <xQueueGenericSend>:
{
 800c680:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c684:	460f      	mov	r7, r1
 800c686:	9201      	str	r2, [sp, #4]
 800c688:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800c68a:	4604      	mov	r4, r0
 800c68c:	b940      	cbnz	r0, 800c6a0 <xQueueGenericSend+0x20>
 800c68e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c692:	f383 8811 	msr	BASEPRI, r3
 800c696:	f3bf 8f6f 	isb	sy
 800c69a:	f3bf 8f4f 	dsb	sy
 800c69e:	e7fe      	b.n	800c69e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c6a0:	b951      	cbnz	r1, 800c6b8 <xQueueGenericSend+0x38>
 800c6a2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800c6a4:	b143      	cbz	r3, 800c6b8 <xQueueGenericSend+0x38>
 800c6a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c6aa:	f383 8811 	msr	BASEPRI, r3
 800c6ae:	f3bf 8f6f 	isb	sy
 800c6b2:	f3bf 8f4f 	dsb	sy
 800c6b6:	e7fe      	b.n	800c6b6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800c6b8:	2e02      	cmp	r6, #2
 800c6ba:	d10b      	bne.n	800c6d4 <xQueueGenericSend+0x54>
 800c6bc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c6be:	2b01      	cmp	r3, #1
 800c6c0:	d008      	beq.n	800c6d4 <xQueueGenericSend+0x54>
 800c6c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c6c6:	f383 8811 	msr	BASEPRI, r3
 800c6ca:	f3bf 8f6f 	isb	sy
 800c6ce:	f3bf 8f4f 	dsb	sy
 800c6d2:	e7fe      	b.n	800c6d2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c6d4:	f000 ff8a 	bl	800d5ec <xTaskGetSchedulerState>
 800c6d8:	4605      	mov	r5, r0
 800c6da:	b320      	cbz	r0, 800c726 <xQueueGenericSend+0xa6>
 800c6dc:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800c6de:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800c6e2:	f7ff fd0f 	bl	800c104 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c6e6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800c6e8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c6ea:	429a      	cmp	r2, r3
 800c6ec:	d227      	bcs.n	800c73e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c6ee:	4632      	mov	r2, r6
 800c6f0:	4639      	mov	r1, r7
 800c6f2:	4620      	mov	r0, r4
 800c6f4:	f7ff fe51 	bl	800c39a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c6f8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c6fa:	b11b      	cbz	r3, 800c704 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c6fc:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c700:	f000 fee6 	bl	800d4d0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800c704:	b148      	cbz	r0, 800c71a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 800c706:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c70a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c70e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c712:	f3bf 8f4f 	dsb	sy
 800c716:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800c71a:	f7ff fd13 	bl	800c144 <vPortExitCritical>
				return pdPASS;
 800c71e:	2001      	movs	r0, #1
}
 800c720:	b004      	add	sp, #16
 800c722:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c726:	9b01      	ldr	r3, [sp, #4]
 800c728:	2b00      	cmp	r3, #0
 800c72a:	d0d8      	beq.n	800c6de <xQueueGenericSend+0x5e>
 800c72c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c730:	f383 8811 	msr	BASEPRI, r3
 800c734:	f3bf 8f6f 	isb	sy
 800c738:	f3bf 8f4f 	dsb	sy
 800c73c:	e7fe      	b.n	800c73c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c73e:	2e02      	cmp	r6, #2
 800c740:	d0d5      	beq.n	800c6ee <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 800c742:	9b01      	ldr	r3, [sp, #4]
 800c744:	b91b      	cbnz	r3, 800c74e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 800c746:	f7ff fcfd 	bl	800c144 <vPortExitCritical>
					return errQUEUE_FULL;
 800c74a:	2000      	movs	r0, #0
 800c74c:	e7e8      	b.n	800c720 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800c74e:	b915      	cbnz	r5, 800c756 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800c750:	a802      	add	r0, sp, #8
 800c752:	f000 fefd 	bl	800d550 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800c756:	f7ff fcf5 	bl	800c144 <vPortExitCritical>
		vTaskSuspendAll();
 800c75a:	f000 fd0b 	bl	800d174 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800c75e:	f7ff fcd1 	bl	800c104 <vPortEnterCritical>
 800c762:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800c766:	2bff      	cmp	r3, #255	@ 0xff
 800c768:	bf08      	it	eq
 800c76a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800c76e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800c772:	2bff      	cmp	r3, #255	@ 0xff
 800c774:	bf08      	it	eq
 800c776:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800c77a:	f7ff fce3 	bl	800c144 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800c77e:	a901      	add	r1, sp, #4
 800c780:	a802      	add	r0, sp, #8
 800c782:	f000 fef1 	bl	800d568 <xTaskCheckForTimeOut>
 800c786:	bb38      	cbnz	r0, 800c7d8 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800c788:	f7ff fcbc 	bl	800c104 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800c78c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800c78e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c790:	429a      	cmp	r2, r3
 800c792:	d10e      	bne.n	800c7b2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800c794:	f7ff fcd6 	bl	800c144 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800c798:	9901      	ldr	r1, [sp, #4]
 800c79a:	f104 0010 	add.w	r0, r4, #16
 800c79e:	f000 fe5f 	bl	800d460 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800c7a2:	4620      	mov	r0, r4
 800c7a4:	f7ff fe42 	bl	800c42c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800c7a8:	f000 fd88 	bl	800d2bc <xTaskResumeAll>
 800c7ac:	b148      	cbz	r0, 800c7c2 <xQueueGenericSend+0x142>
 800c7ae:	2501      	movs	r5, #1
 800c7b0:	e797      	b.n	800c6e2 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 800c7b2:	f7ff fcc7 	bl	800c144 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800c7b6:	4620      	mov	r0, r4
 800c7b8:	f7ff fe38 	bl	800c42c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800c7bc:	f000 fd7e 	bl	800d2bc <xTaskResumeAll>
 800c7c0:	e7f5      	b.n	800c7ae <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 800c7c2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c7c6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c7ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c7ce:	f3bf 8f4f 	dsb	sy
 800c7d2:	f3bf 8f6f 	isb	sy
 800c7d6:	e7ea      	b.n	800c7ae <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 800c7d8:	4620      	mov	r0, r4
 800c7da:	f7ff fe27 	bl	800c42c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800c7de:	f000 fd6d 	bl	800d2bc <xTaskResumeAll>
			return errQUEUE_FULL;
 800c7e2:	e7b2      	b.n	800c74a <xQueueGenericSend+0xca>

0800c7e4 <xQueueGenericSendFromISR>:
{
 800c7e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c7e8:	4689      	mov	r9, r1
 800c7ea:	4617      	mov	r7, r2
 800c7ec:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800c7ee:	4604      	mov	r4, r0
 800c7f0:	b940      	cbnz	r0, 800c804 <xQueueGenericSendFromISR+0x20>
 800c7f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c7f6:	f383 8811 	msr	BASEPRI, r3
 800c7fa:	f3bf 8f6f 	isb	sy
 800c7fe:	f3bf 8f4f 	dsb	sy
 800c802:	e7fe      	b.n	800c802 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c804:	b951      	cbnz	r1, 800c81c <xQueueGenericSendFromISR+0x38>
 800c806:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800c808:	b143      	cbz	r3, 800c81c <xQueueGenericSendFromISR+0x38>
 800c80a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c80e:	f383 8811 	msr	BASEPRI, r3
 800c812:	f3bf 8f6f 	isb	sy
 800c816:	f3bf 8f4f 	dsb	sy
 800c81a:	e7fe      	b.n	800c81a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800c81c:	2e02      	cmp	r6, #2
 800c81e:	d10b      	bne.n	800c838 <xQueueGenericSendFromISR+0x54>
 800c820:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c822:	2b01      	cmp	r3, #1
 800c824:	d008      	beq.n	800c838 <xQueueGenericSendFromISR+0x54>
 800c826:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c82a:	f383 8811 	msr	BASEPRI, r3
 800c82e:	f3bf 8f6f 	isb	sy
 800c832:	f3bf 8f4f 	dsb	sy
 800c836:	e7fe      	b.n	800c836 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800c838:	f7ff fd76 	bl	800c328 <vPortValidateInterruptPriority>
	__asm volatile
 800c83c:	f3ef 8811 	mrs	r8, BASEPRI
 800c840:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c844:	f383 8811 	msr	BASEPRI, r3
 800c848:	f3bf 8f6f 	isb	sy
 800c84c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c850:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800c852:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c854:	429a      	cmp	r2, r3
 800c856:	d301      	bcc.n	800c85c <xQueueGenericSendFromISR+0x78>
 800c858:	2e02      	cmp	r6, #2
 800c85a:	d11e      	bne.n	800c89a <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 800c85c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c860:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800c862:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c864:	4632      	mov	r2, r6
 800c866:	4649      	mov	r1, r9
 800c868:	4620      	mov	r0, r4
 800c86a:	f7ff fd96 	bl	800c39a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800c86e:	1c6b      	adds	r3, r5, #1
 800c870:	d10e      	bne.n	800c890 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c872:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c874:	b13b      	cbz	r3, 800c886 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c876:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c87a:	f000 fe29 	bl	800d4d0 <xTaskRemoveFromEventList>
 800c87e:	b110      	cbz	r0, 800c886 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 800c880:	b10f      	cbz	r7, 800c886 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800c882:	2301      	movs	r3, #1
 800c884:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 800c886:	2001      	movs	r0, #1
	__asm volatile
 800c888:	f388 8811 	msr	BASEPRI, r8
}
 800c88c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800c890:	3501      	adds	r5, #1
 800c892:	b26d      	sxtb	r5, r5
 800c894:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800c898:	e7f5      	b.n	800c886 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 800c89a:	2000      	movs	r0, #0
 800c89c:	e7f4      	b.n	800c888 <xQueueGenericSendFromISR+0xa4>

0800c89e <xQueueGiveFromISR>:
{
 800c89e:	b570      	push	{r4, r5, r6, lr}
 800c8a0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800c8a2:	4604      	mov	r4, r0
 800c8a4:	b940      	cbnz	r0, 800c8b8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800c8a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c8aa:	f383 8811 	msr	BASEPRI, r3
 800c8ae:	f3bf 8f6f 	isb	sy
 800c8b2:	f3bf 8f4f 	dsb	sy
 800c8b6:	e7fe      	b.n	800c8b6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800c8b8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800c8ba:	b143      	cbz	r3, 800c8ce <xQueueGiveFromISR+0x30>
 800c8bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c8c0:	f383 8811 	msr	BASEPRI, r3
 800c8c4:	f3bf 8f6f 	isb	sy
 800c8c8:	f3bf 8f4f 	dsb	sy
 800c8cc:	e7fe      	b.n	800c8cc <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800c8ce:	6803      	ldr	r3, [r0, #0]
 800c8d0:	b953      	cbnz	r3, 800c8e8 <xQueueGiveFromISR+0x4a>
 800c8d2:	6883      	ldr	r3, [r0, #8]
 800c8d4:	b143      	cbz	r3, 800c8e8 <xQueueGiveFromISR+0x4a>
 800c8d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c8da:	f383 8811 	msr	BASEPRI, r3
 800c8de:	f3bf 8f6f 	isb	sy
 800c8e2:	f3bf 8f4f 	dsb	sy
 800c8e6:	e7fe      	b.n	800c8e6 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800c8e8:	f7ff fd1e 	bl	800c328 <vPortValidateInterruptPriority>
	__asm volatile
 800c8ec:	f3ef 8611 	mrs	r6, BASEPRI
 800c8f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c8f4:	f383 8811 	msr	BASEPRI, r3
 800c8f8:	f3bf 8f6f 	isb	sy
 800c8fc:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c900:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800c902:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c904:	4293      	cmp	r3, r2
 800c906:	d919      	bls.n	800c93c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 800c908:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c90c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800c90e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800c910:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c912:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 800c914:	d10d      	bne.n	800c932 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c916:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c918:	b13b      	cbz	r3, 800c92a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c91a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c91e:	f000 fdd7 	bl	800d4d0 <xTaskRemoveFromEventList>
 800c922:	b110      	cbz	r0, 800c92a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 800c924:	b10d      	cbz	r5, 800c92a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800c926:	2301      	movs	r3, #1
 800c928:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800c92a:	2001      	movs	r0, #1
	__asm volatile
 800c92c:	f386 8811 	msr	BASEPRI, r6
}
 800c930:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800c932:	3301      	adds	r3, #1
 800c934:	b25b      	sxtb	r3, r3
 800c936:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800c93a:	e7f6      	b.n	800c92a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800c93c:	2000      	movs	r0, #0
 800c93e:	e7f5      	b.n	800c92c <xQueueGiveFromISR+0x8e>

0800c940 <xQueueReceive>:
{
 800c940:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c944:	460e      	mov	r6, r1
 800c946:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800c948:	4604      	mov	r4, r0
 800c94a:	b940      	cbnz	r0, 800c95e <xQueueReceive+0x1e>
	__asm volatile
 800c94c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c950:	f383 8811 	msr	BASEPRI, r3
 800c954:	f3bf 8f6f 	isb	sy
 800c958:	f3bf 8f4f 	dsb	sy
 800c95c:	e7fe      	b.n	800c95c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c95e:	b951      	cbnz	r1, 800c976 <xQueueReceive+0x36>
 800c960:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800c962:	b143      	cbz	r3, 800c976 <xQueueReceive+0x36>
 800c964:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c968:	f383 8811 	msr	BASEPRI, r3
 800c96c:	f3bf 8f6f 	isb	sy
 800c970:	f3bf 8f4f 	dsb	sy
 800c974:	e7fe      	b.n	800c974 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c976:	f000 fe39 	bl	800d5ec <xTaskGetSchedulerState>
 800c97a:	4605      	mov	r5, r0
 800c97c:	b318      	cbz	r0, 800c9c6 <xQueueReceive+0x86>
 800c97e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800c980:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800c984:	f7ff fbbe 	bl	800c104 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c988:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800c98a:	b347      	cbz	r7, 800c9de <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800c98c:	4631      	mov	r1, r6
 800c98e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800c990:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800c992:	f7ff fd35 	bl	800c400 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800c996:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c998:	6923      	ldr	r3, [r4, #16]
 800c99a:	b173      	cbz	r3, 800c9ba <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c99c:	f104 0010 	add.w	r0, r4, #16
 800c9a0:	f000 fd96 	bl	800d4d0 <xTaskRemoveFromEventList>
 800c9a4:	b148      	cbz	r0, 800c9ba <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 800c9a6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c9aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c9ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c9b2:	f3bf 8f4f 	dsb	sy
 800c9b6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800c9ba:	f7ff fbc3 	bl	800c144 <vPortExitCritical>
				return pdPASS;
 800c9be:	2001      	movs	r0, #1
}
 800c9c0:	b004      	add	sp, #16
 800c9c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c9c6:	9b01      	ldr	r3, [sp, #4]
 800c9c8:	2b00      	cmp	r3, #0
 800c9ca:	d0d9      	beq.n	800c980 <xQueueReceive+0x40>
 800c9cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c9d0:	f383 8811 	msr	BASEPRI, r3
 800c9d4:	f3bf 8f6f 	isb	sy
 800c9d8:	f3bf 8f4f 	dsb	sy
 800c9dc:	e7fe      	b.n	800c9dc <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800c9de:	9b01      	ldr	r3, [sp, #4]
 800c9e0:	b91b      	cbnz	r3, 800c9ea <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 800c9e2:	f7ff fbaf 	bl	800c144 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800c9e6:	2000      	movs	r0, #0
 800c9e8:	e7ea      	b.n	800c9c0 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800c9ea:	b915      	cbnz	r5, 800c9f2 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800c9ec:	a802      	add	r0, sp, #8
 800c9ee:	f000 fdaf 	bl	800d550 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800c9f2:	f7ff fba7 	bl	800c144 <vPortExitCritical>
		vTaskSuspendAll();
 800c9f6:	f000 fbbd 	bl	800d174 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800c9fa:	f7ff fb83 	bl	800c104 <vPortEnterCritical>
 800c9fe:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800ca02:	2bff      	cmp	r3, #255	@ 0xff
 800ca04:	bf08      	it	eq
 800ca06:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800ca0a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800ca0e:	2bff      	cmp	r3, #255	@ 0xff
 800ca10:	bf08      	it	eq
 800ca12:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800ca16:	f7ff fb95 	bl	800c144 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ca1a:	a901      	add	r1, sp, #4
 800ca1c:	a802      	add	r0, sp, #8
 800ca1e:	f000 fda3 	bl	800d568 <xTaskCheckForTimeOut>
 800ca22:	bb00      	cbnz	r0, 800ca66 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800ca24:	4620      	mov	r0, r4
 800ca26:	f7ff fcad 	bl	800c384 <prvIsQueueEmpty>
 800ca2a:	b1b0      	cbz	r0, 800ca5a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ca2c:	9901      	ldr	r1, [sp, #4]
 800ca2e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800ca32:	f000 fd15 	bl	800d460 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800ca36:	4620      	mov	r0, r4
 800ca38:	f7ff fcf8 	bl	800c42c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800ca3c:	f000 fc3e 	bl	800d2bc <xTaskResumeAll>
 800ca40:	b948      	cbnz	r0, 800ca56 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 800ca42:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ca46:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ca4a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ca4e:	f3bf 8f4f 	dsb	sy
 800ca52:	f3bf 8f6f 	isb	sy
 800ca56:	2501      	movs	r5, #1
 800ca58:	e794      	b.n	800c984 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800ca5a:	4620      	mov	r0, r4
 800ca5c:	f7ff fce6 	bl	800c42c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800ca60:	f000 fc2c 	bl	800d2bc <xTaskResumeAll>
 800ca64:	e7f7      	b.n	800ca56 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 800ca66:	4620      	mov	r0, r4
 800ca68:	f7ff fce0 	bl	800c42c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800ca6c:	f000 fc26 	bl	800d2bc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800ca70:	4620      	mov	r0, r4
 800ca72:	f7ff fc87 	bl	800c384 <prvIsQueueEmpty>
 800ca76:	2800      	cmp	r0, #0
 800ca78:	d0ed      	beq.n	800ca56 <xQueueReceive+0x116>
 800ca7a:	e7b4      	b.n	800c9e6 <xQueueReceive+0xa6>

0800ca7c <xQueueSemaphoreTake>:
{
 800ca7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca7e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800ca80:	4604      	mov	r4, r0
{
 800ca82:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ca84:	b940      	cbnz	r0, 800ca98 <xQueueSemaphoreTake+0x1c>
 800ca86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ca8a:	f383 8811 	msr	BASEPRI, r3
 800ca8e:	f3bf 8f6f 	isb	sy
 800ca92:	f3bf 8f4f 	dsb	sy
 800ca96:	e7fe      	b.n	800ca96 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ca98:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800ca9a:	b145      	cbz	r5, 800caae <xQueueSemaphoreTake+0x32>
 800ca9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800caa0:	f383 8811 	msr	BASEPRI, r3
 800caa4:	f3bf 8f6f 	isb	sy
 800caa8:	f3bf 8f4f 	dsb	sy
 800caac:	e7fe      	b.n	800caac <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800caae:	f000 fd9d 	bl	800d5ec <xTaskGetSchedulerState>
 800cab2:	4606      	mov	r6, r0
 800cab4:	b320      	cbz	r0, 800cb00 <xQueueSemaphoreTake+0x84>
 800cab6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800cab8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800caba:	f7ff fb23 	bl	800c104 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800cabe:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800cac0:	b353      	cbz	r3, 800cb18 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800cac2:	3b01      	subs	r3, #1
 800cac4:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800cac6:	6823      	ldr	r3, [r4, #0]
 800cac8:	b913      	cbnz	r3, 800cad0 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800caca:	f000 fe6d 	bl	800d7a8 <pvTaskIncrementMutexHeldCount>
 800cace:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cad0:	6923      	ldr	r3, [r4, #16]
 800cad2:	b173      	cbz	r3, 800caf2 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cad4:	f104 0010 	add.w	r0, r4, #16
 800cad8:	f000 fcfa 	bl	800d4d0 <xTaskRemoveFromEventList>
 800cadc:	b148      	cbz	r0, 800caf2 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800cade:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800cae2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800cae6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800caea:	f3bf 8f4f 	dsb	sy
 800caee:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800caf2:	f7ff fb27 	bl	800c144 <vPortExitCritical>
				return pdPASS;
 800caf6:	2001      	movs	r0, #1
}
 800caf8:	b005      	add	sp, #20
 800cafa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cafc:	4635      	mov	r5, r6
 800cafe:	e7db      	b.n	800cab8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800cb00:	9b01      	ldr	r3, [sp, #4]
 800cb02:	2b00      	cmp	r3, #0
 800cb04:	d0fa      	beq.n	800cafc <xQueueSemaphoreTake+0x80>
 800cb06:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cb0a:	f383 8811 	msr	BASEPRI, r3
 800cb0e:	f3bf 8f6f 	isb	sy
 800cb12:	f3bf 8f4f 	dsb	sy
 800cb16:	e7fe      	b.n	800cb16 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 800cb18:	9b01      	ldr	r3, [sp, #4]
 800cb1a:	b953      	cbnz	r3, 800cb32 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800cb1c:	2d00      	cmp	r5, #0
 800cb1e:	d066      	beq.n	800cbee <xQueueSemaphoreTake+0x172>
 800cb20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cb24:	f383 8811 	msr	BASEPRI, r3
 800cb28:	f3bf 8f6f 	isb	sy
 800cb2c:	f3bf 8f4f 	dsb	sy
 800cb30:	e7fe      	b.n	800cb30 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 800cb32:	b916      	cbnz	r6, 800cb3a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800cb34:	a802      	add	r0, sp, #8
 800cb36:	f000 fd0b 	bl	800d550 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800cb3a:	f7ff fb03 	bl	800c144 <vPortExitCritical>
		vTaskSuspendAll();
 800cb3e:	f000 fb19 	bl	800d174 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800cb42:	f7ff fadf 	bl	800c104 <vPortEnterCritical>
 800cb46:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800cb4a:	2bff      	cmp	r3, #255	@ 0xff
 800cb4c:	bf08      	it	eq
 800cb4e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 800cb52:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800cb56:	2bff      	cmp	r3, #255	@ 0xff
 800cb58:	bf08      	it	eq
 800cb5a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800cb5e:	f7ff faf1 	bl	800c144 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800cb62:	a901      	add	r1, sp, #4
 800cb64:	a802      	add	r0, sp, #8
 800cb66:	f000 fcff 	bl	800d568 <xTaskCheckForTimeOut>
 800cb6a:	bb50      	cbnz	r0, 800cbc2 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800cb6c:	4620      	mov	r0, r4
 800cb6e:	f7ff fc09 	bl	800c384 <prvIsQueueEmpty>
 800cb72:	b300      	cbz	r0, 800cbb6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800cb74:	6823      	ldr	r3, [r4, #0]
 800cb76:	b93b      	cbnz	r3, 800cb88 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 800cb78:	f7ff fac4 	bl	800c104 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800cb7c:	68a0      	ldr	r0, [r4, #8]
 800cb7e:	f000 fd45 	bl	800d60c <xTaskPriorityInherit>
 800cb82:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800cb84:	f7ff fade 	bl	800c144 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800cb88:	9901      	ldr	r1, [sp, #4]
 800cb8a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800cb8e:	f000 fc67 	bl	800d460 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800cb92:	4620      	mov	r0, r4
 800cb94:	f7ff fc4a 	bl	800c42c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800cb98:	f000 fb90 	bl	800d2bc <xTaskResumeAll>
 800cb9c:	b948      	cbnz	r0, 800cbb2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 800cb9e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800cba2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800cba6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800cbaa:	f3bf 8f4f 	dsb	sy
 800cbae:	f3bf 8f6f 	isb	sy
 800cbb2:	2601      	movs	r6, #1
 800cbb4:	e781      	b.n	800caba <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 800cbb6:	4620      	mov	r0, r4
 800cbb8:	f7ff fc38 	bl	800c42c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800cbbc:	f000 fb7e 	bl	800d2bc <xTaskResumeAll>
 800cbc0:	e7f7      	b.n	800cbb2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 800cbc2:	4620      	mov	r0, r4
 800cbc4:	f7ff fc32 	bl	800c42c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800cbc8:	f000 fb78 	bl	800d2bc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800cbcc:	4620      	mov	r0, r4
 800cbce:	f7ff fbd9 	bl	800c384 <prvIsQueueEmpty>
 800cbd2:	2800      	cmp	r0, #0
 800cbd4:	d0ed      	beq.n	800cbb2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 800cbd6:	b165      	cbz	r5, 800cbf2 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 800cbd8:	f7ff fa94 	bl	800c104 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800cbdc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800cbde:	b119      	cbz	r1, 800cbe8 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800cbe0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800cbe2:	6819      	ldr	r1, [r3, #0]
 800cbe4:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800cbe8:	68a0      	ldr	r0, [r4, #8]
 800cbea:	f000 fd8f 	bl	800d70c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800cbee:	f7ff faa9 	bl	800c144 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800cbf2:	2000      	movs	r0, #0
 800cbf4:	e780      	b.n	800caf8 <xQueueSemaphoreTake+0x7c>

0800cbf6 <xQueueReceiveFromISR>:
{
 800cbf6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cbfa:	4689      	mov	r9, r1
 800cbfc:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800cbfe:	4604      	mov	r4, r0
 800cc00:	b940      	cbnz	r0, 800cc14 <xQueueReceiveFromISR+0x1e>
 800cc02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cc06:	f383 8811 	msr	BASEPRI, r3
 800cc0a:	f3bf 8f6f 	isb	sy
 800cc0e:	f3bf 8f4f 	dsb	sy
 800cc12:	e7fe      	b.n	800cc12 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800cc14:	b951      	cbnz	r1, 800cc2c <xQueueReceiveFromISR+0x36>
 800cc16:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800cc18:	b143      	cbz	r3, 800cc2c <xQueueReceiveFromISR+0x36>
 800cc1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cc1e:	f383 8811 	msr	BASEPRI, r3
 800cc22:	f3bf 8f6f 	isb	sy
 800cc26:	f3bf 8f4f 	dsb	sy
 800cc2a:	e7fe      	b.n	800cc2a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800cc2c:	f7ff fb7c 	bl	800c328 <vPortValidateInterruptPriority>
	__asm volatile
 800cc30:	f3ef 8711 	mrs	r7, BASEPRI
 800cc34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cc38:	f383 8811 	msr	BASEPRI, r3
 800cc3c:	f3bf 8f6f 	isb	sy
 800cc40:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800cc44:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800cc46:	b30d      	cbz	r5, 800cc8c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 800cc48:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800cc4c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800cc4e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800cc50:	4620      	mov	r0, r4
 800cc52:	f7ff fbd5 	bl	800c400 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800cc56:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800cc58:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800cc5a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800cc5c:	d111      	bne.n	800cc82 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cc5e:	6923      	ldr	r3, [r4, #16]
 800cc60:	b153      	cbz	r3, 800cc78 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cc62:	f104 0010 	add.w	r0, r4, #16
 800cc66:	f000 fc33 	bl	800d4d0 <xTaskRemoveFromEventList>
 800cc6a:	b128      	cbz	r0, 800cc78 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 800cc6c:	f1b8 0f00 	cmp.w	r8, #0
 800cc70:	d002      	beq.n	800cc78 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800cc72:	2301      	movs	r3, #1
 800cc74:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 800cc78:	2001      	movs	r0, #1
	__asm volatile
 800cc7a:	f387 8811 	msr	BASEPRI, r7
}
 800cc7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800cc82:	3601      	adds	r6, #1
 800cc84:	b276      	sxtb	r6, r6
 800cc86:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800cc8a:	e7f5      	b.n	800cc78 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 800cc8c:	4628      	mov	r0, r5
 800cc8e:	e7f4      	b.n	800cc7a <xQueueReceiveFromISR+0x84>

0800cc90 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800cc90:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800cc92:	4a07      	ldr	r2, [pc, #28]	@ (800ccb0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800cc94:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800cc96:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800cc9a:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800cc9e:	b91d      	cbnz	r5, 800cca8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800cca0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800cca4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800cca6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800cca8:	3301      	adds	r3, #1
 800ccaa:	2b08      	cmp	r3, #8
 800ccac:	d1f3      	bne.n	800cc96 <vQueueAddToRegistry+0x6>
 800ccae:	e7fa      	b.n	800cca6 <vQueueAddToRegistry+0x16>
 800ccb0:	200138ec 	.word	0x200138ec

0800ccb4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800ccb4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ccb6:	4a09      	ldr	r2, [pc, #36]	@ (800ccdc <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ccb8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ccba:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800ccbe:	4281      	cmp	r1, r0
 800ccc0:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800ccc4:	d106      	bne.n	800ccd4 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800ccc6:	4a06      	ldr	r2, [pc, #24]	@ (800cce0 <vQueueUnregisterQueue+0x2c>)
 800ccc8:	2100      	movs	r1, #0
 800ccca:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800ccce:	4422      	add	r2, r4
 800ccd0:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800ccd2:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ccd4:	3301      	adds	r3, #1
 800ccd6:	2b08      	cmp	r3, #8
 800ccd8:	d1ef      	bne.n	800ccba <vQueueUnregisterQueue+0x6>
 800ccda:	e7fa      	b.n	800ccd2 <vQueueUnregisterQueue+0x1e>
 800ccdc:	200138f0 	.word	0x200138f0
 800cce0:	200138ec 	.word	0x200138ec

0800cce4 <vQueueDelete>:
{
 800cce4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800cce6:	b940      	cbnz	r0, 800ccfa <vQueueDelete+0x16>
	__asm volatile
 800cce8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ccec:	f383 8811 	msr	BASEPRI, r3
 800ccf0:	f3bf 8f6f 	isb	sy
 800ccf4:	f3bf 8f4f 	dsb	sy
 800ccf8:	e7fe      	b.n	800ccf8 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800ccfa:	f7ff ffdb 	bl	800ccb4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800ccfe:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 800cd02:	b91b      	cbnz	r3, 800cd0c <vQueueDelete+0x28>
}
 800cd04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800cd08:	f7ff b914 	b.w	800bf34 <vPortFree>
}
 800cd0c:	bd10      	pop	{r4, pc}

0800cd0e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800cd0e:	b570      	push	{r4, r5, r6, lr}
 800cd10:	4604      	mov	r4, r0
 800cd12:	460d      	mov	r5, r1
 800cd14:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800cd16:	f7ff f9f5 	bl	800c104 <vPortEnterCritical>
 800cd1a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800cd1e:	2bff      	cmp	r3, #255	@ 0xff
 800cd20:	bf04      	itt	eq
 800cd22:	2300      	moveq	r3, #0
 800cd24:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 800cd28:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800cd2c:	2bff      	cmp	r3, #255	@ 0xff
 800cd2e:	bf04      	itt	eq
 800cd30:	2300      	moveq	r3, #0
 800cd32:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800cd36:	f7ff fa05 	bl	800c144 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800cd3a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800cd3c:	b92b      	cbnz	r3, 800cd4a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800cd3e:	4632      	mov	r2, r6
 800cd40:	4629      	mov	r1, r5
 800cd42:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800cd46:	f000 fba5 	bl	800d494 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800cd4a:	4620      	mov	r0, r4
	}
 800cd4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800cd50:	f7ff bb6c 	b.w	800c42c <prvUnlockQueue>

0800cd54 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800cd54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd58:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800cd5a:	f7ff f9d3 	bl	800c104 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800cd5e:	4b30      	ldr	r3, [pc, #192]	@ (800ce20 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800cd60:	4e30      	ldr	r6, [pc, #192]	@ (800ce24 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800cd62:	681a      	ldr	r2, [r3, #0]
 800cd64:	4f30      	ldr	r7, [pc, #192]	@ (800ce28 <prvAddNewTaskToReadyList+0xd4>)
 800cd66:	3201      	adds	r2, #1
 800cd68:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800cd6a:	6835      	ldr	r5, [r6, #0]
 800cd6c:	2d00      	cmp	r5, #0
 800cd6e:	d14b      	bne.n	800ce08 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800cd70:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800cd72:	681b      	ldr	r3, [r3, #0]
 800cd74:	2b01      	cmp	r3, #1
 800cd76:	d11f      	bne.n	800cdb8 <prvAddNewTaskToReadyList+0x64>
 800cd78:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800cd7a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800cd7c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800cd7e:	f7ff f917 	bl	800bfb0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800cd82:	2d38      	cmp	r5, #56	@ 0x38
 800cd84:	f108 0814 	add.w	r8, r8, #20
 800cd88:	d1f7      	bne.n	800cd7a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800cd8a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 800ce50 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800cd8e:	4d27      	ldr	r5, [pc, #156]	@ (800ce2c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800cd90:	4640      	mov	r0, r8
 800cd92:	f7ff f90d 	bl	800bfb0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800cd96:	4628      	mov	r0, r5
 800cd98:	f7ff f90a 	bl	800bfb0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800cd9c:	4824      	ldr	r0, [pc, #144]	@ (800ce30 <prvAddNewTaskToReadyList+0xdc>)
 800cd9e:	f7ff f907 	bl	800bfb0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800cda2:	4824      	ldr	r0, [pc, #144]	@ (800ce34 <prvAddNewTaskToReadyList+0xe0>)
 800cda4:	f7ff f904 	bl	800bfb0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800cda8:	4823      	ldr	r0, [pc, #140]	@ (800ce38 <prvAddNewTaskToReadyList+0xe4>)
 800cdaa:	f7ff f901 	bl	800bfb0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800cdae:	4b23      	ldr	r3, [pc, #140]	@ (800ce3c <prvAddNewTaskToReadyList+0xe8>)
 800cdb0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800cdb4:	4b22      	ldr	r3, [pc, #136]	@ (800ce40 <prvAddNewTaskToReadyList+0xec>)
 800cdb6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800cdb8:	4a22      	ldr	r2, [pc, #136]	@ (800ce44 <prvAddNewTaskToReadyList+0xf0>)
 800cdba:	6813      	ldr	r3, [r2, #0]
 800cdbc:	3301      	adds	r3, #1
 800cdbe:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800cdc0:	4a21      	ldr	r2, [pc, #132]	@ (800ce48 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800cdc2:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800cdc4:	6811      	ldr	r1, [r2, #0]
 800cdc6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800cdc8:	2014      	movs	r0, #20
 800cdca:	428b      	cmp	r3, r1
 800cdcc:	fb00 7003 	mla	r0, r0, r3, r7
 800cdd0:	f104 0104 	add.w	r1, r4, #4
 800cdd4:	bf88      	it	hi
 800cdd6:	6013      	strhi	r3, [r2, #0]
 800cdd8:	f7ff f8f8 	bl	800bfcc <vListInsertEnd>
	taskEXIT_CRITICAL();
 800cddc:	f7ff f9b2 	bl	800c144 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800cde0:	4b1a      	ldr	r3, [pc, #104]	@ (800ce4c <prvAddNewTaskToReadyList+0xf8>)
 800cde2:	681b      	ldr	r3, [r3, #0]
 800cde4:	b173      	cbz	r3, 800ce04 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800cde6:	6833      	ldr	r3, [r6, #0]
 800cde8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800cdea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800cdec:	429a      	cmp	r2, r3
 800cdee:	d209      	bcs.n	800ce04 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800cdf0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800cdf4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800cdf8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800cdfc:	f3bf 8f4f 	dsb	sy
 800ce00:	f3bf 8f6f 	isb	sy
}
 800ce04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800ce08:	4b10      	ldr	r3, [pc, #64]	@ (800ce4c <prvAddNewTaskToReadyList+0xf8>)
 800ce0a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ce0c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800ce0e:	2a00      	cmp	r2, #0
 800ce10:	d1d2      	bne.n	800cdb8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ce12:	6832      	ldr	r2, [r6, #0]
 800ce14:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800ce16:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800ce18:	bf98      	it	ls
 800ce1a:	6034      	strls	r4, [r6, #0]
 800ce1c:	e7cc      	b.n	800cdb8 <prvAddNewTaskToReadyList+0x64>
 800ce1e:	bf00      	nop
 800ce20:	20013950 	.word	0x20013950
 800ce24:	20013e24 	.word	0x20013e24
 800ce28:	200139c4 	.word	0x200139c4
 800ce2c:	2001399c 	.word	0x2001399c
 800ce30:	20013980 	.word	0x20013980
 800ce34:	2001396c 	.word	0x2001396c
 800ce38:	20013954 	.word	0x20013954
 800ce3c:	20013998 	.word	0x20013998
 800ce40:	20013994 	.word	0x20013994
 800ce44:	20013934 	.word	0x20013934
 800ce48:	20013948 	.word	0x20013948
 800ce4c:	20013944 	.word	0x20013944
 800ce50:	200139b0 	.word	0x200139b0

0800ce54 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800ce54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800ce56:	4b15      	ldr	r3, [pc, #84]	@ (800ceac <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ce58:	4d15      	ldr	r5, [pc, #84]	@ (800ceb0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800ce5a:	681c      	ldr	r4, [r3, #0]
{
 800ce5c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ce5e:	6828      	ldr	r0, [r5, #0]
 800ce60:	3004      	adds	r0, #4
{
 800ce62:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ce64:	f7ff f8d4 	bl	800c010 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800ce68:	1c73      	adds	r3, r6, #1
 800ce6a:	d107      	bne.n	800ce7c <prvAddCurrentTaskToDelayedList+0x28>
 800ce6c:	b137      	cbz	r7, 800ce7c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ce6e:	6829      	ldr	r1, [r5, #0]
 800ce70:	4810      	ldr	r0, [pc, #64]	@ (800ceb4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800ce72:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ce76:	3104      	adds	r1, #4
 800ce78:	f7ff b8a8 	b.w	800bfcc <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ce7c:	682b      	ldr	r3, [r5, #0]
 800ce7e:	19a4      	adds	r4, r4, r6
 800ce80:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ce82:	d307      	bcc.n	800ce94 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ce84:	4b0c      	ldr	r3, [pc, #48]	@ (800ceb8 <prvAddCurrentTaskToDelayedList+0x64>)
 800ce86:	6818      	ldr	r0, [r3, #0]
 800ce88:	6829      	ldr	r1, [r5, #0]
}
 800ce8a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ce8e:	3104      	adds	r1, #4
 800ce90:	f7ff b8a7 	b.w	800bfe2 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ce94:	4b09      	ldr	r3, [pc, #36]	@ (800cebc <prvAddCurrentTaskToDelayedList+0x68>)
 800ce96:	6818      	ldr	r0, [r3, #0]
 800ce98:	6829      	ldr	r1, [r5, #0]
 800ce9a:	3104      	adds	r1, #4
 800ce9c:	f7ff f8a1 	bl	800bfe2 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800cea0:	4b07      	ldr	r3, [pc, #28]	@ (800cec0 <prvAddCurrentTaskToDelayedList+0x6c>)
 800cea2:	681a      	ldr	r2, [r3, #0]
 800cea4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800cea6:	bf88      	it	hi
 800cea8:	601c      	strhi	r4, [r3, #0]
}
 800ceaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ceac:	2001394c 	.word	0x2001394c
 800ceb0:	20013e24 	.word	0x20013e24
 800ceb4:	20013954 	.word	0x20013954
 800ceb8:	20013994 	.word	0x20013994
 800cebc:	20013998 	.word	0x20013998
 800cec0:	20013930 	.word	0x20013930

0800cec4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800cec4:	4a06      	ldr	r2, [pc, #24]	@ (800cee0 <prvResetNextTaskUnblockTime+0x1c>)
 800cec6:	6813      	ldr	r3, [r2, #0]
 800cec8:	6819      	ldr	r1, [r3, #0]
 800ceca:	4b06      	ldr	r3, [pc, #24]	@ (800cee4 <prvResetNextTaskUnblockTime+0x20>)
 800cecc:	b919      	cbnz	r1, 800ced6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800cece:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ced2:	601a      	str	r2, [r3, #0]
}
 800ced4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ced6:	6812      	ldr	r2, [r2, #0]
 800ced8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ceda:	68d2      	ldr	r2, [r2, #12]
 800cedc:	6852      	ldr	r2, [r2, #4]
 800cede:	e7f8      	b.n	800ced2 <prvResetNextTaskUnblockTime+0xe>
 800cee0:	20013998 	.word	0x20013998
 800cee4:	20013930 	.word	0x20013930

0800cee8 <prvDeleteTCB>:
	{
 800cee8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800ceea:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800ceee:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800cef0:	b93b      	cbnz	r3, 800cf02 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800cef2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800cef4:	f7ff f81e 	bl	800bf34 <vPortFree>
				vPortFree( pxTCB );
 800cef8:	4620      	mov	r0, r4
	}
 800cefa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800cefe:	f7ff b819 	b.w	800bf34 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800cf02:	2b01      	cmp	r3, #1
 800cf04:	d0f9      	beq.n	800cefa <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800cf06:	2b02      	cmp	r3, #2
 800cf08:	d008      	beq.n	800cf1c <prvDeleteTCB+0x34>
 800cf0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cf0e:	f383 8811 	msr	BASEPRI, r3
 800cf12:	f3bf 8f6f 	isb	sy
 800cf16:	f3bf 8f4f 	dsb	sy
 800cf1a:	e7fe      	b.n	800cf1a <prvDeleteTCB+0x32>
	}
 800cf1c:	bd10      	pop	{r4, pc}
	...

0800cf20 <prvIdleTask>:
{
 800cf20:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800cf22:	4c13      	ldr	r4, [pc, #76]	@ (800cf70 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800cf24:	4f13      	ldr	r7, [pc, #76]	@ (800cf74 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800cf26:	4d14      	ldr	r5, [pc, #80]	@ (800cf78 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800cf28:	6823      	ldr	r3, [r4, #0]
 800cf2a:	b973      	cbnz	r3, 800cf4a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800cf2c:	4b13      	ldr	r3, [pc, #76]	@ (800cf7c <prvIdleTask+0x5c>)
 800cf2e:	681b      	ldr	r3, [r3, #0]
 800cf30:	2b01      	cmp	r3, #1
 800cf32:	d9f8      	bls.n	800cf26 <prvIdleTask+0x6>
				taskYIELD();
 800cf34:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800cf38:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800cf3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800cf40:	f3bf 8f4f 	dsb	sy
 800cf44:	f3bf 8f6f 	isb	sy
 800cf48:	e7ed      	b.n	800cf26 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800cf4a:	f7ff f8db 	bl	800c104 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800cf4e:	68fb      	ldr	r3, [r7, #12]
 800cf50:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800cf52:	1d30      	adds	r0, r6, #4
 800cf54:	f7ff f85c 	bl	800c010 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800cf58:	682b      	ldr	r3, [r5, #0]
 800cf5a:	3b01      	subs	r3, #1
 800cf5c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800cf5e:	6823      	ldr	r3, [r4, #0]
 800cf60:	3b01      	subs	r3, #1
 800cf62:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800cf64:	f7ff f8ee 	bl	800c144 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800cf68:	4630      	mov	r0, r6
 800cf6a:	f7ff ffbd 	bl	800cee8 <prvDeleteTCB>
 800cf6e:	e7db      	b.n	800cf28 <prvIdleTask+0x8>
 800cf70:	20013968 	.word	0x20013968
 800cf74:	2001396c 	.word	0x2001396c
 800cf78:	20013950 	.word	0x20013950
 800cf7c:	200139c4 	.word	0x200139c4

0800cf80 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800cf80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cf84:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800cf88:	0096      	lsls	r6, r2, #2
 800cf8a:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800cf8c:	4607      	mov	r7, r0
 800cf8e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800cf90:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800cf92:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800cf94:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800cf96:	f01b f972 	bl	802827e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800cf9a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800cf9c:	3e04      	subs	r6, #4
 800cf9e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800cfa0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 800cfa4:	b3b5      	cbz	r5, 800d014 <prvInitialiseNewTask.constprop.0+0x94>
 800cfa6:	1e6b      	subs	r3, r5, #1
 800cfa8:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 800cfac:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800cfae:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800cfb2:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800cfb6:	b109      	cbz	r1, 800cfbc <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800cfb8:	42ab      	cmp	r3, r5
 800cfba:	d1f8      	bne.n	800cfae <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800cfbc:	2300      	movs	r3, #0
 800cfbe:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800cfc2:	9d08      	ldr	r5, [sp, #32]
 800cfc4:	2d37      	cmp	r5, #55	@ 0x37
 800cfc6:	bf28      	it	cs
 800cfc8:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800cfca:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800cfce:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800cfd0:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800cfd2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800cfd4:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800cfd8:	f7fe fff5 	bl	800bfc6 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800cfdc:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800cfe0:	f104 0018 	add.w	r0, r4, #24
 800cfe4:	f7fe ffef 	bl	800bfc6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800cfe8:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800cfec:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800cfee:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800cff0:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800cff2:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800cff6:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800cffa:	4642      	mov	r2, r8
 800cffc:	4639      	mov	r1, r7
 800cffe:	4630      	mov	r0, r6
 800d000:	f7ff f854 	bl	800c0ac <pxPortInitialiseStack>
 800d004:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800d006:	f1b9 0f00 	cmp.w	r9, #0
 800d00a:	d001      	beq.n	800d010 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800d00c:	f8c9 4000 	str.w	r4, [r9]
}
 800d010:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800d014:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800d018:	e7d3      	b.n	800cfc2 <prvInitialiseNewTask.constprop.0+0x42>

0800d01a <xTaskCreateStatic>:
	{
 800d01a:	b570      	push	{r4, r5, r6, lr}
 800d01c:	b086      	sub	sp, #24
 800d01e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 800d022:	b945      	cbnz	r5, 800d036 <xTaskCreateStatic+0x1c>
 800d024:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d028:	f383 8811 	msr	BASEPRI, r3
 800d02c:	f3bf 8f6f 	isb	sy
 800d030:	f3bf 8f4f 	dsb	sy
 800d034:	e7fe      	b.n	800d034 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800d036:	b944      	cbnz	r4, 800d04a <xTaskCreateStatic+0x30>
 800d038:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d03c:	f383 8811 	msr	BASEPRI, r3
 800d040:	f3bf 8f6f 	isb	sy
 800d044:	f3bf 8f4f 	dsb	sy
 800d048:	e7fe      	b.n	800d048 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800d04a:	2660      	movs	r6, #96	@ 0x60
 800d04c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800d04e:	9e05      	ldr	r6, [sp, #20]
 800d050:	2e60      	cmp	r6, #96	@ 0x60
 800d052:	d008      	beq.n	800d066 <xTaskCreateStatic+0x4c>
 800d054:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d058:	f383 8811 	msr	BASEPRI, r3
 800d05c:	f3bf 8f6f 	isb	sy
 800d060:	f3bf 8f4f 	dsb	sy
 800d064:	e7fe      	b.n	800d064 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800d066:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800d068:	2502      	movs	r5, #2
 800d06a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d06e:	ad04      	add	r5, sp, #16
 800d070:	9501      	str	r5, [sp, #4]
 800d072:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800d074:	9402      	str	r4, [sp, #8]
 800d076:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800d078:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d07a:	f7ff ff81 	bl	800cf80 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800d07e:	4620      	mov	r0, r4
 800d080:	f7ff fe68 	bl	800cd54 <prvAddNewTaskToReadyList>
	}
 800d084:	9804      	ldr	r0, [sp, #16]
 800d086:	b006      	add	sp, #24
 800d088:	bd70      	pop	{r4, r5, r6, pc}

0800d08a <xTaskCreate>:
	{
 800d08a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d08e:	4607      	mov	r7, r0
 800d090:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800d092:	0090      	lsls	r0, r2, #2
	{
 800d094:	4688      	mov	r8, r1
 800d096:	4616      	mov	r6, r2
 800d098:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800d09a:	f7fe feb3 	bl	800be04 <pvPortMalloc>
			if( pxStack != NULL )
 800d09e:	4605      	mov	r5, r0
 800d0a0:	b920      	cbnz	r0, 800d0ac <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800d0a2:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800d0a6:	b005      	add	sp, #20
 800d0a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800d0ac:	2060      	movs	r0, #96	@ 0x60
 800d0ae:	f7fe fea9 	bl	800be04 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800d0b2:	4604      	mov	r4, r0
 800d0b4:	b198      	cbz	r0, 800d0de <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800d0b6:	2300      	movs	r3, #0
 800d0b8:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800d0bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 800d0be:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800d0c0:	9301      	str	r3, [sp, #4]
 800d0c2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d0c4:	9002      	str	r0, [sp, #8]
 800d0c6:	9300      	str	r3, [sp, #0]
 800d0c8:	4632      	mov	r2, r6
 800d0ca:	464b      	mov	r3, r9
 800d0cc:	4641      	mov	r1, r8
 800d0ce:	4638      	mov	r0, r7
 800d0d0:	f7ff ff56 	bl	800cf80 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800d0d4:	4620      	mov	r0, r4
 800d0d6:	f7ff fe3d 	bl	800cd54 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800d0da:	2001      	movs	r0, #1
 800d0dc:	e7e3      	b.n	800d0a6 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800d0de:	4628      	mov	r0, r5
 800d0e0:	f7fe ff28 	bl	800bf34 <vPortFree>
		if( pxNewTCB != NULL )
 800d0e4:	e7dd      	b.n	800d0a2 <xTaskCreate+0x18>
	...

0800d0e8 <vTaskStartScheduler>:
{
 800d0e8:	b510      	push	{r4, lr}
 800d0ea:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800d0ec:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800d0ee:	aa07      	add	r2, sp, #28
 800d0f0:	a906      	add	r1, sp, #24
 800d0f2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800d0f4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800d0f8:	f7fe fe46 	bl	800bd88 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800d0fc:	9b05      	ldr	r3, [sp, #20]
 800d0fe:	9302      	str	r3, [sp, #8]
 800d100:	9b06      	ldr	r3, [sp, #24]
 800d102:	9a07      	ldr	r2, [sp, #28]
 800d104:	4916      	ldr	r1, [pc, #88]	@ (800d160 <vTaskStartScheduler+0x78>)
 800d106:	4817      	ldr	r0, [pc, #92]	@ (800d164 <vTaskStartScheduler+0x7c>)
 800d108:	e9cd 4300 	strd	r4, r3, [sp]
 800d10c:	4623      	mov	r3, r4
 800d10e:	f7ff ff84 	bl	800d01a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800d112:	b318      	cbz	r0, 800d15c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800d114:	f000 fba6 	bl	800d864 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800d118:	2801      	cmp	r0, #1
 800d11a:	d114      	bne.n	800d146 <vTaskStartScheduler+0x5e>
 800d11c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d120:	f383 8811 	msr	BASEPRI, r3
 800d124:	f3bf 8f6f 	isb	sy
 800d128:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800d12c:	4b0e      	ldr	r3, [pc, #56]	@ (800d168 <vTaskStartScheduler+0x80>)
 800d12e:	f04f 32ff 	mov.w	r2, #4294967295
 800d132:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800d134:	4b0d      	ldr	r3, [pc, #52]	@ (800d16c <vTaskStartScheduler+0x84>)
 800d136:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800d138:	4b0d      	ldr	r3, [pc, #52]	@ (800d170 <vTaskStartScheduler+0x88>)
 800d13a:	601c      	str	r4, [r3, #0]
}
 800d13c:	b008      	add	sp, #32
 800d13e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800d142:	f7ff b86f 	b.w	800c224 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800d146:	3001      	adds	r0, #1
 800d148:	d108      	bne.n	800d15c <vTaskStartScheduler+0x74>
 800d14a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d14e:	f383 8811 	msr	BASEPRI, r3
 800d152:	f3bf 8f6f 	isb	sy
 800d156:	f3bf 8f4f 	dsb	sy
 800d15a:	e7fe      	b.n	800d15a <vTaskStartScheduler+0x72>
}
 800d15c:	b008      	add	sp, #32
 800d15e:	bd10      	pop	{r4, pc}
 800d160:	0802a186 	.word	0x0802a186
 800d164:	0800cf21 	.word	0x0800cf21
 800d168:	20013930 	.word	0x20013930
 800d16c:	20013944 	.word	0x20013944
 800d170:	2001394c 	.word	0x2001394c

0800d174 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800d174:	4a02      	ldr	r2, [pc, #8]	@ (800d180 <vTaskSuspendAll+0xc>)
 800d176:	6813      	ldr	r3, [r2, #0]
 800d178:	3301      	adds	r3, #1
 800d17a:	6013      	str	r3, [r2, #0]
}
 800d17c:	4770      	bx	lr
 800d17e:	bf00      	nop
 800d180:	2001392c 	.word	0x2001392c

0800d184 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800d184:	4b01      	ldr	r3, [pc, #4]	@ (800d18c <xTaskGetTickCount+0x8>)
 800d186:	6818      	ldr	r0, [r3, #0]
}
 800d188:	4770      	bx	lr
 800d18a:	bf00      	nop
 800d18c:	2001394c 	.word	0x2001394c

0800d190 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d190:	4b3f      	ldr	r3, [pc, #252]	@ (800d290 <xTaskIncrementTick+0x100>)
 800d192:	681b      	ldr	r3, [r3, #0]
{
 800d194:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d198:	2b00      	cmp	r3, #0
 800d19a:	d172      	bne.n	800d282 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800d19c:	4b3d      	ldr	r3, [pc, #244]	@ (800d294 <xTaskIncrementTick+0x104>)
 800d19e:	681c      	ldr	r4, [r3, #0]
 800d1a0:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800d1a2:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800d1a4:	b9bc      	cbnz	r4, 800d1d6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800d1a6:	4b3c      	ldr	r3, [pc, #240]	@ (800d298 <xTaskIncrementTick+0x108>)
 800d1a8:	681a      	ldr	r2, [r3, #0]
 800d1aa:	6812      	ldr	r2, [r2, #0]
 800d1ac:	b142      	cbz	r2, 800d1c0 <xTaskIncrementTick+0x30>
 800d1ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d1b2:	f383 8811 	msr	BASEPRI, r3
 800d1b6:	f3bf 8f6f 	isb	sy
 800d1ba:	f3bf 8f4f 	dsb	sy
 800d1be:	e7fe      	b.n	800d1be <xTaskIncrementTick+0x2e>
 800d1c0:	4a36      	ldr	r2, [pc, #216]	@ (800d29c <xTaskIncrementTick+0x10c>)
 800d1c2:	6819      	ldr	r1, [r3, #0]
 800d1c4:	6810      	ldr	r0, [r2, #0]
 800d1c6:	6018      	str	r0, [r3, #0]
 800d1c8:	6011      	str	r1, [r2, #0]
 800d1ca:	4a35      	ldr	r2, [pc, #212]	@ (800d2a0 <xTaskIncrementTick+0x110>)
 800d1cc:	6813      	ldr	r3, [r2, #0]
 800d1ce:	3301      	adds	r3, #1
 800d1d0:	6013      	str	r3, [r2, #0]
 800d1d2:	f7ff fe77 	bl	800cec4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800d1d6:	4d33      	ldr	r5, [pc, #204]	@ (800d2a4 <xTaskIncrementTick+0x114>)
 800d1d8:	4e33      	ldr	r6, [pc, #204]	@ (800d2a8 <xTaskIncrementTick+0x118>)
 800d1da:	682b      	ldr	r3, [r5, #0]
 800d1dc:	4f33      	ldr	r7, [pc, #204]	@ (800d2ac <xTaskIncrementTick+0x11c>)
 800d1de:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 800d1e0:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800d1e4:	d212      	bcs.n	800d20c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800d1e6:	683a      	ldr	r2, [r7, #0]
 800d1e8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800d1ea:	2114      	movs	r1, #20
 800d1ec:	434a      	muls	r2, r1
 800d1ee:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 800d1f0:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 800d1f2:	4a2f      	ldr	r2, [pc, #188]	@ (800d2b0 <xTaskIncrementTick+0x120>)
 800d1f4:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 800d1f6:	bf28      	it	cs
 800d1f8:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 800d1fc:	2a00      	cmp	r2, #0
 800d1fe:	bf18      	it	ne
 800d200:	f04f 0b01 	movne.w	fp, #1
}
 800d204:	4658      	mov	r0, fp
 800d206:	b003      	add	sp, #12
 800d208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d20c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 800d298 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800d210:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 800d2b8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d214:	f8d9 2000 	ldr.w	r2, [r9]
 800d218:	6812      	ldr	r2, [r2, #0]
 800d21a:	b91a      	cbnz	r2, 800d224 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d21c:	f04f 32ff 	mov.w	r2, #4294967295
 800d220:	602a      	str	r2, [r5, #0]
					break;
 800d222:	e7e0      	b.n	800d1e6 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d224:	f8d9 2000 	ldr.w	r2, [r9]
 800d228:	68d2      	ldr	r2, [r2, #12]
 800d22a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800d22e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 800d232:	428c      	cmp	r4, r1
 800d234:	d201      	bcs.n	800d23a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800d236:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800d238:	e7d5      	b.n	800d1e6 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d23a:	f108 0304 	add.w	r3, r8, #4
 800d23e:	4618      	mov	r0, r3
 800d240:	9301      	str	r3, [sp, #4]
 800d242:	f7fe fee5 	bl	800c010 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800d246:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 800d24a:	b119      	cbz	r1, 800d254 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d24c:	f108 0018 	add.w	r0, r8, #24
 800d250:	f7fe fede 	bl	800c010 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800d254:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 800d258:	f8da 1000 	ldr.w	r1, [sl]
 800d25c:	2314      	movs	r3, #20
 800d25e:	4288      	cmp	r0, r1
 800d260:	bf88      	it	hi
 800d262:	f8ca 0000 	strhi.w	r0, [sl]
 800d266:	9901      	ldr	r1, [sp, #4]
 800d268:	fb03 6000 	mla	r0, r3, r0, r6
 800d26c:	f7fe feae 	bl	800bfcc <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d270:	6838      	ldr	r0, [r7, #0]
 800d272:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800d276:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 800d278:	4291      	cmp	r1, r2
 800d27a:	bf28      	it	cs
 800d27c:	f04f 0b01 	movcs.w	fp, #1
 800d280:	e7c8      	b.n	800d214 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800d282:	4a0c      	ldr	r2, [pc, #48]	@ (800d2b4 <xTaskIncrementTick+0x124>)
 800d284:	6813      	ldr	r3, [r2, #0]
 800d286:	3301      	adds	r3, #1
 800d288:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800d28a:	f04f 0b00 	mov.w	fp, #0
 800d28e:	e7b9      	b.n	800d204 <xTaskIncrementTick+0x74>
 800d290:	2001392c 	.word	0x2001392c
 800d294:	2001394c 	.word	0x2001394c
 800d298:	20013998 	.word	0x20013998
 800d29c:	20013994 	.word	0x20013994
 800d2a0:	20013938 	.word	0x20013938
 800d2a4:	20013930 	.word	0x20013930
 800d2a8:	200139c4 	.word	0x200139c4
 800d2ac:	20013e24 	.word	0x20013e24
 800d2b0:	2001393c 	.word	0x2001393c
 800d2b4:	20013940 	.word	0x20013940
 800d2b8:	20013948 	.word	0x20013948

0800d2bc <xTaskResumeAll>:
{
 800d2bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800d2c0:	4c30      	ldr	r4, [pc, #192]	@ (800d384 <xTaskResumeAll+0xc8>)
 800d2c2:	6823      	ldr	r3, [r4, #0]
 800d2c4:	b943      	cbnz	r3, 800d2d8 <xTaskResumeAll+0x1c>
 800d2c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d2ca:	f383 8811 	msr	BASEPRI, r3
 800d2ce:	f3bf 8f6f 	isb	sy
 800d2d2:	f3bf 8f4f 	dsb	sy
 800d2d6:	e7fe      	b.n	800d2d6 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 800d2d8:	f7fe ff14 	bl	800c104 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800d2dc:	6823      	ldr	r3, [r4, #0]
 800d2de:	3b01      	subs	r3, #1
 800d2e0:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d2e2:	6824      	ldr	r4, [r4, #0]
 800d2e4:	b12c      	cbz	r4, 800d2f2 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800d2e6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800d2e8:	f7fe ff2c 	bl	800c144 <vPortExitCritical>
}
 800d2ec:	4620      	mov	r0, r4
 800d2ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800d2f2:	4b25      	ldr	r3, [pc, #148]	@ (800d388 <xTaskResumeAll+0xcc>)
 800d2f4:	681b      	ldr	r3, [r3, #0]
 800d2f6:	2b00      	cmp	r3, #0
 800d2f8:	d0f5      	beq.n	800d2e6 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d2fa:	4d24      	ldr	r5, [pc, #144]	@ (800d38c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800d2fc:	4e24      	ldr	r6, [pc, #144]	@ (800d390 <xTaskResumeAll+0xd4>)
 800d2fe:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800d3a0 <xTaskResumeAll+0xe4>
 800d302:	e01d      	b.n	800d340 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d304:	68eb      	ldr	r3, [r5, #12]
 800d306:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d308:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d30a:	f104 0018 	add.w	r0, r4, #24
 800d30e:	f7fe fe7f 	bl	800c010 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d312:	4638      	mov	r0, r7
 800d314:	f7fe fe7c 	bl	800c010 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800d318:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d31a:	6832      	ldr	r2, [r6, #0]
 800d31c:	2014      	movs	r0, #20
 800d31e:	4293      	cmp	r3, r2
 800d320:	fb00 8003 	mla	r0, r0, r3, r8
 800d324:	4639      	mov	r1, r7
 800d326:	bf88      	it	hi
 800d328:	6033      	strhi	r3, [r6, #0]
 800d32a:	f7fe fe4f 	bl	800bfcc <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d32e:	4b19      	ldr	r3, [pc, #100]	@ (800d394 <xTaskResumeAll+0xd8>)
 800d330:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d332:	681b      	ldr	r3, [r3, #0]
 800d334:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d336:	429a      	cmp	r2, r3
 800d338:	d302      	bcc.n	800d340 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 800d33a:	4b17      	ldr	r3, [pc, #92]	@ (800d398 <xTaskResumeAll+0xdc>)
 800d33c:	2201      	movs	r2, #1
 800d33e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d340:	682b      	ldr	r3, [r5, #0]
 800d342:	2b00      	cmp	r3, #0
 800d344:	d1de      	bne.n	800d304 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 800d346:	b10c      	cbz	r4, 800d34c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 800d348:	f7ff fdbc 	bl	800cec4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800d34c:	4d13      	ldr	r5, [pc, #76]	@ (800d39c <xTaskResumeAll+0xe0>)
 800d34e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800d350:	b144      	cbz	r4, 800d364 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800d352:	4e11      	ldr	r6, [pc, #68]	@ (800d398 <xTaskResumeAll+0xdc>)
 800d354:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800d356:	f7ff ff1b 	bl	800d190 <xTaskIncrementTick>
 800d35a:	b100      	cbz	r0, 800d35e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 800d35c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d35e:	3c01      	subs	r4, #1
 800d360:	d1f9      	bne.n	800d356 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 800d362:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800d364:	4b0c      	ldr	r3, [pc, #48]	@ (800d398 <xTaskResumeAll+0xdc>)
 800d366:	681b      	ldr	r3, [r3, #0]
 800d368:	2b00      	cmp	r3, #0
 800d36a:	d0bc      	beq.n	800d2e6 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 800d36c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d370:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d374:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d378:	f3bf 8f4f 	dsb	sy
 800d37c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800d380:	2401      	movs	r4, #1
 800d382:	e7b1      	b.n	800d2e8 <xTaskResumeAll+0x2c>
 800d384:	2001392c 	.word	0x2001392c
 800d388:	20013950 	.word	0x20013950
 800d38c:	20013980 	.word	0x20013980
 800d390:	20013948 	.word	0x20013948
 800d394:	20013e24 	.word	0x20013e24
 800d398:	2001393c 	.word	0x2001393c
 800d39c:	20013940 	.word	0x20013940
 800d3a0:	200139c4 	.word	0x200139c4

0800d3a4 <vTaskDelay>:
	{
 800d3a4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800d3a6:	b950      	cbnz	r0, 800d3be <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800d3a8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d3ac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d3b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d3b4:	f3bf 8f4f 	dsb	sy
 800d3b8:	f3bf 8f6f 	isb	sy
	}
 800d3bc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800d3be:	4b0a      	ldr	r3, [pc, #40]	@ (800d3e8 <vTaskDelay+0x44>)
 800d3c0:	6819      	ldr	r1, [r3, #0]
 800d3c2:	b141      	cbz	r1, 800d3d6 <vTaskDelay+0x32>
 800d3c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d3c8:	f383 8811 	msr	BASEPRI, r3
 800d3cc:	f3bf 8f6f 	isb	sy
 800d3d0:	f3bf 8f4f 	dsb	sy
 800d3d4:	e7fe      	b.n	800d3d4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800d3d6:	f7ff fecd 	bl	800d174 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800d3da:	f7ff fd3b 	bl	800ce54 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800d3de:	f7ff ff6d 	bl	800d2bc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800d3e2:	2800      	cmp	r0, #0
 800d3e4:	d0e0      	beq.n	800d3a8 <vTaskDelay+0x4>
 800d3e6:	e7e9      	b.n	800d3bc <vTaskDelay+0x18>
 800d3e8:	2001392c 	.word	0x2001392c

0800d3ec <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800d3ec:	4b17      	ldr	r3, [pc, #92]	@ (800d44c <vTaskSwitchContext+0x60>)
 800d3ee:	681a      	ldr	r2, [r3, #0]
 800d3f0:	4b17      	ldr	r3, [pc, #92]	@ (800d450 <vTaskSwitchContext+0x64>)
{
 800d3f2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800d3f4:	b112      	cbz	r2, 800d3fc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800d3f6:	2201      	movs	r2, #1
 800d3f8:	601a      	str	r2, [r3, #0]
}
 800d3fa:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d3fc:	4d15      	ldr	r5, [pc, #84]	@ (800d454 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800d3fe:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d400:	682a      	ldr	r2, [r5, #0]
 800d402:	4915      	ldr	r1, [pc, #84]	@ (800d458 <vTaskSwitchContext+0x6c>)
 800d404:	2614      	movs	r6, #20
 800d406:	fb06 f302 	mul.w	r3, r6, r2
 800d40a:	18c8      	adds	r0, r1, r3
 800d40c:	58cc      	ldr	r4, [r1, r3]
 800d40e:	b18c      	cbz	r4, 800d434 <vTaskSwitchContext+0x48>
 800d410:	6844      	ldr	r4, [r0, #4]
 800d412:	3308      	adds	r3, #8
 800d414:	6864      	ldr	r4, [r4, #4]
 800d416:	6044      	str	r4, [r0, #4]
 800d418:	440b      	add	r3, r1
 800d41a:	429c      	cmp	r4, r3
 800d41c:	bf04      	itt	eq
 800d41e:	6863      	ldreq	r3, [r4, #4]
 800d420:	6043      	streq	r3, [r0, #4]
 800d422:	2314      	movs	r3, #20
 800d424:	fb03 1102 	mla	r1, r3, r2, r1
 800d428:	684b      	ldr	r3, [r1, #4]
 800d42a:	68d9      	ldr	r1, [r3, #12]
 800d42c:	4b0b      	ldr	r3, [pc, #44]	@ (800d45c <vTaskSwitchContext+0x70>)
 800d42e:	6019      	str	r1, [r3, #0]
 800d430:	602a      	str	r2, [r5, #0]
}
 800d432:	e7e2      	b.n	800d3fa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d434:	b942      	cbnz	r2, 800d448 <vTaskSwitchContext+0x5c>
 800d436:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d43a:	f383 8811 	msr	BASEPRI, r3
 800d43e:	f3bf 8f6f 	isb	sy
 800d442:	f3bf 8f4f 	dsb	sy
 800d446:	e7fe      	b.n	800d446 <vTaskSwitchContext+0x5a>
 800d448:	3a01      	subs	r2, #1
 800d44a:	e7dc      	b.n	800d406 <vTaskSwitchContext+0x1a>
 800d44c:	2001392c 	.word	0x2001392c
 800d450:	2001393c 	.word	0x2001393c
 800d454:	20013948 	.word	0x20013948
 800d458:	200139c4 	.word	0x200139c4
 800d45c:	20013e24 	.word	0x20013e24

0800d460 <vTaskPlaceOnEventList>:
{
 800d460:	b510      	push	{r4, lr}
 800d462:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800d464:	b940      	cbnz	r0, 800d478 <vTaskPlaceOnEventList+0x18>
 800d466:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d46a:	f383 8811 	msr	BASEPRI, r3
 800d46e:	f3bf 8f6f 	isb	sy
 800d472:	f3bf 8f4f 	dsb	sy
 800d476:	e7fe      	b.n	800d476 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800d478:	4b05      	ldr	r3, [pc, #20]	@ (800d490 <vTaskPlaceOnEventList+0x30>)
 800d47a:	6819      	ldr	r1, [r3, #0]
 800d47c:	3118      	adds	r1, #24
 800d47e:	f7fe fdb0 	bl	800bfe2 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800d482:	4620      	mov	r0, r4
 800d484:	2101      	movs	r1, #1
}
 800d486:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800d48a:	f7ff bce3 	b.w	800ce54 <prvAddCurrentTaskToDelayedList>
 800d48e:	bf00      	nop
 800d490:	20013e24 	.word	0x20013e24

0800d494 <vTaskPlaceOnEventListRestricted>:
	{
 800d494:	b538      	push	{r3, r4, r5, lr}
 800d496:	460d      	mov	r5, r1
 800d498:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800d49a:	b940      	cbnz	r0, 800d4ae <vTaskPlaceOnEventListRestricted+0x1a>
 800d49c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d4a0:	f383 8811 	msr	BASEPRI, r3
 800d4a4:	f3bf 8f6f 	isb	sy
 800d4a8:	f3bf 8f4f 	dsb	sy
 800d4ac:	e7fe      	b.n	800d4ac <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800d4ae:	4b07      	ldr	r3, [pc, #28]	@ (800d4cc <vTaskPlaceOnEventListRestricted+0x38>)
 800d4b0:	6819      	ldr	r1, [r3, #0]
 800d4b2:	3118      	adds	r1, #24
 800d4b4:	f7fe fd8a 	bl	800bfcc <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800d4b8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800d4ba:	4621      	mov	r1, r4
 800d4bc:	bf0c      	ite	eq
 800d4be:	4628      	moveq	r0, r5
 800d4c0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800d4c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800d4c8:	f7ff bcc4 	b.w	800ce54 <prvAddCurrentTaskToDelayedList>
 800d4cc:	20013e24 	.word	0x20013e24

0800d4d0 <xTaskRemoveFromEventList>:
{
 800d4d0:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d4d2:	68c3      	ldr	r3, [r0, #12]
 800d4d4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800d4d6:	b944      	cbnz	r4, 800d4ea <xTaskRemoveFromEventList+0x1a>
 800d4d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d4dc:	f383 8811 	msr	BASEPRI, r3
 800d4e0:	f3bf 8f6f 	isb	sy
 800d4e4:	f3bf 8f4f 	dsb	sy
 800d4e8:	e7fe      	b.n	800d4e8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800d4ea:	f104 0518 	add.w	r5, r4, #24
 800d4ee:	4628      	mov	r0, r5
 800d4f0:	f7fe fd8e 	bl	800c010 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d4f4:	4b10      	ldr	r3, [pc, #64]	@ (800d538 <xTaskRemoveFromEventList+0x68>)
 800d4f6:	681b      	ldr	r3, [r3, #0]
 800d4f8:	b9db      	cbnz	r3, 800d532 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800d4fa:	1d25      	adds	r5, r4, #4
 800d4fc:	4628      	mov	r0, r5
 800d4fe:	f7fe fd87 	bl	800c010 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800d502:	4a0e      	ldr	r2, [pc, #56]	@ (800d53c <xTaskRemoveFromEventList+0x6c>)
 800d504:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d506:	6811      	ldr	r1, [r2, #0]
 800d508:	428b      	cmp	r3, r1
 800d50a:	bf88      	it	hi
 800d50c:	6013      	strhi	r3, [r2, #0]
 800d50e:	4a0c      	ldr	r2, [pc, #48]	@ (800d540 <xTaskRemoveFromEventList+0x70>)
 800d510:	2014      	movs	r0, #20
 800d512:	4629      	mov	r1, r5
 800d514:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800d518:	f7fe fd58 	bl	800bfcc <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800d51c:	4b09      	ldr	r3, [pc, #36]	@ (800d544 <xTaskRemoveFromEventList+0x74>)
 800d51e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d520:	681b      	ldr	r3, [r3, #0]
 800d522:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d524:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800d526:	bf83      	ittte	hi
 800d528:	4b07      	ldrhi	r3, [pc, #28]	@ (800d548 <xTaskRemoveFromEventList+0x78>)
 800d52a:	2001      	movhi	r0, #1
 800d52c:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800d52e:	2000      	movls	r0, #0
}
 800d530:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800d532:	4806      	ldr	r0, [pc, #24]	@ (800d54c <xTaskRemoveFromEventList+0x7c>)
 800d534:	4629      	mov	r1, r5
 800d536:	e7ef      	b.n	800d518 <xTaskRemoveFromEventList+0x48>
 800d538:	2001392c 	.word	0x2001392c
 800d53c:	20013948 	.word	0x20013948
 800d540:	200139c4 	.word	0x200139c4
 800d544:	20013e24 	.word	0x20013e24
 800d548:	2001393c 	.word	0x2001393c
 800d54c:	20013980 	.word	0x20013980

0800d550 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800d550:	4b03      	ldr	r3, [pc, #12]	@ (800d560 <vTaskInternalSetTimeOutState+0x10>)
 800d552:	681b      	ldr	r3, [r3, #0]
 800d554:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800d556:	4b03      	ldr	r3, [pc, #12]	@ (800d564 <vTaskInternalSetTimeOutState+0x14>)
 800d558:	681b      	ldr	r3, [r3, #0]
 800d55a:	6043      	str	r3, [r0, #4]
}
 800d55c:	4770      	bx	lr
 800d55e:	bf00      	nop
 800d560:	20013938 	.word	0x20013938
 800d564:	2001394c 	.word	0x2001394c

0800d568 <xTaskCheckForTimeOut>:
{
 800d568:	b570      	push	{r4, r5, r6, lr}
 800d56a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800d56c:	4605      	mov	r5, r0
 800d56e:	b940      	cbnz	r0, 800d582 <xTaskCheckForTimeOut+0x1a>
 800d570:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d574:	f383 8811 	msr	BASEPRI, r3
 800d578:	f3bf 8f6f 	isb	sy
 800d57c:	f3bf 8f4f 	dsb	sy
 800d580:	e7fe      	b.n	800d580 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800d582:	b941      	cbnz	r1, 800d596 <xTaskCheckForTimeOut+0x2e>
 800d584:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d588:	f383 8811 	msr	BASEPRI, r3
 800d58c:	f3bf 8f6f 	isb	sy
 800d590:	f3bf 8f4f 	dsb	sy
 800d594:	e7fe      	b.n	800d594 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800d596:	f7fe fdb5 	bl	800c104 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800d59a:	4b0f      	ldr	r3, [pc, #60]	@ (800d5d8 <xTaskCheckForTimeOut+0x70>)
 800d59c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800d59e:	6823      	ldr	r3, [r4, #0]
 800d5a0:	1c5a      	adds	r2, r3, #1
 800d5a2:	d010      	beq.n	800d5c6 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800d5a4:	480d      	ldr	r0, [pc, #52]	@ (800d5dc <xTaskCheckForTimeOut+0x74>)
 800d5a6:	682e      	ldr	r6, [r5, #0]
 800d5a8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800d5aa:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800d5ac:	4286      	cmp	r6, r0
 800d5ae:	d001      	beq.n	800d5b4 <xTaskCheckForTimeOut+0x4c>
 800d5b0:	428a      	cmp	r2, r1
 800d5b2:	d90f      	bls.n	800d5d4 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800d5b4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800d5b6:	4283      	cmp	r3, r0
 800d5b8:	d90a      	bls.n	800d5d0 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800d5ba:	1a5b      	subs	r3, r3, r1
 800d5bc:	4413      	add	r3, r2
 800d5be:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800d5c0:	4628      	mov	r0, r5
 800d5c2:	f7ff ffc5 	bl	800d550 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800d5c6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800d5c8:	f7fe fdbc 	bl	800c144 <vPortExitCritical>
}
 800d5cc:	4620      	mov	r0, r4
 800d5ce:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800d5d0:	2300      	movs	r3, #0
 800d5d2:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800d5d4:	2401      	movs	r4, #1
 800d5d6:	e7f7      	b.n	800d5c8 <xTaskCheckForTimeOut+0x60>
 800d5d8:	2001394c 	.word	0x2001394c
 800d5dc:	20013938 	.word	0x20013938

0800d5e0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800d5e0:	4b01      	ldr	r3, [pc, #4]	@ (800d5e8 <vTaskMissedYield+0x8>)
 800d5e2:	2201      	movs	r2, #1
 800d5e4:	601a      	str	r2, [r3, #0]
}
 800d5e6:	4770      	bx	lr
 800d5e8:	2001393c 	.word	0x2001393c

0800d5ec <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800d5ec:	4b05      	ldr	r3, [pc, #20]	@ (800d604 <xTaskGetSchedulerState+0x18>)
 800d5ee:	681b      	ldr	r3, [r3, #0]
 800d5f0:	b133      	cbz	r3, 800d600 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d5f2:	4b05      	ldr	r3, [pc, #20]	@ (800d608 <xTaskGetSchedulerState+0x1c>)
 800d5f4:	6818      	ldr	r0, [r3, #0]
 800d5f6:	fab0 f080 	clz	r0, r0
 800d5fa:	0940      	lsrs	r0, r0, #5
 800d5fc:	0040      	lsls	r0, r0, #1
 800d5fe:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800d600:	2001      	movs	r0, #1
	}
 800d602:	4770      	bx	lr
 800d604:	20013944 	.word	0x20013944
 800d608:	2001392c 	.word	0x2001392c

0800d60c <xTaskPriorityInherit>:
	{
 800d60c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800d60e:	4604      	mov	r4, r0
 800d610:	b338      	cbz	r0, 800d662 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800d612:	4d1a      	ldr	r5, [pc, #104]	@ (800d67c <xTaskPriorityInherit+0x70>)
 800d614:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800d616:	682a      	ldr	r2, [r5, #0]
 800d618:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800d61a:	4293      	cmp	r3, r2
 800d61c:	d226      	bcs.n	800d66c <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800d61e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800d620:	4e17      	ldr	r6, [pc, #92]	@ (800d680 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800d622:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d624:	bfa1      	itttt	ge
 800d626:	682a      	ldrge	r2, [r5, #0]
 800d628:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800d62a:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800d62e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800d630:	2214      	movs	r2, #20
 800d632:	fb02 6303 	mla	r3, r2, r3, r6
 800d636:	6942      	ldr	r2, [r0, #20]
 800d638:	429a      	cmp	r2, r3
 800d63a:	d113      	bne.n	800d664 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d63c:	1d07      	adds	r7, r0, #4
 800d63e:	4638      	mov	r0, r7
 800d640:	f7fe fce6 	bl	800c010 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800d644:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800d646:	4a0f      	ldr	r2, [pc, #60]	@ (800d684 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800d648:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800d64a:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800d64c:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800d64e:	2014      	movs	r0, #20
 800d650:	428b      	cmp	r3, r1
 800d652:	fb00 6003 	mla	r0, r0, r3, r6
 800d656:	4639      	mov	r1, r7
 800d658:	bf88      	it	hi
 800d65a:	6013      	strhi	r3, [r2, #0]
 800d65c:	f7fe fcb6 	bl	800bfcc <vListInsertEnd>
				xReturn = pdTRUE;
 800d660:	2001      	movs	r0, #1
	}
 800d662:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800d664:	682b      	ldr	r3, [r5, #0]
 800d666:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d668:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800d66a:	e7f9      	b.n	800d660 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800d66c:	682b      	ldr	r3, [r5, #0]
 800d66e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800d670:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d672:	4298      	cmp	r0, r3
 800d674:	bf2c      	ite	cs
 800d676:	2000      	movcs	r0, #0
 800d678:	2001      	movcc	r0, #1
 800d67a:	e7f2      	b.n	800d662 <xTaskPriorityInherit+0x56>
 800d67c:	20013e24 	.word	0x20013e24
 800d680:	200139c4 	.word	0x200139c4
 800d684:	20013948 	.word	0x20013948

0800d688 <xTaskPriorityDisinherit>:
	{
 800d688:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800d68a:	b908      	cbnz	r0, 800d690 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800d68c:	2000      	movs	r0, #0
	}
 800d68e:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800d690:	4b1b      	ldr	r3, [pc, #108]	@ (800d700 <xTaskPriorityDisinherit+0x78>)
 800d692:	681c      	ldr	r4, [r3, #0]
 800d694:	4284      	cmp	r4, r0
 800d696:	d008      	beq.n	800d6aa <xTaskPriorityDisinherit+0x22>
 800d698:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d69c:	f383 8811 	msr	BASEPRI, r3
 800d6a0:	f3bf 8f6f 	isb	sy
 800d6a4:	f3bf 8f4f 	dsb	sy
 800d6a8:	e7fe      	b.n	800d6a8 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800d6aa:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800d6ac:	b943      	cbnz	r3, 800d6c0 <xTaskPriorityDisinherit+0x38>
 800d6ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d6b2:	f383 8811 	msr	BASEPRI, r3
 800d6b6:	f3bf 8f6f 	isb	sy
 800d6ba:	f3bf 8f4f 	dsb	sy
 800d6be:	e7fe      	b.n	800d6be <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800d6c0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800d6c2:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800d6c4:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800d6c6:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800d6c8:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800d6ca:	d0df      	beq.n	800d68c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800d6cc:	2b00      	cmp	r3, #0
 800d6ce:	d1dd      	bne.n	800d68c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d6d0:	1d25      	adds	r5, r4, #4
 800d6d2:	4628      	mov	r0, r5
 800d6d4:	f7fe fc9c 	bl	800c010 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800d6d8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800d6da:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d6dc:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800d6e0:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800d6e2:	4a08      	ldr	r2, [pc, #32]	@ (800d704 <xTaskPriorityDisinherit+0x7c>)
 800d6e4:	6811      	ldr	r1, [r2, #0]
 800d6e6:	428b      	cmp	r3, r1
 800d6e8:	bf88      	it	hi
 800d6ea:	6013      	strhi	r3, [r2, #0]
 800d6ec:	4a06      	ldr	r2, [pc, #24]	@ (800d708 <xTaskPriorityDisinherit+0x80>)
 800d6ee:	2014      	movs	r0, #20
 800d6f0:	fb00 2003 	mla	r0, r0, r3, r2
 800d6f4:	4629      	mov	r1, r5
 800d6f6:	f7fe fc69 	bl	800bfcc <vListInsertEnd>
					xReturn = pdTRUE;
 800d6fa:	2001      	movs	r0, #1
		return xReturn;
 800d6fc:	e7c7      	b.n	800d68e <xTaskPriorityDisinherit+0x6>
 800d6fe:	bf00      	nop
 800d700:	20013e24 	.word	0x20013e24
 800d704:	20013948 	.word	0x20013948
 800d708:	200139c4 	.word	0x200139c4

0800d70c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800d70c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800d70e:	4604      	mov	r4, r0
 800d710:	2800      	cmp	r0, #0
 800d712:	d041      	beq.n	800d798 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800d714:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800d716:	b942      	cbnz	r2, 800d72a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800d718:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d71c:	f383 8811 	msr	BASEPRI, r3
 800d720:	f3bf 8f6f 	isb	sy
 800d724:	f3bf 8f4f 	dsb	sy
 800d728:	e7fe      	b.n	800d728 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800d72a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800d72c:	4299      	cmp	r1, r3
 800d72e:	bf38      	it	cc
 800d730:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800d732:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800d734:	428b      	cmp	r3, r1
 800d736:	d02f      	beq.n	800d798 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800d738:	2a01      	cmp	r2, #1
 800d73a:	d12d      	bne.n	800d798 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800d73c:	4a17      	ldr	r2, [pc, #92]	@ (800d79c <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800d73e:	6812      	ldr	r2, [r2, #0]
 800d740:	4282      	cmp	r2, r0
 800d742:	d108      	bne.n	800d756 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800d744:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d748:	f383 8811 	msr	BASEPRI, r3
 800d74c:	f3bf 8f6f 	isb	sy
 800d750:	f3bf 8f4f 	dsb	sy
 800d754:	e7fe      	b.n	800d754 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800d756:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800d758:	4d11      	ldr	r5, [pc, #68]	@ (800d7a0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 800d75a:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800d75c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800d75e:	f04f 0214 	mov.w	r2, #20
 800d762:	fb02 5303 	mla	r3, r2, r3, r5
 800d766:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d768:	bfa4      	itt	ge
 800d76a:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800d76e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800d770:	429a      	cmp	r2, r3
 800d772:	d111      	bne.n	800d798 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d774:	1d06      	adds	r6, r0, #4
 800d776:	4630      	mov	r0, r6
 800d778:	f7fe fc4a 	bl	800c010 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800d77c:	4a09      	ldr	r2, [pc, #36]	@ (800d7a4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800d77e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d780:	6811      	ldr	r1, [r2, #0]
 800d782:	2014      	movs	r0, #20
 800d784:	428b      	cmp	r3, r1
 800d786:	fb00 5003 	mla	r0, r0, r3, r5
 800d78a:	4631      	mov	r1, r6
	}
 800d78c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800d790:	bf88      	it	hi
 800d792:	6013      	strhi	r3, [r2, #0]
 800d794:	f7fe bc1a 	b.w	800bfcc <vListInsertEnd>
	}
 800d798:	bd70      	pop	{r4, r5, r6, pc}
 800d79a:	bf00      	nop
 800d79c:	20013e24 	.word	0x20013e24
 800d7a0:	200139c4 	.word	0x200139c4
 800d7a4:	20013948 	.word	0x20013948

0800d7a8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800d7a8:	4b04      	ldr	r3, [pc, #16]	@ (800d7bc <pvTaskIncrementMutexHeldCount+0x14>)
 800d7aa:	681a      	ldr	r2, [r3, #0]
 800d7ac:	b11a      	cbz	r2, 800d7b6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800d7ae:	6819      	ldr	r1, [r3, #0]
 800d7b0:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800d7b2:	3201      	adds	r2, #1
 800d7b4:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800d7b6:	6818      	ldr	r0, [r3, #0]
	}
 800d7b8:	4770      	bx	lr
 800d7ba:	bf00      	nop
 800d7bc:	20013e24 	.word	0x20013e24

0800d7c0 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 800d7c0:	4291      	cmp	r1, r2
{
 800d7c2:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800d7c4:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800d7c6:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800d7c8:	d80a      	bhi.n	800d7e0 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d7ca:	1ad2      	subs	r2, r2, r3
 800d7cc:	6983      	ldr	r3, [r0, #24]
 800d7ce:	429a      	cmp	r2, r3
 800d7d0:	d20d      	bcs.n	800d7ee <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800d7d2:	4b08      	ldr	r3, [pc, #32]	@ (800d7f4 <prvInsertTimerInActiveList+0x34>)
 800d7d4:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800d7d6:	6818      	ldr	r0, [r3, #0]
 800d7d8:	f7fe fc03 	bl	800bfe2 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800d7dc:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800d7de:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800d7e0:	429a      	cmp	r2, r3
 800d7e2:	d201      	bcs.n	800d7e8 <prvInsertTimerInActiveList+0x28>
 800d7e4:	4299      	cmp	r1, r3
 800d7e6:	d202      	bcs.n	800d7ee <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800d7e8:	4b03      	ldr	r3, [pc, #12]	@ (800d7f8 <prvInsertTimerInActiveList+0x38>)
 800d7ea:	1d01      	adds	r1, r0, #4
 800d7ec:	e7f3      	b.n	800d7d6 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800d7ee:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800d7f0:	e7f5      	b.n	800d7de <prvInsertTimerInActiveList+0x1e>
 800d7f2:	bf00      	nop
 800d7f4:	20013f24 	.word	0x20013f24
 800d7f8:	20013f28 	.word	0x20013f28

0800d7fc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800d7fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800d7fe:	4c11      	ldr	r4, [pc, #68]	@ (800d844 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800d800:	f7fe fc80 	bl	800c104 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800d804:	6825      	ldr	r5, [r4, #0]
 800d806:	b9bd      	cbnz	r5, 800d838 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800d808:	4f0f      	ldr	r7, [pc, #60]	@ (800d848 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800d80a:	4e10      	ldr	r6, [pc, #64]	@ (800d84c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800d80c:	4638      	mov	r0, r7
 800d80e:	f7fe fbcf 	bl	800bfb0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800d812:	4630      	mov	r0, r6
 800d814:	f7fe fbcc 	bl	800bfb0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800d818:	4b0d      	ldr	r3, [pc, #52]	@ (800d850 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800d81a:	4a0e      	ldr	r2, [pc, #56]	@ (800d854 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800d81c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800d81e:	4b0e      	ldr	r3, [pc, #56]	@ (800d858 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800d820:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800d822:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800d824:	200a      	movs	r0, #10
 800d826:	4b0d      	ldr	r3, [pc, #52]	@ (800d85c <prvCheckForValidListAndQueue+0x60>)
 800d828:	9500      	str	r5, [sp, #0]
 800d82a:	f7fe fe74 	bl	800c516 <xQueueGenericCreateStatic>
 800d82e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800d830:	b110      	cbz	r0, 800d838 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800d832:	490b      	ldr	r1, [pc, #44]	@ (800d860 <prvCheckForValidListAndQueue+0x64>)
 800d834:	f7ff fa2c 	bl	800cc90 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800d838:	b003      	add	sp, #12
 800d83a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800d83e:	f7fe bc81 	b.w	800c144 <vPortExitCritical>
 800d842:	bf00      	nop
 800d844:	20013f20 	.word	0x20013f20
 800d848:	20013f40 	.word	0x20013f40
 800d84c:	20013f2c 	.word	0x20013f2c
 800d850:	20013f28 	.word	0x20013f28
 800d854:	20013e78 	.word	0x20013e78
 800d858:	20013f24 	.word	0x20013f24
 800d85c:	20013e28 	.word	0x20013e28
 800d860:	0802a18b 	.word	0x0802a18b

0800d864 <xTimerCreateTimerTask>:
{
 800d864:	b510      	push	{r4, lr}
 800d866:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800d868:	f7ff ffc8 	bl	800d7fc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800d86c:	4b12      	ldr	r3, [pc, #72]	@ (800d8b8 <xTimerCreateTimerTask+0x54>)
 800d86e:	681b      	ldr	r3, [r3, #0]
 800d870:	b1b3      	cbz	r3, 800d8a0 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800d872:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800d874:	aa07      	add	r2, sp, #28
 800d876:	a906      	add	r1, sp, #24
 800d878:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800d87a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800d87e:	f7fe fa8f 	bl	800bda0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800d882:	9b05      	ldr	r3, [sp, #20]
 800d884:	9302      	str	r3, [sp, #8]
 800d886:	9b06      	ldr	r3, [sp, #24]
 800d888:	9301      	str	r3, [sp, #4]
 800d88a:	2302      	movs	r3, #2
 800d88c:	9300      	str	r3, [sp, #0]
 800d88e:	9a07      	ldr	r2, [sp, #28]
 800d890:	490a      	ldr	r1, [pc, #40]	@ (800d8bc <xTimerCreateTimerTask+0x58>)
 800d892:	480b      	ldr	r0, [pc, #44]	@ (800d8c0 <xTimerCreateTimerTask+0x5c>)
 800d894:	4623      	mov	r3, r4
 800d896:	f7ff fbc0 	bl	800d01a <xTaskCreateStatic>
 800d89a:	4b0a      	ldr	r3, [pc, #40]	@ (800d8c4 <xTimerCreateTimerTask+0x60>)
 800d89c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800d89e:	b940      	cbnz	r0, 800d8b2 <xTimerCreateTimerTask+0x4e>
 800d8a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d8a4:	f383 8811 	msr	BASEPRI, r3
 800d8a8:	f3bf 8f6f 	isb	sy
 800d8ac:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800d8b0:	e7fe      	b.n	800d8b0 <xTimerCreateTimerTask+0x4c>
}
 800d8b2:	2001      	movs	r0, #1
 800d8b4:	b008      	add	sp, #32
 800d8b6:	bd10      	pop	{r4, pc}
 800d8b8:	20013f20 	.word	0x20013f20
 800d8bc:	0802a190 	.word	0x0802a190
 800d8c0:	0800d9c5 	.word	0x0800d9c5
 800d8c4:	20013f1c 	.word	0x20013f1c

0800d8c8 <xTimerGenericCommand>:
{
 800d8c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d8ca:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800d8cc:	4604      	mov	r4, r0
{
 800d8ce:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800d8d0:	b940      	cbnz	r0, 800d8e4 <xTimerGenericCommand+0x1c>
 800d8d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d8d6:	f383 8811 	msr	BASEPRI, r3
 800d8da:	f3bf 8f6f 	isb	sy
 800d8de:	f3bf 8f4f 	dsb	sy
 800d8e2:	e7fe      	b.n	800d8e2 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800d8e4:	4d0d      	ldr	r5, [pc, #52]	@ (800d91c <xTimerGenericCommand+0x54>)
 800d8e6:	6828      	ldr	r0, [r5, #0]
 800d8e8:	b180      	cbz	r0, 800d90c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800d8ea:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800d8ec:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800d8f0:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800d8f2:	dc0d      	bgt.n	800d910 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800d8f4:	f7ff fe7a 	bl	800d5ec <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800d8f8:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800d8fa:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800d8fc:	bf08      	it	eq
 800d8fe:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800d900:	6828      	ldr	r0, [r5, #0]
 800d902:	bf18      	it	ne
 800d904:	461a      	movne	r2, r3
 800d906:	4669      	mov	r1, sp
 800d908:	f7fe feba 	bl	800c680 <xQueueGenericSend>
}
 800d90c:	b004      	add	sp, #16
 800d90e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800d910:	2300      	movs	r3, #0
 800d912:	4669      	mov	r1, sp
 800d914:	f7fe ff66 	bl	800c7e4 <xQueueGenericSendFromISR>
 800d918:	e7f8      	b.n	800d90c <xTimerGenericCommand+0x44>
 800d91a:	bf00      	nop
 800d91c:	20013f20 	.word	0x20013f20

0800d920 <prvSampleTimeNow>:
{
 800d920:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800d924:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 800d9c0 <prvSampleTimeNow+0xa0>
{
 800d928:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800d92a:	f7ff fc2b 	bl	800d184 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800d92e:	f8d8 3000 	ldr.w	r3, [r8]
 800d932:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800d934:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800d936:	d909      	bls.n	800d94c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800d938:	4f1f      	ldr	r7, [pc, #124]	@ (800d9b8 <prvSampleTimeNow+0x98>)
 800d93a:	683b      	ldr	r3, [r7, #0]
 800d93c:	681a      	ldr	r2, [r3, #0]
 800d93e:	b96a      	cbnz	r2, 800d95c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800d940:	4a1e      	ldr	r2, [pc, #120]	@ (800d9bc <prvSampleTimeNow+0x9c>)
 800d942:	6811      	ldr	r1, [r2, #0]
 800d944:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800d946:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800d948:	2301      	movs	r3, #1
 800d94a:	e000      	b.n	800d94e <prvSampleTimeNow+0x2e>
 800d94c:	2300      	movs	r3, #0
}
 800d94e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800d950:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800d952:	f8c8 5000 	str.w	r5, [r8]
}
 800d956:	b002      	add	sp, #8
 800d958:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800d95c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d95e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800d960:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800d964:	f104 0a04 	add.w	sl, r4, #4
 800d968:	4650      	mov	r0, sl
 800d96a:	f7fe fb51 	bl	800c010 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800d96e:	6a23      	ldr	r3, [r4, #32]
 800d970:	4620      	mov	r0, r4
 800d972:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800d974:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800d978:	075b      	lsls	r3, r3, #29
 800d97a:	d5de      	bpl.n	800d93a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800d97c:	69a3      	ldr	r3, [r4, #24]
 800d97e:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800d980:	4599      	cmp	r9, r3
 800d982:	d206      	bcs.n	800d992 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800d984:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800d986:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800d988:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800d98a:	4651      	mov	r1, sl
 800d98c:	f7fe fb29 	bl	800bfe2 <vListInsert>
 800d990:	e7d3      	b.n	800d93a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800d992:	2300      	movs	r3, #0
 800d994:	9300      	str	r3, [sp, #0]
 800d996:	464a      	mov	r2, r9
 800d998:	4619      	mov	r1, r3
 800d99a:	4620      	mov	r0, r4
 800d99c:	f7ff ff94 	bl	800d8c8 <xTimerGenericCommand>
				configASSERT( xResult );
 800d9a0:	2800      	cmp	r0, #0
 800d9a2:	d1ca      	bne.n	800d93a <prvSampleTimeNow+0x1a>
 800d9a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d9a8:	f383 8811 	msr	BASEPRI, r3
 800d9ac:	f3bf 8f6f 	isb	sy
 800d9b0:	f3bf 8f4f 	dsb	sy
 800d9b4:	e7fe      	b.n	800d9b4 <prvSampleTimeNow+0x94>
 800d9b6:	bf00      	nop
 800d9b8:	20013f28 	.word	0x20013f28
 800d9bc:	20013f24 	.word	0x20013f24
 800d9c0:	20013f18 	.word	0x20013f18

0800d9c4 <prvTimerTask>:
{
 800d9c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800d9c8:	4d6e      	ldr	r5, [pc, #440]	@ (800db84 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800d9ca:	4e6f      	ldr	r6, [pc, #444]	@ (800db88 <prvTimerTask+0x1c4>)
{
 800d9cc:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800d9ce:	682b      	ldr	r3, [r5, #0]
 800d9d0:	f8d3 8000 	ldr.w	r8, [r3]
 800d9d4:	f1b8 0f00 	cmp.w	r8, #0
 800d9d8:	d035      	beq.n	800da46 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800d9da:	68db      	ldr	r3, [r3, #12]
 800d9dc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800d9e0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800d9e2:	f7ff fbc7 	bl	800d174 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800d9e6:	a804      	add	r0, sp, #16
 800d9e8:	f7ff ff9a 	bl	800d920 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800d9ec:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800d9ee:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800d9f0:	2b00      	cmp	r3, #0
 800d9f2:	d169      	bne.n	800dac8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800d9f4:	2c00      	cmp	r4, #0
 800d9f6:	d14c      	bne.n	800da92 <prvTimerTask+0xce>
 800d9f8:	4540      	cmp	r0, r8
 800d9fa:	d350      	bcc.n	800da9e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800d9fc:	f7ff fc5e 	bl	800d2bc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800da00:	682b      	ldr	r3, [r5, #0]
 800da02:	68db      	ldr	r3, [r3, #12]
 800da04:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800da06:	1d38      	adds	r0, r7, #4
 800da08:	f7fe fb02 	bl	800c010 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800da0c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800da10:	0758      	lsls	r0, r3, #29
 800da12:	d51a      	bpl.n	800da4a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800da14:	69b9      	ldr	r1, [r7, #24]
 800da16:	4643      	mov	r3, r8
 800da18:	464a      	mov	r2, r9
 800da1a:	4441      	add	r1, r8
 800da1c:	4638      	mov	r0, r7
 800da1e:	f7ff fecf 	bl	800d7c0 <prvInsertTimerInActiveList>
 800da22:	b1b0      	cbz	r0, 800da52 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800da24:	9400      	str	r4, [sp, #0]
 800da26:	4623      	mov	r3, r4
 800da28:	4642      	mov	r2, r8
 800da2a:	4621      	mov	r1, r4
 800da2c:	4638      	mov	r0, r7
 800da2e:	f7ff ff4b 	bl	800d8c8 <xTimerGenericCommand>
			configASSERT( xResult );
 800da32:	b970      	cbnz	r0, 800da52 <prvTimerTask+0x8e>
 800da34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800da38:	f383 8811 	msr	BASEPRI, r3
 800da3c:	f3bf 8f6f 	isb	sy
 800da40:	f3bf 8f4f 	dsb	sy
 800da44:	e7fe      	b.n	800da44 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800da46:	2401      	movs	r4, #1
 800da48:	e7cb      	b.n	800d9e2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800da4a:	f023 0301 	bic.w	r3, r3, #1
 800da4e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800da52:	6a3b      	ldr	r3, [r7, #32]
 800da54:	4638      	mov	r0, r7
 800da56:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800da58:	6830      	ldr	r0, [r6, #0]
 800da5a:	2200      	movs	r2, #0
 800da5c:	a904      	add	r1, sp, #16
 800da5e:	f7fe ff6f 	bl	800c940 <xQueueReceive>
 800da62:	2800      	cmp	r0, #0
 800da64:	d0b3      	beq.n	800d9ce <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800da66:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800da68:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800da6a:	2b00      	cmp	r3, #0
 800da6c:	db2f      	blt.n	800dace <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800da6e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800da70:	6963      	ldr	r3, [r4, #20]
 800da72:	2b00      	cmp	r3, #0
 800da74:	d132      	bne.n	800dadc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800da76:	a803      	add	r0, sp, #12
 800da78:	f7ff ff52 	bl	800d920 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800da7c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800da7e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800da80:	2b09      	cmp	r3, #9
 800da82:	d8e9      	bhi.n	800da58 <prvTimerTask+0x94>
 800da84:	e8df f003 	tbb	[pc, r3]
 800da88:	572e2e2e 	.word	0x572e2e2e
 800da8c:	2e2e765e 	.word	0x2e2e765e
 800da90:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800da92:	4b3e      	ldr	r3, [pc, #248]	@ (800db8c <prvTimerTask+0x1c8>)
 800da94:	681b      	ldr	r3, [r3, #0]
 800da96:	681c      	ldr	r4, [r3, #0]
 800da98:	fab4 f484 	clz	r4, r4
 800da9c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800da9e:	6830      	ldr	r0, [r6, #0]
 800daa0:	4622      	mov	r2, r4
 800daa2:	eba8 0109 	sub.w	r1, r8, r9
 800daa6:	f7ff f932 	bl	800cd0e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800daaa:	f7ff fc07 	bl	800d2bc <xTaskResumeAll>
 800daae:	2800      	cmp	r0, #0
 800dab0:	d1d2      	bne.n	800da58 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800dab2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dab6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800daba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dabe:	f3bf 8f4f 	dsb	sy
 800dac2:	f3bf 8f6f 	isb	sy
 800dac6:	e7c7      	b.n	800da58 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800dac8:	f7ff fbf8 	bl	800d2bc <xTaskResumeAll>
}
 800dacc:	e7c4      	b.n	800da58 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800dace:	9b05      	ldr	r3, [sp, #20]
 800dad0:	9907      	ldr	r1, [sp, #28]
 800dad2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800dad4:	9b04      	ldr	r3, [sp, #16]
 800dad6:	2b00      	cmp	r3, #0
 800dad8:	dbbe      	blt.n	800da58 <prvTimerTask+0x94>
 800dada:	e7c8      	b.n	800da6e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800dadc:	1d20      	adds	r0, r4, #4
 800dade:	f7fe fa97 	bl	800c010 <uxListRemove>
 800dae2:	e7c8      	b.n	800da76 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800dae4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800dae8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800daea:	f043 0301 	orr.w	r3, r3, #1
 800daee:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800daf2:	9b05      	ldr	r3, [sp, #20]
 800daf4:	4620      	mov	r0, r4
 800daf6:	4419      	add	r1, r3
 800daf8:	f7ff fe62 	bl	800d7c0 <prvInsertTimerInActiveList>
 800dafc:	2800      	cmp	r0, #0
 800dafe:	d0ab      	beq.n	800da58 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800db00:	6a23      	ldr	r3, [r4, #32]
 800db02:	4620      	mov	r0, r4
 800db04:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800db06:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800db0a:	0759      	lsls	r1, r3, #29
 800db0c:	d5a4      	bpl.n	800da58 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800db0e:	69a2      	ldr	r2, [r4, #24]
 800db10:	9905      	ldr	r1, [sp, #20]
 800db12:	2300      	movs	r3, #0
 800db14:	440a      	add	r2, r1
 800db16:	9300      	str	r3, [sp, #0]
 800db18:	4619      	mov	r1, r3
 800db1a:	4620      	mov	r0, r4
 800db1c:	f7ff fed4 	bl	800d8c8 <xTimerGenericCommand>
							configASSERT( xResult );
 800db20:	2800      	cmp	r0, #0
 800db22:	d199      	bne.n	800da58 <prvTimerTask+0x94>
 800db24:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800db28:	f383 8811 	msr	BASEPRI, r3
 800db2c:	f3bf 8f6f 	isb	sy
 800db30:	f3bf 8f4f 	dsb	sy
 800db34:	e7fe      	b.n	800db34 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800db36:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800db3a:	f023 0301 	bic.w	r3, r3, #1
 800db3e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800db42:	e789      	b.n	800da58 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800db44:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800db48:	f043 0301 	orr.w	r3, r3, #1
 800db4c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800db50:	9905      	ldr	r1, [sp, #20]
 800db52:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800db54:	b941      	cbnz	r1, 800db68 <prvTimerTask+0x1a4>
 800db56:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800db5a:	f383 8811 	msr	BASEPRI, r3
 800db5e:	f3bf 8f6f 	isb	sy
 800db62:	f3bf 8f4f 	dsb	sy
 800db66:	e7fe      	b.n	800db66 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800db68:	4603      	mov	r3, r0
 800db6a:	4401      	add	r1, r0
 800db6c:	4620      	mov	r0, r4
 800db6e:	f7ff fe27 	bl	800d7c0 <prvInsertTimerInActiveList>
					break;
 800db72:	e771      	b.n	800da58 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800db74:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800db78:	079a      	lsls	r2, r3, #30
 800db7a:	d4de      	bmi.n	800db3a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800db7c:	4620      	mov	r0, r4
 800db7e:	f7fe f9d9 	bl	800bf34 <vPortFree>
 800db82:	e769      	b.n	800da58 <prvTimerTask+0x94>
 800db84:	20013f28 	.word	0x20013f28
 800db88:	20013f20 	.word	0x20013f20
 800db8c:	20013f24 	.word	0x20013f24

0800db90 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800db90:	8880      	ldrh	r0, [r0, #4]
 800db92:	4770      	bx	lr

0800db94 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800db94:	b570      	push	{r4, r5, r6, lr}
 800db96:	6803      	ldr	r3, [r0, #0]
 800db98:	4605      	mov	r5, r0
 800db9a:	460c      	mov	r4, r1
 800db9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800db9e:	2100      	movs	r1, #0
 800dba0:	4798      	blx	r3
 800dba2:	682b      	ldr	r3, [r5, #0]
 800dba4:	4606      	mov	r6, r0
 800dba6:	6a1b      	ldr	r3, [r3, #32]
 800dba8:	4628      	mov	r0, r5
 800dbaa:	4798      	blx	r3
 800dbac:	1ba4      	subs	r4, r4, r6
 800dbae:	b2a4      	uxth	r4, r4
 800dbb0:	fbb4 f0f0 	udiv	r0, r4, r0
 800dbb4:	bd70      	pop	{r4, r5, r6, pc}

0800dbb6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800dbb6:	2300      	movs	r3, #0
 800dbb8:	8083      	strh	r3, [r0, #4]
 800dbba:	4770      	bx	lr

0800dbbc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800dbbc:	b510      	push	{r4, lr}
 800dbbe:	6803      	ldr	r3, [r0, #0]
 800dbc0:	8881      	ldrh	r1, [r0, #4]
 800dbc2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800dbc4:	4604      	mov	r4, r0
 800dbc6:	4798      	blx	r3
 800dbc8:	88a3      	ldrh	r3, [r4, #4]
 800dbca:	3301      	adds	r3, #1
 800dbcc:	80a3      	strh	r3, [r4, #4]
 800dbce:	bd10      	pop	{r4, pc}

0800dbd0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800dbd0:	6803      	ldr	r3, [r0, #0]
 800dbd2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800dbd4:	4718      	bx	r3

0800dbd6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800dbd6:	4770      	bx	lr

0800dbd8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800dbd8:	4a02      	ldr	r2, [pc, #8]	@ (800dbe4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800dbda:	6002      	str	r2, [r0, #0]
 800dbdc:	2200      	movs	r2, #0
 800dbde:	8082      	strh	r2, [r0, #4]
 800dbe0:	4770      	bx	lr
 800dbe2:	bf00      	nop
 800dbe4:	0802aeb8 	.word	0x0802aeb8

0800dbe8 <_ZN8touchgfx9Container13getFirstChildEv>:
 800dbe8:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800dbea:	4770      	bx	lr

0800dbec <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800dbec:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800dbee:	2000      	movs	r0, #0
 800dbf0:	b12b      	cbz	r3, 800dbfe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800dbf2:	b920      	cbnz	r0, 800dbfe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800dbf4:	1a5a      	subs	r2, r3, r1
 800dbf6:	4250      	negs	r0, r2
 800dbf8:	4150      	adcs	r0, r2
 800dbfa:	699b      	ldr	r3, [r3, #24]
 800dbfc:	e7f8      	b.n	800dbf0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800dbfe:	4770      	bx	lr

0800dc00 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800dc00:	2300      	movs	r3, #0
 800dc02:	6148      	str	r0, [r1, #20]
 800dc04:	618b      	str	r3, [r1, #24]
 800dc06:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800dc08:	b913      	cbnz	r3, 800dc10 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800dc0a:	6281      	str	r1, [r0, #40]	@ 0x28
 800dc0c:	4770      	bx	lr
 800dc0e:	4613      	mov	r3, r2
 800dc10:	699a      	ldr	r2, [r3, #24]
 800dc12:	2a00      	cmp	r2, #0
 800dc14:	d1fb      	bne.n	800dc0e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800dc16:	6199      	str	r1, [r3, #24]
 800dc18:	4770      	bx	lr

0800dc1a <_ZN8touchgfx9Container9removeAllEv>:
 800dc1a:	2200      	movs	r2, #0
 800dc1c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800dc1e:	b123      	cbz	r3, 800dc2a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800dc20:	6999      	ldr	r1, [r3, #24]
 800dc22:	6281      	str	r1, [r0, #40]	@ 0x28
 800dc24:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800dc28:	e7f8      	b.n	800dc1c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800dc2a:	4770      	bx	lr

0800dc2c <_ZN8touchgfx9Container6unlinkEv>:
 800dc2c:	2300      	movs	r3, #0
 800dc2e:	6283      	str	r3, [r0, #40]	@ 0x28
 800dc30:	4770      	bx	lr

0800dc32 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800dc32:	2200      	movs	r2, #0
 800dc34:	8002      	strh	r2, [r0, #0]
 800dc36:	8042      	strh	r2, [r0, #2]
 800dc38:	8082      	strh	r2, [r0, #4]
 800dc3a:	80c2      	strh	r2, [r0, #6]
 800dc3c:	4770      	bx	lr

0800dc3e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800dc3e:	b570      	push	{r4, r5, r6, lr}
 800dc40:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800dc42:	460d      	mov	r5, r1
 800dc44:	4616      	mov	r6, r2
 800dc46:	b13c      	cbz	r4, 800dc58 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800dc48:	6823      	ldr	r3, [r4, #0]
 800dc4a:	4620      	mov	r0, r4
 800dc4c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800dc4e:	4632      	mov	r2, r6
 800dc50:	4629      	mov	r1, r5
 800dc52:	4798      	blx	r3
 800dc54:	69a4      	ldr	r4, [r4, #24]
 800dc56:	e7f6      	b.n	800dc46 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800dc58:	bd70      	pop	{r4, r5, r6, pc}

0800dc5a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800dc5a:	b538      	push	{r3, r4, r5, lr}
 800dc5c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800dc5e:	460d      	mov	r5, r1
 800dc60:	b134      	cbz	r4, 800dc70 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800dc62:	682b      	ldr	r3, [r5, #0]
 800dc64:	4621      	mov	r1, r4
 800dc66:	689b      	ldr	r3, [r3, #8]
 800dc68:	4628      	mov	r0, r5
 800dc6a:	4798      	blx	r3
 800dc6c:	69a4      	ldr	r4, [r4, #24]
 800dc6e:	e7f7      	b.n	800dc60 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800dc70:	bd38      	pop	{r3, r4, r5, pc}

0800dc72 <_ZN8touchgfx9ContainerD1Ev>:
 800dc72:	4770      	bx	lr

0800dc74 <_ZN8touchgfx9ContainerD0Ev>:
 800dc74:	b510      	push	{r4, lr}
 800dc76:	212c      	movs	r1, #44	@ 0x2c
 800dc78:	4604      	mov	r4, r0
 800dc7a:	f019 f9ab 	bl	8026fd4 <_ZdlPvj>
 800dc7e:	4620      	mov	r0, r4
 800dc80:	bd10      	pop	{r4, pc}

0800dc82 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800dc82:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800dc84:	b19b      	cbz	r3, 800dcae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800dc86:	428b      	cmp	r3, r1
 800dc88:	d109      	bne.n	800dc9e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800dc8a:	699a      	ldr	r2, [r3, #24]
 800dc8c:	2100      	movs	r1, #0
 800dc8e:	6159      	str	r1, [r3, #20]
 800dc90:	6282      	str	r2, [r0, #40]	@ 0x28
 800dc92:	b902      	cbnz	r2, 800dc96 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800dc94:	4770      	bx	lr
 800dc96:	6199      	str	r1, [r3, #24]
 800dc98:	4770      	bx	lr
 800dc9a:	4613      	mov	r3, r2
 800dc9c:	b13a      	cbz	r2, 800dcae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800dc9e:	699a      	ldr	r2, [r3, #24]
 800dca0:	428a      	cmp	r2, r1
 800dca2:	d1fa      	bne.n	800dc9a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800dca4:	698a      	ldr	r2, [r1, #24]
 800dca6:	619a      	str	r2, [r3, #24]
 800dca8:	2300      	movs	r3, #0
 800dcaa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800dcae:	4770      	bx	lr

0800dcb0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800dcb0:	b410      	push	{r4}
 800dcb2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800dcb4:	4604      	mov	r4, r0
 800dcb6:	b92b      	cbnz	r3, 800dcc4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800dcb8:	6803      	ldr	r3, [r0, #0]
 800dcba:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dcbe:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800dcc0:	4611      	mov	r1, r2
 800dcc2:	4718      	bx	r3
 800dcc4:	b941      	cbnz	r1, 800dcd8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800dcc6:	6193      	str	r3, [r2, #24]
 800dcc8:	6282      	str	r2, [r0, #40]	@ 0x28
 800dcca:	6154      	str	r4, [r2, #20]
 800dccc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dcd0:	4770      	bx	lr
 800dcd2:	4603      	mov	r3, r0
 800dcd4:	2800      	cmp	r0, #0
 800dcd6:	d0f9      	beq.n	800dccc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800dcd8:	4299      	cmp	r1, r3
 800dcda:	6998      	ldr	r0, [r3, #24]
 800dcdc:	d1f9      	bne.n	800dcd2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800dcde:	6190      	str	r0, [r2, #24]
 800dce0:	618a      	str	r2, [r1, #24]
 800dce2:	e7f2      	b.n	800dcca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800dce4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800dce4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dce8:	461f      	mov	r7, r3
 800dcea:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800dcee:	460d      	mov	r5, r1
 800dcf0:	4616      	mov	r6, r2
 800dcf2:	b103      	cbz	r3, 800dcf6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800dcf4:	6038      	str	r0, [r7, #0]
 800dcf6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800dcf8:	b314      	cbz	r4, 800dd40 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800dcfa:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800dcfe:	b1eb      	cbz	r3, 800dd3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800dd00:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800dd04:	428d      	cmp	r5, r1
 800dd06:	db19      	blt.n	800dd3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800dd08:	8923      	ldrh	r3, [r4, #8]
 800dd0a:	b289      	uxth	r1, r1
 800dd0c:	440b      	add	r3, r1
 800dd0e:	b21b      	sxth	r3, r3
 800dd10:	429d      	cmp	r5, r3
 800dd12:	da13      	bge.n	800dd3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800dd14:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800dd18:	4296      	cmp	r6, r2
 800dd1a:	db0f      	blt.n	800dd3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800dd1c:	8963      	ldrh	r3, [r4, #10]
 800dd1e:	b292      	uxth	r2, r2
 800dd20:	4413      	add	r3, r2
 800dd22:	b21b      	sxth	r3, r3
 800dd24:	429e      	cmp	r6, r3
 800dd26:	da09      	bge.n	800dd3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800dd28:	6823      	ldr	r3, [r4, #0]
 800dd2a:	1ab2      	subs	r2, r6, r2
 800dd2c:	1a69      	subs	r1, r5, r1
 800dd2e:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800dd32:	b212      	sxth	r2, r2
 800dd34:	463b      	mov	r3, r7
 800dd36:	b209      	sxth	r1, r1
 800dd38:	4620      	mov	r0, r4
 800dd3a:	47c0      	blx	r8
 800dd3c:	69a4      	ldr	r4, [r4, #24]
 800dd3e:	e7db      	b.n	800dcf8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800dd40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800dd44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800dd44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd48:	4c6e      	ldr	r4, [pc, #440]	@ (800df04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800dd4a:	b0a1      	sub	sp, #132	@ 0x84
 800dd4c:	6824      	ldr	r4, [r4, #0]
 800dd4e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800dd50:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800dd54:	9303      	str	r3, [sp, #12]
 800dd56:	2400      	movs	r4, #0
 800dd58:	802c      	strh	r4, [r5, #0]
 800dd5a:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800dd5c:	802c      	strh	r4, [r5, #0]
 800dd5e:	601c      	str	r4, [r3, #0]
 800dd60:	4606      	mov	r6, r0
 800dd62:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800dd66:	f7ff ffbd 	bl	800dce4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800dd6a:	f1b9 0f03 	cmp.w	r9, #3
 800dd6e:	f340 80c2 	ble.w	800def6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800dd72:	4631      	mov	r1, r6
 800dd74:	a80c      	add	r0, sp, #48	@ 0x30
 800dd76:	f007 fd8f 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd7a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800dd7e:	9306      	str	r3, [sp, #24]
 800dd80:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800dd84:	9307      	str	r3, [sp, #28]
 800dd86:	9b03      	ldr	r3, [sp, #12]
 800dd88:	f8d3 a000 	ldr.w	sl, [r3]
 800dd8c:	f1ba 0f00 	cmp.w	sl, #0
 800dd90:	f000 80b4 	beq.w	800defc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800dd94:	4651      	mov	r1, sl
 800dd96:	a810      	add	r0, sp, #64	@ 0x40
 800dd98:	f007 fd7e 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd9c:	9b01      	ldr	r3, [sp, #4]
 800dd9e:	9a06      	ldr	r2, [sp, #24]
 800dda0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800dda4:	189d      	adds	r5, r3, r2
 800dda6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800ddaa:	9a07      	ldr	r2, [sp, #28]
 800ddac:	2002      	movs	r0, #2
 800ddae:	fb91 f1f0 	sdiv	r1, r1, r0
 800ddb2:	4419      	add	r1, r3
 800ddb4:	1a6d      	subs	r5, r5, r1
 800ddb6:	9b02      	ldr	r3, [sp, #8]
 800ddb8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800ddbc:	4413      	add	r3, r2
 800ddbe:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800ddc2:	fb92 f2f0 	sdiv	r2, r2, r0
 800ddc6:	440a      	add	r2, r1
 800ddc8:	1a9b      	subs	r3, r3, r2
 800ddca:	435b      	muls	r3, r3
 800ddcc:	fb05 3505 	mla	r5, r5, r5, r3
 800ddd0:	4f4d      	ldr	r7, [pc, #308]	@ (800df08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ddd2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ddd4:	ac10      	add	r4, sp, #64	@ 0x40
 800ddd6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ddd8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ddda:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800dddc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ddde:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800dde0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800dde4:	f1b9 0f0c 	cmp.w	r9, #12
 800dde8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ddec:	f04f 0303 	mov.w	r3, #3
 800ddf0:	bfc8      	it	gt
 800ddf2:	4698      	movgt	r8, r3
 800ddf4:	f8cd 9000 	str.w	r9, [sp]
 800ddf8:	f04f 0400 	mov.w	r4, #0
 800ddfc:	bfdc      	itt	le
 800ddfe:	f109 32ff 	addle.w	r2, r9, #4294967295
 800de02:	fb92 f8f3 	sdivle	r8, r2, r3
 800de06:	1c63      	adds	r3, r4, #1
 800de08:	aa10      	add	r2, sp, #64	@ 0x40
 800de0a:	f004 0401 	and.w	r4, r4, #1
 800de0e:	9308      	str	r3, [sp, #32]
 800de10:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800de14:	9b00      	ldr	r3, [sp, #0]
 800de16:	fb93 f3f8 	sdiv	r3, r3, r8
 800de1a:	b29b      	uxth	r3, r3
 800de1c:	3404      	adds	r4, #4
 800de1e:	f04f 0b00 	mov.w	fp, #0
 800de22:	9304      	str	r3, [sp, #16]
 800de24:	9a04      	ldr	r2, [sp, #16]
 800de26:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800de2a:	fb13 f302 	smulbb	r3, r3, r2
 800de2e:	9a01      	ldr	r2, [sp, #4]
 800de30:	b29b      	uxth	r3, r3
 800de32:	1899      	adds	r1, r3, r2
 800de34:	9305      	str	r3, [sp, #20]
 800de36:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800de3a:	b209      	sxth	r1, r1
 800de3c:	4299      	cmp	r1, r3
 800de3e:	db4d      	blt.n	800dedc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800de40:	8932      	ldrh	r2, [r6, #8]
 800de42:	4413      	add	r3, r2
 800de44:	b21b      	sxth	r3, r3
 800de46:	4299      	cmp	r1, r3
 800de48:	da48      	bge.n	800dedc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800de4a:	9b04      	ldr	r3, [sp, #16]
 800de4c:	6827      	ldr	r7, [r4, #0]
 800de4e:	fb17 f703 	smulbb	r7, r7, r3
 800de52:	9b02      	ldr	r3, [sp, #8]
 800de54:	b2bf      	uxth	r7, r7
 800de56:	18fa      	adds	r2, r7, r3
 800de58:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800de5c:	b212      	sxth	r2, r2
 800de5e:	429a      	cmp	r2, r3
 800de60:	db3c      	blt.n	800dedc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800de62:	8970      	ldrh	r0, [r6, #10]
 800de64:	4403      	add	r3, r0
 800de66:	b21b      	sxth	r3, r3
 800de68:	429a      	cmp	r2, r3
 800de6a:	da37      	bge.n	800dedc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800de6c:	2300      	movs	r3, #0
 800de6e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800de70:	4630      	mov	r0, r6
 800de72:	ab0b      	add	r3, sp, #44	@ 0x2c
 800de74:	f7ff ff36 	bl	800dce4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800de78:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800de7a:	b37a      	cbz	r2, 800dedc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800de7c:	4552      	cmp	r2, sl
 800de7e:	d02d      	beq.n	800dedc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800de80:	4611      	mov	r1, r2
 800de82:	a80e      	add	r0, sp, #56	@ 0x38
 800de84:	9209      	str	r2, [sp, #36]	@ 0x24
 800de86:	f007 fd07 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800de8a:	9a06      	ldr	r2, [sp, #24]
 800de8c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800de90:	9b01      	ldr	r3, [sp, #4]
 800de92:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800de96:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800de9a:	4413      	add	r3, r2
 800de9c:	f04f 0e02 	mov.w	lr, #2
 800dea0:	fb91 f1fe 	sdiv	r1, r1, lr
 800dea4:	4401      	add	r1, r0
 800dea6:	1a58      	subs	r0, r3, r1
 800dea8:	9a07      	ldr	r2, [sp, #28]
 800deaa:	9b02      	ldr	r3, [sp, #8]
 800deac:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800deb0:	fb9c fcfe 	sdiv	ip, ip, lr
 800deb4:	4413      	add	r3, r2
 800deb6:	448c      	add	ip, r1
 800deb8:	eba3 030c 	sub.w	r3, r3, ip
 800debc:	435b      	muls	r3, r3
 800debe:	fb00 3300 	mla	r3, r0, r0, r3
 800dec2:	42ab      	cmp	r3, r5
 800dec4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800dec6:	d208      	bcs.n	800deda <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800dec8:	9803      	ldr	r0, [sp, #12]
 800deca:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800decc:	6001      	str	r1, [r0, #0]
 800dece:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800ded0:	9805      	ldr	r0, [sp, #20]
 800ded2:	8008      	strh	r0, [r1, #0]
 800ded4:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ded6:	461d      	mov	r5, r3
 800ded8:	800f      	strh	r7, [r1, #0]
 800deda:	4692      	mov	sl, r2
 800dedc:	f10b 0b01 	add.w	fp, fp, #1
 800dee0:	f1bb 0f04 	cmp.w	fp, #4
 800dee4:	f104 0408 	add.w	r4, r4, #8
 800dee8:	d19c      	bne.n	800de24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800deea:	9b00      	ldr	r3, [sp, #0]
 800deec:	9c08      	ldr	r4, [sp, #32]
 800deee:	444b      	add	r3, r9
 800def0:	4544      	cmp	r4, r8
 800def2:	9300      	str	r3, [sp, #0]
 800def4:	d187      	bne.n	800de06 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800def6:	b021      	add	sp, #132	@ 0x84
 800def8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800defc:	f04f 35ff 	mov.w	r5, #4294967295
 800df00:	e766      	b.n	800ddd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800df02:	bf00      	nop
 800df04:	20013f60 	.word	0x20013f60
 800df08:	08028ec4 	.word	0x08028ec4

0800df0c <_ZN8touchgfx4RectaNERKS0_>:
 800df0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800df10:	f9b1 7000 	ldrsh.w	r7, [r1]
 800df14:	888c      	ldrh	r4, [r1, #4]
 800df16:	f9b0 9000 	ldrsh.w	r9, [r0]
 800df1a:	443c      	add	r4, r7
 800df1c:	b2a4      	uxth	r4, r4
 800df1e:	fa0f f884 	sxth.w	r8, r4
 800df22:	45c1      	cmp	r9, r8
 800df24:	da2f      	bge.n	800df86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800df26:	8882      	ldrh	r2, [r0, #4]
 800df28:	444a      	add	r2, r9
 800df2a:	b292      	uxth	r2, r2
 800df2c:	fa0f fe82 	sxth.w	lr, r2
 800df30:	4577      	cmp	r7, lr
 800df32:	da28      	bge.n	800df86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800df34:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800df38:	88cb      	ldrh	r3, [r1, #6]
 800df3a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800df3e:	442b      	add	r3, r5
 800df40:	b21b      	sxth	r3, r3
 800df42:	429e      	cmp	r6, r3
 800df44:	da1f      	bge.n	800df86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800df46:	88c3      	ldrh	r3, [r0, #6]
 800df48:	4433      	add	r3, r6
 800df4a:	b29b      	uxth	r3, r3
 800df4c:	fa0f fc83 	sxth.w	ip, r3
 800df50:	4565      	cmp	r5, ip
 800df52:	da18      	bge.n	800df86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800df54:	454f      	cmp	r7, r9
 800df56:	bfb8      	it	lt
 800df58:	464f      	movlt	r7, r9
 800df5a:	42b5      	cmp	r5, r6
 800df5c:	bfb8      	it	lt
 800df5e:	4635      	movlt	r5, r6
 800df60:	45f0      	cmp	r8, lr
 800df62:	bfd8      	it	le
 800df64:	4622      	movle	r2, r4
 800df66:	1bd2      	subs	r2, r2, r7
 800df68:	8082      	strh	r2, [r0, #4]
 800df6a:	884a      	ldrh	r2, [r1, #2]
 800df6c:	88c9      	ldrh	r1, [r1, #6]
 800df6e:	8007      	strh	r7, [r0, #0]
 800df70:	440a      	add	r2, r1
 800df72:	b292      	uxth	r2, r2
 800df74:	b211      	sxth	r1, r2
 800df76:	458c      	cmp	ip, r1
 800df78:	bfa8      	it	ge
 800df7a:	4613      	movge	r3, r2
 800df7c:	1b5b      	subs	r3, r3, r5
 800df7e:	80c3      	strh	r3, [r0, #6]
 800df80:	8045      	strh	r5, [r0, #2]
 800df82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800df86:	2300      	movs	r3, #0
 800df88:	8003      	strh	r3, [r0, #0]
 800df8a:	8043      	strh	r3, [r0, #2]
 800df8c:	8083      	strh	r3, [r0, #4]
 800df8e:	80c3      	strh	r3, [r0, #6]
 800df90:	e7f7      	b.n	800df82 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800df92 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800df92:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800df96:	2b00      	cmp	r3, #0
 800df98:	dd06      	ble.n	800dfa8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800df9a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800df9e:	2800      	cmp	r0, #0
 800dfa0:	bfcc      	ite	gt
 800dfa2:	2000      	movgt	r0, #0
 800dfa4:	2001      	movle	r0, #1
 800dfa6:	4770      	bx	lr
 800dfa8:	2001      	movs	r0, #1
 800dfaa:	4770      	bx	lr

0800dfac <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800dfac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dfb0:	2300      	movs	r3, #0
 800dfb2:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800dfb4:	8003      	strh	r3, [r0, #0]
 800dfb6:	4604      	mov	r4, r0
 800dfb8:	8043      	strh	r3, [r0, #2]
 800dfba:	8083      	strh	r3, [r0, #4]
 800dfbc:	80c3      	strh	r3, [r0, #6]
 800dfbe:	2d00      	cmp	r5, #0
 800dfc0:	d040      	beq.n	800e044 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800dfc2:	1d28      	adds	r0, r5, #4
 800dfc4:	f7ff ffe5 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dfc8:	b988      	cbnz	r0, 800dfee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800dfca:	4620      	mov	r0, r4
 800dfcc:	f7ff ffe1 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dfd0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800dfd4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800dfd8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800dfdc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800dfe0:	b138      	cbz	r0, 800dff2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800dfe2:	8022      	strh	r2, [r4, #0]
 800dfe4:	8063      	strh	r3, [r4, #2]
 800dfe6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800dfea:	f8a4 c006 	strh.w	ip, [r4, #6]
 800dfee:	69ad      	ldr	r5, [r5, #24]
 800dff0:	e7e5      	b.n	800dfbe <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800dff2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800dff6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800dffa:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800dffe:	4290      	cmp	r0, r2
 800e000:	4607      	mov	r7, r0
 800e002:	bfa8      	it	ge
 800e004:	4617      	movge	r7, r2
 800e006:	4472      	add	r2, lr
 800e008:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800e00c:	8027      	strh	r7, [r4, #0]
 800e00e:	4299      	cmp	r1, r3
 800e010:	460e      	mov	r6, r1
 800e012:	4440      	add	r0, r8
 800e014:	bfa8      	it	ge
 800e016:	461e      	movge	r6, r3
 800e018:	4471      	add	r1, lr
 800e01a:	4463      	add	r3, ip
 800e01c:	b200      	sxth	r0, r0
 800e01e:	b212      	sxth	r2, r2
 800e020:	b209      	sxth	r1, r1
 800e022:	b21b      	sxth	r3, r3
 800e024:	4290      	cmp	r0, r2
 800e026:	bfac      	ite	ge
 800e028:	ebc7 0200 	rsbge	r2, r7, r0
 800e02c:	ebc7 0202 	rsblt	r2, r7, r2
 800e030:	4299      	cmp	r1, r3
 800e032:	bfac      	ite	ge
 800e034:	ebc6 0301 	rsbge	r3, r6, r1
 800e038:	ebc6 0303 	rsblt	r3, r6, r3
 800e03c:	8066      	strh	r6, [r4, #2]
 800e03e:	80a2      	strh	r2, [r4, #4]
 800e040:	80e3      	strh	r3, [r4, #6]
 800e042:	e7d4      	b.n	800dfee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800e044:	4620      	mov	r0, r4
 800e046:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e04a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800e04a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e04e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800e052:	b383      	cbz	r3, 800e0b6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800e054:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800e056:	b374      	cbz	r4, 800e0b6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800e058:	f9b1 5000 	ldrsh.w	r5, [r1]
 800e05c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800e060:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800e064:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800e068:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800e06c:	b303      	cbz	r3, 800e0b0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800e06e:	4668      	mov	r0, sp
 800e070:	1d21      	adds	r1, r4, #4
 800e072:	f8ad 5000 	strh.w	r5, [sp]
 800e076:	f8ad 6002 	strh.w	r6, [sp, #2]
 800e07a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800e07e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800e082:	f7ff ff43 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 800e086:	4668      	mov	r0, sp
 800e088:	f7ff ff83 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e08c:	b980      	cbnz	r0, 800e0b0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800e08e:	f8bd 3000 	ldrh.w	r3, [sp]
 800e092:	88a2      	ldrh	r2, [r4, #4]
 800e094:	1a9b      	subs	r3, r3, r2
 800e096:	f8ad 3000 	strh.w	r3, [sp]
 800e09a:	88e2      	ldrh	r2, [r4, #6]
 800e09c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e0a0:	1a9b      	subs	r3, r3, r2
 800e0a2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e0a6:	6823      	ldr	r3, [r4, #0]
 800e0a8:	4669      	mov	r1, sp
 800e0aa:	689b      	ldr	r3, [r3, #8]
 800e0ac:	4620      	mov	r0, r4
 800e0ae:	4798      	blx	r3
 800e0b0:	69a4      	ldr	r4, [r4, #24]
 800e0b2:	2c00      	cmp	r4, #0
 800e0b4:	d1d8      	bne.n	800e068 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800e0b6:	b002      	add	sp, #8
 800e0b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e0bc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800e0bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e0be:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800e0c2:	460d      	mov	r5, r1
 800e0c4:	4616      	mov	r6, r2
 800e0c6:	b323      	cbz	r3, 800e112 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800e0c8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800e0ca:	b314      	cbz	r4, 800e112 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800e0cc:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800e0d0:	b1eb      	cbz	r3, 800e10e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800e0d2:	6828      	ldr	r0, [r5, #0]
 800e0d4:	6869      	ldr	r1, [r5, #4]
 800e0d6:	466b      	mov	r3, sp
 800e0d8:	c303      	stmia	r3!, {r0, r1}
 800e0da:	4668      	mov	r0, sp
 800e0dc:	1d21      	adds	r1, r4, #4
 800e0de:	f7ff ff15 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 800e0e2:	4668      	mov	r0, sp
 800e0e4:	f7ff ff55 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e0e8:	b988      	cbnz	r0, 800e10e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800e0ea:	f8bd 3000 	ldrh.w	r3, [sp]
 800e0ee:	88a2      	ldrh	r2, [r4, #4]
 800e0f0:	1a9b      	subs	r3, r3, r2
 800e0f2:	f8ad 3000 	strh.w	r3, [sp]
 800e0f6:	88e2      	ldrh	r2, [r4, #6]
 800e0f8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e0fc:	1a9b      	subs	r3, r3, r2
 800e0fe:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e102:	6823      	ldr	r3, [r4, #0]
 800e104:	4632      	mov	r2, r6
 800e106:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800e108:	4669      	mov	r1, sp
 800e10a:	4620      	mov	r0, r4
 800e10c:	4798      	blx	r3
 800e10e:	69a4      	ldr	r4, [r4, #24]
 800e110:	e7db      	b.n	800e0ca <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800e112:	b002      	add	sp, #8
 800e114:	bd70      	pop	{r4, r5, r6, pc}

0800e116 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800e116:	b513      	push	{r0, r1, r4, lr}
 800e118:	6803      	ldr	r3, [r0, #0]
 800e11a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800e11e:	2300      	movs	r3, #0
 800e120:	e9cd 3300 	strd	r3, r3, [sp]
 800e124:	466b      	mov	r3, sp
 800e126:	47a0      	blx	r4
 800e128:	b002      	add	sp, #8
 800e12a:	bd10      	pop	{r4, pc}

0800e12c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800e12c:	2301      	movs	r3, #1
 800e12e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800e132:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800e136:	4770      	bx	lr

0800e138 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800e138:	2301      	movs	r3, #1
 800e13a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800e13e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800e142:	4770      	bx	lr

0800e144 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800e144:	6843      	ldr	r3, [r0, #4]
 800e146:	2201      	movs	r2, #1
 800e148:	725a      	strb	r2, [r3, #9]
 800e14a:	6840      	ldr	r0, [r0, #4]
 800e14c:	6803      	ldr	r3, [r0, #0]
 800e14e:	691b      	ldr	r3, [r3, #16]
 800e150:	4718      	bx	r3

0800e152 <_ZN8touchgfx3HAL8flushDMAEv>:
 800e152:	6840      	ldr	r0, [r0, #4]
 800e154:	6803      	ldr	r3, [r0, #0]
 800e156:	689b      	ldr	r3, [r3, #8]
 800e158:	4718      	bx	r3

0800e15a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800e15a:	b530      	push	{r4, r5, lr}
 800e15c:	b08b      	sub	sp, #44	@ 0x2c
 800e15e:	6804      	ldr	r4, [r0, #0]
 800e160:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800e164:	9509      	str	r5, [sp, #36]	@ 0x24
 800e166:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800e16a:	9508      	str	r5, [sp, #32]
 800e16c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800e170:	9507      	str	r5, [sp, #28]
 800e172:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800e176:	9506      	str	r5, [sp, #24]
 800e178:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800e17c:	9505      	str	r5, [sp, #20]
 800e17e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800e182:	9504      	str	r5, [sp, #16]
 800e184:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800e188:	9503      	str	r5, [sp, #12]
 800e18a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800e18e:	9502      	str	r5, [sp, #8]
 800e190:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800e194:	e9cd 3500 	strd	r3, r5, [sp]
 800e198:	4613      	mov	r3, r2
 800e19a:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800e19c:	2200      	movs	r2, #0
 800e19e:	47a0      	blx	r4
 800e1a0:	b00b      	add	sp, #44	@ 0x2c
 800e1a2:	bd30      	pop	{r4, r5, pc}

0800e1a4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800e1a4:	4b04      	ldr	r3, [pc, #16]	@ (800e1b8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800e1a6:	781b      	ldrb	r3, [r3, #0]
 800e1a8:	b123      	cbz	r3, 800e1b4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800e1aa:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800e1ae:	f080 0001 	eor.w	r0, r0, #1
 800e1b2:	4770      	bx	lr
 800e1b4:	2001      	movs	r0, #1
 800e1b6:	4770      	bx	lr
 800e1b8:	20013f5e 	.word	0x20013f5e

0800e1bc <_ZN8touchgfx3HAL8endFrameEv>:
 800e1bc:	b510      	push	{r4, lr}
 800e1be:	4604      	mov	r4, r0
 800e1c0:	6840      	ldr	r0, [r0, #4]
 800e1c2:	6803      	ldr	r3, [r0, #0]
 800e1c4:	689b      	ldr	r3, [r3, #8]
 800e1c6:	4798      	blx	r3
 800e1c8:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800e1cc:	b113      	cbz	r3, 800e1d4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800e1ce:	2301      	movs	r3, #1
 800e1d0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800e1d4:	bd10      	pop	{r4, pc}

0800e1d6 <_ZN8touchgfx3HAL10initializeEv>:
 800e1d6:	b510      	push	{r4, lr}
 800e1d8:	4604      	mov	r4, r0
 800e1da:	f7f2 fc95 	bl	8000b08 <_ZN8touchgfx10OSWrappers10initializeEv>
 800e1de:	f7f2 fba1 	bl	8000924 <_ZN8touchgfx4GPIO4initEv>
 800e1e2:	6860      	ldr	r0, [r4, #4]
 800e1e4:	6803      	ldr	r3, [r0, #0]
 800e1e6:	68db      	ldr	r3, [r3, #12]
 800e1e8:	4798      	blx	r3
 800e1ea:	68e0      	ldr	r0, [r4, #12]
 800e1ec:	6803      	ldr	r3, [r0, #0]
 800e1ee:	689b      	ldr	r3, [r3, #8]
 800e1f0:	4798      	blx	r3
 800e1f2:	6823      	ldr	r3, [r4, #0]
 800e1f4:	4620      	mov	r0, r4
 800e1f6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800e1f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e1fc:	4718      	bx	r3
	...

0800e200 <_ZN8touchgfx3HAL4tickEv>:
 800e200:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e202:	6803      	ldr	r3, [r0, #0]
 800e204:	4d5b      	ldr	r5, [pc, #364]	@ (800e374 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800e206:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800e20a:	4604      	mov	r4, r0
 800e20c:	4798      	blx	r3
 800e20e:	2800      	cmp	r0, #0
 800e210:	f000 8095 	beq.w	800e33e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800e214:	2001      	movs	r0, #1
 800e216:	f7f2 fb03 	bl	8000820 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800e21a:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800e21e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800e222:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800e226:	2600      	movs	r6, #0
 800e228:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800e22c:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800e230:	b133      	cbz	r3, 800e240 <_ZN8touchgfx3HAL4tickEv+0x40>
 800e232:	6823      	ldr	r3, [r4, #0]
 800e234:	4620      	mov	r0, r4
 800e236:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800e23a:	4798      	blx	r3
 800e23c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800e240:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800e244:	6862      	ldr	r2, [r4, #4]
 800e246:	f083 0301 	eor.w	r3, r3, #1
 800e24a:	7253      	strb	r3, [r2, #9]
 800e24c:	2601      	movs	r6, #1
 800e24e:	702e      	strb	r6, [r5, #0]
 800e250:	f006 f9e8 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
 800e254:	6803      	ldr	r3, [r0, #0]
 800e256:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e258:	4798      	blx	r3
 800e25a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800e25e:	b90b      	cbnz	r3, 800e264 <_ZN8touchgfx3HAL4tickEv+0x64>
 800e260:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800e264:	f006 f9de 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
 800e268:	6803      	ldr	r3, [r0, #0]
 800e26a:	695b      	ldr	r3, [r3, #20]
 800e26c:	4798      	blx	r3
 800e26e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800e270:	6803      	ldr	r3, [r0, #0]
 800e272:	691b      	ldr	r3, [r3, #16]
 800e274:	4798      	blx	r3
 800e276:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800e27a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800e27e:	3b01      	subs	r3, #1
 800e280:	b2db      	uxtb	r3, r3
 800e282:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800e286:	b10a      	cbz	r2, 800e28c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800e288:	2b00      	cmp	r3, #0
 800e28a:	d1eb      	bne.n	800e264 <_ZN8touchgfx3HAL4tickEv+0x64>
 800e28c:	4a3a      	ldr	r2, [pc, #232]	@ (800e378 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800e28e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800e292:	7813      	ldrb	r3, [r2, #0]
 800e294:	3301      	adds	r3, #1
 800e296:	b25b      	sxtb	r3, r3
 800e298:	4299      	cmp	r1, r3
 800e29a:	7013      	strb	r3, [r2, #0]
 800e29c:	dc10      	bgt.n	800e2c0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800e29e:	68e0      	ldr	r0, [r4, #12]
 800e2a0:	2300      	movs	r3, #0
 800e2a2:	7013      	strb	r3, [r2, #0]
 800e2a4:	6803      	ldr	r3, [r0, #0]
 800e2a6:	aa03      	add	r2, sp, #12
 800e2a8:	68db      	ldr	r3, [r3, #12]
 800e2aa:	a902      	add	r1, sp, #8
 800e2ac:	4798      	blx	r3
 800e2ae:	6823      	ldr	r3, [r4, #0]
 800e2b0:	2800      	cmp	r0, #0
 800e2b2:	d050      	beq.n	800e356 <_ZN8touchgfx3HAL4tickEv+0x156>
 800e2b4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800e2b8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800e2bc:	4620      	mov	r0, r4
 800e2be:	4798      	blx	r3
 800e2c0:	6960      	ldr	r0, [r4, #20]
 800e2c2:	2300      	movs	r3, #0
 800e2c4:	f88d 3007 	strb.w	r3, [sp, #7]
 800e2c8:	b158      	cbz	r0, 800e2e2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800e2ca:	6803      	ldr	r3, [r0, #0]
 800e2cc:	f10d 0107 	add.w	r1, sp, #7
 800e2d0:	68db      	ldr	r3, [r3, #12]
 800e2d2:	4798      	blx	r3
 800e2d4:	b128      	cbz	r0, 800e2e2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800e2d6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800e2d8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e2dc:	6803      	ldr	r3, [r0, #0]
 800e2de:	68db      	ldr	r3, [r3, #12]
 800e2e0:	4798      	blx	r3
 800e2e2:	f104 001c 	add.w	r0, r4, #28
 800e2e6:	f018 f855 	bl	8026394 <_ZN8touchgfx8Gestures4tickEv>
 800e2ea:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800e2ee:	b30b      	cbz	r3, 800e334 <_ZN8touchgfx3HAL4tickEv+0x134>
 800e2f0:	6920      	ldr	r0, [r4, #16]
 800e2f2:	6803      	ldr	r3, [r0, #0]
 800e2f4:	691b      	ldr	r3, [r3, #16]
 800e2f6:	4798      	blx	r3
 800e2f8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800e2fa:	4606      	mov	r6, r0
 800e2fc:	b903      	cbnz	r3, 800e300 <_ZN8touchgfx3HAL4tickEv+0x100>
 800e2fe:	6760      	str	r0, [r4, #116]	@ 0x74
 800e300:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800e302:	4a1e      	ldr	r2, [pc, #120]	@ (800e37c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800e304:	1af3      	subs	r3, r6, r3
 800e306:	4293      	cmp	r3, r2
 800e308:	d914      	bls.n	800e334 <_ZN8touchgfx3HAL4tickEv+0x134>
 800e30a:	6920      	ldr	r0, [r4, #16]
 800e30c:	6803      	ldr	r3, [r0, #0]
 800e30e:	699b      	ldr	r3, [r3, #24]
 800e310:	4798      	blx	r3
 800e312:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800e314:	2264      	movs	r2, #100	@ 0x64
 800e316:	1af3      	subs	r3, r6, r3
 800e318:	fbb3 f3f2 	udiv	r3, r3, r2
 800e31c:	fbb0 f0f3 	udiv	r0, r0, r3
 800e320:	2800      	cmp	r0, #0
 800e322:	dc1d      	bgt.n	800e360 <_ZN8touchgfx3HAL4tickEv+0x160>
 800e324:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800e328:	6920      	ldr	r0, [r4, #16]
 800e32a:	6803      	ldr	r3, [r0, #0]
 800e32c:	2100      	movs	r1, #0
 800e32e:	69db      	ldr	r3, [r3, #28]
 800e330:	4798      	blx	r3
 800e332:	6766      	str	r6, [r4, #116]	@ 0x74
 800e334:	f006 f976 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
 800e338:	6803      	ldr	r3, [r0, #0]
 800e33a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e33c:	4798      	blx	r3
 800e33e:	6823      	ldr	r3, [r4, #0]
 800e340:	4620      	mov	r0, r4
 800e342:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800e346:	4798      	blx	r3
 800e348:	2001      	movs	r0, #1
 800e34a:	f7f2 fa93 	bl	8000874 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800e34e:	2300      	movs	r3, #0
 800e350:	702b      	strb	r3, [r5, #0]
 800e352:	b004      	add	sp, #16
 800e354:	bd70      	pop	{r4, r5, r6, pc}
 800e356:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800e35a:	4620      	mov	r0, r4
 800e35c:	4798      	blx	r3
 800e35e:	e7af      	b.n	800e2c0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800e360:	2863      	cmp	r0, #99	@ 0x63
 800e362:	bfcb      	itete	gt
 800e364:	2300      	movgt	r3, #0
 800e366:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800e36a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800e36e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800e372:	e7d9      	b.n	800e328 <_ZN8touchgfx3HAL4tickEv+0x128>
 800e374:	20013f64 	.word	0x20013f64
 800e378:	20013f65 	.word	0x20013f65
 800e37c:	05f5e100 	.word	0x05f5e100

0800e380 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800e380:	b510      	push	{r4, lr}
 800e382:	4604      	mov	r4, r0
 800e384:	f7f2 fbf0 	bl	8000b68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800e388:	6863      	ldr	r3, [r4, #4]
 800e38a:	2200      	movs	r2, #0
 800e38c:	729a      	strb	r2, [r3, #10]
 800e38e:	bd10      	pop	{r4, pc}

0800e390 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800e390:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800e392:	301c      	adds	r0, #28
 800e394:	f017 bffc 	b.w	8026390 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800e398 <_ZN8touchgfx3HAL5touchEll>:
 800e398:	b530      	push	{r4, r5, lr}
 800e39a:	b087      	sub	sp, #28
 800e39c:	4604      	mov	r4, r0
 800e39e:	a804      	add	r0, sp, #16
 800e3a0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800e3a4:	f005 ff26 	bl	80141f4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800e3a8:	9b04      	ldr	r3, [sp, #16]
 800e3aa:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e3ae:	a906      	add	r1, sp, #24
 800e3b0:	9b05      	ldr	r3, [sp, #20]
 800e3b2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800e3b6:	a803      	add	r0, sp, #12
 800e3b8:	f005 ff6e 	bl	8014298 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800e3bc:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800e3c0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e3c4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800e3c8:	f104 001c 	add.w	r0, r4, #28
 800e3cc:	b189      	cbz	r1, 800e3f2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800e3ce:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800e3d2:	9300      	str	r3, [sp, #0]
 800e3d4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800e3d8:	4613      	mov	r3, r2
 800e3da:	462a      	mov	r2, r5
 800e3dc:	f017 ffe8 	bl	80263b0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800e3e0:	b128      	cbz	r0, 800e3ee <_ZN8touchgfx3HAL5touchEll+0x56>
 800e3e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800e3e6:	6623      	str	r3, [r4, #96]	@ 0x60
 800e3e8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e3ec:	6663      	str	r3, [r4, #100]	@ 0x64
 800e3ee:	b007      	add	sp, #28
 800e3f0:	bd30      	pop	{r4, r5, pc}
 800e3f2:	f018 f81d 	bl	8026430 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800e3f6:	2301      	movs	r3, #1
 800e3f8:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800e3fc:	e7f1      	b.n	800e3e2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800e3fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800e3fe:	b510      	push	{r4, lr}
 800e400:	2b00      	cmp	r3, #0
 800e402:	d046      	beq.n	800e492 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800e404:	ea81 0002 	eor.w	r0, r1, r2
 800e408:	07c4      	lsls	r4, r0, #31
 800e40a:	d508      	bpl.n	800e41e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800e40c:	440b      	add	r3, r1
 800e40e:	3a01      	subs	r2, #1
 800e410:	428b      	cmp	r3, r1
 800e412:	d93e      	bls.n	800e492 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800e414:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800e418:	f801 0b01 	strb.w	r0, [r1], #1
 800e41c:	e7f8      	b.n	800e410 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800e41e:	07d0      	lsls	r0, r2, #31
 800e420:	bf42      	ittt	mi
 800e422:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800e426:	f801 0b01 	strbmi.w	r0, [r1], #1
 800e42a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800e42e:	2b01      	cmp	r3, #1
 800e430:	d911      	bls.n	800e456 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800e432:	ea81 0402 	eor.w	r4, r1, r2
 800e436:	07a4      	lsls	r4, r4, #30
 800e438:	4610      	mov	r0, r2
 800e43a:	d022      	beq.n	800e482 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800e43c:	f023 0401 	bic.w	r4, r3, #1
 800e440:	440c      	add	r4, r1
 800e442:	428c      	cmp	r4, r1
 800e444:	4602      	mov	r2, r0
 800e446:	d904      	bls.n	800e452 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800e448:	8812      	ldrh	r2, [r2, #0]
 800e44a:	f821 2b02 	strh.w	r2, [r1], #2
 800e44e:	3002      	adds	r0, #2
 800e450:	e7f7      	b.n	800e442 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800e452:	f003 0301 	and.w	r3, r3, #1
 800e456:	f023 0003 	bic.w	r0, r3, #3
 800e45a:	4408      	add	r0, r1
 800e45c:	4288      	cmp	r0, r1
 800e45e:	4614      	mov	r4, r2
 800e460:	d904      	bls.n	800e46c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800e462:	6824      	ldr	r4, [r4, #0]
 800e464:	f841 4b04 	str.w	r4, [r1], #4
 800e468:	3204      	adds	r2, #4
 800e46a:	e7f7      	b.n	800e45c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800e46c:	f003 0303 	and.w	r3, r3, #3
 800e470:	440b      	add	r3, r1
 800e472:	3a01      	subs	r2, #1
 800e474:	428b      	cmp	r3, r1
 800e476:	d90c      	bls.n	800e492 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800e478:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800e47c:	f801 0b01 	strb.w	r0, [r1], #1
 800e480:	e7f8      	b.n	800e474 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800e482:	0790      	lsls	r0, r2, #30
 800e484:	d0e7      	beq.n	800e456 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800e486:	f832 0b02 	ldrh.w	r0, [r2], #2
 800e48a:	f821 0b02 	strh.w	r0, [r1], #2
 800e48e:	3b02      	subs	r3, #2
 800e490:	e7e1      	b.n	800e456 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800e492:	2001      	movs	r0, #1
 800e494:	bd10      	pop	{r4, pc}

0800e496 <_ZN8touchgfx3HAL7noTouchEv>:
 800e496:	b510      	push	{r4, lr}
 800e498:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800e49c:	4604      	mov	r4, r0
 800e49e:	b153      	cbz	r3, 800e4b6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800e4a0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800e4a4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800e4a8:	2101      	movs	r1, #1
 800e4aa:	301c      	adds	r0, #28
 800e4ac:	f017 ffc0 	bl	8026430 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800e4b0:	2300      	movs	r3, #0
 800e4b2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800e4b6:	bd10      	pop	{r4, pc}

0800e4b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800e4b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e4bc:	b085      	sub	sp, #20
 800e4be:	ad04      	add	r5, sp, #16
 800e4c0:	4604      	mov	r4, r0
 800e4c2:	2000      	movs	r0, #0
 800e4c4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800e4c8:	69a0      	ldr	r0, [r4, #24]
 800e4ca:	6806      	ldr	r6, [r0, #0]
 800e4cc:	9501      	str	r5, [sp, #4]
 800e4ce:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800e4d2:	9500      	str	r5, [sp, #0]
 800e4d4:	6835      	ldr	r5, [r6, #0]
 800e4d6:	4699      	mov	r9, r3
 800e4d8:	460f      	mov	r7, r1
 800e4da:	4690      	mov	r8, r2
 800e4dc:	47a8      	blx	r5
 800e4de:	4d10      	ldr	r5, [pc, #64]	@ (800e520 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800e4e0:	4606      	mov	r6, r0
 800e4e2:	f8a5 9000 	strh.w	r9, [r5]
 800e4e6:	f7f5 f85f 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e4ea:	6803      	ldr	r3, [r0, #0]
 800e4ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4ee:	4798      	blx	r3
 800e4f0:	b128      	cbz	r0, 800e4fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800e4f2:	2801      	cmp	r0, #1
 800e4f4:	d00b      	beq.n	800e50e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800e4f6:	4630      	mov	r0, r6
 800e4f8:	b005      	add	sp, #20
 800e4fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e4fe:	882b      	ldrh	r3, [r5, #0]
 800e500:	fb08 7203 	mla	r2, r8, r3, r7
 800e504:	9b03      	ldr	r3, [sp, #12]
 800e506:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800e50a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800e50c:	e7f3      	b.n	800e4f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800e50e:	882a      	ldrh	r2, [r5, #0]
 800e510:	9b03      	ldr	r3, [sp, #12]
 800e512:	fb08 7202 	mla	r2, r8, r2, r7
 800e516:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800e51a:	1a9a      	subs	r2, r3, r2
 800e51c:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800e51e:	e7ea      	b.n	800e4f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800e520:	20013f5a 	.word	0x20013f5a

0800e524 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800e524:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e526:	b08b      	sub	sp, #44	@ 0x2c
 800e528:	4617      	mov	r7, r2
 800e52a:	4604      	mov	r4, r0
 800e52c:	460e      	mov	r6, r1
 800e52e:	461d      	mov	r5, r3
 800e530:	f7f5 f83a 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e534:	6803      	ldr	r3, [r0, #0]
 800e536:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e538:	4798      	blx	r3
 800e53a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800e53e:	9007      	str	r0, [sp, #28]
 800e540:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800e544:	4b0d      	ldr	r3, [pc, #52]	@ (800e57c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800e546:	6822      	ldr	r2, [r4, #0]
 800e548:	881b      	ldrh	r3, [r3, #0]
 800e54a:	9306      	str	r3, [sp, #24]
 800e54c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800e550:	9305      	str	r3, [sp, #20]
 800e552:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800e556:	9304      	str	r3, [sp, #16]
 800e558:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e55c:	9303      	str	r3, [sp, #12]
 800e55e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e562:	9302      	str	r3, [sp, #8]
 800e564:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800e568:	e9cd 5300 	strd	r5, r3, [sp]
 800e56c:	4631      	mov	r1, r6
 800e56e:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800e570:	463b      	mov	r3, r7
 800e572:	2200      	movs	r2, #0
 800e574:	4620      	mov	r0, r4
 800e576:	47a8      	blx	r5
 800e578:	b00b      	add	sp, #44	@ 0x2c
 800e57a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e57c:	20013f5a 	.word	0x20013f5a

0800e580 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800e580:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e584:	4698      	mov	r8, r3
 800e586:	6803      	ldr	r3, [r0, #0]
 800e588:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800e58a:	4b15      	ldr	r3, [pc, #84]	@ (800e5e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800e58c:	b08b      	sub	sp, #44	@ 0x2c
 800e58e:	4617      	mov	r7, r2
 800e590:	f8b3 9000 	ldrh.w	r9, [r3]
 800e594:	460e      	mov	r6, r1
 800e596:	4604      	mov	r4, r0
 800e598:	f7f5 f806 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e59c:	6803      	ldr	r3, [r0, #0]
 800e59e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e5a0:	4798      	blx	r3
 800e5a2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800e5a6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800e5aa:	2302      	movs	r3, #2
 800e5ac:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800e5b0:	2301      	movs	r3, #1
 800e5b2:	9305      	str	r3, [sp, #20]
 800e5b4:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800e5b8:	9304      	str	r3, [sp, #16]
 800e5ba:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800e5be:	9303      	str	r3, [sp, #12]
 800e5c0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800e5c4:	9302      	str	r3, [sp, #8]
 800e5c6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e5ca:	2200      	movs	r2, #0
 800e5cc:	e9cd 8300 	strd	r8, r3, [sp]
 800e5d0:	4631      	mov	r1, r6
 800e5d2:	463b      	mov	r3, r7
 800e5d4:	4620      	mov	r0, r4
 800e5d6:	47a8      	blx	r5
 800e5d8:	b00b      	add	sp, #44	@ 0x2c
 800e5da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e5de:	bf00      	nop
 800e5e0:	20013f5a 	.word	0x20013f5a

0800e5e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800e5e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e5e8:	4698      	mov	r8, r3
 800e5ea:	6803      	ldr	r3, [r0, #0]
 800e5ec:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800e5ee:	4b11      	ldr	r3, [pc, #68]	@ (800e634 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800e5f0:	b087      	sub	sp, #28
 800e5f2:	f8b3 9000 	ldrh.w	r9, [r3]
 800e5f6:	460e      	mov	r6, r1
 800e5f8:	4617      	mov	r7, r2
 800e5fa:	4604      	mov	r4, r0
 800e5fc:	f7f4 ffd4 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e600:	6803      	ldr	r3, [r0, #0]
 800e602:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e604:	4798      	blx	r3
 800e606:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800e60a:	f8cd 900c 	str.w	r9, [sp, #12]
 800e60e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800e612:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800e616:	9302      	str	r3, [sp, #8]
 800e618:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800e61c:	9301      	str	r3, [sp, #4]
 800e61e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800e622:	9300      	str	r3, [sp, #0]
 800e624:	463a      	mov	r2, r7
 800e626:	4643      	mov	r3, r8
 800e628:	4631      	mov	r1, r6
 800e62a:	4620      	mov	r0, r4
 800e62c:	47a8      	blx	r5
 800e62e:	b007      	add	sp, #28
 800e630:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e634:	20013f5a 	.word	0x20013f5a

0800e638 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800e638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e63c:	4604      	mov	r4, r0
 800e63e:	b08f      	sub	sp, #60	@ 0x3c
 800e640:	4610      	mov	r0, r2
 800e642:	460d      	mov	r5, r1
 800e644:	4691      	mov	r9, r2
 800e646:	461e      	mov	r6, r3
 800e648:	f009 fbe8 	bl	8017e1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800e64c:	2800      	cmp	r0, #0
 800e64e:	f000 809d 	beq.w	800e78c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800e652:	6823      	ldr	r3, [r4, #0]
 800e654:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800e7f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800e658:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e65a:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800e7f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800e65e:	4f61      	ldr	r7, [pc, #388]	@ (800e7e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800e660:	4620      	mov	r0, r4
 800e662:	4798      	blx	r3
 800e664:	6823      	ldr	r3, [r4, #0]
 800e666:	4620      	mov	r0, r4
 800e668:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e66a:	4798      	blx	r3
 800e66c:	f8bb 3000 	ldrh.w	r3, [fp]
 800e670:	9301      	str	r3, [sp, #4]
 800e672:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800e676:	f8ba 3000 	ldrh.w	r3, [sl]
 800e67a:	9302      	str	r3, [sp, #8]
 800e67c:	883b      	ldrh	r3, [r7, #0]
 800e67e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800e682:	9303      	str	r3, [sp, #12]
 800e684:	4b58      	ldr	r3, [pc, #352]	@ (800e7e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800e686:	9305      	str	r3, [sp, #20]
 800e688:	881a      	ldrh	r2, [r3, #0]
 800e68a:	9204      	str	r2, [sp, #16]
 800e68c:	4640      	mov	r0, r8
 800e68e:	f009 fc59 	bl	8017f44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e692:	8038      	strh	r0, [r7, #0]
 800e694:	4640      	mov	r0, r8
 800e696:	f009 fc89 	bl	8017fac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e69a:	9b05      	ldr	r3, [sp, #20]
 800e69c:	b280      	uxth	r0, r0
 800e69e:	8018      	strh	r0, [r3, #0]
 800e6a0:	4b52      	ldr	r3, [pc, #328]	@ (800e7ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800e6a2:	781b      	ldrb	r3, [r3, #0]
 800e6a4:	2b00      	cmp	r3, #0
 800e6a6:	d174      	bne.n	800e792 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800e6a8:	883b      	ldrh	r3, [r7, #0]
 800e6aa:	f8ab 3000 	strh.w	r3, [fp]
 800e6ae:	f8aa 0000 	strh.w	r0, [sl]
 800e6b2:	4648      	mov	r0, r9
 800e6b4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800e6b8:	f009 fbb0 	bl	8017e1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800e6bc:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800e6c0:	2200      	movs	r2, #0
 800e6c2:	4611      	mov	r1, r2
 800e6c4:	4628      	mov	r0, r5
 800e6c6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800e6ca:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800e6ce:	f7f4 f81c 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 800e6d2:	2301      	movs	r3, #1
 800e6d4:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800e6d8:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800e6dc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800e6e0:	2b00      	cmp	r3, #0
 800e6e2:	dd5c      	ble.n	800e79e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800e6e4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800e6e8:	2b00      	cmp	r3, #0
 800e6ea:	dd58      	ble.n	800e79e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800e6ec:	462a      	mov	r2, r5
 800e6ee:	ab0a      	add	r3, sp, #40	@ 0x28
 800e6f0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800e6f4:	6851      	ldr	r1, [r2, #4]
 800e6f6:	c303      	stmia	r3!, {r0, r1}
 800e6f8:	4631      	mov	r1, r6
 800e6fa:	a80a      	add	r0, sp, #40	@ 0x28
 800e6fc:	f7ff fc06 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 800e700:	4b38      	ldr	r3, [pc, #224]	@ (800e7e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800e702:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e706:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800e70a:	2100      	movs	r1, #0
 800e70c:	aa0a      	add	r2, sp, #40	@ 0x28
 800e70e:	4b36      	ldr	r3, [pc, #216]	@ (800e7e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800e710:	910c      	str	r1, [sp, #48]	@ 0x30
 800e712:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e716:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e71a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800e71e:	ab08      	add	r3, sp, #32
 800e720:	e883 0003 	stmia.w	r3, {r0, r1}
 800e724:	4618      	mov	r0, r3
 800e726:	a90c      	add	r1, sp, #48	@ 0x30
 800e728:	f7ff fbf0 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 800e72c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800e72e:	2b00      	cmp	r3, #0
 800e730:	d13c      	bne.n	800e7ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800e732:	2000      	movs	r0, #0
 800e734:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800e738:	2600      	movs	r6, #0
 800e73a:	682a      	ldr	r2, [r5, #0]
 800e73c:	696b      	ldr	r3, [r5, #20]
 800e73e:	616e      	str	r6, [r5, #20]
 800e740:	9305      	str	r3, [sp, #20]
 800e742:	6892      	ldr	r2, [r2, #8]
 800e744:	a908      	add	r1, sp, #32
 800e746:	4628      	mov	r0, r5
 800e748:	4790      	blx	r2
 800e74a:	9b05      	ldr	r3, [sp, #20]
 800e74c:	616b      	str	r3, [r5, #20]
 800e74e:	4652      	mov	r2, sl
 800e750:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800e754:	4649      	mov	r1, r9
 800e756:	4628      	mov	r0, r5
 800e758:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800e75c:	f7f3 ffd5 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 800e760:	4b23      	ldr	r3, [pc, #140]	@ (800e7f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800e762:	9a01      	ldr	r2, [sp, #4]
 800e764:	801a      	strh	r2, [r3, #0]
 800e766:	4b23      	ldr	r3, [pc, #140]	@ (800e7f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800e768:	9a02      	ldr	r2, [sp, #8]
 800e76a:	801a      	strh	r2, [r3, #0]
 800e76c:	4b1d      	ldr	r3, [pc, #116]	@ (800e7e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800e76e:	9a03      	ldr	r2, [sp, #12]
 800e770:	801a      	strh	r2, [r3, #0]
 800e772:	4b1d      	ldr	r3, [pc, #116]	@ (800e7e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800e774:	9a04      	ldr	r2, [sp, #16]
 800e776:	801a      	strh	r2, [r3, #0]
 800e778:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800e77c:	6823      	ldr	r3, [r4, #0]
 800e77e:	4620      	mov	r0, r4
 800e780:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e782:	4798      	blx	r3
 800e784:	6823      	ldr	r3, [r4, #0]
 800e786:	4620      	mov	r0, r4
 800e788:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e78a:	4798      	blx	r3
 800e78c:	b00f      	add	sp, #60	@ 0x3c
 800e78e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e792:	883b      	ldrh	r3, [r7, #0]
 800e794:	f8ab 0000 	strh.w	r0, [fp]
 800e798:	f8aa 3000 	strh.w	r3, [sl]
 800e79c:	e789      	b.n	800e6b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800e79e:	462a      	mov	r2, r5
 800e7a0:	ab0a      	add	r3, sp, #40	@ 0x28
 800e7a2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800e7a6:	6851      	ldr	r1, [r2, #4]
 800e7a8:	c303      	stmia	r3!, {r0, r1}
 800e7aa:	e7a9      	b.n	800e700 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800e7ac:	a807      	add	r0, sp, #28
 800e7ae:	f009 fd3f 	bl	8018230 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800e7b2:	4606      	mov	r6, r0
 800e7b4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800e7b6:	6803      	ldr	r3, [r0, #0]
 800e7b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e7ba:	4798      	blx	r3
 800e7bc:	4286      	cmp	r6, r0
 800e7be:	d1b8      	bne.n	800e732 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800e7c0:	f7f4 fef2 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e7c4:	6803      	ldr	r3, [r0, #0]
 800e7c6:	4606      	mov	r6, r0
 800e7c8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e7ca:	9305      	str	r3, [sp, #20]
 800e7cc:	a807      	add	r0, sp, #28
 800e7ce:	f009 fd2f 	bl	8018230 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800e7d2:	9b05      	ldr	r3, [sp, #20]
 800e7d4:	4601      	mov	r1, r0
 800e7d6:	4630      	mov	r0, r6
 800e7d8:	4798      	blx	r3
 800e7da:	f080 0001 	eor.w	r0, r0, #1
 800e7de:	b2c0      	uxtb	r0, r0
 800e7e0:	e7a8      	b.n	800e734 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800e7e2:	bf00      	nop
 800e7e4:	20013f54 	.word	0x20013f54
 800e7e8:	20013f56 	.word	0x20013f56
 800e7ec:	20013f58 	.word	0x20013f58
 800e7f0:	20013f5a 	.word	0x20013f5a
 800e7f4:	20013f5c 	.word	0x20013f5c

0800e7f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800e7f8:	b510      	push	{r4, lr}
 800e7fa:	4b07      	ldr	r3, [pc, #28]	@ (800e818 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800e7fc:	781b      	ldrb	r3, [r3, #0]
 800e7fe:	4604      	mov	r4, r0
 800e800:	b13b      	cbz	r3, 800e812 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800e802:	6803      	ldr	r3, [r0, #0]
 800e804:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e806:	4798      	blx	r3
 800e808:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800e80a:	4283      	cmp	r3, r0
 800e80c:	d101      	bne.n	800e812 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800e80e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800e810:	bd10      	pop	{r4, pc}
 800e812:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800e814:	e7fc      	b.n	800e810 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800e816:	bf00      	nop
 800e818:	20013f5e 	.word	0x20013f5e

0800e81c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800e81c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e820:	b08a      	sub	sp, #40	@ 0x28
 800e822:	461d      	mov	r5, r3
 800e824:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800e828:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e82c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800e830:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e834:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e838:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e83c:	2400      	movs	r4, #0
 800e83e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e842:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800e846:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e84a:	4690      	mov	r8, r2
 800e84c:	4607      	mov	r7, r0
 800e84e:	9404      	str	r4, [sp, #16]
 800e850:	f88d 4020 	strb.w	r4, [sp, #32]
 800e854:	f7ff ffd0 	bl	800e7f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e858:	fb06 8505 	mla	r5, r6, r5, r8
 800e85c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800e860:	6878      	ldr	r0, [r7, #4]
 800e862:	9505      	str	r5, [sp, #20]
 800e864:	f8ad 601e 	strh.w	r6, [sp, #30]
 800e868:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800e86c:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800e870:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800e874:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800e878:	6803      	ldr	r3, [r0, #0]
 800e87a:	a901      	add	r1, sp, #4
 800e87c:	685b      	ldr	r3, [r3, #4]
 800e87e:	4798      	blx	r3
 800e880:	b00a      	add	sp, #40	@ 0x28
 800e882:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e886 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800e886:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e88a:	b08b      	sub	sp, #44	@ 0x2c
 800e88c:	2400      	movs	r4, #0
 800e88e:	461d      	mov	r5, r3
 800e890:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800e894:	4688      	mov	r8, r1
 800e896:	4691      	mov	r9, r2
 800e898:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800e89c:	9404      	str	r4, [sp, #16]
 800e89e:	4607      	mov	r7, r0
 800e8a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e8a4:	f7ff ffa8 	bl	800e7f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e8a8:	fb06 9505 	mla	r5, r6, r5, r9
 800e8ac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e8b0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e8b4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800e8b8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800e8bc:	6878      	ldr	r0, [r7, #4]
 800e8be:	9505      	str	r5, [sp, #20]
 800e8c0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e8c4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800e8c8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800e8cc:	f8cd 8010 	str.w	r8, [sp, #16]
 800e8d0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800e8d4:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800e8d8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800e8dc:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800e8e0:	6803      	ldr	r3, [r0, #0]
 800e8e2:	a901      	add	r1, sp, #4
 800e8e4:	685b      	ldr	r3, [r3, #4]
 800e8e6:	4798      	blx	r3
 800e8e8:	b00b      	add	sp, #44	@ 0x2c
 800e8ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800e8f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800e8f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8f4:	b08a      	sub	sp, #40	@ 0x28
 800e8f6:	4698      	mov	r8, r3
 800e8f8:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800e8fc:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800e900:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800e904:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800e908:	2300      	movs	r3, #0
 800e90a:	2d0b      	cmp	r5, #11
 800e90c:	4606      	mov	r6, r0
 800e90e:	9304      	str	r3, [sp, #16]
 800e910:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800e914:	d138      	bne.n	800e988 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800e916:	2380      	movs	r3, #128	@ 0x80
 800e918:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e91c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e920:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e924:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e928:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e92c:	f88d 0020 	strb.w	r0, [sp, #32]
 800e930:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800e934:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e938:	4630      	mov	r0, r6
 800e93a:	9203      	str	r2, [sp, #12]
 800e93c:	f7ff ff5c 	bl	800e7f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e940:	2c0b      	cmp	r4, #11
 800e942:	bf98      	it	ls
 800e944:	4b1b      	ldrls	r3, [pc, #108]	@ (800e9b4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800e946:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800e94a:	bf98      	it	ls
 800e94c:	5d19      	ldrbls	r1, [r3, r4]
 800e94e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800e952:	bf88      	it	hi
 800e954:	2100      	movhi	r1, #0
 800e956:	fb02 8307 	mla	r3, r2, r7, r8
 800e95a:	10c9      	asrs	r1, r1, #3
 800e95c:	fb01 0003 	mla	r0, r1, r3, r0
 800e960:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800e964:	9005      	str	r0, [sp, #20]
 800e966:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800e96a:	6870      	ldr	r0, [r6, #4]
 800e96c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800e970:	2300      	movs	r3, #0
 800e972:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800e976:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800e97a:	6803      	ldr	r3, [r0, #0]
 800e97c:	a901      	add	r1, sp, #4
 800e97e:	685b      	ldr	r3, [r3, #4]
 800e980:	4798      	blx	r3
 800e982:	b00a      	add	sp, #40	@ 0x28
 800e984:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e988:	2d02      	cmp	r5, #2
 800e98a:	d109      	bne.n	800e9a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800e98c:	28ff      	cmp	r0, #255	@ 0xff
 800e98e:	d105      	bne.n	800e99c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800e990:	f1bc 0f00 	cmp.w	ip, #0
 800e994:	bf14      	ite	ne
 800e996:	2340      	movne	r3, #64	@ 0x40
 800e998:	2320      	moveq	r3, #32
 800e99a:	e7bd      	b.n	800e918 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e99c:	2340      	movs	r3, #64	@ 0x40
 800e99e:	e7bb      	b.n	800e918 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e9a0:	28ff      	cmp	r0, #255	@ 0xff
 800e9a2:	d105      	bne.n	800e9b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800e9a4:	f1bc 0f00 	cmp.w	ip, #0
 800e9a8:	bf14      	ite	ne
 800e9aa:	2304      	movne	r3, #4
 800e9ac:	2301      	moveq	r3, #1
 800e9ae:	e7b3      	b.n	800e918 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e9b0:	2304      	movs	r3, #4
 800e9b2:	e7b1      	b.n	800e918 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e9b4:	0802af74 	.word	0x0802af74

0800e9b8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800e9b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9bc:	b08b      	sub	sp, #44	@ 0x2c
 800e9be:	461d      	mov	r5, r3
 800e9c0:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800e9c4:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800e9c8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800e9cc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800e9d0:	bf14      	ite	ne
 800e9d2:	2308      	movne	r3, #8
 800e9d4:	2302      	moveq	r3, #2
 800e9d6:	2400      	movs	r4, #0
 800e9d8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e9dc:	4688      	mov	r8, r1
 800e9de:	4693      	mov	fp, r2
 800e9e0:	9404      	str	r4, [sp, #16]
 800e9e2:	4607      	mov	r7, r0
 800e9e4:	f7ff ff08 	bl	800e7f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e9e8:	2e0b      	cmp	r6, #11
 800e9ea:	bf98      	it	ls
 800e9ec:	4b15      	ldrls	r3, [pc, #84]	@ (800ea44 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800e9ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800e9f2:	bf98      	it	ls
 800e9f4:	5d9c      	ldrbls	r4, [r3, r6]
 800e9f6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800e9fa:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e9fe:	fb05 b50a 	mla	r5, r5, sl, fp
 800ea02:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800ea06:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ea0a:	10e4      	asrs	r4, r4, #3
 800ea0c:	fb04 0405 	mla	r4, r4, r5, r0
 800ea10:	2300      	movs	r3, #0
 800ea12:	6878      	ldr	r0, [r7, #4]
 800ea14:	9405      	str	r4, [sp, #20]
 800ea16:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ea1a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800ea1e:	f8cd 8010 	str.w	r8, [sp, #16]
 800ea22:	f88d 9020 	strb.w	r9, [sp, #32]
 800ea26:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800ea2a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800ea2e:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800ea32:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800ea36:	6803      	ldr	r3, [r0, #0]
 800ea38:	a901      	add	r1, sp, #4
 800ea3a:	685b      	ldr	r3, [r3, #4]
 800ea3c:	4798      	blx	r3
 800ea3e:	b00b      	add	sp, #44	@ 0x2c
 800ea40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea44:	0802af74 	.word	0x0802af74

0800ea48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800ea48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea4c:	461e      	mov	r6, r3
 800ea4e:	4b0a      	ldr	r3, [pc, #40]	@ (800ea78 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800ea50:	460f      	mov	r7, r1
 800ea52:	881d      	ldrh	r5, [r3, #0]
 800ea54:	4690      	mov	r8, r2
 800ea56:	f7f4 fda7 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800ea5a:	6803      	ldr	r3, [r0, #0]
 800ea5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ea5e:	4798      	blx	r3
 800ea60:	280b      	cmp	r0, #11
 800ea62:	bf9a      	itte	ls
 800ea64:	4b05      	ldrls	r3, [pc, #20]	@ (800ea7c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800ea66:	5c1c      	ldrbls	r4, [r3, r0]
 800ea68:	2400      	movhi	r4, #0
 800ea6a:	fb08 7005 	mla	r0, r8, r5, r7
 800ea6e:	10e4      	asrs	r4, r4, #3
 800ea70:	fb04 6000 	mla	r0, r4, r0, r6
 800ea74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea78:	20013f5a 	.word	0x20013f5a
 800ea7c:	0802af74 	.word	0x0802af74

0800ea80 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800ea80:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ea82:	b08b      	sub	sp, #44	@ 0x2c
 800ea84:	461f      	mov	r7, r3
 800ea86:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800ea8a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ea8e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ea92:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ea96:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ea9a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ea9e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800eaa2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800eaa6:	2500      	movs	r5, #0
 800eaa8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800eaac:	f88d 3020 	strb.w	r3, [sp, #32]
 800eab0:	4604      	mov	r4, r0
 800eab2:	4616      	mov	r6, r2
 800eab4:	9504      	str	r5, [sp, #16]
 800eab6:	f7ff fe9f 	bl	800e7f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800eaba:	463a      	mov	r2, r7
 800eabc:	4631      	mov	r1, r6
 800eabe:	4603      	mov	r3, r0
 800eac0:	4620      	mov	r0, r4
 800eac2:	f7ff ffc1 	bl	800ea48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800eac6:	4b0e      	ldr	r3, [pc, #56]	@ (800eb00 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800eac8:	9005      	str	r0, [sp, #20]
 800eaca:	881b      	ldrh	r3, [r3, #0]
 800eacc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ead0:	f7f4 fd6a 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800ead4:	6803      	ldr	r3, [r0, #0]
 800ead6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ead8:	4798      	blx	r3
 800eada:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800eadc:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800eae0:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800eae4:	9304      	str	r3, [sp, #16]
 800eae6:	6860      	ldr	r0, [r4, #4]
 800eae8:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800eaec:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800eaf0:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800eaf4:	6803      	ldr	r3, [r0, #0]
 800eaf6:	a901      	add	r1, sp, #4
 800eaf8:	685b      	ldr	r3, [r3, #4]
 800eafa:	4798      	blx	r3
 800eafc:	b00b      	add	sp, #44	@ 0x2c
 800eafe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb00:	20013f5a 	.word	0x20013f5a

0800eb04 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800eb04:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb06:	b08d      	sub	sp, #52	@ 0x34
 800eb08:	466b      	mov	r3, sp
 800eb0a:	e883 0006 	stmia.w	r3, {r1, r2}
 800eb0e:	2300      	movs	r3, #0
 800eb10:	9306      	str	r3, [sp, #24]
 800eb12:	6803      	ldr	r3, [r0, #0]
 800eb14:	f8bd 6000 	ldrh.w	r6, [sp]
 800eb18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800eb1a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800eb1e:	2501      	movs	r5, #1
 800eb20:	9503      	str	r5, [sp, #12]
 800eb22:	4604      	mov	r4, r0
 800eb24:	4798      	blx	r3
 800eb26:	463a      	mov	r2, r7
 800eb28:	4631      	mov	r1, r6
 800eb2a:	4603      	mov	r3, r0
 800eb2c:	4620      	mov	r0, r4
 800eb2e:	f7ff ff8b 	bl	800ea48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800eb32:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800eb34:	9307      	str	r3, [sp, #28]
 800eb36:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800eb3a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800eb3e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800eb42:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800eb46:	4b0f      	ldr	r3, [pc, #60]	@ (800eb84 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800eb48:	9004      	str	r0, [sp, #16]
 800eb4a:	881b      	ldrh	r3, [r3, #0]
 800eb4c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800eb50:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800eb54:	f7f4 fd28 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800eb58:	6803      	ldr	r3, [r0, #0]
 800eb5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eb5c:	4798      	blx	r3
 800eb5e:	23ff      	movs	r3, #255	@ 0xff
 800eb60:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800eb64:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800eb68:	6860      	ldr	r0, [r4, #4]
 800eb6a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800eb6e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800eb72:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800eb76:	6803      	ldr	r3, [r0, #0]
 800eb78:	a903      	add	r1, sp, #12
 800eb7a:	685b      	ldr	r3, [r3, #4]
 800eb7c:	4798      	blx	r3
 800eb7e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800eb80:	b00d      	add	sp, #52	@ 0x34
 800eb82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb84:	20013f5a 	.word	0x20013f5a

0800eb88 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800eb88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb8c:	b08c      	sub	sp, #48	@ 0x30
 800eb8e:	461e      	mov	r6, r3
 800eb90:	466d      	mov	r5, sp
 800eb92:	2300      	movs	r3, #0
 800eb94:	e885 0006 	stmia.w	r5, {r1, r2}
 800eb98:	9306      	str	r3, [sp, #24]
 800eb9a:	6803      	ldr	r3, [r0, #0]
 800eb9c:	f8bd 7000 	ldrh.w	r7, [sp]
 800eba0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800eba2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800eba6:	2501      	movs	r5, #1
 800eba8:	9503      	str	r5, [sp, #12]
 800ebaa:	4604      	mov	r4, r0
 800ebac:	4798      	blx	r3
 800ebae:	4642      	mov	r2, r8
 800ebb0:	4639      	mov	r1, r7
 800ebb2:	4603      	mov	r3, r0
 800ebb4:	4620      	mov	r0, r4
 800ebb6:	f7ff ff47 	bl	800ea48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ebba:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ebbe:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ebc2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ebc6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800ebca:	4b11      	ldr	r3, [pc, #68]	@ (800ec10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800ebcc:	9004      	str	r0, [sp, #16]
 800ebce:	881b      	ldrh	r3, [r3, #0]
 800ebd0:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800ebd4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800ebd6:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800ebda:	9607      	str	r6, [sp, #28]
 800ebdc:	f7f4 fce4 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800ebe0:	6803      	ldr	r3, [r0, #0]
 800ebe2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ebe4:	4798      	blx	r3
 800ebe6:	23ff      	movs	r3, #255	@ 0xff
 800ebe8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800ebec:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800ebf0:	6860      	ldr	r0, [r4, #4]
 800ebf2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800ebf6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800ebfa:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800ebfe:	6803      	ldr	r3, [r0, #0]
 800ec00:	a903      	add	r1, sp, #12
 800ec02:	685b      	ldr	r3, [r3, #4]
 800ec04:	4798      	blx	r3
 800ec06:	4630      	mov	r0, r6
 800ec08:	b00c      	add	sp, #48	@ 0x30
 800ec0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec0e:	bf00      	nop
 800ec10:	20013f5a 	.word	0x20013f5a

0800ec14 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800ec14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ec16:	b085      	sub	sp, #20
 800ec18:	ac02      	add	r4, sp, #8
 800ec1a:	e884 0006 	stmia.w	r4, {r1, r2}
 800ec1e:	4605      	mov	r5, r0
 800ec20:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800ec24:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800ec28:	f7ff fde6 	bl	800e7f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ec2c:	463a      	mov	r2, r7
 800ec2e:	4603      	mov	r3, r0
 800ec30:	4631      	mov	r1, r6
 800ec32:	4628      	mov	r0, r5
 800ec34:	f7ff ff08 	bl	800ea48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ec38:	4a05      	ldr	r2, [pc, #20]	@ (800ec50 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800ec3a:	682b      	ldr	r3, [r5, #0]
 800ec3c:	8812      	ldrh	r2, [r2, #0]
 800ec3e:	9200      	str	r2, [sp, #0]
 800ec40:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800ec42:	e894 0006 	ldmia.w	r4, {r1, r2}
 800ec46:	4603      	mov	r3, r0
 800ec48:	4628      	mov	r0, r5
 800ec4a:	47b0      	blx	r6
 800ec4c:	b005      	add	sp, #20
 800ec4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec50:	20013f5a 	.word	0x20013f5a

0800ec54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800ec54:	b570      	push	{r4, r5, r6, lr}
 800ec56:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800ec5a:	4604      	mov	r4, r0
 800ec5c:	b19b      	cbz	r3, 800ec86 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800ec5e:	2002      	movs	r0, #2
 800ec60:	f7f1 fe32 	bl	80008c8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800ec64:	2300      	movs	r3, #0
 800ec66:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800ec6a:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800ec6e:	6823      	ldr	r3, [r4, #0]
 800ec70:	4620      	mov	r0, r4
 800ec72:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800ec76:	f7ff fdbf 	bl	800e7f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ec7a:	462b      	mov	r3, r5
 800ec7c:	4601      	mov	r1, r0
 800ec7e:	4620      	mov	r0, r4
 800ec80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ec84:	4718      	bx	r3
 800ec86:	bd70      	pop	{r4, r5, r6, pc}

0800ec88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800ec88:	b538      	push	{r3, r4, r5, lr}
 800ec8a:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800ec8e:	428b      	cmp	r3, r1
 800ec90:	4604      	mov	r4, r0
 800ec92:	460d      	mov	r5, r1
 800ec94:	d006      	beq.n	800eca4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800ec96:	6803      	ldr	r3, [r0, #0]
 800ec98:	b929      	cbnz	r1, 800eca6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800ec9a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800ec9e:	4798      	blx	r3
 800eca0:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800eca4:	bd38      	pop	{r3, r4, r5, pc}
 800eca6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800ecaa:	e7f8      	b.n	800ec9e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800ecac <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800ecac:	b510      	push	{r4, lr}
 800ecae:	4b0d      	ldr	r3, [pc, #52]	@ (800ece4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800ecb0:	781b      	ldrb	r3, [r3, #0]
 800ecb2:	4604      	mov	r4, r0
 800ecb4:	b95b      	cbnz	r3, 800ecce <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ecb6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800ecba:	2b02      	cmp	r3, #2
 800ecbc:	d007      	beq.n	800ecce <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ecbe:	6840      	ldr	r0, [r0, #4]
 800ecc0:	f000 f92c 	bl	800ef1c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800ecc4:	b118      	cbz	r0, 800ecce <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ecc6:	6862      	ldr	r2, [r4, #4]
 800ecc8:	7a53      	ldrb	r3, [r2, #9]
 800ecca:	2b00      	cmp	r3, #0
 800eccc:	d0fc      	beq.n	800ecc8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800ecce:	f7f1 ff43 	bl	8000b58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ecd2:	4620      	mov	r0, r4
 800ecd4:	2100      	movs	r1, #0
 800ecd6:	f7ff ffd7 	bl	800ec88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ecda:	4620      	mov	r0, r4
 800ecdc:	f7ff fd8c 	bl	800e7f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ece0:	bd10      	pop	{r4, pc}
 800ece2:	bf00      	nop
 800ece4:	20013f5e 	.word	0x20013f5e

0800ece8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800ece8:	b570      	push	{r4, r5, r6, lr}
 800ecea:	4604      	mov	r4, r0
 800ecec:	6803      	ldr	r3, [r0, #0]
 800ecee:	b919      	cbnz	r1, 800ecf8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800ecf0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ecf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ecf6:	4718      	bx	r3
 800ecf8:	2200      	movs	r2, #0
 800ecfa:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800ecfe:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800ed02:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ed04:	4798      	blx	r3
 800ed06:	6863      	ldr	r3, [r4, #4]
 800ed08:	2101      	movs	r1, #1
 800ed0a:	4605      	mov	r5, r0
 800ed0c:	7299      	strb	r1, [r3, #10]
 800ed0e:	4620      	mov	r0, r4
 800ed10:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800ed14:	f7ff ffb8 	bl	800ec88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ed18:	4628      	mov	r0, r5
 800ed1a:	bd70      	pop	{r4, r5, r6, pc}

0800ed1c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800ed1c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800ed20:	1a13      	subs	r3, r2, r0
 800ed22:	4258      	negs	r0, r3
 800ed24:	4158      	adcs	r0, r3
 800ed26:	4770      	bx	lr

0800ed28 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800ed28:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800ed2c:	1a9b      	subs	r3, r3, r2
 800ed2e:	2b00      	cmp	r3, #0
 800ed30:	bfdc      	itt	le
 800ed32:	6882      	ldrle	r2, [r0, #8]
 800ed34:	189b      	addle	r3, r3, r2
 800ed36:	2b01      	cmp	r3, #1
 800ed38:	bfcc      	ite	gt
 800ed3a:	2000      	movgt	r0, #0
 800ed3c:	2001      	movle	r0, #1
 800ed3e:	4770      	bx	lr

0800ed40 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800ed40:	6902      	ldr	r2, [r0, #16]
 800ed42:	6843      	ldr	r3, [r0, #4]
 800ed44:	2024      	movs	r0, #36	@ 0x24
 800ed46:	fb00 3002 	mla	r0, r0, r2, r3
 800ed4a:	4770      	bx	lr

0800ed4c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800ed4c:	6803      	ldr	r3, [r0, #0]
 800ed4e:	691b      	ldr	r3, [r3, #16]
 800ed50:	4718      	bx	r3

0800ed52 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800ed52:	b570      	push	{r4, r5, r6, lr}
 800ed54:	2301      	movs	r3, #1
 800ed56:	7203      	strb	r3, [r0, #8]
 800ed58:	4604      	mov	r4, r0
 800ed5a:	6840      	ldr	r0, [r0, #4]
 800ed5c:	6803      	ldr	r3, [r0, #0]
 800ed5e:	699b      	ldr	r3, [r3, #24]
 800ed60:	4798      	blx	r3
 800ed62:	6803      	ldr	r3, [r0, #0]
 800ed64:	2b40      	cmp	r3, #64	@ 0x40
 800ed66:	4605      	mov	r5, r0
 800ed68:	d00c      	beq.n	800ed84 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ed6a:	d810      	bhi.n	800ed8e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800ed6c:	2b04      	cmp	r3, #4
 800ed6e:	d01d      	beq.n	800edac <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800ed70:	d804      	bhi.n	800ed7c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800ed72:	2b01      	cmp	r3, #1
 800ed74:	d006      	beq.n	800ed84 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ed76:	2b02      	cmp	r3, #2
 800ed78:	d02c      	beq.n	800edd4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800ed7a:	bd70      	pop	{r4, r5, r6, pc}
 800ed7c:	2b08      	cmp	r3, #8
 800ed7e:	d01d      	beq.n	800edbc <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800ed80:	2b20      	cmp	r3, #32
 800ed82:	d1fa      	bne.n	800ed7a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800ed84:	6823      	ldr	r3, [r4, #0]
 800ed86:	4620      	mov	r0, r4
 800ed88:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ed8a:	4798      	blx	r3
 800ed8c:	e013      	b.n	800edb6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800ed8e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800ed92:	d0f7      	beq.n	800ed84 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ed94:	d804      	bhi.n	800eda0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800ed96:	2b80      	cmp	r3, #128	@ 0x80
 800ed98:	d0f4      	beq.n	800ed84 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ed9a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800ed9e:	e7f0      	b.n	800ed82 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800eda0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800eda4:	d0ee      	beq.n	800ed84 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800eda6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800edaa:	e7e5      	b.n	800ed78 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800edac:	6823      	ldr	r3, [r4, #0]
 800edae:	7f01      	ldrb	r1, [r0, #28]
 800edb0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800edb2:	4620      	mov	r0, r4
 800edb4:	4798      	blx	r3
 800edb6:	6823      	ldr	r3, [r4, #0]
 800edb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800edba:	e006      	b.n	800edca <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800edbc:	6823      	ldr	r3, [r4, #0]
 800edbe:	7f01      	ldrb	r1, [r0, #28]
 800edc0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800edc2:	4620      	mov	r0, r4
 800edc4:	4798      	blx	r3
 800edc6:	6823      	ldr	r3, [r4, #0]
 800edc8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800edca:	4629      	mov	r1, r5
 800edcc:	4620      	mov	r0, r4
 800edce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800edd2:	4718      	bx	r3
 800edd4:	6823      	ldr	r3, [r4, #0]
 800edd6:	4620      	mov	r0, r4
 800edd8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800edda:	4798      	blx	r3
 800eddc:	e7f3      	b.n	800edc6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800edde <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800edde:	4770      	bx	lr

0800ede0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800ede0:	4770      	bx	lr

0800ede2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800ede2:	4770      	bx	lr

0800ede4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800ede4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800ede8:	1ad2      	subs	r2, r2, r3
 800edea:	2a00      	cmp	r2, #0
 800edec:	b510      	push	{r4, lr}
 800edee:	bfdc      	itt	le
 800edf0:	6884      	ldrle	r4, [r0, #8]
 800edf2:	1912      	addle	r2, r2, r4
 800edf4:	2a01      	cmp	r2, #1
 800edf6:	dd16      	ble.n	800ee26 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800edf8:	6842      	ldr	r2, [r0, #4]
 800edfa:	2424      	movs	r4, #36	@ 0x24
 800edfc:	fb04 2303 	mla	r3, r4, r3, r2
 800ee00:	f101 0220 	add.w	r2, r1, #32
 800ee04:	f851 4b04 	ldr.w	r4, [r1], #4
 800ee08:	f843 4b04 	str.w	r4, [r3], #4
 800ee0c:	4291      	cmp	r1, r2
 800ee0e:	d1f9      	bne.n	800ee04 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800ee10:	780a      	ldrb	r2, [r1, #0]
 800ee12:	701a      	strb	r2, [r3, #0]
 800ee14:	68c3      	ldr	r3, [r0, #12]
 800ee16:	6882      	ldr	r2, [r0, #8]
 800ee18:	f3bf 8f5b 	dmb	ish
 800ee1c:	3301      	adds	r3, #1
 800ee1e:	429a      	cmp	r2, r3
 800ee20:	bfd8      	it	le
 800ee22:	1a9b      	suble	r3, r3, r2
 800ee24:	60c3      	str	r3, [r0, #12]
 800ee26:	bd10      	pop	{r4, pc}

0800ee28 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800ee28:	6903      	ldr	r3, [r0, #16]
 800ee2a:	6882      	ldr	r2, [r0, #8]
 800ee2c:	f3bf 8f5b 	dmb	ish
 800ee30:	3301      	adds	r3, #1
 800ee32:	429a      	cmp	r2, r3
 800ee34:	bfd8      	it	le
 800ee36:	1a9b      	suble	r3, r3, r2
 800ee38:	6103      	str	r3, [r0, #16]
 800ee3a:	4770      	bx	lr

0800ee3c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ee3c:	b570      	push	{r4, r5, r6, lr}
 800ee3e:	4604      	mov	r4, r0
 800ee40:	460e      	mov	r6, r1
 800ee42:	6860      	ldr	r0, [r4, #4]
 800ee44:	6803      	ldr	r3, [r0, #0]
 800ee46:	685b      	ldr	r3, [r3, #4]
 800ee48:	4798      	blx	r3
 800ee4a:	2800      	cmp	r0, #0
 800ee4c:	d1f9      	bne.n	800ee42 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ee4e:	4d0d      	ldr	r5, [pc, #52]	@ (800ee84 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800ee50:	6828      	ldr	r0, [r5, #0]
 800ee52:	6803      	ldr	r3, [r0, #0]
 800ee54:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ee56:	4798      	blx	r3
 800ee58:	f7f1 fe8c 	bl	8000b74 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800ee5c:	6828      	ldr	r0, [r5, #0]
 800ee5e:	2101      	movs	r1, #1
 800ee60:	f7ff ff12 	bl	800ec88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ee64:	6860      	ldr	r0, [r4, #4]
 800ee66:	6803      	ldr	r3, [r0, #0]
 800ee68:	4631      	mov	r1, r6
 800ee6a:	689b      	ldr	r3, [r3, #8]
 800ee6c:	4798      	blx	r3
 800ee6e:	6823      	ldr	r3, [r4, #0]
 800ee70:	4620      	mov	r0, r4
 800ee72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ee74:	4798      	blx	r3
 800ee76:	6828      	ldr	r0, [r5, #0]
 800ee78:	6803      	ldr	r3, [r0, #0]
 800ee7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ee7e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800ee80:	4718      	bx	r3
 800ee82:	bf00      	nop
 800ee84:	20013f60 	.word	0x20013f60

0800ee88 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800ee88:	b508      	push	{r3, lr}
 800ee8a:	f7f1 fe65 	bl	8000b58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ee8e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ee92:	f7f1 be69 	b.w	8000b68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ee96 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800ee96:	b510      	push	{r4, lr}
 800ee98:	2114      	movs	r1, #20
 800ee9a:	4604      	mov	r4, r0
 800ee9c:	f018 f89a 	bl	8026fd4 <_ZdlPvj>
 800eea0:	4620      	mov	r0, r4
 800eea2:	bd10      	pop	{r4, pc}

0800eea4 <_ZN8touchgfx13DMA_Interface5startEv>:
 800eea4:	b510      	push	{r4, lr}
 800eea6:	4604      	mov	r4, r0
 800eea8:	6840      	ldr	r0, [r0, #4]
 800eeaa:	6803      	ldr	r3, [r0, #0]
 800eeac:	681b      	ldr	r3, [r3, #0]
 800eeae:	4798      	blx	r3
 800eeb0:	b948      	cbnz	r0, 800eec6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800eeb2:	7a63      	ldrb	r3, [r4, #9]
 800eeb4:	b13b      	cbz	r3, 800eec6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800eeb6:	7a23      	ldrb	r3, [r4, #8]
 800eeb8:	b92b      	cbnz	r3, 800eec6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800eeba:	6823      	ldr	r3, [r4, #0]
 800eebc:	4620      	mov	r0, r4
 800eebe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800eec0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eec4:	4718      	bx	r3
 800eec6:	bd10      	pop	{r4, pc}

0800eec8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800eec8:	b570      	push	{r4, r5, r6, lr}
 800eeca:	4604      	mov	r4, r0
 800eecc:	6840      	ldr	r0, [r0, #4]
 800eece:	6803      	ldr	r3, [r0, #0]
 800eed0:	681b      	ldr	r3, [r3, #0]
 800eed2:	4798      	blx	r3
 800eed4:	4605      	mov	r5, r0
 800eed6:	b930      	cbnz	r0, 800eee6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800eed8:	7a23      	ldrb	r3, [r4, #8]
 800eeda:	b123      	cbz	r3, 800eee6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800eedc:	6860      	ldr	r0, [r4, #4]
 800eede:	6803      	ldr	r3, [r0, #0]
 800eee0:	695b      	ldr	r3, [r3, #20]
 800eee2:	4798      	blx	r3
 800eee4:	7225      	strb	r5, [r4, #8]
 800eee6:	6860      	ldr	r0, [r4, #4]
 800eee8:	6803      	ldr	r3, [r0, #0]
 800eeea:	681b      	ldr	r3, [r3, #0]
 800eeec:	4798      	blx	r3
 800eeee:	b928      	cbnz	r0, 800eefc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800eef0:	6823      	ldr	r3, [r4, #0]
 800eef2:	4620      	mov	r0, r4
 800eef4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800eef6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eefa:	4718      	bx	r3
 800eefc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ef00:	f7f1 be40 	b.w	8000b84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800ef04 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800ef04:	b510      	push	{r4, lr}
 800ef06:	4c04      	ldr	r4, [pc, #16]	@ (800ef18 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800ef08:	6082      	str	r2, [r0, #8]
 800ef0a:	2200      	movs	r2, #0
 800ef0c:	e9c0 4100 	strd	r4, r1, [r0]
 800ef10:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800ef14:	bd10      	pop	{r4, pc}
 800ef16:	bf00      	nop
 800ef18:	0802af88 	.word	0x0802af88

0800ef1c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800ef1c:	6840      	ldr	r0, [r0, #4]
 800ef1e:	6803      	ldr	r3, [r0, #0]
 800ef20:	681b      	ldr	r3, [r3, #0]
 800ef22:	4718      	bx	r3
 800ef24:	0000      	movs	r0, r0
	...

0800ef28 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800ef28:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800ef2c:	4f20      	ldr	r7, [pc, #128]	@ (800efb0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800ef2e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800ef32:	fb80 0101 	smull	r0, r1, r0, r1
 800ef36:	fba0 bc07 	umull	fp, ip, r0, r7
 800ef3a:	fb07 cc01 	mla	ip, r7, r1, ip
 800ef3e:	fb0b f70c 	mul.w	r7, fp, ip
 800ef42:	fbab 010b 	umull	r0, r1, fp, fp
 800ef46:	461c      	mov	r4, r3
 800ef48:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800ef4c:	fb00 f30c 	mul.w	r3, r0, ip
 800ef50:	fb0b 3301 	mla	r3, fp, r1, r3
 800ef54:	fba0 010b 	umull	r0, r1, r0, fp
 800ef58:	4616      	mov	r6, r2
 800ef5a:	4419      	add	r1, r3
 800ef5c:	a312      	add	r3, pc, #72	@ (adr r3, 800efa8 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800ef5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ef62:	f7f1 f995 	bl	8000290 <__aeabi_ldivmod>
 800ef66:	2ef7      	cmp	r6, #247	@ 0xf7
 800ef68:	b290      	uxth	r0, r2
 800ef6a:	bf9e      	ittt	ls
 800ef6c:	f002 0207 	andls.w	r2, r2, #7
 800ef70:	18b6      	addls	r6, r6, r2
 800ef72:	b2f6      	uxtbls	r6, r6
 800ef74:	2cfb      	cmp	r4, #251	@ 0xfb
 800ef76:	bf9e      	ittt	ls
 800ef78:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800ef7c:	18e4      	addls	r4, r4, r3
 800ef7e:	b2e4      	uxtbls	r4, r4
 800ef80:	2df7      	cmp	r5, #247	@ 0xf7
 800ef82:	bf9c      	itt	ls
 800ef84:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800ef88:	182d      	addls	r5, r5, r0
 800ef8a:	480a      	ldr	r0, [pc, #40]	@ (800efb4 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800ef8c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800ef90:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800ef94:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800ef98:	bf98      	it	ls
 800ef9a:	b2ed      	uxtbls	r5, r5
 800ef9c:	4304      	orrs	r4, r0
 800ef9e:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800efa2:	b280      	uxth	r0, r0
 800efa4:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800efa8:	797a8d77 	.word	0x797a8d77
 800efac:	00000000 	.word	0x00000000
 800efb0:	00ec4ba7 	.word	0x00ec4ba7
 800efb4:	fffff800 	.word	0xfffff800

0800efb8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800efb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efbc:	ed2d 8b02 	vpush	{d8}
 800efc0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800efc4:	b087      	sub	sp, #28
 800efc6:	7c41      	ldrb	r1, [r0, #17]
 800efc8:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800efcc:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800efd0:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800efd4:	4605      	mov	r5, r0
 800efd6:	2900      	cmp	r1, #0
 800efd8:	f000 809a 	beq.w	800f110 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800efdc:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800efe0:	ed90 7a08 	vldr	s14, [r0, #32]
 800efe4:	68c0      	ldr	r0, [r0, #12]
 800efe6:	454a      	cmp	r2, r9
 800efe8:	db25      	blt.n	800f036 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800efea:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800efee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eff2:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800eff6:	bfc8      	it	gt
 800eff8:	2200      	movgt	r2, #0
 800effa:	5882      	ldr	r2, [r0, r2]
 800effc:	2100      	movs	r1, #0
 800effe:	7c2d      	ldrb	r5, [r5, #16]
 800f000:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800f004:	0950      	lsrs	r0, r2, #5
 800f006:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800f00a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800f00e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800f012:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800f016:	2d00      	cmp	r5, #0
 800f018:	d044      	beq.n	800f0a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800f01a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800f01e:	d141      	bne.n	800f0a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800f020:	bb61      	cbnz	r1, 800f07c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800f022:	ea4e 0000 	orr.w	r0, lr, r0
 800f026:	ea4c 0500 	orr.w	r5, ip, r0
 800f02a:	42bc      	cmp	r4, r7
 800f02c:	f080 8217 	bcs.w	800f45e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f030:	f824 5b02 	strh.w	r5, [r4], #2
 800f034:	e7f9      	b.n	800f02a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800f036:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 800f03a:	454f      	cmp	r7, r9
 800f03c:	dc08      	bgt.n	800f050 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800f03e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800f042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f046:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800f04a:	bfd8      	it	le
 800f04c:	2200      	movle	r2, #0
 800f04e:	e7d4      	b.n	800effa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800f050:	eba9 0202 	sub.w	r2, r9, r2
 800f054:	ee07 2a90 	vmov	s15, r2
 800f058:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f05c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800f060:	ee67 7a87 	vmul.f32	s15, s15, s14
 800f064:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f068:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f06c:	ee17 2a90 	vmov	r2, s15
 800f070:	bfd8      	it	le
 800f072:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800f076:	0092      	lsls	r2, r2, #2
 800f078:	5882      	ldr	r2, [r0, r2]
 800f07a:	e7c0      	b.n	800effe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800f07c:	b2d5      	uxtb	r5, r2
 800f07e:	fa5f f888 	uxtb.w	r8, r8
 800f082:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800f086:	461e      	mov	r6, r3
 800f088:	42bc      	cmp	r4, r7
 800f08a:	f080 81e8 	bcs.w	800f45e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f08e:	4630      	mov	r0, r6
 800f090:	9500      	str	r5, [sp, #0]
 800f092:	4643      	mov	r3, r8
 800f094:	4652      	mov	r2, sl
 800f096:	4649      	mov	r1, r9
 800f098:	f7ff ff46 	bl	800ef28 <_ZN8touchgfxL10applyNoiseEiihhh>
 800f09c:	3601      	adds	r6, #1
 800f09e:	f824 0b02 	strh.w	r0, [r4], #2
 800f0a2:	e7f1      	b.n	800f088 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800f0a4:	0e12      	lsrs	r2, r2, #24
 800f0a6:	fb02 f20a 	mul.w	r2, r2, sl
 800f0aa:	1c53      	adds	r3, r2, #1
 800f0ac:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800f0b0:	1212      	asrs	r2, r2, #8
 800f0b2:	fb02 f50c 	mul.w	r5, r2, ip
 800f0b6:	fb02 f10e 	mul.w	r1, r2, lr
 800f0ba:	4350      	muls	r0, r2
 800f0bc:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800f470 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800f0c0:	43d2      	mvns	r2, r2
 800f0c2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800f0c6:	26ff      	movs	r6, #255	@ 0xff
 800f0c8:	42bc      	cmp	r4, r7
 800f0ca:	f080 81c8 	bcs.w	800f45e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f0ce:	f8b4 e000 	ldrh.w	lr, [r4]
 800f0d2:	ea0e 030c 	and.w	r3, lr, ip
 800f0d6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800f0da:	fb02 1303 	mla	r3, r2, r3, r1
 800f0de:	fb02 0808 	mla	r8, r2, r8, r0
 800f0e2:	fb93 f3f6 	sdiv	r3, r3, r6
 800f0e6:	fb98 f8f6 	sdiv	r8, r8, r6
 800f0ea:	ea03 030c 	and.w	r3, r3, ip
 800f0ee:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800f0f2:	f00e 0e1f 	and.w	lr, lr, #31
 800f0f6:	ea43 0308 	orr.w	r3, r3, r8
 800f0fa:	fb02 5e0e 	mla	lr, r2, lr, r5
 800f0fe:	fb9e fef6 	sdiv	lr, lr, r6
 800f102:	f00e 0e1f 	and.w	lr, lr, #31
 800f106:	ea43 030e 	orr.w	r3, r3, lr
 800f10a:	f824 3b02 	strh.w	r3, [r4], #2
 800f10e:	e7db      	b.n	800f0c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800f110:	7c82      	ldrb	r2, [r0, #18]
 800f112:	2a00      	cmp	r2, #0
 800f114:	d04f      	beq.n	800f1b6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800f116:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f11a:	ee07 2a90 	vmov	s15, r2
 800f11e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f122:	ee07 3a10 	vmov	s14, r3
 800f126:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f12a:	461f      	mov	r7, r3
 800f12c:	eef4 6ae7 	vcmpe.f32	s13, s15
 800f130:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f134:	f200 8095 	bhi.w	800f262 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800f138:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800f13c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800f140:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800f144:	ee37 7a66 	vsub.f32	s14, s14, s13
 800f148:	ee06 6a90 	vmov	s13, r6
 800f14c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f150:	68ea      	ldr	r2, [r5, #12]
 800f152:	f895 c010 	ldrb.w	ip, [r5, #16]
 800f156:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800f15a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f15e:	bf4a      	itet	mi
 800f160:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800f164:	9602      	strpl	r6, [sp, #8]
 800f166:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800f16a:	ed95 7a08 	vldr	s14, [r5, #32]
 800f16e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800f172:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f176:	bfc8      	it	gt
 800f178:	2100      	movgt	r1, #0
 800f17a:	5852      	ldr	r2, [r2, r1]
 800f17c:	9902      	ldr	r1, [sp, #8]
 800f17e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800f182:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f186:	0950      	lsrs	r0, r2, #5
 800f188:	9103      	str	r1, [sp, #12]
 800f18a:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800f18e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800f192:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800f196:	f1bc 0f00 	cmp.w	ip, #0
 800f19a:	d024      	beq.n	800f1e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800f19c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800f1a0:	d121      	bne.n	800f1e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800f1a2:	ea4b 0b00 	orr.w	fp, fp, r0
 800f1a6:	ea41 010b 	orr.w	r1, r1, fp
 800f1aa:	9a03      	ldr	r2, [sp, #12]
 800f1ac:	4294      	cmp	r4, r2
 800f1ae:	d255      	bcs.n	800f25c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800f1b0:	f824 1b02 	strh.w	r1, [r4], #2
 800f1b4:	e7f9      	b.n	800f1aa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800f1b6:	ee07 9a10 	vmov	s14, r9
 800f1ba:	edd0 7a06 	vldr	s15, [r0, #24]
 800f1be:	edd0 6a05 	vldr	s13, [r0, #20]
 800f1c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f1c6:	ee37 7a67 	vsub.f32	s14, s14, s15
 800f1ca:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800f1ce:	ed90 7a08 	vldr	s14, [r0, #32]
 800f1d2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800f1d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1da:	bf44      	itt	mi
 800f1dc:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800f1e0:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800f1e4:	e79d      	b.n	800f122 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800f1e6:	0e12      	lsrs	r2, r2, #24
 800f1e8:	fb02 f20a 	mul.w	r2, r2, sl
 800f1ec:	f102 0c01 	add.w	ip, r2, #1
 800f1f0:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800f1f4:	1212      	asrs	r2, r2, #8
 800f1f6:	4350      	muls	r0, r2
 800f1f8:	4351      	muls	r1, r2
 800f1fa:	fb02 fb0b 	mul.w	fp, r2, fp
 800f1fe:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800f470 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800f202:	9004      	str	r0, [sp, #16]
 800f204:	43d2      	mvns	r2, r2
 800f206:	9105      	str	r1, [sp, #20]
 800f208:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800f20c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800f210:	9903      	ldr	r1, [sp, #12]
 800f212:	428c      	cmp	r4, r1
 800f214:	d222      	bcs.n	800f25c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800f216:	8820      	ldrh	r0, [r4, #0]
 800f218:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800f21c:	460f      	mov	r7, r1
 800f21e:	9904      	ldr	r1, [sp, #16]
 800f220:	ea00 0c08 	and.w	ip, r0, r8
 800f224:	fb02 bc0c 	mla	ip, r2, ip, fp
 800f228:	fb02 1107 	mla	r1, r2, r7, r1
 800f22c:	fb9c fcfe 	sdiv	ip, ip, lr
 800f230:	fb91 f1fe 	sdiv	r1, r1, lr
 800f234:	ea0c 0c08 	and.w	ip, ip, r8
 800f238:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800f23c:	ea4c 0101 	orr.w	r1, ip, r1
 800f240:	f000 0c1f 	and.w	ip, r0, #31
 800f244:	9805      	ldr	r0, [sp, #20]
 800f246:	fb02 0c0c 	mla	ip, r2, ip, r0
 800f24a:	fb9c fcfe 	sdiv	ip, ip, lr
 800f24e:	f00c 0c1f 	and.w	ip, ip, #31
 800f252:	ea41 010c 	orr.w	r1, r1, ip
 800f256:	f824 1b02 	strh.w	r1, [r4], #2
 800f25a:	e7d9      	b.n	800f210 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800f25c:	9a02      	ldr	r2, [sp, #8]
 800f25e:	441a      	add	r2, r3
 800f260:	4617      	mov	r7, r2
 800f262:	441e      	add	r6, r3
 800f264:	b236      	sxth	r6, r6
 800f266:	42be      	cmp	r6, r7
 800f268:	f340 80f9 	ble.w	800f45e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f26c:	ed95 7a07 	vldr	s14, [r5, #28]
 800f270:	ee06 7a90 	vmov	s13, r7
 800f274:	ee37 7a87 	vadd.f32	s14, s15, s14
 800f278:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f27c:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800f280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f284:	f340 80b5 	ble.w	800f3f2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800f288:	ee06 6a10 	vmov	s12, r6
 800f28c:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800f290:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800f468 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800f294:	7c2b      	ldrb	r3, [r5, #16]
 800f296:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800f29a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f29e:	bfd8      	it	le
 800f2a0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800f2a4:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800f46c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800f2a8:	bfd8      	it	le
 800f2aa:	ee17 8a10 	vmovle	r8, s14
 800f2ae:	ed95 7a08 	vldr	s14, [r5, #32]
 800f2b2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800f2b6:	bfc8      	it	gt
 800f2b8:	46b0      	movgt	r8, r6
 800f2ba:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800f2be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f2c2:	eba8 0707 	sub.w	r7, r8, r7
 800f2c6:	bfd8      	it	le
 800f2c8:	eeb0 8a46 	vmovle.f32	s16, s12
 800f2cc:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800f2d0:	eea7 8a27 	vfma.f32	s16, s14, s15
 800f2d4:	b1db      	cbz	r3, 800f30e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800f2d6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800f2da:	d118      	bne.n	800f30e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800f2dc:	42bc      	cmp	r4, r7
 800f2de:	d262      	bcs.n	800f3a6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800f2e0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800f2e4:	68eb      	ldr	r3, [r5, #12]
 800f2e6:	ee17 0a90 	vmov	r0, s15
 800f2ea:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800f2ee:	b2d3      	uxtb	r3, r2
 800f2f0:	9300      	str	r3, [sp, #0]
 800f2f2:	4649      	mov	r1, r9
 800f2f4:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800f2f8:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800f2fc:	f7ff fe14 	bl	800ef28 <_ZN8touchgfxL10applyNoiseEiihhh>
 800f300:	f824 0b02 	strh.w	r0, [r4], #2
 800f304:	edd5 7a08 	vldr	s15, [r5, #32]
 800f308:	ee38 8a27 	vadd.f32	s16, s16, s15
 800f30c:	e7e6      	b.n	800f2dc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800f30e:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800f470 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800f312:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800f316:	42bc      	cmp	r4, r7
 800f318:	d245      	bcs.n	800f3a6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800f31a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800f31e:	68eb      	ldr	r3, [r5, #12]
 800f320:	f8b4 e000 	ldrh.w	lr, [r4]
 800f324:	ee17 2a90 	vmov	r2, s15
 800f328:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800f32c:	0e13      	lsrs	r3, r2, #24
 800f32e:	fb03 f30a 	mul.w	r3, r3, sl
 800f332:	1c58      	adds	r0, r3, #1
 800f334:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800f338:	1200      	asrs	r0, r0, #8
 800f33a:	ea6f 0c00 	mvn.w	ip, r0
 800f33e:	fa5f fc8c 	uxtb.w	ip, ip
 800f342:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800f346:	ea0e 030b 	and.w	r3, lr, fp
 800f34a:	fb0c f303 	mul.w	r3, ip, r3
 800f34e:	b289      	uxth	r1, r1
 800f350:	fb00 3101 	mla	r1, r0, r1, r3
 800f354:	fb91 f1f9 	sdiv	r1, r1, r9
 800f358:	ea01 030b 	and.w	r3, r1, fp
 800f35c:	9302      	str	r3, [sp, #8]
 800f35e:	0953      	lsrs	r3, r2, #5
 800f360:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800f364:	4619      	mov	r1, r3
 800f366:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800f36a:	fb0c f303 	mul.w	r3, ip, r3
 800f36e:	fb00 3301 	mla	r3, r0, r1, r3
 800f372:	f00e 0e1f 	and.w	lr, lr, #31
 800f376:	9902      	ldr	r1, [sp, #8]
 800f378:	fb93 f3f9 	sdiv	r3, r3, r9
 800f37c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800f380:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800f384:	fb0c fc0e 	mul.w	ip, ip, lr
 800f388:	4319      	orrs	r1, r3
 800f38a:	fb00 c002 	mla	r0, r0, r2, ip
 800f38e:	fb90 f0f9 	sdiv	r0, r0, r9
 800f392:	f000 001f 	and.w	r0, r0, #31
 800f396:	4301      	orrs	r1, r0
 800f398:	f824 1b02 	strh.w	r1, [r4], #2
 800f39c:	edd5 7a08 	vldr	s15, [r5, #32]
 800f3a0:	ee38 8a27 	vadd.f32	s16, s16, s15
 800f3a4:	e7b7      	b.n	800f316 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800f3a6:	4546      	cmp	r6, r8
 800f3a8:	dd59      	ble.n	800f45e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f3aa:	edd5 7a08 	vldr	s15, [r5, #32]
 800f3ae:	68ea      	ldr	r2, [r5, #12]
 800f3b0:	7c29      	ldrb	r1, [r5, #16]
 800f3b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f3b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3ba:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800f3be:	bfd8      	it	le
 800f3c0:	2300      	movle	r3, #0
 800f3c2:	eba6 0608 	sub.w	r6, r6, r8
 800f3c6:	58d2      	ldr	r2, [r2, r3]
 800f3c8:	0a10      	lsrs	r0, r2, #8
 800f3ca:	0953      	lsrs	r3, r2, #5
 800f3cc:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800f3d0:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800f3d4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800f3d8:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800f3dc:	b159      	cbz	r1, 800f3f6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800f3de:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800f3e2:	d108      	bne.n	800f3f6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800f3e4:	4318      	orrs	r0, r3
 800f3e6:	4338      	orrs	r0, r7
 800f3e8:	42b4      	cmp	r4, r6
 800f3ea:	d238      	bcs.n	800f45e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f3ec:	f824 0b02 	strh.w	r0, [r4], #2
 800f3f0:	e7fa      	b.n	800f3e8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800f3f2:	46b8      	mov	r8, r7
 800f3f4:	e7d9      	b.n	800f3aa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800f3f6:	0e12      	lsrs	r2, r2, #24
 800f3f8:	fb02 f10a 	mul.w	r1, r2, sl
 800f3fc:	1c4a      	adds	r2, r1, #1
 800f3fe:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800f402:	1212      	asrs	r2, r2, #8
 800f404:	fb02 f507 	mul.w	r5, r2, r7
 800f408:	4350      	muls	r0, r2
 800f40a:	4353      	muls	r3, r2
 800f40c:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800f470 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800f410:	43d2      	mvns	r2, r2
 800f412:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800f416:	27ff      	movs	r7, #255	@ 0xff
 800f418:	42b4      	cmp	r4, r6
 800f41a:	d220      	bcs.n	800f45e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f41c:	f8b4 e000 	ldrh.w	lr, [r4]
 800f420:	ea0e 010c 	and.w	r1, lr, ip
 800f424:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800f428:	fb02 0101 	mla	r1, r2, r1, r0
 800f42c:	fb02 3808 	mla	r8, r2, r8, r3
 800f430:	fb91 f1f7 	sdiv	r1, r1, r7
 800f434:	fb98 f8f7 	sdiv	r8, r8, r7
 800f438:	ea01 010c 	and.w	r1, r1, ip
 800f43c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800f440:	f00e 0e1f 	and.w	lr, lr, #31
 800f444:	ea41 0108 	orr.w	r1, r1, r8
 800f448:	fb02 5e0e 	mla	lr, r2, lr, r5
 800f44c:	fb9e fef7 	sdiv	lr, lr, r7
 800f450:	f00e 0e1f 	and.w	lr, lr, #31
 800f454:	ea41 010e 	orr.w	r1, r1, lr
 800f458:	f824 1b02 	strh.w	r1, [r4], #2
 800f45c:	e7dc      	b.n	800f418 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800f45e:	b007      	add	sp, #28
 800f460:	ecbd 8b02 	vpop	{d8}
 800f464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f468:	00000000 	.word	0x00000000
 800f46c:	447ffffe 	.word	0x447ffffe
 800f470:	fffff800 	.word	0xfffff800

0800f474 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800f474:	4770      	bx	lr

0800f476 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800f476:	4770      	bx	lr

0800f478 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800f478:	b510      	push	{r4, lr}
 800f47a:	2124      	movs	r1, #36	@ 0x24
 800f47c:	4604      	mov	r4, r0
 800f47e:	f017 fda9 	bl	8026fd4 <_ZdlPvj>
 800f482:	4620      	mov	r0, r4
 800f484:	bd10      	pop	{r4, pc}
	...

0800f488 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800f488:	4b06      	ldr	r3, [pc, #24]	@ (800f4a4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800f48a:	60c1      	str	r1, [r0, #12]
 800f48c:	094a      	lsrs	r2, r1, #5
 800f48e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800f492:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800f496:	4313      	orrs	r3, r2
 800f498:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800f49c:	4319      	orrs	r1, r3
 800f49e:	8201      	strh	r1, [r0, #16]
 800f4a0:	4770      	bx	lr
 800f4a2:	bf00      	nop
 800f4a4:	fffff800 	.word	0xfffff800

0800f4a8 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800f4a8:	f1a0 0008 	sub.w	r0, r0, #8
 800f4ac:	e7ec      	b.n	800f488 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800f4ae:	bf00      	nop

0800f4b0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800f4b0:	b508      	push	{r3, lr}
 800f4b2:	4b05      	ldr	r3, [pc, #20]	@ (800f4c8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800f4b4:	6818      	ldr	r0, [r3, #0]
 800f4b6:	6803      	ldr	r3, [r0, #0]
 800f4b8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800f4bc:	4798      	blx	r3
 800f4be:	1e43      	subs	r3, r0, #1
 800f4c0:	4258      	negs	r0, r3
 800f4c2:	4158      	adcs	r0, r3
 800f4c4:	bd08      	pop	{r3, pc}
 800f4c6:	bf00      	nop
 800f4c8:	20013f60 	.word	0x20013f60

0800f4cc <_ZN8touchgfx13PainterRGB565D1Ev>:
 800f4cc:	4770      	bx	lr

0800f4ce <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800f4ce:	3808      	subs	r0, #8
 800f4d0:	4770      	bx	lr

0800f4d2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800f4d2:	b430      	push	{r4, r5}
 800f4d4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800f4d8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800f4dc:	8a02      	ldrh	r2, [r0, #16]
 800f4de:	9202      	str	r2, [sp, #8]
 800f4e0:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800f4e4:	68c2      	ldr	r2, [r0, #12]
 800f4e6:	4629      	mov	r1, r5
 800f4e8:	4620      	mov	r0, r4
 800f4ea:	bc30      	pop	{r4, r5}
 800f4ec:	f7f1 bd12 	b.w	8000f14 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800f4f0 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800f4f0:	f7f1 bd04 	b.w	8000efc <_ZN8touchgfx5paint8tearDownEv>

0800f4f4 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800f4f4:	b510      	push	{r4, lr}
 800f4f6:	2114      	movs	r1, #20
 800f4f8:	4604      	mov	r4, r0
 800f4fa:	f017 fd6b 	bl	8026fd4 <_ZdlPvj>
 800f4fe:	4620      	mov	r0, r4
 800f500:	bd10      	pop	{r4, pc}

0800f502 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800f502:	f1a0 0008 	sub.w	r0, r0, #8
 800f506:	e7f5      	b.n	800f4f4 <_ZN8touchgfx13PainterRGB565D0Ev>

0800f508 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800f508:	2300      	movs	r3, #0
 800f50a:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800f50c:	8503      	strh	r3, [r0, #40]	@ 0x28
 800f50e:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800f510:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800f512:	6980      	ldr	r0, [r0, #24]
 800f514:	b110      	cbz	r0, 800f51c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800f516:	6803      	ldr	r3, [r0, #0]
 800f518:	691b      	ldr	r3, [r3, #16]
 800f51a:	4718      	bx	r3
 800f51c:	4770      	bx	lr

0800f51e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800f51e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800f522:	4770      	bx	lr

0800f524 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800f524:	b538      	push	{r3, r4, r5, lr}
 800f526:	0e0b      	lsrs	r3, r1, #24
 800f528:	7783      	strb	r3, [r0, #30]
 800f52a:	6803      	ldr	r3, [r0, #0]
 800f52c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f52e:	4604      	mov	r4, r0
 800f530:	460d      	mov	r5, r1
 800f532:	4798      	blx	r3
 800f534:	6803      	ldr	r3, [r0, #0]
 800f536:	4629      	mov	r1, r5
 800f538:	689b      	ldr	r3, [r3, #8]
 800f53a:	4798      	blx	r3
 800f53c:	6823      	ldr	r3, [r4, #0]
 800f53e:	4620      	mov	r0, r4
 800f540:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f542:	4798      	blx	r3
 800f544:	61a0      	str	r0, [r4, #24]
 800f546:	bd38      	pop	{r3, r4, r5, pc}

0800f548 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800f548:	7741      	strb	r1, [r0, #29]
 800f54a:	4770      	bx	lr

0800f54c <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800f54c:	b530      	push	{r4, r5, lr}
 800f54e:	460d      	mov	r5, r1
 800f550:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800f554:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f556:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f558:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f55a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f55c:	682b      	ldr	r3, [r5, #0]
 800f55e:	6023      	str	r3, [r4, #0]
 800f560:	bd30      	pop	{r4, r5, pc}

0800f562 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800f562:	b538      	push	{r3, r4, r5, lr}
 800f564:	4604      	mov	r4, r0
 800f566:	1d03      	adds	r3, r0, #4
 800f568:	6808      	ldr	r0, [r1, #0]
 800f56a:	6849      	ldr	r1, [r1, #4]
 800f56c:	c303      	stmia	r3!, {r0, r1}
 800f56e:	6813      	ldr	r3, [r2, #0]
 800f570:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800f574:	6853      	ldr	r3, [r2, #4]
 800f576:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800f57a:	2500      	movs	r5, #0
 800f57c:	61a5      	str	r5, [r4, #24]
 800f57e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800f582:	f006 fbf5 	bl	8015d70 <_ZN8touchgfx9Matrix3x35resetEv>
 800f586:	23ff      	movs	r3, #255	@ 0xff
 800f588:	7763      	strb	r3, [r4, #29]
 800f58a:	77a3      	strb	r3, [r4, #30]
 800f58c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800f590:	6323      	str	r3, [r4, #48]	@ 0x30
 800f592:	2301      	movs	r3, #1
 800f594:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800f598:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800f59c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800f5a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800f5a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f5a4:	ed2d 8b0a 	vpush	{d8-d12}
 800f5a8:	ee70 7a41 	vsub.f32	s15, s0, s2
 800f5ac:	b086      	sub	sp, #24
 800f5ae:	eef5 7a40 	vcmp.f32	s15, #0.0
 800f5b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f5b6:	4605      	mov	r5, r0
 800f5b8:	eeb0 ba40 	vmov.f32	s22, s0
 800f5bc:	eef0 ba60 	vmov.f32	s23, s1
 800f5c0:	eef0 aa41 	vmov.f32	s21, s2
 800f5c4:	eeb0 aa61 	vmov.f32	s20, s3
 800f5c8:	eeb0 ca42 	vmov.f32	s24, s4
 800f5cc:	eef0 ca62 	vmov.f32	s25, s5
 800f5d0:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
 800f5d4:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
 800f5d6:	6802      	ldr	r2, [r0, #0]
 800f5d8:	d112      	bne.n	800f600 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800f5da:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800f5de:	eef5 7a40 	vcmp.f32	s15, #0.0
 800f5e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f5e6:	d10b      	bne.n	800f600 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800f5e8:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800f5ec:	3901      	subs	r1, #1
 800f5ee:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800f5f0:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800f5f4:	b006      	add	sp, #24
 800f5f6:	ecbd 8b0a 	vpop	{d8-d12}
 800f5fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f5fe:	4710      	bx	r2
 800f600:	23ff      	movs	r3, #255	@ 0xff
 800f602:	77ab      	strb	r3, [r5, #30]
 800f604:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800f606:	4628      	mov	r0, r5
 800f608:	4798      	blx	r3
 800f60a:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800f60e:	eef0 0a6b 	vmov.f32	s1, s23
 800f612:	eeb0 0a4b 	vmov.f32	s0, s22
 800f616:	4604      	mov	r4, r0
 800f618:	4640      	mov	r0, r8
 800f61a:	f006 fc58 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800f61e:	4640      	mov	r0, r8
 800f620:	eef0 8a40 	vmov.f32	s17, s0
 800f624:	eef0 9a60 	vmov.f32	s19, s1
 800f628:	ed8d 0a00 	vstr	s0, [sp]
 800f62c:	edcd 0a01 	vstr	s1, [sp, #4]
 800f630:	eeb0 0a6a 	vmov.f32	s0, s21
 800f634:	eef0 0a4a 	vmov.f32	s1, s20
 800f638:	f006 fc49 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800f63c:	eef4 8a40 	vcmp.f32	s17, s0
 800f640:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f644:	eef4 9a60 	vcmp.f32	s19, s1
 800f648:	bf0c      	ite	eq
 800f64a:	2301      	moveq	r3, #1
 800f64c:	2300      	movne	r3, #0
 800f64e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f652:	eef4 8a40 	vcmp.f32	s17, s0
 800f656:	7463      	strb	r3, [r4, #17]
 800f658:	bf0c      	ite	eq
 800f65a:	2301      	moveq	r3, #1
 800f65c:	2300      	movne	r3, #0
 800f65e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f662:	eeb0 8a40 	vmov.f32	s16, s0
 800f666:	eeb0 9a60 	vmov.f32	s18, s1
 800f66a:	ed8d 0a02 	vstr	s0, [sp, #8]
 800f66e:	edcd 0a03 	vstr	s1, [sp, #12]
 800f672:	74a3      	strb	r3, [r4, #18]
 800f674:	d024      	beq.n	800f6c0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 800f676:	eef4 9a60 	vcmp.f32	s19, s1
 800f67a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f67e:	d01f      	beq.n	800f6c0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 800f680:	ee7a aacb 	vsub.f32	s21, s21, s22
 800f684:	ee3a aa6b 	vsub.f32	s20, s20, s23
 800f688:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
 800f68c:	4640      	mov	r0, r8
 800f68e:	eeca 7a2c 	vdiv.f32	s15, s20, s25
 800f692:	eef0 0a6b 	vmov.f32	s1, s23
 800f696:	eeb0 0a4b 	vmov.f32	s0, s22
 800f69a:	eea7 0acc 	vfms.f32	s0, s15, s24
 800f69e:	eeec 0a87 	vfma.f32	s1, s25, s14
 800f6a2:	f006 fc14 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800f6a6:	ed8d 0a04 	vstr	s0, [sp, #16]
 800f6aa:	ee30 0a68 	vsub.f32	s0, s0, s17
 800f6ae:	edcd 0a05 	vstr	s1, [sp, #20]
 800f6b2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800f6b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f6ba:	d120      	bne.n	800f6fe <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x15e>
 800f6bc:	2301      	movs	r3, #1
 800f6be:	74a3      	strb	r3, [r4, #18]
 800f6c0:	7c63      	ldrb	r3, [r4, #17]
 800f6c2:	2b00      	cmp	r3, #0
 800f6c4:	d050      	beq.n	800f768 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c8>
 800f6c6:	ee39 7a69 	vsub.f32	s14, s18, s19
 800f6ca:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 800f7bc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x21c>
 800f6ce:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800f6d2:	eef4 9ac9 	vcmpe.f32	s19, s18
 800f6d6:	edc4 7a08 	vstr	s15, [r4, #32]
 800f6da:	eefd 7ac9 	vcvt.s32.f32	s15, s18
 800f6de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f6e2:	ee17 3a90 	vmov	r3, s15
 800f6e6:	eefd 7ae9 	vcvt.s32.f32	s15, s19
 800f6ea:	b21a      	sxth	r2, r3
 800f6ec:	ee17 3a90 	vmov	r3, s15
 800f6f0:	b21b      	sxth	r3, r3
 800f6f2:	bf47      	ittee	mi
 800f6f4:	80e3      	strhmi	r3, [r4, #6]
 800f6f6:	8122      	strhmi	r2, [r4, #8]
 800f6f8:	80e2      	strhpl	r2, [r4, #6]
 800f6fa:	8123      	strhpl	r3, [r4, #8]
 800f6fc:	e02c      	b.n	800f758 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 800f6fe:	ee70 0ae9 	vsub.f32	s1, s1, s19
 800f702:	eec0 7a80 	vdiv.f32	s15, s1, s0
 800f706:	eef5 7a40 	vcmp.f32	s15, #0.0
 800f70a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f70e:	edc4 7a05 	vstr	s15, [r4, #20]
 800f712:	d102      	bne.n	800f71a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17a>
 800f714:	2301      	movs	r3, #1
 800f716:	7463      	strb	r3, [r4, #17]
 800f718:	e7d2      	b.n	800f6c0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 800f71a:	eeb0 7a69 	vmov.f32	s14, s19
 800f71e:	eea8 7ae7 	vfms.f32	s14, s17, s15
 800f722:	ee39 9a69 	vsub.f32	s18, s18, s19
 800f726:	ed84 7a06 	vstr	s14, [r4, #24]
 800f72a:	ee89 7a27 	vdiv.f32	s14, s18, s15
 800f72e:	ee38 8a68 	vsub.f32	s16, s16, s17
 800f732:	ee38 8a47 	vsub.f32	s16, s16, s14
 800f736:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 800f7c0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
 800f73a:	ed84 8a07 	vstr	s16, [r4, #28]
 800f73e:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800f742:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800f746:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f74a:	edc4 7a08 	vstr	s15, [r4, #32]
 800f74e:	d503      	bpl.n	800f758 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 800f750:	eeb1 8a48 	vneg.f32	s16, s16
 800f754:	ed84 8a07 	vstr	s16, [r4, #28]
 800f758:	60e7      	str	r7, [r4, #12]
 800f75a:	7426      	strb	r6, [r4, #16]
 800f75c:	61ac      	str	r4, [r5, #24]
 800f75e:	b006      	add	sp, #24
 800f760:	ecbd 8b0a 	vpop	{d8-d12}
 800f764:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f768:	7ca3      	ldrb	r3, [r4, #18]
 800f76a:	2b00      	cmp	r3, #0
 800f76c:	d0f4      	beq.n	800f758 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 800f76e:	ee38 7a68 	vsub.f32	s14, s16, s17
 800f772:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800f7bc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x21c>
 800f776:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800f77a:	eef4 8ac8 	vcmpe.f32	s17, s16
 800f77e:	edc4 7a08 	vstr	s15, [r4, #32]
 800f782:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800f786:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f78a:	ee17 3a90 	vmov	r3, s15
 800f78e:	eefd 7ae8 	vcvt.s32.f32	s15, s17
 800f792:	b21a      	sxth	r2, r3
 800f794:	ee17 3a90 	vmov	r3, s15
 800f798:	b21b      	sxth	r3, r3
 800f79a:	bf47      	ittee	mi
 800f79c:	80e3      	strhmi	r3, [r4, #6]
 800f79e:	8122      	strhmi	r2, [r4, #8]
 800f7a0:	80e2      	strhpl	r2, [r4, #6]
 800f7a2:	8123      	strhpl	r3, [r4, #8]
 800f7a4:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f7a8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f7ac:	1a9b      	subs	r3, r3, r2
 800f7ae:	ee07 3a90 	vmov	s15, r3
 800f7b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f7b6:	edc4 7a07 	vstr	s15, [r4, #28]
 800f7ba:	e7cd      	b.n	800f758 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 800f7bc:	447ffffe 	.word	0x447ffffe
 800f7c0:	44800000 	.word	0x44800000

0800f7c4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800f7c4:	b510      	push	{r4, lr}
 800f7c6:	2100      	movs	r1, #0
 800f7c8:	ed2d 8b02 	vpush	{d8}
 800f7cc:	eef0 8a62 	vmov.f32	s17, s5
 800f7d0:	4604      	mov	r4, r0
 800f7d2:	eeb0 8a42 	vmov.f32	s16, s4
 800f7d6:	f017 f96d 	bl	8026ab4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800f7da:	eef0 7a68 	vmov.f32	s15, s17
 800f7de:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f7e2:	6823      	ldr	r3, [r4, #0]
 800f7e4:	ee17 2a90 	vmov	r2, s15
 800f7e8:	eef0 7a48 	vmov.f32	s15, s16
 800f7ec:	ecbd 8b02 	vpop	{d8}
 800f7f0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f7f4:	4620      	mov	r0, r4
 800f7f6:	689b      	ldr	r3, [r3, #8]
 800f7f8:	ee17 1a90 	vmov	r1, s15
 800f7fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f800:	4718      	bx	r3

0800f802 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800f802:	b510      	push	{r4, lr}
 800f804:	2100      	movs	r1, #0
 800f806:	ed2d 8b02 	vpush	{d8}
 800f80a:	eef0 8a63 	vmov.f32	s17, s7
 800f80e:	4604      	mov	r4, r0
 800f810:	eeb0 8a43 	vmov.f32	s16, s6
 800f814:	f017 fa10 	bl	8026c38 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800f818:	eef0 7a68 	vmov.f32	s15, s17
 800f81c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f820:	6823      	ldr	r3, [r4, #0]
 800f822:	ee17 2a90 	vmov	r2, s15
 800f826:	eef0 7a48 	vmov.f32	s15, s16
 800f82a:	ecbd 8b02 	vpop	{d8}
 800f82e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f832:	4620      	mov	r0, r4
 800f834:	689b      	ldr	r3, [r3, #8]
 800f836:	ee17 1a90 	vmov	r1, s15
 800f83a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f83e:	4718      	bx	r3

0800f840 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800f840:	b513      	push	{r0, r1, r4, lr}
 800f842:	4604      	mov	r4, r0
 800f844:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800f846:	f006 fb42 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800f84a:	eef0 7a60 	vmov.f32	s15, s1
 800f84e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f852:	4620      	mov	r0, r4
 800f854:	ee17 2a90 	vmov	r2, s15
 800f858:	eef0 7a40 	vmov.f32	s15, s0
 800f85c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f860:	ee17 1a90 	vmov	r1, s15
 800f864:	b002      	add	sp, #8
 800f866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f86a:	f017 b87d 	b.w	8026968 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800f86e:	b513      	push	{r0, r1, r4, lr}
 800f870:	4604      	mov	r4, r0
 800f872:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800f874:	f006 fb2b 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800f878:	eef0 7a60 	vmov.f32	s15, s1
 800f87c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f880:	4620      	mov	r0, r4
 800f882:	ee17 2a90 	vmov	r2, s15
 800f886:	eef0 7a40 	vmov.f32	s15, s0
 800f88a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f88e:	ee17 1a90 	vmov	r1, s15
 800f892:	b002      	add	sp, #8
 800f894:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f898:	f017 b8b3 	b.w	8026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800f89c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800f89c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f89e:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800f8a2:	2400      	movs	r4, #0
 800f8a4:	9f07      	ldr	r7, [sp, #28]
 800f8a6:	4463      	add	r3, ip
 800f8a8:	4626      	mov	r6, r4
 800f8aa:	f04f 0e01 	mov.w	lr, #1
 800f8ae:	4563      	cmp	r3, ip
 800f8b0:	d02d      	beq.n	800f90e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800f8b2:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800f8b6:	2d06      	cmp	r5, #6
 800f8b8:	d8f9      	bhi.n	800f8ae <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800f8ba:	fa0e f505 	lsl.w	r5, lr, r5
 800f8be:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800f8c2:	d10d      	bne.n	800f8e0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800f8c4:	f015 0f10 	tst.w	r5, #16
 800f8c8:	d117      	bne.n	800f8fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800f8ca:	072d      	lsls	r5, r5, #28
 800f8cc:	d5ef      	bpl.n	800f8ae <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800f8ce:	3801      	subs	r0, #1
 800f8d0:	b91e      	cbnz	r6, 800f8da <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800f8d2:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800f8d6:	682d      	ldr	r5, [r5, #0]
 800f8d8:	600d      	str	r5, [r1, #0]
 800f8da:	b96c      	cbnz	r4, 800f8f8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800f8dc:	2601      	movs	r6, #1
 800f8de:	e7e6      	b.n	800f8ae <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800f8e0:	b926      	cbnz	r6, 800f8ec <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800f8e2:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800f8e6:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800f8ea:	600b      	str	r3, [r1, #0]
 800f8ec:	b924      	cbnz	r4, 800f8f8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800f8ee:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f8f2:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800f8f6:	6013      	str	r3, [r2, #0]
 800f8f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f8fa:	3801      	subs	r0, #1
 800f8fc:	b91c      	cbnz	r4, 800f906 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800f8fe:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800f902:	6824      	ldr	r4, [r4, #0]
 800f904:	6014      	str	r4, [r2, #0]
 800f906:	2e00      	cmp	r6, #0
 800f908:	d1f6      	bne.n	800f8f8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800f90a:	2401      	movs	r4, #1
 800f90c:	e7cf      	b.n	800f8ae <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800f90e:	b90e      	cbnz	r6, 800f914 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800f910:	2300      	movs	r3, #0
 800f912:	600b      	str	r3, [r1, #0]
 800f914:	2c00      	cmp	r4, #0
 800f916:	d1ef      	bne.n	800f8f8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800f918:	2300      	movs	r3, #0
 800f91a:	e7ec      	b.n	800f8f6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800f91c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800f91c:	b538      	push	{r3, r4, r5, lr}
 800f91e:	4604      	mov	r4, r0
 800f920:	ed2d 8b0a 	vpush	{d8-d12}
 800f924:	460d      	mov	r5, r1
 800f926:	eef0 ba40 	vmov.f32	s23, s0
 800f92a:	eeb0 ca60 	vmov.f32	s24, s1
 800f92e:	eef0 aa41 	vmov.f32	s21, s2
 800f932:	eeb0 ba61 	vmov.f32	s22, s3
 800f936:	eeb0 9a42 	vmov.f32	s18, s4
 800f93a:	eef0 9a62 	vmov.f32	s19, s5
 800f93e:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800f942:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800f946:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800f94a:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800f94e:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800f952:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800f956:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800f95a:	ee20 0a00 	vmul.f32	s0, s0, s0
 800f95e:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800f962:	f017 fb61 	bl	8027028 <sqrtf>
 800f966:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800f96a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f96e:	d12e      	bne.n	800f9ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800f970:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800f974:	ee39 7acb 	vsub.f32	s14, s19, s22
 800f978:	eeb0 8a6a 	vmov.f32	s16, s21
 800f97c:	eef0 8a4b 	vmov.f32	s17, s22
 800f980:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800f984:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800f988:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800f98c:	eee7 8aca 	vfms.f32	s17, s15, s20
 800f990:	2d02      	cmp	r5, #2
 800f992:	dc2f      	bgt.n	800f9f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800f994:	3501      	adds	r5, #1
 800f996:	eef0 1a4b 	vmov.f32	s3, s22
 800f99a:	eeb0 1a6a 	vmov.f32	s2, s21
 800f99e:	4629      	mov	r1, r5
 800f9a0:	eef0 2a68 	vmov.f32	s5, s17
 800f9a4:	eeb0 2a48 	vmov.f32	s4, s16
 800f9a8:	eef0 0a4c 	vmov.f32	s1, s24
 800f9ac:	eeb0 0a6b 	vmov.f32	s0, s23
 800f9b0:	4620      	mov	r0, r4
 800f9b2:	f7ff ffb3 	bl	800f91c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800f9b6:	eef0 0a68 	vmov.f32	s1, s17
 800f9ba:	eeb0 0a48 	vmov.f32	s0, s16
 800f9be:	4620      	mov	r0, r4
 800f9c0:	f7ff ff55 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f9c4:	eeb0 ba68 	vmov.f32	s22, s17
 800f9c8:	eef0 aa48 	vmov.f32	s21, s16
 800f9cc:	e7b9      	b.n	800f942 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800f9ce:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800f9d2:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800f9d6:	ee78 8acc 	vsub.f32	s17, s17, s24
 800f9da:	ee28 7a27 	vmul.f32	s14, s16, s15
 800f9de:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800f9e2:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800f9e6:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800f9ea:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800f9ee:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800f9f2:	e7cd      	b.n	800f990 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800f9f4:	eef0 0a68 	vmov.f32	s1, s17
 800f9f8:	eeb0 0a48 	vmov.f32	s0, s16
 800f9fc:	4620      	mov	r0, r4
 800f9fe:	f7ff ff36 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fa02:	ecbd 8b0a 	vpop	{d8-d12}
 800fa06:	bd38      	pop	{r3, r4, r5, pc}

0800fa08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800fa08:	b510      	push	{r4, lr}
 800fa0a:	ed2d 8b0a 	vpush	{d8-d12}
 800fa0e:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800fa12:	2b02      	cmp	r3, #2
 800fa14:	4604      	mov	r4, r0
 800fa16:	eeb0 ca40 	vmov.f32	s24, s0
 800fa1a:	eeb0 9a60 	vmov.f32	s18, s1
 800fa1e:	eef0 9a41 	vmov.f32	s19, s2
 800fa22:	eef0 8a61 	vmov.f32	s17, s3
 800fa26:	eeb0 ba42 	vmov.f32	s22, s4
 800fa2a:	eef0 ba62 	vmov.f32	s23, s5
 800fa2e:	eeb0 aa43 	vmov.f32	s20, s6
 800fa32:	eef0 aa63 	vmov.f32	s21, s7
 800fa36:	eeb0 8a44 	vmov.f32	s16, s8
 800fa3a:	eef0 ca64 	vmov.f32	s25, s9
 800fa3e:	d12c      	bne.n	800fa9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800fa40:	eef0 0a62 	vmov.f32	s1, s5
 800fa44:	eeb0 0a42 	vmov.f32	s0, s4
 800fa48:	f7ff ff11 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fa4c:	ee79 9acb 	vsub.f32	s19, s19, s22
 800fa50:	ee7a caec 	vsub.f32	s25, s21, s25
 800fa54:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800fa58:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800fa5c:	ee69 9aac 	vmul.f32	s19, s19, s25
 800fa60:	ee28 8a88 	vmul.f32	s16, s17, s16
 800fa64:	eef4 9ac8 	vcmpe.f32	s19, s16
 800fa68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa6c:	db0f      	blt.n	800fa8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800fa6e:	2101      	movs	r1, #1
 800fa70:	eef0 2a6a 	vmov.f32	s5, s21
 800fa74:	eeb0 2a4a 	vmov.f32	s4, s20
 800fa78:	eef0 1a6b 	vmov.f32	s3, s23
 800fa7c:	eeb0 1a4b 	vmov.f32	s2, s22
 800fa80:	eef0 0a49 	vmov.f32	s1, s18
 800fa84:	eeb0 0a4c 	vmov.f32	s0, s24
 800fa88:	4620      	mov	r0, r4
 800fa8a:	f7ff ff47 	bl	800f91c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800fa8e:	eef0 0a6a 	vmov.f32	s1, s21
 800fa92:	eeb0 0a4a 	vmov.f32	s0, s20
 800fa96:	4620      	mov	r0, r4
 800fa98:	e035      	b.n	800fb06 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800fa9a:	2b01      	cmp	r3, #1
 800fa9c:	d138      	bne.n	800fb10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800fa9e:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800faa2:	ee33 6a48 	vsub.f32	s12, s6, s16
 800faa6:	ee71 7a42 	vsub.f32	s15, s2, s4
 800faaa:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800faae:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800fab2:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800fab6:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800faba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fabe:	d027      	beq.n	800fb10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800fac0:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800fac4:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800fac8:	eea4 8a83 	vfma.f32	s16, s9, s6
 800facc:	eee1 8a22 	vfma.f32	s17, s2, s5
 800fad0:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800fad4:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800fad8:	eee6 7a28 	vfma.f32	s15, s12, s17
 800fadc:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800fae0:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800fae4:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800fae8:	ee3c ca40 	vsub.f32	s24, s24, s0
 800faec:	ee39 9a60 	vsub.f32	s18, s18, s1
 800faf0:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800faf4:	ee29 9a09 	vmul.f32	s18, s18, s18
 800faf8:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800fafc:	eef4 7ac9 	vcmpe.f32	s15, s18
 800fb00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb04:	db04      	blt.n	800fb10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800fb06:	f7ff feb2 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fb0a:	ecbd 8b0a 	vpop	{d8-d12}
 800fb0e:	bd10      	pop	{r4, pc}
 800fb10:	eef0 0a6b 	vmov.f32	s1, s23
 800fb14:	eeb0 0a4b 	vmov.f32	s0, s22
 800fb18:	4620      	mov	r0, r4
 800fb1a:	f7ff fea8 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fb1e:	e7b6      	b.n	800fa8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800fb20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800fb20:	b510      	push	{r4, lr}
 800fb22:	ed2d 8b0c 	vpush	{d8-d13}
 800fb26:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800fb2a:	4604      	mov	r4, r0
 800fb2c:	eeb0 9a40 	vmov.f32	s18, s0
 800fb30:	eef0 9a60 	vmov.f32	s19, s1
 800fb34:	eef0 aa41 	vmov.f32	s21, s2
 800fb38:	eeb0 ba61 	vmov.f32	s22, s3
 800fb3c:	b933      	cbnz	r3, 800fb4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800fb3e:	f7ff fe96 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fb42:	eef0 0a4b 	vmov.f32	s1, s22
 800fb46:	eeb0 0a6a 	vmov.f32	s0, s21
 800fb4a:	e015      	b.n	800fb78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800fb4c:	ee71 8a40 	vsub.f32	s17, s2, s0
 800fb50:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800fb54:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800fb58:	2b02      	cmp	r3, #2
 800fb5a:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800fb5e:	ee28 8a27 	vmul.f32	s16, s16, s15
 800fb62:	d10f      	bne.n	800fb84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800fb64:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800fb68:	ee30 0a08 	vadd.f32	s0, s0, s16
 800fb6c:	f7ff fe7f 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fb70:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800fb74:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800fb78:	4620      	mov	r0, r4
 800fb7a:	f7ff fe78 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fb7e:	ecbd 8b0c 	vpop	{d8-d13}
 800fb82:	bd10      	pop	{r4, pc}
 800fb84:	f7ff fe73 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fb88:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800fcc0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800fb8c:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800fcc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800fb90:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800fcc8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800fb94:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800fccc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800fb98:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800fcd0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800fb9c:	eef0 0a69 	vmov.f32	s1, s19
 800fba0:	eeb0 0a49 	vmov.f32	s0, s18
 800fba4:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fba8:	4620      	mov	r0, r4
 800fbaa:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fbae:	eeb1 aa68 	vneg.f32	s20, s17
 800fbb2:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800fbb6:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800fbba:	f7ff fe58 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fbbe:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800fcd4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800fbc2:	eef0 0a69 	vmov.f32	s1, s19
 800fbc6:	eeb0 0a49 	vmov.f32	s0, s18
 800fbca:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fbce:	4620      	mov	r0, r4
 800fbd0:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fbd4:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800fbd8:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800fbdc:	f7ff fe47 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fbe0:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800fcd8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800fbe4:	eef0 0a69 	vmov.f32	s1, s19
 800fbe8:	eeb0 0a49 	vmov.f32	s0, s18
 800fbec:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fbf0:	4620      	mov	r0, r4
 800fbf2:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fbf6:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800fbfa:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800fbfe:	f7ff fe36 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fc02:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800fcdc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800fc06:	eef0 0a69 	vmov.f32	s1, s19
 800fc0a:	eeb0 0a49 	vmov.f32	s0, s18
 800fc0e:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fc12:	4620      	mov	r0, r4
 800fc14:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fc18:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800fc1c:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800fc20:	f7ff fe25 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fc24:	ee79 0a88 	vadd.f32	s1, s19, s16
 800fc28:	ee39 0a28 	vadd.f32	s0, s18, s17
 800fc2c:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800fc30:	ee30 0a08 	vadd.f32	s0, s0, s16
 800fc34:	4620      	mov	r0, r4
 800fc36:	f7ff fe1a 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fc3a:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800fce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800fc3e:	eef0 0a69 	vmov.f32	s1, s19
 800fc42:	eeb0 0a49 	vmov.f32	s0, s18
 800fc46:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fc4a:	4620      	mov	r0, r4
 800fc4c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fc50:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800fc54:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800fc58:	f7ff fe09 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fc5c:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800fce4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800fc60:	eef0 0a69 	vmov.f32	s1, s19
 800fc64:	eeb0 0a49 	vmov.f32	s0, s18
 800fc68:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fc6c:	4620      	mov	r0, r4
 800fc6e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fc72:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800fc76:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800fc7a:	f7ff fdf8 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fc7e:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800fce8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800fc82:	eef0 0a69 	vmov.f32	s1, s19
 800fc86:	eeb0 0a49 	vmov.f32	s0, s18
 800fc8a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fc8e:	4620      	mov	r0, r4
 800fc90:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fc94:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800fc98:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800fc9c:	f7ff fde7 	bl	800f86e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fca0:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800fcec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800fca4:	eef0 0a69 	vmov.f32	s1, s19
 800fca8:	eeb0 0a49 	vmov.f32	s0, s18
 800fcac:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fcb0:	4620      	mov	r0, r4
 800fcb2:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fcb6:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800fcba:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800fcbe:	e73e      	b.n	800fb3e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800fcc0:	3d23d70a 	.word	0x3d23d70a
 800fcc4:	3e8f5c29 	.word	0x3e8f5c29
 800fcc8:	3f19999a 	.word	0x3f19999a
 800fccc:	3f4ccccd 	.word	0x3f4ccccd
 800fcd0:	3f75c28f 	.word	0x3f75c28f
 800fcd4:	3e4ccccd 	.word	0x3e4ccccd
 800fcd8:	3ecccccd 	.word	0x3ecccccd
 800fcdc:	3f3851ec 	.word	0x3f3851ec
 800fce0:	3fa3d70a 	.word	0x3fa3d70a
 800fce4:	3fcccccd 	.word	0x3fcccccd
 800fce8:	3fe66666 	.word	0x3fe66666
 800fcec:	3ffae148 	.word	0x3ffae148

0800fcf0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800fcf0:	b570      	push	{r4, r5, r6, lr}
 800fcf2:	ed2d 8b06 	vpush	{d8-d10}
 800fcf6:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800fcfa:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800fcfe:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800fd02:	ee30 9a49 	vsub.f32	s18, s0, s18
 800fd06:	eef0 aa40 	vmov.f32	s21, s0
 800fd0a:	ee28 0a08 	vmul.f32	s0, s16, s16
 800fd0e:	4604      	mov	r4, r0
 800fd10:	eea9 0a09 	vfma.f32	s0, s18, s18
 800fd14:	eeb0 aa60 	vmov.f32	s20, s1
 800fd18:	f017 f986 	bl	8027028 <sqrtf>
 800fd1c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800fd20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fd24:	dd36      	ble.n	800fd94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800fd26:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800fd2a:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800fd2e:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800fd32:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800fd36:	2600      	movs	r6, #0
 800fd38:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800fd3c:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800fd40:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800fd44:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800fd48:	ee70 9a28 	vadd.f32	s19, s0, s17
 800fd4c:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800fd50:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800fd54:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800fd58:	b1fd      	cbz	r5, 800fd9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800fd5a:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800fd5e:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800fd62:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800fd66:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800fd6a:	eef0 0a49 	vmov.f32	s1, s18
 800fd6e:	eeb0 0a69 	vmov.f32	s0, s19
 800fd72:	4620      	mov	r0, r4
 800fd74:	f7ff fd64 	bl	800f840 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800fd78:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800fd7c:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800fd80:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800fd84:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800fd88:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800fd8c:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800fd90:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800fd94:	ecbd 8b06 	vpop	{d8-d10}
 800fd98:	bd70      	pop	{r4, r5, r6, pc}
 800fd9a:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800fd9e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800fda2:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800fda6:	b16b      	cbz	r3, 800fdc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800fda8:	eef0 1a49 	vmov.f32	s3, s18
 800fdac:	eeb0 1a69 	vmov.f32	s2, s19
 800fdb0:	eef0 0a62 	vmov.f32	s1, s5
 800fdb4:	eeb0 0a42 	vmov.f32	s0, s4
 800fdb8:	4620      	mov	r0, r4
 800fdba:	f7ff feb1 	bl	800fb20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800fdbe:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800fdc2:	e7db      	b.n	800fd7c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800fdc4:	eef0 4a48 	vmov.f32	s9, s16
 800fdc8:	eeb0 4a68 	vmov.f32	s8, s17
 800fdcc:	eef0 3a49 	vmov.f32	s7, s18
 800fdd0:	eeb0 3a69 	vmov.f32	s6, s19
 800fdd4:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800fdd8:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800fddc:	4620      	mov	r0, r4
 800fdde:	f7ff fe13 	bl	800fa08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800fde2:	e7cb      	b.n	800fd7c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800fde4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800fde4:	ee07 2a90 	vmov	s15, r2
 800fde8:	ee07 1a10 	vmov	s14, r1
 800fdec:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800fdf0:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800fdf4:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800fe04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800fdf8:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800fdfc:	ee20 0a27 	vmul.f32	s0, s0, s15
 800fe00:	f7ff bf76 	b.w	800fcf0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800fe04:	3d000000 	.word	0x3d000000

0800fe08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800fe08:	b538      	push	{r3, r4, r5, lr}
 800fe0a:	ed2d 8b02 	vpush	{d8}
 800fe0e:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800fe12:	4604      	mov	r4, r0
 800fe14:	b31d      	cbz	r5, 800fe5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800fe16:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800fe1a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800fe1e:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800fe22:	ee78 8a67 	vsub.f32	s17, s16, s15
 800fe26:	ee38 8a27 	vadd.f32	s16, s16, s15
 800fe2a:	eef0 0a68 	vmov.f32	s1, s17
 800fe2e:	f7ff fd07 	bl	800f840 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800fe32:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800fe36:	eef0 1a48 	vmov.f32	s3, s16
 800fe3a:	eeb0 0a41 	vmov.f32	s0, s2
 800fe3e:	eef0 0a68 	vmov.f32	s1, s17
 800fe42:	4620      	mov	r0, r4
 800fe44:	f7ff fe6c 	bl	800fb20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800fe48:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800fe4c:	eef0 1a68 	vmov.f32	s3, s17
 800fe50:	eef0 0a48 	vmov.f32	s1, s16
 800fe54:	eeb0 0a41 	vmov.f32	s0, s2
 800fe58:	4620      	mov	r0, r4
 800fe5a:	f7ff fe61 	bl	800fb20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800fe5e:	ecbd 8b02 	vpop	{d8}
 800fe62:	4628      	mov	r0, r5
 800fe64:	bd38      	pop	{r3, r4, r5, pc}

0800fe66 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800fe66:	b510      	push	{r4, lr}
 800fe68:	ed2d 8b02 	vpush	{d8}
 800fe6c:	4604      	mov	r4, r0
 800fe6e:	eeb0 8a40 	vmov.f32	s16, s0
 800fe72:	eef0 8a60 	vmov.f32	s17, s1
 800fe76:	f7ff ffc7 	bl	800fe08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800fe7a:	b9d0      	cbnz	r0, 800feb2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800fe7c:	4620      	mov	r0, r4
 800fe7e:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800fe82:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800fe86:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800fe8a:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800fe8e:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800fe92:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800fe96:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800fe9a:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800fe9e:	eef0 0a68 	vmov.f32	s1, s17
 800fea2:	eeb0 0a48 	vmov.f32	s0, s16
 800fea6:	f7ff fdaf 	bl	800fa08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800feaa:	2001      	movs	r0, #1
 800feac:	ecbd 8b02 	vpop	{d8}
 800feb0:	bd10      	pop	{r4, pc}
 800feb2:	2000      	movs	r0, #0
 800feb4:	e7fa      	b.n	800feac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800feb6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800feb6:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800feba:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800febe:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800fec2:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800fec6:	f7ff be2b 	b.w	800fb20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800fecc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800fecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fed0:	b089      	sub	sp, #36	@ 0x24
 800fed2:	461c      	mov	r4, r3
 800fed4:	f10d 0820 	add.w	r8, sp, #32
 800fed8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800fedc:	9304      	str	r3, [sp, #16]
 800fede:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800fee0:	9105      	str	r1, [sp, #20]
 800fee2:	2300      	movs	r3, #0
 800fee4:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800fee8:	9306      	str	r3, [sp, #24]
 800feea:	f848 3d04 	str.w	r3, [r8, #-4]!
 800feee:	9b04      	ldr	r3, [sp, #16]
 800fef0:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800fef4:	4682      	mov	sl, r0
 800fef6:	4615      	mov	r5, r2
 800fef8:	9b05      	ldr	r3, [sp, #20]
 800fefa:	429d      	cmp	r5, r3
 800fefc:	d96d      	bls.n	800ffda <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800fefe:	3d01      	subs	r5, #1
 800ff00:	f819 3005 	ldrb.w	r3, [r9, r5]
 800ff04:	2b06      	cmp	r3, #6
 800ff06:	d8f7      	bhi.n	800fef8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800ff08:	a201      	add	r2, pc, #4	@ (adr r2, 800ff10 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800ff0a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ff0e:	bf00      	nop
 800ff10:	0800ff2f 	.word	0x0800ff2f
 800ff14:	0800fef9 	.word	0x0800fef9
 800ff18:	0800ff2d 	.word	0x0800ff2d
 800ff1c:	0800ff51 	.word	0x0800ff51
 800ff20:	0800ff51 	.word	0x0800ff51
 800ff24:	0800ff55 	.word	0x0800ff55
 800ff28:	0800ff95 	.word	0x0800ff95
 800ff2c:	3c02      	subs	r4, #2
 800ff2e:	4650      	mov	r0, sl
 800ff30:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800ff34:	9400      	str	r4, [sp, #0]
 800ff36:	462b      	mov	r3, r5
 800ff38:	4642      	mov	r2, r8
 800ff3a:	a906      	add	r1, sp, #24
 800ff3c:	f7ff fcae 	bl	800f89c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800ff40:	eddd 0a07 	vldr	s1, [sp, #28]
 800ff44:	ed9d 0a06 	vldr	s0, [sp, #24]
 800ff48:	4630      	mov	r0, r6
 800ff4a:	f7ff fed1 	bl	800fcf0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800ff4e:	e7d3      	b.n	800fef8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800ff50:	3c01      	subs	r4, #1
 800ff52:	e7ec      	b.n	800ff2e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800ff54:	f1a4 0b04 	sub.w	fp, r4, #4
 800ff58:	3c02      	subs	r4, #2
 800ff5a:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800ff5e:	4650      	mov	r0, sl
 800ff60:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800ff64:	f8cd b000 	str.w	fp, [sp]
 800ff68:	462b      	mov	r3, r5
 800ff6a:	4642      	mov	r2, r8
 800ff6c:	a906      	add	r1, sp, #24
 800ff6e:	f7ff fc95 	bl	800f89c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800ff72:	eddd 2a07 	vldr	s5, [sp, #28]
 800ff76:	ed9d 2a06 	vldr	s4, [sp, #24]
 800ff7a:	ed54 1a01 	vldr	s3, [r4, #-4]
 800ff7e:	ed14 1a02 	vldr	s2, [r4, #-8]
 800ff82:	edd4 0a01 	vldr	s1, [r4, #4]
 800ff86:	ed94 0a00 	vldr	s0, [r4]
 800ff8a:	4630      	mov	r0, r6
 800ff8c:	f7ff fc1a 	bl	800f7c4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800ff90:	465c      	mov	r4, fp
 800ff92:	e7b1      	b.n	800fef8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800ff94:	f1a4 0b06 	sub.w	fp, r4, #6
 800ff98:	3c02      	subs	r4, #2
 800ff9a:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800ff9e:	4650      	mov	r0, sl
 800ffa0:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800ffa4:	f8cd b000 	str.w	fp, [sp]
 800ffa8:	462b      	mov	r3, r5
 800ffaa:	4642      	mov	r2, r8
 800ffac:	a906      	add	r1, sp, #24
 800ffae:	f7ff fc75 	bl	800f89c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800ffb2:	eddd 3a07 	vldr	s7, [sp, #28]
 800ffb6:	ed9d 3a06 	vldr	s6, [sp, #24]
 800ffba:	ed54 2a03 	vldr	s5, [r4, #-12]
 800ffbe:	ed14 2a04 	vldr	s4, [r4, #-16]
 800ffc2:	ed54 1a01 	vldr	s3, [r4, #-4]
 800ffc6:	ed14 1a02 	vldr	s2, [r4, #-8]
 800ffca:	edd4 0a01 	vldr	s1, [r4, #4]
 800ffce:	ed94 0a00 	vldr	s0, [r4]
 800ffd2:	4630      	mov	r0, r6
 800ffd4:	f7ff fc15 	bl	800f802 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800ffd8:	e7da      	b.n	800ff90 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800ffda:	9b04      	ldr	r3, [sp, #16]
 800ffdc:	b113      	cbz	r3, 800ffe4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800ffde:	4630      	mov	r0, r6
 800ffe0:	f7ff ff69 	bl	800feb6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800ffe4:	b009      	add	sp, #36	@ 0x24
 800ffe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ffea:	bf00      	nop

0800ffec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800ffec:	eef0 7a60 	vmov.f32	s15, s1
 800fff0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800fff4:	6803      	ldr	r3, [r0, #0]
 800fff6:	ee17 2a90 	vmov	r2, s15
 800fffa:	eef0 7a40 	vmov.f32	s15, s0
 800fffe:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8010002:	689b      	ldr	r3, [r3, #8]
 8010004:	ee17 1a90 	vmov	r1, s15
 8010008:	4718      	bx	r3
	...

0801000c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 801000c:	b510      	push	{r4, lr}
 801000e:	4b04      	ldr	r3, [pc, #16]	@ (8010020 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 8010010:	4604      	mov	r4, r0
 8010012:	f840 3b14 	str.w	r3, [r0], #20
 8010016:	f001 ff73 	bl	8011f00 <_ZN8touchgfx7OutlineD1Ev>
 801001a:	4620      	mov	r0, r4
 801001c:	bd10      	pop	{r4, pc}
 801001e:	bf00      	nop
 8010020:	0802b890 	.word	0x0802b890

08010024 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 8010024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010028:	ed2d 8b04 	vpush	{d8-d9}
 801002c:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 8010030:	b0b5      	sub	sp, #212	@ 0xd4
 8010032:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010036:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801003a:	4605      	mov	r5, r0
 801003c:	468b      	mov	fp, r1
 801003e:	9206      	str	r2, [sp, #24]
 8010040:	461e      	mov	r6, r3
 8010042:	f04f 0400 	mov.w	r4, #0
 8010046:	f240 814e 	bls.w	80102e6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 801004a:	23ff      	movs	r3, #255	@ 0xff
 801004c:	9300      	str	r3, [sp, #0]
 801004e:	1d02      	adds	r2, r0, #4
 8010050:	6981      	ldr	r1, [r0, #24]
 8010052:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 8010054:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 80102ec <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 8010058:	a808      	add	r0, sp, #32
 801005a:	f016 fb39 	bl	80266d0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 801005e:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 8010062:	4ba3      	ldr	r3, [pc, #652]	@ (80102f0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 8010064:	edd5 6a08 	vldr	s13, [r5, #32]
 8010068:	9308      	str	r3, [sp, #32]
 801006a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801006e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010072:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8010076:	bf48      	it	mi
 8010078:	eef1 7a67 	vnegmi.f32	s15, s15
 801007c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8010080:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 8010084:	2201      	movs	r2, #1
 8010086:	9325      	str	r3, [sp, #148]	@ 0x94
 8010088:	2300      	movs	r3, #0
 801008a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 801008e:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 8010092:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 8010096:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 801009a:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 801009e:	7f6a      	ldrb	r2, [r5, #29]
 80100a0:	7fab      	ldrb	r3, [r5, #30]
 80100a2:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 80100a6:	435a      	muls	r2, r3
 80100a8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80100ac:	1c53      	adds	r3, r2, #1
 80100ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80100b2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80100b6:	f04f 0800 	mov.w	r8, #0
 80100ba:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 80100be:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 80100c2:	942a      	str	r4, [sp, #168]	@ 0xa8
 80100c4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80100c8:	942b      	str	r4, [sp, #172]	@ 0xac
 80100ca:	942c      	str	r4, [sp, #176]	@ 0xb0
 80100cc:	942d      	str	r4, [sp, #180]	@ 0xb4
 80100ce:	942e      	str	r4, [sp, #184]	@ 0xb8
 80100d0:	942f      	str	r4, [sp, #188]	@ 0xbc
 80100d2:	9430      	str	r4, [sp, #192]	@ 0xc0
 80100d4:	9431      	str	r4, [sp, #196]	@ 0xc4
 80100d6:	9432      	str	r4, [sp, #200]	@ 0xc8
 80100d8:	9433      	str	r4, [sp, #204]	@ 0xcc
 80100da:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 80100de:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 80100e2:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 80100e6:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 80100ea:	eef0 9a49 	vmov.f32	s19, s18
 80100ee:	eeb0 8a49 	vmov.f32	s16, s18
 80100f2:	eef0 8a49 	vmov.f32	s17, s18
 80100f6:	4644      	mov	r4, r8
 80100f8:	46c1      	mov	r9, r8
 80100fa:	af08      	add	r7, sp, #32
 80100fc:	f04f 0a01 	mov.w	sl, #1
 8010100:	9b06      	ldr	r3, [sp, #24]
 8010102:	454b      	cmp	r3, r9
 8010104:	f000 80cc 	beq.w	80102a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 8010108:	f109 0301 	add.w	r3, r9, #1
 801010c:	9305      	str	r3, [sp, #20]
 801010e:	f81b 3009 	ldrb.w	r3, [fp, r9]
 8010112:	2b06      	cmp	r3, #6
 8010114:	d839      	bhi.n	801018a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8010116:	e8df f003 	tbb	[pc, r3]
 801011a:	3b04      	.short	0x3b04
 801011c:	817c6f60 	.word	0x817c6f60
 8010120:	a0          	.byte	0xa0
 8010121:	00          	.byte	0x00
 8010122:	45c1      	cmp	r9, r8
 8010124:	d92b      	bls.n	801017e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 8010126:	eef0 0a49 	vmov.f32	s1, s18
 801012a:	eeb0 0a69 	vmov.f32	s0, s19
 801012e:	4638      	mov	r0, r7
 8010130:	f7ff fdde 	bl	800fcf0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8010134:	4638      	mov	r0, r7
 8010136:	f7ff fe67 	bl	800fe08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 801013a:	4681      	mov	r9, r0
 801013c:	b9f8      	cbnz	r0, 801017e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 801013e:	eef0 0a49 	vmov.f32	s1, s18
 8010142:	eeb0 0a69 	vmov.f32	s0, s19
 8010146:	4638      	mov	r0, r7
 8010148:	f7ff fe8d 	bl	800fe66 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 801014c:	4628      	mov	r0, r5
 801014e:	e9cd 9702 	strd	r9, r7, [sp, #8]
 8010152:	e9cd b600 	strd	fp, r6, [sp]
 8010156:	4623      	mov	r3, r4
 8010158:	9a05      	ldr	r2, [sp, #20]
 801015a:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 801015e:	4641      	mov	r1, r8
 8010160:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 8010164:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 8010168:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 801016c:	f7ff feae 	bl	800fecc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8010170:	eef0 0a49 	vmov.f32	s1, s18
 8010174:	eeb0 0a69 	vmov.f32	s0, s19
 8010178:	4638      	mov	r0, r7
 801017a:	f7ff fe74 	bl	800fe66 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 801017e:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8010182:	eeb0 8a49 	vmov.f32	s16, s18
 8010186:	eef0 8a69 	vmov.f32	s17, s19
 801018a:	f8dd 9014 	ldr.w	r9, [sp, #20]
 801018e:	e7b7      	b.n	8010100 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 8010190:	45c1      	cmp	r9, r8
 8010192:	d90d      	bls.n	80101b0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 8010194:	4638      	mov	r0, r7
 8010196:	f7ff fe37 	bl	800fe08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 801019a:	b948      	cbnz	r0, 80101b0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 801019c:	e9cd a702 	strd	sl, r7, [sp, #8]
 80101a0:	e9cd b600 	strd	fp, r6, [sp]
 80101a4:	4623      	mov	r3, r4
 80101a6:	464a      	mov	r2, r9
 80101a8:	4641      	mov	r1, r8
 80101aa:	4628      	mov	r0, r5
 80101ac:	f7ff fe8e 	bl	800fecc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 80101b0:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80101b4:	edd3 8a00 	vldr	s17, [r3]
 80101b8:	ed93 8a01 	vldr	s16, [r3, #4]
 80101bc:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 80101c0:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 80101c4:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 80101c8:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 80101cc:	3402      	adds	r4, #2
 80101ce:	46c8      	mov	r8, r9
 80101d0:	eeb0 9a48 	vmov.f32	s18, s16
 80101d4:	eef0 9a68 	vmov.f32	s19, s17
 80101d8:	e7d7      	b.n	801018a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80101da:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80101de:	edd3 8a00 	vldr	s17, [r3]
 80101e2:	ed93 8a01 	vldr	s16, [r3, #4]
 80101e6:	eeb0 0a68 	vmov.f32	s0, s17
 80101ea:	eef0 0a48 	vmov.f32	s1, s16
 80101ee:	4638      	mov	r0, r7
 80101f0:	f7ff fd7e 	bl	800fcf0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80101f4:	3402      	adds	r4, #2
 80101f6:	e7c8      	b.n	801018a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80101f8:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80101fc:	edd3 8a00 	vldr	s17, [r3]
 8010200:	eef0 0a48 	vmov.f32	s1, s16
 8010204:	eeb0 0a68 	vmov.f32	s0, s17
 8010208:	4638      	mov	r0, r7
 801020a:	f7ff fd71 	bl	800fcf0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 801020e:	3401      	adds	r4, #1
 8010210:	e7bb      	b.n	801018a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8010212:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8010216:	ed93 8a00 	vldr	s16, [r3]
 801021a:	e7f1      	b.n	8010200 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 801021c:	00a3      	lsls	r3, r4, #2
 801021e:	f103 0208 	add.w	r2, r3, #8
 8010222:	f103 090c 	add.w	r9, r3, #12
 8010226:	4432      	add	r2, r6
 8010228:	4433      	add	r3, r6
 801022a:	44b1      	add	r9, r6
 801022c:	ed92 2a00 	vldr	s4, [r2]
 8010230:	edd9 2a00 	vldr	s5, [r9]
 8010234:	edd3 1a01 	vldr	s3, [r3, #4]
 8010238:	ed93 1a00 	vldr	s2, [r3]
 801023c:	9207      	str	r2, [sp, #28]
 801023e:	eef0 0a48 	vmov.f32	s1, s16
 8010242:	eeb0 0a68 	vmov.f32	s0, s17
 8010246:	4638      	mov	r0, r7
 8010248:	f7ff fabc 	bl	800f7c4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 801024c:	9a07      	ldr	r2, [sp, #28]
 801024e:	ed99 8a00 	vldr	s16, [r9]
 8010252:	edd2 8a00 	vldr	s17, [r2]
 8010256:	3404      	adds	r4, #4
 8010258:	e797      	b.n	801018a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 801025a:	00a3      	lsls	r3, r4, #2
 801025c:	f103 0210 	add.w	r2, r3, #16
 8010260:	f103 0914 	add.w	r9, r3, #20
 8010264:	4432      	add	r2, r6
 8010266:	4433      	add	r3, r6
 8010268:	44b1      	add	r9, r6
 801026a:	ed92 3a00 	vldr	s6, [r2]
 801026e:	edd9 3a00 	vldr	s7, [r9]
 8010272:	edd3 2a03 	vldr	s5, [r3, #12]
 8010276:	ed93 2a02 	vldr	s4, [r3, #8]
 801027a:	edd3 1a01 	vldr	s3, [r3, #4]
 801027e:	ed93 1a00 	vldr	s2, [r3]
 8010282:	9207      	str	r2, [sp, #28]
 8010284:	eef0 0a48 	vmov.f32	s1, s16
 8010288:	eeb0 0a68 	vmov.f32	s0, s17
 801028c:	4638      	mov	r0, r7
 801028e:	f7ff fab8 	bl	800f802 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8010292:	9a07      	ldr	r2, [sp, #28]
 8010294:	ed99 8a00 	vldr	s16, [r9]
 8010298:	edd2 8a00 	vldr	s17, [r2]
 801029c:	3406      	adds	r4, #6
 801029e:	e774      	b.n	801018a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80102a0:	9b06      	ldr	r3, [sp, #24]
 80102a2:	4543      	cmp	r3, r8
 80102a4:	af08      	add	r7, sp, #32
 80102a6:	d90f      	bls.n	80102c8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 80102a8:	4638      	mov	r0, r7
 80102aa:	f7ff fdad 	bl	800fe08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 80102ae:	b958      	cbnz	r0, 80102c8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 80102b0:	2301      	movs	r3, #1
 80102b2:	e9cd 6301 	strd	r6, r3, [sp, #4]
 80102b6:	9703      	str	r7, [sp, #12]
 80102b8:	f8cd b000 	str.w	fp, [sp]
 80102bc:	4623      	mov	r3, r4
 80102be:	9a06      	ldr	r2, [sp, #24]
 80102c0:	4641      	mov	r1, r8
 80102c2:	4628      	mov	r0, r5
 80102c4:	f7ff fe02 	bl	800fecc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 80102c8:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 80102cc:	4638      	mov	r0, r7
 80102ce:	f016 fa93 	bl	80267f8 <_ZN8touchgfx6Canvas6renderEh>
 80102d2:	4604      	mov	r4, r0
 80102d4:	4638      	mov	r0, r7
 80102d6:	f7ff fe99 	bl	801000c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 80102da:	4620      	mov	r0, r4
 80102dc:	b035      	add	sp, #212	@ 0xd4
 80102de:	ecbd 8b04 	vpop	{d8-d9}
 80102e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102e6:	2401      	movs	r4, #1
 80102e8:	e7f7      	b.n	80102da <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 80102ea:	bf00      	nop
 80102ec:	00000000 	.word	0x00000000
 80102f0:	0802b004 	.word	0x0802b004

080102f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 80102f4:	b510      	push	{r4, lr}
 80102f6:	4604      	mov	r4, r0
 80102f8:	f7ff fe88 	bl	801000c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 80102fc:	4620      	mov	r0, r4
 80102fe:	21b0      	movs	r1, #176	@ 0xb0
 8010300:	f016 fe68 	bl	8026fd4 <_ZdlPvj>
 8010304:	4620      	mov	r0, r4
 8010306:	bd10      	pop	{r4, pc}

08010308 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 8010308:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801030c:	ed2d 8b06 	vpush	{d8-d10}
 8010310:	b0aa      	sub	sp, #168	@ 0xa8
 8010312:	4698      	mov	r8, r3
 8010314:	23ff      	movs	r3, #255	@ 0xff
 8010316:	4607      	mov	r7, r0
 8010318:	9300      	str	r3, [sp, #0]
 801031a:	4689      	mov	r9, r1
 801031c:	4692      	mov	sl, r2
 801031e:	6981      	ldr	r1, [r0, #24]
 8010320:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 8010322:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 801052c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8010326:	1d02      	adds	r2, r0, #4
 8010328:	a80d      	add	r0, sp, #52	@ 0x34
 801032a:	f016 f9d1 	bl	80266d0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 801032e:	7f3b      	ldrb	r3, [r7, #28]
 8010330:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 801052c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8010334:	1e5a      	subs	r2, r3, #1
 8010336:	4253      	negs	r3, r2
 8010338:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 801033c:	4153      	adcs	r3, r2
 801033e:	eeb0 0a60 	vmov.f32	s0, s1
 8010342:	4628      	mov	r0, r5
 8010344:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 8010348:	f005 fdc1 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801034c:	44ca      	add	sl, r9
 801034e:	eeb0 9a40 	vmov.f32	s18, s0
 8010352:	eef0 9a60 	vmov.f32	s19, s1
 8010356:	eef0 8a48 	vmov.f32	s17, s16
 801035a:	2400      	movs	r4, #0
 801035c:	45ca      	cmp	sl, r9
 801035e:	f000 80cd 	beq.w	80104fc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 8010362:	f819 3b01 	ldrb.w	r3, [r9], #1
 8010366:	2b06      	cmp	r3, #6
 8010368:	d8f8      	bhi.n	801035c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801036a:	e8df f003 	tbb	[pc, r3]
 801036e:	0804      	.short	0x0804
 8010370:	58533f2a 	.word	0x58533f2a
 8010374:	8a          	.byte	0x8a
 8010375:	00          	.byte	0x00
 8010376:	a80d      	add	r0, sp, #52	@ 0x34
 8010378:	f016 fa1c 	bl	80267b4 <_ZN8touchgfx6Canvas5closeEv>
 801037c:	e7ee      	b.n	801035c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801037e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8010382:	edd3 8a00 	vldr	s17, [r3]
 8010386:	ed93 8a01 	vldr	s16, [r3, #4]
 801038a:	eeb0 0a68 	vmov.f32	s0, s17
 801038e:	eef0 0a48 	vmov.f32	s1, s16
 8010392:	4628      	mov	r0, r5
 8010394:	f005 fd9b 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8010398:	eef0 7a60 	vmov.f32	s15, s1
 801039c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80103a0:	a80d      	add	r0, sp, #52	@ 0x34
 80103a2:	ee17 2a90 	vmov	r2, s15
 80103a6:	eef0 7a40 	vmov.f32	s15, s0
 80103aa:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80103ae:	eeb0 9a40 	vmov.f32	s18, s0
 80103b2:	ee17 1a90 	vmov	r1, s15
 80103b6:	eef0 9a60 	vmov.f32	s19, s1
 80103ba:	f016 fad5 	bl	8026968 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80103be:	3402      	adds	r4, #2
 80103c0:	e7cc      	b.n	801035c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80103c2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80103c6:	edd3 8a00 	vldr	s17, [r3]
 80103ca:	ed93 8a01 	vldr	s16, [r3, #4]
 80103ce:	eeb0 0a68 	vmov.f32	s0, s17
 80103d2:	eef0 0a48 	vmov.f32	s1, s16
 80103d6:	4628      	mov	r0, r5
 80103d8:	f005 fd79 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80103dc:	a80d      	add	r0, sp, #52	@ 0x34
 80103de:	eeb0 9a40 	vmov.f32	s18, s0
 80103e2:	eef0 9a60 	vmov.f32	s19, s1
 80103e6:	f7ff fe01 	bl	800ffec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80103ea:	e7e8      	b.n	80103be <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 80103ec:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80103f0:	edd3 8a00 	vldr	s17, [r3]
 80103f4:	eef0 0a48 	vmov.f32	s1, s16
 80103f8:	eeb0 0a68 	vmov.f32	s0, s17
 80103fc:	4628      	mov	r0, r5
 80103fe:	f005 fd66 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8010402:	a80d      	add	r0, sp, #52	@ 0x34
 8010404:	eeb0 9a40 	vmov.f32	s18, s0
 8010408:	eef0 9a60 	vmov.f32	s19, s1
 801040c:	3401      	adds	r4, #1
 801040e:	f7ff fded 	bl	800ffec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8010412:	e7a3      	b.n	801035c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8010414:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8010418:	ed93 8a00 	vldr	s16, [r3]
 801041c:	e7ea      	b.n	80103f4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 801041e:	1ca3      	adds	r3, r4, #2
 8010420:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8010424:	ed53 0a01 	vldr	s1, [r3, #-4]
 8010428:	ed13 0a02 	vldr	s0, [r3, #-8]
 801042c:	edd3 8a00 	vldr	s17, [r3]
 8010430:	ed93 8a01 	vldr	s16, [r3, #4]
 8010434:	4628      	mov	r0, r5
 8010436:	f005 fd4a 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801043a:	4628      	mov	r0, r5
 801043c:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 8010440:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 8010444:	eeb0 0a68 	vmov.f32	s0, s17
 8010448:	eef0 0a48 	vmov.f32	s1, s16
 801044c:	f005 fd3f 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8010450:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 8010454:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 8010458:	eef0 2a60 	vmov.f32	s5, s1
 801045c:	eeb0 2a40 	vmov.f32	s4, s0
 8010460:	eeb0 aa40 	vmov.f32	s20, s0
 8010464:	eef0 aa60 	vmov.f32	s21, s1
 8010468:	eeb0 0a49 	vmov.f32	s0, s18
 801046c:	eef0 0a69 	vmov.f32	s1, s19
 8010470:	a80d      	add	r0, sp, #52	@ 0x34
 8010472:	f7ff f9a7 	bl	800f7c4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8010476:	3404      	adds	r4, #4
 8010478:	eef0 9a6a 	vmov.f32	s19, s21
 801047c:	eeb0 9a4a 	vmov.f32	s18, s20
 8010480:	e76c      	b.n	801035c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8010482:	1d26      	adds	r6, r4, #4
 8010484:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8010488:	ed56 0a03 	vldr	s1, [r6, #-12]
 801048c:	ed16 0a04 	vldr	s0, [r6, #-16]
 8010490:	edd6 8a00 	vldr	s17, [r6]
 8010494:	ed96 8a01 	vldr	s16, [r6, #4]
 8010498:	4628      	mov	r0, r5
 801049a:	f005 fd18 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801049e:	4628      	mov	r0, r5
 80104a0:	ed8d 0a07 	vstr	s0, [sp, #28]
 80104a4:	edcd 0a08 	vstr	s1, [sp, #32]
 80104a8:	ed16 0a02 	vldr	s0, [r6, #-8]
 80104ac:	ed56 0a01 	vldr	s1, [r6, #-4]
 80104b0:	f005 fd0d 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80104b4:	4628      	mov	r0, r5
 80104b6:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 80104ba:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 80104be:	eeb0 0a68 	vmov.f32	s0, s17
 80104c2:	eef0 0a48 	vmov.f32	s1, s16
 80104c6:	f005 fd02 	bl	8015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80104ca:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 80104ce:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 80104d2:	eddd 1a08 	vldr	s3, [sp, #32]
 80104d6:	ed9d 1a07 	vldr	s2, [sp, #28]
 80104da:	eef0 3a60 	vmov.f32	s7, s1
 80104de:	eeb0 3a40 	vmov.f32	s6, s0
 80104e2:	eeb0 aa40 	vmov.f32	s20, s0
 80104e6:	eef0 aa60 	vmov.f32	s21, s1
 80104ea:	eeb0 0a49 	vmov.f32	s0, s18
 80104ee:	eef0 0a69 	vmov.f32	s1, s19
 80104f2:	a80d      	add	r0, sp, #52	@ 0x34
 80104f4:	f7ff f985 	bl	800f802 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 80104f8:	3406      	adds	r4, #6
 80104fa:	e7bd      	b.n	8010478 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 80104fc:	7f7b      	ldrb	r3, [r7, #29]
 80104fe:	7fb9      	ldrb	r1, [r7, #30]
 8010500:	4359      	muls	r1, r3
 8010502:	1c4b      	adds	r3, r1, #1
 8010504:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8010508:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801050c:	a80d      	add	r0, sp, #52	@ 0x34
 801050e:	f016 f973 	bl	80267f8 <_ZN8touchgfx6Canvas6renderEh>
 8010512:	4b07      	ldr	r3, [pc, #28]	@ (8010530 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 8010514:	930d      	str	r3, [sp, #52]	@ 0x34
 8010516:	4604      	mov	r4, r0
 8010518:	a812      	add	r0, sp, #72	@ 0x48
 801051a:	f001 fcf1 	bl	8011f00 <_ZN8touchgfx7OutlineD1Ev>
 801051e:	4620      	mov	r0, r4
 8010520:	b02a      	add	sp, #168	@ 0xa8
 8010522:	ecbd 8b06 	vpop	{d8-d10}
 8010526:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801052a:	bf00      	nop
 801052c:	00000000 	.word	0x00000000
 8010530:	0802b890 	.word	0x0802b890

08010534 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 8010534:	b410      	push	{r4}
 8010536:	7f04      	ldrb	r4, [r0, #28]
 8010538:	b11c      	cbz	r4, 8010542 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 801053a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801053e:	f7ff bee3 	b.w	8010308 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 8010542:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010546:	f7ff bd6d 	b.w	8010024 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

0801054a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 801054a:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801054e:	4691      	mov	r9, r2
 8010550:	4602      	mov	r2, r0
 8010552:	4606      	mov	r6, r0
 8010554:	f852 0f26 	ldr.w	r0, [r2, #38]!
 8010558:	4688      	mov	r8, r1
 801055a:	6851      	ldr	r1, [r2, #4]
 801055c:	469a      	mov	sl, r3
 801055e:	ab02      	add	r3, sp, #8
 8010560:	c303      	stmia	r3!, {r0, r1}
 8010562:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010566:	2b00      	cmp	r3, #0
 8010568:	af02      	add	r7, sp, #8
 801056a:	dd2f      	ble.n	80105cc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 801056c:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 8010570:	2c00      	cmp	r4, #0
 8010572:	dd2b      	ble.n	80105cc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 8010574:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8010578:	441c      	add	r4, r3
 801057a:	b2a4      	uxth	r4, r4
 801057c:	b225      	sxth	r5, r4
 801057e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8010582:	42ab      	cmp	r3, r5
 8010584:	da22      	bge.n	80105cc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 8010586:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010588:	9300      	str	r3, [sp, #0]
 801058a:	9701      	str	r7, [sp, #4]
 801058c:	4653      	mov	r3, sl
 801058e:	464a      	mov	r2, r9
 8010590:	4641      	mov	r1, r8
 8010592:	4630      	mov	r0, r6
 8010594:	f7ff ffce 	bl	8010534 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 8010598:	b940      	cbnz	r0, 80105ac <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
 801059a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801059e:	2b01      	cmp	r3, #1
 80105a0:	d004      	beq.n	80105ac <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
 80105a2:	3301      	adds	r3, #1
 80105a4:	105b      	asrs	r3, r3, #1
 80105a6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80105aa:	e7ec      	b.n	8010586 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
 80105ac:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80105b0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80105b4:	4413      	add	r3, r2
 80105b6:	b29b      	uxth	r3, r3
 80105b8:	441a      	add	r2, r3
 80105ba:	b212      	sxth	r2, r2
 80105bc:	4295      	cmp	r5, r2
 80105be:	f8ad 300a 	strh.w	r3, [sp, #10]
 80105c2:	dadc      	bge.n	801057e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 80105c4:	1ae3      	subs	r3, r4, r3
 80105c6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80105ca:	e7d8      	b.n	801057e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 80105cc:	b004      	add	sp, #16
 80105ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080105d2 <_ZN8touchgfx6CircleD1Ev>:
 80105d2:	4770      	bx	lr

080105d4 <_ZN8touchgfx6CircleD0Ev>:
 80105d4:	b510      	push	{r4, lr}
 80105d6:	2148      	movs	r1, #72	@ 0x48
 80105d8:	4604      	mov	r4, r0
 80105da:	f016 fcfb 	bl	8026fd4 <_ZdlPvj>
 80105de:	4620      	mov	r0, r4
 80105e0:	bd10      	pop	{r4, pc}

080105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80105e2:	b507      	push	{r0, r1, r2, lr}
 80105e4:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 80105e8:	ab01      	add	r3, sp, #4
 80105ea:	6809      	ldr	r1, [r1, #0]
 80105ec:	6800      	ldr	r0, [r0, #0]
 80105ee:	f005 fd87 	bl	8016100 <_ZN8touchgfx6muldivElllRl>
 80105f2:	b003      	add	sp, #12
 80105f4:	f85d fb04 	ldr.w	pc, [sp], #4

080105f8 <_ZN8touchgfx7CWRUtil4sineEi>:
 80105f8:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 80105fc:	fb90 f2f3 	sdiv	r2, r0, r3
 8010600:	fb02 0013 	mls	r0, r2, r3, r0
 8010604:	2800      	cmp	r0, #0
 8010606:	bfb8      	it	lt
 8010608:	18c0      	addlt	r0, r0, r3
 801060a:	285a      	cmp	r0, #90	@ 0x5a
 801060c:	4b09      	ldr	r3, [pc, #36]	@ (8010634 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 801060e:	dc02      	bgt.n	8010616 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8010610:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010614:	4770      	bx	lr
 8010616:	28b4      	cmp	r0, #180	@ 0xb4
 8010618:	dc02      	bgt.n	8010620 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801061a:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 801061e:	e7f7      	b.n	8010610 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8010620:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 8010624:	bfd4      	ite	le
 8010626:	38b4      	suble	r0, #180	@ 0xb4
 8010628:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 801062c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010630:	4240      	negs	r0, r0
 8010632:	4770      	bx	lr
 8010634:	0802b05c 	.word	0x0802b05c

08010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8010638:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 801063c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801063e:	fb90 f2f3 	sdiv	r2, r0, r3
 8010642:	fb02 0013 	mls	r0, r2, r3, r0
 8010646:	2800      	cmp	r0, #0
 8010648:	bfb8      	it	lt
 801064a:	18c0      	addlt	r0, r0, r3
 801064c:	1144      	asrs	r4, r0, #5
 801064e:	f000 061f 	and.w	r6, r0, #31
 8010652:	4620      	mov	r0, r4
 8010654:	f7ff ffd0 	bl	80105f8 <_ZN8touchgfx7CWRUtil4sineEi>
 8010658:	4605      	mov	r5, r0
 801065a:	b90e      	cbnz	r6, 8010660 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 801065c:	b002      	add	sp, #8
 801065e:	bd70      	pop	{r4, r5, r6, pc}
 8010660:	1c60      	adds	r0, r4, #1
 8010662:	f7ff ffc9 	bl	80105f8 <_ZN8touchgfx7CWRUtil4sineEi>
 8010666:	ab01      	add	r3, sp, #4
 8010668:	2220      	movs	r2, #32
 801066a:	4631      	mov	r1, r6
 801066c:	1b40      	subs	r0, r0, r5
 801066e:	f005 fd47 	bl	8016100 <_ZN8touchgfx6muldivElllRl>
 8010672:	4428      	add	r0, r5
 8010674:	e7f2      	b.n	801065c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8010676:	b508      	push	{r3, lr}
 8010678:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 801067c:	f7ff ffdc 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010680:	bd08      	pop	{r3, pc}
	...

08010684 <_ZN8touchgfx6CircleC1Ev>:
 8010684:	b510      	push	{r4, lr}
 8010686:	4604      	mov	r4, r0
 8010688:	f000 fd0a 	bl	80110a0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 801068c:	4b08      	ldr	r3, [pc, #32]	@ (80106b0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 801068e:	6023      	str	r3, [r4, #0]
 8010690:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 8010694:	2300      	movs	r3, #0
 8010696:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 801069a:	f24b 4205 	movw	r2, #46085	@ 0xb405
 801069e:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 80106a2:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 80106a6:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 80106aa:	60a3      	str	r3, [r4, #8]
 80106ac:	4620      	mov	r0, r4
 80106ae:	bd10      	pop	{r4, pc}
 80106b0:	0802b11c 	.word	0x0802b11c

080106b4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80106b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106b8:	428a      	cmp	r2, r1
 80106ba:	4680      	mov	r8, r0
 80106bc:	4610      	mov	r0, r2
 80106be:	4699      	mov	r9, r3
 80106c0:	bfa6      	itte	ge
 80106c2:	460a      	movge	r2, r1
 80106c4:	4603      	movge	r3, r0
 80106c6:	460b      	movlt	r3, r1
 80106c8:	1a99      	subs	r1, r3, r2
 80106ca:	b085      	sub	sp, #20
 80106cc:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 80106d0:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 80106d4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80106d6:	bfa4      	itt	ge
 80106d8:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 80106dc:	2200      	movge	r2, #0
 80106de:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 80106e2:	9300      	str	r3, [sp, #0]
 80106e4:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 80106e8:	f102 0b01 	add.w	fp, r2, #1
 80106ec:	2c00      	cmp	r4, #0
 80106ee:	f040 80af 	bne.w	8010850 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80106f2:	4610      	mov	r0, r2
 80106f4:	9201      	str	r2, [sp, #4]
 80106f6:	f7ff ff9f 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80106fa:	a903      	add	r1, sp, #12
 80106fc:	9003      	str	r0, [sp, #12]
 80106fe:	4650      	mov	r0, sl
 8010700:	f7ff ff6f 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010704:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8010708:	9a01      	ldr	r2, [sp, #4]
 801070a:	4408      	add	r0, r1
 801070c:	f8d9 1000 	ldr.w	r1, [r9]
 8010710:	4281      	cmp	r1, r0
 8010712:	bfc8      	it	gt
 8010714:	f8c9 0000 	strgt.w	r0, [r9]
 8010718:	6839      	ldr	r1, [r7, #0]
 801071a:	4288      	cmp	r0, r1
 801071c:	bfc8      	it	gt
 801071e:	6038      	strgt	r0, [r7, #0]
 8010720:	4610      	mov	r0, r2
 8010722:	f7ff ffa8 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010726:	a903      	add	r1, sp, #12
 8010728:	9003      	str	r0, [sp, #12]
 801072a:	4650      	mov	r0, sl
 801072c:	f7ff ff59 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010730:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8010734:	1a10      	subs	r0, r2, r0
 8010736:	6832      	ldr	r2, [r6, #0]
 8010738:	4282      	cmp	r2, r0
 801073a:	bfc8      	it	gt
 801073c:	6030      	strgt	r0, [r6, #0]
 801073e:	682a      	ldr	r2, [r5, #0]
 8010740:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 8010744:	4290      	cmp	r0, r2
 8010746:	fb9b f2f1 	sdiv	r2, fp, r1
 801074a:	fb01 b212 	mls	r2, r1, r2, fp
 801074e:	eba1 0202 	sub.w	r2, r1, r2
 8010752:	bfc8      	it	gt
 8010754:	6028      	strgt	r0, [r5, #0]
 8010756:	fb92 f0f1 	sdiv	r0, r2, r1
 801075a:	fb01 2210 	mls	r2, r1, r0, r2
 801075e:	4493      	add	fp, r2
 8010760:	9b00      	ldr	r3, [sp, #0]
 8010762:	455b      	cmp	r3, fp
 8010764:	db2a      	blt.n	80107bc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8010766:	4658      	mov	r0, fp
 8010768:	f7ff ff66 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801076c:	a903      	add	r1, sp, #12
 801076e:	9003      	str	r0, [sp, #12]
 8010770:	4650      	mov	r0, sl
 8010772:	f7ff ff36 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010776:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 801077a:	4410      	add	r0, r2
 801077c:	f8d9 2000 	ldr.w	r2, [r9]
 8010780:	4282      	cmp	r2, r0
 8010782:	bfc8      	it	gt
 8010784:	f8c9 0000 	strgt.w	r0, [r9]
 8010788:	683a      	ldr	r2, [r7, #0]
 801078a:	4290      	cmp	r0, r2
 801078c:	bfc8      	it	gt
 801078e:	6038      	strgt	r0, [r7, #0]
 8010790:	4658      	mov	r0, fp
 8010792:	f7ff ff70 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010796:	a903      	add	r1, sp, #12
 8010798:	9003      	str	r0, [sp, #12]
 801079a:	4650      	mov	r0, sl
 801079c:	f7ff ff21 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80107a0:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 80107a4:	1a10      	subs	r0, r2, r0
 80107a6:	6832      	ldr	r2, [r6, #0]
 80107a8:	4282      	cmp	r2, r0
 80107aa:	bfc8      	it	gt
 80107ac:	6030      	strgt	r0, [r6, #0]
 80107ae:	682a      	ldr	r2, [r5, #0]
 80107b0:	4290      	cmp	r0, r2
 80107b2:	bfc8      	it	gt
 80107b4:	6028      	strgt	r0, [r5, #0]
 80107b6:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 80107ba:	e7d1      	b.n	8010760 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80107bc:	9b00      	ldr	r3, [sp, #0]
 80107be:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 80107c2:	455b      	cmp	r3, fp
 80107c4:	dd27      	ble.n	8010816 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80107c6:	4618      	mov	r0, r3
 80107c8:	f7ff ff36 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80107cc:	a903      	add	r1, sp, #12
 80107ce:	9003      	str	r0, [sp, #12]
 80107d0:	4650      	mov	r0, sl
 80107d2:	f7ff ff06 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80107d6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 80107da:	4410      	add	r0, r2
 80107dc:	f8d9 2000 	ldr.w	r2, [r9]
 80107e0:	4282      	cmp	r2, r0
 80107e2:	bfc8      	it	gt
 80107e4:	f8c9 0000 	strgt.w	r0, [r9]
 80107e8:	683a      	ldr	r2, [r7, #0]
 80107ea:	4290      	cmp	r0, r2
 80107ec:	bfc8      	it	gt
 80107ee:	6038      	strgt	r0, [r7, #0]
 80107f0:	9800      	ldr	r0, [sp, #0]
 80107f2:	f7ff ff40 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80107f6:	a903      	add	r1, sp, #12
 80107f8:	9003      	str	r0, [sp, #12]
 80107fa:	4650      	mov	r0, sl
 80107fc:	f7ff fef1 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010800:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8010804:	1a10      	subs	r0, r2, r0
 8010806:	6832      	ldr	r2, [r6, #0]
 8010808:	4282      	cmp	r2, r0
 801080a:	bfc8      	it	gt
 801080c:	6030      	strgt	r0, [r6, #0]
 801080e:	682a      	ldr	r2, [r5, #0]
 8010810:	4290      	cmp	r0, r2
 8010812:	bfc8      	it	gt
 8010814:	6028      	strgt	r0, [r5, #0]
 8010816:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 801081a:	f8d9 1000 	ldr.w	r1, [r9]
 801081e:	4291      	cmp	r1, r2
 8010820:	bfc8      	it	gt
 8010822:	f8c9 2000 	strgt.w	r2, [r9]
 8010826:	683a      	ldr	r2, [r7, #0]
 8010828:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 801082c:	429a      	cmp	r2, r3
 801082e:	bfb8      	it	lt
 8010830:	603b      	strlt	r3, [r7, #0]
 8010832:	6832      	ldr	r2, [r6, #0]
 8010834:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8010838:	429a      	cmp	r2, r3
 801083a:	bfc8      	it	gt
 801083c:	6033      	strgt	r3, [r6, #0]
 801083e:	682a      	ldr	r2, [r5, #0]
 8010840:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8010844:	429a      	cmp	r2, r3
 8010846:	da00      	bge.n	801084a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8010848:	602b      	str	r3, [r5, #0]
 801084a:	b005      	add	sp, #20
 801084c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010850:	2002      	movs	r0, #2
 8010852:	3401      	adds	r4, #1
 8010854:	fb94 f4f0 	sdiv	r4, r4, r0
 8010858:	4610      	mov	r0, r2
 801085a:	9201      	str	r2, [sp, #4]
 801085c:	f7ff feec 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010860:	a903      	add	r1, sp, #12
 8010862:	9003      	str	r0, [sp, #12]
 8010864:	4650      	mov	r0, sl
 8010866:	f7ff febc 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801086a:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 801086e:	9a01      	ldr	r2, [sp, #4]
 8010870:	4408      	add	r0, r1
 8010872:	f8d9 1000 	ldr.w	r1, [r9]
 8010876:	1b03      	subs	r3, r0, r4
 8010878:	4299      	cmp	r1, r3
 801087a:	bfc8      	it	gt
 801087c:	f8c9 3000 	strgt.w	r3, [r9]
 8010880:	6839      	ldr	r1, [r7, #0]
 8010882:	428b      	cmp	r3, r1
 8010884:	bfc8      	it	gt
 8010886:	603b      	strgt	r3, [r7, #0]
 8010888:	f8d9 1000 	ldr.w	r1, [r9]
 801088c:	4420      	add	r0, r4
 801088e:	4281      	cmp	r1, r0
 8010890:	bfc8      	it	gt
 8010892:	f8c9 0000 	strgt.w	r0, [r9]
 8010896:	6839      	ldr	r1, [r7, #0]
 8010898:	4288      	cmp	r0, r1
 801089a:	bfc8      	it	gt
 801089c:	6038      	strgt	r0, [r7, #0]
 801089e:	4610      	mov	r0, r2
 80108a0:	f7ff fee9 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80108a4:	a903      	add	r1, sp, #12
 80108a6:	9003      	str	r0, [sp, #12]
 80108a8:	4650      	mov	r0, sl
 80108aa:	f7ff fe9a 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80108ae:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 80108b2:	1a10      	subs	r0, r2, r0
 80108b4:	6832      	ldr	r2, [r6, #0]
 80108b6:	1b01      	subs	r1, r0, r4
 80108b8:	428a      	cmp	r2, r1
 80108ba:	bfc8      	it	gt
 80108bc:	6031      	strgt	r1, [r6, #0]
 80108be:	682a      	ldr	r2, [r5, #0]
 80108c0:	4291      	cmp	r1, r2
 80108c2:	bfc8      	it	gt
 80108c4:	6029      	strgt	r1, [r5, #0]
 80108c6:	6832      	ldr	r2, [r6, #0]
 80108c8:	4420      	add	r0, r4
 80108ca:	4282      	cmp	r2, r0
 80108cc:	bfc8      	it	gt
 80108ce:	6030      	strgt	r0, [r6, #0]
 80108d0:	682a      	ldr	r2, [r5, #0]
 80108d2:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 80108d6:	4290      	cmp	r0, r2
 80108d8:	fb9b f2f1 	sdiv	r2, fp, r1
 80108dc:	fb01 b212 	mls	r2, r1, r2, fp
 80108e0:	eba1 0202 	sub.w	r2, r1, r2
 80108e4:	bfc8      	it	gt
 80108e6:	6028      	strgt	r0, [r5, #0]
 80108e8:	fb92 f0f1 	sdiv	r0, r2, r1
 80108ec:	fb01 2210 	mls	r2, r1, r0, r2
 80108f0:	4493      	add	fp, r2
 80108f2:	9b00      	ldr	r3, [sp, #0]
 80108f4:	455b      	cmp	r3, fp
 80108f6:	db40      	blt.n	801097a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80108f8:	4658      	mov	r0, fp
 80108fa:	f7ff fe9d 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80108fe:	a903      	add	r1, sp, #12
 8010900:	9003      	str	r0, [sp, #12]
 8010902:	4650      	mov	r0, sl
 8010904:	f7ff fe6d 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010908:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 801090c:	4410      	add	r0, r2
 801090e:	f8d9 2000 	ldr.w	r2, [r9]
 8010912:	1b01      	subs	r1, r0, r4
 8010914:	428a      	cmp	r2, r1
 8010916:	bfc8      	it	gt
 8010918:	f8c9 1000 	strgt.w	r1, [r9]
 801091c:	683a      	ldr	r2, [r7, #0]
 801091e:	4291      	cmp	r1, r2
 8010920:	bfc8      	it	gt
 8010922:	6039      	strgt	r1, [r7, #0]
 8010924:	f8d9 2000 	ldr.w	r2, [r9]
 8010928:	4420      	add	r0, r4
 801092a:	4282      	cmp	r2, r0
 801092c:	bfc8      	it	gt
 801092e:	f8c9 0000 	strgt.w	r0, [r9]
 8010932:	683a      	ldr	r2, [r7, #0]
 8010934:	4290      	cmp	r0, r2
 8010936:	bfc8      	it	gt
 8010938:	6038      	strgt	r0, [r7, #0]
 801093a:	4658      	mov	r0, fp
 801093c:	f7ff fe9b 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010940:	a903      	add	r1, sp, #12
 8010942:	9003      	str	r0, [sp, #12]
 8010944:	4650      	mov	r0, sl
 8010946:	f7ff fe4c 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801094a:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 801094e:	1a10      	subs	r0, r2, r0
 8010950:	6832      	ldr	r2, [r6, #0]
 8010952:	1b01      	subs	r1, r0, r4
 8010954:	428a      	cmp	r2, r1
 8010956:	bfc8      	it	gt
 8010958:	6031      	strgt	r1, [r6, #0]
 801095a:	682a      	ldr	r2, [r5, #0]
 801095c:	4291      	cmp	r1, r2
 801095e:	bfc8      	it	gt
 8010960:	6029      	strgt	r1, [r5, #0]
 8010962:	6832      	ldr	r2, [r6, #0]
 8010964:	4420      	add	r0, r4
 8010966:	4282      	cmp	r2, r0
 8010968:	bfc8      	it	gt
 801096a:	6030      	strgt	r0, [r6, #0]
 801096c:	682a      	ldr	r2, [r5, #0]
 801096e:	4290      	cmp	r0, r2
 8010970:	bfc8      	it	gt
 8010972:	6028      	strgt	r0, [r5, #0]
 8010974:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 8010978:	e7bb      	b.n	80108f2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 801097a:	9b00      	ldr	r3, [sp, #0]
 801097c:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 8010980:	455b      	cmp	r3, fp
 8010982:	f77f af62 	ble.w	801084a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8010986:	4618      	mov	r0, r3
 8010988:	f7ff fe56 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801098c:	a903      	add	r1, sp, #12
 801098e:	9003      	str	r0, [sp, #12]
 8010990:	4650      	mov	r0, sl
 8010992:	f7ff fe26 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010996:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 801099a:	4410      	add	r0, r2
 801099c:	f8d9 2000 	ldr.w	r2, [r9]
 80109a0:	1b01      	subs	r1, r0, r4
 80109a2:	428a      	cmp	r2, r1
 80109a4:	bfc8      	it	gt
 80109a6:	f8c9 1000 	strgt.w	r1, [r9]
 80109aa:	683a      	ldr	r2, [r7, #0]
 80109ac:	4291      	cmp	r1, r2
 80109ae:	bfc8      	it	gt
 80109b0:	6039      	strgt	r1, [r7, #0]
 80109b2:	f8d9 2000 	ldr.w	r2, [r9]
 80109b6:	4420      	add	r0, r4
 80109b8:	4282      	cmp	r2, r0
 80109ba:	bfc8      	it	gt
 80109bc:	f8c9 0000 	strgt.w	r0, [r9]
 80109c0:	683b      	ldr	r3, [r7, #0]
 80109c2:	4298      	cmp	r0, r3
 80109c4:	bfc8      	it	gt
 80109c6:	6038      	strgt	r0, [r7, #0]
 80109c8:	9800      	ldr	r0, [sp, #0]
 80109ca:	f7ff fe54 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80109ce:	a903      	add	r1, sp, #12
 80109d0:	9003      	str	r0, [sp, #12]
 80109d2:	4650      	mov	r0, sl
 80109d4:	f7ff fe05 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80109d8:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 80109dc:	6832      	ldr	r2, [r6, #0]
 80109de:	1a18      	subs	r0, r3, r0
 80109e0:	1b03      	subs	r3, r0, r4
 80109e2:	429a      	cmp	r2, r3
 80109e4:	bfc8      	it	gt
 80109e6:	6033      	strgt	r3, [r6, #0]
 80109e8:	682a      	ldr	r2, [r5, #0]
 80109ea:	4293      	cmp	r3, r2
 80109ec:	bfc8      	it	gt
 80109ee:	602b      	strgt	r3, [r5, #0]
 80109f0:	6833      	ldr	r3, [r6, #0]
 80109f2:	4404      	add	r4, r0
 80109f4:	42a3      	cmp	r3, r4
 80109f6:	bfc8      	it	gt
 80109f8:	6034      	strgt	r4, [r6, #0]
 80109fa:	682b      	ldr	r3, [r5, #0]
 80109fc:	429c      	cmp	r4, r3
 80109fe:	bfc8      	it	gt
 8010a00:	602c      	strgt	r4, [r5, #0]
 8010a02:	e722      	b.n	801084a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08010a04 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8010a04:	b530      	push	{r4, r5, lr}
 8010a06:	4604      	mov	r4, r0
 8010a08:	4608      	mov	r0, r1
 8010a0a:	4611      	mov	r1, r2
 8010a0c:	461a      	mov	r2, r3
 8010a0e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010a12:	b089      	sub	sp, #36	@ 0x24
 8010a14:	015b      	lsls	r3, r3, #5
 8010a16:	9304      	str	r3, [sp, #16]
 8010a18:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010a1c:	2500      	movs	r5, #0
 8010a1e:	015b      	lsls	r3, r3, #5
 8010a20:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8010a24:	ab07      	add	r3, sp, #28
 8010a26:	9302      	str	r3, [sp, #8]
 8010a28:	ab06      	add	r3, sp, #24
 8010a2a:	9301      	str	r3, [sp, #4]
 8010a2c:	ab05      	add	r3, sp, #20
 8010a2e:	9300      	str	r3, [sp, #0]
 8010a30:	ab04      	add	r3, sp, #16
 8010a32:	9505      	str	r5, [sp, #20]
 8010a34:	f7ff fe3e 	bl	80106b4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8010a38:	2520      	movs	r5, #32
 8010a3a:	9a04      	ldr	r2, [sp, #16]
 8010a3c:	9805      	ldr	r0, [sp, #20]
 8010a3e:	fb92 f2f5 	sdiv	r2, r2, r5
 8010a42:	fb90 f0f5 	sdiv	r0, r0, r5
 8010a46:	b292      	uxth	r2, r2
 8010a48:	3002      	adds	r0, #2
 8010a4a:	1a80      	subs	r0, r0, r2
 8010a4c:	9b06      	ldr	r3, [sp, #24]
 8010a4e:	9907      	ldr	r1, [sp, #28]
 8010a50:	fb93 f3f5 	sdiv	r3, r3, r5
 8010a54:	fb91 f1f5 	sdiv	r1, r1, r5
 8010a58:	b29b      	uxth	r3, r3
 8010a5a:	3102      	adds	r1, #2
 8010a5c:	1ac9      	subs	r1, r1, r3
 8010a5e:	3a01      	subs	r2, #1
 8010a60:	3b01      	subs	r3, #1
 8010a62:	80a0      	strh	r0, [r4, #4]
 8010a64:	4620      	mov	r0, r4
 8010a66:	8022      	strh	r2, [r4, #0]
 8010a68:	8063      	strh	r3, [r4, #2]
 8010a6a:	80e1      	strh	r1, [r4, #6]
 8010a6c:	b009      	add	sp, #36	@ 0x24
 8010a6e:	bd30      	pop	{r4, r5, pc}

08010a70 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8010a70:	b510      	push	{r4, lr}
 8010a72:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 8010a76:	4604      	mov	r4, r0
 8010a78:	f7ff ffc4 	bl	8010a04 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8010a7c:	4620      	mov	r0, r4
 8010a7e:	bd10      	pop	{r4, pc}

08010a80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8010a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a84:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 8010a88:	42b5      	cmp	r5, r6
 8010a8a:	bfa2      	ittt	ge
 8010a8c:	462b      	movge	r3, r5
 8010a8e:	4635      	movge	r5, r6
 8010a90:	461e      	movge	r6, r3
 8010a92:	1b73      	subs	r3, r6, r5
 8010a94:	468a      	mov	sl, r1
 8010a96:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 8010a98:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 8010a9c:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 8010aa0:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 8010aa2:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8010aa6:	b0af      	sub	sp, #188	@ 0xbc
 8010aa8:	f04f 0320 	mov.w	r3, #32
 8010aac:	4604      	mov	r4, r0
 8010aae:	bfa4      	itt	ge
 8010ab0:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 8010ab4:	2500      	movge	r5, #0
 8010ab6:	fb99 f9f3 	sdiv	r9, r9, r3
 8010aba:	fb9b fbf3 	sdiv	fp, fp, r3
 8010abe:	2900      	cmp	r1, #0
 8010ac0:	f000 80ff 	beq.w	8010cc2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 8010ac4:	f9ba 0000 	ldrsh.w	r0, [sl]
 8010ac8:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 8010acc:	eba9 0700 	sub.w	r7, r9, r0
 8010ad0:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8010ad4:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8010ad8:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 8010adc:	ebab 0803 	sub.w	r8, fp, r3
 8010ae0:	4407      	add	r7, r0
 8010ae2:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8010ae6:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8010aea:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 8010aee:	b23f      	sxth	r7, r7
 8010af0:	4498      	add	r8, r3
 8010af2:	eba9 0707 	sub.w	r7, r9, r7
 8010af6:	fa0f f888 	sxth.w	r8, r8
 8010afa:	ebab 0808 	sub.w	r8, fp, r8
 8010afe:	2f00      	cmp	r7, #0
 8010b00:	bfb8      	it	lt
 8010b02:	427f      	neglt	r7, r7
 8010b04:	f1b8 0f00 	cmp.w	r8, #0
 8010b08:	bfb8      	it	lt
 8010b0a:	f1c8 0800 	rsblt	r8, r8, #0
 8010b0e:	45bc      	cmp	ip, r7
 8010b10:	bfcc      	ite	gt
 8010b12:	f10c 0701 	addgt.w	r7, ip, #1
 8010b16:	3701      	addle	r7, #1
 8010b18:	4540      	cmp	r0, r8
 8010b1a:	bfc8      	it	gt
 8010b1c:	f100 0801 	addgt.w	r8, r0, #1
 8010b20:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 8010b24:	f100 0001 	add.w	r0, r0, #1
 8010b28:	ea4f 0060 	mov.w	r0, r0, asr #1
 8010b2c:	f04f 0302 	mov.w	r3, #2
 8010b30:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 8010b34:	fb91 f1f3 	sdiv	r1, r1, r3
 8010b38:	eba2 0201 	sub.w	r2, r2, r1
 8010b3c:	bfd8      	it	le
 8010b3e:	f108 0801 	addle.w	r8, r8, #1
 8010b42:	9303      	str	r3, [sp, #12]
 8010b44:	920f      	str	r2, [sp, #60]	@ 0x3c
 8010b46:	f7ff fd57 	bl	80105f8 <_ZN8touchgfx7CWRUtil4sineEi>
 8010b4a:	a92e      	add	r1, sp, #184	@ 0xb8
 8010b4c:	fb08 f808 	mul.w	r8, r8, r8
 8010b50:	f841 0d74 	str.w	r0, [r1, #-116]!
 8010b54:	a80f      	add	r0, sp, #60	@ 0x3c
 8010b56:	f7ff fd44 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010b5a:	fb07 8707 	mla	r7, r7, r7, r8
 8010b5e:	f04f 0c20 	mov.w	ip, #32
 8010b62:	fb90 f0fc 	sdiv	r0, r0, ip
 8010b66:	4340      	muls	r0, r0
 8010b68:	4287      	cmp	r7, r0
 8010b6a:	9b03      	ldr	r3, [sp, #12]
 8010b6c:	da04      	bge.n	8010b78 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8010b6e:	2401      	movs	r4, #1
 8010b70:	4620      	mov	r0, r4
 8010b72:	b02f      	add	sp, #188	@ 0xbc
 8010b74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b78:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8010b7a:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8010b7c:	fb91 f2f3 	sdiv	r2, r1, r3
 8010b80:	4402      	add	r2, r0
 8010b82:	fb92 f2fc 	sdiv	r2, r2, ip
 8010b86:	f9ba 1000 	ldrsh.w	r1, [sl]
 8010b8a:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 8010b8e:	440b      	add	r3, r1
 8010b90:	b21b      	sxth	r3, r3
 8010b92:	454b      	cmp	r3, r9
 8010b94:	bfa8      	it	ge
 8010b96:	464b      	movge	r3, r9
 8010b98:	428b      	cmp	r3, r1
 8010b9a:	bfac      	ite	ge
 8010b9c:	eba9 0903 	subge.w	r9, r9, r3
 8010ba0:	eba9 0901 	sublt.w	r9, r9, r1
 8010ba4:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 8010ba8:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 8010bac:	440b      	add	r3, r1
 8010bae:	b21b      	sxth	r3, r3
 8010bb0:	455b      	cmp	r3, fp
 8010bb2:	bfa8      	it	ge
 8010bb4:	465b      	movge	r3, fp
 8010bb6:	428b      	cmp	r3, r1
 8010bb8:	bfac      	ite	ge
 8010bba:	ebab 0b03 	subge.w	fp, fp, r3
 8010bbe:	ebab 0b01 	sublt.w	fp, fp, r1
 8010bc2:	3201      	adds	r2, #1
 8010bc4:	fb0b fb0b 	mul.w	fp, fp, fp
 8010bc8:	fb09 b909 	mla	r9, r9, r9, fp
 8010bcc:	4352      	muls	r2, r2
 8010bce:	4591      	cmp	r9, r2
 8010bd0:	dccd      	bgt.n	8010b6e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8010bd2:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 8010bd6:	4621      	mov	r1, r4
 8010bd8:	4648      	mov	r0, r9
 8010bda:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 8010bdc:	f004 fe5c 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010be0:	6823      	ldr	r3, [r4, #0]
 8010be2:	4620      	mov	r0, r4
 8010be4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8010be6:	4798      	blx	r3
 8010be8:	4653      	mov	r3, sl
 8010bea:	9000      	str	r0, [sp, #0]
 8010bec:	464a      	mov	r2, r9
 8010bee:	4639      	mov	r1, r7
 8010bf0:	a811      	add	r0, sp, #68	@ 0x44
 8010bf2:	f015 fd6d 	bl	80266d0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8010bf6:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 8010bf8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010bfa:	920b      	str	r2, [sp, #44]	@ 0x2c
 8010bfc:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8010c00:	930c      	str	r3, [sp, #48]	@ 0x30
 8010c02:	dd07      	ble.n	8010c14 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 8010c04:	2102      	movs	r1, #2
 8010c06:	fb93 f3f1 	sdiv	r3, r3, r1
 8010c0a:	4413      	add	r3, r2
 8010c0c:	930c      	str	r3, [sp, #48]	@ 0x30
 8010c0e:	fb93 f3f1 	sdiv	r3, r3, r1
 8010c12:	930b      	str	r3, [sp, #44]	@ 0x2c
 8010c14:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8010c18:	4628      	mov	r0, r5
 8010c1a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010c1e:	930d      	str	r3, [sp, #52]	@ 0x34
 8010c20:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 8010c24:	f7ff fd08 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010c28:	4649      	mov	r1, r9
 8010c2a:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010c2c:	a80d      	add	r0, sp, #52	@ 0x34
 8010c2e:	f7ff fcd8 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010c32:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010c34:	f04f 0a02 	mov.w	sl, #2
 8010c38:	fb90 f0fa 	sdiv	r0, r0, sl
 8010c3c:	eb00 0b03 	add.w	fp, r0, r3
 8010c40:	4628      	mov	r0, r5
 8010c42:	f7ff fd18 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010c46:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 8010c4a:	017f      	lsls	r7, r7, #5
 8010c4c:	f848 0d80 	str.w	r0, [r8, #-128]!
 8010c50:	a80d      	add	r0, sp, #52	@ 0x34
 8010c52:	4641      	mov	r1, r8
 8010c54:	f7ff fcc5 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010c58:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010c5a:	fb90 f0fa 	sdiv	r0, r0, sl
 8010c5e:	4659      	mov	r1, fp
 8010c60:	1a12      	subs	r2, r2, r0
 8010c62:	a811      	add	r0, sp, #68	@ 0x44
 8010c64:	f015 fe80 	bl	8026968 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8010c68:	f105 0a20 	add.w	sl, r5, #32
 8010c6c:	bb67      	cbnz	r7, 8010cc8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 8010c6e:	46ab      	mov	fp, r5
 8010c70:	45b2      	cmp	sl, r6
 8010c72:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8010c74:	dc33      	bgt.n	8010cde <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 8010c76:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8010c78:	4650      	mov	r0, sl
 8010c7a:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8010c7e:	920d      	str	r2, [sp, #52]	@ 0x34
 8010c80:	f7ff fcda 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010c84:	4641      	mov	r1, r8
 8010c86:	900e      	str	r0, [sp, #56]	@ 0x38
 8010c88:	a80d      	add	r0, sp, #52	@ 0x34
 8010c8a:	f7ff fcaa 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010c8e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8010c90:	2302      	movs	r3, #2
 8010c92:	fb90 f0f3 	sdiv	r0, r0, r3
 8010c96:	eb00 0b02 	add.w	fp, r0, r2
 8010c9a:	4650      	mov	r0, sl
 8010c9c:	f7ff fceb 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010ca0:	4649      	mov	r1, r9
 8010ca2:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010ca4:	a80d      	add	r0, sp, #52	@ 0x34
 8010ca6:	f7ff fc9c 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010caa:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010cac:	2302      	movs	r3, #2
 8010cae:	4659      	mov	r1, fp
 8010cb0:	fb90 f0f3 	sdiv	r0, r0, r3
 8010cb4:	1a12      	subs	r2, r2, r0
 8010cb6:	a811      	add	r0, sp, #68	@ 0x44
 8010cb8:	46d3      	mov	fp, sl
 8010cba:	f015 fea2 	bl	8026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010cbe:	44ba      	add	sl, r7
 8010cc0:	e7d6      	b.n	8010c70 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 8010cc2:	fb92 f2f3 	sdiv	r2, r2, r3
 8010cc6:	e75e      	b.n	8010b86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8010cc8:	fb9a f2f7 	sdiv	r2, sl, r7
 8010ccc:	fb07 a212 	mls	r2, r7, r2, sl
 8010cd0:	1aba      	subs	r2, r7, r2
 8010cd2:	fb92 f1f7 	sdiv	r1, r2, r7
 8010cd6:	fb07 2211 	mls	r2, r7, r1, r2
 8010cda:	4492      	add	sl, r2
 8010cdc:	e7c7      	b.n	8010c6e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 8010cde:	455e      	cmp	r6, fp
 8010ce0:	dd23      	ble.n	8010d2a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 8010ce2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8010ce4:	4630      	mov	r0, r6
 8010ce6:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8010cea:	920d      	str	r2, [sp, #52]	@ 0x34
 8010cec:	f7ff fca4 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010cf0:	4641      	mov	r1, r8
 8010cf2:	900e      	str	r0, [sp, #56]	@ 0x38
 8010cf4:	a80d      	add	r0, sp, #52	@ 0x34
 8010cf6:	f7ff fc74 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010cfa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010cfc:	f04f 0a02 	mov.w	sl, #2
 8010d00:	fb90 f0fa 	sdiv	r0, r0, sl
 8010d04:	4403      	add	r3, r0
 8010d06:	4630      	mov	r0, r6
 8010d08:	9303      	str	r3, [sp, #12]
 8010d0a:	f7ff fcb4 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010d0e:	4649      	mov	r1, r9
 8010d10:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010d12:	a80d      	add	r0, sp, #52	@ 0x34
 8010d14:	f7ff fc65 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010d18:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010d1a:	9b03      	ldr	r3, [sp, #12]
 8010d1c:	fb90 f0fa 	sdiv	r0, r0, sl
 8010d20:	4619      	mov	r1, r3
 8010d22:	1a12      	subs	r2, r2, r0
 8010d24:	a811      	add	r0, sp, #68	@ 0x44
 8010d26:	f015 fe6c 	bl	8026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010d2a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010d2c:	b99b      	cbnz	r3, 8010d56 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 8010d2e:	1b75      	subs	r5, r6, r5
 8010d30:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 8010d34:	da04      	bge.n	8010d40 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 8010d36:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 8010d3a:	a811      	add	r0, sp, #68	@ 0x44
 8010d3c:	f015 fe61 	bl	8026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010d40:	21ff      	movs	r1, #255	@ 0xff
 8010d42:	a811      	add	r0, sp, #68	@ 0x44
 8010d44:	f015 fd58 	bl	80267f8 <_ZN8touchgfx6Canvas6renderEh>
 8010d48:	4604      	mov	r4, r0
 8010d4a:	4b8a      	ldr	r3, [pc, #552]	@ (8010f74 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 8010d4c:	9311      	str	r3, [sp, #68]	@ 0x44
 8010d4e:	a816      	add	r0, sp, #88	@ 0x58
 8010d50:	f001 f8d6 	bl	8011f00 <_ZN8touchgfx7OutlineD1Ev>
 8010d54:	e70c      	b.n	8010b70 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8010d56:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 8010d5a:	429a      	cmp	r2, r3
 8010d5c:	f0c0 8107 	bcc.w	8010f6e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 8010d60:	1b73      	subs	r3, r6, r5
 8010d62:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 8010d66:	9303      	str	r3, [sp, #12]
 8010d68:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8010d6c:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8010d70:	da43      	bge.n	8010dfa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 8010d72:	4630      	mov	r0, r6
 8010d74:	f7ff fc60 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010d78:	4649      	mov	r1, r9
 8010d7a:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010d7c:	a80b      	add	r0, sp, #44	@ 0x2c
 8010d7e:	f7ff fc30 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010d82:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010d84:	18c3      	adds	r3, r0, r3
 8010d86:	4630      	mov	r0, r6
 8010d88:	9305      	str	r3, [sp, #20]
 8010d8a:	f7ff fc74 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010d8e:	4649      	mov	r1, r9
 8010d90:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010d92:	a80b      	add	r0, sp, #44	@ 0x2c
 8010d94:	f7ff fc25 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010d98:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8010d9a:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 8010d9e:	1a1b      	subs	r3, r3, r0
 8010da0:	9304      	str	r3, [sp, #16]
 8010da2:	9206      	str	r2, [sp, #24]
 8010da4:	eb06 030a 	add.w	r3, r6, sl
 8010da8:	9a06      	ldr	r2, [sp, #24]
 8010daa:	4293      	cmp	r3, r2
 8010dac:	da25      	bge.n	8010dfa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 8010dae:	4618      	mov	r0, r3
 8010db0:	9308      	str	r3, [sp, #32]
 8010db2:	f7ff fc41 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010db6:	4649      	mov	r1, r9
 8010db8:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010dba:	a80c      	add	r0, sp, #48	@ 0x30
 8010dbc:	f7ff fc11 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010dc0:	9b05      	ldr	r3, [sp, #20]
 8010dc2:	2202      	movs	r2, #2
 8010dc4:	fb90 f0f2 	sdiv	r0, r0, r2
 8010dc8:	18c3      	adds	r3, r0, r3
 8010dca:	9307      	str	r3, [sp, #28]
 8010dcc:	9b08      	ldr	r3, [sp, #32]
 8010dce:	9209      	str	r2, [sp, #36]	@ 0x24
 8010dd0:	4618      	mov	r0, r3
 8010dd2:	f7ff fc50 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010dd6:	a92e      	add	r1, sp, #184	@ 0xb8
 8010dd8:	f841 0d80 	str.w	r0, [r1, #-128]!
 8010ddc:	a80c      	add	r0, sp, #48	@ 0x30
 8010dde:	f7ff fc00 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010de2:	9b04      	ldr	r3, [sp, #16]
 8010de4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010de6:	9907      	ldr	r1, [sp, #28]
 8010de8:	fb90 f2f2 	sdiv	r2, r0, r2
 8010dec:	a811      	add	r0, sp, #68	@ 0x44
 8010dee:	1a9a      	subs	r2, r3, r2
 8010df0:	f015 fe07 	bl	8026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010df4:	9b08      	ldr	r3, [sp, #32]
 8010df6:	4453      	add	r3, sl
 8010df8:	e7d6      	b.n	8010da8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 8010dfa:	455e      	cmp	r6, fp
 8010dfc:	dd25      	ble.n	8010e4a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 8010dfe:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8010e02:	4630      	mov	r0, r6
 8010e04:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8010e08:	930d      	str	r3, [sp, #52]	@ 0x34
 8010e0a:	f7ff fc15 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010e0e:	4641      	mov	r1, r8
 8010e10:	900e      	str	r0, [sp, #56]	@ 0x38
 8010e12:	a80d      	add	r0, sp, #52	@ 0x34
 8010e14:	f7ff fbe5 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010e18:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010e1a:	2202      	movs	r2, #2
 8010e1c:	fb90 f0f2 	sdiv	r0, r0, r2
 8010e20:	eb00 0903 	add.w	r9, r0, r3
 8010e24:	4630      	mov	r0, r6
 8010e26:	9204      	str	r2, [sp, #16]
 8010e28:	f7ff fc25 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010e2c:	a92e      	add	r1, sp, #184	@ 0xb8
 8010e2e:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8010e32:	a80d      	add	r0, sp, #52	@ 0x34
 8010e34:	f7ff fbd5 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010e38:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8010e3a:	9a04      	ldr	r2, [sp, #16]
 8010e3c:	fb90 f2f2 	sdiv	r2, r0, r2
 8010e40:	4649      	mov	r1, r9
 8010e42:	1a9a      	subs	r2, r3, r2
 8010e44:	a811      	add	r0, sp, #68	@ 0x44
 8010e46:	f015 fddc 	bl	8026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010e4a:	46d9      	mov	r9, fp
 8010e4c:	2602      	movs	r6, #2
 8010e4e:	45a9      	cmp	r9, r5
 8010e50:	db25      	blt.n	8010e9e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 8010e52:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8010e56:	4648      	mov	r0, r9
 8010e58:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8010e5c:	930d      	str	r3, [sp, #52]	@ 0x34
 8010e5e:	f7ff fbeb 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010e62:	4641      	mov	r1, r8
 8010e64:	900e      	str	r0, [sp, #56]	@ 0x38
 8010e66:	a80d      	add	r0, sp, #52	@ 0x34
 8010e68:	f7ff fbbb 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010e6c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010e6e:	fb90 f0f6 	sdiv	r0, r0, r6
 8010e72:	eb00 0b03 	add.w	fp, r0, r3
 8010e76:	4648      	mov	r0, r9
 8010e78:	f7ff fbfd 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010e7c:	a90f      	add	r1, sp, #60	@ 0x3c
 8010e7e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010e80:	a80d      	add	r0, sp, #52	@ 0x34
 8010e82:	f7ff fbae 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010e86:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010e88:	fb90 f0f6 	sdiv	r0, r0, r6
 8010e8c:	4659      	mov	r1, fp
 8010e8e:	1a12      	subs	r2, r2, r0
 8010e90:	a811      	add	r0, sp, #68	@ 0x44
 8010e92:	46cb      	mov	fp, r9
 8010e94:	f015 fdb5 	bl	8026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010e98:	eba9 0907 	sub.w	r9, r9, r7
 8010e9c:	e7d7      	b.n	8010e4e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 8010e9e:	455d      	cmp	r5, fp
 8010ea0:	da22      	bge.n	8010ee8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 8010ea2:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8010ea6:	4628      	mov	r0, r5
 8010ea8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8010eac:	930d      	str	r3, [sp, #52]	@ 0x34
 8010eae:	f7ff fbc3 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010eb2:	4641      	mov	r1, r8
 8010eb4:	900e      	str	r0, [sp, #56]	@ 0x38
 8010eb6:	a80d      	add	r0, sp, #52	@ 0x34
 8010eb8:	f7ff fb93 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010ebc:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8010ebe:	2602      	movs	r6, #2
 8010ec0:	fb90 f0f6 	sdiv	r0, r0, r6
 8010ec4:	4407      	add	r7, r0
 8010ec6:	4628      	mov	r0, r5
 8010ec8:	f7ff fbd5 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010ecc:	a92e      	add	r1, sp, #184	@ 0xb8
 8010ece:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8010ed2:	a80d      	add	r0, sp, #52	@ 0x34
 8010ed4:	f7ff fb85 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010ed8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010eda:	fb90 f0f6 	sdiv	r0, r0, r6
 8010ede:	4639      	mov	r1, r7
 8010ee0:	1a12      	subs	r2, r2, r0
 8010ee2:	a811      	add	r0, sp, #68	@ 0x44
 8010ee4:	f015 fd8d 	bl	8026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010ee8:	9b03      	ldr	r3, [sp, #12]
 8010eea:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8010eee:	f6bf af27 	bge.w	8010d40 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 8010ef2:	4628      	mov	r0, r5
 8010ef4:	f7ff fba0 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010ef8:	ae2e      	add	r6, sp, #184	@ 0xb8
 8010efa:	f04f 0b02 	mov.w	fp, #2
 8010efe:	f846 0d7c 	str.w	r0, [r6, #-124]!
 8010f02:	a80b      	add	r0, sp, #44	@ 0x2c
 8010f04:	4631      	mov	r1, r6
 8010f06:	f7ff fb6c 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010f0a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010f0c:	eb00 0903 	add.w	r9, r0, r3
 8010f10:	4628      	mov	r0, r5
 8010f12:	f7ff fbb0 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010f16:	4631      	mov	r1, r6
 8010f18:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010f1a:	a80b      	add	r0, sp, #44	@ 0x2c
 8010f1c:	f7ff fb61 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010f20:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8010f22:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 8010f26:	eba3 0800 	sub.w	r8, r3, r0
 8010f2a:	4454      	add	r4, sl
 8010f2c:	42a5      	cmp	r5, r4
 8010f2e:	f77f af07 	ble.w	8010d40 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 8010f32:	4620      	mov	r0, r4
 8010f34:	f7ff fb80 	bl	8010638 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010f38:	4631      	mov	r1, r6
 8010f3a:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010f3c:	a80c      	add	r0, sp, #48	@ 0x30
 8010f3e:	f7ff fb50 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010f42:	fb90 f0fb 	sdiv	r0, r0, fp
 8010f46:	eb00 0709 	add.w	r7, r0, r9
 8010f4a:	4620      	mov	r0, r4
 8010f4c:	f7ff fb93 	bl	8010676 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010f50:	a90e      	add	r1, sp, #56	@ 0x38
 8010f52:	900e      	str	r0, [sp, #56]	@ 0x38
 8010f54:	a80c      	add	r0, sp, #48	@ 0x30
 8010f56:	f7ff fb44 	bl	80105e2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010f5a:	4639      	mov	r1, r7
 8010f5c:	fb90 f2fb 	sdiv	r2, r0, fp
 8010f60:	a811      	add	r0, sp, #68	@ 0x44
 8010f62:	eba8 0202 	sub.w	r2, r8, r2
 8010f66:	f015 fd4c 	bl	8026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010f6a:	4454      	add	r4, sl
 8010f6c:	e7de      	b.n	8010f2c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 8010f6e:	2400      	movs	r4, #0
 8010f70:	e6eb      	b.n	8010d4a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 8010f72:	bf00      	nop
 8010f74:	0802b890 	.word	0x0802b890

08010f78 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010f78:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010f7a:	6803      	ldr	r3, [r0, #0]
 8010f7c:	460d      	mov	r5, r1
 8010f7e:	4604      	mov	r4, r0
 8010f80:	4601      	mov	r1, r0
 8010f82:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8010f84:	a802      	add	r0, sp, #8
 8010f86:	4798      	blx	r3
 8010f88:	6828      	ldr	r0, [r5, #0]
 8010f8a:	6869      	ldr	r1, [r5, #4]
 8010f8c:	466b      	mov	r3, sp
 8010f8e:	c303      	stmia	r3!, {r0, r1}
 8010f90:	4668      	mov	r0, sp
 8010f92:	4619      	mov	r1, r3
 8010f94:	f7fc ffba 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 8010f98:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8010f9a:	b188      	cbz	r0, 8010fc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010f9c:	6803      	ldr	r3, [r0, #0]
 8010f9e:	1d21      	adds	r1, r4, #4
 8010fa0:	68db      	ldr	r3, [r3, #12]
 8010fa2:	4798      	blx	r3
 8010fa4:	b160      	cbz	r0, 8010fc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010fa6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010faa:	2b00      	cmp	r3, #0
 8010fac:	dd08      	ble.n	8010fc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010fae:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8010fb2:	2d00      	cmp	r5, #0
 8010fb4:	dd04      	ble.n	8010fc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010fb6:	4a2b      	ldr	r2, [pc, #172]	@ (8011064 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010fb8:	7812      	ldrb	r2, [r2, #0]
 8010fba:	b11a      	cbz	r2, 8010fc4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010fbc:	2a01      	cmp	r2, #1
 8010fbe:	d029      	beq.n	8011014 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8010fc0:	b004      	add	sp, #16
 8010fc2:	bd70      	pop	{r4, r5, r6, pc}
 8010fc4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010fc8:	441d      	add	r5, r3
 8010fca:	b2ad      	uxth	r5, r5
 8010fcc:	b22e      	sxth	r6, r5
 8010fce:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8010fd2:	42b3      	cmp	r3, r6
 8010fd4:	daf4      	bge.n	8010fc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010fd6:	6823      	ldr	r3, [r4, #0]
 8010fd8:	4669      	mov	r1, sp
 8010fda:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8010fdc:	4620      	mov	r0, r4
 8010fde:	4798      	blx	r3
 8010fe0:	b940      	cbnz	r0, 8010ff4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010fe2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010fe6:	2b01      	cmp	r3, #1
 8010fe8:	d004      	beq.n	8010ff4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010fea:	3301      	adds	r3, #1
 8010fec:	105b      	asrs	r3, r3, #1
 8010fee:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010ff2:	e7f0      	b.n	8010fd6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010ff4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010ff8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010ffc:	4413      	add	r3, r2
 8010ffe:	b29b      	uxth	r3, r3
 8011000:	441a      	add	r2, r3
 8011002:	b212      	sxth	r2, r2
 8011004:	4296      	cmp	r6, r2
 8011006:	f8ad 3002 	strh.w	r3, [sp, #2]
 801100a:	dae0      	bge.n	8010fce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 801100c:	1aeb      	subs	r3, r5, r3
 801100e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011012:	e7dc      	b.n	8010fce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011014:	f8bd 5000 	ldrh.w	r5, [sp]
 8011018:	441d      	add	r5, r3
 801101a:	b2ad      	uxth	r5, r5
 801101c:	b22e      	sxth	r6, r5
 801101e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011022:	42b3      	cmp	r3, r6
 8011024:	dacc      	bge.n	8010fc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011026:	6823      	ldr	r3, [r4, #0]
 8011028:	4669      	mov	r1, sp
 801102a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 801102c:	4620      	mov	r0, r4
 801102e:	4798      	blx	r3
 8011030:	b940      	cbnz	r0, 8011044 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011032:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011036:	2b01      	cmp	r3, #1
 8011038:	d004      	beq.n	8011044 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801103a:	3301      	adds	r3, #1
 801103c:	105b      	asrs	r3, r3, #1
 801103e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011042:	e7f0      	b.n	8011026 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011044:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011048:	f8bd 3000 	ldrh.w	r3, [sp]
 801104c:	4413      	add	r3, r2
 801104e:	b29b      	uxth	r3, r3
 8011050:	441a      	add	r2, r3
 8011052:	b212      	sxth	r2, r2
 8011054:	4296      	cmp	r6, r2
 8011056:	f8ad 3000 	strh.w	r3, [sp]
 801105a:	dae0      	bge.n	801101e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 801105c:	1aeb      	subs	r3, r5, r3
 801105e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011062:	e7dc      	b.n	801101e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011064:	20013f58 	.word	0x20013f58

08011068 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011068:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801106a:	6803      	ldr	r3, [r0, #0]
 801106c:	4604      	mov	r4, r0
 801106e:	4601      	mov	r1, r0
 8011070:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8011072:	4668      	mov	r0, sp
 8011074:	4798      	blx	r3
 8011076:	2100      	movs	r1, #0
 8011078:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801107c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011080:	9102      	str	r1, [sp, #8]
 8011082:	4668      	mov	r0, sp
 8011084:	a902      	add	r1, sp, #8
 8011086:	f8ad 200c 	strh.w	r2, [sp, #12]
 801108a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801108e:	f7fc ff3d 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 8011092:	6823      	ldr	r3, [r4, #0]
 8011094:	4669      	mov	r1, sp
 8011096:	691b      	ldr	r3, [r3, #16]
 8011098:	4620      	mov	r0, r4
 801109a:	4798      	blx	r3
 801109c:	b004      	add	sp, #16
 801109e:	bd10      	pop	{r4, pc}

080110a0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80110a0:	2101      	movs	r1, #1
 80110a2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 80110a6:	490b      	ldr	r1, [pc, #44]	@ (80110d4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80110a8:	6001      	str	r1, [r0, #0]
 80110aa:	2200      	movs	r2, #0
 80110ac:	21ff      	movs	r1, #255	@ 0xff
 80110ae:	8082      	strh	r2, [r0, #4]
 80110b0:	80c2      	strh	r2, [r0, #6]
 80110b2:	8102      	strh	r2, [r0, #8]
 80110b4:	8142      	strh	r2, [r0, #10]
 80110b6:	8182      	strh	r2, [r0, #12]
 80110b8:	81c2      	strh	r2, [r0, #14]
 80110ba:	8202      	strh	r2, [r0, #16]
 80110bc:	8242      	strh	r2, [r0, #18]
 80110be:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80110c2:	61c2      	str	r2, [r0, #28]
 80110c4:	8402      	strh	r2, [r0, #32]
 80110c6:	8442      	strh	r2, [r0, #34]	@ 0x22
 80110c8:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 80110cc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 80110d0:	6282      	str	r2, [r0, #40]	@ 0x28
 80110d2:	4770      	bx	lr
 80110d4:	0802b194 	.word	0x0802b194

080110d8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80110d8:	2000      	movs	r0, #0
 80110da:	4770      	bx	lr

080110dc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80110dc:	4b07      	ldr	r3, [pc, #28]	@ (80110fc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80110de:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80110e0:	881b      	ldrh	r3, [r3, #0]
 80110e2:	4293      	cmp	r3, r2
 80110e4:	bf81      	itttt	hi
 80110e6:	4b06      	ldrhi	r3, [pc, #24]	@ (8011100 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80110e8:	681b      	ldrhi	r3, [r3, #0]
 80110ea:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80110ee:	7858      	ldrbhi	r0, [r3, #1]
 80110f0:	bf8c      	ite	hi
 80110f2:	f000 0003 	andhi.w	r0, r0, #3
 80110f6:	2000      	movls	r0, #0
 80110f8:	4770      	bx	lr
 80110fa:	bf00      	nop
 80110fc:	20013fbc 	.word	0x20013fbc
 8011100:	20013fb8 	.word	0x20013fb8

08011104 <_ZN8touchgfx8TextAreaD1Ev>:
 8011104:	4770      	bx	lr
	...

08011108 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011108:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801110c:	4b10      	ldr	r3, [pc, #64]	@ (8011150 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801110e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011110:	881b      	ldrh	r3, [r3, #0]
 8011112:	428b      	cmp	r3, r1
 8011114:	4604      	mov	r4, r0
 8011116:	d918      	bls.n	801114a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011118:	6803      	ldr	r3, [r0, #0]
 801111a:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 801111c:	4b0d      	ldr	r3, [pc, #52]	@ (8011154 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801111e:	6818      	ldr	r0, [r3, #0]
 8011120:	f7f5 faf2 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011124:	6823      	ldr	r3, [r4, #0]
 8011126:	4606      	mov	r6, r0
 8011128:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801112a:	4620      	mov	r0, r4
 801112c:	4798      	blx	r3
 801112e:	6823      	ldr	r3, [r4, #0]
 8011130:	4607      	mov	r7, r0
 8011132:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011136:	4620      	mov	r0, r4
 8011138:	4798      	blx	r3
 801113a:	463a      	mov	r2, r7
 801113c:	4603      	mov	r3, r0
 801113e:	4631      	mov	r1, r6
 8011140:	4620      	mov	r0, r4
 8011142:	46ac      	mov	ip, r5
 8011144:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011148:	4760      	bx	ip
 801114a:	2000      	movs	r0, #0
 801114c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011150:	20013fbc 	.word	0x20013fbc
 8011154:	20013fc4 	.word	0x20013fc4

08011158 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011158:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801115c:	4b17      	ldr	r3, [pc, #92]	@ (80111bc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801115e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011160:	881b      	ldrh	r3, [r3, #0]
 8011162:	428b      	cmp	r3, r1
 8011164:	4604      	mov	r4, r0
 8011166:	d926      	bls.n	80111b6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011168:	4b15      	ldr	r3, [pc, #84]	@ (80111c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801116a:	681b      	ldr	r3, [r3, #0]
 801116c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011170:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011174:	4b13      	ldr	r3, [pc, #76]	@ (80111c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011176:	7855      	ldrb	r5, [r2, #1]
 8011178:	681b      	ldr	r3, [r3, #0]
 801117a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801117e:	6833      	ldr	r3, [r6, #0]
 8011180:	69df      	ldr	r7, [r3, #28]
 8011182:	4b11      	ldr	r3, [pc, #68]	@ (80111c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011184:	6818      	ldr	r0, [r3, #0]
 8011186:	f7f5 fabf 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 801118a:	6823      	ldr	r3, [r4, #0]
 801118c:	4680      	mov	r8, r0
 801118e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011190:	4620      	mov	r0, r4
 8011192:	4798      	blx	r3
 8011194:	6823      	ldr	r3, [r4, #0]
 8011196:	4681      	mov	r9, r0
 8011198:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801119c:	4620      	mov	r0, r4
 801119e:	4798      	blx	r3
 80111a0:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80111a4:	9000      	str	r0, [sp, #0]
 80111a6:	464b      	mov	r3, r9
 80111a8:	4642      	mov	r2, r8
 80111aa:	4629      	mov	r1, r5
 80111ac:	4630      	mov	r0, r6
 80111ae:	47b8      	blx	r7
 80111b0:	b003      	add	sp, #12
 80111b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80111b6:	2000      	movs	r0, #0
 80111b8:	e7fa      	b.n	80111b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80111ba:	bf00      	nop
 80111bc:	20013fbc 	.word	0x20013fbc
 80111c0:	20013fb8 	.word	0x20013fb8
 80111c4:	20013fc0 	.word	0x20013fc0
 80111c8:	20013fc4 	.word	0x20013fc4

080111cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80111cc:	b40e      	push	{r1, r2, r3}
 80111ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80111d2:	4b2f      	ldr	r3, [pc, #188]	@ (8011290 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80111d4:	881a      	ldrh	r2, [r3, #0]
 80111d6:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 80111d8:	429a      	cmp	r2, r3
 80111da:	b09d      	sub	sp, #116	@ 0x74
 80111dc:	4604      	mov	r4, r0
 80111de:	d954      	bls.n	801128a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80111e0:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8011294 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80111e4:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 8011298 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80111e8:	aa26      	add	r2, sp, #152	@ 0x98
 80111ea:	9202      	str	r2, [sp, #8]
 80111ec:	f8d9 2000 	ldr.w	r2, [r9]
 80111f0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80111f4:	f8d8 3000 	ldr.w	r3, [r8]
 80111f8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80111fc:	682b      	ldr	r3, [r5, #0]
 80111fe:	4628      	mov	r0, r5
 8011200:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011202:	4798      	blx	r3
 8011204:	b207      	sxth	r7, r0
 8011206:	4606      	mov	r6, r0
 8011208:	a803      	add	r0, sp, #12
 801120a:	f005 fae6 	bl	80167da <_ZN8touchgfx12TextProviderC1Ev>
 801120e:	682b      	ldr	r3, [r5, #0]
 8011210:	4628      	mov	r0, r5
 8011212:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011214:	4798      	blx	r3
 8011216:	682b      	ldr	r3, [r5, #0]
 8011218:	4682      	mov	sl, r0
 801121a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801121c:	4628      	mov	r0, r5
 801121e:	4798      	blx	r3
 8011220:	4653      	mov	r3, sl
 8011222:	9000      	str	r0, [sp, #0]
 8011224:	9a02      	ldr	r2, [sp, #8]
 8011226:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8011228:	a803      	add	r0, sp, #12
 801122a:	f005 fb31 	bl	8016890 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801122e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011230:	f8d9 3000 	ldr.w	r3, [r9]
 8011234:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 8011238:	8925      	ldrh	r5, [r4, #8]
 801123a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801123e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011242:	eba5 050c 	sub.w	r5, r5, ip
 8011246:	784a      	ldrb	r2, [r1, #1]
 8011248:	f8d8 3000 	ldr.w	r3, [r8]
 801124c:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 8011250:	b22d      	sxth	r5, r5
 8011252:	9500      	str	r5, [sp, #0]
 8011254:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011258:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801125c:	a803      	add	r0, sp, #12
 801125e:	f002 fd4f 	bl	8013d00 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011262:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 8011266:	18b9      	adds	r1, r7, r2
 8011268:	2900      	cmp	r1, #0
 801126a:	b203      	sxth	r3, r0
 801126c:	dd0b      	ble.n	8011286 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801126e:	3b01      	subs	r3, #1
 8011270:	fb13 f302 	smulbb	r3, r3, r2
 8011274:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011278:	b21f      	sxth	r7, r3
 801127a:	4638      	mov	r0, r7
 801127c:	b01d      	add	sp, #116	@ 0x74
 801127e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011282:	b003      	add	sp, #12
 8011284:	4770      	bx	lr
 8011286:	2b00      	cmp	r3, #0
 8011288:	dcf7      	bgt.n	801127a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801128a:	2700      	movs	r7, #0
 801128c:	e7f5      	b.n	801127a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801128e:	bf00      	nop
 8011290:	20013fbc 	.word	0x20013fbc
 8011294:	20013fb8 	.word	0x20013fb8
 8011298:	20013fc0 	.word	0x20013fc0

0801129c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801129c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112a0:	4bbc      	ldr	r3, [pc, #752]	@ (8011594 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80112a2:	460c      	mov	r4, r1
 80112a4:	881b      	ldrh	r3, [r3, #0]
 80112a6:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 80112a8:	428b      	cmp	r3, r1
 80112aa:	b0a9      	sub	sp, #164	@ 0xa4
 80112ac:	4680      	mov	r8, r0
 80112ae:	d809      	bhi.n	80112c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80112b0:	2300      	movs	r3, #0
 80112b2:	f04f 32ff 	mov.w	r2, #4294967295
 80112b6:	e9c0 3200 	strd	r3, r2, [r0]
 80112ba:	6083      	str	r3, [r0, #8]
 80112bc:	4640      	mov	r0, r8
 80112be:	b029      	add	sp, #164	@ 0xa4
 80112c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112c4:	4eb4      	ldr	r6, [pc, #720]	@ (8011598 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80112c6:	6833      	ldr	r3, [r6, #0]
 80112c8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80112cc:	4bb3      	ldr	r3, [pc, #716]	@ (801159c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80112ce:	681b      	ldr	r3, [r3, #0]
 80112d0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80112d4:	4bb2      	ldr	r3, [pc, #712]	@ (80115a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80112d6:	6818      	ldr	r0, [r3, #0]
 80112d8:	f7f5 fa16 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 80112dc:	682b      	ldr	r3, [r5, #0]
 80112de:	4681      	mov	r9, r0
 80112e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80112e2:	4628      	mov	r0, r5
 80112e4:	4798      	blx	r3
 80112e6:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 80112e8:	b203      	sxth	r3, r0
 80112ea:	4407      	add	r7, r0
 80112ec:	9304      	str	r3, [sp, #16]
 80112ee:	b2bb      	uxth	r3, r7
 80112f0:	9303      	str	r3, [sp, #12]
 80112f2:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 80112f6:	4682      	mov	sl, r0
 80112f8:	a80f      	add	r0, sp, #60	@ 0x3c
 80112fa:	2b00      	cmp	r3, #0
 80112fc:	f040 80a6 	bne.w	801144c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011300:	f005 fa6b 	bl	80167da <_ZN8touchgfx12TextProviderC1Ev>
 8011304:	682b      	ldr	r3, [r5, #0]
 8011306:	4628      	mov	r0, r5
 8011308:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801130a:	4798      	blx	r3
 801130c:	682b      	ldr	r3, [r5, #0]
 801130e:	4606      	mov	r6, r0
 8011310:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011312:	4628      	mov	r0, r5
 8011314:	4798      	blx	r3
 8011316:	6823      	ldr	r3, [r4, #0]
 8011318:	4607      	mov	r7, r0
 801131a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801131c:	4620      	mov	r0, r4
 801131e:	4798      	blx	r3
 8011320:	6823      	ldr	r3, [r4, #0]
 8011322:	4683      	mov	fp, r0
 8011324:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011328:	4620      	mov	r0, r4
 801132a:	4798      	blx	r3
 801132c:	463b      	mov	r3, r7
 801132e:	e9cd b000 	strd	fp, r0, [sp]
 8011332:	4649      	mov	r1, r9
 8011334:	4632      	mov	r2, r6
 8011336:	a80f      	add	r0, sp, #60	@ 0x3c
 8011338:	f005 fabf 	bl	80168ba <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801133c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011340:	f8df b254 	ldr.w	fp, [pc, #596]	@ 8011598 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011344:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011348:	f04f 0600 	mov.w	r6, #0
 801134c:	bf0c      	ite	eq
 801134e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011352:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011356:	4637      	mov	r7, r6
 8011358:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 801135a:	f8db 3000 	ldr.w	r3, [fp]
 801135e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011362:	4629      	mov	r1, r5
 8011364:	785b      	ldrb	r3, [r3, #1]
 8011366:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801136a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801136e:	a80f      	add	r0, sp, #60	@ 0x3c
 8011370:	f002 f9cd 	bl	801370e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011374:	9b03      	ldr	r3, [sp, #12]
 8011376:	4286      	cmp	r6, r0
 8011378:	bfb8      	it	lt
 801137a:	4606      	movlt	r6, r0
 801137c:	3701      	adds	r7, #1
 801137e:	eba9 0903 	sub.w	r9, r9, r3
 8011382:	a80f      	add	r0, sp, #60	@ 0x3c
 8011384:	b236      	sxth	r6, r6
 8011386:	b2bf      	uxth	r7, r7
 8011388:	fa0f f989 	sxth.w	r9, r9
 801138c:	f005 fa4c 	bl	8016828 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011390:	b918      	cbnz	r0, 801139a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011392:	7a2b      	ldrb	r3, [r5, #8]
 8011394:	444b      	add	r3, r9
 8011396:	2b00      	cmp	r3, #0
 8011398:	dcde      	bgt.n	8011358 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801139a:	9b03      	ldr	r3, [sp, #12]
 801139c:	9a04      	ldr	r2, [sp, #16]
 801139e:	f895 9009 	ldrb.w	r9, [r5, #9]
 80113a2:	fb13 f707 	smulbb	r7, r3, r7
 80113a6:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80113a8:	1aff      	subs	r7, r7, r3
 80113aa:	b2bf      	uxth	r7, r7
 80113ac:	b23b      	sxth	r3, r7
 80113ae:	429a      	cmp	r2, r3
 80113b0:	bfa8      	it	ge
 80113b2:	4657      	movge	r7, sl
 80113b4:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80113b8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80113bc:	6823      	ldr	r3, [r4, #0]
 80113be:	bf08      	it	eq
 80113c0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80113c4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80113c6:	bf18      	it	ne
 80113c8:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80113cc:	4620      	mov	r0, r4
 80113ce:	4798      	blx	r3
 80113d0:	444f      	add	r7, r9
 80113d2:	fa1f f987 	uxth.w	r9, r7
 80113d6:	2801      	cmp	r0, #1
 80113d8:	fa0f f789 	sxth.w	r7, r9
 80113dc:	b2b3      	uxth	r3, r6
 80113de:	f000 80e1 	beq.w	80115a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80113e2:	2802      	cmp	r0, #2
 80113e4:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 80113e8:	f000 80e2 	beq.w	80115b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80113ec:	7aea      	ldrb	r2, [r5, #11]
 80113ee:	7b2d      	ldrb	r5, [r5, #12]
 80113f0:	b236      	sxth	r6, r6
 80113f2:	1ab6      	subs	r6, r6, r2
 80113f4:	442a      	add	r2, r5
 80113f6:	4413      	add	r3, r2
 80113f8:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 80113fc:	fa1f fa86 	uxth.w	sl, r6
 8011400:	b29b      	uxth	r3, r3
 8011402:	2a02      	cmp	r2, #2
 8011404:	fa0f fb8a 	sxth.w	fp, sl
 8011408:	b21e      	sxth	r6, r3
 801140a:	f000 80d5 	beq.w	80115b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801140e:	2a03      	cmp	r2, #3
 8011410:	f000 80dd 	beq.w	80115ce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011414:	2a01      	cmp	r2, #1
 8011416:	f040 80e5 	bne.w	80115e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801141a:	8925      	ldrh	r5, [r4, #8]
 801141c:	4633      	mov	r3, r6
 801141e:	eba5 0909 	sub.w	r9, r5, r9
 8011422:	463e      	mov	r6, r7
 8011424:	465d      	mov	r5, fp
 8011426:	461f      	mov	r7, r3
 8011428:	fa0f fb89 	sxth.w	fp, r9
 801142c:	4b5c      	ldr	r3, [pc, #368]	@ (80115a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801142e:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011430:	6818      	ldr	r0, [r3, #0]
 8011432:	f7f5 f969 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011436:	f8a8 b000 	strh.w	fp, [r8]
 801143a:	f8a8 5002 	strh.w	r5, [r8, #2]
 801143e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011442:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011446:	f8c8 0008 	str.w	r0, [r8, #8]
 801144a:	e737      	b.n	80112bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801144c:	f005 f9c5 	bl	80167da <_ZN8touchgfx12TextProviderC1Ev>
 8011450:	682b      	ldr	r3, [r5, #0]
 8011452:	4628      	mov	r0, r5
 8011454:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011456:	4798      	blx	r3
 8011458:	682b      	ldr	r3, [r5, #0]
 801145a:	4607      	mov	r7, r0
 801145c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801145e:	4628      	mov	r0, r5
 8011460:	4798      	blx	r3
 8011462:	6823      	ldr	r3, [r4, #0]
 8011464:	4683      	mov	fp, r0
 8011466:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011468:	4620      	mov	r0, r4
 801146a:	4798      	blx	r3
 801146c:	6822      	ldr	r2, [r4, #0]
 801146e:	9005      	str	r0, [sp, #20]
 8011470:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8011474:	4620      	mov	r0, r4
 8011476:	4790      	blx	r2
 8011478:	9b05      	ldr	r3, [sp, #20]
 801147a:	9001      	str	r0, [sp, #4]
 801147c:	463a      	mov	r2, r7
 801147e:	4649      	mov	r1, r9
 8011480:	9300      	str	r3, [sp, #0]
 8011482:	a80f      	add	r0, sp, #60	@ 0x3c
 8011484:	465b      	mov	r3, fp
 8011486:	f005 fa18 	bl	80168ba <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801148a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801148e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011492:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011494:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 8011498:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 801149c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80114a0:	bf0a      	itet	eq
 80114a2:	464a      	moveq	r2, r9
 80114a4:	461a      	movne	r2, r3
 80114a6:	4699      	moveq	r9, r3
 80114a8:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 80114ac:	1ad2      	subs	r2, r2, r3
 80114ae:	6833      	ldr	r3, [r6, #0]
 80114b0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 80114b4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80114b8:	af0f      	add	r7, sp, #60	@ 0x3c
 80114ba:	7859      	ldrb	r1, [r3, #1]
 80114bc:	9707      	str	r7, [sp, #28]
 80114be:	2300      	movs	r3, #0
 80114c0:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80114c4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80114c8:	f88d 1020 	strb.w	r1, [sp, #32]
 80114cc:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 80114d0:	9509      	str	r5, [sp, #36]	@ 0x24
 80114d2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80114d6:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 80114da:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 80114de:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80114e2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80114e6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80114ea:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80114ee:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80114f2:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80114f6:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 80114fa:	b350      	cbz	r0, 8011552 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80114fc:	682b      	ldr	r3, [r5, #0]
 80114fe:	4628      	mov	r0, r5
 8011500:	695b      	ldr	r3, [r3, #20]
 8011502:	4798      	blx	r3
 8011504:	4607      	mov	r7, r0
 8011506:	b320      	cbz	r0, 8011552 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011508:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801150a:	6803      	ldr	r3, [r0, #0]
 801150c:	4639      	mov	r1, r7
 801150e:	68db      	ldr	r3, [r3, #12]
 8011510:	4798      	blx	r3
 8011512:	4606      	mov	r6, r0
 8011514:	b1e8      	cbz	r0, 8011552 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011516:	7b43      	ldrb	r3, [r0, #13]
 8011518:	7a82      	ldrb	r2, [r0, #10]
 801151a:	005b      	lsls	r3, r3, #1
 801151c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011520:	4313      	orrs	r3, r2
 8011522:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8011526:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 801152a:	2b06      	cmp	r3, #6
 801152c:	d111      	bne.n	8011552 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801152e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8011530:	6803      	ldr	r3, [r0, #0]
 8011532:	4632      	mov	r2, r6
 8011534:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011536:	4639      	mov	r1, r7
 8011538:	4798      	blx	r3
 801153a:	7b73      	ldrb	r3, [r6, #13]
 801153c:	005b      	lsls	r3, r3, #1
 801153e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011542:	7ab3      	ldrb	r3, [r6, #10]
 8011544:	4313      	orrs	r3, r2
 8011546:	4418      	add	r0, r3
 8011548:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801154c:	4418      	add	r0, r3
 801154e:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 8011552:	2600      	movs	r6, #0
 8011554:	4637      	mov	r7, r6
 8011556:	a806      	add	r0, sp, #24
 8011558:	f002 face 	bl	8013af8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801155c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 8011560:	9b03      	ldr	r3, [sp, #12]
 8011562:	4286      	cmp	r6, r0
 8011564:	eba9 0903 	sub.w	r9, r9, r3
 8011568:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801156c:	bfb8      	it	lt
 801156e:	4606      	movlt	r6, r0
 8011570:	3701      	adds	r7, #1
 8011572:	b236      	sxth	r6, r6
 8011574:	b2bf      	uxth	r7, r7
 8011576:	fa0f f989 	sxth.w	r9, r9
 801157a:	2b00      	cmp	r3, #0
 801157c:	f43f af0d 	beq.w	801139a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011580:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 8011584:	2b00      	cmp	r3, #0
 8011586:	f47f af08 	bne.w	801139a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801158a:	7a2b      	ldrb	r3, [r5, #8]
 801158c:	444b      	add	r3, r9
 801158e:	2b00      	cmp	r3, #0
 8011590:	dce1      	bgt.n	8011556 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011592:	e702      	b.n	801139a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011594:	20013fbc 	.word	0x20013fbc
 8011598:	20013fb8 	.word	0x20013fb8
 801159c:	20013fc0 	.word	0x20013fc0
 80115a0:	20013fc4 	.word	0x20013fc4
 80115a4:	ebaa 0606 	sub.w	r6, sl, r6
 80115a8:	2002      	movs	r0, #2
 80115aa:	fb96 f6f0 	sdiv	r6, r6, r0
 80115ae:	e71d      	b.n	80113ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80115b0:	441e      	add	r6, r3
 80115b2:	ebaa 0606 	sub.w	r6, sl, r6
 80115b6:	e719      	b.n	80113ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80115b8:	8925      	ldrh	r5, [r4, #8]
 80115ba:	1aed      	subs	r5, r5, r3
 80115bc:	eba5 050a 	sub.w	r5, r5, sl
 80115c0:	fa0f fb85 	sxth.w	fp, r5
 80115c4:	8965      	ldrh	r5, [r4, #10]
 80115c6:	eba5 0509 	sub.w	r5, r5, r9
 80115ca:	b22d      	sxth	r5, r5
 80115cc:	e72e      	b.n	801142c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80115ce:	8965      	ldrh	r5, [r4, #10]
 80115d0:	1aed      	subs	r5, r5, r3
 80115d2:	eba5 050a 	sub.w	r5, r5, sl
 80115d6:	4633      	mov	r3, r6
 80115d8:	b22d      	sxth	r5, r5
 80115da:	463e      	mov	r6, r7
 80115dc:	f04f 0b00 	mov.w	fp, #0
 80115e0:	461f      	mov	r7, r3
 80115e2:	e723      	b.n	801142c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80115e4:	2500      	movs	r5, #0
 80115e6:	e721      	b.n	801142c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080115e8 <_ZN8touchgfx8TextAreaD0Ev>:
 80115e8:	b510      	push	{r4, lr}
 80115ea:	2148      	movs	r1, #72	@ 0x48
 80115ec:	4604      	mov	r4, r0
 80115ee:	f015 fcf1 	bl	8026fd4 <_ZdlPvj>
 80115f2:	4620      	mov	r0, r4
 80115f4:	bd10      	pop	{r4, pc}
	...

080115f8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80115f8:	b513      	push	{r0, r1, r4, lr}
 80115fa:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 80115fe:	4604      	mov	r4, r0
 8011600:	b1fb      	cbz	r3, 8011642 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011602:	4b16      	ldr	r3, [pc, #88]	@ (801165c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011604:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011606:	881b      	ldrh	r3, [r3, #0]
 8011608:	428b      	cmp	r3, r1
 801160a:	d91a      	bls.n	8011642 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801160c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011610:	2b00      	cmp	r3, #0
 8011612:	dd16      	ble.n	8011642 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011614:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011618:	2b00      	cmp	r3, #0
 801161a:	dd12      	ble.n	8011642 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801161c:	4b10      	ldr	r3, [pc, #64]	@ (8011660 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801161e:	6818      	ldr	r0, [r3, #0]
 8011620:	f7f5 f872 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011624:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8011628:	6822      	ldr	r2, [r4, #0]
 801162a:	2b00      	cmp	r3, #0
 801162c:	db06      	blt.n	801163c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801162e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8011632:	2b00      	cmp	r3, #0
 8011634:	db02      	blt.n	801163c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011636:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8011638:	4298      	cmp	r0, r3
 801163a:	d004      	beq.n	8011646 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801163c:	6953      	ldr	r3, [r2, #20]
 801163e:	4620      	mov	r0, r4
 8011640:	4798      	blx	r3
 8011642:	b002      	add	sp, #8
 8011644:	bd10      	pop	{r4, pc}
 8011646:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 801164a:	c903      	ldmia	r1, {r0, r1}
 801164c:	466b      	mov	r3, sp
 801164e:	e883 0003 	stmia.w	r3, {r0, r1}
 8011652:	6912      	ldr	r2, [r2, #16]
 8011654:	4619      	mov	r1, r3
 8011656:	4620      	mov	r0, r4
 8011658:	4790      	blx	r2
 801165a:	e7f2      	b.n	8011642 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801165c:	20013fbc 	.word	0x20013fbc
 8011660:	20013fc4 	.word	0x20013fc4

08011664 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011664:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011668:	4b44      	ldr	r3, [pc, #272]	@ (801177c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801166a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 801166c:	881b      	ldrh	r3, [r3, #0]
 801166e:	4293      	cmp	r3, r2
 8011670:	b08e      	sub	sp, #56	@ 0x38
 8011672:	4604      	mov	r4, r0
 8011674:	d97e      	bls.n	8011774 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011676:	6808      	ldr	r0, [r1, #0]
 8011678:	4d41      	ldr	r5, [pc, #260]	@ (8011780 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801167a:	6849      	ldr	r1, [r1, #4]
 801167c:	ab05      	add	r3, sp, #20
 801167e:	c303      	stmia	r3!, {r0, r1}
 8011680:	4611      	mov	r1, r2
 8011682:	6828      	ldr	r0, [r5, #0]
 8011684:	f7f5 f840 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011688:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 801168c:	2b00      	cmp	r3, #0
 801168e:	db11      	blt.n	80116b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011690:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8011694:	2b00      	cmp	r3, #0
 8011696:	db0d      	blt.n	80116b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011698:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801169a:	4298      	cmp	r0, r3
 801169c:	d10a      	bne.n	80116b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801169e:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 80116a2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80116a6:	ab09      	add	r3, sp, #36	@ 0x24
 80116a8:	e883 0003 	stmia.w	r3, {r0, r1}
 80116ac:	4619      	mov	r1, r3
 80116ae:	a805      	add	r0, sp, #20
 80116b0:	f7fc fc2c 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 80116b4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80116b8:	2b00      	cmp	r3, #0
 80116ba:	dd5b      	ble.n	8011774 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80116bc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80116c0:	2b00      	cmp	r3, #0
 80116c2:	dd57      	ble.n	8011774 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80116c4:	4f2f      	ldr	r7, [pc, #188]	@ (8011784 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80116c6:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 80116c8:	683b      	ldr	r3, [r7, #0]
 80116ca:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80116ce:	4b2e      	ldr	r3, [pc, #184]	@ (8011788 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80116d0:	681b      	ldr	r3, [r3, #0]
 80116d2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80116d6:	2e00      	cmp	r6, #0
 80116d8:	d04c      	beq.n	8011774 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80116da:	6823      	ldr	r3, [r4, #0]
 80116dc:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 80116e0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80116e2:	4620      	mov	r0, r4
 80116e4:	4798      	blx	r3
 80116e6:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 80116e8:	683b      	ldr	r3, [r7, #0]
 80116ea:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 80116ee:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 80116f2:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 80116f6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80116f8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80116fc:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8011700:	785b      	ldrb	r3, [r3, #1]
 8011702:	9609      	str	r6, [sp, #36]	@ 0x24
 8011704:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011708:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801170c:	4b1f      	ldr	r3, [pc, #124]	@ (801178c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801170e:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 8011712:	681b      	ldr	r3, [r3, #0]
 8011714:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 8011718:	910b      	str	r1, [sp, #44]	@ 0x2c
 801171a:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 801171e:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 8011722:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 8011726:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 801172a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801172e:	b10a      	cbz	r2, 8011734 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011730:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 8011732:	b906      	cbnz	r6, 8011736 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011734:	689e      	ldr	r6, [r3, #8]
 8011736:	af07      	add	r7, sp, #28
 8011738:	4621      	mov	r1, r4
 801173a:	4638      	mov	r0, r7
 801173c:	f004 f8ac 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011740:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011742:	6828      	ldr	r0, [r5, #0]
 8011744:	f7f4 ffe0 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011748:	6823      	ldr	r3, [r4, #0]
 801174a:	4605      	mov	r5, r0
 801174c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801174e:	4620      	mov	r0, r4
 8011750:	4798      	blx	r3
 8011752:	6823      	ldr	r3, [r4, #0]
 8011754:	4680      	mov	r8, r0
 8011756:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801175a:	4620      	mov	r0, r4
 801175c:	4798      	blx	r3
 801175e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011762:	ab09      	add	r3, sp, #36	@ 0x24
 8011764:	9300      	str	r3, [sp, #0]
 8011766:	9501      	str	r5, [sp, #4]
 8011768:	ab05      	add	r3, sp, #20
 801176a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801176e:	4630      	mov	r0, r6
 8011770:	f7f4 ff7c 	bl	800666c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011774:	b00e      	add	sp, #56	@ 0x38
 8011776:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801177a:	bf00      	nop
 801177c:	20013fbc 	.word	0x20013fbc
 8011780:	20013fc4 	.word	0x20013fc4
 8011784:	20013fb8 	.word	0x20013fb8
 8011788:	20013fc0 	.word	0x20013fc0
 801178c:	20013f60 	.word	0x20013f60

08011790 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 8011790:	b570      	push	{r4, r5, r6, lr}
 8011792:	6803      	ldr	r3, [r0, #0]
 8011794:	4604      	mov	r4, r0
 8011796:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011798:	4615      	mov	r5, r2
 801179a:	4798      	blx	r3
 801179c:	6823      	ldr	r3, [r4, #0]
 801179e:	4629      	mov	r1, r5
 80117a0:	4620      	mov	r0, r4
 80117a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80117a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80117a8:	4718      	bx	r3
	...

080117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80117ac:	b538      	push	{r3, r4, r5, lr}
 80117ae:	4b0e      	ldr	r3, [pc, #56]	@ (80117e8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80117b0:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80117b2:	881b      	ldrh	r3, [r3, #0]
 80117b4:	429a      	cmp	r2, r3
 80117b6:	4604      	mov	r4, r0
 80117b8:	d214      	bcs.n	80117e4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80117ba:	6803      	ldr	r3, [r0, #0]
 80117bc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80117be:	4798      	blx	r3
 80117c0:	6823      	ldr	r3, [r4, #0]
 80117c2:	4605      	mov	r5, r0
 80117c4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80117c6:	4620      	mov	r0, r4
 80117c8:	4798      	blx	r3
 80117ca:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80117ce:	b22d      	sxth	r5, r5
 80117d0:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80117d4:	4601      	mov	r1, r0
 80117d6:	bf06      	itte	eq
 80117d8:	4602      	moveq	r2, r0
 80117da:	4629      	moveq	r1, r5
 80117dc:	462a      	movne	r2, r5
 80117de:	4620      	mov	r0, r4
 80117e0:	f7ff ffd6 	bl	8011790 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80117e4:	bd38      	pop	{r3, r4, r5, pc}
 80117e6:	bf00      	nop
 80117e8:	20013fbc 	.word	0x20013fbc

080117ec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80117ec:	b530      	push	{r4, r5, lr}
 80117ee:	888b      	ldrh	r3, [r1, #4]
 80117f0:	8583      	strh	r3, [r0, #44]	@ 0x2c
 80117f2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80117f6:	b085      	sub	sp, #20
 80117f8:	4604      	mov	r4, r0
 80117fa:	b923      	cbnz	r3, 8011806 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80117fc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011800:	b90b      	cbnz	r3, 8011806 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011802:	f7ff ffd3 	bl	80117ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8011806:	6823      	ldr	r3, [r4, #0]
 8011808:	466d      	mov	r5, sp
 801180a:	4621      	mov	r1, r4
 801180c:	4628      	mov	r0, r5
 801180e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8011812:	4798      	blx	r3
 8011814:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011818:	343c      	adds	r4, #60	@ 0x3c
 801181a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801181e:	b005      	add	sp, #20
 8011820:	bd30      	pop	{r4, r5, pc}

08011822 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011822:	2300      	movs	r3, #0
 8011824:	8083      	strh	r3, [r0, #4]
 8011826:	80c3      	strh	r3, [r0, #6]
 8011828:	8003      	strh	r3, [r0, #0]
 801182a:	8043      	strh	r3, [r0, #2]
 801182c:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8011830:	2bff      	cmp	r3, #255	@ 0xff
 8011832:	bf01      	itttt	eq
 8011834:	890b      	ldrheq	r3, [r1, #8]
 8011836:	8083      	strheq	r3, [r0, #4]
 8011838:	894b      	ldrheq	r3, [r1, #10]
 801183a:	80c3      	strheq	r3, [r0, #6]
 801183c:	4770      	bx	lr
	...

08011840 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011840:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011842:	4604      	mov	r4, r0
 8011844:	6808      	ldr	r0, [r1, #0]
 8011846:	6849      	ldr	r1, [r1, #4]
 8011848:	466b      	mov	r3, sp
 801184a:	c303      	stmia	r3!, {r0, r1}
 801184c:	6823      	ldr	r3, [r4, #0]
 801184e:	4669      	mov	r1, sp
 8011850:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011852:	4620      	mov	r0, r4
 8011854:	4798      	blx	r3
 8011856:	4b08      	ldr	r3, [pc, #32]	@ (8011878 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011858:	681b      	ldr	r3, [r3, #0]
 801185a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801185e:	b10a      	cbz	r2, 8011864 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8011860:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8011862:	b900      	cbnz	r0, 8011866 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011864:	6898      	ldr	r0, [r3, #8]
 8011866:	6803      	ldr	r3, [r0, #0]
 8011868:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 801186a:	6a1d      	ldr	r5, [r3, #32]
 801186c:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8011870:	4669      	mov	r1, sp
 8011872:	47a8      	blx	r5
 8011874:	b003      	add	sp, #12
 8011876:	bd30      	pop	{r4, r5, pc}
 8011878:	20013f60 	.word	0x20013f60

0801187c <_ZN8touchgfx3BoxD1Ev>:
 801187c:	4770      	bx	lr

0801187e <_ZN8touchgfx3BoxD0Ev>:
 801187e:	b510      	push	{r4, lr}
 8011880:	212c      	movs	r1, #44	@ 0x2c
 8011882:	4604      	mov	r4, r0
 8011884:	f015 fba6 	bl	8026fd4 <_ZdlPvj>
 8011888:	4620      	mov	r0, r4
 801188a:	bd10      	pop	{r4, pc}

0801188c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801188c:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 8011890:	4770      	bx	lr

08011892 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8011892:	b570      	push	{r4, r5, r6, lr}
 8011894:	880b      	ldrh	r3, [r1, #0]
 8011896:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8011898:	4605      	mov	r5, r0
 801189a:	8813      	ldrh	r3, [r2, #0]
 801189c:	f825 3f30 	strh.w	r3, [r5, #48]!
 80118a0:	4604      	mov	r4, r0
 80118a2:	4628      	mov	r0, r5
 80118a4:	f006 fb4e 	bl	8017f44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80118a8:	4606      	mov	r6, r0
 80118aa:	4628      	mov	r0, r5
 80118ac:	f006 fb7e 	bl	8017fac <_ZNK8touchgfx6Bitmap9getHeightEv>
 80118b0:	6823      	ldr	r3, [r4, #0]
 80118b2:	4605      	mov	r5, r0
 80118b4:	4631      	mov	r1, r6
 80118b6:	4620      	mov	r0, r4
 80118b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80118ba:	4798      	blx	r3
 80118bc:	6823      	ldr	r3, [r4, #0]
 80118be:	4629      	mov	r1, r5
 80118c0:	4620      	mov	r0, r4
 80118c2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80118c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118c8:	4718      	bx	r3

080118ca <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80118ca:	b510      	push	{r4, lr}
 80118cc:	4604      	mov	r4, r0
 80118ce:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80118d0:	b150      	cbz	r0, 80118e8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80118d2:	6803      	ldr	r3, [r0, #0]
 80118d4:	68db      	ldr	r3, [r3, #12]
 80118d6:	4798      	blx	r3
 80118d8:	b130      	cbz	r0, 80118e8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80118da:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80118dc:	6803      	ldr	r3, [r0, #0]
 80118de:	4621      	mov	r1, r4
 80118e0:	689b      	ldr	r3, [r3, #8]
 80118e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80118e6:	4718      	bx	r3
 80118e8:	bd10      	pop	{r4, pc}

080118ea <_ZNK8touchgfx6Button12getSolidRectEv>:
 80118ea:	b510      	push	{r4, lr}
 80118ec:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 80118f0:	2bff      	cmp	r3, #255	@ 0xff
 80118f2:	4604      	mov	r4, r0
 80118f4:	d006      	beq.n	8011904 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80118f6:	2300      	movs	r3, #0
 80118f8:	8003      	strh	r3, [r0, #0]
 80118fa:	8043      	strh	r3, [r0, #2]
 80118fc:	8083      	strh	r3, [r0, #4]
 80118fe:	80c3      	strh	r3, [r0, #6]
 8011900:	4620      	mov	r0, r4
 8011902:	bd10      	pop	{r4, pc}
 8011904:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 8011908:	b11b      	cbz	r3, 8011912 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801190a:	3130      	adds	r1, #48	@ 0x30
 801190c:	f006 fb82 	bl	8018014 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011910:	e7f6      	b.n	8011900 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011912:	312e      	adds	r1, #46	@ 0x2e
 8011914:	e7fa      	b.n	801190c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08011918 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011918:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801191c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8011920:	b08a      	sub	sp, #40	@ 0x28
 8011922:	4604      	mov	r4, r0
 8011924:	4688      	mov	r8, r1
 8011926:	2b00      	cmp	r3, #0
 8011928:	d066      	beq.n	80119f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801192a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 801192c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011930:	a805      	add	r0, sp, #20
 8011932:	f006 fb07 	bl	8017f44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011936:	4607      	mov	r7, r0
 8011938:	a805      	add	r0, sp, #20
 801193a:	f006 fb37 	bl	8017fac <_ZNK8touchgfx6Bitmap9getHeightEv>
 801193e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011942:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011946:	4432      	add	r2, r6
 8011948:	b292      	uxth	r2, r2
 801194a:	2300      	movs	r3, #0
 801194c:	fa0f fc82 	sxth.w	ip, r2
 8011950:	459c      	cmp	ip, r3
 8011952:	9306      	str	r3, [sp, #24]
 8011954:	dd52      	ble.n	80119fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011956:	42b7      	cmp	r7, r6
 8011958:	dd50      	ble.n	80119fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801195a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801195e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011962:	442b      	add	r3, r5
 8011964:	b29b      	uxth	r3, r3
 8011966:	b219      	sxth	r1, r3
 8011968:	2900      	cmp	r1, #0
 801196a:	dd47      	ble.n	80119fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801196c:	42a8      	cmp	r0, r5
 801196e:	dd45      	ble.n	80119fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011970:	4567      	cmp	r7, ip
 8011972:	bfb8      	it	lt
 8011974:	b2ba      	uxthlt	r2, r7
 8011976:	4288      	cmp	r0, r1
 8011978:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801197c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8011980:	bfb8      	it	lt
 8011982:	b283      	uxthlt	r3, r0
 8011984:	1b92      	subs	r2, r2, r6
 8011986:	1b5b      	subs	r3, r3, r5
 8011988:	f8ad 201c 	strh.w	r2, [sp, #28]
 801198c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011990:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011994:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011998:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801199c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80119a0:	429a      	cmp	r2, r3
 80119a2:	d026      	beq.n	80119f2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80119a4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80119a8:	2b00      	cmp	r3, #0
 80119aa:	dd22      	ble.n	80119f2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80119ac:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80119b0:	2b00      	cmp	r3, #0
 80119b2:	dd1e      	ble.n	80119f2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80119b4:	2300      	movs	r3, #0
 80119b6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80119ba:	6823      	ldr	r3, [r4, #0]
 80119bc:	a908      	add	r1, sp, #32
 80119be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80119c0:	4620      	mov	r0, r4
 80119c2:	4798      	blx	r3
 80119c4:	4b0f      	ldr	r3, [pc, #60]	@ (8011a04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80119c6:	681b      	ldr	r3, [r3, #0]
 80119c8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80119cc:	b10a      	cbz	r2, 80119d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80119ce:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80119d0:	b900      	cbnz	r0, 80119d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80119d2:	6898      	ldr	r0, [r3, #8]
 80119d4:	6801      	ldr	r1, [r0, #0]
 80119d6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80119da:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80119de:	2501      	movs	r5, #1
 80119e0:	9502      	str	r5, [sp, #8]
 80119e2:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 80119e6:	9401      	str	r4, [sp, #4]
 80119e8:	ac06      	add	r4, sp, #24
 80119ea:	9400      	str	r4, [sp, #0]
 80119ec:	688c      	ldr	r4, [r1, #8]
 80119ee:	a905      	add	r1, sp, #20
 80119f0:	47a0      	blx	r4
 80119f2:	b00a      	add	sp, #40	@ 0x28
 80119f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80119f8:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 80119fa:	e797      	b.n	801192c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80119fc:	2300      	movs	r3, #0
 80119fe:	9307      	str	r3, [sp, #28]
 8011a00:	e7ca      	b.n	8011998 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8011a02:	bf00      	nop
 8011a04:	20013f60 	.word	0x20013f60

08011a08 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011a08:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 8011a0c:	b12a      	cbz	r2, 8011a1a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011a0e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8011a12:	b112      	cbz	r2, 8011a1a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011a14:	6803      	ldr	r3, [r0, #0]
 8011a16:	695b      	ldr	r3, [r3, #20]
 8011a18:	4718      	bx	r3
 8011a1a:	4770      	bx	lr

08011a1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8011a1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011a20:	4b2f      	ldr	r3, [pc, #188]	@ (8011ae0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8011a22:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8011a24:	881b      	ldrh	r3, [r3, #0]
 8011a26:	4293      	cmp	r3, r2
 8011a28:	b08d      	sub	sp, #52	@ 0x34
 8011a2a:	4604      	mov	r4, r0
 8011a2c:	460f      	mov	r7, r1
 8011a2e:	d954      	bls.n	8011ada <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011a30:	4b2c      	ldr	r3, [pc, #176]	@ (8011ae4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8011a32:	6819      	ldr	r1, [r3, #0]
 8011a34:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8011a38:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8011a3c:	4a2a      	ldr	r2, [pc, #168]	@ (8011ae8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8011a3e:	6812      	ldr	r2, [r2, #0]
 8011a40:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8011a44:	2900      	cmp	r1, #0
 8011a46:	d048      	beq.n	8011ada <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011a48:	785a      	ldrb	r2, [r3, #1]
 8011a4a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8011a4e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8011a52:	4b26      	ldr	r3, [pc, #152]	@ (8011aec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8011a54:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 8011a58:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 8011a5c:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 8011a60:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 8011a62:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 8011a66:	9107      	str	r1, [sp, #28]
 8011a68:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8011a6c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011a70:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8011a74:	681a      	ldr	r2, [r3, #0]
 8011a76:	f88d 8020 	strb.w	r8, [sp, #32]
 8011a7a:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 8011a7e:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 8011a82:	9609      	str	r6, [sp, #36]	@ 0x24
 8011a84:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 8011a88:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 8011a8c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 8011a90:	b10b      	cbz	r3, 8011a96 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8011a92:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 8011a94:	b905      	cbnz	r5, 8011a98 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8011a96:	6895      	ldr	r5, [r2, #8]
 8011a98:	ae05      	add	r6, sp, #20
 8011a9a:	4621      	mov	r1, r4
 8011a9c:	4630      	mov	r0, r6
 8011a9e:	f003 fefb 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011aa2:	4b13      	ldr	r3, [pc, #76]	@ (8011af0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8011aa4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011aa6:	6818      	ldr	r0, [r3, #0]
 8011aa8:	f7f4 fe2e 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011aac:	6823      	ldr	r3, [r4, #0]
 8011aae:	4680      	mov	r8, r0
 8011ab0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011ab2:	4620      	mov	r0, r4
 8011ab4:	4798      	blx	r3
 8011ab6:	6823      	ldr	r3, [r4, #0]
 8011ab8:	4681      	mov	r9, r0
 8011aba:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011abe:	4620      	mov	r0, r4
 8011ac0:	4798      	blx	r3
 8011ac2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8011ac6:	ab07      	add	r3, sp, #28
 8011ac8:	9300      	str	r3, [sp, #0]
 8011aca:	f8cd 8004 	str.w	r8, [sp, #4]
 8011ace:	463b      	mov	r3, r7
 8011ad0:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011ad4:	4628      	mov	r0, r5
 8011ad6:	f7f4 fdc9 	bl	800666c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011ada:	b00d      	add	sp, #52	@ 0x34
 8011adc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011ae0:	20013fbc 	.word	0x20013fbc
 8011ae4:	20013fb8 	.word	0x20013fb8
 8011ae8:	20013fc0 	.word	0x20013fc0
 8011aec:	20013f60 	.word	0x20013f60
 8011af0:	20013fc4 	.word	0x20013fc4

08011af4 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 8011af4:	4770      	bx	lr

08011af6 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 8011af6:	b510      	push	{r4, lr}
 8011af8:	2134      	movs	r1, #52	@ 0x34
 8011afa:	4604      	mov	r4, r0
 8011afc:	f015 fa6a 	bl	8026fd4 <_ZdlPvj>
 8011b00:	4620      	mov	r0, r4
 8011b02:	bd10      	pop	{r4, pc}

08011b04 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8011b04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b08:	4604      	mov	r4, r0
 8011b0a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8011b0c:	8962      	ldrh	r2, [r4, #10]
 8011b0e:	b218      	sxth	r0, r3
 8011b10:	460e      	mov	r6, r1
 8011b12:	005b      	lsls	r3, r3, #1
 8011b14:	8921      	ldrh	r1, [r4, #8]
 8011b16:	b29b      	uxth	r3, r3
 8011b18:	1ac9      	subs	r1, r1, r3
 8011b1a:	b08e      	sub	sp, #56	@ 0x38
 8011b1c:	b209      	sxth	r1, r1
 8011b1e:	1ad3      	subs	r3, r2, r3
 8011b20:	b21b      	sxth	r3, r3
 8011b22:	2900      	cmp	r1, #0
 8011b24:	f8ad 0000 	strh.w	r0, [sp]
 8011b28:	f8ad 0002 	strh.w	r0, [sp, #2]
 8011b2c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011b30:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011b34:	dd5e      	ble.n	8011bf4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8011b36:	2b00      	cmp	r3, #0
 8011b38:	dd5c      	ble.n	8011bf4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8011b3a:	6830      	ldr	r0, [r6, #0]
 8011b3c:	6871      	ldr	r1, [r6, #4]
 8011b3e:	ab02      	add	r3, sp, #8
 8011b40:	c303      	stmia	r3!, {r0, r1}
 8011b42:	4669      	mov	r1, sp
 8011b44:	a802      	add	r0, sp, #8
 8011b46:	f7fc f9e1 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 8011b4a:	4620      	mov	r0, r4
 8011b4c:	a902      	add	r1, sp, #8
 8011b4e:	f7ff fe77 	bl	8011840 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8011b52:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 8011b54:	2800      	cmp	r0, #0
 8011b56:	d05f      	beq.n	8011c18 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8011b58:	8963      	ldrh	r3, [r4, #10]
 8011b5a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011b5e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011b62:	1a1f      	subs	r7, r3, r0
 8011b64:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8011b68:	b202      	sxth	r2, r0
 8011b6a:	2500      	movs	r5, #0
 8011b6c:	b21b      	sxth	r3, r3
 8011b6e:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 8011b72:	1a09      	subs	r1, r1, r0
 8011b74:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8011b78:	9506      	str	r5, [sp, #24]
 8011b7a:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011b7e:	f8ad 5020 	strh.w	r5, [sp, #32]
 8011b82:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 8011b86:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 8011b8a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8011b8e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8011b92:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011b96:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8011b9a:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8011b9e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8011ba2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8011ba6:	af04      	add	r7, sp, #16
 8011ba8:	ab06      	add	r3, sp, #24
 8011baa:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011bae:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011bb2:	e887 0003 	stmia.w	r7, {r0, r1}
 8011bb6:	4631      	mov	r1, r6
 8011bb8:	4638      	mov	r0, r7
 8011bba:	f7fc f9a7 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 8011bbe:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011bc2:	2b00      	cmp	r3, #0
 8011bc4:	dd12      	ble.n	8011bec <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8011bc6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011bca:	2b00      	cmp	r3, #0
 8011bcc:	dd0e      	ble.n	8011bec <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8011bce:	6823      	ldr	r3, [r4, #0]
 8011bd0:	4639      	mov	r1, r7
 8011bd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011bd4:	4620      	mov	r0, r4
 8011bd6:	4798      	blx	r3
 8011bd8:	f7f1 fce6 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 8011bdc:	6803      	ldr	r3, [r0, #0]
 8011bde:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8011be0:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8011be4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8011be8:	4639      	mov	r1, r7
 8011bea:	47c0      	blx	r8
 8011bec:	3501      	adds	r5, #1
 8011bee:	2d04      	cmp	r5, #4
 8011bf0:	d1da      	bne.n	8011ba8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8011bf2:	e011      	b.n	8011c18 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8011bf4:	6830      	ldr	r0, [r6, #0]
 8011bf6:	6871      	ldr	r1, [r6, #4]
 8011bf8:	ab06      	add	r3, sp, #24
 8011bfa:	c303      	stmia	r3!, {r0, r1}
 8011bfc:	6823      	ldr	r3, [r4, #0]
 8011bfe:	a906      	add	r1, sp, #24
 8011c00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011c02:	4620      	mov	r0, r4
 8011c04:	4798      	blx	r3
 8011c06:	f7f1 fccf 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 8011c0a:	6803      	ldr	r3, [r0, #0]
 8011c0c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8011c0e:	6a1d      	ldr	r5, [r3, #32]
 8011c10:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8011c14:	a906      	add	r1, sp, #24
 8011c16:	47a8      	blx	r5
 8011c18:	b00e      	add	sp, #56	@ 0x38
 8011c1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011c1e <_ZN8touchgfx5ImageD1Ev>:
 8011c1e:	4770      	bx	lr

08011c20 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8011c20:	b570      	push	{r4, r5, r6, lr}
 8011c22:	880b      	ldrh	r3, [r1, #0]
 8011c24:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011c26:	4604      	mov	r4, r0
 8011c28:	4608      	mov	r0, r1
 8011c2a:	460d      	mov	r5, r1
 8011c2c:	f006 f98a 	bl	8017f44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011c30:	4606      	mov	r6, r0
 8011c32:	4628      	mov	r0, r5
 8011c34:	f006 f9ba 	bl	8017fac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011c38:	6823      	ldr	r3, [r4, #0]
 8011c3a:	4605      	mov	r5, r0
 8011c3c:	4631      	mov	r1, r6
 8011c3e:	4620      	mov	r0, r4
 8011c40:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011c42:	4798      	blx	r3
 8011c44:	6823      	ldr	r3, [r4, #0]
 8011c46:	4629      	mov	r1, r5
 8011c48:	4620      	mov	r0, r4
 8011c4a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011c4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c50:	4718      	bx	r3

08011c52 <_ZN8touchgfx5ImageD0Ev>:
 8011c52:	b510      	push	{r4, lr}
 8011c54:	212c      	movs	r1, #44	@ 0x2c
 8011c56:	4604      	mov	r4, r0
 8011c58:	f015 f9bc 	bl	8026fd4 <_ZdlPvj>
 8011c5c:	4620      	mov	r0, r4
 8011c5e:	bd10      	pop	{r4, pc}

08011c60 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8011c60:	b510      	push	{r4, lr}
 8011c62:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 8011c66:	2bff      	cmp	r3, #255	@ 0xff
 8011c68:	4604      	mov	r4, r0
 8011c6a:	d006      	beq.n	8011c7a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8011c6c:	2300      	movs	r3, #0
 8011c6e:	8003      	strh	r3, [r0, #0]
 8011c70:	8043      	strh	r3, [r0, #2]
 8011c72:	8083      	strh	r3, [r0, #4]
 8011c74:	80c3      	strh	r3, [r0, #6]
 8011c76:	4620      	mov	r0, r4
 8011c78:	bd10      	pop	{r4, pc}
 8011c7a:	3126      	adds	r1, #38	@ 0x26
 8011c7c:	f006 f9ca 	bl	8018014 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011c80:	e7f9      	b.n	8011c76 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08011c82 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8011c82:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 8011c86:	b12a      	cbz	r2, 8011c94 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011c88:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8011c8c:	b112      	cbz	r2, 8011c94 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011c8e:	6803      	ldr	r3, [r0, #0]
 8011c90:	695b      	ldr	r3, [r3, #20]
 8011c92:	4718      	bx	r3
 8011c94:	4770      	bx	lr
	...

08011c98 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8011c98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c9c:	4604      	mov	r4, r0
 8011c9e:	b088      	sub	sp, #32
 8011ca0:	f854 3b26 	ldr.w	r3, [r4], #38
 8011ca4:	2500      	movs	r5, #0
 8011ca6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011ca8:	460f      	mov	r7, r1
 8011caa:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8011cae:	a904      	add	r1, sp, #16
 8011cb0:	4606      	mov	r6, r0
 8011cb2:	4798      	blx	r3
 8011cb4:	4620      	mov	r0, r4
 8011cb6:	f006 f945 	bl	8017f44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011cba:	4680      	mov	r8, r0
 8011cbc:	4620      	mov	r0, r4
 8011cbe:	f006 f975 	bl	8017fac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011cc2:	9506      	str	r5, [sp, #24]
 8011cc4:	ad06      	add	r5, sp, #24
 8011cc6:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011cca:	4639      	mov	r1, r7
 8011ccc:	4628      	mov	r0, r5
 8011cce:	f8ad 801c 	strh.w	r8, [sp, #28]
 8011cd2:	f7fc f91b 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 8011cd6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011cda:	2b00      	cmp	r3, #0
 8011cdc:	dd19      	ble.n	8011d12 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8011cde:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011ce2:	2b00      	cmp	r3, #0
 8011ce4:	dd15      	ble.n	8011d12 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8011ce6:	4b0c      	ldr	r3, [pc, #48]	@ (8011d18 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8011ce8:	681b      	ldr	r3, [r3, #0]
 8011cea:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8011cee:	b10a      	cbz	r2, 8011cf4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8011cf0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8011cf2:	b900      	cbnz	r0, 8011cf6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8011cf4:	6898      	ldr	r0, [r3, #8]
 8011cf6:	6801      	ldr	r1, [r0, #0]
 8011cf8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011cfc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011d00:	2701      	movs	r7, #1
 8011d02:	9702      	str	r7, [sp, #8]
 8011d04:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 8011d08:	e9cd 5600 	strd	r5, r6, [sp]
 8011d0c:	688d      	ldr	r5, [r1, #8]
 8011d0e:	4621      	mov	r1, r4
 8011d10:	47a8      	blx	r5
 8011d12:	b008      	add	sp, #32
 8011d14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d18:	20013f60 	.word	0x20013f60

08011d1c <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8011d1c:	4770      	bx	lr

08011d1e <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8011d1e:	b510      	push	{r4, lr}
 8011d20:	2148      	movs	r1, #72	@ 0x48
 8011d22:	4604      	mov	r4, r0
 8011d24:	f015 f956 	bl	8026fd4 <_ZdlPvj>
 8011d28:	4620      	mov	r0, r4
 8011d2a:	bd10      	pop	{r4, pc}

08011d2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8011d2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d30:	b08d      	sub	sp, #52	@ 0x34
 8011d32:	4604      	mov	r4, r0
 8011d34:	460f      	mov	r7, r1
 8011d36:	f7ff fdef 	bl	8011918 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8011d3a:	4a55      	ldr	r2, [pc, #340]	@ (8011e90 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8011d3c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011d3e:	8812      	ldrh	r2, [r2, #0]
 8011d40:	429a      	cmp	r2, r3
 8011d42:	f240 8082 	bls.w	8011e4a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011d46:	4d53      	ldr	r5, [pc, #332]	@ (8011e94 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8011d48:	682a      	ldr	r2, [r5, #0]
 8011d4a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011d4e:	4b52      	ldr	r3, [pc, #328]	@ (8011e98 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8011d50:	681b      	ldr	r3, [r3, #0]
 8011d52:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011d56:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 8011d5a:	2200      	movs	r2, #0
 8011d5c:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8011d60:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 8011d64:	2a03      	cmp	r2, #3
 8011d66:	d811      	bhi.n	8011d8c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8011d68:	e8df f002 	tbb	[pc, r2]
 8011d6c:	89727902 	.word	0x89727902
 8011d70:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011d74:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011d78:	1ad2      	subs	r2, r2, r3
 8011d7a:	2002      	movs	r0, #2
 8011d7c:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011d80:	fb92 f2f0 	sdiv	r2, r2, r0
 8011d84:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011d88:	f8ad 200e 	strh.w	r2, [sp, #14]
 8011d8c:	f10d 080c 	add.w	r8, sp, #12
 8011d90:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011d94:	f10d 0914 	add.w	r9, sp, #20
 8011d98:	e889 0003 	stmia.w	r9, {r0, r1}
 8011d9c:	4639      	mov	r1, r7
 8011d9e:	4648      	mov	r0, r9
 8011da0:	f7fc f8b4 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 8011da4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011da8:	2b00      	cmp	r3, #0
 8011daa:	dd4e      	ble.n	8011e4a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011dac:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011db0:	2b00      	cmp	r3, #0
 8011db2:	dd4a      	ble.n	8011e4a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011db4:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8011db8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011dbc:	1a9b      	subs	r3, r3, r2
 8011dbe:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011dc2:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8011dc6:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8011dca:	1a9b      	subs	r3, r3, r2
 8011dcc:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011dd0:	6823      	ldr	r3, [r4, #0]
 8011dd2:	4641      	mov	r1, r8
 8011dd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011dd6:	4620      	mov	r0, r4
 8011dd8:	4798      	blx	r3
 8011dda:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8011dde:	2b00      	cmp	r3, #0
 8011de0:	d053      	beq.n	8011e8a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8011de2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8011de4:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 8011de6:	682b      	ldr	r3, [r5, #0]
 8011de8:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 8011dec:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 8011df0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011df4:	785b      	ldrb	r3, [r3, #1]
 8011df6:	9209      	str	r2, [sp, #36]	@ 0x24
 8011df8:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8011dfc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011e00:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8011e04:	2300      	movs	r3, #0
 8011e06:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8011e0a:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 8011e0e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8011e12:	4b22      	ldr	r3, [pc, #136]	@ (8011e9c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8011e14:	9607      	str	r6, [sp, #28]
 8011e16:	681b      	ldr	r3, [r3, #0]
 8011e18:	f88d 5020 	strb.w	r5, [sp, #32]
 8011e1c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8011e20:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011e24:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8011e28:	b10a      	cbz	r2, 8011e2e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8011e2a:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 8011e2c:	b904      	cbnz	r4, 8011e30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8011e2e:	689c      	ldr	r4, [r3, #8]
 8011e30:	4b1b      	ldr	r3, [pc, #108]	@ (8011ea0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8011e32:	6818      	ldr	r0, [r3, #0]
 8011e34:	f7f4 fc68 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011e38:	ab07      	add	r3, sp, #28
 8011e3a:	9001      	str	r0, [sp, #4]
 8011e3c:	9300      	str	r3, [sp, #0]
 8011e3e:	e898 0006 	ldmia.w	r8, {r1, r2}
 8011e42:	464b      	mov	r3, r9
 8011e44:	4620      	mov	r0, r4
 8011e46:	f7f4 fc11 	bl	800666c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011e4a:	b00d      	add	sp, #52	@ 0x34
 8011e4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011e50:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011e54:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011e58:	1ad2      	subs	r2, r2, r3
 8011e5a:	3201      	adds	r2, #1
 8011e5c:	e78d      	b.n	8011d7a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8011e5e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011e62:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011e66:	1ad2      	subs	r2, r2, r3
 8011e68:	3201      	adds	r2, #1
 8011e6a:	2002      	movs	r0, #2
 8011e6c:	f8ad 3010 	strh.w	r3, [sp, #16]
 8011e70:	fb92 f2f0 	sdiv	r2, r2, r0
 8011e74:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011e78:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011e7c:	e786      	b.n	8011d8c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8011e7e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011e82:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011e86:	1ad2      	subs	r2, r2, r3
 8011e88:	e7ef      	b.n	8011e6a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8011e8a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8011e8c:	e7aa      	b.n	8011de4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8011e8e:	bf00      	nop
 8011e90:	20013fbc 	.word	0x20013fbc
 8011e94:	20013fb8 	.word	0x20013fb8
 8011e98:	20013fc0 	.word	0x20013fc0
 8011e9c:	20013f60 	.word	0x20013f60
 8011ea0:	20013fc4 	.word	0x20013fc4

08011ea4 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8011ea4:	b510      	push	{r4, lr}
 8011ea6:	2101      	movs	r1, #1
 8011ea8:	4c13      	ldr	r4, [pc, #76]	@ (8011ef8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8011eaa:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8011eae:	2200      	movs	r2, #0
 8011eb0:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 8011eb4:	6004      	str	r4, [r0, #0]
 8011eb6:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8011eba:	4c10      	ldr	r4, [pc, #64]	@ (8011efc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8011ebc:	8082      	strh	r2, [r0, #4]
 8011ebe:	80c2      	strh	r2, [r0, #6]
 8011ec0:	8102      	strh	r2, [r0, #8]
 8011ec2:	8142      	strh	r2, [r0, #10]
 8011ec4:	8182      	strh	r2, [r0, #12]
 8011ec6:	81c2      	strh	r2, [r0, #14]
 8011ec8:	8202      	strh	r2, [r0, #16]
 8011eca:	8242      	strh	r2, [r0, #18]
 8011ecc:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011ed0:	61c2      	str	r2, [r0, #28]
 8011ed2:	8402      	strh	r2, [r0, #32]
 8011ed4:	8442      	strh	r2, [r0, #34]	@ 0x22
 8011ed6:	6282      	str	r2, [r0, #40]	@ 0x28
 8011ed8:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 8011edc:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 8011ede:	8601      	strh	r1, [r0, #48]	@ 0x30
 8011ee0:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 8011ee4:	6344      	str	r4, [r0, #52]	@ 0x34
 8011ee6:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011ee8:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8011eec:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 8011ef0:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 8011ef4:	bd10      	pop	{r4, pc}
 8011ef6:	bf00      	nop
 8011ef8:	0802b3d8 	.word	0x0802b3d8
 8011efc:	0802a5c8 	.word	0x0802a5c8

08011f00 <_ZN8touchgfx7OutlineD1Ev>:
 8011f00:	4770      	bx	lr

08011f02 <_ZN8touchgfx7OutlineD0Ev>:
 8011f02:	b510      	push	{r4, lr}
 8011f04:	2130      	movs	r1, #48	@ 0x30
 8011f06:	4604      	mov	r4, r0
 8011f08:	f015 f864 	bl	8026fd4 <_ZdlPvj>
 8011f0c:	4620      	mov	r0, r4
 8011f0e:	bd10      	pop	{r4, pc}

08011f10 <_ZN8touchgfx7Outline5resetEv>:
 8011f10:	b510      	push	{r4, lr}
 8011f12:	4604      	mov	r4, r0
 8011f14:	f000 fe96 	bl	8012c44 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8011f18:	60e0      	str	r0, [r4, #12]
 8011f1a:	f000 fe99 	bl	8012c50 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8011f1e:	68e3      	ldr	r3, [r4, #12]
 8011f20:	6123      	str	r3, [r4, #16]
 8011f22:	08c0      	lsrs	r0, r0, #3
 8011f24:	2200      	movs	r2, #0
 8011f26:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 8011f2a:	3801      	subs	r0, #1
 8011f2c:	6060      	str	r0, [r4, #4]
 8011f2e:	60a2      	str	r2, [r4, #8]
 8011f30:	8019      	strh	r1, [r3, #0]
 8011f32:	8059      	strh	r1, [r3, #2]
 8011f34:	809a      	strh	r2, [r3, #4]
 8011f36:	80da      	strh	r2, [r3, #6]
 8011f38:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8011f3a:	f023 0301 	bic.w	r3, r3, #1
 8011f3e:	f043 0302 	orr.w	r3, r3, #2
 8011f42:	6263      	str	r3, [r4, #36]	@ 0x24
 8011f44:	bd10      	pop	{r4, pc}
	...

08011f48 <_ZN8touchgfx7OutlineC1Ev>:
 8011f48:	b510      	push	{r4, lr}
 8011f4a:	4b0a      	ldr	r3, [pc, #40]	@ (8011f74 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8011f4c:	6003      	str	r3, [r0, #0]
 8011f4e:	2300      	movs	r3, #0
 8011f50:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8011f54:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8011f58:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8011f5c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8011f60:	6243      	str	r3, [r0, #36]	@ 0x24
 8011f62:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8011f66:	4604      	mov	r4, r0
 8011f68:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 8011f6c:	f7ff ffd0 	bl	8011f10 <_ZN8touchgfx7Outline5resetEv>
 8011f70:	4620      	mov	r0, r4
 8011f72:	bd10      	pop	{r4, pc}
 8011f74:	0802b44c 	.word	0x0802b44c

08011f78 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8011f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f7c:	b093      	sub	sp, #76	@ 0x4c
 8011f7e:	1156      	asrs	r6, r2, #5
 8011f80:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8011f82:	9305      	str	r3, [sp, #20]
 8011f84:	f004 051f 	and.w	r5, r4, #31
 8011f88:	1153      	asrs	r3, r2, #5
 8011f8a:	9504      	str	r5, [sp, #16]
 8011f8c:	1165      	asrs	r5, r4, #5
 8011f8e:	9303      	str	r3, [sp, #12]
 8011f90:	42ae      	cmp	r6, r5
 8011f92:	ea4f 1364 	mov.w	r3, r4, asr #5
 8011f96:	9306      	str	r3, [sp, #24]
 8011f98:	f002 031f 	and.w	r3, r2, #31
 8011f9c:	f040 80f8 	bne.w	8012190 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8011fa0:	9c04      	ldr	r4, [sp, #16]
 8011fa2:	9a05      	ldr	r2, [sp, #20]
 8011fa4:	42a3      	cmp	r3, r4
 8011fa6:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8011faa:	6902      	ldr	r2, [r0, #16]
 8011fac:	d125      	bne.n	8011ffa <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8011fae:	f9b2 3000 	ldrsh.w	r3, [r2]
 8011fb2:	459e      	cmp	lr, r3
 8011fb4:	d103      	bne.n	8011fbe <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8011fb6:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011fba:	429e      	cmp	r6, r3
 8011fbc:	d035      	beq.n	801202a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011fbe:	88d1      	ldrh	r1, [r2, #6]
 8011fc0:	8893      	ldrh	r3, [r2, #4]
 8011fc2:	430b      	orrs	r3, r1
 8011fc4:	d010      	beq.n	8011fe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011fc6:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011fca:	2b00      	cmp	r3, #0
 8011fcc:	db0c      	blt.n	8011fe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011fce:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8011fd0:	428b      	cmp	r3, r1
 8011fd2:	da09      	bge.n	8011fe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011fd4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8011fd8:	428b      	cmp	r3, r1
 8011fda:	bf38      	it	cc
 8011fdc:	3208      	addcc	r2, #8
 8011fde:	f103 0301 	add.w	r3, r3, #1
 8011fe2:	bf38      	it	cc
 8011fe4:	6102      	strcc	r2, [r0, #16]
 8011fe6:	6083      	str	r3, [r0, #8]
 8011fe8:	6903      	ldr	r3, [r0, #16]
 8011fea:	9a03      	ldr	r2, [sp, #12]
 8011fec:	f8a3 e000 	strh.w	lr, [r3]
 8011ff0:	805a      	strh	r2, [r3, #2]
 8011ff2:	2200      	movs	r2, #0
 8011ff4:	809a      	strh	r2, [r3, #4]
 8011ff6:	80da      	strh	r2, [r3, #6]
 8011ff8:	e017      	b.n	801202a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011ffa:	9c05      	ldr	r4, [sp, #20]
 8011ffc:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8012000:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012004:	f004 041f 	and.w	r4, r4, #31
 8012008:	114e      	asrs	r6, r1, #5
 801200a:	9402      	str	r4, [sp, #8]
 801200c:	9c04      	ldr	r4, [sp, #16]
 801200e:	4576      	cmp	r6, lr
 8012010:	f001 0c1f 	and.w	ip, r1, #31
 8012014:	eba4 0403 	sub.w	r4, r4, r3
 8012018:	d10a      	bne.n	8012030 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 801201a:	9b02      	ldr	r3, [sp, #8]
 801201c:	449c      	add	ip, r3
 801201e:	44a0      	add	r8, r4
 8012020:	fb04 a40c 	mla	r4, r4, ip, sl
 8012024:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012028:	80d4      	strh	r4, [r2, #6]
 801202a:	b013      	add	sp, #76	@ 0x4c
 801202c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012030:	9d05      	ldr	r5, [sp, #20]
 8012032:	1a69      	subs	r1, r5, r1
 8012034:	bf5b      	ittet	pl
 8012036:	f1cc 0520 	rsbpl	r5, ip, #32
 801203a:	436c      	mulpl	r4, r5
 801203c:	2500      	movmi	r5, #0
 801203e:	2520      	movpl	r5, #32
 8012040:	bf44      	itt	mi
 8012042:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012046:	4249      	negmi	r1, r1
 8012048:	9501      	str	r5, [sp, #4]
 801204a:	9f01      	ldr	r7, [sp, #4]
 801204c:	fb94 f5f1 	sdiv	r5, r4, r1
 8012050:	fb01 4415 	mls	r4, r1, r5, r4
 8012054:	bf54      	ite	pl
 8012056:	f04f 0901 	movpl.w	r9, #1
 801205a:	f04f 39ff 	movmi.w	r9, #4294967295
 801205e:	2c00      	cmp	r4, #0
 8012060:	bfb8      	it	lt
 8012062:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012066:	44bc      	add	ip, r7
 8012068:	44a8      	add	r8, r5
 801206a:	fb05 ac0c 	mla	ip, r5, ip, sl
 801206e:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012072:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012076:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801207a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801207e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8012082:	bfb8      	it	lt
 8012084:	1864      	addlt	r4, r4, r1
 8012086:	ea58 0202 	orrs.w	r2, r8, r2
 801208a:	444e      	add	r6, r9
 801208c:	d011      	beq.n	80120b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801208e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012092:	f1b8 0f00 	cmp.w	r8, #0
 8012096:	db0c      	blt.n	80120b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012098:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 801209a:	4590      	cmp	r8, r2
 801209c:	da09      	bge.n	80120b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801209e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80120a2:	4590      	cmp	r8, r2
 80120a4:	bf3c      	itt	cc
 80120a6:	f10c 0208 	addcc.w	r2, ip, #8
 80120aa:	6102      	strcc	r2, [r0, #16]
 80120ac:	f108 0201 	add.w	r2, r8, #1
 80120b0:	6082      	str	r2, [r0, #8]
 80120b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80120b6:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80120ba:	f8ac 6000 	strh.w	r6, [ip]
 80120be:	2700      	movs	r7, #0
 80120c0:	45b6      	cmp	lr, r6
 80120c2:	f8ac 2002 	strh.w	r2, [ip, #2]
 80120c6:	f8ac 7004 	strh.w	r7, [ip, #4]
 80120ca:	f8ac 7006 	strh.w	r7, [ip, #6]
 80120ce:	442b      	add	r3, r5
 80120d0:	d04d      	beq.n	801216e <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80120d2:	9f04      	ldr	r7, [sp, #16]
 80120d4:	1aff      	subs	r7, r7, r3
 80120d6:	443d      	add	r5, r7
 80120d8:	016d      	lsls	r5, r5, #5
 80120da:	fb95 f8f1 	sdiv	r8, r5, r1
 80120de:	fb01 5518 	mls	r5, r1, r8, r5
 80120e2:	2d00      	cmp	r5, #0
 80120e4:	bfb8      	it	lt
 80120e6:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80120ea:	f108 0701 	add.w	r7, r8, #1
 80120ee:	bfb8      	it	lt
 80120f0:	186d      	addlt	r5, r5, r1
 80120f2:	1a64      	subs	r4, r4, r1
 80120f4:	9703      	str	r7, [sp, #12]
 80120f6:	f04f 0a00 	mov.w	sl, #0
 80120fa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80120fe:	1964      	adds	r4, r4, r5
 8012100:	bf58      	it	pl
 8012102:	9f03      	ldrpl	r7, [sp, #12]
 8012104:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012108:	bf48      	it	mi
 801210a:	4647      	movmi	r7, r8
 801210c:	44bb      	add	fp, r7
 801210e:	f8ac b004 	strh.w	fp, [ip, #4]
 8012112:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012116:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801211a:	f8ac b006 	strh.w	fp, [ip, #6]
 801211e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012122:	443b      	add	r3, r7
 8012124:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012128:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801212c:	bf58      	it	pl
 801212e:	1a64      	subpl	r4, r4, r1
 8012130:	ea5b 0707 	orrs.w	r7, fp, r7
 8012134:	444e      	add	r6, r9
 8012136:	d011      	beq.n	801215c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012138:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801213c:	f1bb 0f00 	cmp.w	fp, #0
 8012140:	db0c      	blt.n	801215c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012142:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8012144:	45bb      	cmp	fp, r7
 8012146:	da09      	bge.n	801215c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012148:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801214c:	45bb      	cmp	fp, r7
 801214e:	bf3c      	itt	cc
 8012150:	f10c 0708 	addcc.w	r7, ip, #8
 8012154:	6107      	strcc	r7, [r0, #16]
 8012156:	f10b 0701 	add.w	r7, fp, #1
 801215a:	6087      	str	r7, [r0, #8]
 801215c:	6907      	ldr	r7, [r0, #16]
 801215e:	45b6      	cmp	lr, r6
 8012160:	803e      	strh	r6, [r7, #0]
 8012162:	807a      	strh	r2, [r7, #2]
 8012164:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012168:	f8a7 a006 	strh.w	sl, [r7, #6]
 801216c:	d1c5      	bne.n	80120fa <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801216e:	9a04      	ldr	r2, [sp, #16]
 8012170:	1ad3      	subs	r3, r2, r3
 8012172:	6902      	ldr	r2, [r0, #16]
 8012174:	8891      	ldrh	r1, [r2, #4]
 8012176:	88d6      	ldrh	r6, [r2, #6]
 8012178:	4419      	add	r1, r3
 801217a:	8091      	strh	r1, [r2, #4]
 801217c:	9902      	ldr	r1, [sp, #8]
 801217e:	f101 0c20 	add.w	ip, r1, #32
 8012182:	9901      	ldr	r1, [sp, #4]
 8012184:	ebac 0c01 	sub.w	ip, ip, r1
 8012188:	fb03 630c 	mla	r3, r3, ip, r6
 801218c:	80d3      	strh	r3, [r2, #6]
 801218e:	e74c      	b.n	801202a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012190:	9d05      	ldr	r5, [sp, #20]
 8012192:	1aa2      	subs	r2, r4, r2
 8012194:	eba5 0501 	sub.w	r5, r5, r1
 8012198:	9508      	str	r5, [sp, #32]
 801219a:	9202      	str	r2, [sp, #8]
 801219c:	f140 8128 	bpl.w	80123f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80121a0:	9a03      	ldr	r2, [sp, #12]
 80121a2:	2a00      	cmp	r2, #0
 80121a4:	f6ff af41 	blt.w	801202a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80121a8:	9a02      	ldr	r2, [sp, #8]
 80121aa:	4252      	negs	r2, r2
 80121ac:	9202      	str	r2, [sp, #8]
 80121ae:	9a06      	ldr	r2, [sp, #24]
 80121b0:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 80121b4:	f04f 34ff 	mov.w	r4, #4294967295
 80121b8:	9206      	str	r2, [sp, #24]
 80121ba:	462a      	mov	r2, r5
 80121bc:	940b      	str	r4, [sp, #44]	@ 0x2c
 80121be:	435a      	muls	r2, r3
 80121c0:	2400      	movs	r4, #0
 80121c2:	9d02      	ldr	r5, [sp, #8]
 80121c4:	9401      	str	r4, [sp, #4]
 80121c6:	9c02      	ldr	r4, [sp, #8]
 80121c8:	fb92 f4f4 	sdiv	r4, r2, r4
 80121cc:	fb05 2214 	mls	r2, r5, r4, r2
 80121d0:	2a00      	cmp	r2, #0
 80121d2:	9207      	str	r2, [sp, #28]
 80121d4:	bfbc      	itt	lt
 80121d6:	1952      	addlt	r2, r2, r5
 80121d8:	9207      	strlt	r2, [sp, #28]
 80121da:	9a01      	ldr	r2, [sp, #4]
 80121dc:	6905      	ldr	r5, [r0, #16]
 80121de:	bfb8      	it	lt
 80121e0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80121e4:	eb04 0901 	add.w	r9, r4, r1
 80121e8:	429a      	cmp	r2, r3
 80121ea:	ea4f 1669 	mov.w	r6, r9, asr #5
 80121ee:	f040 8112 	bne.w	8012416 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80121f2:	f9b5 3000 	ldrsh.w	r3, [r5]
 80121f6:	429e      	cmp	r6, r3
 80121f8:	d104      	bne.n	8012204 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80121fa:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80121fe:	9a03      	ldr	r2, [sp, #12]
 8012200:	429a      	cmp	r2, r3
 8012202:	d01b      	beq.n	801223c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012204:	88ea      	ldrh	r2, [r5, #6]
 8012206:	88ab      	ldrh	r3, [r5, #4]
 8012208:	4313      	orrs	r3, r2
 801220a:	d010      	beq.n	801222e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801220c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012210:	2a00      	cmp	r2, #0
 8012212:	db0c      	blt.n	801222e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012214:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012216:	429a      	cmp	r2, r3
 8012218:	da09      	bge.n	801222e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801221a:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801221e:	429a      	cmp	r2, r3
 8012220:	bf38      	it	cc
 8012222:	3508      	addcc	r5, #8
 8012224:	f102 0201 	add.w	r2, r2, #1
 8012228:	bf38      	it	cc
 801222a:	6105      	strcc	r5, [r0, #16]
 801222c:	6082      	str	r2, [r0, #8]
 801222e:	6903      	ldr	r3, [r0, #16]
 8012230:	9a03      	ldr	r2, [sp, #12]
 8012232:	805a      	strh	r2, [r3, #2]
 8012234:	2200      	movs	r2, #0
 8012236:	801e      	strh	r6, [r3, #0]
 8012238:	809a      	strh	r2, [r3, #4]
 801223a:	80da      	strh	r2, [r3, #6]
 801223c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801223e:	9a03      	ldr	r2, [sp, #12]
 8012240:	6901      	ldr	r1, [r0, #16]
 8012242:	441a      	add	r2, r3
 8012244:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012248:	42b3      	cmp	r3, r6
 801224a:	d103      	bne.n	8012254 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 801224c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012250:	429a      	cmp	r2, r3
 8012252:	d01a      	beq.n	801228a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012254:	88cc      	ldrh	r4, [r1, #6]
 8012256:	888b      	ldrh	r3, [r1, #4]
 8012258:	4323      	orrs	r3, r4
 801225a:	d010      	beq.n	801227e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801225c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012260:	2c00      	cmp	r4, #0
 8012262:	db0c      	blt.n	801227e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012264:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012266:	429c      	cmp	r4, r3
 8012268:	da09      	bge.n	801227e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801226a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801226e:	429c      	cmp	r4, r3
 8012270:	bf38      	it	cc
 8012272:	3108      	addcc	r1, #8
 8012274:	f104 0401 	add.w	r4, r4, #1
 8012278:	bf38      	it	cc
 801227a:	6101      	strcc	r1, [r0, #16]
 801227c:	6084      	str	r4, [r0, #8]
 801227e:	6903      	ldr	r3, [r0, #16]
 8012280:	2100      	movs	r1, #0
 8012282:	801e      	strh	r6, [r3, #0]
 8012284:	805a      	strh	r2, [r3, #2]
 8012286:	8099      	strh	r1, [r3, #4]
 8012288:	80d9      	strh	r1, [r3, #6]
 801228a:	9b06      	ldr	r3, [sp, #24]
 801228c:	4293      	cmp	r3, r2
 801228e:	f000 8082 	beq.w	8012396 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8012292:	9b08      	ldr	r3, [sp, #32]
 8012294:	9c02      	ldr	r4, [sp, #8]
 8012296:	9902      	ldr	r1, [sp, #8]
 8012298:	015b      	lsls	r3, r3, #5
 801229a:	fb93 f1f1 	sdiv	r1, r3, r1
 801229e:	fb04 3311 	mls	r3, r4, r1, r3
 80122a2:	2b00      	cmp	r3, #0
 80122a4:	9103      	str	r1, [sp, #12]
 80122a6:	9308      	str	r3, [sp, #32]
 80122a8:	da04      	bge.n	80122b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80122aa:	1e4b      	subs	r3, r1, #1
 80122ac:	9303      	str	r3, [sp, #12]
 80122ae:	9b08      	ldr	r3, [sp, #32]
 80122b0:	4423      	add	r3, r4
 80122b2:	9308      	str	r3, [sp, #32]
 80122b4:	9b07      	ldr	r3, [sp, #28]
 80122b6:	9902      	ldr	r1, [sp, #8]
 80122b8:	1a5b      	subs	r3, r3, r1
 80122ba:	9307      	str	r3, [sp, #28]
 80122bc:	9b01      	ldr	r3, [sp, #4]
 80122be:	f1c3 0320 	rsb	r3, r3, #32
 80122c2:	930e      	str	r3, [sp, #56]	@ 0x38
 80122c4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80122c6:	9b01      	ldr	r3, [sp, #4]
 80122c8:	1a5b      	subs	r3, r3, r1
 80122ca:	464f      	mov	r7, r9
 80122cc:	930a      	str	r3, [sp, #40]	@ 0x28
 80122ce:	2600      	movs	r6, #0
 80122d0:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80122d4:	185b      	adds	r3, r3, r1
 80122d6:	bf58      	it	pl
 80122d8:	9902      	ldrpl	r1, [sp, #8]
 80122da:	9307      	str	r3, [sp, #28]
 80122dc:	bf5d      	ittte	pl
 80122de:	1a5b      	subpl	r3, r3, r1
 80122e0:	9307      	strpl	r3, [sp, #28]
 80122e2:	9b03      	ldrpl	r3, [sp, #12]
 80122e4:	9903      	ldrmi	r1, [sp, #12]
 80122e6:	bf58      	it	pl
 80122e8:	1c59      	addpl	r1, r3, #1
 80122ea:	4489      	add	r9, r1
 80122ec:	2a00      	cmp	r2, #0
 80122ee:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80122f2:	db2e      	blt.n	8012352 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80122f4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80122f6:	4293      	cmp	r3, r2
 80122f8:	dd2b      	ble.n	8012352 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80122fa:	9c01      	ldr	r4, [sp, #4]
 80122fc:	6905      	ldr	r5, [r0, #16]
 80122fe:	46a0      	mov	r8, r4
 8012300:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8012302:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012306:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 801230a:	45a0      	cmp	r8, r4
 801230c:	f040 814f 	bne.w	80125ae <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8012310:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012314:	4551      	cmp	r1, sl
 8012316:	d103      	bne.n	8012320 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012318:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 801231c:	4291      	cmp	r1, r2
 801231e:	d018      	beq.n	8012352 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012320:	ea5c 010e 	orrs.w	r1, ip, lr
 8012324:	d00f      	beq.n	8012346 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012326:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 801232a:	2900      	cmp	r1, #0
 801232c:	db0b      	blt.n	8012346 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801232e:	428b      	cmp	r3, r1
 8012330:	dd09      	ble.n	8012346 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012332:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012336:	4299      	cmp	r1, r3
 8012338:	bf38      	it	cc
 801233a:	3508      	addcc	r5, #8
 801233c:	f101 0101 	add.w	r1, r1, #1
 8012340:	bf38      	it	cc
 8012342:	6105      	strcc	r5, [r0, #16]
 8012344:	6081      	str	r1, [r0, #8]
 8012346:	6903      	ldr	r3, [r0, #16]
 8012348:	f8a3 a000 	strh.w	sl, [r3]
 801234c:	805a      	strh	r2, [r3, #2]
 801234e:	809e      	strh	r6, [r3, #4]
 8012350:	80de      	strh	r6, [r3, #6]
 8012352:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012354:	6901      	ldr	r1, [r0, #16]
 8012356:	441a      	add	r2, r3
 8012358:	88cc      	ldrh	r4, [r1, #6]
 801235a:	888b      	ldrh	r3, [r1, #4]
 801235c:	4323      	orrs	r3, r4
 801235e:	d010      	beq.n	8012382 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012360:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012364:	2c00      	cmp	r4, #0
 8012366:	db0c      	blt.n	8012382 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012368:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801236a:	429c      	cmp	r4, r3
 801236c:	da09      	bge.n	8012382 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801236e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012372:	429c      	cmp	r4, r3
 8012374:	bf38      	it	cc
 8012376:	3108      	addcc	r1, #8
 8012378:	f104 0401 	add.w	r4, r4, #1
 801237c:	bf38      	it	cc
 801237e:	6101      	strcc	r1, [r0, #16]
 8012380:	6084      	str	r4, [r0, #8]
 8012382:	6903      	ldr	r3, [r0, #16]
 8012384:	f8a3 a000 	strh.w	sl, [r3]
 8012388:	805a      	strh	r2, [r3, #2]
 801238a:	809e      	strh	r6, [r3, #4]
 801238c:	80de      	strh	r6, [r3, #6]
 801238e:	9b06      	ldr	r3, [sp, #24]
 8012390:	4293      	cmp	r3, r2
 8012392:	464f      	mov	r7, r9
 8012394:	d19c      	bne.n	80122d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012396:	9b01      	ldr	r3, [sp, #4]
 8012398:	6907      	ldr	r7, [r0, #16]
 801239a:	f1c3 0620 	rsb	r6, r3, #32
 801239e:	9b05      	ldr	r3, [sp, #20]
 80123a0:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80123a4:	9b04      	ldr	r3, [sp, #16]
 80123a6:	429e      	cmp	r6, r3
 80123a8:	f040 81cc 	bne.w	8012744 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80123ac:	f9b7 3000 	ldrsh.w	r3, [r7]
 80123b0:	459e      	cmp	lr, r3
 80123b2:	d104      	bne.n	80123be <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80123b4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80123b8:	429a      	cmp	r2, r3
 80123ba:	f43f ae36 	beq.w	801202a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80123be:	88f9      	ldrh	r1, [r7, #6]
 80123c0:	88bb      	ldrh	r3, [r7, #4]
 80123c2:	430b      	orrs	r3, r1
 80123c4:	d010      	beq.n	80123e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80123c6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80123ca:	2b00      	cmp	r3, #0
 80123cc:	db0c      	blt.n	80123e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80123ce:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 80123d0:	428b      	cmp	r3, r1
 80123d2:	da09      	bge.n	80123e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80123d4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80123d8:	428b      	cmp	r3, r1
 80123da:	bf38      	it	cc
 80123dc:	3708      	addcc	r7, #8
 80123de:	f103 0301 	add.w	r3, r3, #1
 80123e2:	bf38      	it	cc
 80123e4:	6107      	strcc	r7, [r0, #16]
 80123e6:	6083      	str	r3, [r0, #8]
 80123e8:	6903      	ldr	r3, [r0, #16]
 80123ea:	f8a3 e000 	strh.w	lr, [r3]
 80123ee:	e5ff      	b.n	8011ff0 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 80123f0:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 80123f2:	9c03      	ldr	r4, [sp, #12]
 80123f4:	42a2      	cmp	r2, r4
 80123f6:	f6ff ae18 	blt.w	801202a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80123fa:	9c06      	ldr	r4, [sp, #24]
 80123fc:	42a2      	cmp	r2, r4
 80123fe:	bfb8      	it	lt
 8012400:	3201      	addlt	r2, #1
 8012402:	9c08      	ldr	r4, [sp, #32]
 8012404:	bfb8      	it	lt
 8012406:	9206      	strlt	r2, [sp, #24]
 8012408:	f1c3 0220 	rsb	r2, r3, #32
 801240c:	4362      	muls	r2, r4
 801240e:	2401      	movs	r4, #1
 8012410:	940b      	str	r4, [sp, #44]	@ 0x2c
 8012412:	2420      	movs	r4, #32
 8012414:	e6d5      	b.n	80121c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012416:	f009 021f 	and.w	r2, r9, #31
 801241a:	ea4f 1861 	mov.w	r8, r1, asr #5
 801241e:	920c      	str	r2, [sp, #48]	@ 0x30
 8012420:	9a01      	ldr	r2, [sp, #4]
 8012422:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012426:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 801242a:	45b0      	cmp	r8, r6
 801242c:	f001 011f 	and.w	r1, r1, #31
 8012430:	eba2 0203 	sub.w	r2, r2, r3
 8012434:	d108      	bne.n	8012448 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8012436:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012438:	4419      	add	r1, r3
 801243a:	4496      	add	lr, r2
 801243c:	fb02 a101 	mla	r1, r2, r1, sl
 8012440:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012444:	80e9      	strh	r1, [r5, #6]
 8012446:	e6f9      	b.n	801223c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012448:	2c00      	cmp	r4, #0
 801244a:	f2c0 80a9 	blt.w	80125a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801244e:	2701      	movs	r7, #1
 8012450:	f1c1 0c20 	rsb	ip, r1, #32
 8012454:	970a      	str	r7, [sp, #40]	@ 0x28
 8012456:	fb02 f20c 	mul.w	r2, r2, ip
 801245a:	2720      	movs	r7, #32
 801245c:	9709      	str	r7, [sp, #36]	@ 0x24
 801245e:	fb92 fcf4 	sdiv	ip, r2, r4
 8012462:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8012464:	fb04 221c 	mls	r2, r4, ip, r2
 8012468:	2a00      	cmp	r2, #0
 801246a:	bfb8      	it	lt
 801246c:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8012470:	4439      	add	r1, r7
 8012472:	fb0c a101 	mla	r1, ip, r1, sl
 8012476:	80e9      	strh	r1, [r5, #6]
 8012478:	44e6      	add	lr, ip
 801247a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801247c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012480:	eb08 0501 	add.w	r5, r8, r1
 8012484:	6901      	ldr	r1, [r0, #16]
 8012486:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 801248a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801248e:	bfb8      	it	lt
 8012490:	1912      	addlt	r2, r2, r4
 8012492:	ea58 070e 	orrs.w	r7, r8, lr
 8012496:	d010      	beq.n	80124ba <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012498:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 801249c:	f1be 0f00 	cmp.w	lr, #0
 80124a0:	db0b      	blt.n	80124ba <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80124a2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80124a4:	45be      	cmp	lr, r7
 80124a6:	da08      	bge.n	80124ba <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80124a8:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80124ac:	45be      	cmp	lr, r7
 80124ae:	bf3c      	itt	cc
 80124b0:	3108      	addcc	r1, #8
 80124b2:	6101      	strcc	r1, [r0, #16]
 80124b4:	f10e 0101 	add.w	r1, lr, #1
 80124b8:	6081      	str	r1, [r0, #8]
 80124ba:	6901      	ldr	r1, [r0, #16]
 80124bc:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80124c0:	800d      	strh	r5, [r1, #0]
 80124c2:	f04f 0e00 	mov.w	lr, #0
 80124c6:	42ae      	cmp	r6, r5
 80124c8:	f8a1 8002 	strh.w	r8, [r1, #2]
 80124cc:	f8a1 e004 	strh.w	lr, [r1, #4]
 80124d0:	f8a1 e006 	strh.w	lr, [r1, #6]
 80124d4:	4463      	add	r3, ip
 80124d6:	d054      	beq.n	8012582 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80124d8:	9901      	ldr	r1, [sp, #4]
 80124da:	1ac9      	subs	r1, r1, r3
 80124dc:	4461      	add	r1, ip
 80124de:	0149      	lsls	r1, r1, #5
 80124e0:	fb91 fef4 	sdiv	lr, r1, r4
 80124e4:	fb04 111e 	mls	r1, r4, lr, r1
 80124e8:	2900      	cmp	r1, #0
 80124ea:	bfb8      	it	lt
 80124ec:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80124f0:	f10e 0701 	add.w	r7, lr, #1
 80124f4:	bfb8      	it	lt
 80124f6:	1909      	addlt	r1, r1, r4
 80124f8:	1b12      	subs	r2, r2, r4
 80124fa:	970d      	str	r7, [sp, #52]	@ 0x34
 80124fc:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012500:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8012502:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012506:	1852      	adds	r2, r2, r1
 8012508:	bf54      	ite	pl
 801250a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 801250e:	46f4      	movmi	ip, lr
 8012510:	44e3      	add	fp, ip
 8012512:	f8aa b004 	strh.w	fp, [sl, #4]
 8012516:	f8ba b006 	ldrh.w	fp, [sl, #6]
 801251a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801251e:	f8aa b006 	strh.w	fp, [sl, #6]
 8012522:	4463      	add	r3, ip
 8012524:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012528:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801252c:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012530:	bf58      	it	pl
 8012532:	1b12      	subpl	r2, r2, r4
 8012534:	443d      	add	r5, r7
 8012536:	ea5b 070a 	orrs.w	r7, fp, sl
 801253a:	d014      	beq.n	8012566 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801253c:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012540:	f1ba 0f00 	cmp.w	sl, #0
 8012544:	db0f      	blt.n	8012566 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012546:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8012548:	45ba      	cmp	sl, r7
 801254a:	da0c      	bge.n	8012566 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801254c:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012550:	45ba      	cmp	sl, r7
 8012552:	bf38      	it	cc
 8012554:	f10c 0c08 	addcc.w	ip, ip, #8
 8012558:	f10a 0a01 	add.w	sl, sl, #1
 801255c:	bf38      	it	cc
 801255e:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8012562:	f8c0 a008 	str.w	sl, [r0, #8]
 8012566:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801256a:	f04f 0700 	mov.w	r7, #0
 801256e:	42ae      	cmp	r6, r5
 8012570:	f8ac 5000 	strh.w	r5, [ip]
 8012574:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012578:	f8ac 7004 	strh.w	r7, [ip, #4]
 801257c:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012580:	d1bc      	bne.n	80124fc <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012582:	6904      	ldr	r4, [r0, #16]
 8012584:	9a01      	ldr	r2, [sp, #4]
 8012586:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012588:	1ad3      	subs	r3, r2, r3
 801258a:	88a2      	ldrh	r2, [r4, #4]
 801258c:	441a      	add	r2, r3
 801258e:	80a2      	strh	r2, [r4, #4]
 8012590:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012592:	3120      	adds	r1, #32
 8012594:	1a89      	subs	r1, r1, r2
 8012596:	88e2      	ldrh	r2, [r4, #6]
 8012598:	fb03 2301 	mla	r3, r3, r1, r2
 801259c:	80e3      	strh	r3, [r4, #6]
 801259e:	e64d      	b.n	801223c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80125a0:	f04f 37ff 	mov.w	r7, #4294967295
 80125a4:	970a      	str	r7, [sp, #40]	@ 0x28
 80125a6:	434a      	muls	r2, r1
 80125a8:	4264      	negs	r4, r4
 80125aa:	2700      	movs	r7, #0
 80125ac:	e756      	b.n	801245c <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80125ae:	ea4f 1867 	mov.w	r8, r7, asr #5
 80125b2:	f009 031f 	and.w	r3, r9, #31
 80125b6:	45d0      	cmp	r8, sl
 80125b8:	f007 071f 	and.w	r7, r7, #31
 80125bc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80125be:	fa1f fc8c 	uxth.w	ip, ip
 80125c2:	fa1f fe8e 	uxth.w	lr, lr
 80125c6:	d10a      	bne.n	80125de <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 80125c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80125ca:	449c      	add	ip, r3
 80125cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80125ce:	f8a5 c004 	strh.w	ip, [r5, #4]
 80125d2:	441f      	add	r7, r3
 80125d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80125d6:	fb03 e707 	mla	r7, r3, r7, lr
 80125da:	80ef      	strh	r7, [r5, #6]
 80125dc:	e6b9      	b.n	8012352 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80125de:	2900      	cmp	r1, #0
 80125e0:	f2c0 80a8 	blt.w	8012734 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 80125e4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80125e6:	f1c7 0320 	rsb	r3, r7, #32
 80125ea:	4363      	muls	r3, r4
 80125ec:	2401      	movs	r4, #1
 80125ee:	940d      	str	r4, [sp, #52]	@ 0x34
 80125f0:	2420      	movs	r4, #32
 80125f2:	940c      	str	r4, [sp, #48]	@ 0x30
 80125f4:	fb93 f4f1 	sdiv	r4, r3, r1
 80125f8:	fb01 3b14 	mls	fp, r1, r4, r3
 80125fc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80125fe:	f1bb 0f00 	cmp.w	fp, #0
 8012602:	bfb8      	it	lt
 8012604:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012608:	441f      	add	r7, r3
 801260a:	fb04 e707 	mla	r7, r4, r7, lr
 801260e:	44a4      	add	ip, r4
 8012610:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012614:	80ef      	strh	r7, [r5, #6]
 8012616:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801261a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801261c:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012620:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012624:	bfb8      	it	lt
 8012626:	448b      	addlt	fp, r1
 8012628:	eb08 0503 	add.w	r5, r8, r3
 801262c:	ea5e 0307 	orrs.w	r3, lr, r7
 8012630:	d011      	beq.n	8012656 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012632:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012636:	f1be 0f00 	cmp.w	lr, #0
 801263a:	db0c      	blt.n	8012656 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801263c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 801263e:	45be      	cmp	lr, r7
 8012640:	da09      	bge.n	8012656 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012642:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012646:	45be      	cmp	lr, r7
 8012648:	bf3c      	itt	cc
 801264a:	f10c 0708 	addcc.w	r7, ip, #8
 801264e:	6107      	strcc	r7, [r0, #16]
 8012650:	f10e 0701 	add.w	r7, lr, #1
 8012654:	6087      	str	r7, [r0, #8]
 8012656:	6907      	ldr	r7, [r0, #16]
 8012658:	b213      	sxth	r3, r2
 801265a:	9310      	str	r3, [sp, #64]	@ 0x40
 801265c:	807b      	strh	r3, [r7, #2]
 801265e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012660:	803d      	strh	r5, [r7, #0]
 8012662:	4555      	cmp	r5, sl
 8012664:	80be      	strh	r6, [r7, #4]
 8012666:	80fe      	strh	r6, [r7, #6]
 8012668:	eb04 0c03 	add.w	ip, r4, r3
 801266c:	d051      	beq.n	8012712 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801266e:	9b01      	ldr	r3, [sp, #4]
 8012670:	eba3 070c 	sub.w	r7, r3, ip
 8012674:	443c      	add	r4, r7
 8012676:	0164      	lsls	r4, r4, #5
 8012678:	fb94 f8f1 	sdiv	r8, r4, r1
 801267c:	fb01 4418 	mls	r4, r1, r8, r4
 8012680:	2c00      	cmp	r4, #0
 8012682:	bfb8      	it	lt
 8012684:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012688:	ebab 0301 	sub.w	r3, fp, r1
 801268c:	f108 0701 	add.w	r7, r8, #1
 8012690:	bfb8      	it	lt
 8012692:	1864      	addlt	r4, r4, r1
 8012694:	9309      	str	r3, [sp, #36]	@ 0x24
 8012696:	9711      	str	r7, [sp, #68]	@ 0x44
 8012698:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801269a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801269e:	191b      	adds	r3, r3, r4
 80126a0:	bf58      	it	pl
 80126a2:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 80126a4:	f8be b004 	ldrh.w	fp, [lr, #4]
 80126a8:	9309      	str	r3, [sp, #36]	@ 0x24
 80126aa:	bf48      	it	mi
 80126ac:	4647      	movmi	r7, r8
 80126ae:	44bb      	add	fp, r7
 80126b0:	f8ae b004 	strh.w	fp, [lr, #4]
 80126b4:	f8be b006 	ldrh.w	fp, [lr, #6]
 80126b8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80126bc:	f8ae b006 	strh.w	fp, [lr, #6]
 80126c0:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80126c4:	44bc      	add	ip, r7
 80126c6:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 80126c8:	f8be b006 	ldrh.w	fp, [lr, #6]
 80126cc:	443d      	add	r5, r7
 80126ce:	f8be 7004 	ldrh.w	r7, [lr, #4]
 80126d2:	bf5c      	itt	pl
 80126d4:	1a5b      	subpl	r3, r3, r1
 80126d6:	9309      	strpl	r3, [sp, #36]	@ 0x24
 80126d8:	ea5b 0307 	orrs.w	r3, fp, r7
 80126dc:	d011      	beq.n	8012702 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80126de:	f9be b002 	ldrsh.w	fp, [lr, #2]
 80126e2:	f1bb 0f00 	cmp.w	fp, #0
 80126e6:	db0c      	blt.n	8012702 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80126e8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80126ea:	45bb      	cmp	fp, r7
 80126ec:	da09      	bge.n	8012702 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80126ee:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80126f2:	45bb      	cmp	fp, r7
 80126f4:	bf3c      	itt	cc
 80126f6:	f10e 0708 	addcc.w	r7, lr, #8
 80126fa:	6107      	strcc	r7, [r0, #16]
 80126fc:	f10b 0701 	add.w	r7, fp, #1
 8012700:	6087      	str	r7, [r0, #8]
 8012702:	6907      	ldr	r7, [r0, #16]
 8012704:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012706:	803d      	strh	r5, [r7, #0]
 8012708:	4555      	cmp	r5, sl
 801270a:	807b      	strh	r3, [r7, #2]
 801270c:	80be      	strh	r6, [r7, #4]
 801270e:	80fe      	strh	r6, [r7, #6]
 8012710:	d1c2      	bne.n	8012698 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012712:	9b01      	ldr	r3, [sp, #4]
 8012714:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8012716:	eba3 0c0c 	sub.w	ip, r3, ip
 801271a:	6903      	ldr	r3, [r0, #16]
 801271c:	8899      	ldrh	r1, [r3, #4]
 801271e:	4461      	add	r1, ip
 8012720:	8099      	strh	r1, [r3, #4]
 8012722:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012724:	3720      	adds	r7, #32
 8012726:	1a7f      	subs	r7, r7, r1
 8012728:	88d9      	ldrh	r1, [r3, #6]
 801272a:	fb0c 1c07 	mla	ip, ip, r7, r1
 801272e:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012732:	e60e      	b.n	8012352 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012734:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012736:	f04f 34ff 	mov.w	r4, #4294967295
 801273a:	940d      	str	r4, [sp, #52]	@ 0x34
 801273c:	437b      	muls	r3, r7
 801273e:	4249      	negs	r1, r1
 8012740:	2400      	movs	r4, #0
 8012742:	e756      	b.n	80125f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012744:	9905      	ldr	r1, [sp, #20]
 8012746:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 801274a:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801274e:	f001 011f 	and.w	r1, r1, #31
 8012752:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012756:	9102      	str	r1, [sp, #8]
 8012758:	9904      	ldr	r1, [sp, #16]
 801275a:	45f3      	cmp	fp, lr
 801275c:	f009 0c1f 	and.w	ip, r9, #31
 8012760:	eba1 0406 	sub.w	r4, r1, r6
 8012764:	d108      	bne.n	8012778 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012766:	9b02      	ldr	r3, [sp, #8]
 8012768:	449c      	add	ip, r3
 801276a:	44a0      	add	r8, r4
 801276c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012770:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012774:	80fc      	strh	r4, [r7, #6]
 8012776:	e458      	b.n	801202a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012778:	9905      	ldr	r1, [sp, #20]
 801277a:	ebb1 0109 	subs.w	r1, r1, r9
 801277e:	bf5b      	ittet	pl
 8012780:	f1cc 0520 	rsbpl	r5, ip, #32
 8012784:	436c      	mulpl	r4, r5
 8012786:	2500      	movmi	r5, #0
 8012788:	2520      	movpl	r5, #32
 801278a:	bf44      	itt	mi
 801278c:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012790:	4249      	negmi	r1, r1
 8012792:	9501      	str	r5, [sp, #4]
 8012794:	9b01      	ldr	r3, [sp, #4]
 8012796:	fb94 f5f1 	sdiv	r5, r4, r1
 801279a:	fb01 4415 	mls	r4, r1, r5, r4
 801279e:	bf54      	ite	pl
 80127a0:	f04f 0901 	movpl.w	r9, #1
 80127a4:	f04f 39ff 	movmi.w	r9, #4294967295
 80127a8:	2c00      	cmp	r4, #0
 80127aa:	bfb8      	it	lt
 80127ac:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80127b0:	449c      	add	ip, r3
 80127b2:	44a8      	add	r8, r5
 80127b4:	fb05 ac0c 	mla	ip, r5, ip, sl
 80127b8:	f8a7 8004 	strh.w	r8, [r7, #4]
 80127bc:	f8a7 c006 	strh.w	ip, [r7, #6]
 80127c0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80127c4:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80127c8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80127cc:	bfb8      	it	lt
 80127ce:	1864      	addlt	r4, r4, r1
 80127d0:	ea58 0707 	orrs.w	r7, r8, r7
 80127d4:	eb0b 0309 	add.w	r3, fp, r9
 80127d8:	d011      	beq.n	80127fe <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80127da:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80127de:	f1b8 0f00 	cmp.w	r8, #0
 80127e2:	db0c      	blt.n	80127fe <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80127e4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80127e6:	45b8      	cmp	r8, r7
 80127e8:	da09      	bge.n	80127fe <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80127ea:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 80127ee:	45b8      	cmp	r8, r7
 80127f0:	bf3c      	itt	cc
 80127f2:	f10c 0708 	addcc.w	r7, ip, #8
 80127f6:	6107      	strcc	r7, [r0, #16]
 80127f8:	f108 0701 	add.w	r7, r8, #1
 80127fc:	6087      	str	r7, [r0, #8]
 80127fe:	6907      	ldr	r7, [r0, #16]
 8012800:	f04f 0c00 	mov.w	ip, #0
 8012804:	b212      	sxth	r2, r2
 8012806:	459e      	cmp	lr, r3
 8012808:	803b      	strh	r3, [r7, #0]
 801280a:	807a      	strh	r2, [r7, #2]
 801280c:	f8a7 c004 	strh.w	ip, [r7, #4]
 8012810:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012814:	442e      	add	r6, r5
 8012816:	d04d      	beq.n	80128b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8012818:	9f04      	ldr	r7, [sp, #16]
 801281a:	1bbf      	subs	r7, r7, r6
 801281c:	443d      	add	r5, r7
 801281e:	016d      	lsls	r5, r5, #5
 8012820:	fb95 f8f1 	sdiv	r8, r5, r1
 8012824:	fb01 5518 	mls	r5, r1, r8, r5
 8012828:	4565      	cmp	r5, ip
 801282a:	bfb8      	it	lt
 801282c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012830:	f108 0701 	add.w	r7, r8, #1
 8012834:	bfb8      	it	lt
 8012836:	186d      	addlt	r5, r5, r1
 8012838:	1a64      	subs	r4, r4, r1
 801283a:	9703      	str	r7, [sp, #12]
 801283c:	f04f 0a00 	mov.w	sl, #0
 8012840:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012844:	1964      	adds	r4, r4, r5
 8012846:	bf58      	it	pl
 8012848:	9f03      	ldrpl	r7, [sp, #12]
 801284a:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801284e:	bf48      	it	mi
 8012850:	4647      	movmi	r7, r8
 8012852:	44bb      	add	fp, r7
 8012854:	f8ac b004 	strh.w	fp, [ip, #4]
 8012858:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801285c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012860:	f8ac b006 	strh.w	fp, [ip, #6]
 8012864:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012868:	443e      	add	r6, r7
 801286a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801286e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012872:	bf58      	it	pl
 8012874:	1a64      	subpl	r4, r4, r1
 8012876:	ea5b 0707 	orrs.w	r7, fp, r7
 801287a:	444b      	add	r3, r9
 801287c:	d011      	beq.n	80128a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801287e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012882:	f1bb 0f00 	cmp.w	fp, #0
 8012886:	db0c      	blt.n	80128a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012888:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 801288a:	45bb      	cmp	fp, r7
 801288c:	da09      	bge.n	80128a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801288e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012892:	45bb      	cmp	fp, r7
 8012894:	bf3c      	itt	cc
 8012896:	f10c 0708 	addcc.w	r7, ip, #8
 801289a:	6107      	strcc	r7, [r0, #16]
 801289c:	f10b 0701 	add.w	r7, fp, #1
 80128a0:	6087      	str	r7, [r0, #8]
 80128a2:	6907      	ldr	r7, [r0, #16]
 80128a4:	459e      	cmp	lr, r3
 80128a6:	803b      	strh	r3, [r7, #0]
 80128a8:	807a      	strh	r2, [r7, #2]
 80128aa:	f8a7 a004 	strh.w	sl, [r7, #4]
 80128ae:	f8a7 a006 	strh.w	sl, [r7, #6]
 80128b2:	d1c5      	bne.n	8012840 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80128b4:	9b04      	ldr	r3, [sp, #16]
 80128b6:	1b9e      	subs	r6, r3, r6
 80128b8:	6903      	ldr	r3, [r0, #16]
 80128ba:	889a      	ldrh	r2, [r3, #4]
 80128bc:	4432      	add	r2, r6
 80128be:	809a      	strh	r2, [r3, #4]
 80128c0:	9a02      	ldr	r2, [sp, #8]
 80128c2:	f102 0c20 	add.w	ip, r2, #32
 80128c6:	9a01      	ldr	r2, [sp, #4]
 80128c8:	ebac 0c02 	sub.w	ip, ip, r2
 80128cc:	88da      	ldrh	r2, [r3, #6]
 80128ce:	fb06 260c 	mla	r6, r6, ip, r2
 80128d2:	80de      	strh	r6, [r3, #6]
 80128d4:	f7ff bba9 	b.w	801202a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080128d8 <_ZN8touchgfx7Outline6lineToEii>:
 80128d8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80128da:	079b      	lsls	r3, r3, #30
 80128dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80128de:	460e      	mov	r6, r1
 80128e0:	4615      	mov	r5, r2
 80128e2:	d511      	bpl.n	8012908 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80128e4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 80128e8:	ea86 0701 	eor.w	r7, r6, r1
 80128ec:	ea85 0302 	eor.w	r3, r5, r2
 80128f0:	433b      	orrs	r3, r7
 80128f2:	d009      	beq.n	8012908 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80128f4:	4633      	mov	r3, r6
 80128f6:	9500      	str	r5, [sp, #0]
 80128f8:	f7ff fb3e 	bl	8011f78 <_ZN8touchgfx7Outline10renderLineEiiii>
 80128fc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80128fe:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8012902:	f043 0301 	orr.w	r3, r3, #1
 8012906:	6243      	str	r3, [r0, #36]	@ 0x24
 8012908:	b003      	add	sp, #12
 801290a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801290c <_ZN8touchgfx7Outline6moveToEii>:
 801290c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801290e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012910:	4615      	mov	r5, r2
 8012912:	079a      	lsls	r2, r3, #30
 8012914:	4604      	mov	r4, r0
 8012916:	460e      	mov	r6, r1
 8012918:	d401      	bmi.n	801291e <_ZN8touchgfx7Outline6moveToEii+0x12>
 801291a:	f7ff faf9 	bl	8011f10 <_ZN8touchgfx7Outline5resetEv>
 801291e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8012920:	07db      	lsls	r3, r3, #31
 8012922:	d504      	bpl.n	801292e <_ZN8touchgfx7Outline6moveToEii+0x22>
 8012924:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8012928:	4620      	mov	r0, r4
 801292a:	f7ff ffd5 	bl	80128d8 <_ZN8touchgfx7Outline6lineToEii>
 801292e:	6923      	ldr	r3, [r4, #16]
 8012930:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012934:	1170      	asrs	r0, r6, #5
 8012936:	4290      	cmp	r0, r2
 8012938:	ea4f 1165 	mov.w	r1, r5, asr #5
 801293c:	d103      	bne.n	8012946 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801293e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012942:	4291      	cmp	r1, r2
 8012944:	d01a      	beq.n	801297c <_ZN8touchgfx7Outline6moveToEii+0x70>
 8012946:	88df      	ldrh	r7, [r3, #6]
 8012948:	889a      	ldrh	r2, [r3, #4]
 801294a:	433a      	orrs	r2, r7
 801294c:	d010      	beq.n	8012970 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801294e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012952:	2a00      	cmp	r2, #0
 8012954:	db0c      	blt.n	8012970 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012956:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8012958:	42ba      	cmp	r2, r7
 801295a:	da09      	bge.n	8012970 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801295c:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8012960:	42ba      	cmp	r2, r7
 8012962:	bf38      	it	cc
 8012964:	3308      	addcc	r3, #8
 8012966:	f102 0201 	add.w	r2, r2, #1
 801296a:	bf38      	it	cc
 801296c:	6123      	strcc	r3, [r4, #16]
 801296e:	60a2      	str	r2, [r4, #8]
 8012970:	6923      	ldr	r3, [r4, #16]
 8012972:	2200      	movs	r2, #0
 8012974:	8018      	strh	r0, [r3, #0]
 8012976:	8059      	strh	r1, [r3, #2]
 8012978:	809a      	strh	r2, [r3, #4]
 801297a:	80da      	strh	r2, [r3, #6]
 801297c:	6166      	str	r6, [r4, #20]
 801297e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8012982:	6225      	str	r5, [r4, #32]
 8012984:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012986 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8012986:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801298a:	b0d0      	sub	sp, #320	@ 0x140
 801298c:	466c      	mov	r4, sp
 801298e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8012992:	4627      	mov	r7, r4
 8012994:	1a0d      	subs	r5, r1, r0
 8012996:	2d48      	cmp	r5, #72	@ 0x48
 8012998:	f100 0308 	add.w	r3, r0, #8
 801299c:	f340 80d5 	ble.w	8012b4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80129a0:	112d      	asrs	r5, r5, #4
 80129a2:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80129a6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80129aa:	6816      	ldr	r6, [r2, #0]
 80129ac:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80129b0:	6006      	str	r6, [r0, #0]
 80129b2:	6856      	ldr	r6, [r2, #4]
 80129b4:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80129b8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80129bc:	6046      	str	r6, [r0, #4]
 80129be:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80129c2:	f8a2 8002 	strh.w	r8, [r2, #2]
 80129c6:	f8a2 e004 	strh.w	lr, [r2, #4]
 80129ca:	f8a2 c006 	strh.w	ip, [r2, #6]
 80129ce:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80129d2:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80129d6:	4565      	cmp	r5, ip
 80129d8:	f1a1 0208 	sub.w	r2, r1, #8
 80129dc:	db06      	blt.n	80129ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80129de:	d119      	bne.n	8012a14 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80129e0:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80129e4:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 80129e8:	42ae      	cmp	r6, r5
 80129ea:	dd13      	ble.n	8012a14 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80129ec:	460e      	mov	r6, r1
 80129ee:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80129f2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80129f6:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 80129fa:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 80129fe:	601d      	str	r5, [r3, #0]
 8012a00:	6875      	ldr	r5, [r6, #4]
 8012a02:	605d      	str	r5, [r3, #4]
 8012a04:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012a08:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012a0c:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012a10:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012a14:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012a18:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8012a1c:	42ae      	cmp	r6, r5
 8012a1e:	db06      	blt.n	8012a2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8012a20:	d116      	bne.n	8012a50 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012a22:	f9b0 c000 	ldrsh.w	ip, [r0]
 8012a26:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8012a2a:	45ac      	cmp	ip, r5
 8012a2c:	da10      	bge.n	8012a50 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012a2e:	681d      	ldr	r5, [r3, #0]
 8012a30:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012a34:	6005      	str	r5, [r0, #0]
 8012a36:	685d      	ldr	r5, [r3, #4]
 8012a38:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012a3c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012a40:	f8a0 8008 	strh.w	r8, [r0, #8]
 8012a44:	6045      	str	r5, [r0, #4]
 8012a46:	8146      	strh	r6, [r0, #10]
 8012a48:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8012a4c:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8012a50:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012a54:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012a58:	4565      	cmp	r5, ip
 8012a5a:	db06      	blt.n	8012a6a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8012a5c:	d119      	bne.n	8012a92 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012a5e:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8012a62:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012a66:	42ae      	cmp	r6, r5
 8012a68:	da13      	bge.n	8012a92 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012a6a:	460e      	mov	r6, r1
 8012a6c:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012a70:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012a74:	6005      	str	r5, [r0, #0]
 8012a76:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8012a7a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8012a7e:	6875      	ldr	r5, [r6, #4]
 8012a80:	6045      	str	r5, [r0, #4]
 8012a82:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012a86:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012a8a:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012a8e:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012a92:	3308      	adds	r3, #8
 8012a94:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012a98:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8012a9c:	45e6      	cmp	lr, ip
 8012a9e:	dbf8      	blt.n	8012a92 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012aa0:	d105      	bne.n	8012aae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012aa2:	f9b3 6000 	ldrsh.w	r6, [r3]
 8012aa6:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012aaa:	42ae      	cmp	r6, r5
 8012aac:	dbf1      	blt.n	8012a92 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012aae:	4615      	mov	r5, r2
 8012ab0:	3a08      	subs	r2, #8
 8012ab2:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8012ab6:	45b4      	cmp	ip, r6
 8012ab8:	dbf9      	blt.n	8012aae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012aba:	d105      	bne.n	8012ac8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8012abc:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012ac0:	f9b2 6000 	ldrsh.w	r6, [r2]
 8012ac4:	45b0      	cmp	r8, r6
 8012ac6:	dbf2      	blt.n	8012aae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012ac8:	4293      	cmp	r3, r2
 8012aca:	f1a5 0608 	sub.w	r6, r5, #8
 8012ace:	d816      	bhi.n	8012afe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8012ad0:	f8d6 c000 	ldr.w	ip, [r6]
 8012ad4:	f9b3 a000 	ldrsh.w	sl, [r3]
 8012ad8:	f8c3 c000 	str.w	ip, [r3]
 8012adc:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8012ae0:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8012ae4:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8012ae8:	f8c3 c004 	str.w	ip, [r3, #4]
 8012aec:	f825 ac08 	strh.w	sl, [r5, #-8]
 8012af0:	f825 ec06 	strh.w	lr, [r5, #-6]
 8012af4:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012af8:	f825 8c02 	strh.w	r8, [r5, #-2]
 8012afc:	e7c9      	b.n	8012a92 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012afe:	f8d6 e000 	ldr.w	lr, [r6]
 8012b02:	f9b0 a000 	ldrsh.w	sl, [r0]
 8012b06:	f8c0 e000 	str.w	lr, [r0]
 8012b0a:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8012b0e:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8012b12:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8012b16:	f8c0 e004 	str.w	lr, [r0, #4]
 8012b1a:	f825 ac08 	strh.w	sl, [r5, #-8]
 8012b1e:	f825 cc06 	strh.w	ip, [r5, #-6]
 8012b22:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012b26:	f825 8c02 	strh.w	r8, [r5, #-2]
 8012b2a:	1acd      	subs	r5, r1, r3
 8012b2c:	1a16      	subs	r6, r2, r0
 8012b2e:	10ed      	asrs	r5, r5, #3
 8012b30:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8012b34:	bfb5      	itete	lt
 8012b36:	e9c4 0200 	strdlt	r0, r2, [r4]
 8012b3a:	e9c4 3100 	strdge	r3, r1, [r4]
 8012b3e:	460a      	movlt	r2, r1
 8012b40:	4603      	movge	r3, r0
 8012b42:	3408      	adds	r4, #8
 8012b44:	4618      	mov	r0, r3
 8012b46:	4611      	mov	r1, r2
 8012b48:	e724      	b.n	8012994 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8012b4a:	4299      	cmp	r1, r3
 8012b4c:	d928      	bls.n	8012ba0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8012b4e:	f1a3 0210 	sub.w	r2, r3, #16
 8012b52:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8012b56:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8012b5a:	45ac      	cmp	ip, r5
 8012b5c:	db06      	blt.n	8012b6c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8012b5e:	d11d      	bne.n	8012b9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8012b60:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8012b64:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8012b68:	42ae      	cmp	r6, r5
 8012b6a:	da17      	bge.n	8012b9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8012b6c:	4615      	mov	r5, r2
 8012b6e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8012b72:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8012b76:	6116      	str	r6, [r2, #16]
 8012b78:	686e      	ldr	r6, [r5, #4]
 8012b7a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8012b7e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8012b82:	f8a2 9008 	strh.w	r9, [r2, #8]
 8012b86:	42a8      	cmp	r0, r5
 8012b88:	6156      	str	r6, [r2, #20]
 8012b8a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8012b8e:	f8a2 800c 	strh.w	r8, [r2, #12]
 8012b92:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8012b96:	f1a2 0208 	sub.w	r2, r2, #8
 8012b9a:	d1da      	bne.n	8012b52 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8012b9c:	3308      	adds	r3, #8
 8012b9e:	e7d4      	b.n	8012b4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8012ba0:	42bc      	cmp	r4, r7
 8012ba2:	d903      	bls.n	8012bac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8012ba4:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8012ba8:	3c08      	subs	r4, #8
 8012baa:	e6f3      	b.n	8012994 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8012bac:	b050      	add	sp, #320	@ 0x140
 8012bae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08012bb2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8012bb2:	b510      	push	{r4, lr}
 8012bb4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012bb6:	07da      	lsls	r2, r3, #31
 8012bb8:	4604      	mov	r4, r0
 8012bba:	d507      	bpl.n	8012bcc <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8012bbc:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8012bc0:	f7ff fe8a 	bl	80128d8 <_ZN8touchgfx7Outline6lineToEii>
 8012bc4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012bc6:	f023 0301 	bic.w	r3, r3, #1
 8012bca:	6243      	str	r3, [r0, #36]	@ 0x24
 8012bcc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8012bce:	079b      	lsls	r3, r3, #30
 8012bd0:	d521      	bpl.n	8012c16 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8012bd2:	6923      	ldr	r3, [r4, #16]
 8012bd4:	88d9      	ldrh	r1, [r3, #6]
 8012bd6:	889a      	ldrh	r2, [r3, #4]
 8012bd8:	430a      	orrs	r2, r1
 8012bda:	d010      	beq.n	8012bfe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012bdc:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012be0:	2a00      	cmp	r2, #0
 8012be2:	db0c      	blt.n	8012bfe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012be4:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8012be6:	428a      	cmp	r2, r1
 8012be8:	da09      	bge.n	8012bfe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012bea:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8012bee:	4291      	cmp	r1, r2
 8012bf0:	bf88      	it	hi
 8012bf2:	3308      	addhi	r3, #8
 8012bf4:	f102 0201 	add.w	r2, r2, #1
 8012bf8:	bf88      	it	hi
 8012bfa:	6123      	strhi	r3, [r4, #16]
 8012bfc:	60a2      	str	r2, [r4, #8]
 8012bfe:	68a1      	ldr	r1, [r4, #8]
 8012c00:	b129      	cbz	r1, 8012c0e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8012c02:	6863      	ldr	r3, [r4, #4]
 8012c04:	4299      	cmp	r1, r3
 8012c06:	d802      	bhi.n	8012c0e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8012c08:	68e0      	ldr	r0, [r4, #12]
 8012c0a:	f7ff febc 	bl	8012986 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8012c0e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8012c10:	f023 0302 	bic.w	r3, r3, #2
 8012c14:	6263      	str	r3, [r4, #36]	@ 0x24
 8012c16:	68e0      	ldr	r0, [r4, #12]
 8012c18:	bd10      	pop	{r4, pc}
	...

08012c1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8012c1c:	4b02      	ldr	r3, [pc, #8]	@ (8012c28 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8012c1e:	6018      	str	r0, [r3, #0]
 8012c20:	4b02      	ldr	r3, [pc, #8]	@ (8012c2c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8012c22:	6019      	str	r1, [r3, #0]
 8012c24:	4770      	bx	lr
 8012c26:	bf00      	nop
 8012c28:	20013f68 	.word	0x20013f68
 8012c2c:	20013f6c 	.word	0x20013f6c

08012c30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8012c30:	4a02      	ldr	r2, [pc, #8]	@ (8012c3c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8012c32:	2300      	movs	r3, #0
 8012c34:	6013      	str	r3, [r2, #0]
 8012c36:	4a02      	ldr	r2, [pc, #8]	@ (8012c40 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8012c38:	6013      	str	r3, [r2, #0]
 8012c3a:	4770      	bx	lr
 8012c3c:	20013f68 	.word	0x20013f68
 8012c40:	20013f6c 	.word	0x20013f6c

08012c44 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8012c44:	4b01      	ldr	r3, [pc, #4]	@ (8012c4c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8012c46:	6818      	ldr	r0, [r3, #0]
 8012c48:	4770      	bx	lr
 8012c4a:	bf00      	nop
 8012c4c:	20013f68 	.word	0x20013f68

08012c50 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8012c50:	4b01      	ldr	r3, [pc, #4]	@ (8012c58 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8012c52:	6818      	ldr	r0, [r3, #0]
 8012c54:	4770      	bx	lr
 8012c56:	bf00      	nop
 8012c58:	20013f6c 	.word	0x20013f6c

08012c5c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8012c5c:	b510      	push	{r4, lr}
 8012c5e:	6803      	ldr	r3, [r0, #0]
 8012c60:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012c62:	460c      	mov	r4, r1
 8012c64:	4798      	blx	r3
 8012c66:	1b03      	subs	r3, r0, r4
 8012c68:	4258      	negs	r0, r3
 8012c6a:	4158      	adcs	r0, r3
 8012c6c:	bd10      	pop	{r4, pc}
	...

08012c70 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8012c70:	4b01      	ldr	r3, [pc, #4]	@ (8012c78 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8012c72:	6019      	str	r1, [r3, #0]
 8012c74:	4770      	bx	lr
 8012c76:	bf00      	nop
 8012c78:	20013f70 	.word	0x20013f70

08012c7c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c80:	4696      	mov	lr, r2
 8012c82:	4605      	mov	r5, r0
 8012c84:	4614      	mov	r4, r2
 8012c86:	460e      	mov	r6, r1
 8012c88:	461f      	mov	r7, r3
 8012c8a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012c8e:	b097      	sub	sp, #92	@ 0x5c
 8012c90:	f10d 0c1c 	add.w	ip, sp, #28
 8012c94:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012c98:	f8de 3000 	ldr.w	r3, [lr]
 8012c9c:	f8cc 3000 	str.w	r3, [ip]
 8012ca0:	f104 0e14 	add.w	lr, r4, #20
 8012ca4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012ca8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8012cac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012cb0:	f8de 3000 	ldr.w	r3, [lr]
 8012cb4:	f8cc 3000 	str.w	r3, [ip]
 8012cb8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8012cbc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012cc0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8012cc4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012cc8:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8012ccc:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 8012cd0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8012cd4:	f8de 3000 	ldr.w	r3, [lr]
 8012cd8:	f8cc 3000 	str.w	r3, [ip]
 8012cdc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8012cde:	682b      	ldr	r3, [r5, #0]
 8012ce0:	9201      	str	r2, [sp, #4]
 8012ce2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012ce6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8012ce8:	9200      	str	r2, [sp, #0]
 8012cea:	f8cd 8008 	str.w	r8, [sp, #8]
 8012cee:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 8012cf2:	aa07      	add	r2, sp, #28
 8012cf4:	463b      	mov	r3, r7
 8012cf6:	4631      	mov	r1, r6
 8012cf8:	4628      	mov	r0, r5
 8012cfa:	47d8      	blx	fp
 8012cfc:	46a6      	mov	lr, r4
 8012cfe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012d02:	f10d 0c1c 	add.w	ip, sp, #28
 8012d06:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012d0a:	f8de 3000 	ldr.w	r3, [lr]
 8012d0e:	f8cc 3000 	str.w	r3, [ip]
 8012d12:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8012d16:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012d1a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8012d1e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012d22:	343c      	adds	r4, #60	@ 0x3c
 8012d24:	f8de 3000 	ldr.w	r3, [lr]
 8012d28:	f8cc 3000 	str.w	r3, [ip]
 8012d2c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012d2e:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8012d32:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012d36:	6823      	ldr	r3, [r4, #0]
 8012d38:	f8cc 3000 	str.w	r3, [ip]
 8012d3c:	682b      	ldr	r3, [r5, #0]
 8012d3e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012d42:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8012d44:	9201      	str	r2, [sp, #4]
 8012d46:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8012d48:	9200      	str	r2, [sp, #0]
 8012d4a:	f8cd 8008 	str.w	r8, [sp, #8]
 8012d4e:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 8012d50:	aa07      	add	r2, sp, #28
 8012d52:	463b      	mov	r3, r7
 8012d54:	4631      	mov	r1, r6
 8012d56:	4628      	mov	r0, r5
 8012d58:	47a0      	blx	r4
 8012d5a:	b017      	add	sp, #92	@ 0x5c
 8012d5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012d60 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8012d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d64:	b08d      	sub	sp, #52	@ 0x34
 8012d66:	4688      	mov	r8, r1
 8012d68:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8012d6a:	f8d3 c000 	ldr.w	ip, [r3]
 8012d6e:	680f      	ldr	r7, [r1, #0]
 8012d70:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8012d74:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 8012d78:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 8012d7c:	edd3 6a07 	vldr	s13, [r3, #28]
 8012d80:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8012d82:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 8012d86:	f9b1 9000 	ldrsh.w	r9, [r1]
 8012d8a:	f9ba 1000 	ldrsh.w	r1, [sl]
 8012d8e:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8012d92:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 8012d96:	eba7 070c 	sub.w	r7, r7, ip
 8012d9a:	42bc      	cmp	r4, r7
 8012d9c:	bfa8      	it	ge
 8012d9e:	463c      	movge	r4, r7
 8012da0:	ee07 4a90 	vmov	s15, r4
 8012da4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8012da8:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8012dac:	ee25 4a04 	vmul.f32	s8, s10, s8
 8012db0:	ee65 4a24 	vmul.f32	s9, s10, s9
 8012db4:	ee25 5a27 	vmul.f32	s10, s10, s15
 8012db8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8012dbc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8012dc0:	eb09 0e0c 	add.w	lr, r9, ip
 8012dc4:	4571      	cmp	r1, lr
 8012dc6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8012dca:	ee32 1a05 	vadd.f32	s2, s4, s10
 8012dce:	ee36 0a84 	vadd.f32	s0, s13, s8
 8012dd2:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012dd6:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012dda:	f340 808d 	ble.w	8012ef8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8012dde:	eba1 060e 	sub.w	r6, r1, lr
 8012de2:	fb96 f5f4 	sdiv	r5, r6, r4
 8012de6:	ee07 5a10 	vmov	s14, r5
 8012dea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012dee:	2d00      	cmp	r5, #0
 8012df0:	fb04 6615 	mls	r6, r4, r5, r6
 8012df4:	eea7 0a04 	vfma.f32	s0, s14, s8
 8012df8:	eee7 0a24 	vfma.f32	s1, s14, s9
 8012dfc:	eea7 1a05 	vfma.f32	s2, s14, s10
 8012e00:	dd13      	ble.n	8012e2a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8012e02:	ee70 6a44 	vsub.f32	s13, s0, s8
 8012e06:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8012e0a:	eef5 6a40 	vcmp.f32	s13, #0.0
 8012e0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e12:	bf18      	it	ne
 8012e14:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8012e18:	ee31 2a45 	vsub.f32	s4, s2, s10
 8012e1c:	bf08      	it	eq
 8012e1e:	eeb0 7a67 	vmoveq.f32	s14, s15
 8012e22:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012e26:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012e2a:	fb05 f204 	mul.w	r2, r5, r4
 8012e2e:	1abf      	subs	r7, r7, r2
 8012e30:	4494      	add	ip, r2
 8012e32:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8012e36:	4411      	add	r1, r2
 8012e38:	eb09 020c 	add.w	r2, r9, ip
 8012e3c:	443a      	add	r2, r7
 8012e3e:	b209      	sxth	r1, r1
 8012e40:	428a      	cmp	r2, r1
 8012e42:	bfc4      	itt	gt
 8012e44:	eba1 0209 	subgt.w	r2, r1, r9
 8012e48:	eba2 070c 	subgt.w	r7, r2, ip
 8012e4c:	2f00      	cmp	r7, #0
 8012e4e:	dd50      	ble.n	8012ef2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8012e50:	fb97 f1f4 	sdiv	r1, r7, r4
 8012e54:	fb04 7211 	mls	r2, r4, r1, r7
 8012e58:	b90a      	cbnz	r2, 8012e5e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8012e5a:	3901      	subs	r1, #1
 8012e5c:	4622      	mov	r2, r4
 8012e5e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8012e62:	6840      	ldr	r0, [r0, #4]
 8012e64:	900b      	str	r0, [sp, #44]	@ 0x2c
 8012e66:	f8d0 a000 	ldr.w	sl, [r0]
 8012e6a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8012e6c:	9008      	str	r0, [sp, #32]
 8012e6e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 8012e72:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8012e74:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8012e78:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8012e7c:	695b      	ldr	r3, [r3, #20]
 8012e7e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8012e80:	445b      	add	r3, fp
 8012e82:	eef0 6a42 	vmov.f32	s13, s4
 8012e86:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8012e8a:	ee21 3a23 	vmul.f32	s6, s2, s7
 8012e8e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8012e92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012e96:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012e9a:	9307      	str	r3, [sp, #28]
 8012e9c:	ee17 7a90 	vmov	r7, s15
 8012ea0:	ee73 7a42 	vsub.f32	s15, s6, s4
 8012ea4:	eeb0 7a61 	vmov.f32	s14, s3
 8012ea8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012eac:	ee16 3a90 	vmov	r3, s13
 8012eb0:	fb97 f7f4 	sdiv	r7, r7, r4
 8012eb4:	ee17 ca90 	vmov	ip, s15
 8012eb8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8012ebc:	fb9c fcf4 	sdiv	ip, ip, r4
 8012ec0:	fb0c 3306 	mla	r3, ip, r6, r3
 8012ec4:	9302      	str	r3, [sp, #8]
 8012ec6:	ee17 3a10 	vmov	r3, s14
 8012eca:	44b6      	add	lr, r6
 8012ecc:	fb04 e505 	mla	r5, r4, r5, lr
 8012ed0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8012ed4:	fb07 3706 	mla	r7, r7, r6, r3
 8012ed8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8012edc:	e9cd 4700 	strd	r4, r7, [sp]
 8012ee0:	2900      	cmp	r1, #0
 8012ee2:	bfcc      	ite	gt
 8012ee4:	46a1      	movgt	r9, r4
 8012ee6:	4691      	movle	r9, r2
 8012ee8:	eba9 0306 	sub.w	r3, r9, r6
 8012eec:	f8da 4008 	ldr.w	r4, [sl, #8]
 8012ef0:	47a0      	blx	r4
 8012ef2:	b00d      	add	sp, #52	@ 0x34
 8012ef4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ef8:	2500      	movs	r5, #0
 8012efa:	462e      	mov	r6, r5
 8012efc:	e799      	b.n	8012e32 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08012f00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f04:	b0db      	sub	sp, #364	@ 0x16c
 8012f06:	461d      	mov	r5, r3
 8012f08:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8012f0c:	930a      	str	r3, [sp, #40]	@ 0x28
 8012f0e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8012f12:	930b      	str	r3, [sp, #44]	@ 0x2c
 8012f14:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8012f18:	9310      	str	r3, [sp, #64]	@ 0x40
 8012f1a:	6803      	ldr	r3, [r0, #0]
 8012f1c:	910f      	str	r1, [sp, #60]	@ 0x3c
 8012f1e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8012f20:	9009      	str	r0, [sp, #36]	@ 0x24
 8012f22:	4614      	mov	r4, r2
 8012f24:	4629      	mov	r1, r5
 8012f26:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 8012f2a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 8012f2e:	47b8      	blx	r7
 8012f30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012f32:	6058      	str	r0, [r3, #4]
 8012f34:	2800      	cmp	r0, #0
 8012f36:	f000 83a1 	beq.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012f3a:	682b      	ldr	r3, [r5, #0]
 8012f3c:	9314      	str	r3, [sp, #80]	@ 0x50
 8012f3e:	686b      	ldr	r3, [r5, #4]
 8012f40:	9315      	str	r3, [sp, #84]	@ 0x54
 8012f42:	4bc4      	ldr	r3, [pc, #784]	@ (8013254 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8012f44:	ed94 7a02 	vldr	s14, [r4, #8]
 8012f48:	7819      	ldrb	r1, [r3, #0]
 8012f4a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8012f4e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8012f52:	2900      	cmp	r1, #0
 8012f54:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012f58:	bf16      	itet	ne
 8012f5a:	4619      	movne	r1, r3
 8012f5c:	4611      	moveq	r1, r2
 8012f5e:	4613      	movne	r3, r2
 8012f60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012f64:	9116      	str	r1, [sp, #88]	@ 0x58
 8012f66:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 8012f6a:	f240 8387 	bls.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012f6e:	ed94 7a07 	vldr	s14, [r4, #28]
 8012f72:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012f76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012f7a:	f240 837f 	bls.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012f7e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 8012f82:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012f86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012f8a:	f240 8377 	bls.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012f8e:	6822      	ldr	r2, [r4, #0]
 8012f90:	4bb1      	ldr	r3, [pc, #708]	@ (8013258 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8012f92:	429a      	cmp	r2, r3
 8012f94:	f2c0 8372 	blt.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012f98:	49b0      	ldr	r1, [pc, #704]	@ (801325c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8012f9a:	6963      	ldr	r3, [r4, #20]
 8012f9c:	428a      	cmp	r2, r1
 8012f9e:	f300 836d 	bgt.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012fa2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8012fa6:	48ae      	ldr	r0, [pc, #696]	@ (8013260 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8012fa8:	33ff      	adds	r3, #255	@ 0xff
 8012faa:	4283      	cmp	r3, r0
 8012fac:	f200 8366 	bhi.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012fb0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8012fb2:	4dac      	ldr	r5, [pc, #688]	@ (8013264 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8012fb4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8012fb8:	33ff      	adds	r3, #255	@ 0xff
 8012fba:	42ab      	cmp	r3, r5
 8012fbc:	f200 835e 	bhi.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012fc0:	6862      	ldr	r2, [r4, #4]
 8012fc2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8012fc6:	33ff      	adds	r3, #255	@ 0xff
 8012fc8:	4283      	cmp	r3, r0
 8012fca:	f200 8357 	bhi.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012fce:	69a1      	ldr	r1, [r4, #24]
 8012fd0:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8012fd4:	33ff      	adds	r3, #255	@ 0xff
 8012fd6:	4283      	cmp	r3, r0
 8012fd8:	f200 8350 	bhi.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012fdc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012fde:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8012fe2:	30ff      	adds	r0, #255	@ 0xff
 8012fe4:	42a8      	cmp	r0, r5
 8012fe6:	f200 8349 	bhi.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012fea:	428a      	cmp	r2, r1
 8012fec:	f280 8110 	bge.w	8013210 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8012ff0:	429a      	cmp	r2, r3
 8012ff2:	f300 8119 	bgt.w	8013228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8012ff6:	4299      	cmp	r1, r3
 8012ff8:	f280 811d 	bge.w	8013236 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8012ffc:	2502      	movs	r5, #2
 8012ffe:	2701      	movs	r7, #1
 8013000:	46a9      	mov	r9, r5
 8013002:	46b8      	mov	r8, r7
 8013004:	f04f 0a00 	mov.w	sl, #0
 8013008:	4621      	mov	r1, r4
 801300a:	a849      	add	r0, sp, #292	@ 0x124
 801300c:	f004 f956 	bl	80172bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013010:	4622      	mov	r2, r4
 8013012:	4653      	mov	r3, sl
 8013014:	a949      	add	r1, sp, #292	@ 0x124
 8013016:	f8cd 9000 	str.w	r9, [sp]
 801301a:	a819      	add	r0, sp, #100	@ 0x64
 801301c:	f004 fa7e 	bl	801751c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013020:	4622      	mov	r2, r4
 8013022:	4653      	mov	r3, sl
 8013024:	a949      	add	r1, sp, #292	@ 0x124
 8013026:	f8cd 8000 	str.w	r8, [sp]
 801302a:	a829      	add	r0, sp, #164	@ 0xa4
 801302c:	f004 fa76 	bl	801751c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013030:	4643      	mov	r3, r8
 8013032:	4622      	mov	r2, r4
 8013034:	a949      	add	r1, sp, #292	@ 0x124
 8013036:	f8cd 9000 	str.w	r9, [sp]
 801303a:	a839      	add	r0, sp, #228	@ 0xe4
 801303c:	f004 fa6e 	bl	801751c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013040:	42af      	cmp	r7, r5
 8013042:	bfb5      	itete	lt
 8013044:	2300      	movlt	r3, #0
 8013046:	2301      	movge	r3, #1
 8013048:	930e      	strlt	r3, [sp, #56]	@ 0x38
 801304a:	930e      	strge	r3, [sp, #56]	@ 0x38
 801304c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801304e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013052:	af12      	add	r7, sp, #72	@ 0x48
 8013054:	bfb9      	ittee	lt
 8013056:	ad29      	addlt	r5, sp, #164	@ 0xa4
 8013058:	ac19      	addlt	r4, sp, #100	@ 0x64
 801305a:	ad19      	addge	r5, sp, #100	@ 0x64
 801305c:	ac29      	addge	r4, sp, #164	@ 0xa4
 801305e:	e887 0003 	stmia.w	r7, {r0, r1}
 8013062:	b928      	cbnz	r0, 8013070 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013064:	4b80      	ldr	r3, [pc, #512]	@ (8013268 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013066:	6818      	ldr	r0, [r3, #0]
 8013068:	6803      	ldr	r3, [r0, #0]
 801306a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801306c:	4798      	blx	r3
 801306e:	6038      	str	r0, [r7, #0]
 8013070:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8013072:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013076:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801307a:	930c      	str	r3, [sp, #48]	@ 0x30
 801307c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801307e:	6963      	ldr	r3, [r4, #20]
 8013080:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8013082:	440b      	add	r3, r1
 8013084:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013088:	4408      	add	r0, r1
 801308a:	b200      	sxth	r0, r0
 801308c:	4283      	cmp	r3, r0
 801308e:	900d      	str	r0, [sp, #52]	@ 0x34
 8013090:	f280 80dd 	bge.w	801324e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013094:	428b      	cmp	r3, r1
 8013096:	da08      	bge.n	80130aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013098:	2a00      	cmp	r2, #0
 801309a:	dd06      	ble.n	80130aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801309c:	1acb      	subs	r3, r1, r3
 801309e:	429a      	cmp	r2, r3
 80130a0:	f2c0 80e4 	blt.w	801326c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80130a4:	2b00      	cmp	r3, #0
 80130a6:	f300 80e2 	bgt.w	801326e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80130aa:	6967      	ldr	r7, [r4, #20]
 80130ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80130ae:	443b      	add	r3, r7
 80130b0:	461f      	mov	r7, r3
 80130b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80130b4:	1bdf      	subs	r7, r3, r7
 80130b6:	4297      	cmp	r7, r2
 80130b8:	bfa8      	it	ge
 80130ba:	4617      	movge	r7, r2
 80130bc:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 80130c0:	2f00      	cmp	r7, #0
 80130c2:	f340 8166 	ble.w	8013392 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80130c6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80130c8:	6829      	ldr	r1, [r5, #0]
 80130ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 80130ce:	f9bb 3000 	ldrsh.w	r3, [fp]
 80130d2:	6820      	ldr	r0, [r4, #0]
 80130d4:	4411      	add	r1, r2
 80130d6:	4299      	cmp	r1, r3
 80130d8:	dd1a      	ble.n	8013110 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80130da:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80130de:	440b      	add	r3, r1
 80130e0:	4402      	add	r2, r0
 80130e2:	b21b      	sxth	r3, r3
 80130e4:	429a      	cmp	r2, r3
 80130e6:	dc13      	bgt.n	8013110 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80130e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80130ea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80130ec:	681b      	ldr	r3, [r3, #0]
 80130ee:	9206      	str	r2, [sp, #24]
 80130f0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80130f2:	9205      	str	r2, [sp, #20]
 80130f4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80130f6:	9500      	str	r5, [sp, #0]
 80130f8:	e9cd b203 	strd	fp, r2, [sp, #12]
 80130fc:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 80130fe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8013100:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013104:	a912      	add	r1, sp, #72	@ 0x48
 8013106:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 801310a:	aa49      	add	r2, sp, #292	@ 0x124
 801310c:	4623      	mov	r3, r4
 801310e:	47c8      	blx	r9
 8013110:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013114:	441a      	add	r2, r3
 8013116:	6963      	ldr	r3, [r4, #20]
 8013118:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 801311c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8013120:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8013124:	68a1      	ldr	r1, [r4, #8]
 8013126:	ed94 6a08 	vldr	s12, [r4, #32]
 801312a:	6022      	str	r2, [r4, #0]
 801312c:	3301      	adds	r3, #1
 801312e:	6163      	str	r3, [r4, #20]
 8013130:	69a3      	ldr	r3, [r4, #24]
 8013132:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013136:	3b01      	subs	r3, #1
 8013138:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 801313c:	61a3      	str	r3, [r4, #24]
 801313e:	6923      	ldr	r3, [r4, #16]
 8013140:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8013144:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013148:	edd4 6a07 	vldr	s13, [r4, #28]
 801314c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8013150:	440b      	add	r3, r1
 8013152:	68e1      	ldr	r1, [r4, #12]
 8013154:	6123      	str	r3, [r4, #16]
 8013156:	ee76 6a86 	vadd.f32	s13, s13, s12
 801315a:	428b      	cmp	r3, r1
 801315c:	edc4 6a07 	vstr	s13, [r4, #28]
 8013160:	db15      	blt.n	801318e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013162:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8013166:	ee76 6a26 	vadd.f32	s13, s12, s13
 801316a:	3201      	adds	r2, #1
 801316c:	edc4 6a07 	vstr	s13, [r4, #28]
 8013170:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8013174:	6022      	str	r2, [r4, #0]
 8013176:	ee36 7a87 	vadd.f32	s14, s13, s14
 801317a:	1a5b      	subs	r3, r3, r1
 801317c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8013180:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8013184:	6123      	str	r3, [r4, #16]
 8013186:	ee77 7a27 	vadd.f32	s15, s14, s15
 801318a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801318e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013192:	441a      	add	r2, r3
 8013194:	696b      	ldr	r3, [r5, #20]
 8013196:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 801319a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 801319e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 80131a2:	68a9      	ldr	r1, [r5, #8]
 80131a4:	ed95 6a08 	vldr	s12, [r5, #32]
 80131a8:	602a      	str	r2, [r5, #0]
 80131aa:	3301      	adds	r3, #1
 80131ac:	616b      	str	r3, [r5, #20]
 80131ae:	69ab      	ldr	r3, [r5, #24]
 80131b0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80131b4:	3b01      	subs	r3, #1
 80131b6:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 80131ba:	61ab      	str	r3, [r5, #24]
 80131bc:	692b      	ldr	r3, [r5, #16]
 80131be:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 80131c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80131c6:	edd5 6a07 	vldr	s13, [r5, #28]
 80131ca:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 80131ce:	440b      	add	r3, r1
 80131d0:	68e9      	ldr	r1, [r5, #12]
 80131d2:	612b      	str	r3, [r5, #16]
 80131d4:	ee76 6a86 	vadd.f32	s13, s13, s12
 80131d8:	428b      	cmp	r3, r1
 80131da:	edc5 6a07 	vstr	s13, [r5, #28]
 80131de:	db15      	blt.n	801320c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80131e0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 80131e4:	ee76 6a26 	vadd.f32	s13, s12, s13
 80131e8:	3201      	adds	r2, #1
 80131ea:	edc5 6a07 	vstr	s13, [r5, #28]
 80131ee:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 80131f2:	602a      	str	r2, [r5, #0]
 80131f4:	ee36 7a87 	vadd.f32	s14, s13, s14
 80131f8:	1a5b      	subs	r3, r3, r1
 80131fa:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 80131fe:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8013202:	612b      	str	r3, [r5, #16]
 8013204:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013208:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801320c:	3f01      	subs	r7, #1
 801320e:	e757      	b.n	80130c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013210:	4299      	cmp	r1, r3
 8013212:	dc13      	bgt.n	801323c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013214:	429a      	cmp	r2, r3
 8013216:	da14      	bge.n	8013242 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013218:	2502      	movs	r5, #2
 801321a:	2703      	movs	r7, #3
 801321c:	46a9      	mov	r9, r5
 801321e:	f04f 0800 	mov.w	r8, #0
 8013222:	f04f 0a01 	mov.w	sl, #1
 8013226:	e6ef      	b.n	8013008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013228:	2501      	movs	r5, #1
 801322a:	2700      	movs	r7, #0
 801322c:	46a9      	mov	r9, r5
 801322e:	46b8      	mov	r8, r7
 8013230:	f04f 0a02 	mov.w	sl, #2
 8013234:	e6e8      	b.n	8013008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013236:	2501      	movs	r5, #1
 8013238:	2702      	movs	r7, #2
 801323a:	e6e1      	b.n	8013000 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 801323c:	2500      	movs	r5, #0
 801323e:	2701      	movs	r7, #1
 8013240:	e7f4      	b.n	801322c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013242:	2702      	movs	r7, #2
 8013244:	2503      	movs	r5, #3
 8013246:	f04f 0900 	mov.w	r9, #0
 801324a:	46b8      	mov	r8, r7
 801324c:	e7e9      	b.n	8013222 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801324e:	4613      	mov	r3, r2
 8013250:	e728      	b.n	80130a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013252:	bf00      	nop
 8013254:	20013f58 	.word	0x20013f58
 8013258:	fffd8f01 	.word	0xfffd8f01
 801325c:	00027100 	.word	0x00027100
 8013260:	0004e1ff 	.word	0x0004e1ff
 8013264:	0004e1fe 	.word	0x0004e1fe
 8013268:	20013f60 	.word	0x20013f60
 801326c:	4613      	mov	r3, r2
 801326e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8013270:	9111      	str	r1, [sp, #68]	@ 0x44
 8013272:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 8013276:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 801327a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 801327c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 8013280:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 8013284:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8013288:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 801328c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8013290:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8013294:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8013298:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 801329c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 80132a0:	469e      	mov	lr, r3
 80132a2:	469c      	mov	ip, r3
 80132a4:	f04f 0900 	mov.w	r9, #0
 80132a8:	f1bc 0f00 	cmp.w	ip, #0
 80132ac:	d147      	bne.n	801333e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80132ae:	eb03 0c07 	add.w	ip, r3, r7
 80132b2:	1ad7      	subs	r7, r2, r3
 80132b4:	f1b9 0f00 	cmp.w	r9, #0
 80132b8:	d009      	beq.n	80132ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80132ba:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 80132be:	9029      	str	r0, [sp, #164]	@ 0xa4
 80132c0:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 80132c4:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 80132c8:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 80132cc:	912d      	str	r1, [sp, #180]	@ 0xb4
 80132ce:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 80132d0:	9111      	str	r1, [sp, #68]	@ 0x44
 80132d2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 80132d6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 80132da:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 80132de:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 80132e2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 80132e6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 80132ea:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 80132ee:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 80132f2:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 80132f6:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 80132fa:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 80132fe:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8013302:	f04f 0800 	mov.w	r8, #0
 8013306:	f1be 0f00 	cmp.w	lr, #0
 801330a:	d031      	beq.n	8013370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 801330c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 801330e:	4431      	add	r1, r6
 8013310:	4549      	cmp	r1, r9
 8013312:	4450      	add	r0, sl
 8013314:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013318:	ee37 7a04 	vadd.f32	s14, s14, s8
 801331c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013320:	db08      	blt.n	8013334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013322:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013326:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801332a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801332e:	3001      	adds	r0, #1
 8013330:	eba1 0109 	sub.w	r1, r1, r9
 8013334:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013338:	f04f 0801 	mov.w	r8, #1
 801333c:	e7e3      	b.n	8013306 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801333e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8013340:	4431      	add	r1, r6
 8013342:	4541      	cmp	r1, r8
 8013344:	4450      	add	r0, sl
 8013346:	ee37 7a24 	vadd.f32	s14, s14, s9
 801334a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801334e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013352:	db08      	blt.n	8013366 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013354:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013358:	ee37 7a25 	vadd.f32	s14, s14, s11
 801335c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013360:	3001      	adds	r0, #1
 8013362:	eba1 0108 	sub.w	r1, r1, r8
 8013366:	f10c 3cff 	add.w	ip, ip, #4294967295
 801336a:	f04f 0901 	mov.w	r9, #1
 801336e:	e79b      	b.n	80132a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013370:	449c      	add	ip, r3
 8013372:	1aff      	subs	r7, r7, r3
 8013374:	f1b8 0f00 	cmp.w	r8, #0
 8013378:	d009      	beq.n	801338e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801337a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 801337e:	9019      	str	r0, [sp, #100]	@ 0x64
 8013380:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8013384:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8013388:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 801338c:	911d      	str	r1, [sp, #116]	@ 0x74
 801338e:	1ad2      	subs	r2, r2, r3
 8013390:	e68b      	b.n	80130aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013392:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013394:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 8013396:	2b00      	cmp	r3, #0
 8013398:	f000 80d1 	beq.w	801353e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 801339c:	ad19      	add	r5, sp, #100	@ 0x64
 801339e:	ac39      	add	r4, sp, #228	@ 0xe4
 80133a0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80133a2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80133a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80133aa:	930c      	str	r3, [sp, #48]	@ 0x30
 80133ac:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80133ae:	6963      	ldr	r3, [r4, #20]
 80133b0:	440b      	add	r3, r1
 80133b2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80133b6:	4408      	add	r0, r1
 80133b8:	b200      	sxth	r0, r0
 80133ba:	4283      	cmp	r3, r0
 80133bc:	900d      	str	r0, [sp, #52]	@ 0x34
 80133be:	f280 80c1 	bge.w	8013544 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80133c2:	428b      	cmp	r3, r1
 80133c4:	da08      	bge.n	80133d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80133c6:	2a00      	cmp	r2, #0
 80133c8:	dd06      	ble.n	80133d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80133ca:	1acb      	subs	r3, r1, r3
 80133cc:	429a      	cmp	r2, r3
 80133ce:	f2c0 80bb 	blt.w	8013548 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80133d2:	2b00      	cmp	r3, #0
 80133d4:	f300 80b9 	bgt.w	801354a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80133d8:	6967      	ldr	r7, [r4, #20]
 80133da:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80133dc:	443b      	add	r3, r7
 80133de:	461f      	mov	r7, r3
 80133e0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80133e2:	1bdf      	subs	r7, r3, r7
 80133e4:	4297      	cmp	r7, r2
 80133e6:	bfa8      	it	ge
 80133e8:	4617      	movge	r7, r2
 80133ea:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 80133ee:	2f00      	cmp	r7, #0
 80133f0:	f340 813c 	ble.w	801366c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80133f4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80133f6:	6829      	ldr	r1, [r5, #0]
 80133f8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80133fc:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013400:	6820      	ldr	r0, [r4, #0]
 8013402:	4411      	add	r1, r2
 8013404:	4299      	cmp	r1, r3
 8013406:	dd1a      	ble.n	801343e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013408:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801340c:	440b      	add	r3, r1
 801340e:	4402      	add	r2, r0
 8013410:	b21b      	sxth	r3, r3
 8013412:	429a      	cmp	r2, r3
 8013414:	dc13      	bgt.n	801343e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013416:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013418:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801341a:	681b      	ldr	r3, [r3, #0]
 801341c:	9206      	str	r2, [sp, #24]
 801341e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013420:	9205      	str	r2, [sp, #20]
 8013422:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013424:	9500      	str	r5, [sp, #0]
 8013426:	e9cd b203 	strd	fp, r2, [sp, #12]
 801342a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 801342c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801342e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013432:	a912      	add	r1, sp, #72	@ 0x48
 8013434:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8013438:	aa49      	add	r2, sp, #292	@ 0x124
 801343a:	4623      	mov	r3, r4
 801343c:	47c8      	blx	r9
 801343e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013442:	441a      	add	r2, r3
 8013444:	6963      	ldr	r3, [r4, #20]
 8013446:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 801344a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 801344e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8013452:	68a1      	ldr	r1, [r4, #8]
 8013454:	ed94 6a08 	vldr	s12, [r4, #32]
 8013458:	6022      	str	r2, [r4, #0]
 801345a:	3301      	adds	r3, #1
 801345c:	6163      	str	r3, [r4, #20]
 801345e:	69a3      	ldr	r3, [r4, #24]
 8013460:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013464:	3b01      	subs	r3, #1
 8013466:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 801346a:	61a3      	str	r3, [r4, #24]
 801346c:	6923      	ldr	r3, [r4, #16]
 801346e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8013472:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013476:	edd4 6a07 	vldr	s13, [r4, #28]
 801347a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801347e:	440b      	add	r3, r1
 8013480:	68e1      	ldr	r1, [r4, #12]
 8013482:	6123      	str	r3, [r4, #16]
 8013484:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013488:	428b      	cmp	r3, r1
 801348a:	edc4 6a07 	vstr	s13, [r4, #28]
 801348e:	db15      	blt.n	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8013490:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8013494:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013498:	3201      	adds	r2, #1
 801349a:	edc4 6a07 	vstr	s13, [r4, #28]
 801349e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80134a2:	6022      	str	r2, [r4, #0]
 80134a4:	ee36 7a87 	vadd.f32	s14, s13, s14
 80134a8:	1a5b      	subs	r3, r3, r1
 80134aa:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80134ae:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80134b2:	6123      	str	r3, [r4, #16]
 80134b4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80134b8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80134bc:	e9d5 2300 	ldrd	r2, r3, [r5]
 80134c0:	441a      	add	r2, r3
 80134c2:	696b      	ldr	r3, [r5, #20]
 80134c4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 80134c8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 80134cc:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 80134d0:	68a9      	ldr	r1, [r5, #8]
 80134d2:	ed95 6a08 	vldr	s12, [r5, #32]
 80134d6:	602a      	str	r2, [r5, #0]
 80134d8:	3301      	adds	r3, #1
 80134da:	616b      	str	r3, [r5, #20]
 80134dc:	69ab      	ldr	r3, [r5, #24]
 80134de:	ee37 7a27 	vadd.f32	s14, s14, s15
 80134e2:	3b01      	subs	r3, #1
 80134e4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 80134e8:	61ab      	str	r3, [r5, #24]
 80134ea:	692b      	ldr	r3, [r5, #16]
 80134ec:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 80134f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80134f4:	edd5 6a07 	vldr	s13, [r5, #28]
 80134f8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 80134fc:	440b      	add	r3, r1
 80134fe:	68e9      	ldr	r1, [r5, #12]
 8013500:	612b      	str	r3, [r5, #16]
 8013502:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013506:	428b      	cmp	r3, r1
 8013508:	edc5 6a07 	vstr	s13, [r5, #28]
 801350c:	db15      	blt.n	801353a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801350e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8013512:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013516:	3201      	adds	r2, #1
 8013518:	edc5 6a07 	vstr	s13, [r5, #28]
 801351c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8013520:	602a      	str	r2, [r5, #0]
 8013522:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013526:	1a5b      	subs	r3, r3, r1
 8013528:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 801352c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8013530:	612b      	str	r3, [r5, #16]
 8013532:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013536:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801353a:	3f01      	subs	r7, #1
 801353c:	e757      	b.n	80133ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801353e:	ad39      	add	r5, sp, #228	@ 0xe4
 8013540:	ac19      	add	r4, sp, #100	@ 0x64
 8013542:	e72d      	b.n	80133a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013544:	4613      	mov	r3, r2
 8013546:	e744      	b.n	80133d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013548:	4613      	mov	r3, r2
 801354a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 801354e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8013550:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8013554:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8013558:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 801355c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8013560:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 8013564:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 8013568:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 801356c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 801356e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 8013572:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 8013576:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 801357a:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 801357e:	960e      	str	r6, [sp, #56]	@ 0x38
 8013580:	469e      	mov	lr, r3
 8013582:	461f      	mov	r7, r3
 8013584:	f04f 0900 	mov.w	r9, #0
 8013588:	2f00      	cmp	r7, #0
 801358a:	d146      	bne.n	801361a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801358c:	449c      	add	ip, r3
 801358e:	1ad7      	subs	r7, r2, r3
 8013590:	f1b9 0f00 	cmp.w	r9, #0
 8013594:	d009      	beq.n	80135aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013596:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 801359a:	9039      	str	r0, [sp, #228]	@ 0xe4
 801359c:	913d      	str	r1, [sp, #244]	@ 0xf4
 801359e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 80135a2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 80135a6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 80135aa:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 80135ac:	910e      	str	r1, [sp, #56]	@ 0x38
 80135ae:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 80135b2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 80135b6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 80135ba:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 80135be:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 80135c2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 80135c6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 80135ca:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 80135ce:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 80135d2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 80135d6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 80135da:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 80135de:	f04f 0800 	mov.w	r8, #0
 80135e2:	f1be 0f00 	cmp.w	lr, #0
 80135e6:	d030      	beq.n	801364a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80135e8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 80135ea:	4431      	add	r1, r6
 80135ec:	4549      	cmp	r1, r9
 80135ee:	4450      	add	r0, sl
 80135f0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80135f4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80135f8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80135fc:	db08      	blt.n	8013610 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80135fe:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013602:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013606:	ee37 7a06 	vadd.f32	s14, s14, s12
 801360a:	3001      	adds	r0, #1
 801360c:	eba1 0109 	sub.w	r1, r1, r9
 8013610:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013614:	f04f 0801 	mov.w	r8, #1
 8013618:	e7e3      	b.n	80135e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801361a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801361c:	4431      	add	r1, r6
 801361e:	4541      	cmp	r1, r8
 8013620:	4450      	add	r0, sl
 8013622:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013626:	ee77 7a84 	vadd.f32	s15, s15, s8
 801362a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801362e:	db08      	blt.n	8013642 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013630:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013634:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013638:	ee77 7a86 	vadd.f32	s15, s15, s12
 801363c:	3001      	adds	r0, #1
 801363e:	eba1 0108 	sub.w	r1, r1, r8
 8013642:	3f01      	subs	r7, #1
 8013644:	f04f 0901 	mov.w	r9, #1
 8013648:	e79e      	b.n	8013588 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801364a:	449c      	add	ip, r3
 801364c:	1aff      	subs	r7, r7, r3
 801364e:	f1b8 0f00 	cmp.w	r8, #0
 8013652:	d009      	beq.n	8013668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013654:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8013658:	9019      	str	r0, [sp, #100]	@ 0x64
 801365a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 801365e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8013662:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8013666:	911d      	str	r1, [sp, #116]	@ 0x74
 8013668:	1ad2      	subs	r2, r2, r3
 801366a:	e6b5      	b.n	80133d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801366c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801366e:	681b      	ldr	r3, [r3, #0]
 8013670:	b923      	cbnz	r3, 801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013672:	4b04      	ldr	r3, [pc, #16]	@ (8013684 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013674:	6818      	ldr	r0, [r3, #0]
 8013676:	6803      	ldr	r3, [r0, #0]
 8013678:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801367a:	4798      	blx	r3
 801367c:	b05b      	add	sp, #364	@ 0x16c
 801367e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013682:	bf00      	nop
 8013684:	20013f60 	.word	0x20013f60

08013688 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013688:	b570      	push	{r4, r5, r6, lr}
 801368a:	4604      	mov	r4, r0
 801368c:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013690:	9805      	ldr	r0, [sp, #20]
 8013692:	6061      	str	r1, [r4, #4]
 8013694:	2500      	movs	r5, #0
 8013696:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801369a:	8263      	strh	r3, [r4, #18]
 801369c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80136a0:	8025      	strh	r5, [r4, #0]
 80136a2:	7221      	strb	r1, [r4, #8]
 80136a4:	7266      	strb	r6, [r4, #9]
 80136a6:	60e0      	str	r0, [r4, #12]
 80136a8:	8222      	strh	r2, [r4, #16]
 80136aa:	82a3      	strh	r3, [r4, #20]
 80136ac:	82e5      	strh	r5, [r4, #22]
 80136ae:	8325      	strh	r5, [r4, #24]
 80136b0:	8365      	strh	r5, [r4, #26]
 80136b2:	83a5      	strh	r5, [r4, #28]
 80136b4:	83e5      	strh	r5, [r4, #30]
 80136b6:	8425      	strh	r5, [r4, #32]
 80136b8:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 80136bc:	b32e      	cbz	r6, 801370a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80136be:	6803      	ldr	r3, [r0, #0]
 80136c0:	695b      	ldr	r3, [r3, #20]
 80136c2:	4798      	blx	r3
 80136c4:	4606      	mov	r6, r0
 80136c6:	b300      	cbz	r0, 801370a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80136c8:	68e0      	ldr	r0, [r4, #12]
 80136ca:	6803      	ldr	r3, [r0, #0]
 80136cc:	4631      	mov	r1, r6
 80136ce:	68db      	ldr	r3, [r3, #12]
 80136d0:	4798      	blx	r3
 80136d2:	4605      	mov	r5, r0
 80136d4:	b1c8      	cbz	r0, 801370a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80136d6:	7b43      	ldrb	r3, [r0, #13]
 80136d8:	7a82      	ldrb	r2, [r0, #10]
 80136da:	005b      	lsls	r3, r3, #1
 80136dc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80136e0:	4313      	orrs	r3, r2
 80136e2:	8423      	strh	r3, [r4, #32]
 80136e4:	7a63      	ldrb	r3, [r4, #9]
 80136e6:	2b06      	cmp	r3, #6
 80136e8:	d10f      	bne.n	801370a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80136ea:	68e0      	ldr	r0, [r4, #12]
 80136ec:	6803      	ldr	r3, [r0, #0]
 80136ee:	462a      	mov	r2, r5
 80136f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80136f2:	4631      	mov	r1, r6
 80136f4:	4798      	blx	r3
 80136f6:	7b6b      	ldrb	r3, [r5, #13]
 80136f8:	005b      	lsls	r3, r3, #1
 80136fa:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80136fe:	7aab      	ldrb	r3, [r5, #10]
 8013700:	4313      	orrs	r3, r2
 8013702:	4418      	add	r0, r3
 8013704:	8c23      	ldrh	r3, [r4, #32]
 8013706:	4418      	add	r0, r3
 8013708:	8420      	strh	r0, [r4, #32]
 801370a:	4620      	mov	r0, r4
 801370c:	bd70      	pop	{r4, r5, r6, pc}

0801370e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801370e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013712:	2400      	movs	r4, #0
 8013714:	b085      	sub	sp, #20
 8013716:	4681      	mov	r9, r0
 8013718:	4688      	mov	r8, r1
 801371a:	4692      	mov	sl, r2
 801371c:	469b      	mov	fp, r3
 801371e:	4627      	mov	r7, r4
 8013720:	4625      	mov	r5, r4
 8013722:	4626      	mov	r6, r4
 8013724:	4554      	cmp	r4, sl
 8013726:	da2a      	bge.n	801377e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013728:	2300      	movs	r3, #0
 801372a:	9303      	str	r3, [sp, #12]
 801372c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013730:	429d      	cmp	r5, r3
 8013732:	d004      	beq.n	801373e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013734:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013738:	429d      	cmp	r5, r3
 801373a:	bf18      	it	ne
 801373c:	462f      	movne	r7, r5
 801373e:	ab03      	add	r3, sp, #12
 8013740:	4642      	mov	r2, r8
 8013742:	4659      	mov	r1, fp
 8013744:	4648      	mov	r0, r9
 8013746:	f003 fbcf 	bl	8016ee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801374a:	4605      	mov	r5, r0
 801374c:	b1b8      	cbz	r0, 801377e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801374e:	280a      	cmp	r0, #10
 8013750:	d015      	beq.n	801377e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013752:	9a03      	ldr	r2, [sp, #12]
 8013754:	b18a      	cbz	r2, 801377a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013756:	7b50      	ldrb	r0, [r2, #13]
 8013758:	7a93      	ldrb	r3, [r2, #10]
 801375a:	8895      	ldrh	r5, [r2, #4]
 801375c:	0040      	lsls	r0, r0, #1
 801375e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8013762:	4303      	orrs	r3, r0
 8013764:	9301      	str	r3, [sp, #4]
 8013766:	f8d8 3000 	ldr.w	r3, [r8]
 801376a:	4639      	mov	r1, r7
 801376c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801376e:	4640      	mov	r0, r8
 8013770:	4798      	blx	r3
 8013772:	9b01      	ldr	r3, [sp, #4]
 8013774:	4418      	add	r0, r3
 8013776:	4406      	add	r6, r0
 8013778:	b2b6      	uxth	r6, r6
 801377a:	3401      	adds	r4, #1
 801377c:	e7d2      	b.n	8013724 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801377e:	4630      	mov	r0, r6
 8013780:	b005      	add	sp, #20
 8013782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013786 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8013786:	2a02      	cmp	r2, #2
 8013788:	b530      	push	{r4, r5, lr}
 801378a:	d011      	beq.n	80137b0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801378c:	2a03      	cmp	r2, #3
 801378e:	d01c      	beq.n	80137ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8013790:	2a01      	cmp	r2, #1
 8013792:	d10c      	bne.n	80137ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013794:	888b      	ldrh	r3, [r1, #4]
 8013796:	8801      	ldrh	r1, [r0, #0]
 8013798:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801379c:	8844      	ldrh	r4, [r0, #2]
 801379e:	8004      	strh	r4, [r0, #0]
 80137a0:	1a5b      	subs	r3, r3, r1
 80137a2:	1a9b      	subs	r3, r3, r2
 80137a4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80137a8:	8043      	strh	r3, [r0, #2]
 80137aa:	8081      	strh	r1, [r0, #4]
 80137ac:	80c2      	strh	r2, [r0, #6]
 80137ae:	bd30      	pop	{r4, r5, pc}
 80137b0:	88cb      	ldrh	r3, [r1, #6]
 80137b2:	8842      	ldrh	r2, [r0, #2]
 80137b4:	1a9b      	subs	r3, r3, r2
 80137b6:	88c2      	ldrh	r2, [r0, #6]
 80137b8:	1a9b      	subs	r3, r3, r2
 80137ba:	888a      	ldrh	r2, [r1, #4]
 80137bc:	8801      	ldrh	r1, [r0, #0]
 80137be:	8043      	strh	r3, [r0, #2]
 80137c0:	1a52      	subs	r2, r2, r1
 80137c2:	8881      	ldrh	r1, [r0, #4]
 80137c4:	1a52      	subs	r2, r2, r1
 80137c6:	8002      	strh	r2, [r0, #0]
 80137c8:	e7f1      	b.n	80137ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80137ca:	88cb      	ldrh	r3, [r1, #6]
 80137cc:	8841      	ldrh	r1, [r0, #2]
 80137ce:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80137d2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80137d6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80137da:	8045      	strh	r5, [r0, #2]
 80137dc:	1a5b      	subs	r3, r3, r1
 80137de:	1a9b      	subs	r3, r3, r2
 80137e0:	8003      	strh	r3, [r0, #0]
 80137e2:	8082      	strh	r2, [r0, #4]
 80137e4:	80c4      	strh	r4, [r0, #6]
 80137e6:	e7e2      	b.n	80137ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080137e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80137e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137ec:	b09f      	sub	sp, #124	@ 0x7c
 80137ee:	920f      	str	r2, [sp, #60]	@ 0x3c
 80137f0:	9312      	str	r3, [sp, #72]	@ 0x48
 80137f2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80137f4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80137f6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80137f8:	8812      	ldrh	r2, [r2, #0]
 80137fa:	889b      	ldrh	r3, [r3, #4]
 80137fc:	900e      	str	r0, [sp, #56]	@ 0x38
 80137fe:	4413      	add	r3, r2
 8013800:	6828      	ldr	r0, [r5, #0]
 8013802:	9117      	str	r1, [sp, #92]	@ 0x5c
 8013804:	b21b      	sxth	r3, r3
 8013806:	9311      	str	r3, [sp, #68]	@ 0x44
 8013808:	6803      	ldr	r3, [r0, #0]
 801380a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 801380e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013810:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8013814:	4798      	blx	r3
 8013816:	682b      	ldr	r3, [r5, #0]
 8013818:	9013      	str	r0, [sp, #76]	@ 0x4c
 801381a:	7b1a      	ldrb	r2, [r3, #12]
 801381c:	7adb      	ldrb	r3, [r3, #11]
 801381e:	9215      	str	r2, [sp, #84]	@ 0x54
 8013820:	9316      	str	r3, [sp, #88]	@ 0x58
 8013822:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8013826:	2c00      	cmp	r4, #0
 8013828:	d067      	beq.n	80138fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801382a:	7c2b      	ldrb	r3, [r5, #16]
 801382c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801382e:	2b06      	cmp	r3, #6
 8013830:	bf14      	ite	ne
 8013832:	2301      	movne	r3, #1
 8013834:	2302      	moveq	r3, #2
 8013836:	4413      	add	r3, r2
 8013838:	f04f 0900 	mov.w	r9, #0
 801383c:	9310      	str	r3, [sp, #64]	@ 0x40
 801383e:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8013842:	464c      	mov	r4, r9
 8013844:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8013848:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801384a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801384c:	4293      	cmp	r3, r2
 801384e:	f280 808b 	bge.w	8013968 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8013852:	2300      	movs	r3, #0
 8013854:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8013858:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 801385c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013860:	429c      	cmp	r4, r3
 8013862:	d006      	beq.n	8013872 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8013864:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013866:	f242 020b 	movw	r2, #8203	@ 0x200b
 801386a:	4294      	cmp	r4, r2
 801386c:	bf18      	it	ne
 801386e:	4623      	movne	r3, r4
 8013870:	930c      	str	r3, [sp, #48]	@ 0x30
 8013872:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013874:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8013876:	682a      	ldr	r2, [r5, #0]
 8013878:	428b      	cmp	r3, r1
 801387a:	db40      	blt.n	80138fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801387c:	6813      	ldr	r3, [r2, #0]
 801387e:	4610      	mov	r0, r2
 8013880:	695b      	ldr	r3, [r3, #20]
 8013882:	4798      	blx	r3
 8013884:	4604      	mov	r4, r0
 8013886:	6828      	ldr	r0, [r5, #0]
 8013888:	6803      	ldr	r3, [r0, #0]
 801388a:	aa1d      	add	r2, sp, #116	@ 0x74
 801388c:	689f      	ldr	r7, [r3, #8]
 801388e:	4621      	mov	r1, r4
 8013890:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8013894:	47b8      	blx	r7
 8013896:	901c      	str	r0, [sp, #112]	@ 0x70
 8013898:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801389c:	429c      	cmp	r4, r3
 801389e:	f000 80ea 	beq.w	8013a76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80138a2:	f242 030b 	movw	r3, #8203	@ 0x200b
 80138a6:	429c      	cmp	r4, r3
 80138a8:	f000 80e5 	beq.w	8013a76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80138ac:	2c00      	cmp	r4, #0
 80138ae:	f000 810c 	beq.w	8013aca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80138b2:	2c0a      	cmp	r4, #10
 80138b4:	d05e      	beq.n	8013974 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 80138b6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80138b8:	b36a      	cbz	r2, 8013916 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80138ba:	8894      	ldrh	r4, [r2, #4]
 80138bc:	f1bb 0f00 	cmp.w	fp, #0
 80138c0:	d03a      	beq.n	8013938 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 80138c2:	f892 900d 	ldrb.w	r9, [r2, #13]
 80138c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80138ca:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 80138ce:	f892 900a 	ldrb.w	r9, [r2, #10]
 80138d2:	f1bb 0f01 	cmp.w	fp, #1
 80138d6:	ea49 0903 	orr.w	r9, r9, r3
 80138da:	d133      	bne.n	8013944 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 80138dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80138de:	eba6 0609 	sub.w	r6, r6, r9
 80138e2:	2b00      	cmp	r3, #0
 80138e4:	d14d      	bne.n	8013982 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80138e6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80138e8:	eb09 0306 	add.w	r3, r9, r6
 80138ec:	4413      	add	r3, r2
 80138ee:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80138f0:	f9b2 2000 	ldrsh.w	r2, [r2]
 80138f4:	4293      	cmp	r3, r2
 80138f6:	da4e      	bge.n	8013996 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80138f8:	e036      	b.n	8013968 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80138fa:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 80138fc:	e79c      	b.n	8013838 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 80138fe:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8013902:	9301      	str	r3, [sp, #4]
 8013904:	ab1d      	add	r3, sp, #116	@ 0x74
 8013906:	9300      	str	r3, [sp, #0]
 8013908:	4659      	mov	r1, fp
 801390a:	ab1c      	add	r3, sp, #112	@ 0x70
 801390c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801390e:	f003 fb34 	bl	8016f7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013912:	4604      	mov	r4, r0
 8013914:	e7c0      	b.n	8013898 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013916:	6828      	ldr	r0, [r5, #0]
 8013918:	6803      	ldr	r3, [r0, #0]
 801391a:	691b      	ldr	r3, [r3, #16]
 801391c:	4798      	blx	r3
 801391e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013922:	4298      	cmp	r0, r3
 8013924:	f000 80a7 	beq.w	8013a76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013928:	f242 030b 	movw	r3, #8203	@ 0x200b
 801392c:	4298      	cmp	r0, r3
 801392e:	f000 80a2 	beq.w	8013a76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013932:	f1bb 0f00 	cmp.w	fp, #0
 8013936:	d100      	bne.n	801393a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8013938:	444e      	add	r6, r9
 801393a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801393c:	2a00      	cmp	r2, #0
 801393e:	d1c0      	bne.n	80138c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8013940:	4691      	mov	r9, r2
 8013942:	e098      	b.n	8013a76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013944:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013946:	2b00      	cmp	r3, #0
 8013948:	f000 80c1 	beq.w	8013ace <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 801394c:	f1bb 0f00 	cmp.w	fp, #0
 8013950:	d117      	bne.n	8013982 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8013952:	6828      	ldr	r0, [r5, #0]
 8013954:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013956:	6803      	ldr	r3, [r0, #0]
 8013958:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801395a:	4798      	blx	r3
 801395c:	4406      	add	r6, r0
 801395e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8013960:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013962:	1af3      	subs	r3, r6, r3
 8013964:	4293      	cmp	r3, r2
 8013966:	dd16      	ble.n	8013996 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8013968:	2c00      	cmp	r4, #0
 801396a:	f000 80ae 	beq.w	8013aca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 801396e:	2c0a      	cmp	r4, #10
 8013970:	f040 809c 	bne.w	8013aac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 8013974:	240a      	movs	r4, #10
 8013976:	fab4 f084 	clz	r0, r4
 801397a:	0940      	lsrs	r0, r0, #5
 801397c:	b01f      	add	sp, #124	@ 0x7c
 801397e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013982:	6828      	ldr	r0, [r5, #0]
 8013984:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013986:	6803      	ldr	r3, [r0, #0]
 8013988:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801398a:	4798      	blx	r3
 801398c:	f1bb 0f01 	cmp.w	fp, #1
 8013990:	eba6 0600 	sub.w	r6, r6, r0
 8013994:	d0a7      	beq.n	80138e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8013996:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8013998:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801399a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801399e:	f9b3 8000 	ldrsh.w	r8, [r3]
 80139a2:	7b43      	ldrb	r3, [r0, #13]
 80139a4:	015b      	lsls	r3, r3, #5
 80139a6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80139aa:	7983      	ldrb	r3, [r0, #6]
 80139ac:	4431      	add	r1, r6
 80139ae:	4313      	orrs	r3, r2
 80139b0:	440b      	add	r3, r1
 80139b2:	4543      	cmp	r3, r8
 80139b4:	db5f      	blt.n	8013a76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80139b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80139b8:	4299      	cmp	r1, r3
 80139ba:	da5c      	bge.n	8013a76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80139bc:	6828      	ldr	r0, [r5, #0]
 80139be:	6803      	ldr	r3, [r0, #0]
 80139c0:	45b0      	cmp	r8, r6
 80139c2:	bfc8      	it	gt
 80139c4:	eba8 0806 	subgt.w	r8, r8, r6
 80139c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80139ca:	bfcc      	ite	gt
 80139cc:	fa1f f888 	uxthgt.w	r8, r8
 80139d0:	f04f 0800 	movle.w	r8, #0
 80139d4:	4798      	blx	r3
 80139d6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80139d8:	7b53      	ldrb	r3, [r2, #13]
 80139da:	00d9      	lsls	r1, r3, #3
 80139dc:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 80139e0:	7a11      	ldrb	r1, [r2, #8]
 80139e2:	4339      	orrs	r1, r7
 80139e4:	065f      	lsls	r7, r3, #25
 80139e6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80139e8:	bf44      	itt	mi
 80139ea:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 80139ee:	b209      	sxthmi	r1, r1
 80139f0:	19c7      	adds	r7, r0, r7
 80139f2:	1a7f      	subs	r7, r7, r1
 80139f4:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 80139f6:	b2bf      	uxth	r7, r7
 80139f8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80139fc:	fa0f fa87 	sxth.w	sl, r7
 8013a00:	4551      	cmp	r1, sl
 8013a02:	dd3c      	ble.n	8013a7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8013a04:	011b      	lsls	r3, r3, #4
 8013a06:	79d0      	ldrb	r0, [r2, #7]
 8013a08:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013a0c:	4303      	orrs	r3, r0
 8013a0e:	449a      	add	sl, r3
 8013a10:	4551      	cmp	r1, sl
 8013a12:	dc30      	bgt.n	8013a76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013a14:	1bcf      	subs	r7, r1, r7
 8013a16:	b23f      	sxth	r7, r7
 8013a18:	468a      	mov	sl, r1
 8013a1a:	9219      	str	r2, [sp, #100]	@ 0x64
 8013a1c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013a1e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8013a20:	6828      	ldr	r0, [r5, #0]
 8013a22:	2a00      	cmp	r2, #0
 8013a24:	d12d      	bne.n	8013a82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8013a26:	9318      	str	r3, [sp, #96]	@ 0x60
 8013a28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013a2a:	6819      	ldr	r1, [r3, #0]
 8013a2c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 8013a2e:	6801      	ldr	r1, [r0, #0]
 8013a30:	9314      	str	r3, [sp, #80]	@ 0x50
 8013a32:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8013a34:	4788      	blx	r1
 8013a36:	79a9      	ldrb	r1, [r5, #6]
 8013a38:	910b      	str	r1, [sp, #44]	@ 0x2c
 8013a3a:	7ba9      	ldrb	r1, [r5, #14]
 8013a3c:	910a      	str	r1, [sp, #40]	@ 0x28
 8013a3e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8013a42:	9109      	str	r1, [sp, #36]	@ 0x24
 8013a44:	68a9      	ldr	r1, [r5, #8]
 8013a46:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8013a48:	9306      	str	r3, [sp, #24]
 8013a4a:	b2bf      	uxth	r7, r7
 8013a4c:	e9cd 8702 	strd	r8, r7, [sp, #8]
 8013a50:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8013a52:	9304      	str	r3, [sp, #16]
 8013a54:	44b0      	add	r8, r6
 8013a56:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8013a5a:	fa0f f388 	sxth.w	r3, r8
 8013a5e:	9300      	str	r3, [sp, #0]
 8013a60:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8013a62:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013a64:	9205      	str	r2, [sp, #20]
 8013a66:	f8cd a004 	str.w	sl, [sp, #4]
 8013a6a:	681a      	ldr	r2, [r3, #0]
 8013a6c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8013a6e:	685b      	ldr	r3, [r3, #4]
 8013a70:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8013a72:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8013a74:	47b8      	blx	r7
 8013a76:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013a78:	3301      	adds	r3, #1
 8013a7a:	930d      	str	r3, [sp, #52]	@ 0x34
 8013a7c:	e6e4      	b.n	8013848 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 8013a7e:	2700      	movs	r7, #0
 8013a80:	e7cb      	b.n	8013a1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 8013a82:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013a84:	f8d2 c008 	ldr.w	ip, [r2, #8]
 8013a88:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013a8a:	f8dc 1000 	ldr.w	r1, [ip]
 8013a8e:	e9cd 6204 	strd	r6, r2, [sp, #16]
 8013a92:	79aa      	ldrb	r2, [r5, #6]
 8013a94:	9203      	str	r2, [sp, #12]
 8013a96:	7baa      	ldrb	r2, [r5, #14]
 8013a98:	9202      	str	r2, [sp, #8]
 8013a9a:	68aa      	ldr	r2, [r5, #8]
 8013a9c:	e9cd 0200 	strd	r0, r2, [sp]
 8013aa0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013aa2:	688f      	ldr	r7, [r1, #8]
 8013aa4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8013aa6:	4660      	mov	r0, ip
 8013aa8:	47b8      	blx	r7
 8013aaa:	e7e4      	b.n	8013a76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013aac:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8013aae:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8013ab0:	3501      	adds	r5, #1
 8013ab2:	429d      	cmp	r5, r3
 8013ab4:	f6bf af5f 	bge.w	8013976 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8013ab8:	4659      	mov	r1, fp
 8013aba:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8013abc:	f7f2 fd92 	bl	80065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013ac0:	4604      	mov	r4, r0
 8013ac2:	b110      	cbz	r0, 8013aca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8013ac4:	280a      	cmp	r0, #10
 8013ac6:	d1f2      	bne.n	8013aae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8013ac8:	e754      	b.n	8013974 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8013aca:	2400      	movs	r4, #0
 8013acc:	e753      	b.n	8013976 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8013ace:	f1bb 0f00 	cmp.w	fp, #0
 8013ad2:	f43f af44 	beq.w	801395e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8013ad6:	e75e      	b.n	8013996 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08013ad8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8013ad8:	b530      	push	{r4, r5, lr}
 8013ada:	8ac4      	ldrh	r4, [r0, #22]
 8013adc:	8b45      	ldrh	r5, [r0, #26]
 8013ade:	8343      	strh	r3, [r0, #26]
 8013ae0:	442c      	add	r4, r5
 8013ae2:	1ae4      	subs	r4, r4, r3
 8013ae4:	82c4      	strh	r4, [r0, #22]
 8013ae6:	8b83      	ldrh	r3, [r0, #28]
 8013ae8:	8b04      	ldrh	r4, [r0, #24]
 8013aea:	4422      	add	r2, r4
 8013aec:	440c      	add	r4, r1
 8013aee:	1a59      	subs	r1, r3, r1
 8013af0:	83c2      	strh	r2, [r0, #30]
 8013af2:	8304      	strh	r4, [r0, #24]
 8013af4:	8381      	strh	r1, [r0, #28]
 8013af6:	bd30      	pop	{r4, r5, pc}

08013af8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8013af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013afc:	4604      	mov	r4, r0
 8013afe:	8a47      	ldrh	r7, [r0, #18]
 8013b00:	68c0      	ldr	r0, [r0, #12]
 8013b02:	6803      	ldr	r3, [r0, #0]
 8013b04:	b085      	sub	sp, #20
 8013b06:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013b08:	4798      	blx	r3
 8013b0a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8013b0e:	7a63      	ldrb	r3, [r4, #9]
 8013b10:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8013b14:	42b7      	cmp	r7, r6
 8013b16:	f103 33ff 	add.w	r3, r3, #4294967295
 8013b1a:	bfac      	ite	ge
 8013b1c:	f04f 0900 	movge.w	r9, #0
 8013b20:	f04f 0901 	movlt.w	r9, #1
 8013b24:	2b05      	cmp	r3, #5
 8013b26:	d804      	bhi.n	8013b32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8013b28:	e8df f003 	tbb	[pc, r3]
 8013b2c:	470e0854 	.word	0x470e0854
 8013b30:	4c4c      	.short	0x4c4c
 8013b32:	2500      	movs	r5, #0
 8013b34:	46a9      	mov	r9, r5
 8013b36:	462e      	mov	r6, r5
 8013b38:	462f      	mov	r7, r5
 8013b3a:	e00d      	b.n	8013b58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013b3c:	42b7      	cmp	r7, r6
 8013b3e:	bfb4      	ite	lt
 8013b40:	2600      	movlt	r6, #0
 8013b42:	2601      	movge	r6, #1
 8013b44:	2500      	movs	r5, #0
 8013b46:	e7f7      	b.n	8013b38 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013b48:	42b7      	cmp	r7, r6
 8013b4a:	464d      	mov	r5, r9
 8013b4c:	f04f 0900 	mov.w	r9, #0
 8013b50:	bfb4      	ite	lt
 8013b52:	2600      	movlt	r6, #0
 8013b54:	2601      	movge	r6, #1
 8013b56:	464f      	mov	r7, r9
 8013b58:	f04f 0800 	mov.w	r8, #0
 8013b5c:	f8a4 8016 	strh.w	r8, [r4, #22]
 8013b60:	f8a4 8018 	strh.w	r8, [r4, #24]
 8013b64:	f8cd 8004 	str.w	r8, [sp, #4]
 8013b68:	2300      	movs	r3, #0
 8013b6a:	9303      	str	r3, [sp, #12]
 8013b6c:	8823      	ldrh	r3, [r4, #0]
 8013b6e:	2b20      	cmp	r3, #32
 8013b70:	d034      	beq.n	8013bdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8013b72:	f242 010b 	movw	r1, #8203	@ 0x200b
 8013b76:	1a5a      	subs	r2, r3, r1
 8013b78:	f1d2 0a00 	rsbs	sl, r2, #0
 8013b7c:	eb4a 0a02 	adc.w	sl, sl, r2
 8013b80:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8013b84:	4293      	cmp	r3, r2
 8013b86:	d009      	beq.n	8013b9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013b88:	428b      	cmp	r3, r1
 8013b8a:	9a01      	ldr	r2, [sp, #4]
 8013b8c:	bf18      	it	ne
 8013b8e:	461a      	movne	r2, r3
 8013b90:	9201      	str	r2, [sp, #4]
 8013b92:	bf0c      	ite	eq
 8013b94:	f04f 0a01 	moveq.w	sl, #1
 8013b98:	f04f 0a00 	movne.w	sl, #0
 8013b9c:	ab03      	add	r3, sp, #12
 8013b9e:	68e2      	ldr	r2, [r4, #12]
 8013ba0:	7a21      	ldrb	r1, [r4, #8]
 8013ba2:	6860      	ldr	r0, [r4, #4]
 8013ba4:	f003 f9a0 	bl	8016ee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013ba8:	8020      	strh	r0, [r4, #0]
 8013baa:	b9d8      	cbnz	r0, 8013be4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8013bac:	8ba2      	ldrh	r2, [r4, #28]
 8013bae:	2300      	movs	r3, #0
 8013bb0:	4611      	mov	r1, r2
 8013bb2:	4620      	mov	r0, r4
 8013bb4:	f7ff ff90 	bl	8013ad8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013bb8:	e06e      	b.n	8013c98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8013bba:	2500      	movs	r5, #0
 8013bbc:	46a9      	mov	r9, r5
 8013bbe:	462e      	mov	r6, r5
 8013bc0:	2701      	movs	r7, #1
 8013bc2:	e7c9      	b.n	8013b58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013bc4:	42b7      	cmp	r7, r6
 8013bc6:	f04f 0500 	mov.w	r5, #0
 8013bca:	bfb4      	ite	lt
 8013bcc:	2700      	movlt	r7, #0
 8013bce:	2701      	movge	r7, #1
 8013bd0:	462e      	mov	r6, r5
 8013bd2:	e7c1      	b.n	8013b58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013bd4:	2500      	movs	r5, #0
 8013bd6:	46a9      	mov	r9, r5
 8013bd8:	2601      	movs	r6, #1
 8013bda:	e7ad      	b.n	8013b38 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013bdc:	9301      	str	r3, [sp, #4]
 8013bde:	f04f 0a01 	mov.w	sl, #1
 8013be2:	e7db      	b.n	8013b9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013be4:	8b63      	ldrh	r3, [r4, #26]
 8013be6:	280a      	cmp	r0, #10
 8013be8:	f103 0301 	add.w	r3, r3, #1
 8013bec:	8363      	strh	r3, [r4, #26]
 8013bee:	d0dd      	beq.n	8013bac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8013bf0:	9a03      	ldr	r2, [sp, #12]
 8013bf2:	bb62      	cbnz	r2, 8013c4e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8013bf4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013bf8:	4298      	cmp	r0, r3
 8013bfa:	d003      	beq.n	8013c04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8013bfc:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013c00:	4298      	cmp	r0, r3
 8013c02:	d1b1      	bne.n	8013b68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013c04:	8823      	ldrh	r3, [r4, #0]
 8013c06:	8ba1      	ldrh	r1, [r4, #28]
 8013c08:	2b20      	cmp	r3, #32
 8013c0a:	d003      	beq.n	8013c14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8013c0c:	f242 000b 	movw	r0, #8203	@ 0x200b
 8013c10:	4283      	cmp	r3, r0
 8013c12:	d131      	bne.n	8013c78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8013c14:	f1ba 0f00 	cmp.w	sl, #0
 8013c18:	bf0a      	itet	eq
 8013c1a:	4688      	moveq	r8, r1
 8013c1c:	4650      	movne	r0, sl
 8013c1e:	2001      	moveq	r0, #1
 8013c20:	440a      	add	r2, r1
 8013c22:	8b23      	ldrh	r3, [r4, #24]
 8013c24:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8013c28:	b292      	uxth	r2, r2
 8013c2a:	83a2      	strh	r2, [r4, #28]
 8013c2c:	4413      	add	r3, r2
 8013c2e:	f1b9 0f00 	cmp.w	r9, #0
 8013c32:	d102      	bne.n	8013c3a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8013c34:	2d00      	cmp	r5, #0
 8013c36:	d042      	beq.n	8013cbe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8013c38:	b300      	cbz	r0, 8013c7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8013c3a:	8c21      	ldrh	r1, [r4, #32]
 8013c3c:	4419      	add	r1, r3
 8013c3e:	458c      	cmp	ip, r1
 8013c40:	da37      	bge.n	8013cb2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013c42:	8ae1      	ldrh	r1, [r4, #22]
 8013c44:	2900      	cmp	r1, #0
 8013c46:	d034      	beq.n	8013cb2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013c48:	4563      	cmp	r3, ip
 8013c4a:	dd8d      	ble.n	8013b68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013c4c:	e01d      	b.n	8013c8a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8013c4e:	8893      	ldrh	r3, [r2, #4]
 8013c50:	8023      	strh	r3, [r4, #0]
 8013c52:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8013c56:	9901      	ldr	r1, [sp, #4]
 8013c58:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8013c5c:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 8013c60:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8013c64:	ea4b 0b00 	orr.w	fp, fp, r0
 8013c68:	68e0      	ldr	r0, [r4, #12]
 8013c6a:	6803      	ldr	r3, [r0, #0]
 8013c6c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013c6e:	4798      	blx	r3
 8013c70:	eb0b 0200 	add.w	r2, fp, r0
 8013c74:	b292      	uxth	r2, r2
 8013c76:	e7c5      	b.n	8013c04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8013c78:	2000      	movs	r0, #0
 8013c7a:	e7d1      	b.n	8013c20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8013c7c:	4563      	cmp	r3, ip
 8013c7e:	f77f af73 	ble.w	8013b68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013c82:	8ae3      	ldrh	r3, [r4, #22]
 8013c84:	2b00      	cmp	r3, #0
 8013c86:	f43f af6f 	beq.w	8013b68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013c8a:	2301      	movs	r3, #1
 8013c8c:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8013c90:	8c22      	ldrh	r2, [r4, #32]
 8013c92:	8be3      	ldrh	r3, [r4, #30]
 8013c94:	4413      	add	r3, r2
 8013c96:	83e3      	strh	r3, [r4, #30]
 8013c98:	68e0      	ldr	r0, [r4, #12]
 8013c9a:	6803      	ldr	r3, [r0, #0]
 8013c9c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013c9e:	4798      	blx	r3
 8013ca0:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8013ca4:	4418      	add	r0, r3
 8013ca6:	8a63      	ldrh	r3, [r4, #18]
 8013ca8:	1a18      	subs	r0, r3, r0
 8013caa:	8260      	strh	r0, [r4, #18]
 8013cac:	b005      	add	sp, #20
 8013cae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013cb2:	2300      	movs	r3, #0
 8013cb4:	4611      	mov	r1, r2
 8013cb6:	4620      	mov	r0, r4
 8013cb8:	f7ff ff0e 	bl	8013ad8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013cbc:	e754      	b.n	8013b68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013cbe:	4563      	cmp	r3, ip
 8013cc0:	dd14      	ble.n	8013cec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8013cc2:	b117      	cbz	r7, 8013cca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8013cc4:	2301      	movs	r3, #1
 8013cc6:	460a      	mov	r2, r1
 8013cc8:	e772      	b.n	8013bb0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8013cca:	2e00      	cmp	r6, #0
 8013ccc:	f43f af4c 	beq.w	8013b68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013cd0:	2800      	cmp	r0, #0
 8013cd2:	f47f af49 	bne.w	8013b68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013cd6:	f1ba 0f00 	cmp.w	sl, #0
 8013cda:	d002      	beq.n	8013ce2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8013cdc:	2301      	movs	r3, #1
 8013cde:	4642      	mov	r2, r8
 8013ce0:	e767      	b.n	8013bb2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8013ce2:	8ae3      	ldrh	r3, [r4, #22]
 8013ce4:	2b00      	cmp	r3, #0
 8013ce6:	f43f af3f 	beq.w	8013b68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013cea:	e7d5      	b.n	8013c98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8013cec:	2800      	cmp	r0, #0
 8013cee:	f47f af3b 	bne.w	8013b68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013cf2:	f1ba 0f00 	cmp.w	sl, #0
 8013cf6:	f43f af37 	beq.w	8013b68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013cfa:	2301      	movs	r3, #1
 8013cfc:	4642      	mov	r2, r8
 8013cfe:	e7da      	b.n	8013cb6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08013d00 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8013d00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013d02:	4605      	mov	r5, r0
 8013d04:	b08f      	sub	sp, #60	@ 0x3c
 8013d06:	4617      	mov	r7, r2
 8013d08:	461c      	mov	r4, r3
 8013d0a:	460e      	mov	r6, r1
 8013d0c:	b1d1      	cbz	r1, 8013d44 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8013d0e:	681b      	ldr	r3, [r3, #0]
 8013d10:	4620      	mov	r0, r4
 8013d12:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013d14:	4798      	blx	r3
 8013d16:	4240      	negs	r0, r0
 8013d18:	b200      	sxth	r0, r0
 8013d1a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8013d1e:	9603      	str	r6, [sp, #12]
 8013d20:	9700      	str	r7, [sp, #0]
 8013d22:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8013d26:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8013d2a:	4629      	mov	r1, r5
 8013d2c:	a805      	add	r0, sp, #20
 8013d2e:	f7ff fcab 	bl	8013688 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013d32:	2401      	movs	r4, #1
 8013d34:	a805      	add	r0, sp, #20
 8013d36:	f7ff fedf 	bl	8013af8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013d3a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013d3e:	b163      	cbz	r3, 8013d5a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8013d40:	3401      	adds	r4, #1
 8013d42:	e7f7      	b.n	8013d34 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8013d44:	f003 f99e 	bl	8017084 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013d48:	2401      	movs	r4, #1
 8013d4a:	280a      	cmp	r0, #10
 8013d4c:	4628      	mov	r0, r5
 8013d4e:	bf08      	it	eq
 8013d50:	3401      	addeq	r4, #1
 8013d52:	f003 f997 	bl	8017084 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013d56:	2800      	cmp	r0, #0
 8013d58:	d1f7      	bne.n	8013d4a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8013d5a:	b2a0      	uxth	r0, r4
 8013d5c:	b00f      	add	sp, #60	@ 0x3c
 8013d5e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013d60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8013d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d64:	b0e3      	sub	sp, #396	@ 0x18c
 8013d66:	461c      	mov	r4, r3
 8013d68:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 8013d6a:	4683      	mov	fp, r0
 8013d6c:	4688      	mov	r8, r1
 8013d6e:	2b00      	cmp	r3, #0
 8013d70:	f000 8112 	beq.w	8013f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013d74:	6823      	ldr	r3, [r4, #0]
 8013d76:	2b00      	cmp	r3, #0
 8013d78:	f000 810e 	beq.w	8013f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013d7c:	7ba3      	ldrb	r3, [r4, #14]
 8013d7e:	2b00      	cmp	r3, #0
 8013d80:	f000 810a 	beq.w	8013f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013d84:	6810      	ldr	r0, [r2, #0]
 8013d86:	6851      	ldr	r1, [r2, #4]
 8013d88:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8013d8c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8013d90:	ad0a      	add	r5, sp, #40	@ 0x28
 8013d92:	462b      	mov	r3, r5
 8013d94:	c303      	stmia	r3!, {r0, r1}
 8013d96:	2100      	movs	r1, #0
 8013d98:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8013d9c:	910c      	str	r1, [sp, #48]	@ 0x30
 8013d9e:	79a2      	ldrb	r2, [r4, #6]
 8013da0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013da4:	a90c      	add	r1, sp, #48	@ 0x30
 8013da6:	4628      	mov	r0, r5
 8013da8:	f7ff fced 	bl	8013786 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013dac:	a90c      	add	r1, sp, #48	@ 0x30
 8013dae:	4608      	mov	r0, r1
 8013db0:	79a2      	ldrb	r2, [r4, #6]
 8013db2:	f7ff fce8 	bl	8013786 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013db6:	a817      	add	r0, sp, #92	@ 0x5c
 8013db8:	f002 fd0f 	bl	80167da <_ZN8touchgfx12TextProviderC1Ev>
 8013dbc:	6820      	ldr	r0, [r4, #0]
 8013dbe:	6803      	ldr	r3, [r0, #0]
 8013dc0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013dc2:	4798      	blx	r3
 8013dc4:	4606      	mov	r6, r0
 8013dc6:	6820      	ldr	r0, [r4, #0]
 8013dc8:	6803      	ldr	r3, [r0, #0]
 8013dca:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8013dcc:	4798      	blx	r3
 8013dce:	4633      	mov	r3, r6
 8013dd0:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8013dd2:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8013dd4:	9000      	str	r0, [sp, #0]
 8013dd6:	a817      	add	r0, sp, #92	@ 0x5c
 8013dd8:	f002 fd5a 	bl	8016890 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013ddc:	6820      	ldr	r0, [r4, #0]
 8013dde:	f894 a004 	ldrb.w	sl, [r4, #4]
 8013de2:	6803      	ldr	r3, [r0, #0]
 8013de4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013de6:	4798      	blx	r3
 8013de8:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8013dec:	6823      	ldr	r3, [r4, #0]
 8013dee:	4607      	mov	r7, r0
 8013df0:	4406      	add	r6, r0
 8013df2:	a830      	add	r0, sp, #192	@ 0xc0
 8013df4:	f893 9009 	ldrb.w	r9, [r3, #9]
 8013df8:	f002 fcef 	bl	80167da <_ZN8touchgfx12TextProviderC1Ev>
 8013dfc:	7c23      	ldrb	r3, [r4, #16]
 8013dfe:	b17b      	cbz	r3, 8013e20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8013e00:	6820      	ldr	r0, [r4, #0]
 8013e02:	6803      	ldr	r3, [r0, #0]
 8013e04:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013e06:	4798      	blx	r3
 8013e08:	9009      	str	r0, [sp, #36]	@ 0x24
 8013e0a:	6820      	ldr	r0, [r4, #0]
 8013e0c:	6802      	ldr	r2, [r0, #0]
 8013e0e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8013e10:	4790      	blx	r2
 8013e12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013e14:	9000      	str	r0, [sp, #0]
 8013e16:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8013e18:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8013e1a:	a830      	add	r0, sp, #192	@ 0xc0
 8013e1c:	f002 fd38 	bl	8016890 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013e20:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8013e24:	7be2      	ldrb	r2, [r4, #15]
 8013e26:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8013e2a:	1a8a      	subs	r2, r1, r2
 8013e2c:	7c21      	ldrb	r1, [r4, #16]
 8013e2e:	9103      	str	r1, [sp, #12]
 8013e30:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8013e34:	9102      	str	r1, [sp, #8]
 8013e36:	6821      	ldr	r1, [r4, #0]
 8013e38:	9101      	str	r1, [sp, #4]
 8013e3a:	7961      	ldrb	r1, [r4, #5]
 8013e3c:	9100      	str	r1, [sp, #0]
 8013e3e:	b292      	uxth	r2, r2
 8013e40:	a930      	add	r1, sp, #192	@ 0xc0
 8013e42:	a80e      	add	r0, sp, #56	@ 0x38
 8013e44:	f7ff fc20 	bl	8013688 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013e48:	2e00      	cmp	r6, #0
 8013e4a:	dc5b      	bgt.n	8013f04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8013e4c:	af17      	add	r7, sp, #92	@ 0x5c
 8013e4e:	f04f 0900 	mov.w	r9, #0
 8013e52:	7c23      	ldrb	r3, [r4, #16]
 8013e54:	2b00      	cmp	r3, #0
 8013e56:	f000 80b1 	beq.w	8013fbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8013e5a:	a80e      	add	r0, sp, #56	@ 0x38
 8013e5c:	f7ff fe4c 	bl	8013af8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013e60:	f1ba 0f00 	cmp.w	sl, #0
 8013e64:	f000 80a5 	beq.w	8013fb2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013e68:	7c23      	ldrb	r3, [r4, #16]
 8013e6a:	9309      	str	r3, [sp, #36]	@ 0x24
 8013e6c:	2264      	movs	r2, #100	@ 0x64
 8013e6e:	4639      	mov	r1, r7
 8013e70:	a849      	add	r0, sp, #292	@ 0x124
 8013e72:	f014 fad4 	bl	802841e <memcpy>
 8013e76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013e78:	2b00      	cmp	r3, #0
 8013e7a:	f000 80a7 	beq.w	8013fcc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8013e7e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 8013e82:	7922      	ldrb	r2, [r4, #4]
 8013e84:	2a01      	cmp	r2, #1
 8013e86:	f040 808a 	bne.w	8013f9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8013e8a:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8013e8e:	1ac0      	subs	r0, r0, r3
 8013e90:	2302      	movs	r3, #2
 8013e92:	fb90 f0f3 	sdiv	r0, r0, r3
 8013e96:	b200      	sxth	r0, r0
 8013e98:	7c23      	ldrb	r3, [r4, #16]
 8013e9a:	2b00      	cmp	r3, #0
 8013e9c:	f000 808b 	beq.w	8013fb6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8013ea0:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8013ea4:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8013ea8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013eac:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8013eb0:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8013eb4:	4410      	add	r0, r2
 8013eb6:	b200      	sxth	r0, r0
 8013eb8:	9000      	str	r0, [sp, #0]
 8013eba:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8013ebe:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8013ec2:	4642      	mov	r2, r8
 8013ec4:	2100      	movs	r1, #0
 8013ec6:	4658      	mov	r0, fp
 8013ec8:	f7ff fc8e 	bl	80137e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8013ecc:	2800      	cmp	r0, #0
 8013ece:	d163      	bne.n	8013f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013ed0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8013ed4:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8013ed8:	b2b2      	uxth	r2, r6
 8013eda:	4413      	add	r3, r2
 8013edc:	1a8a      	subs	r2, r1, r2
 8013ede:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8013ee2:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 8013ee6:	b21b      	sxth	r3, r3
 8013ee8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8013eec:	2a00      	cmp	r2, #0
 8013eee:	d153      	bne.n	8013f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013ef0:	6822      	ldr	r2, [r4, #0]
 8013ef2:	8869      	ldrh	r1, [r5, #2]
 8013ef4:	7a12      	ldrb	r2, [r2, #8]
 8013ef6:	1a9b      	subs	r3, r3, r2
 8013ef8:	88ea      	ldrh	r2, [r5, #6]
 8013efa:	440a      	add	r2, r1
 8013efc:	b212      	sxth	r2, r2
 8013efe:	4293      	cmp	r3, r2
 8013f00:	dda7      	ble.n	8013e52 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8013f02:	e049      	b.n	8013f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013f04:	7c23      	ldrb	r3, [r4, #16]
 8013f06:	444f      	add	r7, r9
 8013f08:	b1c3      	cbz	r3, 8013f3c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8013f0a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8013f0e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013f12:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013f16:	443b      	add	r3, r7
 8013f18:	4293      	cmp	r3, r2
 8013f1a:	da97      	bge.n	8013e4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013f1c:	a80e      	add	r0, sp, #56	@ 0x38
 8013f1e:	f7ff fdeb 	bl	8013af8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013f22:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8013f26:	3b01      	subs	r3, #1
 8013f28:	b29b      	uxth	r3, r3
 8013f2a:	454b      	cmp	r3, r9
 8013f2c:	9309      	str	r3, [sp, #36]	@ 0x24
 8013f2e:	d021      	beq.n	8013f74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8013f30:	7961      	ldrb	r1, [r4, #5]
 8013f32:	a817      	add	r0, sp, #92	@ 0x5c
 8013f34:	f7f2 fb56 	bl	80065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013f38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013f3a:	e7f4      	b.n	8013f26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8013f3c:	fa1f f986 	uxth.w	r9, r6
 8013f40:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013f44:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013f48:	443b      	add	r3, r7
 8013f4a:	4293      	cmp	r3, r2
 8013f4c:	f6bf af7e 	bge.w	8013e4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013f50:	a817      	add	r0, sp, #92	@ 0x5c
 8013f52:	f003 f897 	bl	8017084 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013f56:	b1f8      	cbz	r0, 8013f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013f58:	280a      	cmp	r0, #10
 8013f5a:	d1f1      	bne.n	8013f40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013f5c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8013f60:	444b      	add	r3, r9
 8013f62:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8013f66:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8013f6a:	eba3 0309 	sub.w	r3, r3, r9
 8013f6e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013f72:	e7e5      	b.n	8013f40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013f74:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8013f78:	b2b3      	uxth	r3, r6
 8013f7a:	441a      	add	r2, r3
 8013f7c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8013f80:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8013f84:	1ad3      	subs	r3, r2, r3
 8013f86:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013f8a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8013f8e:	b11b      	cbz	r3, 8013f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013f90:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8013f94:	2b00      	cmp	r3, #0
 8013f96:	d0ba      	beq.n	8013f0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8013f98:	b063      	add	sp, #396	@ 0x18c
 8013f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f9e:	2a02      	cmp	r2, #2
 8013fa0:	d105      	bne.n	8013fae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8013fa2:	7be2      	ldrb	r2, [r4, #15]
 8013fa4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8013fa8:	1a80      	subs	r0, r0, r2
 8013faa:	1ac0      	subs	r0, r0, r3
 8013fac:	e773      	b.n	8013e96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8013fae:	2000      	movs	r0, #0
 8013fb0:	e772      	b.n	8013e98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013fb2:	7be0      	ldrb	r0, [r4, #15]
 8013fb4:	e770      	b.n	8013e98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013fb6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8013fba:	e773      	b.n	8013ea4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8013fbc:	f1ba 0f00 	cmp.w	sl, #0
 8013fc0:	d0f7      	beq.n	8013fb2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013fc2:	2264      	movs	r2, #100	@ 0x64
 8013fc4:	4639      	mov	r1, r7
 8013fc6:	a849      	add	r0, sp, #292	@ 0x124
 8013fc8:	f014 fa29 	bl	802841e <memcpy>
 8013fcc:	2300      	movs	r3, #0
 8013fce:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8013fd2:	6821      	ldr	r1, [r4, #0]
 8013fd4:	a849      	add	r0, sp, #292	@ 0x124
 8013fd6:	f7ff fb9a 	bl	801370e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8013fda:	b203      	sxth	r3, r0
 8013fdc:	e751      	b.n	8013e82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08013fde <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8013fde:	2b03      	cmp	r3, #3
 8013fe0:	d818      	bhi.n	8014014 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8013fe2:	e8df f003 	tbb	[pc, r3]
 8013fe6:	0602      	.short	0x0602
 8013fe8:	130d      	.short	0x130d
 8013fea:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013fee:	1850      	adds	r0, r2, r1
 8013ff0:	4770      	bx	lr
 8013ff2:	8803      	ldrh	r3, [r0, #0]
 8013ff4:	8880      	ldrh	r0, [r0, #4]
 8013ff6:	4418      	add	r0, r3
 8013ff8:	b200      	sxth	r0, r0
 8013ffa:	1a80      	subs	r0, r0, r2
 8013ffc:	3801      	subs	r0, #1
 8013ffe:	4770      	bx	lr
 8014000:	8803      	ldrh	r3, [r0, #0]
 8014002:	8880      	ldrh	r0, [r0, #4]
 8014004:	4418      	add	r0, r3
 8014006:	b200      	sxth	r0, r0
 8014008:	1a40      	subs	r0, r0, r1
 801400a:	e7f7      	b.n	8013ffc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801400c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014010:	4410      	add	r0, r2
 8014012:	4770      	bx	lr
 8014014:	2000      	movs	r0, #0
 8014016:	4770      	bx	lr

08014018 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8014018:	2b03      	cmp	r3, #3
 801401a:	d817      	bhi.n	801404c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 801401c:	e8df f003 	tbb	[pc, r3]
 8014020:	10090602 	.word	0x10090602
 8014024:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014028:	1850      	adds	r0, r2, r1
 801402a:	4770      	bx	lr
 801402c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014030:	e7fa      	b.n	8014028 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014032:	8843      	ldrh	r3, [r0, #2]
 8014034:	88c0      	ldrh	r0, [r0, #6]
 8014036:	4418      	add	r0, r3
 8014038:	b200      	sxth	r0, r0
 801403a:	1a80      	subs	r0, r0, r2
 801403c:	3801      	subs	r0, #1
 801403e:	4770      	bx	lr
 8014040:	8843      	ldrh	r3, [r0, #2]
 8014042:	88c0      	ldrh	r0, [r0, #6]
 8014044:	4418      	add	r0, r3
 8014046:	b200      	sxth	r0, r0
 8014048:	1a40      	subs	r0, r0, r1
 801404a:	e7f7      	b.n	801403c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 801404c:	2000      	movs	r0, #0
 801404e:	4770      	bx	lr

08014050 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014050:	4b01      	ldr	r3, [pc, #4]	@ (8014058 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014052:	2200      	movs	r2, #0
 8014054:	601a      	str	r2, [r3, #0]
 8014056:	4770      	bx	lr
 8014058:	20013f70 	.word	0x20013f70

0801405c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 801405c:	4603      	mov	r3, r0
 801405e:	b1c8      	cbz	r0, 8014094 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014060:	0c02      	lsrs	r2, r0, #16
 8014062:	0412      	lsls	r2, r2, #16
 8014064:	b9a2      	cbnz	r2, 8014090 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8014066:	0403      	lsls	r3, r0, #16
 8014068:	2010      	movs	r0, #16
 801406a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 801406e:	bf04      	itt	eq
 8014070:	021b      	lsleq	r3, r3, #8
 8014072:	3008      	addeq	r0, #8
 8014074:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8014078:	bf04      	itt	eq
 801407a:	011b      	lsleq	r3, r3, #4
 801407c:	3004      	addeq	r0, #4
 801407e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8014082:	bf04      	itt	eq
 8014084:	009b      	lsleq	r3, r3, #2
 8014086:	3002      	addeq	r0, #2
 8014088:	2b00      	cmp	r3, #0
 801408a:	db04      	blt.n	8014096 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 801408c:	3001      	adds	r0, #1
 801408e:	4770      	bx	lr
 8014090:	2000      	movs	r0, #0
 8014092:	e7ea      	b.n	801406a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014094:	2020      	movs	r0, #32
 8014096:	4770      	bx	lr

08014098 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8014098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801409c:	b087      	sub	sp, #28
 801409e:	460d      	mov	r5, r1
 80140a0:	4616      	mov	r6, r2
 80140a2:	4698      	mov	r8, r3
 80140a4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 80140a8:	4601      	mov	r1, r0
 80140aa:	b120      	cbz	r0, 80140b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80140ac:	b11a      	cbz	r2, 80140b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80140ae:	2d1f      	cmp	r5, #31
 80140b0:	d801      	bhi.n	80140b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80140b2:	2b1f      	cmp	r3, #31
 80140b4:	d904      	bls.n	80140c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80140b6:	2000      	movs	r0, #0
 80140b8:	6038      	str	r0, [r7, #0]
 80140ba:	b007      	add	sp, #28
 80140bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140c0:	b97d      	cbnz	r5, 80140e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80140c2:	b143      	cbz	r3, 80140d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80140c4:	4602      	mov	r2, r0
 80140c6:	e9cd 4700 	strd	r4, r7, [sp]
 80140ca:	462b      	mov	r3, r5
 80140cc:	4641      	mov	r1, r8
 80140ce:	4630      	mov	r0, r6
 80140d0:	f7ff ffe2 	bl	8014098 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80140d4:	e7f1      	b.n	80140ba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80140d6:	f04f 33ff 	mov.w	r3, #4294967295
 80140da:	603b      	str	r3, [r7, #0]
 80140dc:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80140e0:	e7eb      	b.n	80140ba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80140e2:	fa32 fa05 	lsrs.w	sl, r2, r5
 80140e6:	d106      	bne.n	80140f6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80140e8:	4346      	muls	r6, r0
 80140ea:	fbb6 f0f4 	udiv	r0, r6, r4
 80140ee:	fb04 6610 	mls	r6, r4, r0, r6
 80140f2:	603e      	str	r6, [r7, #0]
 80140f4:	e7e1      	b.n	80140ba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80140f6:	2201      	movs	r2, #1
 80140f8:	40aa      	lsls	r2, r5
 80140fa:	3a01      	subs	r2, #1
 80140fc:	4016      	ands	r6, r2
 80140fe:	fa00 fb05 	lsl.w	fp, r0, r5
 8014102:	4630      	mov	r0, r6
 8014104:	fbbb f9f4 	udiv	r9, fp, r4
 8014108:	fb0a f309 	mul.w	r3, sl, r9
 801410c:	9303      	str	r3, [sp, #12]
 801410e:	f7ff ffa5 	bl	801405c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014112:	462b      	mov	r3, r5
 8014114:	460a      	mov	r2, r1
 8014116:	e9cd 4700 	strd	r4, r7, [sp]
 801411a:	4601      	mov	r1, r0
 801411c:	4630      	mov	r0, r6
 801411e:	f7ff ffbb 	bl	8014098 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014122:	fb04 b919 	mls	r9, r4, r9, fp
 8014126:	4606      	mov	r6, r0
 8014128:	4648      	mov	r0, r9
 801412a:	eb05 0108 	add.w	r1, r5, r8
 801412e:	f7ff ff95 	bl	801405c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014132:	ab05      	add	r3, sp, #20
 8014134:	e9cd 4300 	strd	r4, r3, [sp]
 8014138:	464a      	mov	r2, r9
 801413a:	4603      	mov	r3, r0
 801413c:	4650      	mov	r0, sl
 801413e:	f7ff ffab 	bl	8014098 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014142:	6839      	ldr	r1, [r7, #0]
 8014144:	9a05      	ldr	r2, [sp, #20]
 8014146:	9b03      	ldr	r3, [sp, #12]
 8014148:	4411      	add	r1, r2
 801414a:	fbb1 f2f4 	udiv	r2, r1, r4
 801414e:	18d3      	adds	r3, r2, r3
 8014150:	441e      	add	r6, r3
 8014152:	fb04 1412 	mls	r4, r4, r2, r1
 8014156:	4430      	add	r0, r6
 8014158:	603c      	str	r4, [r7, #0]
 801415a:	e7ae      	b.n	80140ba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0801415c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801415c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014160:	b085      	sub	sp, #20
 8014162:	f1b0 0900 	subs.w	r9, r0, #0
 8014166:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8014168:	461d      	mov	r5, r3
 801416a:	bfbf      	itttt	lt
 801416c:	6823      	ldrlt	r3, [r4, #0]
 801416e:	425b      	neglt	r3, r3
 8014170:	f1c9 0900 	rsblt	r9, r9, #0
 8014174:	6023      	strlt	r3, [r4, #0]
 8014176:	bfb4      	ite	lt
 8014178:	f04f 36ff 	movlt.w	r6, #4294967295
 801417c:	2601      	movge	r6, #1
 801417e:	2a00      	cmp	r2, #0
 8014180:	4617      	mov	r7, r2
 8014182:	da04      	bge.n	801418e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014184:	6823      	ldr	r3, [r4, #0]
 8014186:	425b      	negs	r3, r3
 8014188:	4257      	negs	r7, r2
 801418a:	4276      	negs	r6, r6
 801418c:	6023      	str	r3, [r4, #0]
 801418e:	2d00      	cmp	r5, #0
 8014190:	4638      	mov	r0, r7
 8014192:	bfba      	itte	lt
 8014194:	426d      	neglt	r5, r5
 8014196:	f04f 38ff 	movlt.w	r8, #4294967295
 801419a:	f04f 0801 	movge.w	r8, #1
 801419e:	f7ff ff5d 	bl	801405c <_ZN8touchgfx16TouchCalibration4clzuEm>
 80141a2:	ab03      	add	r3, sp, #12
 80141a4:	e9cd 5300 	strd	r5, r3, [sp]
 80141a8:	463a      	mov	r2, r7
 80141aa:	4603      	mov	r3, r0
 80141ac:	4648      	mov	r0, r9
 80141ae:	f7ff ff73 	bl	8014098 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80141b2:	6823      	ldr	r3, [r4, #0]
 80141b4:	9a03      	ldr	r2, [sp, #12]
 80141b6:	4546      	cmp	r6, r8
 80141b8:	441a      	add	r2, r3
 80141ba:	fb92 f3f5 	sdiv	r3, r2, r5
 80141be:	4418      	add	r0, r3
 80141c0:	bf18      	it	ne
 80141c2:	4240      	negne	r0, r0
 80141c4:	fb05 2313 	mls	r3, r5, r3, r2
 80141c8:	1c72      	adds	r2, r6, #1
 80141ca:	6023      	str	r3, [r4, #0]
 80141cc:	d105      	bne.n	80141da <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80141ce:	2b00      	cmp	r3, #0
 80141d0:	f1c3 0200 	rsb	r2, r3, #0
 80141d4:	db0b      	blt.n	80141ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80141d6:	6022      	str	r2, [r4, #0]
 80141d8:	e006      	b.n	80141e8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80141da:	2e01      	cmp	r6, #1
 80141dc:	d104      	bne.n	80141e8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80141de:	2b00      	cmp	r3, #0
 80141e0:	da02      	bge.n	80141e8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80141e2:	442b      	add	r3, r5
 80141e4:	3801      	subs	r0, #1
 80141e6:	6023      	str	r3, [r4, #0]
 80141e8:	b005      	add	sp, #20
 80141ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80141ee:	3801      	subs	r0, #1
 80141f0:	1b52      	subs	r2, r2, r5
 80141f2:	e7f0      	b.n	80141d6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080141f4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80141f4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80141f8:	4c1c      	ldr	r4, [pc, #112]	@ (801426c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80141fa:	6807      	ldr	r7, [r0, #0]
 80141fc:	69a3      	ldr	r3, [r4, #24]
 80141fe:	4605      	mov	r5, r0
 8014200:	b92b      	cbnz	r3, 801420e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014202:	6840      	ldr	r0, [r0, #4]
 8014204:	e9c5 7000 	strd	r7, r0, [r5]
 8014208:	b004      	add	sp, #16
 801420a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801420e:	68a2      	ldr	r2, [r4, #8]
 8014210:	6820      	ldr	r0, [r4, #0]
 8014212:	ae04      	add	r6, sp, #16
 8014214:	f04f 0802 	mov.w	r8, #2
 8014218:	fb93 f1f8 	sdiv	r1, r3, r8
 801421c:	440a      	add	r2, r1
 801421e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014222:	69e1      	ldr	r1, [r4, #28]
 8014224:	9600      	str	r6, [sp, #0]
 8014226:	463a      	mov	r2, r7
 8014228:	f7ff ff98 	bl	801415c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801422c:	69a3      	ldr	r3, [r4, #24]
 801422e:	686a      	ldr	r2, [r5, #4]
 8014230:	6a21      	ldr	r1, [r4, #32]
 8014232:	9600      	str	r6, [sp, #0]
 8014234:	4607      	mov	r7, r0
 8014236:	6860      	ldr	r0, [r4, #4]
 8014238:	f7ff ff90 	bl	801415c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801423c:	6962      	ldr	r2, [r4, #20]
 801423e:	69a3      	ldr	r3, [r4, #24]
 8014240:	fb93 f8f8 	sdiv	r8, r3, r8
 8014244:	4442      	add	r2, r8
 8014246:	9203      	str	r2, [sp, #12]
 8014248:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 801424a:	682a      	ldr	r2, [r5, #0]
 801424c:	9600      	str	r6, [sp, #0]
 801424e:	4407      	add	r7, r0
 8014250:	68e0      	ldr	r0, [r4, #12]
 8014252:	f7ff ff83 	bl	801415c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014256:	9600      	str	r6, [sp, #0]
 8014258:	4680      	mov	r8, r0
 801425a:	69a3      	ldr	r3, [r4, #24]
 801425c:	686a      	ldr	r2, [r5, #4]
 801425e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8014260:	6920      	ldr	r0, [r4, #16]
 8014262:	f7ff ff7b 	bl	801415c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014266:	4440      	add	r0, r8
 8014268:	e7cc      	b.n	8014204 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801426a:	bf00      	nop
 801426c:	20013f74 	.word	0x20013f74

08014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014270:	4b07      	ldr	r3, [pc, #28]	@ (8014290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014272:	781b      	ldrb	r3, [r3, #0]
 8014274:	2b01      	cmp	r3, #1
 8014276:	d109      	bne.n	801428c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014278:	f9b1 3000 	ldrsh.w	r3, [r1]
 801427c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014280:	8003      	strh	r3, [r0, #0]
 8014282:	4b04      	ldr	r3, [pc, #16]	@ (8014294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014284:	881b      	ldrh	r3, [r3, #0]
 8014286:	3b01      	subs	r3, #1
 8014288:	1a9b      	subs	r3, r3, r2
 801428a:	800b      	strh	r3, [r1, #0]
 801428c:	4770      	bx	lr
 801428e:	bf00      	nop
 8014290:	20013f58 	.word	0x20013f58
 8014294:	20013f54 	.word	0x20013f54

08014298 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014298:	b510      	push	{r4, lr}
 801429a:	4b07      	ldr	r3, [pc, #28]	@ (80142b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801429c:	781b      	ldrb	r3, [r3, #0]
 801429e:	2b01      	cmp	r3, #1
 80142a0:	d108      	bne.n	80142b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80142a2:	4b06      	ldr	r3, [pc, #24]	@ (80142bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80142a4:	880c      	ldrh	r4, [r1, #0]
 80142a6:	881b      	ldrh	r3, [r3, #0]
 80142a8:	f9b0 2000 	ldrsh.w	r2, [r0]
 80142ac:	3b01      	subs	r3, #1
 80142ae:	1b1b      	subs	r3, r3, r4
 80142b0:	8003      	strh	r3, [r0, #0]
 80142b2:	800a      	strh	r2, [r1, #0]
 80142b4:	bd10      	pop	{r4, pc}
 80142b6:	bf00      	nop
 80142b8:	20013f58 	.word	0x20013f58
 80142bc:	20013f54 	.word	0x20013f54

080142c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80142c0:	b510      	push	{r4, lr}
 80142c2:	4b0a      	ldr	r3, [pc, #40]	@ (80142ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80142c4:	781b      	ldrb	r3, [r3, #0]
 80142c6:	2b01      	cmp	r3, #1
 80142c8:	d10e      	bne.n	80142e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80142ca:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80142ce:	8843      	ldrh	r3, [r0, #2]
 80142d0:	f9b0 4000 	ldrsh.w	r4, [r0]
 80142d4:	8044      	strh	r4, [r0, #2]
 80142d6:	18ca      	adds	r2, r1, r3
 80142d8:	4b05      	ldr	r3, [pc, #20]	@ (80142f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80142da:	881b      	ldrh	r3, [r3, #0]
 80142dc:	1a9b      	subs	r3, r3, r2
 80142de:	8003      	strh	r3, [r0, #0]
 80142e0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80142e4:	80c3      	strh	r3, [r0, #6]
 80142e6:	8081      	strh	r1, [r0, #4]
 80142e8:	bd10      	pop	{r4, pc}
 80142ea:	bf00      	nop
 80142ec:	20013f58 	.word	0x20013f58
 80142f0:	20013f54 	.word	0x20013f54

080142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80142f4:	4b08      	ldr	r3, [pc, #32]	@ (8014318 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80142f6:	781b      	ldrb	r3, [r3, #0]
 80142f8:	2b01      	cmp	r3, #1
 80142fa:	d10c      	bne.n	8014316 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80142fc:	8803      	ldrh	r3, [r0, #0]
 80142fe:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014302:	8842      	ldrh	r2, [r0, #2]
 8014304:	8002      	strh	r2, [r0, #0]
 8014306:	185a      	adds	r2, r3, r1
 8014308:	4b04      	ldr	r3, [pc, #16]	@ (801431c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801430a:	881b      	ldrh	r3, [r3, #0]
 801430c:	1a9b      	subs	r3, r3, r2
 801430e:	8043      	strh	r3, [r0, #2]
 8014310:	88c3      	ldrh	r3, [r0, #6]
 8014312:	8083      	strh	r3, [r0, #4]
 8014314:	80c1      	strh	r1, [r0, #6]
 8014316:	4770      	bx	lr
 8014318:	20013f58 	.word	0x20013f58
 801431c:	20013f54 	.word	0x20013f54

08014320 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014320:	b510      	push	{r4, lr}
 8014322:	4b07      	ldr	r3, [pc, #28]	@ (8014340 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014324:	781b      	ldrb	r3, [r3, #0]
 8014326:	2b01      	cmp	r3, #1
 8014328:	d108      	bne.n	801433c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801432a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801432e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014332:	8003      	strh	r3, [r0, #0]
 8014334:	8893      	ldrh	r3, [r2, #4]
 8014336:	3b01      	subs	r3, #1
 8014338:	1b1b      	subs	r3, r3, r4
 801433a:	800b      	strh	r3, [r1, #0]
 801433c:	bd10      	pop	{r4, pc}
 801433e:	bf00      	nop
 8014340:	20013f58 	.word	0x20013f58

08014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014344:	b510      	push	{r4, lr}
 8014346:	4b0a      	ldr	r3, [pc, #40]	@ (8014370 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014348:	781b      	ldrb	r3, [r3, #0]
 801434a:	2b01      	cmp	r3, #1
 801434c:	460a      	mov	r2, r1
 801434e:	d10d      	bne.n	801436c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014350:	8881      	ldrh	r1, [r0, #4]
 8014352:	8803      	ldrh	r3, [r0, #0]
 8014354:	440b      	add	r3, r1
 8014356:	4601      	mov	r1, r0
 8014358:	3b01      	subs	r3, #1
 801435a:	f821 3b02 	strh.w	r3, [r1], #2
 801435e:	f7ff ffdf 	bl	8014320 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014362:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014366:	88c2      	ldrh	r2, [r0, #6]
 8014368:	8082      	strh	r2, [r0, #4]
 801436a:	80c3      	strh	r3, [r0, #6]
 801436c:	bd10      	pop	{r4, pc}
 801436e:	bf00      	nop
 8014370:	20013f58 	.word	0x20013f58

08014374 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014374:	4b06      	ldr	r3, [pc, #24]	@ (8014390 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014376:	f9b3 2000 	ldrsh.w	r2, [r3]
 801437a:	4b06      	ldr	r3, [pc, #24]	@ (8014394 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801437c:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8014380:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014384:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8014388:	2100      	movs	r1, #0
 801438a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 801438e:	4770      	bx	lr
 8014390:	20013f54 	.word	0x20013f54
 8014394:	20013f56 	.word	0x20013f56

08014398 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014398:	4b03      	ldr	r3, [pc, #12]	@ (80143a8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801439a:	6818      	ldr	r0, [r3, #0]
 801439c:	b110      	cbz	r0, 80143a4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801439e:	6803      	ldr	r3, [r0, #0]
 80143a0:	699b      	ldr	r3, [r3, #24]
 80143a2:	4718      	bx	r3
 80143a4:	4770      	bx	lr
 80143a6:	bf00      	nop
 80143a8:	20013fa4 	.word	0x20013fa4

080143ac <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80143ac:	4770      	bx	lr
	...

080143b0 <_ZN8touchgfx11Application4drawEv>:
 80143b0:	b507      	push	{r0, r1, r2, lr}
 80143b2:	4b09      	ldr	r3, [pc, #36]	@ (80143d8 <_ZN8touchgfx11Application4drawEv+0x28>)
 80143b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80143b8:	4b08      	ldr	r3, [pc, #32]	@ (80143dc <_ZN8touchgfx11Application4drawEv+0x2c>)
 80143ba:	f8ad 2004 	strh.w	r2, [sp, #4]
 80143be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80143c2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80143c6:	6803      	ldr	r3, [r0, #0]
 80143c8:	2100      	movs	r1, #0
 80143ca:	9100      	str	r1, [sp, #0]
 80143cc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80143ce:	4669      	mov	r1, sp
 80143d0:	4798      	blx	r3
 80143d2:	b003      	add	sp, #12
 80143d4:	f85d fb04 	ldr.w	pc, [sp], #4
 80143d8:	20013f54 	.word	0x20013f54
 80143dc:	20013f56 	.word	0x20013f56

080143e0 <_ZN8touchgfx11Application10invalidateEv>:
 80143e0:	4b09      	ldr	r3, [pc, #36]	@ (8014408 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80143e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80143e6:	4b09      	ldr	r3, [pc, #36]	@ (801440c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80143e8:	b082      	sub	sp, #8
 80143ea:	f9b3 3000 	ldrsh.w	r3, [r3]
 80143ee:	f8ad 2004 	strh.w	r2, [sp, #4]
 80143f2:	2100      	movs	r1, #0
 80143f4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80143f8:	9100      	str	r1, [sp, #0]
 80143fa:	6803      	ldr	r3, [r0, #0]
 80143fc:	aa02      	add	r2, sp, #8
 80143fe:	e912 0006 	ldmdb	r2, {r1, r2}
 8014402:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014404:	b002      	add	sp, #8
 8014406:	4718      	bx	r3
 8014408:	20013f54 	.word	0x20013f54
 801440c:	20013f56 	.word	0x20013f56

08014410 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014410:	4b03      	ldr	r3, [pc, #12]	@ (8014420 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014412:	6818      	ldr	r0, [r3, #0]
 8014414:	b110      	cbz	r0, 801441c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014416:	6803      	ldr	r3, [r0, #0]
 8014418:	69db      	ldr	r3, [r3, #28]
 801441a:	4718      	bx	r3
 801441c:	4770      	bx	lr
 801441e:	bf00      	nop
 8014420:	20013fa4 	.word	0x20013fa4

08014424 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014424:	4b03      	ldr	r3, [pc, #12]	@ (8014434 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014426:	6818      	ldr	r0, [r3, #0]
 8014428:	b110      	cbz	r0, 8014430 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801442a:	6803      	ldr	r3, [r0, #0]
 801442c:	6a1b      	ldr	r3, [r3, #32]
 801442e:	4718      	bx	r3
 8014430:	4770      	bx	lr
 8014432:	bf00      	nop
 8014434:	20013fa4 	.word	0x20013fa4

08014438 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014438:	2300      	movs	r3, #0
 801443a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 801443e:	4770      	bx	lr

08014440 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014440:	4b03      	ldr	r3, [pc, #12]	@ (8014450 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014442:	6818      	ldr	r0, [r3, #0]
 8014444:	b110      	cbz	r0, 801444c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014446:	6803      	ldr	r3, [r0, #0]
 8014448:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801444a:	4718      	bx	r3
 801444c:	4770      	bx	lr
 801444e:	bf00      	nop
 8014450:	20013fa4 	.word	0x20013fa4

08014454 <_ZN8touchgfx11ApplicationD1Ev>:
 8014454:	4770      	bx	lr

08014456 <_ZN8touchgfx11ApplicationD0Ev>:
 8014456:	b510      	push	{r4, lr}
 8014458:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 801445c:	4604      	mov	r4, r0
 801445e:	f012 fdb9 	bl	8026fd4 <_ZdlPvj>
 8014462:	4620      	mov	r0, r4
 8014464:	bd10      	pop	{r4, pc}

08014466 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014466:	b510      	push	{r4, lr}
 8014468:	f9b1 4000 	ldrsh.w	r4, [r1]
 801446c:	888a      	ldrh	r2, [r1, #4]
 801446e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014472:	4422      	add	r2, r4
 8014474:	b212      	sxth	r2, r2
 8014476:	4293      	cmp	r3, r2
 8014478:	da15      	bge.n	80144a6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801447a:	8882      	ldrh	r2, [r0, #4]
 801447c:	4413      	add	r3, r2
 801447e:	b21b      	sxth	r3, r3
 8014480:	429c      	cmp	r4, r3
 8014482:	da10      	bge.n	80144a6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014484:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014488:	88c9      	ldrh	r1, [r1, #6]
 801448a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801448e:	4419      	add	r1, r3
 8014490:	b209      	sxth	r1, r1
 8014492:	428a      	cmp	r2, r1
 8014494:	da07      	bge.n	80144a6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014496:	88c0      	ldrh	r0, [r0, #6]
 8014498:	4410      	add	r0, r2
 801449a:	b200      	sxth	r0, r0
 801449c:	4283      	cmp	r3, r0
 801449e:	bfac      	ite	ge
 80144a0:	2000      	movge	r0, #0
 80144a2:	2001      	movlt	r0, #1
 80144a4:	bd10      	pop	{r4, pc}
 80144a6:	2000      	movs	r0, #0
 80144a8:	e7fc      	b.n	80144a4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080144aa <_ZN8touchgfx4Rect10restrictToEss>:
 80144aa:	f9b0 3000 	ldrsh.w	r3, [r0]
 80144ae:	2b00      	cmp	r3, #0
 80144b0:	b510      	push	{r4, lr}
 80144b2:	da04      	bge.n	80144be <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80144b4:	8884      	ldrh	r4, [r0, #4]
 80144b6:	4423      	add	r3, r4
 80144b8:	8083      	strh	r3, [r0, #4]
 80144ba:	2300      	movs	r3, #0
 80144bc:	8003      	strh	r3, [r0, #0]
 80144be:	f9b0 4000 	ldrsh.w	r4, [r0]
 80144c2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80144c6:	1b09      	subs	r1, r1, r4
 80144c8:	428b      	cmp	r3, r1
 80144ca:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80144ce:	bfc8      	it	gt
 80144d0:	8081      	strhgt	r1, [r0, #4]
 80144d2:	2b00      	cmp	r3, #0
 80144d4:	da04      	bge.n	80144e0 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80144d6:	88c1      	ldrh	r1, [r0, #6]
 80144d8:	440b      	add	r3, r1
 80144da:	80c3      	strh	r3, [r0, #6]
 80144dc:	2300      	movs	r3, #0
 80144de:	8043      	strh	r3, [r0, #2]
 80144e0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80144e4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80144e8:	1a52      	subs	r2, r2, r1
 80144ea:	4293      	cmp	r3, r2
 80144ec:	bfc8      	it	gt
 80144ee:	80c2      	strhgt	r2, [r0, #6]
 80144f0:	bd10      	pop	{r4, pc}
	...

080144f4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80144f4:	b510      	push	{r4, lr}
 80144f6:	4b10      	ldr	r3, [pc, #64]	@ (8014538 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80144f8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80144fc:	4b0f      	ldr	r3, [pc, #60]	@ (801453c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80144fe:	460c      	mov	r4, r1
 8014500:	4620      	mov	r0, r4
 8014502:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014506:	f7ff ffd0 	bl	80144aa <_ZN8touchgfx4Rect10restrictToEss>
 801450a:	4b0d      	ldr	r3, [pc, #52]	@ (8014540 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801450c:	6818      	ldr	r0, [r3, #0]
 801450e:	b190      	cbz	r0, 8014536 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014510:	6803      	ldr	r3, [r0, #0]
 8014512:	4621      	mov	r1, r4
 8014514:	689b      	ldr	r3, [r3, #8]
 8014516:	4798      	blx	r3
 8014518:	4b0a      	ldr	r3, [pc, #40]	@ (8014544 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801451a:	6818      	ldr	r0, [r3, #0]
 801451c:	b118      	cbz	r0, 8014526 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801451e:	6803      	ldr	r3, [r0, #0]
 8014520:	4621      	mov	r1, r4
 8014522:	689b      	ldr	r3, [r3, #8]
 8014524:	4798      	blx	r3
 8014526:	4b08      	ldr	r3, [pc, #32]	@ (8014548 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014528:	6818      	ldr	r0, [r3, #0]
 801452a:	6803      	ldr	r3, [r0, #0]
 801452c:	4621      	mov	r1, r4
 801452e:	69db      	ldr	r3, [r3, #28]
 8014530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014534:	4718      	bx	r3
 8014536:	bd10      	pop	{r4, pc}
 8014538:	20013f56 	.word	0x20013f56
 801453c:	20013f54 	.word	0x20013f54
 8014540:	20013fa4 	.word	0x20013fa4
 8014544:	20013fa0 	.word	0x20013fa0
 8014548:	20013f60 	.word	0x20013f60

0801454c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801454c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801454e:	4606      	mov	r6, r0
 8014550:	4608      	mov	r0, r1
 8014552:	460f      	mov	r7, r1
 8014554:	f7f9 fd1d 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014558:	b9e8      	cbnz	r0, 8014596 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801455a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801455e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014562:	42a5      	cmp	r5, r4
 8014564:	db17      	blt.n	8014596 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014566:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801456a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801456e:	429a      	cmp	r2, r3
 8014570:	db11      	blt.n	8014596 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014572:	88b9      	ldrh	r1, [r7, #4]
 8014574:	440d      	add	r5, r1
 8014576:	88b1      	ldrh	r1, [r6, #4]
 8014578:	440c      	add	r4, r1
 801457a:	b22d      	sxth	r5, r5
 801457c:	b224      	sxth	r4, r4
 801457e:	42a5      	cmp	r5, r4
 8014580:	dc09      	bgt.n	8014596 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014582:	88f8      	ldrh	r0, [r7, #6]
 8014584:	4410      	add	r0, r2
 8014586:	88f2      	ldrh	r2, [r6, #6]
 8014588:	4413      	add	r3, r2
 801458a:	b200      	sxth	r0, r0
 801458c:	b21b      	sxth	r3, r3
 801458e:	4298      	cmp	r0, r3
 8014590:	bfcc      	ite	gt
 8014592:	2000      	movgt	r0, #0
 8014594:	2001      	movle	r0, #1
 8014596:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014598 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014598:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801459a:	4604      	mov	r4, r0
 801459c:	4608      	mov	r0, r1
 801459e:	460d      	mov	r5, r1
 80145a0:	f7f9 fcf7 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80145a4:	b978      	cbnz	r0, 80145c6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80145a6:	4620      	mov	r0, r4
 80145a8:	f7f9 fcf3 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80145ac:	f9b5 6000 	ldrsh.w	r6, [r5]
 80145b0:	b150      	cbz	r0, 80145c8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80145b2:	8026      	strh	r6, [r4, #0]
 80145b4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80145b8:	8063      	strh	r3, [r4, #2]
 80145ba:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80145be:	80a3      	strh	r3, [r4, #4]
 80145c0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80145c4:	80e3      	strh	r3, [r4, #6]
 80145c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80145c8:	f9b4 1000 	ldrsh.w	r1, [r4]
 80145cc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80145d0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80145d4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80145d8:	88ed      	ldrh	r5, [r5, #6]
 80145da:	42b1      	cmp	r1, r6
 80145dc:	460f      	mov	r7, r1
 80145de:	bfa8      	it	ge
 80145e0:	4637      	movge	r7, r6
 80145e2:	4293      	cmp	r3, r2
 80145e4:	4618      	mov	r0, r3
 80145e6:	4466      	add	r6, ip
 80145e8:	bfa8      	it	ge
 80145ea:	4610      	movge	r0, r2
 80145ec:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80145f0:	8027      	strh	r7, [r4, #0]
 80145f2:	442a      	add	r2, r5
 80145f4:	88e5      	ldrh	r5, [r4, #6]
 80145f6:	8060      	strh	r0, [r4, #2]
 80145f8:	4461      	add	r1, ip
 80145fa:	442b      	add	r3, r5
 80145fc:	b236      	sxth	r6, r6
 80145fe:	b209      	sxth	r1, r1
 8014600:	b212      	sxth	r2, r2
 8014602:	b21b      	sxth	r3, r3
 8014604:	428e      	cmp	r6, r1
 8014606:	bfac      	ite	ge
 8014608:	ebc7 0106 	rsbge	r1, r7, r6
 801460c:	ebc7 0101 	rsblt	r1, r7, r1
 8014610:	429a      	cmp	r2, r3
 8014612:	bfac      	ite	ge
 8014614:	ebc0 0202 	rsbge	r2, r0, r2
 8014618:	ebc0 0203 	rsblt	r2, r0, r3
 801461c:	80a1      	strh	r1, [r4, #4]
 801461e:	80e2      	strh	r2, [r4, #6]
 8014620:	e7d1      	b.n	80145c6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014624 <_ZN8touchgfx11Application11getInstanceEv>:
 8014624:	4b01      	ldr	r3, [pc, #4]	@ (801462c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014626:	6818      	ldr	r0, [r3, #0]
 8014628:	4770      	bx	lr
 801462a:	bf00      	nop
 801462c:	20013fb4 	.word	0x20013fb4

08014630 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014632:	4b10      	ldr	r3, [pc, #64]	@ (8014674 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014634:	781b      	ldrb	r3, [r3, #0]
 8014636:	4605      	mov	r5, r0
 8014638:	b1d3      	cbz	r3, 8014670 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 801463a:	4b0f      	ldr	r3, [pc, #60]	@ (8014678 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 801463c:	4f0f      	ldr	r7, [pc, #60]	@ (801467c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801463e:	881c      	ldrh	r4, [r3, #0]
 8014640:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
 8014644:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
 8014648:	42a3      	cmp	r3, r4
 801464a:	d90e      	bls.n	801466a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 801464c:	683b      	ldr	r3, [r7, #0]
 801464e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8014652:	b10a      	cbz	r2, 8014658 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014654:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8014656:	b900      	cbnz	r0, 801465a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014658:	6898      	ldr	r0, [r3, #8]
 801465a:	6803      	ldr	r3, [r0, #0]
 801465c:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014660:	69db      	ldr	r3, [r3, #28]
 8014662:	3401      	adds	r4, #1
 8014664:	4798      	blx	r3
 8014666:	b2a4      	uxth	r4, r4
 8014668:	e7ec      	b.n	8014644 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 801466a:	2300      	movs	r3, #0
 801466c:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
 8014670:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014672:	bf00      	nop
 8014674:	20013f5e 	.word	0x20013f5e
 8014678:	20000084 	.word	0x20000084
 801467c:	20013f60 	.word	0x20013f60

08014680 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014680:	b510      	push	{r4, lr}
 8014682:	2300      	movs	r3, #0
 8014684:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8014688:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801468c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8014690:	4604      	mov	r4, r0
 8014692:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8014696:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 801469a:	429a      	cmp	r2, r3
 801469c:	d90e      	bls.n	80146bc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801469e:	18e2      	adds	r2, r4, r3
 80146a0:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 80146a4:	b122      	cbz	r2, 80146b0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80146a6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80146aa:	6803      	ldr	r3, [r0, #0]
 80146ac:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80146ae:	4798      	blx	r3
 80146b0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80146b4:	3301      	adds	r3, #1
 80146b6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80146ba:	e7ea      	b.n	8014692 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80146bc:	bd10      	pop	{r4, pc}

080146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80146be:	2300      	movs	r3, #0
 80146c0:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80146c4:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 80146c8:	30a4      	adds	r0, #164	@ 0xa4
 80146ca:	f802 3b01 	strb.w	r3, [r2], #1
 80146ce:	4282      	cmp	r2, r0
 80146d0:	d1fb      	bne.n	80146ca <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80146d2:	4770      	bx	lr

080146d4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80146d4:	b570      	push	{r4, r5, r6, lr}
 80146d6:	4c0b      	ldr	r4, [pc, #44]	@ (8014704 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80146d8:	4605      	mov	r5, r0
 80146da:	6820      	ldr	r0, [r4, #0]
 80146dc:	460e      	mov	r6, r1
 80146de:	b110      	cbz	r0, 80146e6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80146e0:	6803      	ldr	r3, [r0, #0]
 80146e2:	695b      	ldr	r3, [r3, #20]
 80146e4:	4798      	blx	r3
 80146e6:	1d28      	adds	r0, r5, #4
 80146e8:	f7ff ffe9 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80146ec:	6026      	str	r6, [r4, #0]
 80146ee:	6833      	ldr	r3, [r6, #0]
 80146f0:	4630      	mov	r0, r6
 80146f2:	68db      	ldr	r3, [r3, #12]
 80146f4:	4798      	blx	r3
 80146f6:	682b      	ldr	r3, [r5, #0]
 80146f8:	4628      	mov	r0, r5
 80146fa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80146fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014700:	4718      	bx	r3
 8014702:	bf00      	nop
 8014704:	20013fa4 	.word	0x20013fa4

08014708 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014708:	2300      	movs	r3, #0
 801470a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801470e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 8014712:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014714:	461a      	mov	r2, r3
 8014716:	461c      	mov	r4, r3
 8014718:	461d      	mov	r5, r3
 801471a:	459c      	cmp	ip, r3
 801471c:	dd1a      	ble.n	8014754 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801471e:	18c6      	adds	r6, r0, r3
 8014720:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8014724:	b16e      	cbz	r6, 8014742 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014726:	429a      	cmp	r2, r3
 8014728:	d008      	beq.n	801473c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801472a:	fa1f fe82 	uxth.w	lr, r2
 801472e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014732:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014736:	1887      	adds	r7, r0, r2
 8014738:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 801473c:	3201      	adds	r2, #1
 801473e:	3301      	adds	r3, #1
 8014740:	e7eb      	b.n	801471a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014742:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8014746:	4299      	cmp	r1, r3
 8014748:	bfa8      	it	ge
 801474a:	3501      	addge	r5, #1
 801474c:	429e      	cmp	r6, r3
 801474e:	bfc8      	it	gt
 8014750:	3401      	addgt	r4, #1
 8014752:	e7f4      	b.n	801473e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014754:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8014758:	1b49      	subs	r1, r1, r5
 801475a:	1b1b      	subs	r3, r3, r4
 801475c:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8014760:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8014764:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8014768:	4293      	cmp	r3, r2
 801476a:	dd03      	ble.n	8014774 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801476c:	3b01      	subs	r3, #1
 801476e:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8014772:	e7f7      	b.n	8014764 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8014774:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08014778 <_ZN8touchgfx11Application15handleTickEventEv>:
 8014778:	b570      	push	{r4, r5, r6, lr}
 801477a:	4d16      	ldr	r5, [pc, #88]	@ (80147d4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801477c:	4604      	mov	r4, r0
 801477e:	6828      	ldr	r0, [r5, #0]
 8014780:	b140      	cbz	r0, 8014794 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014782:	7a03      	ldrb	r3, [r0, #8]
 8014784:	b933      	cbnz	r3, 8014794 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014786:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801478a:	6803      	ldr	r3, [r0, #0]
 801478c:	689b      	ldr	r3, [r3, #8]
 801478e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014792:	4718      	bx	r3
 8014794:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8014798:	4e0f      	ldr	r6, [pc, #60]	@ (80147d8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801479a:	b973      	cbnz	r3, 80147ba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801479c:	b168      	cbz	r0, 80147ba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801479e:	7a03      	ldrb	r3, [r0, #8]
 80147a0:	b15b      	cbz	r3, 80147ba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80147a2:	6830      	ldr	r0, [r6, #0]
 80147a4:	b110      	cbz	r0, 80147ac <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80147a6:	6803      	ldr	r3, [r0, #0]
 80147a8:	691b      	ldr	r3, [r3, #16]
 80147aa:	4798      	blx	r3
 80147ac:	6828      	ldr	r0, [r5, #0]
 80147ae:	6803      	ldr	r3, [r0, #0]
 80147b0:	68db      	ldr	r3, [r3, #12]
 80147b2:	4798      	blx	r3
 80147b4:	2301      	movs	r3, #1
 80147b6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80147ba:	3404      	adds	r4, #4
 80147bc:	4620      	mov	r0, r4
 80147be:	f7ff ff5f 	bl	8014680 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80147c2:	4620      	mov	r0, r4
 80147c4:	f7ff ffa0 	bl	8014708 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80147c8:	6830      	ldr	r0, [r6, #0]
 80147ca:	b110      	cbz	r0, 80147d2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80147cc:	6803      	ldr	r3, [r0, #0]
 80147ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80147d0:	e7dd      	b.n	801478e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80147d2:	bd70      	pop	{r4, r5, r6, pc}
 80147d4:	20013fa8 	.word	0x20013fa8
 80147d8:	20013fa4 	.word	0x20013fa4

080147dc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80147dc:	4603      	mov	r3, r0
 80147de:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 80147e2:	2200      	movs	r2, #0
 80147e4:	801a      	strh	r2, [r3, #0]
 80147e6:	805a      	strh	r2, [r3, #2]
 80147e8:	809a      	strh	r2, [r3, #4]
 80147ea:	80da      	strh	r2, [r3, #6]
 80147ec:	3308      	adds	r3, #8
 80147ee:	428b      	cmp	r3, r1
 80147f0:	d1f8      	bne.n	80147e4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80147f2:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 80147f6:	4770      	bx	lr

080147f8 <_ZN8touchgfx11ApplicationC1Ev>:
 80147f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80147fa:	4606      	mov	r6, r0
 80147fc:	4b1c      	ldr	r3, [pc, #112]	@ (8014870 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80147fe:	f846 3b04 	str.w	r3, [r6], #4
 8014802:	4604      	mov	r4, r0
 8014804:	2500      	movs	r5, #0
 8014806:	22a8      	movs	r2, #168	@ 0xa8
 8014808:	2100      	movs	r1, #0
 801480a:	4630      	mov	r0, r6
 801480c:	f013 fd37 	bl	802827e <memset>
 8014810:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8014814:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8014818:	f7ff ffe0 	bl	80147dc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801481c:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8014820:	f7ff ffdc 	bl	80147dc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014824:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8014828:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 801482c:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8014830:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8014834:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8014838:	490e      	ldr	r1, [pc, #56]	@ (8014874 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801483a:	480f      	ldr	r0, [pc, #60]	@ (8014878 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801483c:	4f0f      	ldr	r7, [pc, #60]	@ (801487c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801483e:	f011 fd35 	bl	80262ac <CRC_Lock>
 8014842:	4b0f      	ldr	r3, [pc, #60]	@ (8014880 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014844:	b158      	cbz	r0, 801485e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014846:	801d      	strh	r5, [r3, #0]
 8014848:	4a0e      	ldr	r2, [pc, #56]	@ (8014884 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801484a:	2300      	movs	r3, #0
 801484c:	6013      	str	r3, [r2, #0]
 801484e:	4a0e      	ldr	r2, [pc, #56]	@ (8014888 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8014850:	603b      	str	r3, [r7, #0]
 8014852:	4630      	mov	r0, r6
 8014854:	6013      	str	r3, [r2, #0]
 8014856:	f7ff ff32 	bl	80146be <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801485a:	4620      	mov	r0, r4
 801485c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801485e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8014862:	2002      	movs	r0, #2
 8014864:	801a      	strh	r2, [r3, #0]
 8014866:	6038      	str	r0, [r7, #0]
 8014868:	f001 fe0a 	bl	8016480 <_ZN8touchgfx6Screen4drawEv>
 801486c:	e7ec      	b.n	8014848 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801486e:	bf00      	nop
 8014870:	0802b45c 	.word	0x0802b45c
 8014874:	b5e8b5cd 	.word	0xb5e8b5cd
 8014878:	f407a5c2 	.word	0xf407a5c2
 801487c:	20013fa4 	.word	0x20013fa4
 8014880:	20000084 	.word	0x20000084
 8014884:	20013fb4 	.word	0x20013fb4
 8014888:	20013fa8 	.word	0x20013fa8

0801488c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801488c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8014890:	3b01      	subs	r3, #1
 8014892:	b29b      	uxth	r3, r3
 8014894:	428b      	cmp	r3, r1
 8014896:	b510      	push	{r4, lr}
 8014898:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 801489c:	d908      	bls.n	80148b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801489e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80148a2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80148a6:	681a      	ldr	r2, [r3, #0]
 80148a8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80148ac:	685a      	ldr	r2, [r3, #4]
 80148ae:	6062      	str	r2, [r4, #4]
 80148b0:	bd10      	pop	{r4, pc}
	...

080148b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80148b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148b8:	4b8f      	ldr	r3, [pc, #572]	@ (8014af8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80148ba:	b08f      	sub	sp, #60	@ 0x3c
 80148bc:	ac0a      	add	r4, sp, #40	@ 0x28
 80148be:	e884 0006 	stmia.w	r4, {r1, r2}
 80148c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80148c6:	4b8d      	ldr	r3, [pc, #564]	@ (8014afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80148c8:	4683      	mov	fp, r0
 80148ca:	f9b3 1000 	ldrsh.w	r1, [r3]
 80148ce:	4620      	mov	r0, r4
 80148d0:	f7ff fdeb 	bl	80144aa <_ZN8touchgfx4Rect10restrictToEss>
 80148d4:	4620      	mov	r0, r4
 80148d6:	f7f9 fb5c 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80148da:	2800      	cmp	r0, #0
 80148dc:	d16a      	bne.n	80149b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80148de:	9403      	str	r4, [sp, #12]
 80148e0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80148e4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80148e8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80148ec:	35a4      	adds	r5, #164	@ 0xa4
 80148ee:	9301      	str	r3, [sp, #4]
 80148f0:	b15c      	cbz	r4, 801490a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80148f2:	4629      	mov	r1, r5
 80148f4:	9803      	ldr	r0, [sp, #12]
 80148f6:	f7ff fe29 	bl	801454c <_ZNK8touchgfx4Rect8includesERKS0_>
 80148fa:	3c01      	subs	r4, #1
 80148fc:	b118      	cbz	r0, 8014906 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80148fe:	b2a1      	uxth	r1, r4
 8014900:	9801      	ldr	r0, [sp, #4]
 8014902:	f7ff ffc3 	bl	801488c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014906:	3d08      	subs	r5, #8
 8014908:	e7f2      	b.n	80148f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801490a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 801490e:	f8cd a010 	str.w	sl, [sp, #16]
 8014912:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014916:	9302      	str	r3, [sp, #8]
 8014918:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801491c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8014920:	9306      	str	r3, [sp, #24]
 8014922:	445c      	add	r4, fp
 8014924:	2500      	movs	r5, #0
 8014926:	4626      	mov	r6, r4
 8014928:	f8cd a014 	str.w	sl, [sp, #20]
 801492c:	462f      	mov	r7, r5
 801492e:	9b05      	ldr	r3, [sp, #20]
 8014930:	2b00      	cmp	r3, #0
 8014932:	d073      	beq.n	8014a1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014934:	9903      	ldr	r1, [sp, #12]
 8014936:	4630      	mov	r0, r6
 8014938:	f7ff fd95 	bl	8014466 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801493c:	b350      	cbz	r0, 8014994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801493e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8014942:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014946:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 801494a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801494e:	45e6      	cmp	lr, ip
 8014950:	db33      	blt.n	80149ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014952:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8014956:	88b3      	ldrh	r3, [r6, #4]
 8014958:	4472      	add	r2, lr
 801495a:	4463      	add	r3, ip
 801495c:	b212      	sxth	r2, r2
 801495e:	b21b      	sxth	r3, r3
 8014960:	429a      	cmp	r2, r3
 8014962:	dc2a      	bgt.n	80149ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014964:	88f3      	ldrh	r3, [r6, #6]
 8014966:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801496a:	fa1f f289 	uxth.w	r2, r9
 801496e:	4413      	add	r3, r2
 8014970:	b29b      	uxth	r3, r3
 8014972:	45c8      	cmp	r8, r9
 8014974:	fa1f fc88 	uxth.w	ip, r8
 8014978:	fa0f fe83 	sxth.w	lr, r3
 801497c:	db0f      	blt.n	801499e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801497e:	eba3 030c 	sub.w	r3, r3, ip
 8014982:	1ac9      	subs	r1, r1, r3
 8014984:	b209      	sxth	r1, r1
 8014986:	2900      	cmp	r1, #0
 8014988:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801498c:	dd12      	ble.n	80149b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801498e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8014992:	4605      	mov	r5, r0
 8014994:	9b05      	ldr	r3, [sp, #20]
 8014996:	3b01      	subs	r3, #1
 8014998:	9305      	str	r3, [sp, #20]
 801499a:	3e08      	subs	r6, #8
 801499c:	e7c7      	b.n	801492e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801499e:	4461      	add	r1, ip
 80149a0:	b209      	sxth	r1, r1
 80149a2:	4571      	cmp	r1, lr
 80149a4:	dc38      	bgt.n	8014a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80149a6:	eba2 020c 	sub.w	r2, r2, ip
 80149aa:	b212      	sxth	r2, r2
 80149ac:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80149b0:	2a00      	cmp	r2, #0
 80149b2:	dcee      	bgt.n	8014992 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80149b4:	b00f      	add	sp, #60	@ 0x3c
 80149b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149ba:	45c8      	cmp	r8, r9
 80149bc:	db2c      	blt.n	8014a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80149be:	88f3      	ldrh	r3, [r6, #6]
 80149c0:	4499      	add	r9, r3
 80149c2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 80149c6:	4498      	add	r8, r3
 80149c8:	fa0f f989 	sxth.w	r9, r9
 80149cc:	fa0f f888 	sxth.w	r8, r8
 80149d0:	45c1      	cmp	r9, r8
 80149d2:	db21      	blt.n	8014a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80149d4:	88b3      	ldrh	r3, [r6, #4]
 80149d6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80149da:	fa1f f28c 	uxth.w	r2, ip
 80149de:	4413      	add	r3, r2
 80149e0:	b29b      	uxth	r3, r3
 80149e2:	45e6      	cmp	lr, ip
 80149e4:	fa1f f88e 	uxth.w	r8, lr
 80149e8:	fa0f f983 	sxth.w	r9, r3
 80149ec:	db0a      	blt.n	8014a04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80149ee:	eba3 0308 	sub.w	r3, r3, r8
 80149f2:	1ac9      	subs	r1, r1, r3
 80149f4:	b209      	sxth	r1, r1
 80149f6:	2900      	cmp	r1, #0
 80149f8:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80149fc:	ddda      	ble.n	80149b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80149fe:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8014a02:	e7c6      	b.n	8014992 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014a04:	4441      	add	r1, r8
 8014a06:	b209      	sxth	r1, r1
 8014a08:	4549      	cmp	r1, r9
 8014a0a:	dc05      	bgt.n	8014a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014a0c:	eba2 0208 	sub.w	r2, r2, r8
 8014a10:	b212      	sxth	r2, r2
 8014a12:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8014a16:	e7cb      	b.n	80149b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8014a18:	4607      	mov	r7, r0
 8014a1a:	e7bb      	b.n	8014994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014a1c:	2d00      	cmp	r5, #0
 8014a1e:	d181      	bne.n	8014924 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8014a20:	2f00      	cmp	r7, #0
 8014a22:	f000 81dd 	beq.w	8014de0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014a26:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8014a2a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8014a2e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8014a32:	b2b3      	uxth	r3, r6
 8014a34:	9305      	str	r3, [sp, #20]
 8014a36:	9a05      	ldr	r2, [sp, #20]
 8014a38:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8014a3c:	4413      	add	r3, r2
 8014a3e:	b2ba      	uxth	r2, r7
 8014a40:	4492      	add	sl, r2
 8014a42:	b29b      	uxth	r3, r3
 8014a44:	fa1f fa8a 	uxth.w	sl, sl
 8014a48:	fa0f f883 	sxth.w	r8, r3
 8014a4c:	fa0f f98a 	sxth.w	r9, sl
 8014a50:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8014a54:	9b04      	ldr	r3, [sp, #16]
 8014a56:	2b00      	cmp	r3, #0
 8014a58:	d052      	beq.n	8014b00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8014a5a:	9903      	ldr	r1, [sp, #12]
 8014a5c:	4620      	mov	r0, r4
 8014a5e:	f7ff fd02 	bl	8014466 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014a62:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8014a66:	b1c0      	cbz	r0, 8014a9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014a68:	f9b4 e000 	ldrsh.w	lr, [r4]
 8014a6c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014a70:	4576      	cmp	r6, lr
 8014a72:	dc22      	bgt.n	8014aba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014a74:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014a78:	44f4      	add	ip, lr
 8014a7a:	fa0f fc8c 	sxth.w	ip, ip
 8014a7e:	45e0      	cmp	r8, ip
 8014a80:	db1b      	blt.n	8014aba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014a82:	428f      	cmp	r7, r1
 8014a84:	fa1f fc81 	uxth.w	ip, r1
 8014a88:	88e1      	ldrh	r1, [r4, #6]
 8014a8a:	dc0d      	bgt.n	8014aa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8014a8c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8014a90:	eba1 010c 	sub.w	r1, r1, ip
 8014a94:	f8a4 9002 	strh.w	r9, [r4, #2]
 8014a98:	80e1      	strh	r1, [r4, #6]
 8014a9a:	4628      	mov	r0, r5
 8014a9c:	9904      	ldr	r1, [sp, #16]
 8014a9e:	3901      	subs	r1, #1
 8014aa0:	9104      	str	r1, [sp, #16]
 8014aa2:	3c08      	subs	r4, #8
 8014aa4:	4605      	mov	r5, r0
 8014aa6:	e7d3      	b.n	8014a50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8014aa8:	4461      	add	r1, ip
 8014aaa:	b209      	sxth	r1, r1
 8014aac:	4549      	cmp	r1, r9
 8014aae:	dcf5      	bgt.n	8014a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014ab0:	eba2 0c0c 	sub.w	ip, r2, ip
 8014ab4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8014ab8:	e7ef      	b.n	8014a9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014aba:	428f      	cmp	r7, r1
 8014abc:	dcee      	bgt.n	8014a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014abe:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8014ac2:	4461      	add	r1, ip
 8014ac4:	b209      	sxth	r1, r1
 8014ac6:	4589      	cmp	r9, r1
 8014ac8:	dbe8      	blt.n	8014a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014aca:	4576      	cmp	r6, lr
 8014acc:	fa1f fc8e 	uxth.w	ip, lr
 8014ad0:	88a1      	ldrh	r1, [r4, #4]
 8014ad2:	dc07      	bgt.n	8014ae4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8014ad4:	eba3 0c0c 	sub.w	ip, r3, ip
 8014ad8:	eba1 010c 	sub.w	r1, r1, ip
 8014adc:	f8a4 8000 	strh.w	r8, [r4]
 8014ae0:	80a1      	strh	r1, [r4, #4]
 8014ae2:	e7da      	b.n	8014a9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014ae4:	4461      	add	r1, ip
 8014ae6:	b209      	sxth	r1, r1
 8014ae8:	4588      	cmp	r8, r1
 8014aea:	dbd7      	blt.n	8014a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014aec:	9905      	ldr	r1, [sp, #20]
 8014aee:	eba1 0c0c 	sub.w	ip, r1, ip
 8014af2:	f8a4 c004 	strh.w	ip, [r4, #4]
 8014af6:	e7d0      	b.n	8014a9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014af8:	20013f56 	.word	0x20013f56
 8014afc:	20013f54 	.word	0x20013f54
 8014b00:	2d00      	cmp	r5, #0
 8014b02:	f000 816d 	beq.w	8014de0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014b06:	9b06      	ldr	r3, [sp, #24]
 8014b08:	445b      	add	r3, fp
 8014b0a:	461c      	mov	r4, r3
 8014b0c:	9b02      	ldr	r3, [sp, #8]
 8014b0e:	3301      	adds	r3, #1
 8014b10:	f000 8166 	beq.w	8014de0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014b14:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8014b18:	4629      	mov	r1, r5
 8014b1a:	9803      	ldr	r0, [sp, #12]
 8014b1c:	f7ff fd16 	bl	801454c <_ZNK8touchgfx4Rect8includesERKS0_>
 8014b20:	b120      	cbz	r0, 8014b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8014b22:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014b26:	9801      	ldr	r0, [sp, #4]
 8014b28:	f7ff feb0 	bl	801488c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014b2c:	9903      	ldr	r1, [sp, #12]
 8014b2e:	4628      	mov	r0, r5
 8014b30:	f7ff fc99 	bl	8014466 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014b34:	2800      	cmp	r0, #0
 8014b36:	f000 809c 	beq.w	8014c72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014b3a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8014b3e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014b42:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8014b46:	9309      	str	r3, [sp, #36]	@ 0x24
 8014b48:	fa1f f189 	uxth.w	r1, r9
 8014b4c:	eb01 0c03 	add.w	ip, r1, r3
 8014b50:	fa1f fa8c 	uxth.w	sl, ip
 8014b54:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8014b58:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8014b5c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8014b60:	b283      	uxth	r3, r0
 8014b62:	eb03 050c 	add.w	r5, r3, ip
 8014b66:	b2ad      	uxth	r5, r5
 8014b68:	9505      	str	r5, [sp, #20]
 8014b6a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8014b6e:	9504      	str	r5, [sp, #16]
 8014b70:	4548      	cmp	r0, r9
 8014b72:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8014b76:	f340 8099 	ble.w	8014cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8014b7a:	1a5b      	subs	r3, r3, r1
 8014b7c:	b29b      	uxth	r3, r3
 8014b7e:	4596      	cmp	lr, r2
 8014b80:	fa0f f08a 	sxth.w	r0, sl
 8014b84:	b21e      	sxth	r6, r3
 8014b86:	dd2e      	ble.n	8014be6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8014b88:	9f02      	ldr	r7, [sp, #8]
 8014b8a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8014b8e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8014b92:	9f04      	ldr	r7, [sp, #16]
 8014b94:	1a3f      	subs	r7, r7, r0
 8014b96:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8014b9a:	fa1f fe8e 	uxth.w	lr, lr
 8014b9e:	b292      	uxth	r2, r2
 8014ba0:	ebae 0102 	sub.w	r1, lr, r2
 8014ba4:	44a6      	add	lr, r4
 8014ba6:	4402      	add	r2, r0
 8014ba8:	b289      	uxth	r1, r1
 8014baa:	fa0f fe8e 	sxth.w	lr, lr
 8014bae:	b212      	sxth	r2, r2
 8014bb0:	b20d      	sxth	r5, r1
 8014bb2:	ebae 0202 	sub.w	r2, lr, r2
 8014bb6:	436f      	muls	r7, r5
 8014bb8:	4372      	muls	r2, r6
 8014bba:	4297      	cmp	r7, r2
 8014bbc:	db09      	blt.n	8014bd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8014bbe:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8014bc2:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8014bc6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8014bca:	449c      	add	ip, r3
 8014bcc:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8014bd0:	e686      	b.n	80148e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014bd2:	4421      	add	r1, r4
 8014bd4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8014bd8:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8014bdc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014be0:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014be4:	e67c      	b.n	80148e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014be6:	9f04      	ldr	r7, [sp, #16]
 8014be8:	42b8      	cmp	r0, r7
 8014bea:	da27      	bge.n	8014c3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8014bec:	9902      	ldr	r1, [sp, #8]
 8014bee:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8014bf2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8014bf6:	eb05 010e 	add.w	r1, r5, lr
 8014bfa:	fa1f f881 	uxth.w	r8, r1
 8014bfe:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8014c02:	4411      	add	r1, r2
 8014c04:	eba1 0108 	sub.w	r1, r1, r8
 8014c08:	b289      	uxth	r1, r1
 8014c0a:	fa0f f988 	sxth.w	r9, r8
 8014c0e:	eba2 020e 	sub.w	r2, r2, lr
 8014c12:	fa0f f881 	sxth.w	r8, r1
 8014c16:	1a3f      	subs	r7, r7, r0
 8014c18:	4372      	muls	r2, r6
 8014c1a:	fb08 f707 	mul.w	r7, r8, r7
 8014c1e:	42ba      	cmp	r2, r7
 8014c20:	dc06      	bgt.n	8014c30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8014c22:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8014c26:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8014c2a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 8014c2e:	e7ca      	b.n	8014bc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8014c30:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8014c34:	4429      	add	r1, r5
 8014c36:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014c3a:	e651      	b.n	80148e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014c3c:	9805      	ldr	r0, [sp, #20]
 8014c3e:	ebaa 0000 	sub.w	r0, sl, r0
 8014c42:	b280      	uxth	r0, r0
 8014c44:	2d06      	cmp	r5, #6
 8014c46:	fa0f fe80 	sxth.w	lr, r0
 8014c4a:	d817      	bhi.n	8014c7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8014c4c:	9b04      	ldr	r3, [sp, #16]
 8014c4e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8014c52:	1c6b      	adds	r3, r5, #1
 8014c54:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8014c58:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8014c5c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8014c60:	9b01      	ldr	r3, [sp, #4]
 8014c62:	9801      	ldr	r0, [sp, #4]
 8014c64:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014c68:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014c6c:	805a      	strh	r2, [r3, #2]
 8014c6e:	809e      	strh	r6, [r3, #4]
 8014c70:	80d9      	strh	r1, [r3, #6]
 8014c72:	9b02      	ldr	r3, [sp, #8]
 8014c74:	3b01      	subs	r3, #1
 8014c76:	9302      	str	r3, [sp, #8]
 8014c78:	3c08      	subs	r4, #8
 8014c7a:	e747      	b.n	8014b0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8014c7c:	9a02      	ldr	r2, [sp, #8]
 8014c7e:	45b6      	cmp	lr, r6
 8014c80:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014c84:	db0d      	blt.n	8014ca2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8014c86:	449c      	add	ip, r3
 8014c88:	fa1f fc8c 	uxth.w	ip, ip
 8014c8c:	445a      	add	r2, fp
 8014c8e:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8014c92:	448c      	add	ip, r1
 8014c94:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8014c98:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8014c9c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8014ca0:	e61e      	b.n	80148e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014ca2:	445a      	add	r2, fp
 8014ca4:	4484      	add	ip, r0
 8014ca6:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8014caa:	e78f      	b.n	8014bcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014cac:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8014cb0:	fa1f f18e 	uxth.w	r1, lr
 8014cb4:	eb01 0806 	add.w	r8, r1, r6
 8014cb8:	b293      	uxth	r3, r2
 8014cba:	fa1f f888 	uxth.w	r8, r8
 8014cbe:	9306      	str	r3, [sp, #24]
 8014cc0:	fa0f f388 	sxth.w	r3, r8
 8014cc4:	9307      	str	r3, [sp, #28]
 8014cc6:	9f06      	ldr	r7, [sp, #24]
 8014cc8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014ccc:	443b      	add	r3, r7
 8014cce:	b29b      	uxth	r3, r3
 8014cd0:	4596      	cmp	lr, r2
 8014cd2:	9308      	str	r3, [sp, #32]
 8014cd4:	da24      	bge.n	8014d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8014cd6:	9905      	ldr	r1, [sp, #20]
 8014cd8:	eba3 0308 	sub.w	r3, r3, r8
 8014cdc:	ebaa 0401 	sub.w	r4, sl, r1
 8014ce0:	b2a4      	uxth	r4, r4
 8014ce2:	b29b      	uxth	r3, r3
 8014ce4:	b225      	sxth	r5, r4
 8014ce6:	b219      	sxth	r1, r3
 8014ce8:	eba2 020e 	sub.w	r2, r2, lr
 8014cec:	eba9 0000 	sub.w	r0, r9, r0
 8014cf0:	436a      	muls	r2, r5
 8014cf2:	4348      	muls	r0, r1
 8014cf4:	4282      	cmp	r2, r0
 8014cf6:	9a02      	ldr	r2, [sp, #8]
 8014cf8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014cfc:	445a      	add	r2, fp
 8014cfe:	dc06      	bgt.n	8014d0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8014d00:	9b07      	ldr	r3, [sp, #28]
 8014d02:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8014d06:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8014d0a:	44a4      	add	ip, r4
 8014d0c:	e75e      	b.n	8014bcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014d0e:	9904      	ldr	r1, [sp, #16]
 8014d10:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8014d14:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8014d18:	4433      	add	r3, r6
 8014d1a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014d1e:	e5df      	b.n	80148e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014d20:	9f06      	ldr	r7, [sp, #24]
 8014d22:	9b04      	ldr	r3, [sp, #16]
 8014d24:	1bc9      	subs	r1, r1, r7
 8014d26:	fa0f f78a 	sxth.w	r7, sl
 8014d2a:	b289      	uxth	r1, r1
 8014d2c:	429f      	cmp	r7, r3
 8014d2e:	fa0f fe81 	sxth.w	lr, r1
 8014d32:	dd23      	ble.n	8014d7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8014d34:	9a05      	ldr	r2, [sp, #20]
 8014d36:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014d3a:	9d07      	ldr	r5, [sp, #28]
 8014d3c:	ebaa 0202 	sub.w	r2, sl, r2
 8014d40:	b292      	uxth	r2, r2
 8014d42:	eba5 0a03 	sub.w	sl, r5, r3
 8014d46:	b214      	sxth	r4, r2
 8014d48:	eba9 0000 	sub.w	r0, r9, r0
 8014d4c:	9b02      	ldr	r3, [sp, #8]
 8014d4e:	fb0e f000 	mul.w	r0, lr, r0
 8014d52:	fb04 fa0a 	mul.w	sl, r4, sl
 8014d56:	00db      	lsls	r3, r3, #3
 8014d58:	4550      	cmp	r0, sl
 8014d5a:	445b      	add	r3, fp
 8014d5c:	db03      	blt.n	8014d66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8014d5e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8014d62:	4494      	add	ip, r2
 8014d64:	e732      	b.n	8014bcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014d66:	9a04      	ldr	r2, [sp, #16]
 8014d68:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8014d6c:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8014d70:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8014d74:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014d78:	4431      	add	r1, r6
 8014d7a:	e75c      	b.n	8014c36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8014d7c:	9b08      	ldr	r3, [sp, #32]
 8014d7e:	eba3 0308 	sub.w	r3, r3, r8
 8014d82:	b29b      	uxth	r3, r3
 8014d84:	2d06      	cmp	r5, #6
 8014d86:	b218      	sxth	r0, r3
 8014d88:	d813      	bhi.n	8014db2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8014d8a:	9b07      	ldr	r3, [sp, #28]
 8014d8c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8014d90:	1c6b      	adds	r3, r5, #1
 8014d92:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8014d96:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8014d9a:	9b01      	ldr	r3, [sp, #4]
 8014d9c:	9901      	ldr	r1, [sp, #4]
 8014d9e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014da2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8014da6:	805a      	strh	r2, [r3, #2]
 8014da8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014daa:	809a      	strh	r2, [r3, #4]
 8014dac:	f8a3 e006 	strh.w	lr, [r3, #6]
 8014db0:	e75f      	b.n	8014c72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014db2:	9c02      	ldr	r4, [sp, #8]
 8014db4:	4570      	cmp	r0, lr
 8014db6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8014dba:	db0d      	blt.n	8014dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8014dbc:	4431      	add	r1, r6
 8014dbe:	9b06      	ldr	r3, [sp, #24]
 8014dc0:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8014dc4:	b289      	uxth	r1, r1
 8014dc6:	445c      	add	r4, fp
 8014dc8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014dcc:	4419      	add	r1, r3
 8014dce:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8014dd2:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8014dd6:	e583      	b.n	80148e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014dd8:	445c      	add	r4, fp
 8014dda:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8014dde:	e79b      	b.n	8014d18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8014de0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8014de4:	1e65      	subs	r5, r4, #1
 8014de6:	b2ad      	uxth	r5, r5
 8014de8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8014dec:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8014df0:	42b5      	cmp	r5, r6
 8014df2:	d044      	beq.n	8014e7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8014df4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8014df8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8014dfc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8014e00:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8014e04:	4282      	cmp	r2, r0
 8014e06:	d11f      	bne.n	8014e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014e08:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8014e0c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8014e10:	459c      	cmp	ip, r3
 8014e12:	d119      	bne.n	8014e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014e14:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8014e18:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8014e1c:	19d8      	adds	r0, r3, r7
 8014e1e:	b200      	sxth	r0, r0
 8014e20:	4288      	cmp	r0, r1
 8014e22:	d109      	bne.n	8014e38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8014e24:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8014e28:	4413      	add	r3, r2
 8014e2a:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8014e2e:	4629      	mov	r1, r5
 8014e30:	9801      	ldr	r0, [sp, #4]
 8014e32:	f7ff fd2b 	bl	801488c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014e36:	e003      	b.n	8014e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014e38:	4411      	add	r1, r2
 8014e3a:	b209      	sxth	r1, r1
 8014e3c:	42b9      	cmp	r1, r7
 8014e3e:	d0f3      	beq.n	8014e28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8014e40:	3d01      	subs	r5, #1
 8014e42:	b2ad      	uxth	r5, r5
 8014e44:	3c08      	subs	r4, #8
 8014e46:	e7d3      	b.n	8014df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8014e48:	42b9      	cmp	r1, r7
 8014e4a:	d1f9      	bne.n	8014e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014e4c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8014e50:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014e54:	4299      	cmp	r1, r3
 8014e56:	d1f3      	bne.n	8014e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014e58:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014e5c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8014e60:	181f      	adds	r7, r3, r0
 8014e62:	b23f      	sxth	r7, r7
 8014e64:	42ba      	cmp	r2, r7
 8014e66:	d105      	bne.n	8014e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8014e68:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8014e6c:	440b      	add	r3, r1
 8014e6e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014e72:	e7dc      	b.n	8014e2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8014e74:	440a      	add	r2, r1
 8014e76:	b212      	sxth	r2, r2
 8014e78:	4290      	cmp	r0, r2
 8014e7a:	d1e1      	bne.n	8014e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014e7c:	e7f6      	b.n	8014e6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8014e7e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8014e82:	2e07      	cmp	r6, #7
 8014e84:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8014e88:	d812      	bhi.n	8014eb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8014e8a:	1c75      	adds	r5, r6, #1
 8014e8c:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8014e90:	9d01      	ldr	r5, [sp, #4]
 8014e92:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8014e96:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8014e9a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8014e9e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8014ea2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8014ea6:	442c      	add	r4, r5
 8014ea8:	8061      	strh	r1, [r4, #2]
 8014eaa:	80a2      	strh	r2, [r4, #4]
 8014eac:	80e3      	strh	r3, [r4, #6]
 8014eae:	e581      	b.n	80149b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014eb0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8014eb4:	3e01      	subs	r6, #1
 8014eb6:	445c      	add	r4, fp
 8014eb8:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8014ebc:	f04f 37ff 	mov.w	r7, #4294967295
 8014ec0:	2500      	movs	r5, #0
 8014ec2:	9305      	str	r3, [sp, #20]
 8014ec4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014ec8:	9302      	str	r3, [sp, #8]
 8014eca:	1e72      	subs	r2, r6, #1
 8014ecc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8014ed0:	9304      	str	r3, [sp, #16]
 8014ed2:	4691      	mov	r9, r2
 8014ed4:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8014ed8:	f1b9 3fff 	cmp.w	r9, #4294967295
 8014edc:	bf14      	ite	ne
 8014ede:	9905      	ldrne	r1, [sp, #20]
 8014ee0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8014ee4:	6818      	ldr	r0, [r3, #0]
 8014ee6:	9207      	str	r2, [sp, #28]
 8014ee8:	bf18      	it	ne
 8014eea:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8014eee:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8014ef2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8014ef6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8014efa:	9306      	str	r3, [sp, #24]
 8014efc:	fb18 f801 	smulbb	r8, r8, r1
 8014f00:	6859      	ldr	r1, [r3, #4]
 8014f02:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014f06:	4671      	mov	r1, lr
 8014f08:	a80c      	add	r0, sp, #48	@ 0x30
 8014f0a:	f7ff fb45 	bl	8014598 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014f0e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8014f12:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8014f16:	9b04      	ldr	r3, [sp, #16]
 8014f18:	9a02      	ldr	r2, [sp, #8]
 8014f1a:	fb10 f001 	smulbb	r0, r0, r1
 8014f1e:	fb02 8803 	mla	r8, r2, r3, r8
 8014f22:	eba0 0108 	sub.w	r1, r0, r8
 8014f26:	f04f 0c08 	mov.w	ip, #8
 8014f2a:	fb90 f0fc 	sdiv	r0, r0, ip
 8014f2e:	4288      	cmp	r0, r1
 8014f30:	dc20      	bgt.n	8014f74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014f32:	4551      	cmp	r1, sl
 8014f34:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8014f38:	da03      	bge.n	8014f42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8014f3a:	b1d9      	cbz	r1, 8014f74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014f3c:	468a      	mov	sl, r1
 8014f3e:	464f      	mov	r7, r9
 8014f40:	4635      	mov	r5, r6
 8014f42:	f109 39ff 	add.w	r9, r9, #4294967295
 8014f46:	f119 0f02 	cmn.w	r9, #2
 8014f4a:	d1c5      	bne.n	8014ed8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8014f4c:	4616      	mov	r6, r2
 8014f4e:	3201      	adds	r2, #1
 8014f50:	f1a4 0408 	sub.w	r4, r4, #8
 8014f54:	d1b6      	bne.n	8014ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8014f56:	9b01      	ldr	r3, [sp, #4]
 8014f58:	b2ac      	uxth	r4, r5
 8014f5a:	00ed      	lsls	r5, r5, #3
 8014f5c:	1958      	adds	r0, r3, r5
 8014f5e:	1c7b      	adds	r3, r7, #1
 8014f60:	d10b      	bne.n	8014f7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8014f62:	4601      	mov	r1, r0
 8014f64:	9803      	ldr	r0, [sp, #12]
 8014f66:	f7ff fb17 	bl	8014598 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014f6a:	4621      	mov	r1, r4
 8014f6c:	9801      	ldr	r0, [sp, #4]
 8014f6e:	f7ff fc8d 	bl	801488c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014f72:	e4b5      	b.n	80148e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014f74:	464f      	mov	r7, r9
 8014f76:	4635      	mov	r5, r6
 8014f78:	e7ed      	b.n	8014f56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8014f7a:	9b01      	ldr	r3, [sp, #4]
 8014f7c:	00ff      	lsls	r7, r7, #3
 8014f7e:	19d9      	adds	r1, r3, r7
 8014f80:	f7ff fb0a 	bl	8014598 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014f84:	9b03      	ldr	r3, [sp, #12]
 8014f86:	cb03      	ldmia	r3!, {r0, r1}
 8014f88:	445f      	add	r7, fp
 8014f8a:	445d      	add	r5, fp
 8014f8c:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8014f90:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8014f94:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8014f98:	9b03      	ldr	r3, [sp, #12]
 8014f9a:	6869      	ldr	r1, [r5, #4]
 8014f9c:	c303      	stmia	r3!, {r0, r1}
 8014f9e:	e7e4      	b.n	8014f6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08014fa0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8014fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fa4:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8014fa8:	b09b      	sub	sp, #108	@ 0x6c
 8014faa:	4604      	mov	r4, r0
 8014fac:	4630      	mov	r0, r6
 8014fae:	f7f8 fff0 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014fb2:	4605      	mov	r5, r0
 8014fb4:	b948      	cbnz	r0, 8014fca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8014fb6:	6823      	ldr	r3, [r4, #0]
 8014fb8:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014fbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014fbe:	4620      	mov	r0, r4
 8014fc0:	4798      	blx	r3
 8014fc2:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8014fc6:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8014fca:	4bc6      	ldr	r3, [pc, #792]	@ (80152e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8014fcc:	681b      	ldr	r3, [r3, #0]
 8014fce:	2b00      	cmp	r3, #0
 8014fd0:	d03f      	beq.n	8015052 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014fd2:	4dc5      	ldr	r5, [pc, #788]	@ (80152e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8014fd4:	4628      	mov	r0, r5
 8014fd6:	f7f8 ffdc 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014fda:	4606      	mov	r6, r0
 8014fdc:	2800      	cmp	r0, #0
 8014fde:	d138      	bne.n	8015052 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014fe0:	4628      	mov	r0, r5
 8014fe2:	f7ff f96d 	bl	80142c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014fe6:	6823      	ldr	r3, [r4, #0]
 8014fe8:	6829      	ldr	r1, [r5, #0]
 8014fea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014fec:	686a      	ldr	r2, [r5, #4]
 8014fee:	4620      	mov	r0, r4
 8014ff0:	4798      	blx	r3
 8014ff2:	802e      	strh	r6, [r5, #0]
 8014ff4:	806e      	strh	r6, [r5, #2]
 8014ff6:	80ae      	strh	r6, [r5, #4]
 8014ff8:	80ee      	strh	r6, [r5, #6]
 8014ffa:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8014ffe:	4dbb      	ldr	r5, [pc, #748]	@ (80152ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015000:	4640      	mov	r0, r8
 8015002:	f7ff fbeb 	bl	80147dc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015006:	882e      	ldrh	r6, [r5, #0]
 8015008:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 801500c:	4633      	mov	r3, r6
 801500e:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8015012:	42bb      	cmp	r3, r7
 8015014:	d224      	bcs.n	8015060 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015016:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 801501a:	2907      	cmp	r1, #7
 801501c:	d816      	bhi.n	801504c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801501e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015022:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015026:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801502a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801502e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015032:	1c4a      	adds	r2, r1, #1
 8015034:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8015038:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801503c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015040:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015044:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015048:	f8a2 c006 	strh.w	ip, [r2, #6]
 801504c:	3301      	adds	r3, #1
 801504e:	b29b      	uxth	r3, r3
 8015050:	e7df      	b.n	8015012 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015052:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8015056:	2b00      	cmp	r3, #0
 8015058:	d1cf      	bne.n	8014ffa <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801505a:	b01b      	add	sp, #108	@ 0x6c
 801505c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015060:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8015064:	42b3      	cmp	r3, r6
 8015066:	d90c      	bls.n	8015082 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015068:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801506c:	6822      	ldr	r2, [r4, #0]
 801506e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8015072:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8015074:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8015078:	4620      	mov	r0, r4
 801507a:	3601      	adds	r6, #1
 801507c:	47b8      	blx	r7
 801507e:	b2b6      	uxth	r6, r6
 8015080:	e7ee      	b.n	8015060 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015082:	4a9b      	ldr	r2, [pc, #620]	@ (80152f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015084:	6813      	ldr	r3, [r2, #0]
 8015086:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 801508a:	2b01      	cmp	r3, #1
 801508c:	4691      	mov	r9, r2
 801508e:	f040 80e2 	bne.w	8015256 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015092:	8829      	ldrh	r1, [r5, #0]
 8015094:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8015098:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801509c:	33ae      	adds	r3, #174	@ 0xae
 801509e:	2600      	movs	r6, #0
 80150a0:	428f      	cmp	r7, r1
 80150a2:	f103 0308 	add.w	r3, r3, #8
 80150a6:	dd0a      	ble.n	80150be <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80150a8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80150ac:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80150b0:	4402      	add	r2, r0
 80150b2:	b212      	sxth	r2, r2
 80150b4:	4296      	cmp	r6, r2
 80150b6:	bfb8      	it	lt
 80150b8:	4616      	movlt	r6, r2
 80150ba:	3101      	adds	r1, #1
 80150bc:	e7f0      	b.n	80150a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80150be:	4b8d      	ldr	r3, [pc, #564]	@ (80152f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80150c0:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 80152f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80150c4:	881b      	ldrh	r3, [r3, #0]
 80150c6:	2b0f      	cmp	r3, #15
 80150c8:	bf88      	it	hi
 80150ca:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80150ce:	f04f 0300 	mov.w	r3, #0
 80150d2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80150d6:	bf98      	it	ls
 80150d8:	f04f 0b01 	movls.w	fp, #1
 80150dc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80150e0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80150e4:	4b82      	ldr	r3, [pc, #520]	@ (80152f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80150e6:	4438      	add	r0, r7
 80150e8:	b207      	sxth	r7, r0
 80150ea:	6818      	ldr	r0, [r3, #0]
 80150ec:	42b7      	cmp	r7, r6
 80150ee:	6803      	ldr	r3, [r0, #0]
 80150f0:	f280 8083 	bge.w	80151fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80150f4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80150f8:	4798      	blx	r3
 80150fa:	eb07 030b 	add.w	r3, r7, fp
 80150fe:	4298      	cmp	r0, r3
 8015100:	da07      	bge.n	8015112 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015102:	42b0      	cmp	r0, r6
 8015104:	da05      	bge.n	8015112 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015106:	4287      	cmp	r7, r0
 8015108:	dd6c      	ble.n	80151e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801510a:	2f00      	cmp	r7, #0
 801510c:	dd6a      	ble.n	80151e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801510e:	4630      	mov	r0, r6
 8015110:	e004      	b.n	801511c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015112:	4287      	cmp	r7, r0
 8015114:	dcfb      	bgt.n	801510e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015116:	42b0      	cmp	r0, r6
 8015118:	bfa8      	it	ge
 801511a:	4630      	movge	r0, r6
 801511c:	4b76      	ldr	r3, [pc, #472]	@ (80152f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801511e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015122:	1bc0      	subs	r0, r0, r7
 8015124:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015128:	882f      	ldrh	r7, [r5, #0]
 801512a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801512e:	2200      	movs	r2, #0
 8015130:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015134:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015138:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801513c:	42bb      	cmp	r3, r7
 801513e:	d9cd      	bls.n	80150dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015140:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015144:	ab07      	add	r3, sp, #28
 8015146:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801514a:	6851      	ldr	r1, [r2, #4]
 801514c:	c303      	stmia	r3!, {r0, r1}
 801514e:	a905      	add	r1, sp, #20
 8015150:	a807      	add	r0, sp, #28
 8015152:	f7ff f988 	bl	8014466 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015156:	2800      	cmp	r0, #0
 8015158:	d04c      	beq.n	80151f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801515a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801515e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015162:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015166:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801516a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801516e:	9302      	str	r3, [sp, #8]
 8015170:	4686      	mov	lr, r0
 8015172:	4290      	cmp	r0, r2
 8015174:	4450      	add	r0, sl
 8015176:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801517a:	bfb8      	it	lt
 801517c:	4696      	movlt	lr, r2
 801517e:	4452      	add	r2, sl
 8015180:	4299      	cmp	r1, r3
 8015182:	b280      	uxth	r0, r0
 8015184:	b292      	uxth	r2, r2
 8015186:	468c      	mov	ip, r1
 8015188:	fa0f fa82 	sxth.w	sl, r2
 801518c:	bfb8      	it	lt
 801518e:	469c      	movlt	ip, r3
 8015190:	b203      	sxth	r3, r0
 8015192:	4553      	cmp	r3, sl
 8015194:	bfb8      	it	lt
 8015196:	4602      	movlt	r2, r0
 8015198:	eba2 020e 	sub.w	r2, r2, lr
 801519c:	f8ad 2020 	strh.w	r2, [sp, #32]
 80151a0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80151a4:	9b02      	ldr	r3, [sp, #8]
 80151a6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80151aa:	4411      	add	r1, r2
 80151ac:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80151b0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80151b4:	4413      	add	r3, r2
 80151b6:	b289      	uxth	r1, r1
 80151b8:	b29b      	uxth	r3, r3
 80151ba:	b208      	sxth	r0, r1
 80151bc:	b21a      	sxth	r2, r3
 80151be:	4290      	cmp	r0, r2
 80151c0:	bfb8      	it	lt
 80151c2:	460b      	movlt	r3, r1
 80151c4:	eba3 030c 	sub.w	r3, r3, ip
 80151c8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80151cc:	a807      	add	r0, sp, #28
 80151ce:	f7f8 fee0 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80151d2:	b920      	cbnz	r0, 80151de <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80151d4:	6823      	ldr	r3, [r4, #0]
 80151d6:	a907      	add	r1, sp, #28
 80151d8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80151da:	4620      	mov	r0, r4
 80151dc:	4798      	blx	r3
 80151de:	3701      	adds	r7, #1
 80151e0:	b2bf      	uxth	r7, r7
 80151e2:	e7a9      	b.n	8015138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80151e4:	f8d9 0000 	ldr.w	r0, [r9]
 80151e8:	6803      	ldr	r3, [r0, #0]
 80151ea:	2101      	movs	r1, #1
 80151ec:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80151f0:	4798      	blx	r3
 80151f2:	e773      	b.n	80150dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80151f4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80151f8:	e7e8      	b.n	80151cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80151fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80151fc:	4798      	blx	r3
 80151fe:	4b3f      	ldr	r3, [pc, #252]	@ (80152fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015200:	781b      	ldrb	r3, [r3, #0]
 8015202:	2b00      	cmp	r3, #0
 8015204:	f43f af29 	beq.w	801505a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015208:	2300      	movs	r3, #0
 801520a:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 801520e:	882b      	ldrh	r3, [r5, #0]
 8015210:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8015214:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8015218:	42ab      	cmp	r3, r5
 801521a:	f4bf af1e 	bcs.w	801505a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801521e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8015222:	2907      	cmp	r1, #7
 8015224:	d814      	bhi.n	8015250 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015226:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801522a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801522e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015232:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015236:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801523a:	1c4a      	adds	r2, r1, #1
 801523c:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8015240:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015244:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015248:	f8a2 c002 	strh.w	ip, [r2, #2]
 801524c:	8097      	strh	r7, [r2, #4]
 801524e:	80d6      	strh	r6, [r2, #6]
 8015250:	3301      	adds	r3, #1
 8015252:	b29b      	uxth	r3, r3
 8015254:	e7e0      	b.n	8015218 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015256:	2b02      	cmp	r3, #2
 8015258:	f040 8133 	bne.w	80154c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801525c:	4b28      	ldr	r3, [pc, #160]	@ (8015300 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801525e:	781b      	ldrb	r3, [r3, #0]
 8015260:	2b01      	cmp	r3, #1
 8015262:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8015266:	f000 8098 	beq.w	801539a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801526a:	882a      	ldrh	r2, [r5, #0]
 801526c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8015270:	3201      	adds	r2, #1
 8015272:	b292      	uxth	r2, r2
 8015274:	2900      	cmp	r1, #0
 8015276:	d0c2      	beq.n	80151fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015278:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 801527c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8015280:	441e      	add	r6, r3
 8015282:	b236      	sxth	r6, r6
 8015284:	4694      	mov	ip, r2
 8015286:	f04f 0900 	mov.w	r9, #0
 801528a:	fa1f f38c 	uxth.w	r3, ip
 801528e:	4299      	cmp	r1, r3
 8015290:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8015294:	f240 80bf 	bls.w	8015416 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015298:	4427      	add	r7, r4
 801529a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801529e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 80152a2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 80152a6:	4283      	cmp	r3, r0
 80152a8:	f340 80a1 	ble.w	80153ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80152ac:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 80152b0:	4406      	add	r6, r0
 80152b2:	b236      	sxth	r6, r6
 80152b4:	429e      	cmp	r6, r3
 80152b6:	bfa8      	it	ge
 80152b8:	461e      	movge	r6, r3
 80152ba:	46e1      	mov	r9, ip
 80152bc:	f10c 0c01 	add.w	ip, ip, #1
 80152c0:	e7e3      	b.n	801528a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80152c2:	d10a      	bne.n	80152da <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80152c4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 80152c8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 80152cc:	4562      	cmp	r2, ip
 80152ce:	bfb8      	it	lt
 80152d0:	4662      	movlt	r2, ip
 80152d2:	4288      	cmp	r0, r1
 80152d4:	bfb8      	it	lt
 80152d6:	461f      	movlt	r7, r3
 80152d8:	e087      	b.n	80153ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80152da:	428a      	cmp	r2, r1
 80152dc:	bfb8      	it	lt
 80152de:	460a      	movlt	r2, r1
 80152e0:	e083      	b.n	80153ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80152e2:	bf00      	nop
 80152e4:	20013fa0 	.word	0x20013fa0
 80152e8:	20013fac 	.word	0x20013fac
 80152ec:	20000084 	.word	0x20000084
 80152f0:	20013f60 	.word	0x20013f60
 80152f4:	20013f56 	.word	0x20013f56
 80152f8:	20013f54 	.word	0x20013f54
 80152fc:	20013f5e 	.word	0x20013f5e
 8015300:	20013f58 	.word	0x20013f58
 8015304:	19a1      	adds	r1, r4, r6
 8015306:	ab07      	add	r3, sp, #28
 8015308:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801530c:	6849      	ldr	r1, [r1, #4]
 801530e:	c303      	stmia	r3!, {r0, r1}
 8015310:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015314:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015318:	2b13      	cmp	r3, #19
 801531a:	bfd8      	it	le
 801531c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015320:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015324:	440b      	add	r3, r1
 8015326:	1a9b      	subs	r3, r3, r2
 8015328:	a807      	add	r0, sp, #28
 801532a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801532e:	f7fe ffe1 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015332:	a807      	add	r0, sp, #28
 8015334:	f7f8 fe2d 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015338:	bb78      	cbnz	r0, 801539a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801533a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 801533e:	f8d9 0000 	ldr.w	r0, [r9]
 8015342:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015346:	f8d0 e000 	ldr.w	lr, [r0]
 801534a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801534e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015352:	f1bc 0f14 	cmp.w	ip, #20
 8015356:	bfa8      	it	ge
 8015358:	f04f 0c14 	movge.w	ip, #20
 801535c:	fa1f fc8c 	uxth.w	ip, ip
 8015360:	f8cd c000 	str.w	ip, [sp]
 8015364:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8015368:	47d8      	blx	fp
 801536a:	4683      	mov	fp, r0
 801536c:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8015370:	a807      	add	r0, sp, #28
 8015372:	f7fe ffa5 	bl	80142c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015376:	6823      	ldr	r3, [r4, #0]
 8015378:	4426      	add	r6, r4
 801537a:	4620      	mov	r0, r4
 801537c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801537e:	a907      	add	r1, sp, #28
 8015380:	4798      	blx	r3
 8015382:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8015386:	eba0 000b 	sub.w	r0, r0, fp
 801538a:	b200      	sxth	r0, r0
 801538c:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8015390:	b918      	cbnz	r0, 801539a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015392:	b2b9      	uxth	r1, r7
 8015394:	4650      	mov	r0, sl
 8015396:	f7ff fa79 	bl	801488c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801539a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 801539e:	f1bb 0f00 	cmp.w	fp, #0
 80153a2:	f43f af2c 	beq.w	80151fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80153a6:	882b      	ldrh	r3, [r5, #0]
 80153a8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 80153ac:	3301      	adds	r3, #1
 80153ae:	b29b      	uxth	r3, r3
 80153b0:	2700      	movs	r7, #0
 80153b2:	b299      	uxth	r1, r3
 80153b4:	458b      	cmp	fp, r1
 80153b6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80153ba:	d9a3      	bls.n	8015304 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80153bc:	4426      	add	r6, r4
 80153be:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80153c2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 80153c6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 80153ca:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 80153ce:	4408      	add	r0, r1
 80153d0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 80153d4:	4461      	add	r1, ip
 80153d6:	b200      	sxth	r0, r0
 80153d8:	b209      	sxth	r1, r1
 80153da:	4288      	cmp	r0, r1
 80153dc:	f6bf af71 	bge.w	80152c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80153e0:	4584      	cmp	ip, r0
 80153e2:	4662      	mov	r2, ip
 80153e4:	461f      	mov	r7, r3
 80153e6:	bfb8      	it	lt
 80153e8:	4602      	movlt	r2, r0
 80153ea:	3301      	adds	r3, #1
 80153ec:	e7e1      	b.n	80153b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80153ee:	d10e      	bne.n	801540e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80153f0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 80153f4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 80153f8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 80153fc:	4473      	add	r3, lr
 80153fe:	b21b      	sxth	r3, r3
 8015400:	429e      	cmp	r6, r3
 8015402:	bfa8      	it	ge
 8015404:	461e      	movge	r6, r3
 8015406:	4287      	cmp	r7, r0
 8015408:	bfb8      	it	lt
 801540a:	46e1      	movlt	r9, ip
 801540c:	e756      	b.n	80152bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801540e:	4286      	cmp	r6, r0
 8015410:	bfa8      	it	ge
 8015412:	4606      	movge	r6, r0
 8015414:	e752      	b.n	80152bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015416:	eb0a 0007 	add.w	r0, sl, r7
 801541a:	4427      	add	r7, r4
 801541c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015420:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8015424:	f1bb 0f13 	cmp.w	fp, #19
 8015428:	bfde      	ittt	le
 801542a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 801542e:	445e      	addle	r6, fp
 8015430:	b236      	sxthle	r6, r6
 8015432:	f7f8 fdae 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015436:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801543a:	2800      	cmp	r0, #0
 801543c:	f47f af1a 	bne.w	8015274 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015440:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8015444:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8015448:	482a      	ldr	r0, [pc, #168]	@ (80154f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801544a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 801544e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8015452:	6800      	ldr	r0, [r0, #0]
 8015454:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015458:	1ab6      	subs	r6, r6, r2
 801545a:	2e14      	cmp	r6, #20
 801545c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015460:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015464:	bfa8      	it	ge
 8015466:	2614      	movge	r6, #20
 8015468:	f8d0 c000 	ldr.w	ip, [r0]
 801546c:	b2b6      	uxth	r6, r6
 801546e:	fa1f fb8b 	uxth.w	fp, fp
 8015472:	455e      	cmp	r6, fp
 8015474:	bf94      	ite	ls
 8015476:	9600      	strls	r6, [sp, #0]
 8015478:	f8cd b000 	strhi.w	fp, [sp]
 801547c:	b292      	uxth	r2, r2
 801547e:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8015482:	b29b      	uxth	r3, r3
 8015484:	b289      	uxth	r1, r1
 8015486:	47b0      	blx	r6
 8015488:	6823      	ldr	r3, [r4, #0]
 801548a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 801548e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8015490:	a907      	add	r1, sp, #28
 8015492:	4620      	mov	r0, r4
 8015494:	4798      	blx	r3
 8015496:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 801549a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 801549e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 80154a2:	1a5b      	subs	r3, r3, r1
 80154a4:	440a      	add	r2, r1
 80154a6:	b21b      	sxth	r3, r3
 80154a8:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 80154ac:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 80154b0:	2b00      	cmp	r3, #0
 80154b2:	f47f aeda 	bne.w	801526a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80154b6:	fa1f f189 	uxth.w	r1, r9
 80154ba:	4650      	mov	r0, sl
 80154bc:	f7ff f9e6 	bl	801488c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80154c0:	e6d3      	b.n	801526a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80154c2:	882e      	ldrh	r6, [r5, #0]
 80154c4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80154c8:	42b3      	cmp	r3, r6
 80154ca:	f67f ae98 	bls.w	80151fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80154ce:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80154d2:	ab07      	add	r3, sp, #28
 80154d4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80154d8:	6851      	ldr	r1, [r2, #4]
 80154da:	c303      	stmia	r3!, {r0, r1}
 80154dc:	a807      	add	r0, sp, #28
 80154de:	f7f8 fd58 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80154e2:	b920      	cbnz	r0, 80154ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80154e4:	6823      	ldr	r3, [r4, #0]
 80154e6:	a907      	add	r1, sp, #28
 80154e8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80154ea:	4620      	mov	r0, r4
 80154ec:	4798      	blx	r3
 80154ee:	3601      	adds	r6, #1
 80154f0:	b2b6      	uxth	r6, r6
 80154f2:	e7e7      	b.n	80154c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80154f4:	20013f60 	.word	0x20013f60

080154f8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80154f8:	4b03      	ldr	r3, [pc, #12]	@ (8015508 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80154fa:	2200      	movs	r2, #0
 80154fc:	801a      	strh	r2, [r3, #0]
 80154fe:	805a      	strh	r2, [r3, #2]
 8015500:	809a      	strh	r2, [r3, #4]
 8015502:	80da      	strh	r2, [r3, #6]
 8015504:	4770      	bx	lr
 8015506:	bf00      	nop
 8015508:	20013fac 	.word	0x20013fac

0801550c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801550c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015510:	4606      	mov	r6, r0
 8015512:	b09d      	sub	sp, #116	@ 0x74
 8015514:	a803      	add	r0, sp, #12
 8015516:	4614      	mov	r4, r2
 8015518:	468a      	mov	sl, r1
 801551a:	461d      	mov	r5, r3
 801551c:	f001 f95d 	bl	80167da <_ZN8touchgfx12TextProviderC1Ev>
 8015520:	6833      	ldr	r3, [r6, #0]
 8015522:	4630      	mov	r0, r6
 8015524:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015526:	4798      	blx	r3
 8015528:	6833      	ldr	r3, [r6, #0]
 801552a:	4607      	mov	r7, r0
 801552c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801552e:	4630      	mov	r0, r6
 8015530:	4798      	blx	r3
 8015532:	462a      	mov	r2, r5
 8015534:	9000      	str	r0, [sp, #0]
 8015536:	4621      	mov	r1, r4
 8015538:	463b      	mov	r3, r7
 801553a:	a803      	add	r0, sp, #12
 801553c:	f001 f9a8 	bl	8016890 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015540:	2500      	movs	r5, #0
 8015542:	462c      	mov	r4, r5
 8015544:	46a9      	mov	r9, r5
 8015546:	46a8      	mov	r8, r5
 8015548:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 801554c:	2300      	movs	r3, #0
 801554e:	9302      	str	r3, [sp, #8]
 8015550:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015554:	429c      	cmp	r4, r3
 8015556:	d002      	beq.n	801555e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015558:	455c      	cmp	r4, fp
 801555a:	bf18      	it	ne
 801555c:	4625      	movne	r5, r4
 801555e:	ab02      	add	r3, sp, #8
 8015560:	4632      	mov	r2, r6
 8015562:	4651      	mov	r1, sl
 8015564:	a803      	add	r0, sp, #12
 8015566:	f001 fcbf 	bl	8016ee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801556a:	4604      	mov	r4, r0
 801556c:	b108      	cbz	r0, 8015572 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801556e:	280a      	cmp	r0, #10
 8015570:	d10a      	bne.n	8015588 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015572:	45c1      	cmp	r9, r8
 8015574:	bf38      	it	cc
 8015576:	46c1      	movcc	r9, r8
 8015578:	f04f 0800 	mov.w	r8, #0
 801557c:	2c00      	cmp	r4, #0
 801557e:	d1e5      	bne.n	801554c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015580:	4648      	mov	r0, r9
 8015582:	b01d      	add	sp, #116	@ 0x74
 8015584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015588:	9a02      	ldr	r2, [sp, #8]
 801558a:	2a00      	cmp	r2, #0
 801558c:	d0de      	beq.n	801554c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801558e:	7b57      	ldrb	r7, [r2, #13]
 8015590:	6833      	ldr	r3, [r6, #0]
 8015592:	8894      	ldrh	r4, [r2, #4]
 8015594:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015596:	007f      	lsls	r7, r7, #1
 8015598:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 801559c:	7a97      	ldrb	r7, [r2, #10]
 801559e:	4629      	mov	r1, r5
 80155a0:	4307      	orrs	r7, r0
 80155a2:	4630      	mov	r0, r6
 80155a4:	4798      	blx	r3
 80155a6:	4438      	add	r0, r7
 80155a8:	4480      	add	r8, r0
 80155aa:	fa1f f888 	uxth.w	r8, r8
 80155ae:	e7e5      	b.n	801557c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080155b0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80155b0:	b508      	push	{r3, lr}
 80155b2:	6803      	ldr	r3, [r0, #0]
 80155b4:	68db      	ldr	r3, [r3, #12]
 80155b6:	4798      	blx	r3
 80155b8:	b128      	cbz	r0, 80155c6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80155ba:	7b43      	ldrb	r3, [r0, #13]
 80155bc:	7a80      	ldrb	r0, [r0, #10]
 80155be:	005b      	lsls	r3, r3, #1
 80155c0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80155c4:	4318      	orrs	r0, r3
 80155c6:	bd08      	pop	{r3, pc}

080155c8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80155c8:	b40e      	push	{r1, r2, r3}
 80155ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 80155cc:	b09e      	sub	sp, #120	@ 0x78
 80155ce:	ab23      	add	r3, sp, #140	@ 0x8c
 80155d0:	4605      	mov	r5, r0
 80155d2:	f853 4b04 	ldr.w	r4, [r3], #4
 80155d6:	9303      	str	r3, [sp, #12]
 80155d8:	a805      	add	r0, sp, #20
 80155da:	f001 f8fe 	bl	80167da <_ZN8touchgfx12TextProviderC1Ev>
 80155de:	682b      	ldr	r3, [r5, #0]
 80155e0:	4628      	mov	r0, r5
 80155e2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80155e4:	4798      	blx	r3
 80155e6:	682b      	ldr	r3, [r5, #0]
 80155e8:	4606      	mov	r6, r0
 80155ea:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80155ec:	4628      	mov	r0, r5
 80155ee:	4798      	blx	r3
 80155f0:	4633      	mov	r3, r6
 80155f2:	ae1e      	add	r6, sp, #120	@ 0x78
 80155f4:	4621      	mov	r1, r4
 80155f6:	9000      	str	r0, [sp, #0]
 80155f8:	9a03      	ldr	r2, [sp, #12]
 80155fa:	2400      	movs	r4, #0
 80155fc:	a805      	add	r0, sp, #20
 80155fe:	f001 f947 	bl	8016890 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015602:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015606:	462a      	mov	r2, r5
 8015608:	4633      	mov	r3, r6
 801560a:	4621      	mov	r1, r4
 801560c:	a805      	add	r0, sp, #20
 801560e:	f001 fc6b 	bl	8016ee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015612:	b1f0      	cbz	r0, 8015652 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015614:	280a      	cmp	r0, #10
 8015616:	d018      	beq.n	801564a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015618:	9f04      	ldr	r7, [sp, #16]
 801561a:	b1b7      	cbz	r7, 801564a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801561c:	7b78      	ldrb	r0, [r7, #13]
 801561e:	7a3b      	ldrb	r3, [r7, #8]
 8015620:	88ea      	ldrh	r2, [r5, #6]
 8015622:	00c1      	lsls	r1, r0, #3
 8015624:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8015628:	4319      	orrs	r1, r3
 801562a:	0643      	lsls	r3, r0, #25
 801562c:	bf44      	itt	mi
 801562e:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8015632:	b219      	sxthmi	r1, r3
 8015634:	0100      	lsls	r0, r0, #4
 8015636:	79fb      	ldrb	r3, [r7, #7]
 8015638:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 801563c:	4303      	orrs	r3, r0
 801563e:	4413      	add	r3, r2
 8015640:	1a5b      	subs	r3, r3, r1
 8015642:	b21b      	sxth	r3, r3
 8015644:	429c      	cmp	r4, r3
 8015646:	bfb8      	it	lt
 8015648:	461c      	movlt	r4, r3
 801564a:	4633      	mov	r3, r6
 801564c:	462a      	mov	r2, r5
 801564e:	2100      	movs	r1, #0
 8015650:	e7dc      	b.n	801560c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015652:	b2a0      	uxth	r0, r4
 8015654:	b01e      	add	sp, #120	@ 0x78
 8015656:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801565a:	b003      	add	sp, #12
 801565c:	4770      	bx	lr

0801565e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801565e:	7a43      	ldrb	r3, [r0, #9]
 8015660:	8880      	ldrh	r0, [r0, #4]
 8015662:	4418      	add	r0, r3
 8015664:	b280      	uxth	r0, r0
 8015666:	4770      	bx	lr

08015668 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015668:	6803      	ldr	r3, [r0, #0]
 801566a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801566c:	4718      	bx	r3

0801566e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801566e:	b40e      	push	{r1, r2, r3}
 8015670:	b570      	push	{r4, r5, r6, lr}
 8015672:	b09d      	sub	sp, #116	@ 0x74
 8015674:	ab21      	add	r3, sp, #132	@ 0x84
 8015676:	4604      	mov	r4, r0
 8015678:	f853 5b04 	ldr.w	r5, [r3], #4
 801567c:	9302      	str	r3, [sp, #8]
 801567e:	a803      	add	r0, sp, #12
 8015680:	f001 f8ab 	bl	80167da <_ZN8touchgfx12TextProviderC1Ev>
 8015684:	6823      	ldr	r3, [r4, #0]
 8015686:	4620      	mov	r0, r4
 8015688:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801568a:	4798      	blx	r3
 801568c:	6823      	ldr	r3, [r4, #0]
 801568e:	4606      	mov	r6, r0
 8015690:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8015692:	4620      	mov	r0, r4
 8015694:	4798      	blx	r3
 8015696:	4633      	mov	r3, r6
 8015698:	9000      	str	r0, [sp, #0]
 801569a:	9a02      	ldr	r2, [sp, #8]
 801569c:	4629      	mov	r1, r5
 801569e:	a803      	add	r0, sp, #12
 80156a0:	f001 f8f6 	bl	8016890 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80156a4:	a803      	add	r0, sp, #12
 80156a6:	f001 fced 	bl	8017084 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80156aa:	2401      	movs	r4, #1
 80156ac:	b2a3      	uxth	r3, r4
 80156ae:	b140      	cbz	r0, 80156c2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80156b0:	280a      	cmp	r0, #10
 80156b2:	bf08      	it	eq
 80156b4:	3301      	addeq	r3, #1
 80156b6:	a803      	add	r0, sp, #12
 80156b8:	bf08      	it	eq
 80156ba:	b21c      	sxtheq	r4, r3
 80156bc:	f001 fce2 	bl	8017084 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80156c0:	e7f4      	b.n	80156ac <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80156c2:	4618      	mov	r0, r3
 80156c4:	b01d      	add	sp, #116	@ 0x74
 80156c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80156ca:	b003      	add	sp, #12
 80156cc:	4770      	bx	lr

080156ce <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80156ce:	b40e      	push	{r1, r2, r3}
 80156d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80156d2:	b09e      	sub	sp, #120	@ 0x78
 80156d4:	ab23      	add	r3, sp, #140	@ 0x8c
 80156d6:	4604      	mov	r4, r0
 80156d8:	f853 5b04 	ldr.w	r5, [r3], #4
 80156dc:	9303      	str	r3, [sp, #12]
 80156de:	a805      	add	r0, sp, #20
 80156e0:	f001 f87b 	bl	80167da <_ZN8touchgfx12TextProviderC1Ev>
 80156e4:	6823      	ldr	r3, [r4, #0]
 80156e6:	4620      	mov	r0, r4
 80156e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80156ea:	4798      	blx	r3
 80156ec:	6823      	ldr	r3, [r4, #0]
 80156ee:	4606      	mov	r6, r0
 80156f0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80156f2:	4620      	mov	r0, r4
 80156f4:	4798      	blx	r3
 80156f6:	4633      	mov	r3, r6
 80156f8:	4629      	mov	r1, r5
 80156fa:	9000      	str	r0, [sp, #0]
 80156fc:	9a03      	ldr	r2, [sp, #12]
 80156fe:	a805      	add	r0, sp, #20
 8015700:	ad1e      	add	r5, sp, #120	@ 0x78
 8015702:	f001 f8c5 	bl	8016890 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015706:	2100      	movs	r1, #0
 8015708:	f845 1d68 	str.w	r1, [r5, #-104]!
 801570c:	4622      	mov	r2, r4
 801570e:	462b      	mov	r3, r5
 8015710:	a805      	add	r0, sp, #20
 8015712:	f001 fbe9 	bl	8016ee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015716:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801571a:	b1d8      	cbz	r0, 8015754 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801571c:	280a      	cmp	r0, #10
 801571e:	d012      	beq.n	8015746 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015720:	9804      	ldr	r0, [sp, #16]
 8015722:	b180      	cbz	r0, 8015746 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015724:	7b47      	ldrb	r7, [r0, #13]
 8015726:	88e2      	ldrh	r2, [r4, #6]
 8015728:	00fb      	lsls	r3, r7, #3
 801572a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801572e:	7a03      	ldrb	r3, [r0, #8]
 8015730:	430b      	orrs	r3, r1
 8015732:	0679      	lsls	r1, r7, #25
 8015734:	bf44      	itt	mi
 8015736:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801573a:	b21b      	sxthmi	r3, r3
 801573c:	1ad3      	subs	r3, r2, r3
 801573e:	b21b      	sxth	r3, r3
 8015740:	429e      	cmp	r6, r3
 8015742:	bfa8      	it	ge
 8015744:	461e      	movge	r6, r3
 8015746:	462b      	mov	r3, r5
 8015748:	4622      	mov	r2, r4
 801574a:	2100      	movs	r1, #0
 801574c:	a805      	add	r0, sp, #20
 801574e:	f001 fbcb 	bl	8016ee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015752:	e7e2      	b.n	801571a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8015754:	4630      	mov	r0, r6
 8015756:	b01e      	add	sp, #120	@ 0x78
 8015758:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801575c:	b003      	add	sp, #12
 801575e:	4770      	bx	lr

08015760 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8015760:	b513      	push	{r0, r1, r4, lr}
 8015762:	6803      	ldr	r3, [r0, #0]
 8015764:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015768:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801576c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015770:	2400      	movs	r4, #0
 8015772:	9400      	str	r4, [sp, #0]
 8015774:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015778:	691b      	ldr	r3, [r3, #16]
 801577a:	4669      	mov	r1, sp
 801577c:	4798      	blx	r3
 801577e:	b002      	add	sp, #8
 8015780:	bd10      	pop	{r4, pc}

08015782 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8015782:	b538      	push	{r3, r4, r5, lr}
 8015784:	680b      	ldr	r3, [r1, #0]
 8015786:	460c      	mov	r4, r1
 8015788:	68db      	ldr	r3, [r3, #12]
 801578a:	4605      	mov	r5, r0
 801578c:	4798      	blx	r3
 801578e:	6823      	ldr	r3, [r4, #0]
 8015790:	4620      	mov	r0, r4
 8015792:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015794:	4629      	mov	r1, r5
 8015796:	4798      	blx	r3
 8015798:	4628      	mov	r0, r5
 801579a:	bd38      	pop	{r3, r4, r5, pc}

0801579c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801579c:	b410      	push	{r4}
 801579e:	880a      	ldrh	r2, [r1, #0]
 80157a0:	8884      	ldrh	r4, [r0, #4]
 80157a2:	4422      	add	r2, r4
 80157a4:	800a      	strh	r2, [r1, #0]
 80157a6:	88c4      	ldrh	r4, [r0, #6]
 80157a8:	884a      	ldrh	r2, [r1, #2]
 80157aa:	4422      	add	r2, r4
 80157ac:	804a      	strh	r2, [r1, #2]
 80157ae:	6940      	ldr	r0, [r0, #20]
 80157b0:	b120      	cbz	r0, 80157bc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80157b2:	6803      	ldr	r3, [r0, #0]
 80157b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80157b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80157ba:	4718      	bx	r3
 80157bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80157c0:	4770      	bx	lr

080157c2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80157c2:	b570      	push	{r4, r5, r6, lr}
 80157c4:	8882      	ldrh	r2, [r0, #4]
 80157c6:	880b      	ldrh	r3, [r1, #0]
 80157c8:	4413      	add	r3, r2
 80157ca:	800b      	strh	r3, [r1, #0]
 80157cc:	88c2      	ldrh	r2, [r0, #6]
 80157ce:	884b      	ldrh	r3, [r1, #2]
 80157d0:	460c      	mov	r4, r1
 80157d2:	4413      	add	r3, r2
 80157d4:	804b      	strh	r3, [r1, #2]
 80157d6:	4605      	mov	r5, r0
 80157d8:	1d01      	adds	r1, r0, #4
 80157da:	4620      	mov	r0, r4
 80157dc:	f7f8 fb96 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 80157e0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80157e4:	2b00      	cmp	r3, #0
 80157e6:	dd0b      	ble.n	8015800 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80157e8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80157ec:	2b00      	cmp	r3, #0
 80157ee:	dd07      	ble.n	8015800 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80157f0:	6968      	ldr	r0, [r5, #20]
 80157f2:	b128      	cbz	r0, 8015800 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80157f4:	6803      	ldr	r3, [r0, #0]
 80157f6:	4621      	mov	r1, r4
 80157f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80157fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80157fe:	4718      	bx	r3
 8015800:	bd70      	pop	{r4, r5, r6, pc}
	...

08015804 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015804:	b570      	push	{r4, r5, r6, lr}
 8015806:	8882      	ldrh	r2, [r0, #4]
 8015808:	880b      	ldrh	r3, [r1, #0]
 801580a:	4413      	add	r3, r2
 801580c:	800b      	strh	r3, [r1, #0]
 801580e:	88c2      	ldrh	r2, [r0, #6]
 8015810:	884b      	ldrh	r3, [r1, #2]
 8015812:	460c      	mov	r4, r1
 8015814:	4413      	add	r3, r2
 8015816:	804b      	strh	r3, [r1, #2]
 8015818:	4605      	mov	r5, r0
 801581a:	1d01      	adds	r1, r0, #4
 801581c:	4620      	mov	r0, r4
 801581e:	f7f8 fb75 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 8015822:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015826:	2b00      	cmp	r3, #0
 8015828:	dd19      	ble.n	801585e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801582a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801582e:	2b00      	cmp	r3, #0
 8015830:	dd15      	ble.n	801585e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015832:	6968      	ldr	r0, [r5, #20]
 8015834:	b128      	cbz	r0, 8015842 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015836:	6803      	ldr	r3, [r0, #0]
 8015838:	4621      	mov	r1, r4
 801583a:	691b      	ldr	r3, [r3, #16]
 801583c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015840:	4718      	bx	r3
 8015842:	4b07      	ldr	r3, [pc, #28]	@ (8015860 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015844:	681b      	ldr	r3, [r3, #0]
 8015846:	3304      	adds	r3, #4
 8015848:	429d      	cmp	r5, r3
 801584a:	d108      	bne.n	801585e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801584c:	f7fe feea 	bl	8014624 <_ZN8touchgfx11Application11getInstanceEv>
 8015850:	6803      	ldr	r3, [r0, #0]
 8015852:	6821      	ldr	r1, [r4, #0]
 8015854:	6862      	ldr	r2, [r4, #4]
 8015856:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8015858:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801585c:	4718      	bx	r3
 801585e:	bd70      	pop	{r4, r5, r6, pc}
 8015860:	20013fa4 	.word	0x20013fa4

08015864 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015864:	b570      	push	{r4, r5, r6, lr}
 8015866:	4604      	mov	r4, r0
 8015868:	4616      	mov	r6, r2
 801586a:	460d      	mov	r5, r1
 801586c:	b901      	cbnz	r1, 8015870 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801586e:	b192      	cbz	r2, 8015896 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8015870:	6823      	ldr	r3, [r4, #0]
 8015872:	4620      	mov	r0, r4
 8015874:	699b      	ldr	r3, [r3, #24]
 8015876:	4798      	blx	r3
 8015878:	88e2      	ldrh	r2, [r4, #6]
 801587a:	88a1      	ldrh	r1, [r4, #4]
 801587c:	4432      	add	r2, r6
 801587e:	4429      	add	r1, r5
 8015880:	4620      	mov	r0, r4
 8015882:	b212      	sxth	r2, r2
 8015884:	b209      	sxth	r1, r1
 8015886:	f7ec ff40 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 801588a:	6823      	ldr	r3, [r4, #0]
 801588c:	4620      	mov	r0, r4
 801588e:	699b      	ldr	r3, [r3, #24]
 8015890:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015894:	4718      	bx	r3
 8015896:	bd70      	pop	{r4, r5, r6, pc}

08015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015898:	b510      	push	{r4, lr}
 801589a:	4604      	mov	r4, r0
 801589c:	4608      	mov	r0, r1
 801589e:	2300      	movs	r3, #0
 80158a0:	8023      	strh	r3, [r4, #0]
 80158a2:	8063      	strh	r3, [r4, #2]
 80158a4:	6803      	ldr	r3, [r0, #0]
 80158a6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80158aa:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80158ae:	80a1      	strh	r1, [r4, #4]
 80158b0:	80e2      	strh	r2, [r4, #6]
 80158b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80158b4:	4621      	mov	r1, r4
 80158b6:	4798      	blx	r3
 80158b8:	4620      	mov	r0, r4
 80158ba:	bd10      	pop	{r4, pc}

080158bc <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 80158bc:	4770      	bx	lr

080158be <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 80158be:	b510      	push	{r4, lr}
 80158c0:	211c      	movs	r1, #28
 80158c2:	4604      	mov	r4, r0
 80158c4:	f011 fb86 	bl	8026fd4 <_ZdlPvj>
 80158c8:	4620      	mov	r0, r4
 80158ca:	bd10      	pop	{r4, pc}

080158cc <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 80158cc:	4a04      	ldr	r2, [pc, #16]	@ (80158e0 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 80158ce:	6002      	str	r2, [r0, #0]
 80158d0:	2200      	movs	r2, #0
 80158d2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80158d6:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80158da:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80158de:	4770      	bx	lr
 80158e0:	0802b4b0 	.word	0x0802b4b0

080158e4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 80158e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158e8:	4604      	mov	r4, r0
 80158ea:	b087      	sub	sp, #28
 80158ec:	4696      	mov	lr, r2
 80158ee:	8b22      	ldrh	r2, [r4, #24]
 80158f0:	6880      	ldr	r0, [r0, #8]
 80158f2:	9105      	str	r1, [sp, #20]
 80158f4:	1c51      	adds	r1, r2, #1
 80158f6:	8321      	strh	r1, [r4, #24]
 80158f8:	2101      	movs	r1, #1
 80158fa:	5481      	strb	r1, [r0, r2]
 80158fc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015900:	8b60      	ldrh	r0, [r4, #26]
 8015902:	ee06 2a90 	vmov	s13, r2
 8015906:	68e2      	ldr	r2, [r4, #12]
 8015908:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801590c:	1845      	adds	r5, r0, r1
 801590e:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 8015912:	8365      	strh	r5, [r4, #26]
 8015914:	edc2 6a00 	vstr	s13, [r2]
 8015918:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801591c:	8b60      	ldrh	r0, [r4, #26]
 801591e:	ee07 2a10 	vmov	s14, r2
 8015922:	68e2      	ldr	r2, [r4, #12]
 8015924:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015928:	1845      	adds	r5, r0, r1
 801592a:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 801592e:	8365      	strh	r5, [r4, #26]
 8015930:	ed82 7a00 	vstr	s14, [r2]
 8015934:	f8be 2000 	ldrh.w	r2, [lr]
 8015938:	9203      	str	r2, [sp, #12]
 801593a:	2200      	movs	r2, #0
 801593c:	1d18      	adds	r0, r3, #4
 801593e:	4689      	mov	r9, r1
 8015940:	9201      	str	r2, [sp, #4]
 8015942:	4613      	mov	r3, r2
 8015944:	4694      	mov	ip, r2
 8015946:	460d      	mov	r5, r1
 8015948:	9202      	str	r2, [sp, #8]
 801594a:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 801594e:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 8015952:	9e05      	ldr	r6, [sp, #20]
 8015954:	f8d4 a008 	ldr.w	sl, [r4, #8]
 8015958:	f108 0701 	add.w	r7, r8, #1
 801595c:	428e      	cmp	r6, r1
 801595e:	b2bf      	uxth	r7, r7
 8015960:	eb0a 0b08 	add.w	fp, sl, r8
 8015964:	f340 80b6 	ble.w	8015ad4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
 8015968:	9b03      	ldr	r3, [sp, #12]
 801596a:	f9b0 c000 	ldrsh.w	ip, [r0]
 801596e:	fa43 fb05 	asr.w	fp, r3, r5
 8015972:	f00b 0b01 	and.w	fp, fp, #1
 8015976:	fa5f f38b 	uxtb.w	r3, fp
 801597a:	9304      	str	r3, [sp, #16]
 801597c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015980:	f1bb 0f00 	cmp.w	fp, #0
 8015984:	d057      	beq.n	8015a36 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
 8015986:	ee07 ca90 	vmov	s15, ip
 801598a:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 801598e:	ee07 3a90 	vmov	s15, r3
 8015992:	8327      	strh	r7, [r4, #24]
 8015994:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015998:	f1b9 0f00 	cmp.w	r9, #0
 801599c:	d028      	beq.n	80159f0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
 801599e:	f04f 0602 	mov.w	r6, #2
 80159a2:	f80a 6008 	strb.w	r6, [sl, r8]
 80159a6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80159aa:	68e7      	ldr	r7, [r4, #12]
 80159ac:	f108 0901 	add.w	r9, r8, #1
 80159b0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80159b4:	f8a4 901a 	strh.w	r9, [r4, #26]
 80159b8:	edc7 5a00 	vstr	s11, [r7]
 80159bc:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80159c0:	68e7      	ldr	r7, [r4, #12]
 80159c2:	f108 0901 	add.w	r9, r8, #1
 80159c6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80159ca:	f8a4 901a 	strh.w	r9, [r4, #26]
 80159ce:	edc7 7a00 	vstr	s15, [r7]
 80159d2:	3501      	adds	r5, #1
 80159d4:	2d10      	cmp	r5, #16
 80159d6:	d106      	bne.n	80159e6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 80159d8:	9d02      	ldr	r5, [sp, #8]
 80159da:	3501      	adds	r5, #1
 80159dc:	9502      	str	r5, [sp, #8]
 80159de:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
 80159e2:	9503      	str	r5, [sp, #12]
 80159e4:	2500      	movs	r5, #0
 80159e6:	3101      	adds	r1, #1
 80159e8:	3004      	adds	r0, #4
 80159ea:	f8dd 9010 	ldr.w	r9, [sp, #16]
 80159ee:	e7ae      	b.n	801594e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
 80159f0:	f04f 0605 	mov.w	r6, #5
 80159f4:	f80a 6008 	strb.w	r6, [sl, r8]
 80159f8:	ed9d 5a01 	vldr	s10, [sp, #4]
 80159fc:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8015a00:	68e7      	ldr	r7, [r4, #12]
 8015a02:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8015a06:	f108 0901 	add.w	r9, r8, #1
 8015a0a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8015a0e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8015a12:	ed87 5a00 	vstr	s10, [r7]
 8015a16:	ee05 2a10 	vmov	s10, r2
 8015a1a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8015a1e:	68e7      	ldr	r7, [r4, #12]
 8015a20:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8015a24:	f108 0901 	add.w	r9, r8, #1
 8015a28:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8015a2c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8015a30:	ed87 5a00 	vstr	s10, [r7]
 8015a34:	e7b7      	b.n	80159a6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
 8015a36:	f1b9 0f00 	cmp.w	r9, #0
 8015a3a:	d147      	bne.n	8015acc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
 8015a3c:	f04f 0605 	mov.w	r6, #5
 8015a40:	8327      	strh	r7, [r4, #24]
 8015a42:	f80a 6008 	strb.w	r6, [sl, r8]
 8015a46:	eddd 7a01 	vldr	s15, [sp, #4]
 8015a4a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8015a4e:	68e7      	ldr	r7, [r4, #12]
 8015a50:	9e01      	ldr	r6, [sp, #4]
 8015a52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a56:	f108 0901 	add.w	r9, r8, #1
 8015a5a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8015a5e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8015a62:	edc7 7a00 	vstr	s15, [r7]
 8015a66:	ee07 2a90 	vmov	s15, r2
 8015a6a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8015a6e:	68e7      	ldr	r7, [r4, #12]
 8015a70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a74:	f108 0901 	add.w	r9, r8, #1
 8015a78:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8015a7c:	4466      	add	r6, ip
 8015a7e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8015a82:	edc7 7a00 	vstr	s15, [r7]
 8015a86:	ee07 6a90 	vmov	s15, r6
 8015a8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a8e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8015a92:	68e7      	ldr	r7, [r4, #12]
 8015a94:	ee67 7a86 	vmul.f32	s15, s15, s12
 8015a98:	f108 0901 	add.w	r9, r8, #1
 8015a9c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8015aa0:	441a      	add	r2, r3
 8015aa2:	f8a4 901a 	strh.w	r9, [r4, #26]
 8015aa6:	edc7 7a00 	vstr	s15, [r7]
 8015aaa:	ee07 2a90 	vmov	s15, r2
 8015aae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015ab2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8015ab6:	68e7      	ldr	r7, [r4, #12]
 8015ab8:	ee67 7a86 	vmul.f32	s15, s15, s12
 8015abc:	f108 0901 	add.w	r9, r8, #1
 8015ac0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8015ac4:	f8a4 901a 	strh.w	r9, [r4, #26]
 8015ac8:	edc7 7a00 	vstr	s15, [r7]
 8015acc:	461a      	mov	r2, r3
 8015ace:	f8cd c004 	str.w	ip, [sp, #4]
 8015ad2:	e77e      	b.n	80159d2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
 8015ad4:	f1b9 0f00 	cmp.w	r9, #0
 8015ad8:	d028      	beq.n	8015b2c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 8015ada:	ee07 ca90 	vmov	s15, ip
 8015ade:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015ae2:	eef4 6a67 	vcmp.f32	s13, s15
 8015ae6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015aea:	d108      	bne.n	8015afe <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
 8015aec:	ee07 3a90 	vmov	s15, r3
 8015af0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015af4:	eeb4 7a67 	vcmp.f32	s14, s15
 8015af8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015afc:	d016      	beq.n	8015b2c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 8015afe:	2302      	movs	r3, #2
 8015b00:	8327      	strh	r7, [r4, #24]
 8015b02:	f88b 3000 	strb.w	r3, [fp]
 8015b06:	8b62      	ldrh	r2, [r4, #26]
 8015b08:	68e3      	ldr	r3, [r4, #12]
 8015b0a:	1c51      	adds	r1, r2, #1
 8015b0c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8015b10:	8361      	strh	r1, [r4, #26]
 8015b12:	edc3 6a00 	vstr	s13, [r3]
 8015b16:	8b62      	ldrh	r2, [r4, #26]
 8015b18:	68e3      	ldr	r3, [r4, #12]
 8015b1a:	1c51      	adds	r1, r2, #1
 8015b1c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8015b20:	8361      	strh	r1, [r4, #26]
 8015b22:	ed83 7a00 	vstr	s14, [r3]
 8015b26:	b007      	add	sp, #28
 8015b28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b2c:	2305      	movs	r3, #5
 8015b2e:	8327      	strh	r7, [r4, #24]
 8015b30:	eddd 7a01 	vldr	s15, [sp, #4]
 8015b34:	f88b 3000 	strb.w	r3, [fp]
 8015b38:	8b61      	ldrh	r1, [r4, #26]
 8015b3a:	68e3      	ldr	r3, [r4, #12]
 8015b3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b40:	1c4d      	adds	r5, r1, #1
 8015b42:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8015b46:	8365      	strh	r5, [r4, #26]
 8015b48:	edc3 7a00 	vstr	s15, [r3]
 8015b4c:	ee07 2a90 	vmov	s15, r2
 8015b50:	8b61      	ldrh	r1, [r4, #26]
 8015b52:	68e3      	ldr	r3, [r4, #12]
 8015b54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b58:	1c4d      	adds	r5, r1, #1
 8015b5a:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8015b5e:	8365      	strh	r5, [r4, #26]
 8015b60:	edc3 7a00 	vstr	s15, [r3]
 8015b64:	e7cf      	b.n	8015b06 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

08015b68 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 8015b68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015b6c:	b08e      	sub	sp, #56	@ 0x38
 8015b6e:	4604      	mov	r4, r0
 8015b70:	4688      	mov	r8, r1
 8015b72:	4615      	mov	r5, r2
 8015b74:	4699      	mov	r9, r3
 8015b76:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8015b78:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 8015b7c:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 8015b7e:	f7eb fcd3 	bl	8001528 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 8015b82:	6060      	str	r0, [r4, #4]
 8015b84:	f1b9 0f00 	cmp.w	r9, #0
 8015b88:	f000 80e8 	beq.w	8015d5c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8015b8c:	2800      	cmp	r0, #0
 8015b8e:	f000 80e5 	beq.w	8015d5c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8015b92:	a805      	add	r0, sp, #20
 8015b94:	f000 f8f9 	bl	8015d8a <_ZN8touchgfx9Matrix3x3C1Ev>
 8015b98:	6833      	ldr	r3, [r6, #0]
 8015b9a:	4630      	mov	r0, r6
 8015b9c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8015b9e:	4798      	blx	r3
 8015ba0:	a805      	add	r0, sp, #20
 8015ba2:	eef0 0a40 	vmov.f32	s1, s0
 8015ba6:	f000 f8f4 	bl	8015d92 <_ZN8touchgfx9Matrix3x35scaleEff>
 8015baa:	6860      	ldr	r0, [r4, #4]
 8015bac:	f1ba 0f03 	cmp.w	sl, #3
 8015bb0:	d83b      	bhi.n	8015c2a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 8015bb2:	e8df f00a 	tbb	[pc, sl]
 8015bb6:	1002      	.short	0x1002
 8015bb8:	9f71      	.short	0x9f71
 8015bba:	6803      	ldr	r3, [r0, #0]
 8015bbc:	462a      	mov	r2, r5
 8015bbe:	689b      	ldr	r3, [r3, #8]
 8015bc0:	4641      	mov	r1, r8
 8015bc2:	4798      	blx	r3
 8015bc4:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8015bc8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8015bcc:	ee07 7a90 	vmov	s15, r7
 8015bd0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8015bd4:	e026      	b.n	8015c24 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 8015bd6:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8015bda:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8015bde:	8869      	ldrh	r1, [r5, #2]
 8015be0:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015be4:	1a9b      	subs	r3, r3, r2
 8015be6:	1a5b      	subs	r3, r3, r1
 8015be8:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015bec:	882b      	ldrh	r3, [r5, #0]
 8015bee:	f8ad 300e 	strh.w	r3, [sp, #14]
 8015bf2:	88ab      	ldrh	r3, [r5, #4]
 8015bf4:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015bf8:	6803      	ldr	r3, [r0, #0]
 8015bfa:	aa03      	add	r2, sp, #12
 8015bfc:	689b      	ldr	r3, [r3, #8]
 8015bfe:	4641      	mov	r1, r8
 8015c00:	4798      	blx	r3
 8015c02:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 8015d64 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 8015c06:	a805      	add	r0, sp, #20
 8015c08:	f000 f8e8 	bl	8015ddc <_ZN8touchgfx9Matrix3x36rotateEf>
 8015c0c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8015c10:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8015c12:	ee07 7a90 	vmov	s15, r7
 8015c16:	1a9b      	subs	r3, r3, r2
 8015c18:	ee00 3a10 	vmov	s0, r3
 8015c1c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8015c20:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8015c24:	a805      	add	r0, sp, #20
 8015c26:	f000 f927 	bl	8015e78 <_ZN8touchgfx9Matrix3x39translateEff>
 8015c2a:	6860      	ldr	r0, [r4, #4]
 8015c2c:	6803      	ldr	r3, [r0, #0]
 8015c2e:	a905      	add	r1, sp, #20
 8015c30:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015c32:	4798      	blx	r3
 8015c34:	6860      	ldr	r0, [r4, #4]
 8015c36:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8015c38:	6803      	ldr	r3, [r0, #0]
 8015c3a:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 8015c3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015c40:	4798      	blx	r3
 8015c42:	6860      	ldr	r0, [r4, #4]
 8015c44:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 8015c48:	6803      	ldr	r3, [r0, #0]
 8015c4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015c4c:	4798      	blx	r3
 8015c4e:	6860      	ldr	r0, [r4, #4]
 8015c50:	6803      	ldr	r3, [r0, #0]
 8015c52:	2101      	movs	r1, #1
 8015c54:	68db      	ldr	r3, [r3, #12]
 8015c56:	2500      	movs	r5, #0
 8015c58:	4798      	blx	r3
 8015c5a:	f8b9 7000 	ldrh.w	r7, [r9]
 8015c5e:	61a5      	str	r5, [r4, #24]
 8015c60:	f104 0310 	add.w	r3, r4, #16
 8015c64:	f104 0208 	add.w	r2, r4, #8
 8015c68:	f104 0114 	add.w	r1, r4, #20
 8015c6c:	f104 000c 	add.w	r0, r4, #12
 8015c70:	f109 0602 	add.w	r6, r9, #2
 8015c74:	f7f0 fd76 	bl	8006764 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8015c78:	42af      	cmp	r7, r5
 8015c7a:	dd60      	ble.n	8015d3e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 8015c7c:	8831      	ldrh	r1, [r6, #0]
 8015c7e:	f101 030f 	add.w	r3, r1, #15
 8015c82:	1cb2      	adds	r2, r6, #2
 8015c84:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8015c88:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015c8c:	4620      	mov	r0, r4
 8015c8e:	f7ff fe29 	bl	80158e4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8015c92:	3501      	adds	r5, #1
 8015c94:	4606      	mov	r6, r0
 8015c96:	e7ef      	b.n	8015c78 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8015c98:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8015c9c:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8015ca0:	8829      	ldrh	r1, [r5, #0]
 8015ca2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015ca6:	1a9b      	subs	r3, r3, r2
 8015ca8:	1a5b      	subs	r3, r3, r1
 8015caa:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015cae:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8015cb2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015cb6:	886d      	ldrh	r5, [r5, #2]
 8015cb8:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015cbc:	1a5b      	subs	r3, r3, r1
 8015cbe:	1b5b      	subs	r3, r3, r5
 8015cc0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8015cc4:	6803      	ldr	r3, [r0, #0]
 8015cc6:	aa03      	add	r2, sp, #12
 8015cc8:	689b      	ldr	r3, [r3, #8]
 8015cca:	4641      	mov	r1, r8
 8015ccc:	4798      	blx	r3
 8015cce:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8015d68 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 8015cd2:	a805      	add	r0, sp, #20
 8015cd4:	f000 f882 	bl	8015ddc <_ZN8touchgfx9Matrix3x36rotateEf>
 8015cd8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015cdc:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8015cde:	1a9b      	subs	r3, r3, r2
 8015ce0:	ee00 3a90 	vmov	s1, r3
 8015ce4:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8015ce8:	1bdb      	subs	r3, r3, r7
 8015cea:	ee00 3a10 	vmov	s0, r3
 8015cee:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8015cf2:	e795      	b.n	8015c20 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8015cf4:	886b      	ldrh	r3, [r5, #2]
 8015cf6:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015cfa:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8015cfe:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015d02:	8829      	ldrh	r1, [r5, #0]
 8015d04:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015d08:	1a9b      	subs	r3, r3, r2
 8015d0a:	1a5b      	subs	r3, r3, r1
 8015d0c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8015d10:	88eb      	ldrh	r3, [r5, #6]
 8015d12:	f8ad 3010 	strh.w	r3, [sp, #16]
 8015d16:	6803      	ldr	r3, [r0, #0]
 8015d18:	aa03      	add	r2, sp, #12
 8015d1a:	689b      	ldr	r3, [r3, #8]
 8015d1c:	4641      	mov	r1, r8
 8015d1e:	4798      	blx	r3
 8015d20:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 8015d6c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8015d24:	a805      	add	r0, sp, #20
 8015d26:	f000 f859 	bl	8015ddc <_ZN8touchgfx9Matrix3x36rotateEf>
 8015d2a:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015d2e:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8015d32:	1bdb      	subs	r3, r3, r7
 8015d34:	ee00 3a90 	vmov	s1, r3
 8015d38:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8015d3c:	e748      	b.n	8015bd0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 8015d3e:	6860      	ldr	r0, [r4, #4]
 8015d40:	8b22      	ldrh	r2, [r4, #24]
 8015d42:	6803      	ldr	r3, [r0, #0]
 8015d44:	2100      	movs	r1, #0
 8015d46:	9101      	str	r1, [sp, #4]
 8015d48:	8b61      	ldrh	r1, [r4, #26]
 8015d4a:	9100      	str	r1, [sp, #0]
 8015d4c:	6a1d      	ldr	r5, [r3, #32]
 8015d4e:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 8015d52:	47a8      	blx	r5
 8015d54:	6860      	ldr	r0, [r4, #4]
 8015d56:	6803      	ldr	r3, [r0, #0]
 8015d58:	69db      	ldr	r3, [r3, #28]
 8015d5a:	4798      	blx	r3
 8015d5c:	b00e      	add	sp, #56	@ 0x38
 8015d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015d62:	bf00      	nop
 8015d64:	42b40000 	.word	0x42b40000
 8015d68:	43340000 	.word	0x43340000
 8015d6c:	43870000 	.word	0x43870000

08015d70 <_ZN8touchgfx9Matrix3x35resetEv>:
 8015d70:	2300      	movs	r3, #0
 8015d72:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8015d76:	6002      	str	r2, [r0, #0]
 8015d78:	6043      	str	r3, [r0, #4]
 8015d7a:	6083      	str	r3, [r0, #8]
 8015d7c:	60c3      	str	r3, [r0, #12]
 8015d7e:	6102      	str	r2, [r0, #16]
 8015d80:	6143      	str	r3, [r0, #20]
 8015d82:	6183      	str	r3, [r0, #24]
 8015d84:	61c3      	str	r3, [r0, #28]
 8015d86:	6202      	str	r2, [r0, #32]
 8015d88:	4770      	bx	lr

08015d8a <_ZN8touchgfx9Matrix3x3C1Ev>:
 8015d8a:	b508      	push	{r3, lr}
 8015d8c:	f7ff fff0 	bl	8015d70 <_ZN8touchgfx9Matrix3x35resetEv>
 8015d90:	bd08      	pop	{r3, pc}

08015d92 <_ZN8touchgfx9Matrix3x35scaleEff>:
 8015d92:	edd0 7a00 	vldr	s15, [r0]
 8015d96:	ee67 7a80 	vmul.f32	s15, s15, s0
 8015d9a:	edc0 7a00 	vstr	s15, [r0]
 8015d9e:	edd0 7a01 	vldr	s15, [r0, #4]
 8015da2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8015da6:	edc0 7a01 	vstr	s15, [r0, #4]
 8015daa:	edd0 7a02 	vldr	s15, [r0, #8]
 8015dae:	ee27 0a80 	vmul.f32	s0, s15, s0
 8015db2:	edd0 7a03 	vldr	s15, [r0, #12]
 8015db6:	ed80 0a02 	vstr	s0, [r0, #8]
 8015dba:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8015dbe:	edc0 7a03 	vstr	s15, [r0, #12]
 8015dc2:	edd0 7a04 	vldr	s15, [r0, #16]
 8015dc6:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8015dca:	edc0 7a04 	vstr	s15, [r0, #16]
 8015dce:	edd0 7a05 	vldr	s15, [r0, #20]
 8015dd2:	ee67 0aa0 	vmul.f32	s1, s15, s1
 8015dd6:	edc0 0a05 	vstr	s1, [r0, #20]
 8015dda:	4770      	bx	lr

08015ddc <_ZN8touchgfx9Matrix3x36rotateEf>:
 8015ddc:	b510      	push	{r4, lr}
 8015dde:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8015e70 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 8015de2:	ee20 0a27 	vmul.f32	s0, s0, s15
 8015de6:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8015e74 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8015dea:	ed2d 8b02 	vpush	{d8}
 8015dee:	eec0 8a27 	vdiv.f32	s17, s0, s15
 8015df2:	4604      	mov	r4, r0
 8015df4:	eeb0 0a68 	vmov.f32	s0, s17
 8015df8:	f011 f934 	bl	8027064 <cosf>
 8015dfc:	eeb0 8a40 	vmov.f32	s16, s0
 8015e00:	eeb0 0a68 	vmov.f32	s0, s17
 8015e04:	f011 f972 	bl	80270ec <sinf>
 8015e08:	edd4 6a03 	vldr	s13, [r4, #12]
 8015e0c:	edd4 4a00 	vldr	s9, [r4]
 8015e10:	ed94 7a04 	vldr	s14, [r4, #16]
 8015e14:	ed94 5a01 	vldr	s10, [r4, #4]
 8015e18:	edd4 5a02 	vldr	s11, [r4, #8]
 8015e1c:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8015e20:	ee66 6a88 	vmul.f32	s13, s13, s16
 8015e24:	eee8 7a24 	vfma.f32	s15, s16, s9
 8015e28:	eee0 6a24 	vfma.f32	s13, s0, s9
 8015e2c:	edc4 7a00 	vstr	s15, [r4]
 8015e30:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8015e34:	ee27 7a08 	vmul.f32	s14, s14, s16
 8015e38:	eee8 7a05 	vfma.f32	s15, s16, s10
 8015e3c:	eea0 7a05 	vfma.f32	s14, s0, s10
 8015e40:	edc4 7a01 	vstr	s15, [r4, #4]
 8015e44:	edd4 7a05 	vldr	s15, [r4, #20]
 8015e48:	edc4 6a03 	vstr	s13, [r4, #12]
 8015e4c:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8015e50:	ee67 7a88 	vmul.f32	s15, s15, s16
 8015e54:	eea8 6a25 	vfma.f32	s12, s16, s11
 8015e58:	ecbd 8b02 	vpop	{d8}
 8015e5c:	eee0 7a25 	vfma.f32	s15, s0, s11
 8015e60:	ed84 6a02 	vstr	s12, [r4, #8]
 8015e64:	ed84 7a04 	vstr	s14, [r4, #16]
 8015e68:	edc4 7a05 	vstr	s15, [r4, #20]
 8015e6c:	bd10      	pop	{r4, pc}
 8015e6e:	bf00      	nop
 8015e70:	40490fdb 	.word	0x40490fdb
 8015e74:	43340000 	.word	0x43340000

08015e78 <_ZN8touchgfx9Matrix3x39translateEff>:
 8015e78:	ed90 6a06 	vldr	s12, [r0, #24]
 8015e7c:	edd0 7a00 	vldr	s15, [r0]
 8015e80:	edd0 6a07 	vldr	s13, [r0, #28]
 8015e84:	ed90 7a08 	vldr	s14, [r0, #32]
 8015e88:	eee6 7a00 	vfma.f32	s15, s12, s0
 8015e8c:	edc0 7a00 	vstr	s15, [r0]
 8015e90:	edd0 7a01 	vldr	s15, [r0, #4]
 8015e94:	eee6 7a80 	vfma.f32	s15, s13, s0
 8015e98:	edc0 7a01 	vstr	s15, [r0, #4]
 8015e9c:	edd0 7a02 	vldr	s15, [r0, #8]
 8015ea0:	eee7 7a00 	vfma.f32	s15, s14, s0
 8015ea4:	edc0 7a02 	vstr	s15, [r0, #8]
 8015ea8:	edd0 7a03 	vldr	s15, [r0, #12]
 8015eac:	eee6 7a20 	vfma.f32	s15, s12, s1
 8015eb0:	edc0 7a03 	vstr	s15, [r0, #12]
 8015eb4:	edd0 7a04 	vldr	s15, [r0, #16]
 8015eb8:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8015ebc:	edc0 7a04 	vstr	s15, [r0, #16]
 8015ec0:	edd0 7a05 	vldr	s15, [r0, #20]
 8015ec4:	eee7 7a20 	vfma.f32	s15, s14, s1
 8015ec8:	edc0 7a05 	vstr	s15, [r0, #20]
 8015ecc:	4770      	bx	lr

08015ece <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8015ece:	edd0 6a01 	vldr	s13, [r0, #4]
 8015ed2:	edd0 7a04 	vldr	s15, [r0, #16]
 8015ed6:	ed90 7a03 	vldr	s14, [r0, #12]
 8015eda:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8015ede:	ee60 0aa6 	vmul.f32	s1, s1, s13
 8015ee2:	edd0 6a00 	vldr	s13, [r0]
 8015ee6:	eee7 7a00 	vfma.f32	s15, s14, s0
 8015eea:	b084      	sub	sp, #16
 8015eec:	eee6 0a80 	vfma.f32	s1, s13, s0
 8015ef0:	ed90 7a05 	vldr	s14, [r0, #20]
 8015ef4:	ed90 0a02 	vldr	s0, [r0, #8]
 8015ef8:	ee30 0a80 	vadd.f32	s0, s1, s0
 8015efc:	ee77 0a87 	vadd.f32	s1, s15, s14
 8015f00:	b004      	add	sp, #16
 8015f02:	4770      	bx	lr

08015f04 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015f04:	b530      	push	{r4, r5, lr}
 8015f06:	8083      	strh	r3, [r0, #4]
 8015f08:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015f0c:	80c3      	strh	r3, [r0, #6]
 8015f0e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015f12:	7203      	strb	r3, [r0, #8]
 8015f14:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015f18:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015f1c:	7243      	strb	r3, [r0, #9]
 8015f1e:	7a83      	ldrb	r3, [r0, #10]
 8015f20:	6141      	str	r1, [r0, #20]
 8015f22:	f365 0306 	bfi	r3, r5, #0, #7
 8015f26:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8015f2a:	8302      	strh	r2, [r0, #24]
 8015f2c:	f365 13c7 	bfi	r3, r5, #7, #1
 8015f30:	7283      	strb	r3, [r0, #10]
 8015f32:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8015f36:	72c3      	strb	r3, [r0, #11]
 8015f38:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8015f3c:	7303      	strb	r3, [r0, #12]
 8015f3e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015f42:	81c3      	strh	r3, [r0, #14]
 8015f44:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8015f48:	8203      	strh	r3, [r0, #16]
 8015f4a:	4b01      	ldr	r3, [pc, #4]	@ (8015f50 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015f4c:	6003      	str	r3, [r0, #0]
 8015f4e:	bd30      	pop	{r4, r5, pc}
 8015f50:	0802b4c4 	.word	0x0802b4c4

08015f54 <_ZNK8touchgfx9ConstFont4findEt>:
 8015f54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015f56:	6944      	ldr	r4, [r0, #20]
 8015f58:	b3bc      	cbz	r4, 8015fca <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f5a:	88a3      	ldrh	r3, [r4, #4]
 8015f5c:	8b02      	ldrh	r2, [r0, #24]
 8015f5e:	1acb      	subs	r3, r1, r3
 8015f60:	f102 32ff 	add.w	r2, r2, #4294967295
 8015f64:	d431      	bmi.n	8015fca <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f66:	4293      	cmp	r3, r2
 8015f68:	dd0c      	ble.n	8015f84 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015f6a:	230e      	movs	r3, #14
 8015f6c:	fb03 4302 	mla	r3, r3, r2, r4
 8015f70:	889b      	ldrh	r3, [r3, #4]
 8015f72:	1a5b      	subs	r3, r3, r1
 8015f74:	1ad3      	subs	r3, r2, r3
 8015f76:	429a      	cmp	r2, r3
 8015f78:	db27      	blt.n	8015fca <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f7a:	2b00      	cmp	r3, #0
 8015f7c:	bfbc      	itt	lt
 8015f7e:	2302      	movlt	r3, #2
 8015f80:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015f84:	2500      	movs	r5, #0
 8015f86:	260e      	movs	r6, #14
 8015f88:	4295      	cmp	r5, r2
 8015f8a:	dc1e      	bgt.n	8015fca <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f8c:	fb06 4003 	mla	r0, r6, r3, r4
 8015f90:	8887      	ldrh	r7, [r0, #4]
 8015f92:	42b9      	cmp	r1, r7
 8015f94:	d01a      	beq.n	8015fcc <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8015f96:	d20d      	bcs.n	8015fb4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8015f98:	1e5a      	subs	r2, r3, #1
 8015f9a:	4295      	cmp	r5, r2
 8015f9c:	dc15      	bgt.n	8015fca <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f9e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8015fa2:	1a5b      	subs	r3, r3, r1
 8015fa4:	1ad3      	subs	r3, r2, r3
 8015fa6:	429a      	cmp	r2, r3
 8015fa8:	db0f      	blt.n	8015fca <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015faa:	429d      	cmp	r5, r3
 8015fac:	ddec      	ble.n	8015f88 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015fae:	1953      	adds	r3, r2, r5
 8015fb0:	105b      	asrs	r3, r3, #1
 8015fb2:	e7e9      	b.n	8015f88 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015fb4:	1c5d      	adds	r5, r3, #1
 8015fb6:	42aa      	cmp	r2, r5
 8015fb8:	db07      	blt.n	8015fca <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015fba:	8a43      	ldrh	r3, [r0, #18]
 8015fbc:	1acb      	subs	r3, r1, r3
 8015fbe:	442b      	add	r3, r5
 8015fc0:	429d      	cmp	r5, r3
 8015fc2:	dc02      	bgt.n	8015fca <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015fc4:	429a      	cmp	r2, r3
 8015fc6:	dadf      	bge.n	8015f88 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015fc8:	e7f1      	b.n	8015fae <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8015fca:	2000      	movs	r0, #0
 8015fcc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015fce <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015fce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015fd0:	4604      	mov	r4, r0
 8015fd2:	4617      	mov	r7, r2
 8015fd4:	461e      	mov	r6, r3
 8015fd6:	b911      	cbnz	r1, 8015fde <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015fd8:	2500      	movs	r5, #0
 8015fda:	4628      	mov	r0, r5
 8015fdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015fde:	290a      	cmp	r1, #10
 8015fe0:	d0fa      	beq.n	8015fd8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015fe2:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8015fe6:	4291      	cmp	r1, r2
 8015fe8:	d0f6      	beq.n	8015fd8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015fea:	f242 020b 	movw	r2, #8203	@ 0x200b
 8015fee:	4291      	cmp	r1, r2
 8015ff0:	d0f2      	beq.n	8015fd8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015ff2:	f7ff ffaf 	bl	8015f54 <_ZNK8touchgfx9ConstFont4findEt>
 8015ff6:	4605      	mov	r5, r0
 8015ff8:	b950      	cbnz	r0, 8016010 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8015ffa:	6823      	ldr	r3, [r4, #0]
 8015ffc:	4620      	mov	r0, r4
 8015ffe:	691b      	ldr	r3, [r3, #16]
 8016000:	4798      	blx	r3
 8016002:	4601      	mov	r1, r0
 8016004:	4620      	mov	r0, r4
 8016006:	f7ff ffa5 	bl	8015f54 <_ZNK8touchgfx9ConstFont4findEt>
 801600a:	4605      	mov	r5, r0
 801600c:	2800      	cmp	r0, #0
 801600e:	d0e3      	beq.n	8015fd8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016010:	6823      	ldr	r3, [r4, #0]
 8016012:	4629      	mov	r1, r5
 8016014:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8016016:	4620      	mov	r0, r4
 8016018:	4798      	blx	r3
 801601a:	6038      	str	r0, [r7, #0]
 801601c:	6823      	ldr	r3, [r4, #0]
 801601e:	4620      	mov	r0, r4
 8016020:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8016022:	4798      	blx	r3
 8016024:	7030      	strb	r0, [r6, #0]
 8016026:	e7d8      	b.n	8015fda <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08016028 <_ZN8touchgfx4clzuEm>:
 8016028:	4603      	mov	r3, r0
 801602a:	b1c8      	cbz	r0, 8016060 <_ZN8touchgfx4clzuEm+0x38>
 801602c:	0c02      	lsrs	r2, r0, #16
 801602e:	0412      	lsls	r2, r2, #16
 8016030:	b9a2      	cbnz	r2, 801605c <_ZN8touchgfx4clzuEm+0x34>
 8016032:	0403      	lsls	r3, r0, #16
 8016034:	2010      	movs	r0, #16
 8016036:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 801603a:	bf04      	itt	eq
 801603c:	021b      	lsleq	r3, r3, #8
 801603e:	3008      	addeq	r0, #8
 8016040:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8016044:	bf04      	itt	eq
 8016046:	011b      	lsleq	r3, r3, #4
 8016048:	3004      	addeq	r0, #4
 801604a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 801604e:	bf04      	itt	eq
 8016050:	009b      	lsleq	r3, r3, #2
 8016052:	3002      	addeq	r0, #2
 8016054:	2b00      	cmp	r3, #0
 8016056:	db04      	blt.n	8016062 <_ZN8touchgfx4clzuEm+0x3a>
 8016058:	3001      	adds	r0, #1
 801605a:	4770      	bx	lr
 801605c:	2000      	movs	r0, #0
 801605e:	e7ea      	b.n	8016036 <_ZN8touchgfx4clzuEm+0xe>
 8016060:	2020      	movs	r0, #32
 8016062:	4770      	bx	lr

08016064 <_ZN8touchgfx7muldivuEmmmRm>:
 8016064:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016068:	460f      	mov	r7, r1
 801606a:	4615      	mov	r5, r2
 801606c:	461e      	mov	r6, r3
 801606e:	4601      	mov	r1, r0
 8016070:	b100      	cbz	r0, 8016074 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8016072:	b927      	cbnz	r7, 801607e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016074:	2000      	movs	r0, #0
 8016076:	6030      	str	r0, [r6, #0]
 8016078:	b002      	add	sp, #8
 801607a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801607e:	f7ff ffd3 	bl	8016028 <_ZN8touchgfx4clzuEm>
 8016082:	b980      	cbnz	r0, 80160a6 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016084:	4638      	mov	r0, r7
 8016086:	f7ff ffcf 	bl	8016028 <_ZN8touchgfx4clzuEm>
 801608a:	2800      	cmp	r0, #0
 801608c:	dd05      	ble.n	801609a <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801608e:	4633      	mov	r3, r6
 8016090:	462a      	mov	r2, r5
 8016092:	4638      	mov	r0, r7
 8016094:	f7ff ffe6 	bl	8016064 <_ZN8touchgfx7muldivuEmmmRm>
 8016098:	e7ee      	b.n	8016078 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801609a:	f04f 33ff 	mov.w	r3, #4294967295
 801609e:	6033      	str	r3, [r6, #0]
 80160a0:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80160a4:	e7e8      	b.n	8016078 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80160a6:	fa37 f800 	lsrs.w	r8, r7, r0
 80160aa:	fb07 f301 	mul.w	r3, r7, r1
 80160ae:	d105      	bne.n	80160bc <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80160b0:	fbb3 f0f5 	udiv	r0, r3, r5
 80160b4:	fb05 3510 	mls	r5, r5, r0, r3
 80160b8:	6035      	str	r5, [r6, #0]
 80160ba:	e7dd      	b.n	8016078 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80160bc:	2301      	movs	r3, #1
 80160be:	fa01 fa00 	lsl.w	sl, r1, r0
 80160c2:	fa03 f000 	lsl.w	r0, r3, r0
 80160c6:	3801      	subs	r0, #1
 80160c8:	462a      	mov	r2, r5
 80160ca:	4633      	mov	r3, r6
 80160cc:	4038      	ands	r0, r7
 80160ce:	f7ff ffc9 	bl	8016064 <_ZN8touchgfx7muldivuEmmmRm>
 80160d2:	fbba f9f5 	udiv	r9, sl, r5
 80160d6:	462a      	mov	r2, r5
 80160d8:	4607      	mov	r7, r0
 80160da:	ab01      	add	r3, sp, #4
 80160dc:	fb05 a119 	mls	r1, r5, r9, sl
 80160e0:	4640      	mov	r0, r8
 80160e2:	f7ff ffbf 	bl	8016064 <_ZN8touchgfx7muldivuEmmmRm>
 80160e6:	9b01      	ldr	r3, [sp, #4]
 80160e8:	6832      	ldr	r2, [r6, #0]
 80160ea:	fb08 f409 	mul.w	r4, r8, r9
 80160ee:	441a      	add	r2, r3
 80160f0:	fbb2 f3f5 	udiv	r3, r2, r5
 80160f4:	441c      	add	r4, r3
 80160f6:	443c      	add	r4, r7
 80160f8:	4420      	add	r0, r4
 80160fa:	fb05 2513 	mls	r5, r5, r3, r2
 80160fe:	e7db      	b.n	80160b8 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08016100 <_ZN8touchgfx6muldivElllRl>:
 8016100:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016102:	2800      	cmp	r0, #0
 8016104:	bfba      	itte	lt
 8016106:	4240      	neglt	r0, r0
 8016108:	f04f 34ff 	movlt.w	r4, #4294967295
 801610c:	2401      	movge	r4, #1
 801610e:	2900      	cmp	r1, #0
 8016110:	bfbc      	itt	lt
 8016112:	4249      	neglt	r1, r1
 8016114:	4264      	neglt	r4, r4
 8016116:	2a00      	cmp	r2, #0
 8016118:	bfb6      	itet	lt
 801611a:	4265      	neglt	r5, r4
 801611c:	4625      	movge	r5, r4
 801611e:	4252      	neglt	r2, r2
 8016120:	4288      	cmp	r0, r1
 8016122:	461e      	mov	r6, r3
 8016124:	bfc2      	ittt	gt
 8016126:	4603      	movgt	r3, r0
 8016128:	4608      	movgt	r0, r1
 801612a:	4619      	movgt	r1, r3
 801612c:	ab01      	add	r3, sp, #4
 801612e:	f7ff ff99 	bl	8016064 <_ZN8touchgfx7muldivuEmmmRm>
 8016132:	9b01      	ldr	r3, [sp, #4]
 8016134:	4368      	muls	r0, r5
 8016136:	435c      	muls	r4, r3
 8016138:	6034      	str	r4, [r6, #0]
 801613a:	b002      	add	sp, #8
 801613c:	bd70      	pop	{r4, r5, r6, pc}

0801613e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801613e:	2000      	movs	r0, #0
 8016140:	4770      	bx	lr

08016142 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8016142:	2001      	movs	r0, #1
 8016144:	4770      	bx	lr

08016146 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8016146:	2002      	movs	r0, #2
 8016148:	4770      	bx	lr

0801614a <_ZN8touchgfx6ScreenD1Ev>:
 801614a:	4770      	bx	lr

0801614c <_ZN8touchgfx12GestureEventD1Ev>:
 801614c:	4770      	bx	lr

0801614e <_ZN8touchgfx9DragEventD1Ev>:
 801614e:	4770      	bx	lr

08016150 <_ZN8touchgfx10ClickEventD1Ev>:
 8016150:	4770      	bx	lr

08016152 <_ZN8touchgfx10ClickEventD0Ev>:
 8016152:	b510      	push	{r4, lr}
 8016154:	210c      	movs	r1, #12
 8016156:	4604      	mov	r4, r0
 8016158:	f010 ff3c 	bl	8026fd4 <_ZdlPvj>
 801615c:	4620      	mov	r0, r4
 801615e:	bd10      	pop	{r4, pc}

08016160 <_ZN8touchgfx9DragEventD0Ev>:
 8016160:	b510      	push	{r4, lr}
 8016162:	2110      	movs	r1, #16
 8016164:	4604      	mov	r4, r0
 8016166:	f010 ff35 	bl	8026fd4 <_ZdlPvj>
 801616a:	4620      	mov	r0, r4
 801616c:	bd10      	pop	{r4, pc}

0801616e <_ZN8touchgfx12GestureEventD0Ev>:
 801616e:	b510      	push	{r4, lr}
 8016170:	210c      	movs	r1, #12
 8016172:	4604      	mov	r4, r0
 8016174:	f010 ff2e 	bl	8026fd4 <_ZdlPvj>
 8016178:	4620      	mov	r0, r4
 801617a:	bd10      	pop	{r4, pc}

0801617c <_ZN8touchgfx6ScreenD0Ev>:
 801617c:	b510      	push	{r4, lr}
 801617e:	213c      	movs	r1, #60	@ 0x3c
 8016180:	4604      	mov	r4, r0
 8016182:	f010 ff27 	bl	8026fd4 <_ZdlPvj>
 8016186:	4620      	mov	r0, r4
 8016188:	bd10      	pop	{r4, pc}
	...

0801618c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801618c:	b530      	push	{r4, r5, lr}
 801618e:	460d      	mov	r5, r1
 8016190:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8016192:	b087      	sub	sp, #28
 8016194:	4604      	mov	r4, r0
 8016196:	b301      	cbz	r1, 80161da <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016198:	a801      	add	r0, sp, #4
 801619a:	f7ff fb7d 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801619e:	892a      	ldrh	r2, [r5, #8]
 80161a0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80161a4:	7928      	ldrb	r0, [r5, #4]
 80161a6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80161aa:	f88d 0010 	strb.w	r0, [sp, #16]
 80161ae:	1ad2      	subs	r2, r2, r3
 80161b0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80161b2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80161b4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80161b8:	441a      	add	r2, r3
 80161ba:	896b      	ldrh	r3, [r5, #10]
 80161bc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80161c0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80161c4:	1b5b      	subs	r3, r3, r5
 80161c6:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 80161c8:	442b      	add	r3, r5
 80161ca:	4d05      	ldr	r5, [pc, #20]	@ (80161e0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80161cc:	9503      	str	r5, [sp, #12]
 80161ce:	f8ad 3016 	strh.w	r3, [sp, #22]
 80161d2:	6803      	ldr	r3, [r0, #0]
 80161d4:	a903      	add	r1, sp, #12
 80161d6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80161d8:	4798      	blx	r3
 80161da:	b007      	add	sp, #28
 80161dc:	bd30      	pop	{r4, r5, pc}
 80161de:	bf00      	nop
 80161e0:	0802b554 	.word	0x0802b554

080161e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80161e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80161e8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80161ea:	b08a      	sub	sp, #40	@ 0x28
 80161ec:	4604      	mov	r4, r0
 80161ee:	460d      	mov	r5, r1
 80161f0:	b113      	cbz	r3, 80161f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80161f2:	790b      	ldrb	r3, [r1, #4]
 80161f4:	2b00      	cmp	r3, #0
 80161f6:	d044      	beq.n	8016282 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80161f8:	f104 0804 	add.w	r8, r4, #4
 80161fc:	4641      	mov	r1, r8
 80161fe:	a803      	add	r0, sp, #12
 8016200:	f7ff fb4a 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016204:	792b      	ldrb	r3, [r5, #4]
 8016206:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801620a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801620e:	b983      	cbnz	r3, 8016232 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016210:	892a      	ldrh	r2, [r5, #8]
 8016212:	88e9      	ldrh	r1, [r5, #6]
 8016214:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8016218:	1b92      	subs	r2, r2, r6
 801621a:	1bc9      	subs	r1, r1, r7
 801621c:	9301      	str	r3, [sp, #4]
 801621e:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8016222:	9300      	str	r3, [sp, #0]
 8016224:	b212      	sxth	r2, r2
 8016226:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 801622a:	b209      	sxth	r1, r1
 801622c:	4640      	mov	r0, r8
 801622e:	f7f7 fd89 	bl	800dd44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016232:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8016234:	b329      	cbz	r1, 8016282 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016236:	a805      	add	r0, sp, #20
 8016238:	f7ff fb2e 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801623c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016240:	792b      	ldrb	r3, [r5, #4]
 8016242:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8016244:	f88d 3020 	strb.w	r3, [sp, #32]
 8016248:	1abf      	subs	r7, r7, r2
 801624a:	88ea      	ldrh	r2, [r5, #6]
 801624c:	4417      	add	r7, r2
 801624e:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8016250:	4417      	add	r7, r2
 8016252:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016256:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801625a:	1ab6      	subs	r6, r6, r2
 801625c:	892a      	ldrh	r2, [r5, #8]
 801625e:	4416      	add	r6, r2
 8016260:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8016262:	4416      	add	r6, r2
 8016264:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8016268:	4a07      	ldr	r2, [pc, #28]	@ (8016288 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801626a:	9207      	str	r2, [sp, #28]
 801626c:	2600      	movs	r6, #0
 801626e:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8016272:	6803      	ldr	r3, [r0, #0]
 8016274:	a907      	add	r1, sp, #28
 8016276:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8016278:	4798      	blx	r3
 801627a:	792b      	ldrb	r3, [r5, #4]
 801627c:	b10b      	cbz	r3, 8016282 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801627e:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8016282:	b00a      	add	sp, #40	@ 0x28
 8016284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016288:	0802b52c 	.word	0x0802b52c

0801628c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801628c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016290:	460c      	mov	r4, r1
 8016292:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8016294:	b088      	sub	sp, #32
 8016296:	4605      	mov	r5, r0
 8016298:	2900      	cmp	r1, #0
 801629a:	d06d      	beq.n	8016378 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801629c:	4668      	mov	r0, sp
 801629e:	f7ff fafb 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80162a2:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 80162a4:	88e3      	ldrh	r3, [r4, #6]
 80162a6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80162aa:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80162ae:	440b      	add	r3, r1
 80162b0:	b21b      	sxth	r3, r3
 80162b2:	4543      	cmp	r3, r8
 80162b4:	db31      	blt.n	801631a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80162b6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80162ba:	44c4      	add	ip, r8
 80162bc:	fa0f fc8c 	sxth.w	ip, ip
 80162c0:	4563      	cmp	r3, ip
 80162c2:	da2a      	bge.n	801631a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80162c4:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 80162c6:	8926      	ldrh	r6, [r4, #8]
 80162c8:	4416      	add	r6, r2
 80162ca:	b236      	sxth	r6, r6
 80162cc:	42be      	cmp	r6, r7
 80162ce:	db24      	blt.n	801631a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80162d0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80162d4:	4438      	add	r0, r7
 80162d6:	b200      	sxth	r0, r0
 80162d8:	4286      	cmp	r6, r0
 80162da:	da1e      	bge.n	801631a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80162dc:	8963      	ldrh	r3, [r4, #10]
 80162de:	4419      	add	r1, r3
 80162e0:	b209      	sxth	r1, r1
 80162e2:	4541      	cmp	r1, r8
 80162e4:	db08      	blt.n	80162f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80162e6:	4561      	cmp	r1, ip
 80162e8:	da06      	bge.n	80162f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80162ea:	89a3      	ldrh	r3, [r4, #12]
 80162ec:	441a      	add	r2, r3
 80162ee:	b212      	sxth	r2, r2
 80162f0:	42ba      	cmp	r2, r7
 80162f2:	db01      	blt.n	80162f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80162f4:	4282      	cmp	r2, r0
 80162f6:	db10      	blt.n	801631a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80162f8:	4b21      	ldr	r3, [pc, #132]	@ (8016380 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80162fa:	9304      	str	r3, [sp, #16]
 80162fc:	2302      	movs	r3, #2
 80162fe:	f88d 3014 	strb.w	r3, [sp, #20]
 8016302:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8016304:	2300      	movs	r3, #0
 8016306:	f8ad 3016 	strh.w	r3, [sp, #22]
 801630a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801630e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016312:	6803      	ldr	r3, [r0, #0]
 8016314:	a904      	add	r1, sp, #16
 8016316:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8016318:	4798      	blx	r3
 801631a:	1d29      	adds	r1, r5, #4
 801631c:	a802      	add	r0, sp, #8
 801631e:	f7ff fabb 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016322:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016326:	88e0      	ldrh	r0, [r4, #6]
 8016328:	7921      	ldrb	r1, [r4, #4]
 801632a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801632e:	8922      	ldrh	r2, [r4, #8]
 8016330:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8016332:	f88d 1014 	strb.w	r1, [sp, #20]
 8016336:	eba3 0808 	sub.w	r8, r3, r8
 801633a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801633e:	1bdf      	subs	r7, r3, r7
 8016340:	b2bb      	uxth	r3, r7
 8016342:	fa1f f888 	uxth.w	r8, r8
 8016346:	8967      	ldrh	r7, [r4, #10]
 8016348:	89a4      	ldrh	r4, [r4, #12]
 801634a:	4440      	add	r0, r8
 801634c:	4460      	add	r0, ip
 801634e:	441a      	add	r2, r3
 8016350:	44b8      	add	r8, r7
 8016352:	4423      	add	r3, r4
 8016354:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016358:	4433      	add	r3, r6
 801635a:	4432      	add	r2, r6
 801635c:	44e0      	add	r8, ip
 801635e:	4c09      	ldr	r4, [pc, #36]	@ (8016384 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016360:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8016362:	9404      	str	r4, [sp, #16]
 8016364:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016368:	f8ad 801a 	strh.w	r8, [sp, #26]
 801636c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016370:	6803      	ldr	r3, [r0, #0]
 8016372:	a904      	add	r1, sp, #16
 8016374:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8016376:	4798      	blx	r3
 8016378:	b008      	add	sp, #32
 801637a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801637e:	bf00      	nop
 8016380:	0802b52c 	.word	0x0802b52c
 8016384:	0802b540 	.word	0x0802b540

08016388 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016388:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801638a:	4604      	mov	r4, r0
 801638c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016390:	3201      	adds	r2, #1
 8016392:	d112      	bne.n	80163ba <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016394:	6803      	ldr	r3, [r0, #0]
 8016396:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801639a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801639e:	f8ad 1004 	strh.w	r1, [sp, #4]
 80163a2:	2500      	movs	r5, #0
 80163a4:	9500      	str	r5, [sp, #0]
 80163a6:	466d      	mov	r5, sp
 80163a8:	4629      	mov	r1, r5
 80163aa:	f8ad 2006 	strh.w	r2, [sp, #6]
 80163ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80163b0:	4798      	blx	r3
 80163b2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80163b6:	e884 0003 	stmia.w	r4, {r0, r1}
 80163ba:	4620      	mov	r0, r4
 80163bc:	b003      	add	sp, #12
 80163be:	bd30      	pop	{r4, r5, pc}

080163c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80163c0:	b513      	push	{r0, r1, r4, lr}
 80163c2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80163c6:	3301      	adds	r3, #1
 80163c8:	4604      	mov	r4, r0
 80163ca:	d109      	bne.n	80163e0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80163cc:	4601      	mov	r1, r0
 80163ce:	4668      	mov	r0, sp
 80163d0:	f7ff fa62 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80163d4:	f8bd 3000 	ldrh.w	r3, [sp]
 80163d8:	8423      	strh	r3, [r4, #32]
 80163da:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80163de:	8463      	strh	r3, [r4, #34]	@ 0x22
 80163e0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80163e4:	b002      	add	sp, #8
 80163e6:	bd10      	pop	{r4, pc}

080163e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80163e8:	b513      	push	{r0, r1, r4, lr}
 80163ea:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 80163ee:	3301      	adds	r3, #1
 80163f0:	4604      	mov	r4, r0
 80163f2:	d109      	bne.n	8016408 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80163f4:	4601      	mov	r1, r0
 80163f6:	4668      	mov	r0, sp
 80163f8:	f7ff fa4e 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80163fc:	f8bd 3000 	ldrh.w	r3, [sp]
 8016400:	8423      	strh	r3, [r4, #32]
 8016402:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016406:	8463      	strh	r3, [r4, #34]	@ 0x22
 8016408:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 801640c:	b002      	add	sp, #8
 801640e:	bd10      	pop	{r4, pc}

08016410 <_ZN8touchgfx6ScreenC1Ev>:
 8016410:	b570      	push	{r4, r5, r6, lr}
 8016412:	4605      	mov	r5, r0
 8016414:	4b16      	ldr	r3, [pc, #88]	@ (8016470 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016416:	f845 3b04 	str.w	r3, [r5], #4
 801641a:	2300      	movs	r3, #0
 801641c:	8103      	strh	r3, [r0, #8]
 801641e:	8143      	strh	r3, [r0, #10]
 8016420:	8183      	strh	r3, [r0, #12]
 8016422:	81c3      	strh	r3, [r0, #14]
 8016424:	8203      	strh	r3, [r0, #16]
 8016426:	8243      	strh	r3, [r0, #18]
 8016428:	8283      	strh	r3, [r0, #20]
 801642a:	82c3      	strh	r3, [r0, #22]
 801642c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016430:	6203      	str	r3, [r0, #32]
 8016432:	8483      	strh	r3, [r0, #36]	@ 0x24
 8016434:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8016436:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801643a:	4a0e      	ldr	r2, [pc, #56]	@ (8016474 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801643c:	6343      	str	r3, [r0, #52]	@ 0x34
 801643e:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8016442:	4b0d      	ldr	r3, [pc, #52]	@ (8016478 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016444:	6042      	str	r2, [r0, #4]
 8016446:	f9b3 6000 	ldrsh.w	r6, [r3]
 801644a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 801644c:	4a0b      	ldr	r2, [pc, #44]	@ (801647c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801644e:	4604      	mov	r4, r0
 8016450:	2101      	movs	r1, #1
 8016452:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8016456:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 801645a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801645e:	4628      	mov	r0, r5
 8016460:	4798      	blx	r3
 8016462:	6863      	ldr	r3, [r4, #4]
 8016464:	4628      	mov	r0, r5
 8016466:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8016468:	4631      	mov	r1, r6
 801646a:	4798      	blx	r3
 801646c:	4620      	mov	r0, r4
 801646e:	bd70      	pop	{r4, r5, r6, pc}
 8016470:	0802b568 	.word	0x0802b568
 8016474:	0802aeec 	.word	0x0802aeec
 8016478:	20013f56 	.word	0x20013f56
 801647c:	20013f54 	.word	0x20013f54

08016480 <_ZN8touchgfx6Screen4drawEv>:
 8016480:	b507      	push	{r0, r1, r2, lr}
 8016482:	4b09      	ldr	r3, [pc, #36]	@ (80164a8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016484:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016488:	4b08      	ldr	r3, [pc, #32]	@ (80164ac <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801648a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801648e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016492:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016496:	6803      	ldr	r3, [r0, #0]
 8016498:	2100      	movs	r1, #0
 801649a:	9100      	str	r1, [sp, #0]
 801649c:	689b      	ldr	r3, [r3, #8]
 801649e:	4669      	mov	r1, sp
 80164a0:	4798      	blx	r3
 80164a2:	b003      	add	sp, #12
 80164a4:	f85d fb04 	ldr.w	pc, [sp], #4
 80164a8:	20013f54 	.word	0x20013f54
 80164ac:	20013f56 	.word	0x20013f56

080164b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80164b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164b4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80164b8:	2b00      	cmp	r3, #0
 80164ba:	b089      	sub	sp, #36	@ 0x24
 80164bc:	4680      	mov	r8, r0
 80164be:	460c      	mov	r4, r1
 80164c0:	4615      	mov	r5, r2
 80164c2:	dd0e      	ble.n	80164e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80164c4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80164c8:	2b00      	cmp	r3, #0
 80164ca:	dd0a      	ble.n	80164e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80164cc:	4628      	mov	r0, r5
 80164ce:	f7ff ff5b 	bl	8016388 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80164d2:	4621      	mov	r1, r4
 80164d4:	f7fd ffc7 	bl	8014466 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80164d8:	69eb      	ldr	r3, [r5, #28]
 80164da:	b928      	cbnz	r0, 80164e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80164dc:	461d      	mov	r5, r3
 80164de:	2b00      	cmp	r3, #0
 80164e0:	d1f4      	bne.n	80164cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80164e2:	b009      	add	sp, #36	@ 0x24
 80164e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164e8:	ae04      	add	r6, sp, #16
 80164ea:	2b00      	cmp	r3, #0
 80164ec:	f000 80b5 	beq.w	801665a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80164f0:	682b      	ldr	r3, [r5, #0]
 80164f2:	4629      	mov	r1, r5
 80164f4:	68db      	ldr	r3, [r3, #12]
 80164f6:	a802      	add	r0, sp, #8
 80164f8:	4798      	blx	r3
 80164fa:	4628      	mov	r0, r5
 80164fc:	f7ff ff60 	bl	80163c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016500:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016504:	4407      	add	r7, r0
 8016506:	4628      	mov	r0, r5
 8016508:	f7ff ff6e 	bl	80163e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801650c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016510:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016514:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016518:	4418      	add	r0, r3
 801651a:	4621      	mov	r1, r4
 801651c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016520:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016524:	b23f      	sxth	r7, r7
 8016526:	4630      	mov	r0, r6
 8016528:	f8ad 3016 	strh.w	r3, [sp, #22]
 801652c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016530:	f7f7 fcec 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 8016534:	4628      	mov	r0, r5
 8016536:	f7ff ff27 	bl	8016388 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801653a:	4602      	mov	r2, r0
 801653c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016540:	ab06      	add	r3, sp, #24
 8016542:	e883 0003 	stmia.w	r3, {r0, r1}
 8016546:	4611      	mov	r1, r2
 8016548:	4618      	mov	r0, r3
 801654a:	f7f7 fcdf 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 801654e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016552:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016556:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801655a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801655e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016562:	4299      	cmp	r1, r3
 8016564:	d10b      	bne.n	801657e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016566:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801656a:	4552      	cmp	r2, sl
 801656c:	d107      	bne.n	801657e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801656e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016572:	455a      	cmp	r2, fp
 8016574:	d103      	bne.n	801657e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016576:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801657a:	454a      	cmp	r2, r9
 801657c:	d06d      	beq.n	801665a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801657e:	f1bb 0f00 	cmp.w	fp, #0
 8016582:	dd65      	ble.n	8016650 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016584:	f1b9 0f00 	cmp.w	r9, #0
 8016588:	dd62      	ble.n	8016650 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801658a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801658e:	fa1f f08a 	uxth.w	r0, sl
 8016592:	4552      	cmp	r2, sl
 8016594:	9000      	str	r0, [sp, #0]
 8016596:	da12      	bge.n	80165be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016598:	9301      	str	r3, [sp, #4]
 801659a:	9b00      	ldr	r3, [sp, #0]
 801659c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80165a0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80165a4:	1a9a      	subs	r2, r3, r2
 80165a6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80165aa:	f8ad 0014 	strh.w	r0, [sp, #20]
 80165ae:	f8ad 2016 	strh.w	r2, [sp, #22]
 80165b2:	69ea      	ldr	r2, [r5, #28]
 80165b4:	4631      	mov	r1, r6
 80165b6:	4640      	mov	r0, r8
 80165b8:	f7ff ff7a 	bl	80164b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80165bc:	9b01      	ldr	r3, [sp, #4]
 80165be:	f9b4 2000 	ldrsh.w	r2, [r4]
 80165c2:	429a      	cmp	r2, r3
 80165c4:	b29f      	uxth	r7, r3
 80165c6:	da0d      	bge.n	80165e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80165c8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80165cc:	1aba      	subs	r2, r7, r2
 80165ce:	f8ad a012 	strh.w	sl, [sp, #18]
 80165d2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80165d6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80165da:	69ea      	ldr	r2, [r5, #28]
 80165dc:	4631      	mov	r1, r6
 80165de:	4640      	mov	r0, r8
 80165e0:	f7ff ff66 	bl	80164b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80165e4:	8822      	ldrh	r2, [r4, #0]
 80165e6:	88a3      	ldrh	r3, [r4, #4]
 80165e8:	445f      	add	r7, fp
 80165ea:	4413      	add	r3, r2
 80165ec:	b29b      	uxth	r3, r3
 80165ee:	b2bf      	uxth	r7, r7
 80165f0:	b23a      	sxth	r2, r7
 80165f2:	b219      	sxth	r1, r3
 80165f4:	4291      	cmp	r1, r2
 80165f6:	dd0d      	ble.n	8016614 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80165f8:	1bdb      	subs	r3, r3, r7
 80165fa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80165fe:	f8ad a012 	strh.w	sl, [sp, #18]
 8016602:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016606:	f8ad 9016 	strh.w	r9, [sp, #22]
 801660a:	69ea      	ldr	r2, [r5, #28]
 801660c:	4631      	mov	r1, r6
 801660e:	4640      	mov	r0, r8
 8016610:	f7ff ff4e 	bl	80164b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016614:	88e2      	ldrh	r2, [r4, #6]
 8016616:	8863      	ldrh	r3, [r4, #2]
 8016618:	4413      	add	r3, r2
 801661a:	9a00      	ldr	r2, [sp, #0]
 801661c:	444a      	add	r2, r9
 801661e:	b29b      	uxth	r3, r3
 8016620:	fa1f f982 	uxth.w	r9, r2
 8016624:	fa0f f289 	sxth.w	r2, r9
 8016628:	b219      	sxth	r1, r3
 801662a:	428a      	cmp	r2, r1
 801662c:	da15      	bge.n	801665a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801662e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016632:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016636:	f8ad 1014 	strh.w	r1, [sp, #20]
 801663a:	eba3 0309 	sub.w	r3, r3, r9
 801663e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016642:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016646:	f8ad 3016 	strh.w	r3, [sp, #22]
 801664a:	69ea      	ldr	r2, [r5, #28]
 801664c:	4631      	mov	r1, r6
 801664e:	e001      	b.n	8016654 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016650:	69ea      	ldr	r2, [r5, #28]
 8016652:	4621      	mov	r1, r4
 8016654:	4640      	mov	r0, r8
 8016656:	f7ff ff2b 	bl	80164b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801665a:	4628      	mov	r0, r5
 801665c:	f7ff fe94 	bl	8016388 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016660:	6861      	ldr	r1, [r4, #4]
 8016662:	4602      	mov	r2, r0
 8016664:	6820      	ldr	r0, [r4, #0]
 8016666:	4633      	mov	r3, r6
 8016668:	c303      	stmia	r3!, {r0, r1}
 801666a:	4611      	mov	r1, r2
 801666c:	4630      	mov	r0, r6
 801666e:	f7f7 fc4d 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 8016672:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016676:	2b00      	cmp	r3, #0
 8016678:	f77f af33 	ble.w	80164e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801667c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016680:	2b00      	cmp	r3, #0
 8016682:	f77f af2e 	ble.w	80164e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016686:	4628      	mov	r0, r5
 8016688:	f7ff fe9a 	bl	80163c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801668c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016690:	1a18      	subs	r0, r3, r0
 8016692:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016696:	4628      	mov	r0, r5
 8016698:	f7ff fea6 	bl	80163e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801669c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80166a0:	1a18      	subs	r0, r3, r0
 80166a2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80166a6:	682b      	ldr	r3, [r5, #0]
 80166a8:	4631      	mov	r1, r6
 80166aa:	689b      	ldr	r3, [r3, #8]
 80166ac:	4628      	mov	r0, r5
 80166ae:	4798      	blx	r3
 80166b0:	e717      	b.n	80164e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080166b2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80166b2:	b570      	push	{r4, r5, r6, lr}
 80166b4:	460c      	mov	r4, r1
 80166b6:	b086      	sub	sp, #24
 80166b8:	1d06      	adds	r6, r0, #4
 80166ba:	2300      	movs	r3, #0
 80166bc:	4631      	mov	r1, r6
 80166be:	4605      	mov	r5, r0
 80166c0:	a802      	add	r0, sp, #8
 80166c2:	9301      	str	r3, [sp, #4]
 80166c4:	f7ff f8e8 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80166c8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80166cc:	8822      	ldrh	r2, [r4, #0]
 80166ce:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80166d2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80166d6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80166da:	1ad2      	subs	r2, r2, r3
 80166dc:	8863      	ldrh	r3, [r4, #2]
 80166de:	f8ad 2010 	strh.w	r2, [sp, #16]
 80166e2:	1a5b      	subs	r3, r3, r1
 80166e4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80166e8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80166ec:	aa01      	add	r2, sp, #4
 80166ee:	a904      	add	r1, sp, #16
 80166f0:	4630      	mov	r0, r6
 80166f2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80166f6:	f7f7 fce1 	bl	800e0bc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80166fa:	9a01      	ldr	r2, [sp, #4]
 80166fc:	b11a      	cbz	r2, 8016706 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80166fe:	4621      	mov	r1, r4
 8016700:	4628      	mov	r0, r5
 8016702:	f7ff fed5 	bl	80164b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016706:	b006      	add	sp, #24
 8016708:	bd70      	pop	{r4, r5, r6, pc}

0801670a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801670a:	b530      	push	{r4, r5, lr}
 801670c:	4602      	mov	r2, r0
 801670e:	4604      	mov	r4, r0
 8016710:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016714:	b085      	sub	sp, #20
 8016716:	460d      	mov	r5, r1
 8016718:	6851      	ldr	r1, [r2, #4]
 801671a:	466b      	mov	r3, sp
 801671c:	c303      	stmia	r3!, {r0, r1}
 801671e:	4629      	mov	r1, r5
 8016720:	4668      	mov	r0, sp
 8016722:	f7f7 fbf3 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 8016726:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801672a:	b12b      	cbz	r3, 8016738 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801672c:	4669      	mov	r1, sp
 801672e:	4620      	mov	r0, r4
 8016730:	f7ff ffbf 	bl	80166b2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016734:	b005      	add	sp, #20
 8016736:	bd30      	pop	{r4, r5, pc}
 8016738:	3404      	adds	r4, #4
 801673a:	4621      	mov	r1, r4
 801673c:	a802      	add	r0, sp, #8
 801673e:	f7ff f8ab 	bl	8015898 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016742:	f8bd 3000 	ldrh.w	r3, [sp]
 8016746:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801674a:	1a9b      	subs	r3, r3, r2
 801674c:	f8ad 3000 	strh.w	r3, [sp]
 8016750:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016754:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016758:	4669      	mov	r1, sp
 801675a:	1a9b      	subs	r3, r3, r2
 801675c:	4620      	mov	r0, r4
 801675e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016762:	f7f7 fc72 	bl	800e04a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016766:	e7e5      	b.n	8016734 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016768 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016768:	680a      	ldr	r2, [r1, #0]
 801676a:	460b      	mov	r3, r1
 801676c:	6992      	ldr	r2, [r2, #24]
 801676e:	1d01      	adds	r1, r0, #4
 8016770:	4618      	mov	r0, r3
 8016772:	4710      	bx	r2

08016774 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016774:	4298      	cmp	r0, r3
 8016776:	d200      	bcs.n	801677a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016778:	b913      	cbnz	r3, 8016780 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801677a:	440a      	add	r2, r1
 801677c:	b210      	sxth	r0, r2
 801677e:	4770      	bx	lr
 8016780:	ee07 0a90 	vmov	s15, r0
 8016784:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016788:	ee07 3a90 	vmov	s15, r3
 801678c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016790:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016794:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016798:	ee37 7a66 	vsub.f32	s14, s14, s13
 801679c:	ee07 2a90 	vmov	s15, r2
 80167a0:	ee67 5a07 	vmul.f32	s11, s14, s14
 80167a4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80167a8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80167ac:	ee07 1a90 	vmov	s15, r1
 80167b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80167b4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80167b8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80167bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80167c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167c4:	bfcc      	ite	gt
 80167c6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80167ca:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80167ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80167d2:	ee17 3a90 	vmov	r3, s15
 80167d6:	b218      	sxth	r0, r3
 80167d8:	4770      	bx	lr

080167da <_ZN8touchgfx12TextProviderC1Ev>:
 80167da:	b538      	push	{r3, r4, r5, lr}
 80167dc:	2500      	movs	r5, #0
 80167de:	2302      	movs	r3, #2
 80167e0:	4604      	mov	r4, r0
 80167e2:	e9c0 5500 	strd	r5, r5, [r0]
 80167e6:	7403      	strb	r3, [r0, #16]
 80167e8:	6145      	str	r5, [r0, #20]
 80167ea:	7605      	strb	r5, [r0, #24]
 80167ec:	83c5      	strh	r5, [r0, #30]
 80167ee:	8405      	strh	r5, [r0, #32]
 80167f0:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80167f2:	8705      	strh	r5, [r0, #56]	@ 0x38
 80167f4:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 80167f6:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 80167fa:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 80167fe:	220e      	movs	r2, #14
 8016800:	4629      	mov	r1, r5
 8016802:	304c      	adds	r0, #76	@ 0x4c
 8016804:	f011 fd3b 	bl	802827e <memset>
 8016808:	2301      	movs	r3, #1
 801680a:	4620      	mov	r0, r4
 801680c:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8016810:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8016814:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8016818:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 801681c:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8016820:	f7ef ff22 	bl	8006668 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016824:	4620      	mov	r0, r4
 8016826:	bd38      	pop	{r3, r4, r5, pc}

08016828 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016828:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801682a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801682e:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8016830:	fab0 f080 	clz	r0, r0
 8016834:	0940      	lsrs	r0, r0, #5
 8016836:	4770      	bx	lr

08016838 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016838:	b530      	push	{r4, r5, lr}
 801683a:	2500      	movs	r5, #0
 801683c:	2401      	movs	r4, #1
 801683e:	6843      	ldr	r3, [r0, #4]
 8016840:	b913      	cbnz	r3, 8016848 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016842:	6803      	ldr	r3, [r0, #0]
 8016844:	b313      	cbz	r3, 801688c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016846:	6043      	str	r3, [r0, #4]
 8016848:	7e03      	ldrb	r3, [r0, #24]
 801684a:	b143      	cbz	r3, 801685e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801684c:	6943      	ldr	r3, [r0, #20]
 801684e:	b12b      	cbz	r3, 801685c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016850:	881a      	ldrh	r2, [r3, #0]
 8016852:	b11a      	cbz	r2, 801685c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016854:	1c9a      	adds	r2, r3, #2
 8016856:	6142      	str	r2, [r0, #20]
 8016858:	8818      	ldrh	r0, [r3, #0]
 801685a:	bd30      	pop	{r4, r5, pc}
 801685c:	7605      	strb	r5, [r0, #24]
 801685e:	6843      	ldr	r3, [r0, #4]
 8016860:	8819      	ldrh	r1, [r3, #0]
 8016862:	b199      	cbz	r1, 801688c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016864:	1c9a      	adds	r2, r3, #2
 8016866:	2902      	cmp	r1, #2
 8016868:	6042      	str	r2, [r0, #4]
 801686a:	d1f5      	bne.n	8016858 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801686c:	7c03      	ldrb	r3, [r0, #16]
 801686e:	2b01      	cmp	r3, #1
 8016870:	d8e5      	bhi.n	801683e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016872:	1c5a      	adds	r2, r3, #1
 8016874:	3302      	adds	r3, #2
 8016876:	7402      	strb	r2, [r0, #16]
 8016878:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801687c:	6143      	str	r3, [r0, #20]
 801687e:	2b00      	cmp	r3, #0
 8016880:	d0dd      	beq.n	801683e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016882:	881b      	ldrh	r3, [r3, #0]
 8016884:	2b00      	cmp	r3, #0
 8016886:	d0da      	beq.n	801683e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016888:	7604      	strb	r4, [r0, #24]
 801688a:	e7d8      	b.n	801683e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801688c:	2000      	movs	r0, #0
 801688e:	e7e4      	b.n	801685a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016890 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016890:	b430      	push	{r4, r5}
 8016892:	6001      	str	r1, [r0, #0]
 8016894:	2100      	movs	r1, #0
 8016896:	6041      	str	r1, [r0, #4]
 8016898:	6815      	ldr	r5, [r2, #0]
 801689a:	6085      	str	r5, [r0, #8]
 801689c:	6852      	ldr	r2, [r2, #4]
 801689e:	6443      	str	r3, [r0, #68]	@ 0x44
 80168a0:	9b02      	ldr	r3, [sp, #8]
 80168a2:	60c2      	str	r2, [r0, #12]
 80168a4:	7401      	strb	r1, [r0, #16]
 80168a6:	6141      	str	r1, [r0, #20]
 80168a8:	7601      	strb	r1, [r0, #24]
 80168aa:	8701      	strh	r1, [r0, #56]	@ 0x38
 80168ac:	8401      	strh	r1, [r0, #32]
 80168ae:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80168b2:	6483      	str	r3, [r0, #72]	@ 0x48
 80168b4:	bc30      	pop	{r4, r5}
 80168b6:	f7ef bed7 	b.w	8006668 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080168ba <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80168ba:	b408      	push	{r3}
 80168bc:	b510      	push	{r4, lr}
 80168be:	b085      	sub	sp, #20
 80168c0:	ac07      	add	r4, sp, #28
 80168c2:	f854 3b04 	ldr.w	r3, [r4], #4
 80168c6:	9300      	str	r3, [sp, #0]
 80168c8:	4613      	mov	r3, r2
 80168ca:	4622      	mov	r2, r4
 80168cc:	9403      	str	r4, [sp, #12]
 80168ce:	f7ff ffdf 	bl	8016890 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80168d2:	b005      	add	sp, #20
 80168d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80168d8:	b001      	add	sp, #4
 80168da:	4770      	bx	lr

080168dc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80168dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80168de:	4605      	mov	r5, r0
 80168e0:	4608      	mov	r0, r1
 80168e2:	b1e9      	cbz	r1, 8016920 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80168e4:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 80168e8:	460b      	mov	r3, r1
 80168ea:	f101 0708 	add.w	r7, r1, #8
 80168ee:	4622      	mov	r2, r4
 80168f0:	6818      	ldr	r0, [r3, #0]
 80168f2:	6859      	ldr	r1, [r3, #4]
 80168f4:	4626      	mov	r6, r4
 80168f6:	c603      	stmia	r6!, {r0, r1}
 80168f8:	3308      	adds	r3, #8
 80168fa:	42bb      	cmp	r3, r7
 80168fc:	4634      	mov	r4, r6
 80168fe:	d1f7      	bne.n	80168f0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016900:	6818      	ldr	r0, [r3, #0]
 8016902:	6030      	str	r0, [r6, #0]
 8016904:	889b      	ldrh	r3, [r3, #4]
 8016906:	80b3      	strh	r3, [r6, #4]
 8016908:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801690c:	015b      	lsls	r3, r3, #5
 801690e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8016912:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8016916:	430b      	orrs	r3, r1
 8016918:	425b      	negs	r3, r3
 801691a:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801691e:	4610      	mov	r0, r2
 8016920:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016922 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016922:	b538      	push	{r3, r4, r5, lr}
 8016924:	460c      	mov	r4, r1
 8016926:	6811      	ldr	r1, [r2, #0]
 8016928:	4610      	mov	r0, r2
 801692a:	68cd      	ldr	r5, [r1, #12]
 801692c:	4619      	mov	r1, r3
 801692e:	47a8      	blx	r5
 8016930:	2800      	cmp	r0, #0
 8016932:	bf08      	it	eq
 8016934:	4620      	moveq	r0, r4
 8016936:	bd38      	pop	{r3, r4, r5, pc}

08016938 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801693c:	468c      	mov	ip, r1
 801693e:	4605      	mov	r5, r0
 8016940:	4614      	mov	r4, r2
 8016942:	b942      	cbnz	r2, 8016956 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8016944:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8016948:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 801694c:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8016950:	4620      	mov	r0, r4
 8016952:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016956:	7b50      	ldrb	r0, [r2, #13]
 8016958:	8893      	ldrh	r3, [r2, #4]
 801695a:	0106      	lsls	r6, r0, #4
 801695c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8016960:	79e6      	ldrb	r6, [r4, #7]
 8016962:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8016966:	4316      	orrs	r6, r2
 8016968:	185a      	adds	r2, r3, r1
 801696a:	b291      	uxth	r1, r2
 801696c:	291d      	cmp	r1, #29
 801696e:	b2b7      	uxth	r7, r6
 8016970:	d87e      	bhi.n	8016a70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8016972:	2201      	movs	r2, #1
 8016974:	408a      	lsls	r2, r1
 8016976:	498a      	ldr	r1, [pc, #552]	@ (8016ba0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8016978:	420a      	tst	r2, r1
 801697a:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801697e:	d12d      	bne.n	80169dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016980:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8016984:	d074      	beq.n	8016a70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8016986:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801698a:	4623      	mov	r3, r4
 801698c:	f104 0e08 	add.w	lr, r4, #8
 8016990:	4614      	mov	r4, r2
 8016992:	6818      	ldr	r0, [r3, #0]
 8016994:	6859      	ldr	r1, [r3, #4]
 8016996:	4694      	mov	ip, r2
 8016998:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801699c:	3308      	adds	r3, #8
 801699e:	4573      	cmp	r3, lr
 80169a0:	4662      	mov	r2, ip
 80169a2:	d1f6      	bne.n	8016992 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80169a4:	6818      	ldr	r0, [r3, #0]
 80169a6:	f8cc 0000 	str.w	r0, [ip]
 80169aa:	889b      	ldrh	r3, [r3, #4]
 80169ac:	f8ac 3004 	strh.w	r3, [ip, #4]
 80169b0:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 80169b4:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 80169b8:	b2b3      	uxth	r3, r6
 80169ba:	1aca      	subs	r2, r1, r3
 80169bc:	b292      	uxth	r2, r2
 80169be:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 80169c2:	10d2      	asrs	r2, r2, #3
 80169c4:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 80169c8:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 80169cc:	4302      	orrs	r2, r0
 80169ce:	1bcf      	subs	r7, r1, r7
 80169d0:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 80169d4:	1afb      	subs	r3, r7, r3
 80169d6:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 80169da:	e7b9      	b.n	8016950 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80169dc:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80169e0:	4623      	mov	r3, r4
 80169e2:	f104 0808 	add.w	r8, r4, #8
 80169e6:	4614      	mov	r4, r2
 80169e8:	6818      	ldr	r0, [r3, #0]
 80169ea:	6859      	ldr	r1, [r3, #4]
 80169ec:	4696      	mov	lr, r2
 80169ee:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80169f2:	3308      	adds	r3, #8
 80169f4:	4543      	cmp	r3, r8
 80169f6:	4672      	mov	r2, lr
 80169f8:	d1f6      	bne.n	80169e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 80169fa:	6818      	ldr	r0, [r3, #0]
 80169fc:	f8ce 0000 	str.w	r0, [lr]
 8016a00:	889b      	ldrh	r3, [r3, #4]
 8016a02:	f8ae 3004 	strh.w	r3, [lr, #4]
 8016a06:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8016a08:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8016a0c:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8016a0e:	f640 6333 	movw	r3, #3635	@ 0xe33
 8016a12:	4299      	cmp	r1, r3
 8016a14:	d111      	bne.n	8016a3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8016a16:	f8dc 3000 	ldr.w	r3, [ip]
 8016a1a:	4660      	mov	r0, ip
 8016a1c:	68db      	ldr	r3, [r3, #12]
 8016a1e:	4798      	blx	r3
 8016a20:	7b41      	ldrb	r1, [r0, #13]
 8016a22:	00cb      	lsls	r3, r1, #3
 8016a24:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016a28:	7a03      	ldrb	r3, [r0, #8]
 8016a2a:	4313      	orrs	r3, r2
 8016a2c:	064a      	lsls	r2, r1, #25
 8016a2e:	bf44      	itt	mi
 8016a30:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016a34:	b21b      	sxthmi	r3, r3
 8016a36:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8016a3a:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8016a3e:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8016a42:	443b      	add	r3, r7
 8016a44:	4433      	add	r3, r6
 8016a46:	b29b      	uxth	r3, r3
 8016a48:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8016a4c:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8016a50:	10db      	asrs	r3, r3, #3
 8016a52:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8016a56:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016a5a:	4313      	orrs	r3, r2
 8016a5c:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8016a60:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8016a64:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8016a68:	1a9b      	subs	r3, r3, r2
 8016a6a:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8016a6e:	e76f      	b.n	8016950 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8016a70:	f023 0204 	bic.w	r2, r3, #4
 8016a74:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8016a78:	428a      	cmp	r2, r1
 8016a7a:	d003      	beq.n	8016a84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8016a7c:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8016a80:	4293      	cmp	r3, r2
 8016a82:	d137      	bne.n	8016af4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8016a84:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8016a88:	4622      	mov	r2, r4
 8016a8a:	f104 0808 	add.w	r8, r4, #8
 8016a8e:	4634      	mov	r4, r6
 8016a90:	6810      	ldr	r0, [r2, #0]
 8016a92:	6851      	ldr	r1, [r2, #4]
 8016a94:	46b6      	mov	lr, r6
 8016a96:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016a9a:	3208      	adds	r2, #8
 8016a9c:	4542      	cmp	r2, r8
 8016a9e:	4676      	mov	r6, lr
 8016aa0:	d1f6      	bne.n	8016a90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8016aa2:	6810      	ldr	r0, [r2, #0]
 8016aa4:	f8ce 0000 	str.w	r0, [lr]
 8016aa8:	8892      	ldrh	r2, [r2, #4]
 8016aaa:	f8ae 2004 	strh.w	r2, [lr, #4]
 8016aae:	3b01      	subs	r3, #1
 8016ab0:	b29b      	uxth	r3, r3
 8016ab2:	4662      	mov	r2, ip
 8016ab4:	4621      	mov	r1, r4
 8016ab6:	4628      	mov	r0, r5
 8016ab8:	f7ff ff33 	bl	8016922 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016abc:	7b41      	ldrb	r1, [r0, #13]
 8016abe:	00cb      	lsls	r3, r1, #3
 8016ac0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016ac4:	7a03      	ldrb	r3, [r0, #8]
 8016ac6:	0648      	lsls	r0, r1, #25
 8016ac8:	ea43 0302 	orr.w	r3, r3, r2
 8016acc:	bf44      	itt	mi
 8016ace:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016ad2:	b21b      	sxthmi	r3, r3
 8016ad4:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8016ad8:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8016adc:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8016ae0:	005b      	lsls	r3, r3, #1
 8016ae2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8016ae6:	4313      	orrs	r3, r2
 8016ae8:	115a      	asrs	r2, r3, #5
 8016aea:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016aee:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8016af2:	e046      	b.n	8016b82 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8016af4:	00c2      	lsls	r2, r0, #3
 8016af6:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8016afa:	7a22      	ldrb	r2, [r4, #8]
 8016afc:	430a      	orrs	r2, r1
 8016afe:	0641      	lsls	r1, r0, #25
 8016b00:	bf44      	itt	mi
 8016b02:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8016b06:	b212      	sxthmi	r2, r2
 8016b08:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8016b0c:	f640 6109 	movw	r1, #3593	@ 0xe09
 8016b10:	f023 0210 	bic.w	r2, r3, #16
 8016b14:	428a      	cmp	r2, r1
 8016b16:	d003      	beq.n	8016b20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8016b18:	f640 6213 	movw	r2, #3603	@ 0xe13
 8016b1c:	4293      	cmp	r3, r2
 8016b1e:	d13d      	bne.n	8016b9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8016b20:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8016b24:	f104 0808 	add.w	r8, r4, #8
 8016b28:	4696      	mov	lr, r2
 8016b2a:	6820      	ldr	r0, [r4, #0]
 8016b2c:	6861      	ldr	r1, [r4, #4]
 8016b2e:	4616      	mov	r6, r2
 8016b30:	c603      	stmia	r6!, {r0, r1}
 8016b32:	3408      	adds	r4, #8
 8016b34:	4544      	cmp	r4, r8
 8016b36:	4632      	mov	r2, r6
 8016b38:	d1f7      	bne.n	8016b2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8016b3a:	6820      	ldr	r0, [r4, #0]
 8016b3c:	6030      	str	r0, [r6, #0]
 8016b3e:	88a1      	ldrh	r1, [r4, #4]
 8016b40:	80b1      	strh	r1, [r6, #4]
 8016b42:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8016b46:	0076      	lsls	r6, r6, #1
 8016b48:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8016b4c:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8016b50:	4316      	orrs	r6, r2
 8016b52:	f640 6213 	movw	r2, #3603	@ 0xe13
 8016b56:	4293      	cmp	r3, r2
 8016b58:	bf1a      	itte	ne
 8016b5a:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016b5e:	b29b      	uxthne	r3, r3
 8016b60:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8016b64:	4662      	mov	r2, ip
 8016b66:	4671      	mov	r1, lr
 8016b68:	4628      	mov	r0, r5
 8016b6a:	4674      	mov	r4, lr
 8016b6c:	f7ff fed9 	bl	8016922 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016b70:	7b43      	ldrb	r3, [r0, #13]
 8016b72:	7a82      	ldrb	r2, [r0, #10]
 8016b74:	005b      	lsls	r3, r3, #1
 8016b76:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8016b7a:	4313      	orrs	r3, r2
 8016b7c:	1af6      	subs	r6, r6, r3
 8016b7e:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8016b82:	7b61      	ldrb	r1, [r4, #13]
 8016b84:	00cb      	lsls	r3, r1, #3
 8016b86:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016b8a:	7a23      	ldrb	r3, [r4, #8]
 8016b8c:	4313      	orrs	r3, r2
 8016b8e:	064a      	lsls	r2, r1, #25
 8016b90:	bf44      	itt	mi
 8016b92:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016b96:	b21b      	sxthmi	r3, r3
 8016b98:	1bdb      	subs	r3, r3, r7
 8016b9a:	e71c      	b.n	80169d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016b9c:	2300      	movs	r3, #0
 8016b9e:	e7a6      	b.n	8016aee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8016ba0:	3fc00079 	.word	0x3fc00079

08016ba4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016ba4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016ba8:	4604      	mov	r4, r0
 8016baa:	b942      	cbnz	r2, 8016bbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016bac:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8016bb0:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8016bb4:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8016bb8:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8016bbc:	e047      	b.n	8016c4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016bbe:	7b51      	ldrb	r1, [r2, #13]
 8016bc0:	8893      	ldrh	r3, [r2, #4]
 8016bc2:	010d      	lsls	r5, r1, #4
 8016bc4:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8016bc8:	79d5      	ldrb	r5, [r2, #7]
 8016bca:	4305      	orrs	r5, r0
 8016bcc:	2d04      	cmp	r5, #4
 8016bce:	bfcc      	ite	gt
 8016bd0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016bd4:	f04f 0e01 	movle.w	lr, #1
 8016bd8:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8016bdc:	f200 80ab 	bhi.w	8016d36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016be0:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8016be4:	4283      	cmp	r3, r0
 8016be6:	d216      	bcs.n	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016be8:	f240 605b 	movw	r0, #1627	@ 0x65b
 8016bec:	4283      	cmp	r3, r0
 8016bee:	d859      	bhi.n	8016ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016bf0:	f240 6057 	movw	r0, #1623	@ 0x657
 8016bf4:	4283      	cmp	r3, r0
 8016bf6:	d20e      	bcs.n	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016bf8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8016bfc:	d24a      	bcs.n	8016c94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016bfe:	f240 604e 	movw	r0, #1614	@ 0x64e
 8016c02:	4283      	cmp	r3, r0
 8016c04:	d207      	bcs.n	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c06:	f240 601a 	movw	r0, #1562	@ 0x61a
 8016c0a:	4283      	cmp	r3, r0
 8016c0c:	d02a      	beq.n	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016c0e:	d821      	bhi.n	8016c54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016c10:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8016c14:	d35b      	bcc.n	8016cce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016c16:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8016c1a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016c1e:	f040 80d0 	bne.w	8016dc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016c22:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8016c26:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016c2a:	f040 80ca 	bne.w	8016dc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016c2e:	00cb      	lsls	r3, r1, #3
 8016c30:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8016c34:	7a13      	ldrb	r3, [r2, #8]
 8016c36:	0649      	lsls	r1, r1, #25
 8016c38:	ea43 0300 	orr.w	r3, r3, r0
 8016c3c:	bf44      	itt	mi
 8016c3e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016c42:	b21b      	sxthmi	r3, r3
 8016c44:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016c48:	1b5d      	subs	r5, r3, r5
 8016c4a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8016c4e:	4610      	mov	r0, r2
 8016c50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016c54:	f240 604b 	movw	r0, #1611	@ 0x64b
 8016c58:	4283      	cmp	r3, r0
 8016c5a:	d338      	bcc.n	8016cce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016c5c:	f240 604c 	movw	r0, #1612	@ 0x64c
 8016c60:	4283      	cmp	r3, r0
 8016c62:	d9d8      	bls.n	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c64:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8016c68:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8016c6c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016c70:	f040 80f2 	bne.w	8016e58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016c74:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016c78:	f040 80ee 	bne.w	8016e58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016c7c:	00cb      	lsls	r3, r1, #3
 8016c7e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8016c82:	7a13      	ldrb	r3, [r2, #8]
 8016c84:	064e      	lsls	r6, r1, #25
 8016c86:	ea43 0300 	orr.w	r3, r3, r0
 8016c8a:	bf44      	itt	mi
 8016c8c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016c90:	b21b      	sxthmi	r3, r3
 8016c92:	e7d9      	b.n	8016c48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8016c94:	f240 6054 	movw	r0, #1620	@ 0x654
 8016c98:	4283      	cmp	r3, r0
 8016c9a:	d8e3      	bhi.n	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016c9c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8016ca0:	d9e0      	bls.n	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016ca2:	e7b8      	b.n	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016ca4:	f240 6074 	movw	r0, #1652	@ 0x674
 8016ca8:	4283      	cmp	r3, r0
 8016caa:	d0b4      	beq.n	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cac:	d82d      	bhi.n	8016d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8016cae:	f240 605e 	movw	r0, #1630	@ 0x65e
 8016cb2:	4283      	cmp	r3, r0
 8016cb4:	d804      	bhi.n	8016cc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8016cb6:	f240 605d 	movw	r0, #1629	@ 0x65d
 8016cba:	4283      	cmp	r3, r0
 8016cbc:	d3d2      	bcc.n	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016cbe:	e7aa      	b.n	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cc0:	f240 605f 	movw	r0, #1631	@ 0x65f
 8016cc4:	4283      	cmp	r3, r0
 8016cc6:	d0cd      	beq.n	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016cc8:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8016ccc:	d0a3      	beq.n	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cce:	00cb      	lsls	r3, r1, #3
 8016cd0:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8016cd4:	7a13      	ldrb	r3, [r2, #8]
 8016cd6:	0649      	lsls	r1, r1, #25
 8016cd8:	ea43 0300 	orr.w	r3, r3, r0
 8016cdc:	bf44      	itt	mi
 8016cde:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016ce2:	b21b      	sxthmi	r3, r3
 8016ce4:	1b5d      	subs	r5, r3, r5
 8016ce6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016cea:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8016cee:	7b53      	ldrb	r3, [r2, #13]
 8016cf0:	015b      	lsls	r3, r3, #5
 8016cf2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8016cf6:	7993      	ldrb	r3, [r2, #6]
 8016cf8:	430b      	orrs	r3, r1
 8016cfa:	005b      	lsls	r3, r3, #1
 8016cfc:	2105      	movs	r1, #5
 8016cfe:	fb93 f3f1 	sdiv	r3, r3, r1
 8016d02:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8016d06:	440b      	add	r3, r1
 8016d08:	e756      	b.n	8016bb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016d0a:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8016d0e:	4283      	cmp	r3, r0
 8016d10:	d809      	bhi.n	8016d26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8016d12:	f240 60df 	movw	r0, #1759	@ 0x6df
 8016d16:	4283      	cmp	r3, r0
 8016d18:	f4bf af7d 	bcs.w	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d1c:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8016d20:	2b05      	cmp	r3, #5
 8016d22:	d8d4      	bhi.n	8016cce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016d24:	e777      	b.n	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d26:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8016d2a:	4283      	cmp	r3, r0
 8016d2c:	d09a      	beq.n	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d2e:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8016d32:	4283      	cmp	r3, r0
 8016d34:	e7ca      	b.n	8016ccc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016d36:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8016d3a:	d22b      	bcs.n	8016d94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8016d3c:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8016d40:	4283      	cmp	r3, r0
 8016d42:	d28f      	bcs.n	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d44:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8016d48:	4283      	cmp	r3, r0
 8016d4a:	d816      	bhi.n	8016d7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8016d4c:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8016d50:	4283      	cmp	r3, r0
 8016d52:	f4bf af60 	bcs.w	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d56:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8016d5a:	4283      	cmp	r3, r0
 8016d5c:	d80a      	bhi.n	8016d74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8016d5e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8016d62:	4283      	cmp	r3, r0
 8016d64:	f4bf af57 	bcs.w	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d68:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8016d6c:	4283      	cmp	r3, r0
 8016d6e:	f43f af79 	beq.w	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d72:	e7ac      	b.n	8016cce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016d74:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8016d78:	e7f8      	b.n	8016d6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8016d7a:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8016d7e:	4283      	cmp	r3, r0
 8016d80:	d802      	bhi.n	8016d88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8016d82:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8016d86:	e798      	b.n	8016cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016d88:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8016d8c:	4283      	cmp	r3, r0
 8016d8e:	f47f af42 	bne.w	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d92:	e767      	b.n	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d94:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8016d98:	4283      	cmp	r3, r0
 8016d9a:	f43f af63 	beq.w	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d9e:	d802      	bhi.n	8016da6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016da0:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8016da4:	e7f2      	b.n	8016d8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8016da6:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8016daa:	4283      	cmp	r3, r0
 8016dac:	d805      	bhi.n	8016dba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8016dae:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8016db2:	4283      	cmp	r3, r0
 8016db4:	f4ff af2f 	bcc.w	8016c16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016db8:	e754      	b.n	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016dba:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8016dbe:	4283      	cmp	r3, r0
 8016dc0:	e7af      	b.n	8016d22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8016dc2:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8016dc6:	4617      	mov	r7, r2
 8016dc8:	f102 0808 	add.w	r8, r2, #8
 8016dcc:	4666      	mov	r6, ip
 8016dce:	6838      	ldr	r0, [r7, #0]
 8016dd0:	6879      	ldr	r1, [r7, #4]
 8016dd2:	46e6      	mov	lr, ip
 8016dd4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016dd8:	3708      	adds	r7, #8
 8016dda:	4547      	cmp	r7, r8
 8016ddc:	46f4      	mov	ip, lr
 8016dde:	d1f6      	bne.n	8016dce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8016de0:	6838      	ldr	r0, [r7, #0]
 8016de2:	f8ce 0000 	str.w	r0, [lr]
 8016de6:	88b9      	ldrh	r1, [r7, #4]
 8016de8:	f8ae 1004 	strh.w	r1, [lr, #4]
 8016dec:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8016df0:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016df4:	d009      	beq.n	8016e0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8016df6:	7b51      	ldrb	r1, [r2, #13]
 8016df8:	7992      	ldrb	r2, [r2, #6]
 8016dfa:	0149      	lsls	r1, r1, #5
 8016dfc:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8016e00:	4311      	orrs	r1, r2
 8016e02:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016e06:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8016e0a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016e0e:	b2ad      	uxth	r5, r5
 8016e10:	d00d      	beq.n	8016e2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8016e12:	442b      	add	r3, r5
 8016e14:	b29b      	uxth	r3, r3
 8016e16:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8016e1a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8016e1e:	10db      	asrs	r3, r3, #3
 8016e20:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8016e24:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016e28:	4313      	orrs	r3, r2
 8016e2a:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8016e2e:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8016e32:	00cb      	lsls	r3, r1, #3
 8016e34:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016e38:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8016e3c:	064f      	lsls	r7, r1, #25
 8016e3e:	ea43 0302 	orr.w	r3, r3, r2
 8016e42:	bf44      	itt	mi
 8016e44:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016e48:	b21b      	sxthmi	r3, r3
 8016e4a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016e4e:	1b5b      	subs	r3, r3, r5
 8016e50:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8016e54:	4632      	mov	r2, r6
 8016e56:	e6fa      	b.n	8016c4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016e58:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8016e5c:	4617      	mov	r7, r2
 8016e5e:	f102 0908 	add.w	r9, r2, #8
 8016e62:	4666      	mov	r6, ip
 8016e64:	6838      	ldr	r0, [r7, #0]
 8016e66:	6879      	ldr	r1, [r7, #4]
 8016e68:	46e0      	mov	r8, ip
 8016e6a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016e6e:	3708      	adds	r7, #8
 8016e70:	454f      	cmp	r7, r9
 8016e72:	46c4      	mov	ip, r8
 8016e74:	d1f6      	bne.n	8016e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8016e76:	6838      	ldr	r0, [r7, #0]
 8016e78:	f8c8 0000 	str.w	r0, [r8]
 8016e7c:	88b9      	ldrh	r1, [r7, #4]
 8016e7e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8016e82:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8016e86:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016e8a:	d009      	beq.n	8016ea0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016e8c:	7b51      	ldrb	r1, [r2, #13]
 8016e8e:	7992      	ldrb	r2, [r2, #6]
 8016e90:	0149      	lsls	r1, r1, #5
 8016e92:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8016e96:	4311      	orrs	r1, r2
 8016e98:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016e9c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8016ea0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016ea4:	d00e      	beq.n	8016ec4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8016ea6:	eba3 030e 	sub.w	r3, r3, lr
 8016eaa:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8016eae:	b29b      	uxth	r3, r3
 8016eb0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8016eb4:	10db      	asrs	r3, r3, #3
 8016eb6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016eba:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8016ebe:	4313      	orrs	r3, r2
 8016ec0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8016ec4:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8016ec8:	00cb      	lsls	r3, r1, #3
 8016eca:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016ece:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8016ed2:	0648      	lsls	r0, r1, #25
 8016ed4:	ea43 0302 	orr.w	r3, r3, r2
 8016ed8:	bf44      	itt	mi
 8016eda:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016ede:	b21b      	sxthmi	r3, r3
 8016ee0:	1b5d      	subs	r5, r3, r5
 8016ee2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8016ee6:	e7b5      	b.n	8016e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08016ee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8016ee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016eec:	461e      	mov	r6, r3
 8016eee:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016ef0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016ef4:	4604      	mov	r4, r0
 8016ef6:	4617      	mov	r7, r2
 8016ef8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016efc:	f7ef fb72 	bl	80065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016f00:	4605      	mov	r5, r0
 8016f02:	b918      	cbnz	r0, 8016f0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8016f04:	6030      	str	r0, [r6, #0]
 8016f06:	4628      	mov	r0, r5
 8016f08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016f0c:	683b      	ldr	r3, [r7, #0]
 8016f0e:	4601      	mov	r1, r0
 8016f10:	68db      	ldr	r3, [r3, #12]
 8016f12:	4638      	mov	r0, r7
 8016f14:	4798      	blx	r3
 8016f16:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8016f1a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8016f1e:	4602      	mov	r2, r0
 8016f20:	6030      	str	r0, [r6, #0]
 8016f22:	d213      	bcs.n	8016f4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8016f24:	4643      	mov	r3, r8
 8016f26:	4639      	mov	r1, r7
 8016f28:	4620      	mov	r0, r4
 8016f2a:	f7ff fe3b 	bl	8016ba4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016f2e:	6030      	str	r0, [r6, #0]
 8016f30:	6833      	ldr	r3, [r6, #0]
 8016f32:	b143      	cbz	r3, 8016f46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8016f34:	7b5a      	ldrb	r2, [r3, #13]
 8016f36:	7a9b      	ldrb	r3, [r3, #10]
 8016f38:	0052      	lsls	r2, r2, #1
 8016f3a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8016f3e:	4313      	orrs	r3, r2
 8016f40:	bf0c      	ite	eq
 8016f42:	2301      	moveq	r3, #1
 8016f44:	2300      	movne	r3, #0
 8016f46:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8016f4a:	e7dc      	b.n	8016f06 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8016f4c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8016f50:	b29b      	uxth	r3, r3
 8016f52:	2b7f      	cmp	r3, #127	@ 0x7f
 8016f54:	d804      	bhi.n	8016f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8016f56:	4639      	mov	r1, r7
 8016f58:	4620      	mov	r0, r4
 8016f5a:	f7ff fced 	bl	8016938 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016f5e:	e7e6      	b.n	8016f2e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8016f60:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8016f64:	2b00      	cmp	r3, #0
 8016f66:	d0e3      	beq.n	8016f30 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016f68:	f640 1302 	movw	r3, #2306	@ 0x902
 8016f6c:	429d      	cmp	r5, r3
 8016f6e:	d1df      	bne.n	8016f30 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016f70:	4601      	mov	r1, r0
 8016f72:	4620      	mov	r0, r4
 8016f74:	f7ff fcb2 	bl	80168dc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016f78:	e7d9      	b.n	8016f2e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08016f7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8016f7a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016f7e:	461e      	mov	r6, r3
 8016f80:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016f82:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016f86:	4604      	mov	r4, r0
 8016f88:	4617      	mov	r7, r2
 8016f8a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016f8e:	f7ef fb29 	bl	80065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016f92:	4605      	mov	r5, r0
 8016f94:	b918      	cbnz	r0, 8016f9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8016f96:	6030      	str	r0, [r6, #0]
 8016f98:	4628      	mov	r0, r5
 8016f9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016f9e:	683b      	ldr	r3, [r7, #0]
 8016fa0:	4601      	mov	r1, r0
 8016fa2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8016fa6:	4638      	mov	r0, r7
 8016fa8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8016fac:	47c8      	blx	r9
 8016fae:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8016fb2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8016fb6:	4602      	mov	r2, r0
 8016fb8:	6030      	str	r0, [r6, #0]
 8016fba:	d213      	bcs.n	8016fe4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8016fbc:	4643      	mov	r3, r8
 8016fbe:	4639      	mov	r1, r7
 8016fc0:	4620      	mov	r0, r4
 8016fc2:	f7ff fdef 	bl	8016ba4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016fc6:	6030      	str	r0, [r6, #0]
 8016fc8:	6833      	ldr	r3, [r6, #0]
 8016fca:	b143      	cbz	r3, 8016fde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8016fcc:	7b5a      	ldrb	r2, [r3, #13]
 8016fce:	7a9b      	ldrb	r3, [r3, #10]
 8016fd0:	0052      	lsls	r2, r2, #1
 8016fd2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8016fd6:	4313      	orrs	r3, r2
 8016fd8:	bf0c      	ite	eq
 8016fda:	2301      	moveq	r3, #1
 8016fdc:	2300      	movne	r3, #0
 8016fde:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8016fe2:	e7d9      	b.n	8016f98 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8016fe4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8016fe8:	b29b      	uxth	r3, r3
 8016fea:	2b7f      	cmp	r3, #127	@ 0x7f
 8016fec:	d804      	bhi.n	8016ff8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8016fee:	4639      	mov	r1, r7
 8016ff0:	4620      	mov	r0, r4
 8016ff2:	f7ff fca1 	bl	8016938 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016ff6:	e7e6      	b.n	8016fc6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8016ff8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8016ffc:	2b00      	cmp	r3, #0
 8016ffe:	d0e3      	beq.n	8016fc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017000:	f640 1302 	movw	r3, #2306	@ 0x902
 8017004:	429d      	cmp	r5, r3
 8017006:	d1df      	bne.n	8016fc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017008:	4601      	mov	r1, r0
 801700a:	4620      	mov	r0, r4
 801700c:	f7ff fc66 	bl	80168dc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017010:	e7d9      	b.n	8016fc6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08017012 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8017012:	b510      	push	{r4, lr}
 8017014:	4604      	mov	r4, r0
 8017016:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 801701a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801701c:	b1f1      	cbz	r1, 801705c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801701e:	2b0a      	cmp	r3, #10
 8017020:	d02f      	beq.n	8017082 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8017022:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8017024:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8017028:	3901      	subs	r1, #1
 801702a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 801702c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8017030:	1c51      	adds	r1, r2, #1
 8017032:	b289      	uxth	r1, r1
 8017034:	2901      	cmp	r1, #1
 8017036:	bf84      	itt	hi
 8017038:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801703c:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 801703e:	f103 0201 	add.w	r2, r3, #1
 8017042:	8722      	strh	r2, [r4, #56]	@ 0x38
 8017044:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8017046:	bf98      	it	ls
 8017048:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 801704a:	4413      	add	r3, r2
 801704c:	b29b      	uxth	r3, r3
 801704e:	2b09      	cmp	r3, #9
 8017050:	bf88      	it	hi
 8017052:	3b0a      	subhi	r3, #10
 8017054:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017058:	8458      	strh	r0, [r3, #34]	@ 0x22
 801705a:	e7dc      	b.n	8017016 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801705c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801705e:	2b0a      	cmp	r3, #10
 8017060:	d00f      	beq.n	8017082 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8017062:	4620      	mov	r0, r4
 8017064:	f7ff fbe8 	bl	8016838 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017068:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801706a:	1c5a      	adds	r2, r3, #1
 801706c:	8722      	strh	r2, [r4, #56]	@ 0x38
 801706e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8017070:	4413      	add	r3, r2
 8017072:	b29b      	uxth	r3, r3
 8017074:	2b09      	cmp	r3, #9
 8017076:	bf88      	it	hi
 8017078:	3b0a      	subhi	r3, #10
 801707a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801707e:	8458      	strh	r0, [r3, #34]	@ 0x22
 8017080:	e7ec      	b.n	801705c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017082:	bd10      	pop	{r4, pc}

08017084 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8017084:	b538      	push	{r3, r4, r5, lr}
 8017086:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8017088:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801708c:	4604      	mov	r4, r0
 801708e:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8017090:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8017092:	3a01      	subs	r2, #1
 8017094:	8702      	strh	r2, [r0, #56]	@ 0x38
 8017096:	1c5a      	adds	r2, r3, #1
 8017098:	b292      	uxth	r2, r2
 801709a:	2a09      	cmp	r2, #9
 801709c:	bf86      	itte	hi
 801709e:	3b09      	subhi	r3, #9
 80170a0:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 80170a2:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 80170a4:	f7ff ffb5 	bl	8017012 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80170a8:	8c23      	ldrh	r3, [r4, #32]
 80170aa:	2b01      	cmp	r3, #1
 80170ac:	bf9c      	itt	ls
 80170ae:	3301      	addls	r3, #1
 80170b0:	8423      	strhls	r3, [r4, #32]
 80170b2:	8be3      	ldrh	r3, [r4, #30]
 80170b4:	b90b      	cbnz	r3, 80170ba <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80170b6:	2302      	movs	r3, #2
 80170b8:	83e3      	strh	r3, [r4, #30]
 80170ba:	8be3      	ldrh	r3, [r4, #30]
 80170bc:	3b01      	subs	r3, #1
 80170be:	b29b      	uxth	r3, r3
 80170c0:	83e3      	strh	r3, [r4, #30]
 80170c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80170c6:	4628      	mov	r0, r5
 80170c8:	8365      	strh	r5, [r4, #26]
 80170ca:	bd38      	pop	{r3, r4, r5, pc}

080170cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80170cc:	428a      	cmp	r2, r1
 80170ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80170d2:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80170d4:	d931      	bls.n	801713a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80170d6:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80170d8:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80170dc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80170e0:	19ee      	adds	r6, r5, r7
 80170e2:	1a54      	subs	r4, r2, r1
 80170e4:	3e01      	subs	r6, #1
 80170e6:	fa1f fe84 	uxth.w	lr, r4
 80170ea:	b2b4      	uxth	r4, r6
 80170ec:	eba4 090e 	sub.w	r9, r4, lr
 80170f0:	fa1f f989 	uxth.w	r9, r9
 80170f4:	2c09      	cmp	r4, #9
 80170f6:	4626      	mov	r6, r4
 80170f8:	bf88      	it	hi
 80170fa:	f1a4 060a 	subhi.w	r6, r4, #10
 80170fe:	f1bc 0f00 	cmp.w	ip, #0
 8017102:	bf08      	it	eq
 8017104:	f04f 0c02 	moveq.w	ip, #2
 8017108:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801710c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017110:	fa1f fc8c 	uxth.w	ip, ip
 8017114:	3c01      	subs	r4, #1
 8017116:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 801711a:	b2a4      	uxth	r4, r4
 801711c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017120:	454c      	cmp	r4, r9
 8017122:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8017126:	d1e5      	bne.n	80170f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8017128:	eba5 050e 	sub.w	r5, r5, lr
 801712c:	eb0e 0408 	add.w	r4, lr, r8
 8017130:	8705      	strh	r5, [r0, #56]	@ 0x38
 8017132:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8017136:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 801713a:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 801713c:	1a64      	subs	r4, r4, r1
 801713e:	4439      	add	r1, r7
 8017140:	b289      	uxth	r1, r1
 8017142:	2909      	cmp	r1, #9
 8017144:	bf88      	it	hi
 8017146:	390a      	subhi	r1, #10
 8017148:	8704      	strh	r4, [r0, #56]	@ 0x38
 801714a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801714c:	250a      	movs	r5, #10
 801714e:	b18a      	cbz	r2, 8017174 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8017150:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8017152:	3a01      	subs	r2, #1
 8017154:	b292      	uxth	r2, r2
 8017156:	3101      	adds	r1, #1
 8017158:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801715c:	8701      	strh	r1, [r0, #56]	@ 0x38
 801715e:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8017160:	b901      	cbnz	r1, 8017164 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8017162:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8017164:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8017166:	3901      	subs	r1, #1
 8017168:	b289      	uxth	r1, r1
 801716a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801716c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017170:	844c      	strh	r4, [r1, #34]	@ 0x22
 8017172:	e7ec      	b.n	801714e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8017174:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017178:	f7ff bf4b 	b.w	8017012 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801717c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801717c:	b570      	push	{r4, r5, r6, lr}
 801717e:	2500      	movs	r5, #0
 8017180:	4295      	cmp	r5, r2
 8017182:	d011      	beq.n	80171a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8017184:	8bc4      	ldrh	r4, [r0, #30]
 8017186:	f831 6b02 	ldrh.w	r6, [r1], #2
 801718a:	4414      	add	r4, r2
 801718c:	3c01      	subs	r4, #1
 801718e:	1b64      	subs	r4, r4, r5
 8017190:	b2a4      	uxth	r4, r4
 8017192:	2c01      	cmp	r4, #1
 8017194:	bf88      	it	hi
 8017196:	3c02      	subhi	r4, #2
 8017198:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801719c:	8b64      	ldrh	r4, [r4, #26]
 801719e:	42b4      	cmp	r4, r6
 80171a0:	d117      	bne.n	80171d2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80171a2:	3501      	adds	r5, #1
 80171a4:	b2ad      	uxth	r5, r5
 80171a6:	e7eb      	b.n	8017180 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80171a8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80171ac:	2400      	movs	r4, #0
 80171ae:	4413      	add	r3, r2
 80171b0:	b2a2      	uxth	r2, r4
 80171b2:	429a      	cmp	r2, r3
 80171b4:	da0f      	bge.n	80171d6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80171b6:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 80171b8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80171bc:	4432      	add	r2, r6
 80171be:	b292      	uxth	r2, r2
 80171c0:	2a09      	cmp	r2, #9
 80171c2:	bf88      	it	hi
 80171c4:	3a0a      	subhi	r2, #10
 80171c6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80171ca:	3401      	adds	r4, #1
 80171cc:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80171ce:	42aa      	cmp	r2, r5
 80171d0:	d0ee      	beq.n	80171b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80171d2:	2000      	movs	r0, #0
 80171d4:	bd70      	pop	{r4, r5, r6, pc}
 80171d6:	2001      	movs	r0, #1
 80171d8:	e7fc      	b.n	80171d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080171da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80171da:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171de:	4605      	mov	r5, r0
 80171e0:	4616      	mov	r6, r2
 80171e2:	1c8c      	adds	r4, r1, #2
 80171e4:	8809      	ldrh	r1, [r1, #0]
 80171e6:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80171ea:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80171ee:	42b3      	cmp	r3, r6
 80171f0:	d124      	bne.n	801723c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80171f2:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80171f6:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80171fa:	f001 070f 	and.w	r7, r1, #15
 80171fe:	f8cd 8000 	str.w	r8, [sp]
 8017202:	464b      	mov	r3, r9
 8017204:	4652      	mov	r2, sl
 8017206:	4621      	mov	r1, r4
 8017208:	4628      	mov	r0, r5
 801720a:	f7ff ffb7 	bl	801717c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801720e:	4683      	mov	fp, r0
 8017210:	b168      	cbz	r0, 801722e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8017212:	eb0a 0109 	add.w	r1, sl, r9
 8017216:	4441      	add	r1, r8
 8017218:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801721c:	463a      	mov	r2, r7
 801721e:	4649      	mov	r1, r9
 8017220:	4628      	mov	r0, r5
 8017222:	f7ff ff53 	bl	80170cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8017226:	4658      	mov	r0, fp
 8017228:	b003      	add	sp, #12
 801722a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801722e:	eb07 010a 	add.w	r1, r7, sl
 8017232:	4449      	add	r1, r9
 8017234:	4441      	add	r1, r8
 8017236:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801723a:	e7d2      	b.n	80171e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801723c:	f04f 0b00 	mov.w	fp, #0
 8017240:	e7f1      	b.n	8017226 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08017242 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8017242:	b570      	push	{r4, r5, r6, lr}
 8017244:	8810      	ldrh	r0, [r2, #0]
 8017246:	4298      	cmp	r0, r3
 8017248:	d817      	bhi.n	801727a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801724a:	1e48      	subs	r0, r1, #1
 801724c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017250:	4298      	cmp	r0, r3
 8017252:	d312      	bcc.n	801727a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017254:	2400      	movs	r4, #0
 8017256:	428c      	cmp	r4, r1
 8017258:	d20f      	bcs.n	801727a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801725a:	1860      	adds	r0, r4, r1
 801725c:	1040      	asrs	r0, r0, #1
 801725e:	0085      	lsls	r5, r0, #2
 8017260:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8017264:	42b3      	cmp	r3, r6
 8017266:	d902      	bls.n	801726e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017268:	3001      	adds	r0, #1
 801726a:	b284      	uxth	r4, r0
 801726c:	e7f3      	b.n	8017256 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801726e:	d201      	bcs.n	8017274 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017270:	b281      	uxth	r1, r0
 8017272:	e7f0      	b.n	8017256 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017274:	442a      	add	r2, r5
 8017276:	8850      	ldrh	r0, [r2, #2]
 8017278:	bd70      	pop	{r4, r5, r6, pc}
 801727a:	2000      	movs	r0, #0
 801727c:	e7fc      	b.n	8017278 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801727e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801727e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017282:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8017284:	886f      	ldrh	r7, [r5, #2]
 8017286:	4604      	mov	r4, r0
 8017288:	087f      	lsrs	r7, r7, #1
 801728a:	260b      	movs	r6, #11
 801728c:	3e01      	subs	r6, #1
 801728e:	d013      	beq.n	80172b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017290:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8017292:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017296:	462a      	mov	r2, r5
 8017298:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801729c:	4639      	mov	r1, r7
 801729e:	4643      	mov	r3, r8
 80172a0:	4620      	mov	r0, r4
 80172a2:	f7ff ffce 	bl	8017242 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80172a6:	b138      	cbz	r0, 80172b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80172a8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80172ac:	4642      	mov	r2, r8
 80172ae:	4620      	mov	r0, r4
 80172b0:	f7ff ff93 	bl	80171da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80172b4:	2800      	cmp	r0, #0
 80172b6:	d1e9      	bne.n	801728c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80172b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080172bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80172bc:	b570      	push	{r4, r5, r6, lr}
 80172be:	694a      	ldr	r2, [r1, #20]
 80172c0:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80172c2:	684b      	ldr	r3, [r1, #4]
 80172c4:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80172c6:	1b54      	subs	r4, r2, r5
 80172c8:	f000 8106 	beq.w	80174d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80172cc:	1b9b      	subs	r3, r3, r6
 80172ce:	d003      	beq.n	80172d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80172d0:	4363      	muls	r3, r4
 80172d2:	2210      	movs	r2, #16
 80172d4:	fb93 f3f2 	sdiv	r3, r3, r2
 80172d8:	680c      	ldr	r4, [r1, #0]
 80172da:	698a      	ldr	r2, [r1, #24]
 80172dc:	1b65      	subs	r5, r4, r5
 80172de:	f000 80fd 	beq.w	80174dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80172e2:	1b92      	subs	r2, r2, r6
 80172e4:	d003      	beq.n	80172ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80172e6:	436a      	muls	r2, r5
 80172e8:	2410      	movs	r4, #16
 80172ea:	fb92 f2f4 	sdiv	r2, r2, r4
 80172ee:	1a9b      	subs	r3, r3, r2
 80172f0:	ee07 3a90 	vmov	s15, r3
 80172f4:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8017518 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80172f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80172fc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017300:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017304:	460a      	mov	r2, r1
 8017306:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801730a:	4603      	mov	r3, r0
 801730c:	f100 040c 	add.w	r4, r0, #12
 8017310:	eeb1 6a43 	vneg.f32	s12, s6
 8017314:	edd2 7a02 	vldr	s15, [r2, #8]
 8017318:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801731c:	3214      	adds	r2, #20
 801731e:	ece3 6a01 	vstmia	r3!, {s13}
 8017322:	ed52 7a02 	vldr	s15, [r2, #-8]
 8017326:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801732a:	429c      	cmp	r4, r3
 801732c:	edc3 7a02 	vstr	s15, [r3, #8]
 8017330:	ed52 7a01 	vldr	s15, [r2, #-4]
 8017334:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017338:	edc3 7a05 	vstr	s15, [r3, #20]
 801733c:	d1ea      	bne.n	8017314 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801733e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8017340:	698b      	ldr	r3, [r1, #24]
 8017342:	edd0 4a02 	vldr	s9, [r0, #8]
 8017346:	edd0 3a00 	vldr	s7, [r0]
 801734a:	edd0 6a01 	vldr	s13, [r0, #4]
 801734e:	ed90 5a05 	vldr	s10, [r0, #20]
 8017352:	ed90 2a03 	vldr	s4, [r0, #12]
 8017356:	edd0 5a04 	vldr	s11, [r0, #16]
 801735a:	ed90 1a07 	vldr	s2, [r0, #28]
 801735e:	edd0 2a06 	vldr	s5, [r0, #24]
 8017362:	1a9b      	subs	r3, r3, r2
 8017364:	ee07 3a90 	vmov	s15, r3
 8017368:	684b      	ldr	r3, [r1, #4]
 801736a:	1a9b      	subs	r3, r3, r2
 801736c:	ee07 3a10 	vmov	s14, r3
 8017370:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017374:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017378:	ee67 7a84 	vmul.f32	s15, s15, s8
 801737c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017380:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017384:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017388:	ee27 7a04 	vmul.f32	s14, s14, s8
 801738c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017390:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017394:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017398:	ee67 7a83 	vmul.f32	s15, s15, s6
 801739c:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80173a0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80173a2:	694a      	ldr	r2, [r1, #20]
 80173a4:	1b13      	subs	r3, r2, r4
 80173a6:	ee07 3a10 	vmov	s14, r3
 80173aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80173ae:	680b      	ldr	r3, [r1, #0]
 80173b0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80173b4:	1b1b      	subs	r3, r3, r4
 80173b6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80173ba:	ee07 3a10 	vmov	s14, r3
 80173be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80173c2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80173c6:	eee6 4a87 	vfma.f32	s9, s13, s14
 80173ca:	ee64 4a86 	vmul.f32	s9, s9, s12
 80173ce:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80173d2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80173d4:	698b      	ldr	r3, [r1, #24]
 80173d6:	1a9b      	subs	r3, r3, r2
 80173d8:	ee06 3a90 	vmov	s13, r3
 80173dc:	684b      	ldr	r3, [r1, #4]
 80173de:	1a9b      	subs	r3, r3, r2
 80173e0:	ee07 3a10 	vmov	s14, r3
 80173e4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80173e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80173ec:	ee66 6a84 	vmul.f32	s13, s13, s8
 80173f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80173f4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80173f8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80173fc:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017400:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8017404:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8017406:	694a      	ldr	r2, [r1, #20]
 8017408:	1b13      	subs	r3, r2, r4
 801740a:	ee07 3a10 	vmov	s14, r3
 801740e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017412:	680b      	ldr	r3, [r1, #0]
 8017414:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017418:	1b1b      	subs	r3, r3, r4
 801741a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801741e:	ee07 3a10 	vmov	s14, r3
 8017422:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017426:	ee27 7a04 	vmul.f32	s14, s14, s8
 801742a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801742e:	edd0 5a08 	vldr	s11, [r0, #32]
 8017432:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017436:	ee31 1a65 	vsub.f32	s2, s2, s11
 801743a:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801743e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8017440:	698b      	ldr	r3, [r1, #24]
 8017442:	1a9b      	subs	r3, r3, r2
 8017444:	ee07 3a10 	vmov	s14, r3
 8017448:	684b      	ldr	r3, [r1, #4]
 801744a:	1a9b      	subs	r3, r3, r2
 801744c:	ee01 3a90 	vmov	s3, r3
 8017450:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017454:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017458:	ee27 7a04 	vmul.f32	s14, s14, s8
 801745c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017460:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017464:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017468:	eea1 7a21 	vfma.f32	s14, s2, s3
 801746c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017470:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8017474:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8017476:	694a      	ldr	r2, [r1, #20]
 8017478:	1b13      	subs	r3, r2, r4
 801747a:	ee03 3a10 	vmov	s6, r3
 801747e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017482:	680b      	ldr	r3, [r1, #0]
 8017484:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017488:	1b1b      	subs	r3, r3, r4
 801748a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801748e:	ee03 3a10 	vmov	s6, r3
 8017492:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017496:	ee23 4a04 	vmul.f32	s8, s6, s8
 801749a:	eee1 5a04 	vfma.f32	s11, s2, s8
 801749e:	ee25 6a86 	vmul.f32	s12, s11, s12
 80174a2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80174a6:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80174aa:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80174ae:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80174b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174b6:	dd13      	ble.n	80174e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80174b8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80174bc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80174c0:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80174c2:	eee3 7a87 	vfma.f32	s15, s7, s14
 80174c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80174ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174ce:	dd15      	ble.n	80174fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80174d0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80174d4:	6403      	str	r3, [r0, #64]	@ 0x40
 80174d6:	bd70      	pop	{r4, r5, r6, pc}
 80174d8:	4623      	mov	r3, r4
 80174da:	e6fd      	b.n	80172d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80174dc:	462a      	mov	r2, r5
 80174de:	e706      	b.n	80172ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80174e0:	d502      	bpl.n	80174e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80174e2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80174e6:	e7e9      	b.n	80174bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80174e8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80174ec:	eea3 2a85 	vfma.f32	s4, s7, s10
 80174f0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80174f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174f8:	dade      	bge.n	80174b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80174fa:	e7f2      	b.n	80174e2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80174fc:	d502      	bpl.n	8017504 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80174fe:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8017502:	e7e7      	b.n	80174d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017504:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017508:	eee3 4a86 	vfma.f32	s9, s7, s12
 801750c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017510:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017514:	dadc      	bge.n	80174d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017516:	e7f2      	b.n	80174fe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017518:	3d800000 	.word	0x3d800000

0801751c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801751c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017520:	2714      	movs	r7, #20
 8017522:	435f      	muls	r7, r3
 8017524:	eb02 0c07 	add.w	ip, r2, r7
 8017528:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801752c:	f115 0e0f 	adds.w	lr, r5, #15
 8017530:	f100 80a2 	bmi.w	8017678 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017534:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017538:	9c08      	ldr	r4, [sp, #32]
 801753a:	f8c0 e014 	str.w	lr, [r0, #20]
 801753e:	2614      	movs	r6, #20
 8017540:	4366      	muls	r6, r4
 8017542:	eb02 0806 	add.w	r8, r2, r6
 8017546:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801754a:	f115 040f 	adds.w	r4, r5, #15
 801754e:	f100 809f 	bmi.w	8017690 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017552:	1124      	asrs	r4, r4, #4
 8017554:	eba4 040e 	sub.w	r4, r4, lr
 8017558:	6184      	str	r4, [r0, #24]
 801755a:	2c00      	cmp	r4, #0
 801755c:	f000 808a 	beq.w	8017674 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017560:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017564:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017568:	5995      	ldr	r5, [r2, r6]
 801756a:	eba4 0809 	sub.w	r8, r4, r9
 801756e:	59d4      	ldr	r4, [r2, r7]
 8017570:	eba5 0a04 	sub.w	sl, r5, r4
 8017574:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017578:	fb0e fe05 	mul.w	lr, lr, r5
 801757c:	fb0a ee19 	mls	lr, sl, r9, lr
 8017580:	fb08 e404 	mla	r4, r8, r4, lr
 8017584:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017588:	3c01      	subs	r4, #1
 801758a:	19a4      	adds	r4, r4, r6
 801758c:	f100 808c 	bmi.w	80176a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017590:	fb94 fef6 	sdiv	lr, r4, r6
 8017594:	f8c0 e000 	str.w	lr, [r0]
 8017598:	fb06 441e 	mls	r4, r6, lr, r4
 801759c:	6104      	str	r4, [r0, #16]
 801759e:	2d00      	cmp	r5, #0
 80175a0:	f2c0 8095 	blt.w	80176ce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80175a4:	fb95 f4f6 	sdiv	r4, r5, r6
 80175a8:	6044      	str	r4, [r0, #4]
 80175aa:	fb06 5514 	mls	r5, r6, r4, r5
 80175ae:	6085      	str	r5, [r0, #8]
 80175b0:	60c6      	str	r6, [r0, #12]
 80175b2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80175b6:	6945      	ldr	r5, [r0, #20]
 80175b8:	59d2      	ldr	r2, [r2, r7]
 80175ba:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 80176f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80175be:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80175c2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80175c6:	ee07 4a10 	vmov	s14, r4
 80175ca:	6804      	ldr	r4, [r0, #0]
 80175cc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80175d0:	ee07 2a90 	vmov	s15, r2
 80175d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80175d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80175dc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80175e0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80175e4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80175e8:	edd3 6a00 	vldr	s13, [r3]
 80175ec:	eee6 6a07 	vfma.f32	s13, s12, s14
 80175f0:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80175f4:	eee6 6a27 	vfma.f32	s13, s12, s15
 80175f8:	edc0 6a07 	vstr	s13, [r0, #28]
 80175fc:	edd0 6a01 	vldr	s13, [r0, #4]
 8017600:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8017604:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8017608:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801760c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017610:	ed80 6a08 	vstr	s12, [r0, #32]
 8017614:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8017616:	6242      	str	r2, [r0, #36]	@ 0x24
 8017618:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 801761c:	ed93 6a03 	vldr	s12, [r3, #12]
 8017620:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017624:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8017628:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801762c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8017630:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8017634:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8017638:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801763c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8017640:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8017642:	6302      	str	r2, [r0, #48]	@ 0x30
 8017644:	ed93 6a06 	vldr	s12, [r3, #24]
 8017648:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 801764c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017650:	eeb0 7a46 	vmov.f32	s14, s12
 8017654:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8017658:	eea6 7a27 	vfma.f32	s14, s12, s15
 801765c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8017660:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8017664:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8017668:	eee6 7a87 	vfma.f32	s15, s13, s14
 801766c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8017670:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8017672:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8017674:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017678:	f1c5 0501 	rsb	r5, r5, #1
 801767c:	f015 050f 	ands.w	r5, r5, #15
 8017680:	bf18      	it	ne
 8017682:	2501      	movne	r5, #1
 8017684:	2410      	movs	r4, #16
 8017686:	fb9e fef4 	sdiv	lr, lr, r4
 801768a:	ebae 0e05 	sub.w	lr, lr, r5
 801768e:	e753      	b.n	8017538 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017690:	f1c5 0501 	rsb	r5, r5, #1
 8017694:	f015 050f 	ands.w	r5, r5, #15
 8017698:	bf18      	it	ne
 801769a:	2501      	movne	r5, #1
 801769c:	f04f 0910 	mov.w	r9, #16
 80176a0:	fb94 f4f9 	sdiv	r4, r4, r9
 80176a4:	1b64      	subs	r4, r4, r5
 80176a6:	e755      	b.n	8017554 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80176a8:	4264      	negs	r4, r4
 80176aa:	fb94 fef6 	sdiv	lr, r4, r6
 80176ae:	f1ce 0800 	rsb	r8, lr, #0
 80176b2:	fb06 441e 	mls	r4, r6, lr, r4
 80176b6:	f8c0 8000 	str.w	r8, [r0]
 80176ba:	6104      	str	r4, [r0, #16]
 80176bc:	2c00      	cmp	r4, #0
 80176be:	f43f af6e 	beq.w	801759e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80176c2:	ea6f 0e0e 	mvn.w	lr, lr
 80176c6:	f8c0 e000 	str.w	lr, [r0]
 80176ca:	1b34      	subs	r4, r6, r4
 80176cc:	e766      	b.n	801759c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80176ce:	426d      	negs	r5, r5
 80176d0:	fb95 f4f6 	sdiv	r4, r5, r6
 80176d4:	f1c4 0e00 	rsb	lr, r4, #0
 80176d8:	fb06 5514 	mls	r5, r6, r4, r5
 80176dc:	f8c0 e004 	str.w	lr, [r0, #4]
 80176e0:	6085      	str	r5, [r0, #8]
 80176e2:	2d00      	cmp	r5, #0
 80176e4:	f43f af64 	beq.w	80175b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80176e8:	43e4      	mvns	r4, r4
 80176ea:	6044      	str	r4, [r0, #4]
 80176ec:	1b75      	subs	r5, r6, r5
 80176ee:	e75e      	b.n	80175ae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80176f0:	3d800000 	.word	0x3d800000

080176f4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80176f4:	4602      	mov	r2, r0
 80176f6:	b148      	cbz	r0, 801770c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80176f8:	2300      	movs	r3, #0
 80176fa:	b298      	uxth	r0, r3
 80176fc:	3301      	adds	r3, #1
 80176fe:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017702:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017706:	2900      	cmp	r1, #0
 8017708:	d1f7      	bne.n	80176fa <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801770a:	4770      	bx	lr
 801770c:	4770      	bx	lr

0801770e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801770e:	b530      	push	{r4, r5, lr}
 8017710:	4604      	mov	r4, r0
 8017712:	b159      	cbz	r1, 801772c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017714:	b148      	cbz	r0, 801772a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017716:	2300      	movs	r3, #0
 8017718:	b298      	uxth	r0, r3
 801771a:	4282      	cmp	r2, r0
 801771c:	d905      	bls.n	801772a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801771e:	5ccd      	ldrb	r5, [r1, r3]
 8017720:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017724:	3301      	adds	r3, #1
 8017726:	2d00      	cmp	r5, #0
 8017728:	d1f6      	bne.n	8017718 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801772a:	bd30      	pop	{r4, r5, pc}
 801772c:	4608      	mov	r0, r1
 801772e:	e7fc      	b.n	801772a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017730 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017730:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017732:	b08b      	sub	sp, #44	@ 0x2c
 8017734:	468c      	mov	ip, r1
 8017736:	2100      	movs	r1, #0
 8017738:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801773c:	4604      	mov	r4, r0
 801773e:	261f      	movs	r6, #31
 8017740:	af01      	add	r7, sp, #4
 8017742:	fb94 fef3 	sdiv	lr, r4, r3
 8017746:	fb03 441e 	mls	r4, r3, lr, r4
 801774a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801774e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017752:	b2ec      	uxtb	r4, r5
 8017754:	2d09      	cmp	r5, #9
 8017756:	bfd4      	ite	le
 8017758:	3430      	addle	r4, #48	@ 0x30
 801775a:	3457      	addgt	r4, #87	@ 0x57
 801775c:	b2e4      	uxtb	r4, r4
 801775e:	55bc      	strb	r4, [r7, r6]
 8017760:	4674      	mov	r4, lr
 8017762:	1e71      	subs	r1, r6, #1
 8017764:	b974      	cbnz	r4, 8017784 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017766:	2800      	cmp	r0, #0
 8017768:	da05      	bge.n	8017776 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801776a:	ab0a      	add	r3, sp, #40	@ 0x28
 801776c:	4419      	add	r1, r3
 801776e:	232d      	movs	r3, #45	@ 0x2d
 8017770:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017774:	1eb1      	subs	r1, r6, #2
 8017776:	3101      	adds	r1, #1
 8017778:	4439      	add	r1, r7
 801777a:	4660      	mov	r0, ip
 801777c:	f7ff ffc7 	bl	801770e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017780:	b00b      	add	sp, #44	@ 0x2c
 8017782:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017784:	460e      	mov	r6, r1
 8017786:	e7dc      	b.n	8017742 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017788 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017788:	b5f0      	push	{r4, r5, r6, r7, lr}
 801778a:	b08b      	sub	sp, #44	@ 0x2c
 801778c:	468c      	mov	ip, r1
 801778e:	2100      	movs	r1, #0
 8017790:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8017794:	ae01      	add	r6, sp, #4
 8017796:	211f      	movs	r1, #31
 8017798:	fbb0 f7f3 	udiv	r7, r0, r3
 801779c:	fb03 0517 	mls	r5, r3, r7, r0
 80177a0:	b2ec      	uxtb	r4, r5
 80177a2:	2d09      	cmp	r5, #9
 80177a4:	bfd4      	ite	le
 80177a6:	3430      	addle	r4, #48	@ 0x30
 80177a8:	3457      	addgt	r4, #87	@ 0x57
 80177aa:	b2e4      	uxtb	r4, r4
 80177ac:	558c      	strb	r4, [r1, r6]
 80177ae:	4638      	mov	r0, r7
 80177b0:	1e4c      	subs	r4, r1, #1
 80177b2:	b92f      	cbnz	r7, 80177c0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80177b4:	4431      	add	r1, r6
 80177b6:	4660      	mov	r0, ip
 80177b8:	f7ff ffa9 	bl	801770e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80177bc:	b00b      	add	sp, #44	@ 0x2c
 80177be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80177c0:	4621      	mov	r1, r4
 80177c2:	e7e9      	b.n	8017798 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080177c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80177c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177c8:	4691      	mov	r9, r2
 80177ca:	b085      	sub	sp, #20
 80177cc:	6802      	ldr	r2, [r0, #0]
 80177ce:	9201      	str	r2, [sp, #4]
 80177d0:	4688      	mov	r8, r1
 80177d2:	4683      	mov	fp, r0
 80177d4:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 80177d8:	9103      	str	r1, [sp, #12]
 80177da:	4610      	mov	r0, r2
 80177dc:	461c      	mov	r4, r3
 80177de:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 80177e2:	9302      	str	r3, [sp, #8]
 80177e4:	f7ff ff86 	bl	80176f4 <_ZN8touchgfx7Unicode6strlenEPKt>
 80177e8:	f1b8 0f00 	cmp.w	r8, #0
 80177ec:	bf0c      	ite	eq
 80177ee:	4684      	moveq	ip, r0
 80177f0:	f100 0c01 	addne.w	ip, r0, #1
 80177f4:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 80177f8:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 80177fc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80177fe:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8017800:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8017804:	9903      	ldr	r1, [sp, #12]
 8017806:	fa1f fc8c 	uxth.w	ip, ip
 801780a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801780e:	d041      	beq.n	8017894 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017810:	d834      	bhi.n	801787c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017812:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8017816:	d059      	beq.n	80178cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017818:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 801781c:	d03a      	beq.n	8017894 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801781e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8017822:	d034      	beq.n	801788e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017824:	2400      	movs	r4, #0
 8017826:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801782a:	3a01      	subs	r2, #1
 801782c:	b169      	cbz	r1, 801784a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801782e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017830:	458c      	cmp	ip, r1
 8017832:	da09      	bge.n	8017848 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017834:	eba1 010c 	sub.w	r1, r1, ip
 8017838:	b289      	uxth	r1, r1
 801783a:	b933      	cbnz	r3, 801784a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801783c:	2e00      	cmp	r6, #0
 801783e:	d051      	beq.n	80178e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017840:	2800      	cmp	r0, #0
 8017842:	d04f      	beq.n	80178e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017844:	440c      	add	r4, r1
 8017846:	b2a4      	uxth	r4, r4
 8017848:	2100      	movs	r1, #0
 801784a:	682b      	ldr	r3, [r5, #0]
 801784c:	4293      	cmp	r3, r2
 801784e:	da07      	bge.n	8017860 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017850:	f1b8 0f00 	cmp.w	r8, #0
 8017854:	d004      	beq.n	8017860 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017856:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801785a:	682b      	ldr	r3, [r5, #0]
 801785c:	3301      	adds	r3, #1
 801785e:	602b      	str	r3, [r5, #0]
 8017860:	2730      	movs	r7, #48	@ 0x30
 8017862:	2c00      	cmp	r4, #0
 8017864:	d04e      	beq.n	8017904 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017866:	682e      	ldr	r6, [r5, #0]
 8017868:	3c01      	subs	r4, #1
 801786a:	42b2      	cmp	r2, r6
 801786c:	b2a4      	uxth	r4, r4
 801786e:	dd49      	ble.n	8017904 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017870:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017874:	682b      	ldr	r3, [r5, #0]
 8017876:	3301      	adds	r3, #1
 8017878:	602b      	str	r3, [r5, #0]
 801787a:	e7f2      	b.n	8017862 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801787c:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8017880:	d01d      	beq.n	80178be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017882:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8017886:	d002      	beq.n	801788e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017888:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 801788c:	e7c9      	b.n	8017822 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801788e:	4684      	mov	ip, r0
 8017890:	f04f 0800 	mov.w	r8, #0
 8017894:	2c00      	cmp	r4, #0
 8017896:	d0c6      	beq.n	8017826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017898:	b947      	cbnz	r7, 80178ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801789a:	2801      	cmp	r0, #1
 801789c:	d106      	bne.n	80178ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801789e:	8814      	ldrh	r4, [r2, #0]
 80178a0:	2c30      	cmp	r4, #48	@ 0x30
 80178a2:	bf02      	ittt	eq
 80178a4:	3202      	addeq	r2, #2
 80178a6:	f8cb 2000 	streq.w	r2, [fp]
 80178aa:	4638      	moveq	r0, r7
 80178ac:	45bc      	cmp	ip, r7
 80178ae:	da14      	bge.n	80178da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80178b0:	b2bf      	uxth	r7, r7
 80178b2:	eba7 040c 	sub.w	r4, r7, ip
 80178b6:	b2a4      	uxth	r4, r4
 80178b8:	46bc      	mov	ip, r7
 80178ba:	2600      	movs	r6, #0
 80178bc:	e7b3      	b.n	8017826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80178be:	4684      	mov	ip, r0
 80178c0:	b16c      	cbz	r4, 80178de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80178c2:	42b8      	cmp	r0, r7
 80178c4:	dd00      	ble.n	80178c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80178c6:	b2b8      	uxth	r0, r7
 80178c8:	2400      	movs	r4, #0
 80178ca:	e003      	b.n	80178d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80178cc:	f04f 0c01 	mov.w	ip, #1
 80178d0:	2400      	movs	r4, #0
 80178d2:	4660      	mov	r0, ip
 80178d4:	4626      	mov	r6, r4
 80178d6:	46a0      	mov	r8, r4
 80178d8:	e7a5      	b.n	8017826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80178da:	2400      	movs	r4, #0
 80178dc:	e7ed      	b.n	80178ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80178de:	4626      	mov	r6, r4
 80178e0:	46a0      	mov	r8, r4
 80178e2:	e7a0      	b.n	8017826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80178e4:	2900      	cmp	r1, #0
 80178e6:	d0b0      	beq.n	801784a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80178e8:	2720      	movs	r7, #32
 80178ea:	682e      	ldr	r6, [r5, #0]
 80178ec:	2900      	cmp	r1, #0
 80178ee:	d0ac      	beq.n	801784a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80178f0:	3901      	subs	r1, #1
 80178f2:	4296      	cmp	r6, r2
 80178f4:	b289      	uxth	r1, r1
 80178f6:	daa7      	bge.n	8017848 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80178f8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80178fc:	682b      	ldr	r3, [r5, #0]
 80178fe:	3301      	adds	r3, #1
 8017900:	602b      	str	r3, [r5, #0]
 8017902:	e7f2      	b.n	80178ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017904:	b188      	cbz	r0, 801792a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017906:	682b      	ldr	r3, [r5, #0]
 8017908:	3801      	subs	r0, #1
 801790a:	429a      	cmp	r2, r3
 801790c:	b280      	uxth	r0, r0
 801790e:	dd0c      	ble.n	801792a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017910:	f8db 3000 	ldr.w	r3, [fp]
 8017914:	1c9c      	adds	r4, r3, #2
 8017916:	f8cb 4000 	str.w	r4, [fp]
 801791a:	881c      	ldrh	r4, [r3, #0]
 801791c:	682b      	ldr	r3, [r5, #0]
 801791e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017922:	682b      	ldr	r3, [r5, #0]
 8017924:	3301      	adds	r3, #1
 8017926:	602b      	str	r3, [r5, #0]
 8017928:	e7ec      	b.n	8017904 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801792a:	2620      	movs	r6, #32
 801792c:	b151      	cbz	r1, 8017944 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801792e:	6828      	ldr	r0, [r5, #0]
 8017930:	3901      	subs	r1, #1
 8017932:	4282      	cmp	r2, r0
 8017934:	b289      	uxth	r1, r1
 8017936:	dd05      	ble.n	8017944 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017938:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801793c:	682b      	ldr	r3, [r5, #0]
 801793e:	3301      	adds	r3, #1
 8017940:	602b      	str	r3, [r5, #0]
 8017942:	e7f3      	b.n	801792c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017944:	b005      	add	sp, #20
 8017946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801794a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801794a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801794e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017952:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8017956:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 801795a:	2400      	movs	r4, #0
 801795c:	8014      	strh	r4, [r2, #0]
 801795e:	701c      	strb	r4, [r3, #0]
 8017960:	f888 4000 	strb.w	r4, [r8]
 8017964:	f88c 4000 	strb.w	r4, [ip]
 8017968:	f88e 4000 	strb.w	r4, [lr]
 801796c:	703c      	strb	r4, [r7, #0]
 801796e:	6804      	ldr	r4, [r0, #0]
 8017970:	b1a4      	cbz	r4, 801799c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017972:	8824      	ldrh	r4, [r4, #0]
 8017974:	f04f 0901 	mov.w	r9, #1
 8017978:	b314      	cbz	r4, 80179c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801797a:	2c2b      	cmp	r4, #43	@ 0x2b
 801797c:	d001      	beq.n	8017982 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801797e:	2c20      	cmp	r4, #32
 8017980:	d110      	bne.n	80179a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017982:	8014      	strh	r4, [r2, #0]
 8017984:	6804      	ldr	r4, [r0, #0]
 8017986:	b10c      	cbz	r4, 801798c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017988:	3402      	adds	r4, #2
 801798a:	6004      	str	r4, [r0, #0]
 801798c:	680c      	ldr	r4, [r1, #0]
 801798e:	b10c      	cbz	r4, 8017994 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017990:	3401      	adds	r4, #1
 8017992:	600c      	str	r4, [r1, #0]
 8017994:	6804      	ldr	r4, [r0, #0]
 8017996:	b17c      	cbz	r4, 80179b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017998:	8824      	ldrh	r4, [r4, #0]
 801799a:	e7ed      	b.n	8017978 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801799c:	680c      	ldr	r4, [r1, #0]
 801799e:	b17c      	cbz	r4, 80179c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80179a0:	7824      	ldrb	r4, [r4, #0]
 80179a2:	e7e7      	b.n	8017974 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80179a4:	2c2d      	cmp	r4, #45	@ 0x2d
 80179a6:	d102      	bne.n	80179ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80179a8:	f883 9000 	strb.w	r9, [r3]
 80179ac:	e7ea      	b.n	8017984 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80179ae:	2c23      	cmp	r4, #35	@ 0x23
 80179b0:	d107      	bne.n	80179c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80179b2:	f888 9000 	strb.w	r9, [r8]
 80179b6:	e7e5      	b.n	8017984 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80179b8:	680c      	ldr	r4, [r1, #0]
 80179ba:	b10c      	cbz	r4, 80179c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80179bc:	7824      	ldrb	r4, [r4, #0]
 80179be:	e7db      	b.n	8017978 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80179c0:	2400      	movs	r4, #0
 80179c2:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 80179c6:	2b09      	cmp	r3, #9
 80179c8:	d901      	bls.n	80179ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80179ca:	2c2a      	cmp	r4, #42	@ 0x2a
 80179cc:	d122      	bne.n	8017a14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80179ce:	2301      	movs	r3, #1
 80179d0:	2c30      	cmp	r4, #48	@ 0x30
 80179d2:	f88e 3000 	strb.w	r3, [lr]
 80179d6:	d10d      	bne.n	80179f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80179d8:	f88c 3000 	strb.w	r3, [ip]
 80179dc:	6803      	ldr	r3, [r0, #0]
 80179de:	b10b      	cbz	r3, 80179e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80179e0:	3302      	adds	r3, #2
 80179e2:	6003      	str	r3, [r0, #0]
 80179e4:	680b      	ldr	r3, [r1, #0]
 80179e6:	b10b      	cbz	r3, 80179ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80179e8:	3301      	adds	r3, #1
 80179ea:	600b      	str	r3, [r1, #0]
 80179ec:	6803      	ldr	r3, [r0, #0]
 80179ee:	2b00      	cmp	r3, #0
 80179f0:	d02f      	beq.n	8017a52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80179f2:	881c      	ldrh	r4, [r3, #0]
 80179f4:	2c2a      	cmp	r4, #42	@ 0x2a
 80179f6:	d135      	bne.n	8017a64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80179f8:	f04f 33ff 	mov.w	r3, #4294967295
 80179fc:	6033      	str	r3, [r6, #0]
 80179fe:	6803      	ldr	r3, [r0, #0]
 8017a00:	b10b      	cbz	r3, 8017a06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017a02:	3302      	adds	r3, #2
 8017a04:	6003      	str	r3, [r0, #0]
 8017a06:	680b      	ldr	r3, [r1, #0]
 8017a08:	b10b      	cbz	r3, 8017a0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017a0a:	3301      	adds	r3, #1
 8017a0c:	600b      	str	r3, [r1, #0]
 8017a0e:	6803      	ldr	r3, [r0, #0]
 8017a10:	b31b      	cbz	r3, 8017a5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017a12:	881c      	ldrh	r4, [r3, #0]
 8017a14:	2c2e      	cmp	r4, #46	@ 0x2e
 8017a16:	d11a      	bne.n	8017a4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017a18:	2301      	movs	r3, #1
 8017a1a:	703b      	strb	r3, [r7, #0]
 8017a1c:	6803      	ldr	r3, [r0, #0]
 8017a1e:	b10b      	cbz	r3, 8017a24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017a20:	3302      	adds	r3, #2
 8017a22:	6003      	str	r3, [r0, #0]
 8017a24:	680b      	ldr	r3, [r1, #0]
 8017a26:	b10b      	cbz	r3, 8017a2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017a28:	3301      	adds	r3, #1
 8017a2a:	600b      	str	r3, [r1, #0]
 8017a2c:	6803      	ldr	r3, [r0, #0]
 8017a2e:	2b00      	cmp	r3, #0
 8017a30:	d036      	beq.n	8017aa0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017a32:	881b      	ldrh	r3, [r3, #0]
 8017a34:	2b2a      	cmp	r3, #42	@ 0x2a
 8017a36:	d137      	bne.n	8017aa8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017a38:	f04f 33ff 	mov.w	r3, #4294967295
 8017a3c:	602b      	str	r3, [r5, #0]
 8017a3e:	6803      	ldr	r3, [r0, #0]
 8017a40:	b10b      	cbz	r3, 8017a46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017a42:	3302      	adds	r3, #2
 8017a44:	6003      	str	r3, [r0, #0]
 8017a46:	680b      	ldr	r3, [r1, #0]
 8017a48:	b10b      	cbz	r3, 8017a4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017a4a:	3301      	adds	r3, #1
 8017a4c:	600b      	str	r3, [r1, #0]
 8017a4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017a52:	680c      	ldr	r4, [r1, #0]
 8017a54:	b134      	cbz	r4, 8017a64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017a56:	7824      	ldrb	r4, [r4, #0]
 8017a58:	e7cc      	b.n	80179f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017a5a:	680b      	ldr	r3, [r1, #0]
 8017a5c:	2b00      	cmp	r3, #0
 8017a5e:	d0f6      	beq.n	8017a4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017a60:	781c      	ldrb	r4, [r3, #0]
 8017a62:	e7d7      	b.n	8017a14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017a64:	2300      	movs	r3, #0
 8017a66:	6033      	str	r3, [r6, #0]
 8017a68:	220a      	movs	r2, #10
 8017a6a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8017a6e:	fa1f f38c 	uxth.w	r3, ip
 8017a72:	2b09      	cmp	r3, #9
 8017a74:	d8ce      	bhi.n	8017a14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017a76:	6833      	ldr	r3, [r6, #0]
 8017a78:	fb02 c303 	mla	r3, r2, r3, ip
 8017a7c:	6033      	str	r3, [r6, #0]
 8017a7e:	6803      	ldr	r3, [r0, #0]
 8017a80:	b10b      	cbz	r3, 8017a86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017a82:	3302      	adds	r3, #2
 8017a84:	6003      	str	r3, [r0, #0]
 8017a86:	680b      	ldr	r3, [r1, #0]
 8017a88:	b10b      	cbz	r3, 8017a8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017a8a:	3301      	adds	r3, #1
 8017a8c:	600b      	str	r3, [r1, #0]
 8017a8e:	6803      	ldr	r3, [r0, #0]
 8017a90:	b10b      	cbz	r3, 8017a96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017a92:	881c      	ldrh	r4, [r3, #0]
 8017a94:	e7e9      	b.n	8017a6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017a96:	680c      	ldr	r4, [r1, #0]
 8017a98:	2c00      	cmp	r4, #0
 8017a9a:	d0e6      	beq.n	8017a6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017a9c:	7824      	ldrb	r4, [r4, #0]
 8017a9e:	e7e4      	b.n	8017a6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017aa0:	680b      	ldr	r3, [r1, #0]
 8017aa2:	b10b      	cbz	r3, 8017aa8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017aa4:	781b      	ldrb	r3, [r3, #0]
 8017aa6:	e7c5      	b.n	8017a34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017aa8:	2200      	movs	r2, #0
 8017aaa:	602a      	str	r2, [r5, #0]
 8017aac:	240a      	movs	r4, #10
 8017aae:	3b30      	subs	r3, #48	@ 0x30
 8017ab0:	b29e      	uxth	r6, r3
 8017ab2:	2e09      	cmp	r6, #9
 8017ab4:	682a      	ldr	r2, [r5, #0]
 8017ab6:	d813      	bhi.n	8017ae0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017ab8:	fb04 3302 	mla	r3, r4, r2, r3
 8017abc:	602b      	str	r3, [r5, #0]
 8017abe:	6803      	ldr	r3, [r0, #0]
 8017ac0:	b10b      	cbz	r3, 8017ac6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017ac2:	3302      	adds	r3, #2
 8017ac4:	6003      	str	r3, [r0, #0]
 8017ac6:	680b      	ldr	r3, [r1, #0]
 8017ac8:	b10b      	cbz	r3, 8017ace <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017aca:	3301      	adds	r3, #1
 8017acc:	600b      	str	r3, [r1, #0]
 8017ace:	6803      	ldr	r3, [r0, #0]
 8017ad0:	b10b      	cbz	r3, 8017ad6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017ad2:	881b      	ldrh	r3, [r3, #0]
 8017ad4:	e7eb      	b.n	8017aae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017ad6:	680b      	ldr	r3, [r1, #0]
 8017ad8:	2b00      	cmp	r3, #0
 8017ada:	d0e8      	beq.n	8017aae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017adc:	781b      	ldrb	r3, [r3, #0]
 8017ade:	e7e6      	b.n	8017aae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017ae0:	2a06      	cmp	r2, #6
 8017ae2:	bfa8      	it	ge
 8017ae4:	2206      	movge	r2, #6
 8017ae6:	602a      	str	r2, [r5, #0]
 8017ae8:	e7b1      	b.n	8017a4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017aea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017aea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017aee:	b0a3      	sub	sp, #140	@ 0x8c
 8017af0:	2600      	movs	r6, #0
 8017af2:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8017af6:	4607      	mov	r7, r0
 8017af8:	4688      	mov	r8, r1
 8017afa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017afe:	4631      	mov	r1, r6
 8017b00:	2242      	movs	r2, #66	@ 0x42
 8017b02:	4648      	mov	r0, r9
 8017b04:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8017b06:	960d      	str	r6, [sp, #52]	@ 0x34
 8017b08:	f010 fbb9 	bl	802827e <memset>
 8017b0c:	b15f      	cbz	r7, 8017b26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017b0e:	f108 3aff 	add.w	sl, r8, #4294967295
 8017b12:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017b14:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017b16:	b152      	cbz	r2, 8017b2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017b18:	8812      	ldrh	r2, [r2, #0]
 8017b1a:	b10a      	cbz	r2, 8017b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017b1c:	459a      	cmp	sl, r3
 8017b1e:	dc2e      	bgt.n	8017b7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017b20:	2200      	movs	r2, #0
 8017b22:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017b26:	4638      	mov	r0, r7
 8017b28:	b023      	add	sp, #140	@ 0x8c
 8017b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b2e:	9a08      	ldr	r2, [sp, #32]
 8017b30:	2a00      	cmp	r2, #0
 8017b32:	d0f5      	beq.n	8017b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017b34:	7812      	ldrb	r2, [r2, #0]
 8017b36:	e7f0      	b.n	8017b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017b38:	2d00      	cmp	r5, #0
 8017b3a:	d0ea      	beq.n	8017b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017b3c:	782a      	ldrb	r2, [r5, #0]
 8017b3e:	b142      	cbz	r2, 8017b52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017b40:	2a25      	cmp	r2, #37	@ 0x25
 8017b42:	d001      	beq.n	8017b48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017b44:	459a      	cmp	sl, r3
 8017b46:	dc08      	bgt.n	8017b5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017b48:	f1bb 0f00 	cmp.w	fp, #0
 8017b4c:	d121      	bne.n	8017b92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017b4e:	2d00      	cmp	r5, #0
 8017b50:	d0df      	beq.n	8017b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017b52:	782a      	ldrb	r2, [r5, #0]
 8017b54:	f04f 0b00 	mov.w	fp, #0
 8017b58:	e01d      	b.n	8017b96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017b5a:	f1bb 0f00 	cmp.w	fp, #0
 8017b5e:	d078      	beq.n	8017c52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017b60:	f8bb 2000 	ldrh.w	r2, [fp]
 8017b64:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017b68:	f1bb 0f00 	cmp.w	fp, #0
 8017b6c:	d002      	beq.n	8017b74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017b6e:	f10b 0202 	add.w	r2, fp, #2
 8017b72:	9209      	str	r2, [sp, #36]	@ 0x24
 8017b74:	b10d      	cbz	r5, 8017b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017b76:	3501      	adds	r5, #1
 8017b78:	9508      	str	r5, [sp, #32]
 8017b7a:	3301      	adds	r3, #1
 8017b7c:	930d      	str	r3, [sp, #52]	@ 0x34
 8017b7e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017b82:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017b84:	f1bb 0f00 	cmp.w	fp, #0
 8017b88:	d0d6      	beq.n	8017b38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017b8a:	f8bb 2000 	ldrh.w	r2, [fp]
 8017b8e:	2a00      	cmp	r2, #0
 8017b90:	d1d6      	bne.n	8017b40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017b92:	f8bb 2000 	ldrh.w	r2, [fp]
 8017b96:	2a00      	cmp	r2, #0
 8017b98:	d0bb      	beq.n	8017b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017b9a:	459a      	cmp	sl, r3
 8017b9c:	ddb9      	ble.n	8017b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017b9e:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8017ba2:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8017ba6:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8017baa:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8017bae:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8017bb2:	960e      	str	r6, [sp, #56]	@ 0x38
 8017bb4:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8017bb8:	960f      	str	r6, [sp, #60]	@ 0x3c
 8017bba:	f1bb 0f00 	cmp.w	fp, #0
 8017bbe:	d002      	beq.n	8017bc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017bc0:	f10b 0302 	add.w	r3, fp, #2
 8017bc4:	9309      	str	r3, [sp, #36]	@ 0x24
 8017bc6:	b10d      	cbz	r5, 8017bcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017bc8:	1c6b      	adds	r3, r5, #1
 8017bca:	9308      	str	r3, [sp, #32]
 8017bcc:	ab0f      	add	r3, sp, #60	@ 0x3c
 8017bce:	9305      	str	r3, [sp, #20]
 8017bd0:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8017bd4:	9304      	str	r3, [sp, #16]
 8017bd6:	ab0e      	add	r3, sp, #56	@ 0x38
 8017bd8:	9303      	str	r3, [sp, #12]
 8017bda:	ab0c      	add	r3, sp, #48	@ 0x30
 8017bdc:	9302      	str	r3, [sp, #8]
 8017bde:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8017be2:	9301      	str	r3, [sp, #4]
 8017be4:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8017be8:	9300      	str	r3, [sp, #0]
 8017bea:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8017bee:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8017bf2:	a908      	add	r1, sp, #32
 8017bf4:	a809      	add	r0, sp, #36	@ 0x24
 8017bf6:	f7ff fea8 	bl	801794a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017bfa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017bfc:	2b00      	cmp	r3, #0
 8017bfe:	bfbe      	ittt	lt
 8017c00:	6823      	ldrlt	r3, [r4, #0]
 8017c02:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017c06:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8017c08:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017c0a:	bfb8      	it	lt
 8017c0c:	3404      	addlt	r4, #4
 8017c0e:	2b00      	cmp	r3, #0
 8017c10:	bfb8      	it	lt
 8017c12:	6823      	ldrlt	r3, [r4, #0]
 8017c14:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017c18:	bfbe      	ittt	lt
 8017c1a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017c1e:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8017c20:	3404      	addlt	r4, #4
 8017c22:	b1d9      	cbz	r1, 8017c5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017c24:	880b      	ldrh	r3, [r1, #0]
 8017c26:	2b69      	cmp	r3, #105	@ 0x69
 8017c28:	d01f      	beq.n	8017c6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c2a:	d82f      	bhi.n	8017c8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017c2c:	2b58      	cmp	r3, #88	@ 0x58
 8017c2e:	d01c      	beq.n	8017c6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c30:	d818      	bhi.n	8017c64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017c32:	2b25      	cmp	r3, #37	@ 0x25
 8017c34:	d034      	beq.n	8017ca0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017c36:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017c3a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017c3c:	f1bb 0f00 	cmp.w	fp, #0
 8017c40:	f000 80b8 	beq.w	8017db4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017c44:	f8bb 5000 	ldrh.w	r5, [fp]
 8017c48:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017c4c:	3301      	adds	r3, #1
 8017c4e:	930d      	str	r3, [sp, #52]	@ 0x34
 8017c50:	e029      	b.n	8017ca6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017c52:	b10d      	cbz	r5, 8017c58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017c54:	782a      	ldrb	r2, [r5, #0]
 8017c56:	e785      	b.n	8017b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017c58:	462a      	mov	r2, r5
 8017c5a:	e783      	b.n	8017b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017c5c:	2a00      	cmp	r2, #0
 8017c5e:	d0ea      	beq.n	8017c36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017c60:	7813      	ldrb	r3, [r2, #0]
 8017c62:	e7e0      	b.n	8017c26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8017c64:	3b63      	subs	r3, #99	@ 0x63
 8017c66:	2b01      	cmp	r3, #1
 8017c68:	d8e5      	bhi.n	8017c36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017c6a:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8017c6e:	b329      	cbz	r1, 8017cbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8017c70:	880b      	ldrh	r3, [r1, #0]
 8017c72:	2b69      	cmp	r3, #105	@ 0x69
 8017c74:	d063      	beq.n	8017d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017c76:	d825      	bhi.n	8017cc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8017c78:	2b63      	cmp	r3, #99	@ 0x63
 8017c7a:	d038      	beq.n	8017cee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8017c7c:	2b64      	cmp	r3, #100	@ 0x64
 8017c7e:	d05e      	beq.n	8017d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017c80:	2b58      	cmp	r3, #88	@ 0x58
 8017c82:	d07b      	beq.n	8017d7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8017c84:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8017c88:	4625      	mov	r5, r4
 8017c8a:	e036      	b.n	8017cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017c8c:	2b73      	cmp	r3, #115	@ 0x73
 8017c8e:	d0ec      	beq.n	8017c6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c90:	d802      	bhi.n	8017c98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8017c92:	2b6f      	cmp	r3, #111	@ 0x6f
 8017c94:	d1cf      	bne.n	8017c36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017c96:	e7e8      	b.n	8017c6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c98:	2b75      	cmp	r3, #117	@ 0x75
 8017c9a:	d0e6      	beq.n	8017c6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c9c:	2b78      	cmp	r3, #120	@ 0x78
 8017c9e:	e7f9      	b.n	8017c94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8017ca0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017ca2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8017ca6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017ca8:	b10b      	cbz	r3, 8017cae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8017caa:	3302      	adds	r3, #2
 8017cac:	9309      	str	r3, [sp, #36]	@ 0x24
 8017cae:	9b08      	ldr	r3, [sp, #32]
 8017cb0:	2b00      	cmp	r3, #0
 8017cb2:	f43f af2e 	beq.w	8017b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017cb6:	3301      	adds	r3, #1
 8017cb8:	9308      	str	r3, [sp, #32]
 8017cba:	e72a      	b.n	8017b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017cbc:	2a00      	cmp	r2, #0
 8017cbe:	d0e1      	beq.n	8017c84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017cc0:	7813      	ldrb	r3, [r2, #0]
 8017cc2:	e7d6      	b.n	8017c72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8017cc4:	2b73      	cmp	r3, #115	@ 0x73
 8017cc6:	d036      	beq.n	8017d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8017cc8:	d807      	bhi.n	8017cda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8017cca:	2b6f      	cmp	r3, #111	@ 0x6f
 8017ccc:	d1da      	bne.n	8017c84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017cce:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017cd0:	1d25      	adds	r5, r4, #4
 8017cd2:	eba8 0202 	sub.w	r2, r8, r2
 8017cd6:	2308      	movs	r3, #8
 8017cd8:	e04a      	b.n	8017d70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017cda:	2b75      	cmp	r3, #117	@ 0x75
 8017cdc:	d043      	beq.n	8017d66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8017cde:	2b78      	cmp	r3, #120	@ 0x78
 8017ce0:	d1d0      	bne.n	8017c84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017ce2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017ce4:	1d25      	adds	r5, r4, #4
 8017ce6:	eba8 0202 	sub.w	r2, r8, r2
 8017cea:	2310      	movs	r3, #16
 8017cec:	e040      	b.n	8017d70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017cee:	6823      	ldr	r3, [r4, #0]
 8017cf0:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8017cf4:	1d25      	adds	r5, r4, #4
 8017cf6:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8017cfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017cfc:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8017d00:	2b00      	cmp	r3, #0
 8017d02:	d052      	beq.n	8017daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8017d04:	881a      	ldrh	r2, [r3, #0]
 8017d06:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8017d0a:	a80d      	add	r0, sp, #52	@ 0x34
 8017d0c:	9005      	str	r0, [sp, #20]
 8017d0e:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8017d12:	9004      	str	r0, [sp, #16]
 8017d14:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8017d16:	9003      	str	r0, [sp, #12]
 8017d18:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8017d1c:	9002      	str	r0, [sp, #8]
 8017d1e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8017d20:	9001      	str	r0, [sp, #4]
 8017d22:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8017d26:	9000      	str	r0, [sp, #0]
 8017d28:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8017d2c:	a810      	add	r0, sp, #64	@ 0x40
 8017d2e:	f7ff fd49 	bl	80177c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8017d32:	462c      	mov	r4, r5
 8017d34:	e7b7      	b.n	8017ca6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017d36:	6823      	ldr	r3, [r4, #0]
 8017d38:	1d25      	adds	r5, r4, #4
 8017d3a:	9310      	str	r3, [sp, #64]	@ 0x40
 8017d3c:	e7dd      	b.n	8017cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d3e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017d40:	6820      	ldr	r0, [r4, #0]
 8017d42:	eba8 0202 	sub.w	r2, r8, r2
 8017d46:	230a      	movs	r3, #10
 8017d48:	b292      	uxth	r2, r2
 8017d4a:	4649      	mov	r1, r9
 8017d4c:	f7ff fcf0 	bl	8017730 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017d50:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8017d54:	2b2d      	cmp	r3, #45	@ 0x2d
 8017d56:	f104 0504 	add.w	r5, r4, #4
 8017d5a:	d1ce      	bne.n	8017cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d5c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017d60:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017d62:	3302      	adds	r3, #2
 8017d64:	e7e9      	b.n	8017d3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8017d66:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017d68:	1d25      	adds	r5, r4, #4
 8017d6a:	eba8 0202 	sub.w	r2, r8, r2
 8017d6e:	230a      	movs	r3, #10
 8017d70:	b292      	uxth	r2, r2
 8017d72:	4649      	mov	r1, r9
 8017d74:	6820      	ldr	r0, [r4, #0]
 8017d76:	f7ff fd07 	bl	8017788 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017d7a:	e7be      	b.n	8017cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d7c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017d7e:	6820      	ldr	r0, [r4, #0]
 8017d80:	eba8 0202 	sub.w	r2, r8, r2
 8017d84:	b292      	uxth	r2, r2
 8017d86:	2310      	movs	r3, #16
 8017d88:	4649      	mov	r1, r9
 8017d8a:	f7ff fcfd 	bl	8017788 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017d8e:	1d25      	adds	r5, r4, #4
 8017d90:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8017d94:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8017d98:	2b00      	cmp	r3, #0
 8017d9a:	d0ae      	beq.n	8017cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d9c:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8017da0:	2919      	cmp	r1, #25
 8017da2:	d8f7      	bhi.n	8017d94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017da4:	3b20      	subs	r3, #32
 8017da6:	8013      	strh	r3, [r2, #0]
 8017da8:	e7f4      	b.n	8017d94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017daa:	9a08      	ldr	r2, [sp, #32]
 8017dac:	2a00      	cmp	r2, #0
 8017dae:	d0aa      	beq.n	8017d06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017db0:	7812      	ldrb	r2, [r2, #0]
 8017db2:	e7a8      	b.n	8017d06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017db4:	2d00      	cmp	r5, #0
 8017db6:	f43f af47 	beq.w	8017c48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8017dba:	782d      	ldrb	r5, [r5, #0]
 8017dbc:	e744      	b.n	8017c48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08017dbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8017dbe:	b507      	push	{r0, r1, r2, lr}
 8017dc0:	9300      	str	r3, [sp, #0]
 8017dc2:	4613      	mov	r3, r2
 8017dc4:	2200      	movs	r2, #0
 8017dc6:	f7ff fe90 	bl	8017aea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8017dca:	b003      	add	sp, #12
 8017dcc:	f85d fb04 	ldr.w	pc, [sp], #4

08017dd0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8017dd0:	b40c      	push	{r2, r3}
 8017dd2:	b507      	push	{r0, r1, r2, lr}
 8017dd4:	ab04      	add	r3, sp, #16
 8017dd6:	f853 2b04 	ldr.w	r2, [r3], #4
 8017dda:	9301      	str	r3, [sp, #4]
 8017ddc:	f7ff ffef 	bl	8017dbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8017de0:	b003      	add	sp, #12
 8017de2:	f85d eb04 	ldr.w	lr, [sp], #4
 8017de6:	b002      	add	sp, #8
 8017de8:	4770      	bx	lr
	...

08017dec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8017dec:	4b01      	ldr	r3, [pc, #4]	@ (8017df4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8017dee:	6018      	str	r0, [r3, #0]
 8017df0:	4770      	bx	lr
 8017df2:	bf00      	nop
 8017df4:	20013fc8 	.word	0x20013fc8

08017df8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8017df8:	4b06      	ldr	r3, [pc, #24]	@ (8017e14 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8017dfa:	881a      	ldrh	r2, [r3, #0]
 8017dfc:	4282      	cmp	r2, r0
 8017dfe:	d807      	bhi.n	8017e10 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8017e00:	4b05      	ldr	r3, [pc, #20]	@ (8017e18 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8017e02:	881b      	ldrh	r3, [r3, #0]
 8017e04:	4413      	add	r3, r2
 8017e06:	4298      	cmp	r0, r3
 8017e08:	bfac      	ite	ge
 8017e0a:	2000      	movge	r0, #0
 8017e0c:	2001      	movlt	r0, #1
 8017e0e:	4770      	bx	lr
 8017e10:	2000      	movs	r0, #0
 8017e12:	4770      	bx	lr
 8017e14:	20013fe8 	.word	0x20013fe8
 8017e18:	20013fec 	.word	0x20013fec

08017e1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8017e1c:	b508      	push	{r3, lr}
 8017e1e:	4601      	mov	r1, r0
 8017e20:	f7ff ffea 	bl	8017df8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8017e24:	b118      	cbz	r0, 8017e2e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8017e26:	4b02      	ldr	r3, [pc, #8]	@ (8017e30 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8017e28:	681b      	ldr	r3, [r3, #0]
 8017e2a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8017e2e:	bd08      	pop	{r3, pc}
 8017e30:	20013fcc 	.word	0x20013fcc

08017e34 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8017e34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017e36:	4c24      	ldr	r4, [pc, #144]	@ (8017ec8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8017e38:	6823      	ldr	r3, [r4, #0]
 8017e3a:	2b00      	cmp	r3, #0
 8017e3c:	d042      	beq.n	8017ec4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017e3e:	4a23      	ldr	r2, [pc, #140]	@ (8017ecc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8017e40:	4d23      	ldr	r5, [pc, #140]	@ (8017ed0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8017e42:	8811      	ldrh	r1, [r2, #0]
 8017e44:	f8b5 c000 	ldrh.w	ip, [r5]
 8017e48:	4822      	ldr	r0, [pc, #136]	@ (8017ed4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8017e4a:	4461      	add	r1, ip
 8017e4c:	1c4a      	adds	r2, r1, #1
 8017e4e:	f022 0201 	bic.w	r2, r2, #1
 8017e52:	008f      	lsls	r7, r1, #2
 8017e54:	0412      	lsls	r2, r2, #16
 8017e56:	19de      	adds	r6, r3, r7
 8017e58:	0c12      	lsrs	r2, r2, #16
 8017e5a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8017e5e:	6006      	str	r6, [r0, #0]
 8017e60:	4e1d      	ldr	r6, [pc, #116]	@ (8017ed8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8017e62:	19da      	adds	r2, r3, r7
 8017e64:	6032      	str	r2, [r6, #0]
 8017e66:	220e      	movs	r2, #14
 8017e68:	fb02 f20c 	mul.w	r2, r2, ip
 8017e6c:	3203      	adds	r2, #3
 8017e6e:	f022 0203 	bic.w	r2, r2, #3
 8017e72:	443a      	add	r2, r7
 8017e74:	4f19      	ldr	r7, [pc, #100]	@ (8017edc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8017e76:	4413      	add	r3, r2
 8017e78:	603b      	str	r3, [r7, #0]
 8017e7a:	4f19      	ldr	r7, [pc, #100]	@ (8017ee0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8017e7c:	2300      	movs	r3, #0
 8017e7e:	803b      	strh	r3, [r7, #0]
 8017e80:	4f18      	ldr	r7, [pc, #96]	@ (8017ee4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8017e82:	683f      	ldr	r7, [r7, #0]
 8017e84:	1aba      	subs	r2, r7, r2
 8017e86:	4f18      	ldr	r7, [pc, #96]	@ (8017ee8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8017e88:	603a      	str	r2, [r7, #0]
 8017e8a:	4a18      	ldr	r2, [pc, #96]	@ (8017eec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8017e8c:	469c      	mov	ip, r3
 8017e8e:	8013      	strh	r3, [r2, #0]
 8017e90:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8017e94:	428b      	cmp	r3, r1
 8017e96:	d10d      	bne.n	8017eb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8017e98:	882d      	ldrh	r5, [r5, #0]
 8017e9a:	6830      	ldr	r0, [r6, #0]
 8017e9c:	2300      	movs	r3, #0
 8017e9e:	240e      	movs	r4, #14
 8017ea0:	429d      	cmp	r5, r3
 8017ea2:	d90f      	bls.n	8017ec4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017ea4:	fb04 0203 	mla	r2, r4, r3, r0
 8017ea8:	3301      	adds	r3, #1
 8017eaa:	7b11      	ldrb	r1, [r2, #12]
 8017eac:	f36f 1145 	bfc	r1, #5, #1
 8017eb0:	7311      	strb	r1, [r2, #12]
 8017eb2:	e7f5      	b.n	8017ea0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8017eb4:	6822      	ldr	r2, [r4, #0]
 8017eb6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8017eba:	6802      	ldr	r2, [r0, #0]
 8017ebc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8017ec0:	3301      	adds	r3, #1
 8017ec2:	e7e7      	b.n	8017e94 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8017ec4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017ec6:	bf00      	nop
 8017ec8:	20013fcc 	.word	0x20013fcc
 8017ecc:	20013fe8 	.word	0x20013fe8
 8017ed0:	20013fec 	.word	0x20013fec
 8017ed4:	20013fe0 	.word	0x20013fe0
 8017ed8:	20013fd0 	.word	0x20013fd0
 8017edc:	20013fd8 	.word	0x20013fd8
 8017ee0:	20013fea 	.word	0x20013fea
 8017ee4:	20013fd4 	.word	0x20013fd4
 8017ee8:	20013fe4 	.word	0x20013fe4
 8017eec:	20013fdc 	.word	0x20013fdc

08017ef0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8017ef0:	4b06      	ldr	r3, [pc, #24]	@ (8017f0c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8017ef2:	681b      	ldr	r3, [r3, #0]
 8017ef4:	b943      	cbnz	r3, 8017f08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017ef6:	b139      	cbz	r1, 8017f08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017ef8:	4b05      	ldr	r3, [pc, #20]	@ (8017f10 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8017efa:	801a      	strh	r2, [r3, #0]
 8017efc:	4b05      	ldr	r3, [pc, #20]	@ (8017f14 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8017efe:	6019      	str	r1, [r3, #0]
 8017f00:	4b05      	ldr	r3, [pc, #20]	@ (8017f18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8017f02:	6018      	str	r0, [r3, #0]
 8017f04:	f7ff bf96 	b.w	8017e34 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8017f08:	4770      	bx	lr
 8017f0a:	bf00      	nop
 8017f0c:	20013fd8 	.word	0x20013fd8
 8017f10:	20013fec 	.word	0x20013fec
 8017f14:	20013fd4 	.word	0x20013fd4
 8017f18:	20013fcc 	.word	0x20013fcc

08017f1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8017f1c:	b470      	push	{r4, r5, r6}
 8017f1e:	4c07      	ldr	r4, [pc, #28]	@ (8017f3c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8017f20:	6826      	ldr	r6, [r4, #0]
 8017f22:	4605      	mov	r5, r0
 8017f24:	4610      	mov	r0, r2
 8017f26:	9a03      	ldr	r2, [sp, #12]
 8017f28:	b936      	cbnz	r6, 8017f38 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8017f2a:	6025      	str	r5, [r4, #0]
 8017f2c:	4c04      	ldr	r4, [pc, #16]	@ (8017f40 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8017f2e:	8021      	strh	r1, [r4, #0]
 8017f30:	bc70      	pop	{r4, r5, r6}
 8017f32:	4619      	mov	r1, r3
 8017f34:	f7ff bfdc 	b.w	8017ef0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8017f38:	bc70      	pop	{r4, r5, r6}
 8017f3a:	4770      	bx	lr
 8017f3c:	20013ff0 	.word	0x20013ff0
 8017f40:	20013fe8 	.word	0x20013fe8

08017f44 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8017f44:	4a12      	ldr	r2, [pc, #72]	@ (8017f90 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8017f46:	8803      	ldrh	r3, [r0, #0]
 8017f48:	8812      	ldrh	r2, [r2, #0]
 8017f4a:	4293      	cmp	r3, r2
 8017f4c:	d207      	bcs.n	8017f5e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8017f4e:	4a11      	ldr	r2, [pc, #68]	@ (8017f94 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8017f50:	6812      	ldr	r2, [r2, #0]
 8017f52:	2114      	movs	r1, #20
 8017f54:	fb01 2303 	mla	r3, r1, r3, r2
 8017f58:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8017f5c:	4770      	bx	lr
 8017f5e:	490e      	ldr	r1, [pc, #56]	@ (8017f98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8017f60:	8809      	ldrh	r1, [r1, #0]
 8017f62:	4411      	add	r1, r2
 8017f64:	428b      	cmp	r3, r1
 8017f66:	da04      	bge.n	8017f72 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8017f68:	1a9b      	subs	r3, r3, r2
 8017f6a:	4a0c      	ldr	r2, [pc, #48]	@ (8017f9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8017f6c:	210e      	movs	r1, #14
 8017f6e:	6812      	ldr	r2, [r2, #0]
 8017f70:	e7f0      	b.n	8017f54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8017f72:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017f76:	4293      	cmp	r3, r2
 8017f78:	d108      	bne.n	8017f8c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8017f7a:	4b09      	ldr	r3, [pc, #36]	@ (8017fa0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8017f7c:	781b      	ldrb	r3, [r3, #0]
 8017f7e:	b91b      	cbnz	r3, 8017f88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8017f80:	4b08      	ldr	r3, [pc, #32]	@ (8017fa4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8017f82:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017f86:	4770      	bx	lr
 8017f88:	4b07      	ldr	r3, [pc, #28]	@ (8017fa8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8017f8a:	e7fa      	b.n	8017f82 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8017f8c:	2000      	movs	r0, #0
 8017f8e:	4770      	bx	lr
 8017f90:	20013fe8 	.word	0x20013fe8
 8017f94:	20013ff0 	.word	0x20013ff0
 8017f98:	20013fec 	.word	0x20013fec
 8017f9c:	20013fd0 	.word	0x20013fd0
 8017fa0:	20013f58 	.word	0x20013f58
 8017fa4:	20013f5a 	.word	0x20013f5a
 8017fa8:	20013f5c 	.word	0x20013f5c

08017fac <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8017fac:	4a12      	ldr	r2, [pc, #72]	@ (8017ff8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8017fae:	8803      	ldrh	r3, [r0, #0]
 8017fb0:	8812      	ldrh	r2, [r2, #0]
 8017fb2:	4293      	cmp	r3, r2
 8017fb4:	d207      	bcs.n	8017fc6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8017fb6:	4a11      	ldr	r2, [pc, #68]	@ (8017ffc <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8017fb8:	6812      	ldr	r2, [r2, #0]
 8017fba:	2114      	movs	r1, #20
 8017fbc:	fb01 2303 	mla	r3, r1, r3, r2
 8017fc0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8017fc4:	4770      	bx	lr
 8017fc6:	490e      	ldr	r1, [pc, #56]	@ (8018000 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8017fc8:	8809      	ldrh	r1, [r1, #0]
 8017fca:	4411      	add	r1, r2
 8017fcc:	428b      	cmp	r3, r1
 8017fce:	da04      	bge.n	8017fda <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8017fd0:	1a9b      	subs	r3, r3, r2
 8017fd2:	4a0c      	ldr	r2, [pc, #48]	@ (8018004 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8017fd4:	210e      	movs	r1, #14
 8017fd6:	6812      	ldr	r2, [r2, #0]
 8017fd8:	e7f0      	b.n	8017fbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8017fda:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017fde:	4293      	cmp	r3, r2
 8017fe0:	d108      	bne.n	8017ff4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8017fe2:	4b09      	ldr	r3, [pc, #36]	@ (8018008 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8017fe4:	781b      	ldrb	r3, [r3, #0]
 8017fe6:	b91b      	cbnz	r3, 8017ff0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8017fe8:	4b08      	ldr	r3, [pc, #32]	@ (801800c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8017fea:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017fee:	4770      	bx	lr
 8017ff0:	4b07      	ldr	r3, [pc, #28]	@ (8018010 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8017ff2:	e7fa      	b.n	8017fea <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8017ff4:	2000      	movs	r0, #0
 8017ff6:	4770      	bx	lr
 8017ff8:	20013fe8 	.word	0x20013fe8
 8017ffc:	20013ff0 	.word	0x20013ff0
 8018000:	20013fec 	.word	0x20013fec
 8018004:	20013fd0 	.word	0x20013fd0
 8018008:	20013f58 	.word	0x20013f58
 801800c:	20013f5c 	.word	0x20013f5c
 8018010:	20013f5a 	.word	0x20013f5a

08018014 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018014:	b530      	push	{r4, r5, lr}
 8018016:	4a22      	ldr	r2, [pc, #136]	@ (80180a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8018018:	880b      	ldrh	r3, [r1, #0]
 801801a:	8812      	ldrh	r2, [r2, #0]
 801801c:	4293      	cmp	r3, r2
 801801e:	d213      	bcs.n	8018048 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018020:	4a20      	ldr	r2, [pc, #128]	@ (80180a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8018022:	6812      	ldr	r2, [r2, #0]
 8018024:	2114      	movs	r1, #20
 8018026:	fb01 2303 	mla	r3, r1, r3, r2
 801802a:	8a1a      	ldrh	r2, [r3, #16]
 801802c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018030:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018034:	8a5b      	ldrh	r3, [r3, #18]
 8018036:	8004      	strh	r4, [r0, #0]
 8018038:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801803c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018040:	8041      	strh	r1, [r0, #2]
 8018042:	8082      	strh	r2, [r0, #4]
 8018044:	80c3      	strh	r3, [r0, #6]
 8018046:	e024      	b.n	8018092 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8018048:	4917      	ldr	r1, [pc, #92]	@ (80180a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801804a:	8809      	ldrh	r1, [r1, #0]
 801804c:	4411      	add	r1, r2
 801804e:	428b      	cmp	r3, r1
 8018050:	da10      	bge.n	8018074 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8018052:	1a9b      	subs	r3, r3, r2
 8018054:	220e      	movs	r2, #14
 8018056:	4353      	muls	r3, r2
 8018058:	4a14      	ldr	r2, [pc, #80]	@ (80180ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801805a:	6811      	ldr	r1, [r2, #0]
 801805c:	18ca      	adds	r2, r1, r3
 801805e:	5ecd      	ldrsh	r5, [r1, r3]
 8018060:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8018064:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8018068:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 801806c:	8005      	strh	r5, [r0, #0]
 801806e:	8044      	strh	r4, [r0, #2]
 8018070:	8081      	strh	r1, [r0, #4]
 8018072:	e7e7      	b.n	8018044 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8018074:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8018078:	4293      	cmp	r3, r2
 801807a:	d10b      	bne.n	8018094 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 801807c:	4b0c      	ldr	r3, [pc, #48]	@ (80180b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801807e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018082:	4b0c      	ldr	r3, [pc, #48]	@ (80180b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8018084:	8081      	strh	r1, [r0, #4]
 8018086:	f9b3 2000 	ldrsh.w	r2, [r3]
 801808a:	80c2      	strh	r2, [r0, #6]
 801808c:	2300      	movs	r3, #0
 801808e:	8003      	strh	r3, [r0, #0]
 8018090:	8043      	strh	r3, [r0, #2]
 8018092:	bd30      	pop	{r4, r5, pc}
 8018094:	2300      	movs	r3, #0
 8018096:	8003      	strh	r3, [r0, #0]
 8018098:	8043      	strh	r3, [r0, #2]
 801809a:	8083      	strh	r3, [r0, #4]
 801809c:	e7d2      	b.n	8018044 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801809e:	bf00      	nop
 80180a0:	20013fe8 	.word	0x20013fe8
 80180a4:	20013ff0 	.word	0x20013ff0
 80180a8:	20013fec 	.word	0x20013fec
 80180ac:	20013fd0 	.word	0x20013fd0
 80180b0:	20013f54 	.word	0x20013f54
 80180b4:	20013f56 	.word	0x20013f56

080180b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80180b8:	4a17      	ldr	r2, [pc, #92]	@ (8018118 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80180ba:	8803      	ldrh	r3, [r0, #0]
 80180bc:	8812      	ldrh	r2, [r2, #0]
 80180be:	4293      	cmp	r3, r2
 80180c0:	d213      	bcs.n	80180ea <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80180c2:	4a16      	ldr	r2, [pc, #88]	@ (801811c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80180c4:	6812      	ldr	r2, [r2, #0]
 80180c6:	2114      	movs	r1, #20
 80180c8:	fb01 2303 	mla	r3, r1, r3, r2
 80180cc:	8a1a      	ldrh	r2, [r3, #16]
 80180ce:	8919      	ldrh	r1, [r3, #8]
 80180d0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80180d4:	428a      	cmp	r2, r1
 80180d6:	db1d      	blt.n	8018114 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80180d8:	8a58      	ldrh	r0, [r3, #18]
 80180da:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80180de:	895b      	ldrh	r3, [r3, #10]
 80180e0:	4298      	cmp	r0, r3
 80180e2:	bfac      	ite	ge
 80180e4:	2000      	movge	r0, #0
 80180e6:	2001      	movlt	r0, #1
 80180e8:	4770      	bx	lr
 80180ea:	490d      	ldr	r1, [pc, #52]	@ (8018120 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80180ec:	8809      	ldrh	r1, [r1, #0]
 80180ee:	4411      	add	r1, r2
 80180f0:	428b      	cmp	r3, r1
 80180f2:	da0d      	bge.n	8018110 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80180f4:	1a9b      	subs	r3, r3, r2
 80180f6:	4a0b      	ldr	r2, [pc, #44]	@ (8018124 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80180f8:	6812      	ldr	r2, [r2, #0]
 80180fa:	210e      	movs	r1, #14
 80180fc:	fb01 2303 	mla	r3, r1, r3, r2
 8018100:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018104:	891a      	ldrh	r2, [r3, #8]
 8018106:	4291      	cmp	r1, r2
 8018108:	db04      	blt.n	8018114 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801810a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801810e:	e7e6      	b.n	80180de <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8018110:	2000      	movs	r0, #0
 8018112:	4770      	bx	lr
 8018114:	2001      	movs	r0, #1
 8018116:	4770      	bx	lr
 8018118:	20013fe8 	.word	0x20013fe8
 801811c:	20013ff0 	.word	0x20013ff0
 8018120:	20013fec 	.word	0x20013fec
 8018124:	20013fd0 	.word	0x20013fd0

08018128 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018128:	4a12      	ldr	r2, [pc, #72]	@ (8018174 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801812a:	8803      	ldrh	r3, [r0, #0]
 801812c:	8811      	ldrh	r1, [r2, #0]
 801812e:	428b      	cmp	r3, r1
 8018130:	d20b      	bcs.n	801814a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8018132:	4a11      	ldr	r2, [pc, #68]	@ (8018178 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018134:	6812      	ldr	r2, [r2, #0]
 8018136:	b112      	cbz	r2, 801813e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018138:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801813c:	b9c0      	cbnz	r0, 8018170 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801813e:	4a0f      	ldr	r2, [pc, #60]	@ (801817c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8018140:	6811      	ldr	r1, [r2, #0]
 8018142:	2214      	movs	r2, #20
 8018144:	4353      	muls	r3, r2
 8018146:	58c8      	ldr	r0, [r1, r3]
 8018148:	4770      	bx	lr
 801814a:	4a0d      	ldr	r2, [pc, #52]	@ (8018180 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801814c:	8812      	ldrh	r2, [r2, #0]
 801814e:	440a      	add	r2, r1
 8018150:	4293      	cmp	r3, r2
 8018152:	da04      	bge.n	801815e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018154:	4a08      	ldr	r2, [pc, #32]	@ (8018178 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018156:	6812      	ldr	r2, [r2, #0]
 8018158:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801815c:	4770      	bx	lr
 801815e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8018162:	4293      	cmp	r3, r2
 8018164:	d103      	bne.n	801816e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8018166:	4b07      	ldr	r3, [pc, #28]	@ (8018184 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018168:	681b      	ldr	r3, [r3, #0]
 801816a:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 801816c:	4770      	bx	lr
 801816e:	2000      	movs	r0, #0
 8018170:	4770      	bx	lr
 8018172:	bf00      	nop
 8018174:	20013fe8 	.word	0x20013fe8
 8018178:	20013fcc 	.word	0x20013fcc
 801817c:	20013ff0 	.word	0x20013ff0
 8018180:	20013fec 	.word	0x20013fec
 8018184:	20013f60 	.word	0x20013f60

08018188 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018188:	4b24      	ldr	r3, [pc, #144]	@ (801821c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801818a:	8802      	ldrh	r2, [r0, #0]
 801818c:	8818      	ldrh	r0, [r3, #0]
 801818e:	4282      	cmp	r2, r0
 8018190:	d221      	bcs.n	80181d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8018192:	4b23      	ldr	r3, [pc, #140]	@ (8018220 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018194:	6819      	ldr	r1, [r3, #0]
 8018196:	2314      	movs	r3, #20
 8018198:	fb03 1302 	mla	r3, r3, r2, r1
 801819c:	6858      	ldr	r0, [r3, #4]
 801819e:	2800      	cmp	r0, #0
 80181a0:	d03a      	beq.n	8018218 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80181a2:	4920      	ldr	r1, [pc, #128]	@ (8018224 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80181a4:	6809      	ldr	r1, [r1, #0]
 80181a6:	2900      	cmp	r1, #0
 80181a8:	d036      	beq.n	8018218 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80181aa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80181ae:	2900      	cmp	r1, #0
 80181b0:	d032      	beq.n	8018218 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80181b2:	891a      	ldrh	r2, [r3, #8]
 80181b4:	8958      	ldrh	r0, [r3, #10]
 80181b6:	4350      	muls	r0, r2
 80181b8:	7c5a      	ldrb	r2, [r3, #17]
 80181ba:	7cdb      	ldrb	r3, [r3, #19]
 80181bc:	0952      	lsrs	r2, r2, #5
 80181be:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80181c2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80181c6:	2b0b      	cmp	r3, #11
 80181c8:	bf18      	it	ne
 80181ca:	0040      	lslne	r0, r0, #1
 80181cc:	3003      	adds	r0, #3
 80181ce:	f020 0003 	bic.w	r0, r0, #3
 80181d2:	4408      	add	r0, r1
 80181d4:	4770      	bx	lr
 80181d6:	4b14      	ldr	r3, [pc, #80]	@ (8018228 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80181d8:	881b      	ldrh	r3, [r3, #0]
 80181da:	4403      	add	r3, r0
 80181dc:	429a      	cmp	r2, r3
 80181de:	da1a      	bge.n	8018216 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80181e0:	4b12      	ldr	r3, [pc, #72]	@ (801822c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80181e2:	681b      	ldr	r3, [r3, #0]
 80181e4:	1a10      	subs	r0, r2, r0
 80181e6:	210e      	movs	r1, #14
 80181e8:	fb01 3000 	mla	r0, r1, r0, r3
 80181ec:	7b03      	ldrb	r3, [r0, #12]
 80181ee:	f003 031f 	and.w	r3, r3, #31
 80181f2:	2b0b      	cmp	r3, #11
 80181f4:	d10b      	bne.n	801820e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80181f6:	8903      	ldrh	r3, [r0, #8]
 80181f8:	8940      	ldrh	r0, [r0, #10]
 80181fa:	4358      	muls	r0, r3
 80181fc:	4b09      	ldr	r3, [pc, #36]	@ (8018224 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80181fe:	6819      	ldr	r1, [r3, #0]
 8018200:	3003      	adds	r0, #3
 8018202:	f020 0303 	bic.w	r3, r0, #3
 8018206:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801820a:	4418      	add	r0, r3
 801820c:	4770      	bx	lr
 801820e:	2b0d      	cmp	r3, #13
 8018210:	d101      	bne.n	8018216 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018212:	300d      	adds	r0, #13
 8018214:	4770      	bx	lr
 8018216:	2000      	movs	r0, #0
 8018218:	4770      	bx	lr
 801821a:	bf00      	nop
 801821c:	20013fe8 	.word	0x20013fe8
 8018220:	20013ff0 	.word	0x20013ff0
 8018224:	20013fcc 	.word	0x20013fcc
 8018228:	20013fec 	.word	0x20013fec
 801822c:	20013fd0 	.word	0x20013fd0

08018230 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018230:	b510      	push	{r4, lr}
 8018232:	4b1f      	ldr	r3, [pc, #124]	@ (80182b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8018234:	8802      	ldrh	r2, [r0, #0]
 8018236:	881b      	ldrh	r3, [r3, #0]
 8018238:	429a      	cmp	r2, r3
 801823a:	d21a      	bcs.n	8018272 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 801823c:	4b1d      	ldr	r3, [pc, #116]	@ (80182b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 801823e:	681b      	ldr	r3, [r3, #0]
 8018240:	2114      	movs	r1, #20
 8018242:	fb01 3102 	mla	r1, r1, r2, r3
 8018246:	7c4b      	ldrb	r3, [r1, #17]
 8018248:	0958      	lsrs	r0, r3, #5
 801824a:	7ccb      	ldrb	r3, [r1, #19]
 801824c:	491a      	ldr	r1, [pc, #104]	@ (80182b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801824e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8018252:	6809      	ldr	r1, [r1, #0]
 8018254:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8018258:	b2d8      	uxtb	r0, r3
 801825a:	b149      	cbz	r1, 8018270 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801825c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8018260:	b132      	cbz	r2, 8018270 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8018262:	2b0e      	cmp	r3, #14
 8018264:	d021      	beq.n	80182aa <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8018266:	280f      	cmp	r0, #15
 8018268:	d01d      	beq.n	80182a6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 801826a:	2810      	cmp	r0, #16
 801826c:	bf08      	it	eq
 801826e:	2002      	moveq	r0, #2
 8018270:	bd10      	pop	{r4, pc}
 8018272:	4912      	ldr	r1, [pc, #72]	@ (80182bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8018274:	8809      	ldrh	r1, [r1, #0]
 8018276:	4419      	add	r1, r3
 8018278:	428a      	cmp	r2, r1
 801827a:	da09      	bge.n	8018290 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 801827c:	1ad3      	subs	r3, r2, r3
 801827e:	4a10      	ldr	r2, [pc, #64]	@ (80182c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8018280:	6812      	ldr	r2, [r2, #0]
 8018282:	210e      	movs	r1, #14
 8018284:	fb01 2303 	mla	r3, r1, r3, r2
 8018288:	7b18      	ldrb	r0, [r3, #12]
 801828a:	f000 001f 	and.w	r0, r0, #31
 801828e:	e7ef      	b.n	8018270 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8018290:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8018294:	429a      	cmp	r2, r3
 8018296:	d108      	bne.n	80182aa <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8018298:	f7eb f986 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 801829c:	6803      	ldr	r3, [r0, #0]
 801829e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80182a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80182a4:	4718      	bx	r3
 80182a6:	2001      	movs	r0, #1
 80182a8:	e7e2      	b.n	8018270 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80182aa:	2000      	movs	r0, #0
 80182ac:	e7e0      	b.n	8018270 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80182ae:	bf00      	nop
 80182b0:	20013fe8 	.word	0x20013fe8
 80182b4:	20013ff0 	.word	0x20013ff0
 80182b8:	20013fcc 	.word	0x20013fcc
 80182bc:	20013fec 	.word	0x20013fec
 80182c0:	20013fd0 	.word	0x20013fd0

080182c4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80182c4:	2010      	movs	r0, #16
 80182c6:	4770      	bx	lr

080182c8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80182c8:	2000      	movs	r0, #0
 80182ca:	4770      	bx	lr

080182cc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80182cc:	4b02      	ldr	r3, [pc, #8]	@ (80182d8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80182ce:	8818      	ldrh	r0, [r3, #0]
 80182d0:	0040      	lsls	r0, r0, #1
 80182d2:	b280      	uxth	r0, r0
 80182d4:	4770      	bx	lr
 80182d6:	bf00      	nop
 80182d8:	20013f5a 	.word	0x20013f5a

080182dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80182dc:	2bff      	cmp	r3, #255	@ 0xff
 80182de:	d05e      	beq.n	801839e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 80182e0:	2a0b      	cmp	r2, #11
 80182e2:	d058      	beq.n	8018396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80182e4:	d80e      	bhi.n	8018304 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80182e6:	2a03      	cmp	r2, #3
 80182e8:	d04d      	beq.n	8018386 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 80182ea:	d804      	bhi.n	80182f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80182ec:	2a01      	cmp	r2, #1
 80182ee:	d04c      	beq.n	801838a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 80182f0:	d94d      	bls.n	801838e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 80182f2:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80182f4:	e031      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80182f6:	2a09      	cmp	r2, #9
 80182f8:	d04d      	beq.n	8018396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80182fa:	d84a      	bhi.n	8018392 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80182fc:	2a08      	cmp	r2, #8
 80182fe:	d048      	beq.n	8018392 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8018300:	2300      	movs	r3, #0
 8018302:	e02a      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018304:	2a2f      	cmp	r2, #47	@ 0x2f
 8018306:	d02c      	beq.n	8018362 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8018308:	d811      	bhi.n	801832e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 801830a:	2a2d      	cmp	r2, #45	@ 0x2d
 801830c:	d018      	beq.n	8018340 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 801830e:	d831      	bhi.n	8018374 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8018310:	2a2c      	cmp	r2, #44	@ 0x2c
 8018312:	d1f5      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018314:	684a      	ldr	r2, [r1, #4]
 8018316:	7813      	ldrb	r3, [r2, #0]
 8018318:	7852      	ldrb	r2, [r2, #1]
 801831a:	2a00      	cmp	r2, #0
 801831c:	d1f0      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801831e:	2b01      	cmp	r3, #1
 8018320:	d01d      	beq.n	801835e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018322:	2b00      	cmp	r3, #0
 8018324:	d02d      	beq.n	8018382 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018326:	2b02      	cmp	r3, #2
 8018328:	d1ea      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801832a:	68c3      	ldr	r3, [r0, #12]
 801832c:	e015      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801832e:	2a31      	cmp	r2, #49	@ 0x31
 8018330:	d004      	beq.n	801833c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8018332:	d332      	bcc.n	801839a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8018334:	2a32      	cmp	r2, #50	@ 0x32
 8018336:	d030      	beq.n	801839a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8018338:	2a33      	cmp	r2, #51	@ 0x33
 801833a:	d1e1      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801833c:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 801833e:	e00c      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018340:	684a      	ldr	r2, [r1, #4]
 8018342:	7813      	ldrb	r3, [r2, #0]
 8018344:	7852      	ldrb	r2, [r2, #1]
 8018346:	2a00      	cmp	r2, #0
 8018348:	d1da      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801834a:	2b01      	cmp	r3, #1
 801834c:	d004      	beq.n	8018358 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 801834e:	d30f      	bcc.n	8018370 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8018350:	2b02      	cmp	r3, #2
 8018352:	d1d5      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018354:	6943      	ldr	r3, [r0, #20]
 8018356:	e000      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018358:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801835a:	4618      	mov	r0, r3
 801835c:	4770      	bx	lr
 801835e:	69c3      	ldr	r3, [r0, #28]
 8018360:	e7fb      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018362:	684b      	ldr	r3, [r1, #4]
 8018364:	781a      	ldrb	r2, [r3, #0]
 8018366:	785b      	ldrb	r3, [r3, #1]
 8018368:	2b00      	cmp	r3, #0
 801836a:	d1c9      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801836c:	2a00      	cmp	r2, #0
 801836e:	d1f4      	bne.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018370:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8018372:	e7f2      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018374:	684b      	ldr	r3, [r1, #4]
 8018376:	781a      	ldrb	r2, [r3, #0]
 8018378:	785b      	ldrb	r3, [r3, #1]
 801837a:	2b00      	cmp	r3, #0
 801837c:	d1c0      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801837e:	2a00      	cmp	r2, #0
 8018380:	d1eb      	bne.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018382:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8018384:	e7e9      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018386:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8018388:	e7e7      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801838a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 801838c:	e7e5      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801838e:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8018390:	e7e3      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018392:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8018394:	e7e1      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018396:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8018398:	e7df      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801839a:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 801839c:	e7dd      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801839e:	2a0b      	cmp	r2, #11
 80183a0:	d059      	beq.n	8018456 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80183a2:	d80e      	bhi.n	80183c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 80183a4:	2a03      	cmp	r2, #3
 80183a6:	d050      	beq.n	801844a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 80183a8:	d804      	bhi.n	80183b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80183aa:	2a01      	cmp	r2, #1
 80183ac:	d04f      	beq.n	801844e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 80183ae:	d950      	bls.n	8018452 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80183b0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80183b2:	e7d2      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80183b4:	2a09      	cmp	r2, #9
 80183b6:	d04e      	beq.n	8018456 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80183b8:	d801      	bhi.n	80183be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80183ba:	2a08      	cmp	r2, #8
 80183bc:	d1a0      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80183be:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80183c0:	e7cb      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80183c2:	2a2f      	cmp	r2, #47	@ 0x2f
 80183c4:	d02d      	beq.n	8018422 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 80183c6:	d811      	bhi.n	80183ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80183c8:	2a2d      	cmp	r2, #45	@ 0x2d
 80183ca:	d018      	beq.n	80183fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 80183cc:	d833      	bhi.n	8018436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 80183ce:	2a2c      	cmp	r2, #44	@ 0x2c
 80183d0:	d196      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80183d2:	684a      	ldr	r2, [r1, #4]
 80183d4:	7813      	ldrb	r3, [r2, #0]
 80183d6:	7852      	ldrb	r2, [r2, #1]
 80183d8:	2a00      	cmp	r2, #0
 80183da:	d191      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80183dc:	2b01      	cmp	r3, #1
 80183de:	d01e      	beq.n	801841e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80183e0:	2b00      	cmp	r3, #0
 80183e2:	d030      	beq.n	8018446 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 80183e4:	2b02      	cmp	r3, #2
 80183e6:	d18b      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80183e8:	6903      	ldr	r3, [r0, #16]
 80183ea:	e7b6      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80183ec:	2a31      	cmp	r2, #49	@ 0x31
 80183ee:	d004      	beq.n	80183fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 80183f0:	d333      	bcc.n	801845a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80183f2:	2a32      	cmp	r2, #50	@ 0x32
 80183f4:	d031      	beq.n	801845a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80183f6:	2a33      	cmp	r2, #51	@ 0x33
 80183f8:	d182      	bne.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80183fa:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 80183fc:	e7ad      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80183fe:	684a      	ldr	r2, [r1, #4]
 8018400:	7813      	ldrb	r3, [r2, #0]
 8018402:	7852      	ldrb	r2, [r2, #1]
 8018404:	2a00      	cmp	r2, #0
 8018406:	f47f af7b 	bne.w	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801840a:	2b01      	cmp	r3, #1
 801840c:	d005      	beq.n	801841a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801840e:	d310      	bcc.n	8018432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8018410:	2b02      	cmp	r3, #2
 8018412:	f47f af75 	bne.w	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018416:	6983      	ldr	r3, [r0, #24]
 8018418:	e79f      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801841a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801841c:	e79d      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801841e:	6a03      	ldr	r3, [r0, #32]
 8018420:	e79b      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018422:	684b      	ldr	r3, [r1, #4]
 8018424:	781a      	ldrb	r2, [r3, #0]
 8018426:	785b      	ldrb	r3, [r3, #1]
 8018428:	2b00      	cmp	r3, #0
 801842a:	f47f af69 	bne.w	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801842e:	2a00      	cmp	r2, #0
 8018430:	d193      	bne.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018432:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8018434:	e791      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018436:	684b      	ldr	r3, [r1, #4]
 8018438:	781a      	ldrb	r2, [r3, #0]
 801843a:	785b      	ldrb	r3, [r3, #1]
 801843c:	2b00      	cmp	r3, #0
 801843e:	f47f af5f 	bne.w	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018442:	2a00      	cmp	r2, #0
 8018444:	d189      	bne.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018446:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8018448:	e787      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801844a:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 801844c:	e785      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801844e:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8018450:	e783      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018452:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8018454:	e781      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018456:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8018458:	e77f      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801845a:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 801845c:	e77d      	b.n	801835a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

0801845e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801845e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018462:	b087      	sub	sp, #28
 8018464:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8018466:	9205      	str	r2, [sp, #20]
 8018468:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801846c:	9202      	str	r2, [sp, #8]
 801846e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8018472:	9101      	str	r1, [sp, #4]
 8018474:	6841      	ldr	r1, [r0, #4]
 8018476:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801847a:	fb01 2404 	mla	r4, r1, r4, r2
 801847e:	6802      	ldr	r2, [r0, #0]
 8018480:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018484:	f8de 2000 	ldr.w	r2, [lr]
 8018488:	9203      	str	r2, [sp, #12]
 801848a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801848e:	3204      	adds	r2, #4
 8018490:	9204      	str	r2, [sp, #16]
 8018492:	9a02      	ldr	r2, [sp, #8]
 8018494:	43d6      	mvns	r6, r2
 8018496:	b2f6      	uxtb	r6, r6
 8018498:	9a01      	ldr	r2, [sp, #4]
 801849a:	2a00      	cmp	r2, #0
 801849c:	dc03      	bgt.n	80184a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801849e:	9a05      	ldr	r2, [sp, #20]
 80184a0:	2a00      	cmp	r2, #0
 80184a2:	f340 8129 	ble.w	80186f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80184a6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80184a8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80184ac:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80184b0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80184b4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80184b6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80184ba:	2b00      	cmp	r3, #0
 80184bc:	dd0e      	ble.n	80184dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80184be:	1408      	asrs	r0, r1, #16
 80184c0:	d405      	bmi.n	80184ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80184c2:	4560      	cmp	r0, ip
 80184c4:	da03      	bge.n	80184ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80184c6:	1410      	asrs	r0, r2, #16
 80184c8:	d401      	bmi.n	80184ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80184ca:	42b8      	cmp	r0, r7
 80184cc:	db07      	blt.n	80184de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80184ce:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80184d0:	4401      	add	r1, r0
 80184d2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80184d4:	3b01      	subs	r3, #1
 80184d6:	4402      	add	r2, r0
 80184d8:	3402      	adds	r4, #2
 80184da:	e7ee      	b.n	80184ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80184dc:	d071      	beq.n	80185c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80184de:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80184e0:	1e58      	subs	r0, r3, #1
 80184e2:	fb05 1500 	mla	r5, r5, r0, r1
 80184e6:	142d      	asrs	r5, r5, #16
 80184e8:	d45f      	bmi.n	80185aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80184ea:	4565      	cmp	r5, ip
 80184ec:	da5d      	bge.n	80185aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80184ee:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80184f0:	fb05 2000 	mla	r0, r5, r0, r2
 80184f4:	1400      	asrs	r0, r0, #16
 80184f6:	d458      	bmi.n	80185aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80184f8:	42b8      	cmp	r0, r7
 80184fa:	da56      	bge.n	80185aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80184fc:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8018500:	4699      	mov	r9, r3
 8018502:	46a2      	mov	sl, r4
 8018504:	f1b9 0f00 	cmp.w	r9, #0
 8018508:	dd57      	ble.n	80185ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801850a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801850e:	9803      	ldr	r0, [sp, #12]
 8018510:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018514:	140d      	asrs	r5, r1, #16
 8018516:	fb07 000c 	mla	r0, r7, ip, r0
 801851a:	f109 39ff 	add.w	r9, r9, #4294967295
 801851e:	5d40      	ldrb	r0, [r0, r5]
 8018520:	9d04      	ldr	r5, [sp, #16]
 8018522:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018526:	f8ba 5000 	ldrh.w	r5, [sl]
 801852a:	122f      	asrs	r7, r5, #8
 801852c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018530:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018534:	fb17 f706 	smulbb	r7, r7, r6
 8018538:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801853c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018540:	00ed      	lsls	r5, r5, #3
 8018542:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018546:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801854a:	10c7      	asrs	r7, r0, #3
 801854c:	b2ed      	uxtb	r5, r5
 801854e:	00c0      	lsls	r0, r0, #3
 8018550:	fb18 f806 	smulbb	r8, r8, r6
 8018554:	fb15 f506 	smulbb	r5, r5, r6
 8018558:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801855c:	b2c0      	uxtb	r0, r0
 801855e:	fa1f fc8c 	uxth.w	ip, ip
 8018562:	fb07 870b 	mla	r7, r7, fp, r8
 8018566:	fb00 500b 	mla	r0, r0, fp, r5
 801856a:	b280      	uxth	r0, r0
 801856c:	b2bf      	uxth	r7, r7
 801856e:	f10c 0501 	add.w	r5, ip, #1
 8018572:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018576:	f107 0801 	add.w	r8, r7, #1
 801857a:	1c45      	adds	r5, r0, #1
 801857c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018580:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018584:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018586:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801858a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801858e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018592:	ea45 0c0c 	orr.w	ip, r5, ip
 8018596:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801859a:	4401      	add	r1, r0
 801859c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801859e:	ea4c 0c08 	orr.w	ip, ip, r8
 80185a2:	f82a cb02 	strh.w	ip, [sl], #2
 80185a6:	4402      	add	r2, r0
 80185a8:	e7ac      	b.n	8018504 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80185aa:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80185ae:	f04f 0800 	mov.w	r8, #0
 80185b2:	eb03 0008 	add.w	r0, r3, r8
 80185b6:	2800      	cmp	r0, #0
 80185b8:	dc41      	bgt.n	801863e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80185ba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80185be:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80185c2:	9b01      	ldr	r3, [sp, #4]
 80185c4:	2b00      	cmp	r3, #0
 80185c6:	f340 8097 	ble.w	80186f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80185ca:	ee30 0a04 	vadd.f32	s0, s0, s8
 80185ce:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80185d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80185d6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80185d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80185dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80185e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80185e4:	eef0 6a62 	vmov.f32	s13, s5
 80185e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80185ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80185f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80185f4:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80185f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80185fc:	eef0 6a43 	vmov.f32	s13, s6
 8018600:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018604:	ee12 2a90 	vmov	r2, s5
 8018608:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801860c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018610:	ee13 2a10 	vmov	r2, s6
 8018614:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018616:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018618:	fb92 f3f3 	sdiv	r3, r2, r3
 801861c:	9314      	str	r3, [sp, #80]	@ 0x50
 801861e:	9b01      	ldr	r3, [sp, #4]
 8018620:	9a05      	ldr	r2, [sp, #20]
 8018622:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018626:	3b01      	subs	r3, #1
 8018628:	9301      	str	r3, [sp, #4]
 801862a:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801862e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018630:	eeb0 3a67 	vmov.f32	s6, s15
 8018634:	bf08      	it	eq
 8018636:	4613      	moveq	r3, r2
 8018638:	eef0 2a47 	vmov.f32	s5, s14
 801863c:	e72c      	b.n	8018498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801863e:	140f      	asrs	r7, r1, #16
 8018640:	d453      	bmi.n	80186ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018642:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018646:	42bd      	cmp	r5, r7
 8018648:	dd4f      	ble.n	80186ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801864a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801864e:	d44c      	bmi.n	80186ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018650:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018654:	4560      	cmp	r0, ip
 8018656:	dd48      	ble.n	80186ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018658:	9803      	ldr	r0, [sp, #12]
 801865a:	b22d      	sxth	r5, r5
 801865c:	fb0c 0505 	mla	r5, ip, r5, r0
 8018660:	5de8      	ldrb	r0, [r5, r7]
 8018662:	9d04      	ldr	r5, [sp, #16]
 8018664:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018668:	f06f 0501 	mvn.w	r5, #1
 801866c:	fb05 fb08 	mul.w	fp, r5, r8
 8018670:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018674:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018678:	122f      	asrs	r7, r5, #8
 801867a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801867e:	fb17 f706 	smulbb	r7, r7, r6
 8018682:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018686:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801868a:	00ed      	lsls	r5, r5, #3
 801868c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018690:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8018694:	10c7      	asrs	r7, r0, #3
 8018696:	b2ed      	uxtb	r5, r5
 8018698:	00c0      	lsls	r0, r0, #3
 801869a:	fb19 f906 	smulbb	r9, r9, r6
 801869e:	fb15 f506 	smulbb	r5, r5, r6
 80186a2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80186a6:	b2c0      	uxtb	r0, r0
 80186a8:	fa1f fc8c 	uxth.w	ip, ip
 80186ac:	fb07 970a 	mla	r7, r7, sl, r9
 80186b0:	fb00 500a 	mla	r0, r0, sl, r5
 80186b4:	b2bf      	uxth	r7, r7
 80186b6:	b280      	uxth	r0, r0
 80186b8:	f10c 0501 	add.w	r5, ip, #1
 80186bc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80186c0:	f107 0901 	add.w	r9, r7, #1
 80186c4:	1c45      	adds	r5, r0, #1
 80186c6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80186ca:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80186ce:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80186d2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80186d6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80186da:	ea45 0c0c 	orr.w	ip, r5, ip
 80186de:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80186e2:	ea4c 0c09 	orr.w	ip, ip, r9
 80186e6:	f824 c00b 	strh.w	ip, [r4, fp]
 80186ea:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80186ec:	4401      	add	r1, r0
 80186ee:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80186f0:	f108 38ff 	add.w	r8, r8, #4294967295
 80186f4:	4402      	add	r2, r0
 80186f6:	e75c      	b.n	80185b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80186f8:	b007      	add	sp, #28
 80186fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080186fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80186fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018702:	b085      	sub	sp, #20
 8018704:	4693      	mov	fp, r2
 8018706:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018708:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801870a:	6870      	ldr	r0, [r6, #4]
 801870c:	9100      	str	r1, [sp, #0]
 801870e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018712:	fb00 2404 	mla	r4, r0, r4, r2
 8018716:	6832      	ldr	r2, [r6, #0]
 8018718:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801871c:	682a      	ldr	r2, [r5, #0]
 801871e:	9201      	str	r2, [sp, #4]
 8018720:	686a      	ldr	r2, [r5, #4]
 8018722:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8018726:	3204      	adds	r2, #4
 8018728:	9202      	str	r2, [sp, #8]
 801872a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801872e:	9a00      	ldr	r2, [sp, #0]
 8018730:	2a00      	cmp	r2, #0
 8018732:	dc03      	bgt.n	801873c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018734:	f1bb 0f00 	cmp.w	fp, #0
 8018738:	f340 80a0 	ble.w	801887c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801873c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801873e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018742:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018746:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801874a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801874c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018750:	2b00      	cmp	r3, #0
 8018752:	dd0c      	ble.n	801876e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018754:	1406      	asrs	r6, r0, #16
 8018756:	d405      	bmi.n	8018764 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018758:	454e      	cmp	r6, r9
 801875a:	da03      	bge.n	8018764 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801875c:	1416      	asrs	r6, r2, #16
 801875e:	d401      	bmi.n	8018764 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018760:	4546      	cmp	r6, r8
 8018762:	db05      	blt.n	8018770 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018764:	4470      	add	r0, lr
 8018766:	4462      	add	r2, ip
 8018768:	3b01      	subs	r3, #1
 801876a:	3402      	adds	r4, #2
 801876c:	e7f0      	b.n	8018750 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801876e:	d00f      	beq.n	8018790 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018770:	1e5e      	subs	r6, r3, #1
 8018772:	fb0e 0706 	mla	r7, lr, r6, r0
 8018776:	143f      	asrs	r7, r7, #16
 8018778:	d541      	bpl.n	80187fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801877a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801877e:	4698      	mov	r8, r3
 8018780:	9603      	str	r6, [sp, #12]
 8018782:	f1b8 0f00 	cmp.w	r8, #0
 8018786:	dc59      	bgt.n	801883c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018788:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801878c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018790:	9b00      	ldr	r3, [sp, #0]
 8018792:	2b00      	cmp	r3, #0
 8018794:	dd72      	ble.n	801887c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018796:	ee30 0a04 	vadd.f32	s0, s0, s8
 801879a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801879e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80187a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80187a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80187a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80187ac:	eeb0 6a62 	vmov.f32	s12, s5
 80187b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80187b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80187b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80187bc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80187c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80187c4:	eeb0 6a43 	vmov.f32	s12, s6
 80187c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80187cc:	ee12 2a90 	vmov	r2, s5
 80187d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80187d4:	fb92 fef3 	sdiv	lr, r2, r3
 80187d8:	ee13 2a10 	vmov	r2, s6
 80187dc:	fb92 fcf3 	sdiv	ip, r2, r3
 80187e0:	9b00      	ldr	r3, [sp, #0]
 80187e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80187e6:	3b01      	subs	r3, #1
 80187e8:	9300      	str	r3, [sp, #0]
 80187ea:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80187ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80187f0:	eeb0 3a67 	vmov.f32	s6, s15
 80187f4:	bf08      	it	eq
 80187f6:	465b      	moveq	r3, fp
 80187f8:	eef0 2a47 	vmov.f32	s5, s14
 80187fc:	e797      	b.n	801872e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80187fe:	454f      	cmp	r7, r9
 8018800:	dabb      	bge.n	801877a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018802:	fb0c 2606 	mla	r6, ip, r6, r2
 8018806:	1436      	asrs	r6, r6, #16
 8018808:	d4b7      	bmi.n	801877a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801880a:	4546      	cmp	r6, r8
 801880c:	dab5      	bge.n	801877a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801880e:	461e      	mov	r6, r3
 8018810:	46a0      	mov	r8, r4
 8018812:	2e00      	cmp	r6, #0
 8018814:	ddb8      	ble.n	8018788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018816:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801881a:	9901      	ldr	r1, [sp, #4]
 801881c:	1417      	asrs	r7, r2, #16
 801881e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018822:	fb0a 1707 	mla	r7, sl, r7, r1
 8018826:	9902      	ldr	r1, [sp, #8]
 8018828:	f817 7009 	ldrb.w	r7, [r7, r9]
 801882c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018830:	f828 7b02 	strh.w	r7, [r8], #2
 8018834:	4470      	add	r0, lr
 8018836:	4462      	add	r2, ip
 8018838:	3e01      	subs	r6, #1
 801883a:	e7ea      	b.n	8018812 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801883c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018840:	d417      	bmi.n	8018872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018842:	68ae      	ldr	r6, [r5, #8]
 8018844:	454e      	cmp	r6, r9
 8018846:	dd14      	ble.n	8018872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018848:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801884c:	d411      	bmi.n	8018872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801884e:	68ef      	ldr	r7, [r5, #12]
 8018850:	4557      	cmp	r7, sl
 8018852:	dd0e      	ble.n	8018872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018854:	9f01      	ldr	r7, [sp, #4]
 8018856:	b236      	sxth	r6, r6
 8018858:	fb0a 7606 	mla	r6, sl, r6, r7
 801885c:	9f02      	ldr	r7, [sp, #8]
 801885e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018862:	f06f 0101 	mvn.w	r1, #1
 8018866:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801886a:	fb01 f608 	mul.w	r6, r1, r8
 801886e:	9903      	ldr	r1, [sp, #12]
 8018870:	538f      	strh	r7, [r1, r6]
 8018872:	4470      	add	r0, lr
 8018874:	4462      	add	r2, ip
 8018876:	f108 38ff 	add.w	r8, r8, #4294967295
 801887a:	e782      	b.n	8018782 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801887c:	b005      	add	sp, #20
 801887e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018882 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018882:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018886:	b087      	sub	sp, #28
 8018888:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801888a:	9205      	str	r2, [sp, #20]
 801888c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018890:	9203      	str	r2, [sp, #12]
 8018892:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8018896:	9102      	str	r1, [sp, #8]
 8018898:	6861      	ldr	r1, [r4, #4]
 801889a:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801889e:	fb01 2000 	mla	r0, r1, r0, r2
 80188a2:	6822      	ldr	r2, [r4, #0]
 80188a4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80188a8:	9200      	str	r2, [sp, #0]
 80188aa:	f8dc 2000 	ldr.w	r2, [ip]
 80188ae:	9204      	str	r2, [sp, #16]
 80188b0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80188b4:	3204      	adds	r2, #4
 80188b6:	9201      	str	r2, [sp, #4]
 80188b8:	9a03      	ldr	r2, [sp, #12]
 80188ba:	43d5      	mvns	r5, r2
 80188bc:	b2ed      	uxtb	r5, r5
 80188be:	9a02      	ldr	r2, [sp, #8]
 80188c0:	2a00      	cmp	r2, #0
 80188c2:	dc03      	bgt.n	80188cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80188c4:	9a05      	ldr	r2, [sp, #20]
 80188c6:	2a00      	cmp	r2, #0
 80188c8:	f340 812c 	ble.w	8018b24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80188cc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80188ce:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80188d2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80188d6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80188da:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80188dc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80188e0:	2b00      	cmp	r3, #0
 80188e2:	dd10      	ble.n	8018906 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80188e4:	140c      	asrs	r4, r1, #16
 80188e6:	d405      	bmi.n	80188f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80188e8:	4574      	cmp	r4, lr
 80188ea:	da03      	bge.n	80188f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80188ec:	1414      	asrs	r4, r2, #16
 80188ee:	d401      	bmi.n	80188f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80188f0:	42bc      	cmp	r4, r7
 80188f2:	db09      	blt.n	8018908 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80188f4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80188f6:	9800      	ldr	r0, [sp, #0]
 80188f8:	4421      	add	r1, r4
 80188fa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80188fc:	3002      	adds	r0, #2
 80188fe:	4422      	add	r2, r4
 8018900:	3b01      	subs	r3, #1
 8018902:	9000      	str	r0, [sp, #0]
 8018904:	e7ec      	b.n	80188e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018906:	d071      	beq.n	80189ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018908:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801890a:	1e5c      	subs	r4, r3, #1
 801890c:	fb06 1604 	mla	r6, r6, r4, r1
 8018910:	1436      	asrs	r6, r6, #16
 8018912:	d45d      	bmi.n	80189d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018914:	4576      	cmp	r6, lr
 8018916:	da5b      	bge.n	80189d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018918:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801891a:	fb06 2404 	mla	r4, r6, r4, r2
 801891e:	1424      	asrs	r4, r4, #16
 8018920:	d456      	bmi.n	80189d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018922:	42bc      	cmp	r4, r7
 8018924:	da54      	bge.n	80189d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018926:	f8dd 9000 	ldr.w	r9, [sp]
 801892a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801892e:	4698      	mov	r8, r3
 8018930:	f1b8 0f00 	cmp.w	r8, #0
 8018934:	dd54      	ble.n	80189e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018936:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801893a:	9804      	ldr	r0, [sp, #16]
 801893c:	1414      	asrs	r4, r2, #16
 801893e:	fb07 0404 	mla	r4, r7, r4, r0
 8018942:	140e      	asrs	r6, r1, #16
 8018944:	9801      	ldr	r0, [sp, #4]
 8018946:	f814 e006 	ldrb.w	lr, [r4, r6]
 801894a:	f8b9 4000 	ldrh.w	r4, [r9]
 801894e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018952:	eb00 0b0e 	add.w	fp, r0, lr
 8018956:	1227      	asrs	r7, r4, #8
 8018958:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801895c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018960:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8018964:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018966:	fb16 f60a 	smulbb	r6, r6, sl
 801896a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801896e:	fb07 6705 	mla	r7, r7, r5, r6
 8018972:	10e6      	asrs	r6, r4, #3
 8018974:	00e4      	lsls	r4, r4, #3
 8018976:	b2e4      	uxtb	r4, r4
 8018978:	fb1b fb0a 	smulbb	fp, fp, sl
 801897c:	fb14 f405 	smulbb	r4, r4, r5
 8018980:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018984:	b2bf      	uxth	r7, r7
 8018986:	fb06 b605 	mla	r6, r6, r5, fp
 801898a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801898e:	b2b6      	uxth	r6, r6
 8018990:	fa1f fe8e 	uxth.w	lr, lr
 8018994:	1c7c      	adds	r4, r7, #1
 8018996:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801899a:	f106 0b01 	add.w	fp, r6, #1
 801899e:	f10e 0401 	add.w	r4, lr, #1
 80189a2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80189a6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80189aa:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80189ae:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80189b2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80189b6:	4327      	orrs	r7, r4
 80189b8:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80189bc:	4401      	add	r1, r0
 80189be:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80189c0:	ea47 070b 	orr.w	r7, r7, fp
 80189c4:	f829 7b02 	strh.w	r7, [r9], #2
 80189c8:	4402      	add	r2, r0
 80189ca:	f108 38ff 	add.w	r8, r8, #4294967295
 80189ce:	e7af      	b.n	8018930 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80189d0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80189d4:	f04f 0e00 	mov.w	lr, #0
 80189d8:	eb03 040e 	add.w	r4, r3, lr
 80189dc:	2c00      	cmp	r4, #0
 80189de:	dc43      	bgt.n	8018a68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80189e0:	9a00      	ldr	r2, [sp, #0]
 80189e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80189e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80189ea:	9300      	str	r3, [sp, #0]
 80189ec:	9b02      	ldr	r3, [sp, #8]
 80189ee:	2b00      	cmp	r3, #0
 80189f0:	f340 8098 	ble.w	8018b24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80189f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80189f8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80189fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018a00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018a02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018a06:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018a0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018a0e:	eef0 6a62 	vmov.f32	s13, s5
 8018a12:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018a16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018a1e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8018a22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018a26:	eef0 6a43 	vmov.f32	s13, s6
 8018a2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018a2e:	ee12 2a90 	vmov	r2, s5
 8018a32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a36:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a3a:	ee13 2a10 	vmov	r2, s6
 8018a3e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018a40:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018a42:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a46:	9314      	str	r3, [sp, #80]	@ 0x50
 8018a48:	9b02      	ldr	r3, [sp, #8]
 8018a4a:	9a05      	ldr	r2, [sp, #20]
 8018a4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a50:	3b01      	subs	r3, #1
 8018a52:	9302      	str	r3, [sp, #8]
 8018a54:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8018a58:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018a5a:	eeb0 3a67 	vmov.f32	s6, s15
 8018a5e:	bf08      	it	eq
 8018a60:	4613      	moveq	r3, r2
 8018a62:	eef0 2a47 	vmov.f32	s5, s14
 8018a66:	e72a      	b.n	80188be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018a68:	140f      	asrs	r7, r1, #16
 8018a6a:	d454      	bmi.n	8018b16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018a6c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8018a70:	42be      	cmp	r6, r7
 8018a72:	dd50      	ble.n	8018b16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018a74:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018a78:	d44d      	bmi.n	8018b16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018a7a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8018a7e:	4544      	cmp	r4, r8
 8018a80:	dd49      	ble.n	8018b16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018a82:	9c04      	ldr	r4, [sp, #16]
 8018a84:	b236      	sxth	r6, r6
 8018a86:	fb08 4606 	mla	r6, r8, r6, r4
 8018a8a:	f06f 0001 	mvn.w	r0, #1
 8018a8e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8018a92:	9c01      	ldr	r4, [sp, #4]
 8018a94:	fb00 fa0e 	mul.w	sl, r0, lr
 8018a98:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018a9c:	9800      	ldr	r0, [sp, #0]
 8018a9e:	eb04 0b08 	add.w	fp, r4, r8
 8018aa2:	f830 400a 	ldrh.w	r4, [r0, sl]
 8018aa6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018aaa:	9801      	ldr	r0, [sp, #4]
 8018aac:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018ab0:	f810 8008 	ldrb.w	r8, [r0, r8]
 8018ab4:	9800      	ldr	r0, [sp, #0]
 8018ab6:	1227      	asrs	r7, r4, #8
 8018ab8:	fb16 f609 	smulbb	r6, r6, r9
 8018abc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018ac0:	fb07 6705 	mla	r7, r7, r5, r6
 8018ac4:	10e6      	asrs	r6, r4, #3
 8018ac6:	00e4      	lsls	r4, r4, #3
 8018ac8:	b2e4      	uxtb	r4, r4
 8018aca:	fb1b fb09 	smulbb	fp, fp, r9
 8018ace:	fb14 f405 	smulbb	r4, r4, r5
 8018ad2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018ad6:	b2bf      	uxth	r7, r7
 8018ad8:	fb06 b605 	mla	r6, r6, r5, fp
 8018adc:	fb08 4809 	mla	r8, r8, r9, r4
 8018ae0:	b2b6      	uxth	r6, r6
 8018ae2:	fa1f f888 	uxth.w	r8, r8
 8018ae6:	1c7c      	adds	r4, r7, #1
 8018ae8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018aec:	f106 0b01 	add.w	fp, r6, #1
 8018af0:	f108 0401 	add.w	r4, r8, #1
 8018af4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018af8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018afc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018b00:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018b04:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018b08:	4327      	orrs	r7, r4
 8018b0a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018b0e:	ea47 070b 	orr.w	r7, r7, fp
 8018b12:	f820 700a 	strh.w	r7, [r0, sl]
 8018b16:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018b18:	4401      	add	r1, r0
 8018b1a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8018b1c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018b20:	4402      	add	r2, r0
 8018b22:	e759      	b.n	80189d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018b24:	b007      	add	sp, #28
 8018b26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b30:	b085      	sub	sp, #20
 8018b32:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018b36:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018b38:	9203      	str	r2, [sp, #12]
 8018b3a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018b3e:	6870      	ldr	r0, [r6, #4]
 8018b40:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8018b42:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8018b46:	686f      	ldr	r7, [r5, #4]
 8018b48:	9101      	str	r1, [sp, #4]
 8018b4a:	fb00 2404 	mla	r4, r0, r4, r2
 8018b4e:	6832      	ldr	r2, [r6, #0]
 8018b50:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b54:	682a      	ldr	r2, [r5, #0]
 8018b56:	9202      	str	r2, [sp, #8]
 8018b58:	3704      	adds	r7, #4
 8018b5a:	9a01      	ldr	r2, [sp, #4]
 8018b5c:	2a00      	cmp	r2, #0
 8018b5e:	dc03      	bgt.n	8018b68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018b60:	9a03      	ldr	r2, [sp, #12]
 8018b62:	2a00      	cmp	r2, #0
 8018b64:	f340 80cc 	ble.w	8018d00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018b68:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018b6a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018b6e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018b72:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8018b76:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018b78:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018b7c:	2b00      	cmp	r3, #0
 8018b7e:	dd0d      	ble.n	8018b9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018b80:	1406      	asrs	r6, r0, #16
 8018b82:	d405      	bmi.n	8018b90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018b84:	454e      	cmp	r6, r9
 8018b86:	da03      	bge.n	8018b90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018b88:	1416      	asrs	r6, r2, #16
 8018b8a:	d401      	bmi.n	8018b90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018b8c:	4546      	cmp	r6, r8
 8018b8e:	db06      	blt.n	8018b9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018b90:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8018b92:	4460      	add	r0, ip
 8018b94:	4432      	add	r2, r6
 8018b96:	3b01      	subs	r3, #1
 8018b98:	3402      	adds	r4, #2
 8018b9a:	e7ef      	b.n	8018b7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018b9c:	d00f      	beq.n	8018bbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018b9e:	1e5e      	subs	r6, r3, #1
 8018ba0:	fb0c 0e06 	mla	lr, ip, r6, r0
 8018ba4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8018ba8:	d543      	bpl.n	8018c32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8018baa:	4698      	mov	r8, r3
 8018bac:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8018bb0:	f1b8 0f00 	cmp.w	r8, #0
 8018bb4:	dc71      	bgt.n	8018c9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018bb6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018bba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018bbe:	9b01      	ldr	r3, [sp, #4]
 8018bc0:	2b00      	cmp	r3, #0
 8018bc2:	f340 809d 	ble.w	8018d00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018bc6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018bca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018bce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018bd2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018bd4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018bd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018bdc:	eeb0 6a62 	vmov.f32	s12, s5
 8018be0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018be4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018be8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018bec:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018bf0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018bf4:	eeb0 6a43 	vmov.f32	s12, s6
 8018bf8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018bfc:	ee12 2a90 	vmov	r2, s5
 8018c00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018c04:	fb92 fcf3 	sdiv	ip, r2, r3
 8018c08:	ee13 2a10 	vmov	r2, s6
 8018c0c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c10:	9312      	str	r3, [sp, #72]	@ 0x48
 8018c12:	9b01      	ldr	r3, [sp, #4]
 8018c14:	9a03      	ldr	r2, [sp, #12]
 8018c16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c1a:	3b01      	subs	r3, #1
 8018c1c:	9301      	str	r3, [sp, #4]
 8018c1e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8018c22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018c24:	eeb0 3a67 	vmov.f32	s6, s15
 8018c28:	bf08      	it	eq
 8018c2a:	4613      	moveq	r3, r2
 8018c2c:	eef0 2a47 	vmov.f32	s5, s14
 8018c30:	e793      	b.n	8018b5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8018c32:	45ce      	cmp	lr, r9
 8018c34:	dab9      	bge.n	8018baa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018c36:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018c38:	fb01 2606 	mla	r6, r1, r6, r2
 8018c3c:	1436      	asrs	r6, r6, #16
 8018c3e:	d4b4      	bmi.n	8018baa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018c40:	4546      	cmp	r6, r8
 8018c42:	dab2      	bge.n	8018baa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018c44:	4698      	mov	r8, r3
 8018c46:	46a2      	mov	sl, r4
 8018c48:	f1b8 0f00 	cmp.w	r8, #0
 8018c4c:	ddb3      	ble.n	8018bb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018c4e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018c52:	9902      	ldr	r1, [sp, #8]
 8018c54:	1416      	asrs	r6, r2, #16
 8018c56:	fb09 1606 	mla	r6, r9, r6, r1
 8018c5a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8018c5e:	492a      	ldr	r1, [pc, #168]	@ (8018d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8018c60:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8018c64:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018c68:	eb07 0b0e 	add.w	fp, r7, lr
 8018c6c:	4460      	add	r0, ip
 8018c6e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8018c72:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8018c76:	00f6      	lsls	r6, r6, #3
 8018c78:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8018c7c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018c80:	ea49 0606 	orr.w	r6, r9, r6
 8018c84:	f817 900e 	ldrb.w	r9, [r7, lr]
 8018c88:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018c8a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8018c8e:	f82a 6b02 	strh.w	r6, [sl], #2
 8018c92:	440a      	add	r2, r1
 8018c94:	f108 38ff 	add.w	r8, r8, #4294967295
 8018c98:	e7d6      	b.n	8018c48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018c9a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018c9e:	d429      	bmi.n	8018cf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018ca0:	68ae      	ldr	r6, [r5, #8]
 8018ca2:	454e      	cmp	r6, r9
 8018ca4:	dd26      	ble.n	8018cf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018ca6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8018caa:	d423      	bmi.n	8018cf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018cac:	68e9      	ldr	r1, [r5, #12]
 8018cae:	4559      	cmp	r1, fp
 8018cb0:	dd20      	ble.n	8018cf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018cb2:	9902      	ldr	r1, [sp, #8]
 8018cb4:	fa0f fe86 	sxth.w	lr, r6
 8018cb8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8018cbc:	f06f 0101 	mvn.w	r1, #1
 8018cc0:	f81e e009 	ldrb.w	lr, [lr, r9]
 8018cc4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018cc8:	eb07 060e 	add.w	r6, r7, lr
 8018ccc:	fb01 f908 	mul.w	r9, r1, r8
 8018cd0:	f896 b002 	ldrb.w	fp, [r6, #2]
 8018cd4:	7876      	ldrb	r6, [r6, #1]
 8018cd6:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8018cda:	00f6      	lsls	r6, r6, #3
 8018cdc:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8018ce0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018ce4:	ea4b 0606 	orr.w	r6, fp, r6
 8018ce8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8018cec:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8018cf0:	f82a 6009 	strh.w	r6, [sl, r9]
 8018cf4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018cf6:	4460      	add	r0, ip
 8018cf8:	440a      	add	r2, r1
 8018cfa:	f108 38ff 	add.w	r8, r8, #4294967295
 8018cfe:	e757      	b.n	8018bb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018d00:	b005      	add	sp, #20
 8018d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d06:	bf00      	nop
 8018d08:	fffff800 	.word	0xfffff800

08018d0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d10:	b087      	sub	sp, #28
 8018d12:	468b      	mov	fp, r1
 8018d14:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8018d16:	9204      	str	r2, [sp, #16]
 8018d18:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018d1c:	9205      	str	r2, [sp, #20]
 8018d1e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8018d22:	6841      	ldr	r1, [r0, #4]
 8018d24:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8018d28:	fb01 2404 	mla	r4, r1, r4, r2
 8018d2c:	6802      	ldr	r2, [r0, #0]
 8018d2e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018d32:	f8dc 2000 	ldr.w	r2, [ip]
 8018d36:	9201      	str	r2, [sp, #4]
 8018d38:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018d3c:	3204      	adds	r2, #4
 8018d3e:	9202      	str	r2, [sp, #8]
 8018d40:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018d44:	f1bb 0f00 	cmp.w	fp, #0
 8018d48:	dc03      	bgt.n	8018d52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8018d4a:	9a04      	ldr	r2, [sp, #16]
 8018d4c:	2a00      	cmp	r2, #0
 8018d4e:	f340 8138 	ble.w	8018fc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018d52:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8018d54:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018d58:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8018d5c:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8018d60:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018d62:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018d66:	2b00      	cmp	r3, #0
 8018d68:	dd0e      	ble.n	8018d88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018d6a:	1402      	asrs	r2, r0, #16
 8018d6c:	d405      	bmi.n	8018d7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018d6e:	42ba      	cmp	r2, r7
 8018d70:	da03      	bge.n	8018d7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018d72:	140a      	asrs	r2, r1, #16
 8018d74:	d401      	bmi.n	8018d7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018d76:	42b2      	cmp	r2, r6
 8018d78:	db07      	blt.n	8018d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018d7a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018d7c:	4410      	add	r0, r2
 8018d7e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018d80:	3b01      	subs	r3, #1
 8018d82:	4411      	add	r1, r2
 8018d84:	3402      	adds	r4, #2
 8018d86:	e7ee      	b.n	8018d66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018d88:	d019      	beq.n	8018dbe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018d8a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8018d8c:	1e5a      	subs	r2, r3, #1
 8018d8e:	fb05 0502 	mla	r5, r5, r2, r0
 8018d92:	142d      	asrs	r5, r5, #16
 8018d94:	d409      	bmi.n	8018daa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018d96:	42bd      	cmp	r5, r7
 8018d98:	da07      	bge.n	8018daa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018d9a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8018d9c:	fb05 1202 	mla	r2, r5, r2, r1
 8018da0:	1412      	asrs	r2, r2, #16
 8018da2:	d402      	bmi.n	8018daa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018da4:	42b2      	cmp	r2, r6
 8018da6:	f2c0 80ac 	blt.w	8018f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018daa:	f04f 0e00 	mov.w	lr, #0
 8018dae:	eb03 020e 	add.w	r2, r3, lr
 8018db2:	2a00      	cmp	r2, #0
 8018db4:	dc3e      	bgt.n	8018e34 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018db6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018dba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018dbe:	f1bb 0f00 	cmp.w	fp, #0
 8018dc2:	f340 80fe 	ble.w	8018fc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018dc6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018dca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018dce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018dd2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018dd4:	f1bb 0b01 	subs.w	fp, fp, #1
 8018dd8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018ddc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018de0:	eeb0 6a62 	vmov.f32	s12, s5
 8018de4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018de8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018dec:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018df0:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8018df4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018df8:	eeb0 6a43 	vmov.f32	s12, s6
 8018dfc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018e00:	ee12 2a90 	vmov	r2, s5
 8018e04:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018e08:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e0c:	ee13 2a10 	vmov	r2, s6
 8018e10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e14:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018e16:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018e18:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e1c:	9a04      	ldr	r2, [sp, #16]
 8018e1e:	9314      	str	r3, [sp, #80]	@ 0x50
 8018e20:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8018e24:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018e26:	eeb0 3a67 	vmov.f32	s6, s15
 8018e2a:	bf08      	it	eq
 8018e2c:	4613      	moveq	r3, r2
 8018e2e:	eef0 2a47 	vmov.f32	s5, s14
 8018e32:	e787      	b.n	8018d44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018e34:	1406      	asrs	r6, r0, #16
 8018e36:	d45d      	bmi.n	8018ef4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018e38:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8018e3c:	42b5      	cmp	r5, r6
 8018e3e:	dd59      	ble.n	8018ef4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018e40:	140f      	asrs	r7, r1, #16
 8018e42:	d457      	bmi.n	8018ef4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018e44:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8018e48:	42ba      	cmp	r2, r7
 8018e4a:	dd53      	ble.n	8018ef4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018e4c:	9a01      	ldr	r2, [sp, #4]
 8018e4e:	b22d      	sxth	r5, r5
 8018e50:	fb07 2505 	mla	r5, r7, r5, r2
 8018e54:	5daa      	ldrb	r2, [r5, r6]
 8018e56:	9d02      	ldr	r5, [sp, #8]
 8018e58:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018e5c:	0e2e      	lsrs	r6, r5, #24
 8018e5e:	d049      	beq.n	8018ef4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018e60:	f06f 0201 	mvn.w	r2, #1
 8018e64:	fb02 f20e 	mul.w	r2, r2, lr
 8018e68:	9203      	str	r2, [sp, #12]
 8018e6a:	f834 8002 	ldrh.w	r8, [r4, r2]
 8018e6e:	9a05      	ldr	r2, [sp, #20]
 8018e70:	4356      	muls	r6, r2
 8018e72:	1c72      	adds	r2, r6, #1
 8018e74:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018e78:	1212      	asrs	r2, r2, #8
 8018e7a:	fa1f f982 	uxth.w	r9, r2
 8018e7e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8018e82:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018e86:	43d2      	mvns	r2, r2
 8018e88:	b2d2      	uxtb	r2, r2
 8018e8a:	fb16 f609 	smulbb	r6, r6, r9
 8018e8e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018e92:	fb07 6702 	mla	r7, r7, r2, r6
 8018e96:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018e9a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018e9e:	b2ed      	uxtb	r5, r5
 8018ea0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018ea4:	fa5f f888 	uxtb.w	r8, r8
 8018ea8:	fb15 f509 	smulbb	r5, r5, r9
 8018eac:	fb08 5502 	mla	r5, r8, r2, r5
 8018eb0:	b2bf      	uxth	r7, r7
 8018eb2:	fb1a fa09 	smulbb	sl, sl, r9
 8018eb6:	b2ad      	uxth	r5, r5
 8018eb8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018ebc:	fb06 a602 	mla	r6, r6, r2, sl
 8018ec0:	1c7a      	adds	r2, r7, #1
 8018ec2:	f105 0a01 	add.w	sl, r5, #1
 8018ec6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018eca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018ece:	b2b6      	uxth	r6, r6
 8018ed0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018ed4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018ed8:	ea4a 0707 	orr.w	r7, sl, r7
 8018edc:	f106 0a01 	add.w	sl, r6, #1
 8018ee0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018ee4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018ee8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018eec:	9a03      	ldr	r2, [sp, #12]
 8018eee:	ea47 070a 	orr.w	r7, r7, sl
 8018ef2:	52a7      	strh	r7, [r4, r2]
 8018ef4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018ef6:	4410      	add	r0, r2
 8018ef8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018efa:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018efe:	4411      	add	r1, r2
 8018f00:	e755      	b.n	8018dae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8018f02:	f04f 0800 	mov.w	r8, #0
 8018f06:	eba3 0208 	sub.w	r2, r3, r8
 8018f0a:	2a00      	cmp	r2, #0
 8018f0c:	f77f af53 	ble.w	8018db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8018f10:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8018f14:	9f01      	ldr	r7, [sp, #4]
 8018f16:	140a      	asrs	r2, r1, #16
 8018f18:	1405      	asrs	r5, r0, #16
 8018f1a:	fb06 7202 	mla	r2, r6, r2, r7
 8018f1e:	5d52      	ldrb	r2, [r2, r5]
 8018f20:	9d02      	ldr	r5, [sp, #8]
 8018f22:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018f26:	0e2e      	lsrs	r6, r5, #24
 8018f28:	d044      	beq.n	8018fb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8018f2a:	9a05      	ldr	r2, [sp, #20]
 8018f2c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8018f30:	4356      	muls	r6, r2
 8018f32:	1c72      	adds	r2, r6, #1
 8018f34:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018f38:	1212      	asrs	r2, r2, #8
 8018f3a:	fa1f f982 	uxth.w	r9, r2
 8018f3e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8018f42:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018f46:	43d2      	mvns	r2, r2
 8018f48:	b2d2      	uxtb	r2, r2
 8018f4a:	fb16 f609 	smulbb	r6, r6, r9
 8018f4e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018f52:	fb07 6702 	mla	r7, r7, r2, r6
 8018f56:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018f5a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018f5e:	b2ed      	uxtb	r5, r5
 8018f60:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018f64:	fa5f fe8e 	uxtb.w	lr, lr
 8018f68:	fb15 f509 	smulbb	r5, r5, r9
 8018f6c:	fb0e 5502 	mla	r5, lr, r2, r5
 8018f70:	b2bf      	uxth	r7, r7
 8018f72:	fb1a fa09 	smulbb	sl, sl, r9
 8018f76:	b2ad      	uxth	r5, r5
 8018f78:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018f7c:	fb06 a602 	mla	r6, r6, r2, sl
 8018f80:	1c7a      	adds	r2, r7, #1
 8018f82:	f105 0a01 	add.w	sl, r5, #1
 8018f86:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018f8a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018f8e:	b2b6      	uxth	r6, r6
 8018f90:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018f94:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018f98:	ea4a 0707 	orr.w	r7, sl, r7
 8018f9c:	f106 0a01 	add.w	sl, r6, #1
 8018fa0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018fa4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018fa8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018fac:	ea47 070a 	orr.w	r7, r7, sl
 8018fb0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018fb4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018fb6:	4410      	add	r0, r2
 8018fb8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018fba:	f108 0801 	add.w	r8, r8, #1
 8018fbe:	4411      	add	r1, r2
 8018fc0:	e7a1      	b.n	8018f06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8018fc2:	b007      	add	sp, #28
 8018fc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018fc8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fcc:	b085      	sub	sp, #20
 8018fce:	468b      	mov	fp, r1
 8018fd0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018fd2:	9203      	str	r2, [sp, #12]
 8018fd4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018fd8:	6841      	ldr	r1, [r0, #4]
 8018fda:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8018fde:	fb01 2404 	mla	r4, r1, r4, r2
 8018fe2:	6802      	ldr	r2, [r0, #0]
 8018fe4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018fe8:	f8de 2000 	ldr.w	r2, [lr]
 8018fec:	9200      	str	r2, [sp, #0]
 8018fee:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018ff2:	3204      	adds	r2, #4
 8018ff4:	9201      	str	r2, [sp, #4]
 8018ff6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018ffa:	f1bb 0f00 	cmp.w	fp, #0
 8018ffe:	dc03      	bgt.n	8019008 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019000:	9a03      	ldr	r2, [sp, #12]
 8019002:	2a00      	cmp	r2, #0
 8019004:	f340 8153 	ble.w	80192ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019008:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801900a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801900e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019012:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019016:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019018:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801901c:	2b00      	cmp	r3, #0
 801901e:	dd0e      	ble.n	801903e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019020:	1408      	asrs	r0, r1, #16
 8019022:	d405      	bmi.n	8019030 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019024:	42b8      	cmp	r0, r7
 8019026:	da03      	bge.n	8019030 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019028:	1410      	asrs	r0, r2, #16
 801902a:	d401      	bmi.n	8019030 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801902c:	42b0      	cmp	r0, r6
 801902e:	db07      	blt.n	8019040 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019030:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019032:	4401      	add	r1, r0
 8019034:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019036:	3b01      	subs	r3, #1
 8019038:	4402      	add	r2, r0
 801903a:	3402      	adds	r4, #2
 801903c:	e7ee      	b.n	801901c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801903e:	d017      	beq.n	8019070 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019040:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019042:	1e58      	subs	r0, r3, #1
 8019044:	fb05 1500 	mla	r5, r5, r0, r1
 8019048:	142d      	asrs	r5, r5, #16
 801904a:	d409      	bmi.n	8019060 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801904c:	42bd      	cmp	r5, r7
 801904e:	da07      	bge.n	8019060 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019050:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019052:	fb05 2000 	mla	r0, r5, r0, r2
 8019056:	1400      	asrs	r0, r0, #16
 8019058:	d402      	bmi.n	8019060 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801905a:	42b0      	cmp	r0, r6
 801905c:	f2c0 80bc 	blt.w	80191d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019060:	2600      	movs	r6, #0
 8019062:	1998      	adds	r0, r3, r6
 8019064:	2800      	cmp	r0, #0
 8019066:	dc3e      	bgt.n	80190e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019068:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801906c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019070:	f1bb 0f00 	cmp.w	fp, #0
 8019074:	f340 811b 	ble.w	80192ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019078:	ee30 0a04 	vadd.f32	s0, s0, s8
 801907c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019080:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019084:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019086:	f1bb 0b01 	subs.w	fp, fp, #1
 801908a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801908e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019092:	eeb0 6a62 	vmov.f32	s12, s5
 8019096:	ee61 7a27 	vmul.f32	s15, s2, s15
 801909a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801909e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80190a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80190a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80190aa:	eeb0 6a43 	vmov.f32	s12, s6
 80190ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80190b2:	ee12 2a90 	vmov	r2, s5
 80190b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80190ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80190be:	ee13 2a10 	vmov	r2, s6
 80190c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80190c6:	9311      	str	r3, [sp, #68]	@ 0x44
 80190c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80190ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80190ce:	9a03      	ldr	r2, [sp, #12]
 80190d0:	9312      	str	r3, [sp, #72]	@ 0x48
 80190d2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80190d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80190d8:	eeb0 3a67 	vmov.f32	s6, s15
 80190dc:	bf08      	it	eq
 80190de:	4613      	moveq	r3, r2
 80190e0:	eef0 2a47 	vmov.f32	s5, s14
 80190e4:	e789      	b.n	8018ffa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80190e6:	140f      	asrs	r7, r1, #16
 80190e8:	d426      	bmi.n	8019138 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80190ea:	f8de 5008 	ldr.w	r5, [lr, #8]
 80190ee:	42bd      	cmp	r5, r7
 80190f0:	dd22      	ble.n	8019138 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80190f2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80190f6:	d41f      	bmi.n	8019138 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80190f8:	f8de 000c 	ldr.w	r0, [lr, #12]
 80190fc:	4560      	cmp	r0, ip
 80190fe:	dd1b      	ble.n	8019138 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019100:	9800      	ldr	r0, [sp, #0]
 8019102:	b22d      	sxth	r5, r5
 8019104:	fb0c 0505 	mla	r5, ip, r5, r0
 8019108:	5de8      	ldrb	r0, [r5, r7]
 801910a:	9d01      	ldr	r5, [sp, #4]
 801910c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8019110:	0e07      	lsrs	r7, r0, #24
 8019112:	2fff      	cmp	r7, #255	@ 0xff
 8019114:	d116      	bne.n	8019144 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019116:	f06f 0501 	mvn.w	r5, #1
 801911a:	fb05 f706 	mul.w	r7, r5, r6
 801911e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8019122:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019126:	0945      	lsrs	r5, r0, #5
 8019128:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801912c:	ea4c 0505 	orr.w	r5, ip, r5
 8019130:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019134:	4305      	orrs	r5, r0
 8019136:	53e5      	strh	r5, [r4, r7]
 8019138:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801913a:	4401      	add	r1, r0
 801913c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801913e:	3e01      	subs	r6, #1
 8019140:	4402      	add	r2, r0
 8019142:	e78e      	b.n	8019062 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019144:	b2fd      	uxtb	r5, r7
 8019146:	2f00      	cmp	r7, #0
 8019148:	d0f6      	beq.n	8019138 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801914a:	f06f 0701 	mvn.w	r7, #1
 801914e:	4377      	muls	r7, r6
 8019150:	fa1f f985 	uxth.w	r9, r5
 8019154:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019158:	9702      	str	r7, [sp, #8]
 801915a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801915e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019162:	43ed      	mvns	r5, r5
 8019164:	b2ed      	uxtb	r5, r5
 8019166:	fb17 f709 	smulbb	r7, r7, r9
 801916a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801916e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019172:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019176:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801917a:	b2c0      	uxtb	r0, r0
 801917c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019180:	fa5f f888 	uxtb.w	r8, r8
 8019184:	fb10 f009 	smulbb	r0, r0, r9
 8019188:	fb08 0005 	mla	r0, r8, r5, r0
 801918c:	b280      	uxth	r0, r0
 801918e:	fa1f fc8c 	uxth.w	ip, ip
 8019192:	fb1a fa09 	smulbb	sl, sl, r9
 8019196:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801919a:	fb07 a705 	mla	r7, r7, r5, sl
 801919e:	f100 0a01 	add.w	sl, r0, #1
 80191a2:	f10c 0501 	add.w	r5, ip, #1
 80191a6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80191aa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80191ae:	b2bf      	uxth	r7, r7
 80191b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80191b4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80191b8:	ea4a 0c0c 	orr.w	ip, sl, ip
 80191bc:	f107 0a01 	add.w	sl, r7, #1
 80191c0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80191c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80191c8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80191cc:	9802      	ldr	r0, [sp, #8]
 80191ce:	ea4c 0c0a 	orr.w	ip, ip, sl
 80191d2:	f824 c000 	strh.w	ip, [r4, r0]
 80191d6:	e7af      	b.n	8019138 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80191d8:	f04f 0800 	mov.w	r8, #0
 80191dc:	eba3 0008 	sub.w	r0, r3, r8
 80191e0:	2800      	cmp	r0, #0
 80191e2:	f77f af41 	ble.w	8019068 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80191e6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80191ea:	9f00      	ldr	r7, [sp, #0]
 80191ec:	1410      	asrs	r0, r2, #16
 80191ee:	140d      	asrs	r5, r1, #16
 80191f0:	fb06 7000 	mla	r0, r6, r0, r7
 80191f4:	5d40      	ldrb	r0, [r0, r5]
 80191f6:	9d01      	ldr	r5, [sp, #4]
 80191f8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80191fc:	0e2e      	lsrs	r6, r5, #24
 80191fe:	2eff      	cmp	r6, #255	@ 0xff
 8019200:	d112      	bne.n	8019228 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8019202:	482c      	ldr	r0, [pc, #176]	@ (80192b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019204:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019208:	0968      	lsrs	r0, r5, #5
 801920a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801920e:	4330      	orrs	r0, r6
 8019210:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019214:	4328      	orrs	r0, r5
 8019216:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801921a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801921c:	4401      	add	r1, r0
 801921e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019220:	f108 0801 	add.w	r8, r8, #1
 8019224:	4402      	add	r2, r0
 8019226:	e7d9      	b.n	80191dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019228:	b2f0      	uxtb	r0, r6
 801922a:	2e00      	cmp	r6, #0
 801922c:	d0f5      	beq.n	801921a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801922e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8019232:	fa1f f980 	uxth.w	r9, r0
 8019236:	ea4f 272c 	mov.w	r7, ip, asr #8
 801923a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801923e:	43c0      	mvns	r0, r0
 8019240:	b2c0      	uxtb	r0, r0
 8019242:	fb16 f609 	smulbb	r6, r6, r9
 8019246:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801924a:	fb07 6700 	mla	r7, r7, r0, r6
 801924e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019252:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019256:	b2ed      	uxtb	r5, r5
 8019258:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801925c:	fa5f fc8c 	uxtb.w	ip, ip
 8019260:	fb15 f509 	smulbb	r5, r5, r9
 8019264:	fb0c 5500 	mla	r5, ip, r0, r5
 8019268:	b2bf      	uxth	r7, r7
 801926a:	fb1a fa09 	smulbb	sl, sl, r9
 801926e:	b2ad      	uxth	r5, r5
 8019270:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019274:	fb06 a600 	mla	r6, r6, r0, sl
 8019278:	1c78      	adds	r0, r7, #1
 801927a:	f105 0a01 	add.w	sl, r5, #1
 801927e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019282:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019286:	b2b6      	uxth	r6, r6
 8019288:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801928c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019290:	ea4a 0707 	orr.w	r7, sl, r7
 8019294:	f106 0a01 	add.w	sl, r6, #1
 8019298:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801929c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80192a0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80192a4:	ea47 070a 	orr.w	r7, r7, sl
 80192a8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80192ac:	e7b5      	b.n	801921a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80192ae:	b005      	add	sp, #20
 80192b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80192b4:	fffff800 	.word	0xfffff800

080192b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80192b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192bc:	b087      	sub	sp, #28
 80192be:	468b      	mov	fp, r1
 80192c0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80192c2:	9204      	str	r2, [sp, #16]
 80192c4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80192c8:	9205      	str	r2, [sp, #20]
 80192ca:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80192ce:	6861      	ldr	r1, [r4, #4]
 80192d0:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80192d4:	fb01 2000 	mla	r0, r1, r0, r2
 80192d8:	6822      	ldr	r2, [r4, #0]
 80192da:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80192de:	f8de 2000 	ldr.w	r2, [lr]
 80192e2:	9201      	str	r2, [sp, #4]
 80192e4:	f8de 2004 	ldr.w	r2, [lr, #4]
 80192e8:	9202      	str	r2, [sp, #8]
 80192ea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80192ee:	f1bb 0f00 	cmp.w	fp, #0
 80192f2:	dc03      	bgt.n	80192fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80192f4:	9a04      	ldr	r2, [sp, #16]
 80192f6:	2a00      	cmp	r2, #0
 80192f8:	f340 8142 	ble.w	8019580 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80192fc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80192fe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019302:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019306:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801930a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801930c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019310:	2b00      	cmp	r3, #0
 8019312:	dd0e      	ble.n	8019332 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019314:	140c      	asrs	r4, r1, #16
 8019316:	d405      	bmi.n	8019324 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019318:	42bc      	cmp	r4, r7
 801931a:	da03      	bge.n	8019324 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801931c:	1414      	asrs	r4, r2, #16
 801931e:	d401      	bmi.n	8019324 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019320:	42b4      	cmp	r4, r6
 8019322:	db07      	blt.n	8019334 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019324:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019326:	4421      	add	r1, r4
 8019328:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801932a:	3b01      	subs	r3, #1
 801932c:	4422      	add	r2, r4
 801932e:	3002      	adds	r0, #2
 8019330:	e7ee      	b.n	8019310 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019332:	d019      	beq.n	8019368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019334:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019336:	1e5c      	subs	r4, r3, #1
 8019338:	fb05 1504 	mla	r5, r5, r4, r1
 801933c:	142d      	asrs	r5, r5, #16
 801933e:	d409      	bmi.n	8019354 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019340:	42bd      	cmp	r5, r7
 8019342:	da07      	bge.n	8019354 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019344:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019346:	fb05 2404 	mla	r4, r5, r4, r2
 801934a:	1424      	asrs	r4, r4, #16
 801934c:	d402      	bmi.n	8019354 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801934e:	42b4      	cmp	r4, r6
 8019350:	f2c0 80b1 	blt.w	80194b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019354:	f04f 0800 	mov.w	r8, #0
 8019358:	eb03 0408 	add.w	r4, r3, r8
 801935c:	2c00      	cmp	r4, #0
 801935e:	dc3e      	bgt.n	80193de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019360:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019364:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019368:	f1bb 0f00 	cmp.w	fp, #0
 801936c:	f340 8108 	ble.w	8019580 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019370:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019374:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019378:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801937c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801937e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019382:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019386:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801938a:	eeb0 6a62 	vmov.f32	s12, s5
 801938e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019392:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019396:	ee77 2a62 	vsub.f32	s5, s14, s5
 801939a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801939e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80193a2:	eeb0 6a43 	vmov.f32	s12, s6
 80193a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80193aa:	ee12 2a90 	vmov	r2, s5
 80193ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80193b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80193b6:	ee13 2a10 	vmov	r2, s6
 80193ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80193be:	9313      	str	r3, [sp, #76]	@ 0x4c
 80193c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80193c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80193c6:	9a04      	ldr	r2, [sp, #16]
 80193c8:	9314      	str	r3, [sp, #80]	@ 0x50
 80193ca:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80193ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80193d0:	eeb0 3a67 	vmov.f32	s6, s15
 80193d4:	bf08      	it	eq
 80193d6:	4613      	moveq	r3, r2
 80193d8:	eef0 2a47 	vmov.f32	s5, s14
 80193dc:	e787      	b.n	80192ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80193de:	140e      	asrs	r6, r1, #16
 80193e0:	d462      	bmi.n	80194a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80193e2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80193e6:	42b5      	cmp	r5, r6
 80193e8:	dd5e      	ble.n	80194a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80193ea:	1417      	asrs	r7, r2, #16
 80193ec:	d45c      	bmi.n	80194a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80193ee:	f8de 400c 	ldr.w	r4, [lr, #12]
 80193f2:	42bc      	cmp	r4, r7
 80193f4:	dd58      	ble.n	80194a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80193f6:	b22d      	sxth	r5, r5
 80193f8:	fb07 6505 	mla	r5, r7, r5, r6
 80193fc:	9c02      	ldr	r4, [sp, #8]
 80193fe:	5d66      	ldrb	r6, [r4, r5]
 8019400:	2e00      	cmp	r6, #0
 8019402:	d051      	beq.n	80194a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019404:	9c01      	ldr	r4, [sp, #4]
 8019406:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801940a:	f06f 0401 	mvn.w	r4, #1
 801940e:	fb04 f408 	mul.w	r4, r4, r8
 8019412:	9403      	str	r4, [sp, #12]
 8019414:	5b05      	ldrh	r5, [r0, r4]
 8019416:	9c05      	ldr	r4, [sp, #20]
 8019418:	4366      	muls	r6, r4
 801941a:	1c74      	adds	r4, r6, #1
 801941c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019420:	1224      	asrs	r4, r4, #8
 8019422:	b2a7      	uxth	r7, r4
 8019424:	122e      	asrs	r6, r5, #8
 8019426:	43e4      	mvns	r4, r4
 8019428:	b2e4      	uxtb	r4, r4
 801942a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801942e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019432:	fb16 f604 	smulbb	r6, r6, r4
 8019436:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801943a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801943e:	00ed      	lsls	r5, r5, #3
 8019440:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019444:	b2ed      	uxtb	r5, r5
 8019446:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801944a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801944e:	fb15 f504 	smulbb	r5, r5, r4
 8019452:	fa5f f989 	uxtb.w	r9, r9
 8019456:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801945a:	fb09 5507 	mla	r5, r9, r7, r5
 801945e:	fb1a fa04 	smulbb	sl, sl, r4
 8019462:	fa1f fc8c 	uxth.w	ip, ip
 8019466:	b2ad      	uxth	r5, r5
 8019468:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801946c:	fb06 a607 	mla	r6, r6, r7, sl
 8019470:	f10c 0401 	add.w	r4, ip, #1
 8019474:	f105 0a01 	add.w	sl, r5, #1
 8019478:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801947c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019480:	b2b6      	uxth	r6, r6
 8019482:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019486:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801948a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801948e:	f106 0a01 	add.w	sl, r6, #1
 8019492:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019496:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801949a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801949e:	9c03      	ldr	r4, [sp, #12]
 80194a0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80194a4:	f820 c004 	strh.w	ip, [r0, r4]
 80194a8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80194aa:	4421      	add	r1, r4
 80194ac:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80194ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80194b2:	4422      	add	r2, r4
 80194b4:	e750      	b.n	8019358 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80194b6:	f04f 0900 	mov.w	r9, #0
 80194ba:	eba3 0409 	sub.w	r4, r3, r9
 80194be:	2c00      	cmp	r4, #0
 80194c0:	f77f af4e 	ble.w	8019360 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80194c4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80194c8:	140d      	asrs	r5, r1, #16
 80194ca:	1414      	asrs	r4, r2, #16
 80194cc:	fb06 5404 	mla	r4, r6, r4, r5
 80194d0:	9d02      	ldr	r5, [sp, #8]
 80194d2:	5d2e      	ldrb	r6, [r5, r4]
 80194d4:	2e00      	cmp	r6, #0
 80194d6:	d04c      	beq.n	8019572 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80194d8:	9d01      	ldr	r5, [sp, #4]
 80194da:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80194de:	9c05      	ldr	r4, [sp, #20]
 80194e0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80194e4:	4366      	muls	r6, r4
 80194e6:	1c74      	adds	r4, r6, #1
 80194e8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80194ec:	1224      	asrs	r4, r4, #8
 80194ee:	b2a7      	uxth	r7, r4
 80194f0:	122e      	asrs	r6, r5, #8
 80194f2:	43e4      	mvns	r4, r4
 80194f4:	b2e4      	uxtb	r4, r4
 80194f6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80194fa:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80194fe:	fb16 f604 	smulbb	r6, r6, r4
 8019502:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019506:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801950a:	00ed      	lsls	r5, r5, #3
 801950c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019510:	b2ed      	uxtb	r5, r5
 8019512:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019516:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801951a:	fb15 f504 	smulbb	r5, r5, r4
 801951e:	fa5f f888 	uxtb.w	r8, r8
 8019522:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019526:	fb08 5507 	mla	r5, r8, r7, r5
 801952a:	fb1a fa04 	smulbb	sl, sl, r4
 801952e:	fa1f fc8c 	uxth.w	ip, ip
 8019532:	b2ad      	uxth	r5, r5
 8019534:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019538:	fb06 a607 	mla	r6, r6, r7, sl
 801953c:	f10c 0401 	add.w	r4, ip, #1
 8019540:	f105 0a01 	add.w	sl, r5, #1
 8019544:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019548:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801954c:	b2b6      	uxth	r6, r6
 801954e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019552:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019556:	ea4a 0c0c 	orr.w	ip, sl, ip
 801955a:	f106 0a01 	add.w	sl, r6, #1
 801955e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019562:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019566:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801956a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801956e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019572:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019574:	4421      	add	r1, r4
 8019576:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019578:	f109 0901 	add.w	r9, r9, #1
 801957c:	4422      	add	r2, r4
 801957e:	e79c      	b.n	80194ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019580:	b007      	add	sp, #28
 8019582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019586 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019586:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801958a:	b085      	sub	sp, #20
 801958c:	468b      	mov	fp, r1
 801958e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019590:	9203      	str	r2, [sp, #12]
 8019592:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8019596:	6861      	ldr	r1, [r4, #4]
 8019598:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801959c:	fb01 2000 	mla	r0, r1, r0, r2
 80195a0:	6822      	ldr	r2, [r4, #0]
 80195a2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80195a6:	f8d8 2000 	ldr.w	r2, [r8]
 80195aa:	9200      	str	r2, [sp, #0]
 80195ac:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80195b0:	9201      	str	r2, [sp, #4]
 80195b2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80195b6:	f1bb 0f00 	cmp.w	fp, #0
 80195ba:	dc03      	bgt.n	80195c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80195bc:	9a03      	ldr	r2, [sp, #12]
 80195be:	2a00      	cmp	r2, #0
 80195c0:	f340 8146 	ble.w	8019850 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80195c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80195c6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80195ca:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80195ce:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80195d2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80195d4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80195d8:	2b00      	cmp	r3, #0
 80195da:	dd0e      	ble.n	80195fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80195dc:	140c      	asrs	r4, r1, #16
 80195de:	d405      	bmi.n	80195ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80195e0:	42bc      	cmp	r4, r7
 80195e2:	da03      	bge.n	80195ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80195e4:	1414      	asrs	r4, r2, #16
 80195e6:	d401      	bmi.n	80195ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80195e8:	42b4      	cmp	r4, r6
 80195ea:	db07      	blt.n	80195fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80195ec:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80195ee:	4421      	add	r1, r4
 80195f0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80195f2:	3b01      	subs	r3, #1
 80195f4:	4422      	add	r2, r4
 80195f6:	3002      	adds	r0, #2
 80195f8:	e7ee      	b.n	80195d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80195fa:	d017      	beq.n	801962c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80195fc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80195fe:	1e5c      	subs	r4, r3, #1
 8019600:	fb05 1504 	mla	r5, r5, r4, r1
 8019604:	142d      	asrs	r5, r5, #16
 8019606:	d409      	bmi.n	801961c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019608:	42bd      	cmp	r5, r7
 801960a:	da07      	bge.n	801961c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801960c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801960e:	fb05 2404 	mla	r4, r5, r4, r2
 8019612:	1424      	asrs	r4, r4, #16
 8019614:	d402      	bmi.n	801961c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019616:	42b4      	cmp	r4, r6
 8019618:	f2c0 80b3 	blt.w	8019782 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801961c:	2600      	movs	r6, #0
 801961e:	199c      	adds	r4, r3, r6
 8019620:	2c00      	cmp	r4, #0
 8019622:	dc3e      	bgt.n	80196a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019624:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019628:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801962c:	f1bb 0f00 	cmp.w	fp, #0
 8019630:	f340 810e 	ble.w	8019850 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019634:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019638:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801963c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019640:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019642:	f1bb 0b01 	subs.w	fp, fp, #1
 8019646:	ee31 1a05 	vadd.f32	s2, s2, s10
 801964a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801964e:	eeb0 6a62 	vmov.f32	s12, s5
 8019652:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019656:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801965a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801965e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8019662:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019666:	eeb0 6a43 	vmov.f32	s12, s6
 801966a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801966e:	ee12 2a90 	vmov	r2, s5
 8019672:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019676:	fb92 f3f3 	sdiv	r3, r2, r3
 801967a:	ee13 2a10 	vmov	r2, s6
 801967e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019682:	9311      	str	r3, [sp, #68]	@ 0x44
 8019684:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019686:	fb92 f3f3 	sdiv	r3, r2, r3
 801968a:	9a03      	ldr	r2, [sp, #12]
 801968c:	9312      	str	r3, [sp, #72]	@ 0x48
 801968e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8019692:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019694:	eeb0 3a67 	vmov.f32	s6, s15
 8019698:	bf08      	it	eq
 801969a:	4613      	moveq	r3, r2
 801969c:	eef0 2a47 	vmov.f32	s5, s14
 80196a0:	e789      	b.n	80195b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80196a2:	140f      	asrs	r7, r1, #16
 80196a4:	d418      	bmi.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80196a6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80196aa:	42bd      	cmp	r5, r7
 80196ac:	dd14      	ble.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80196ae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80196b2:	d411      	bmi.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80196b4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80196b8:	4564      	cmp	r4, ip
 80196ba:	dd0d      	ble.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80196bc:	b22d      	sxth	r5, r5
 80196be:	fb0c 7505 	mla	r5, ip, r5, r7
 80196c2:	9c01      	ldr	r4, [sp, #4]
 80196c4:	5d64      	ldrb	r4, [r4, r5]
 80196c6:	2cff      	cmp	r4, #255	@ 0xff
 80196c8:	d10c      	bne.n	80196e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80196ca:	9c00      	ldr	r4, [sp, #0]
 80196cc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80196d0:	f06f 0401 	mvn.w	r4, #1
 80196d4:	4374      	muls	r4, r6
 80196d6:	5305      	strh	r5, [r0, r4]
 80196d8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80196da:	4421      	add	r1, r4
 80196dc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80196de:	3e01      	subs	r6, #1
 80196e0:	4422      	add	r2, r4
 80196e2:	e79c      	b.n	801961e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80196e4:	2c00      	cmp	r4, #0
 80196e6:	d0f7      	beq.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80196e8:	9f00      	ldr	r7, [sp, #0]
 80196ea:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80196ee:	f06f 0501 	mvn.w	r5, #1
 80196f2:	4375      	muls	r5, r6
 80196f4:	9502      	str	r5, [sp, #8]
 80196f6:	5b45      	ldrh	r5, [r0, r5]
 80196f8:	fa1f fc84 	uxth.w	ip, r4
 80196fc:	122f      	asrs	r7, r5, #8
 80196fe:	43e4      	mvns	r4, r4
 8019700:	b2e4      	uxtb	r4, r4
 8019702:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019706:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801970a:	fb17 f704 	smulbb	r7, r7, r4
 801970e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019712:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8019716:	00ed      	lsls	r5, r5, #3
 8019718:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801971c:	b2ed      	uxtb	r5, r5
 801971e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019722:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019726:	fb15 f504 	smulbb	r5, r5, r4
 801972a:	fa5f f989 	uxtb.w	r9, r9
 801972e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019732:	fb09 550c 	mla	r5, r9, ip, r5
 8019736:	fb1a fa04 	smulbb	sl, sl, r4
 801973a:	fa1f fe8e 	uxth.w	lr, lr
 801973e:	b2ad      	uxth	r5, r5
 8019740:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019744:	fb07 a70c 	mla	r7, r7, ip, sl
 8019748:	f10e 0401 	add.w	r4, lr, #1
 801974c:	f105 0a01 	add.w	sl, r5, #1
 8019750:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019754:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019758:	b2bf      	uxth	r7, r7
 801975a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801975e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8019762:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019766:	f107 0a01 	add.w	sl, r7, #1
 801976a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801976e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019772:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019776:	9c02      	ldr	r4, [sp, #8]
 8019778:	ea4e 0e0a 	orr.w	lr, lr, sl
 801977c:	f820 e004 	strh.w	lr, [r0, r4]
 8019780:	e7aa      	b.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019782:	f04f 0900 	mov.w	r9, #0
 8019786:	eba3 0409 	sub.w	r4, r3, r9
 801978a:	2c00      	cmp	r4, #0
 801978c:	f77f af4a 	ble.w	8019624 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019790:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019794:	1414      	asrs	r4, r2, #16
 8019796:	140d      	asrs	r5, r1, #16
 8019798:	fb06 5504 	mla	r5, r6, r4, r5
 801979c:	9c01      	ldr	r4, [sp, #4]
 801979e:	5d64      	ldrb	r4, [r4, r5]
 80197a0:	2cff      	cmp	r4, #255	@ 0xff
 80197a2:	d10b      	bne.n	80197bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80197a4:	9c00      	ldr	r4, [sp, #0]
 80197a6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80197aa:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80197ae:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80197b0:	4421      	add	r1, r4
 80197b2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80197b4:	f109 0901 	add.w	r9, r9, #1
 80197b8:	4422      	add	r2, r4
 80197ba:	e7e4      	b.n	8019786 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80197bc:	2c00      	cmp	r4, #0
 80197be:	d0f6      	beq.n	80197ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80197c0:	9e00      	ldr	r6, [sp, #0]
 80197c2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80197c6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80197ca:	b2a7      	uxth	r7, r4
 80197cc:	122e      	asrs	r6, r5, #8
 80197ce:	43e4      	mvns	r4, r4
 80197d0:	b2e4      	uxtb	r4, r4
 80197d2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80197d6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80197da:	fb16 f604 	smulbb	r6, r6, r4
 80197de:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80197e2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80197e6:	00ed      	lsls	r5, r5, #3
 80197e8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80197ec:	b2ed      	uxtb	r5, r5
 80197ee:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80197f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80197f6:	fb15 f504 	smulbb	r5, r5, r4
 80197fa:	fa5f fe8e 	uxtb.w	lr, lr
 80197fe:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019802:	fb0e 5507 	mla	r5, lr, r7, r5
 8019806:	fb1a fa04 	smulbb	sl, sl, r4
 801980a:	fa1f fc8c 	uxth.w	ip, ip
 801980e:	b2ad      	uxth	r5, r5
 8019810:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019814:	fb06 a607 	mla	r6, r6, r7, sl
 8019818:	f10c 0401 	add.w	r4, ip, #1
 801981c:	f105 0a01 	add.w	sl, r5, #1
 8019820:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019824:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019828:	b2b6      	uxth	r6, r6
 801982a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801982e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019832:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019836:	f106 0a01 	add.w	sl, r6, #1
 801983a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801983e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019842:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019846:	ea4c 0c0a 	orr.w	ip, ip, sl
 801984a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801984e:	e7ae      	b.n	80197ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019850:	b005      	add	sp, #20
 8019852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019856 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019856:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801985a:	b085      	sub	sp, #20
 801985c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801985e:	9203      	str	r2, [sp, #12]
 8019860:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8019864:	9201      	str	r2, [sp, #4]
 8019866:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801986a:	9100      	str	r1, [sp, #0]
 801986c:	6841      	ldr	r1, [r0, #4]
 801986e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8019872:	fb01 2404 	mla	r4, r1, r4, r2
 8019876:	6802      	ldr	r2, [r0, #0]
 8019878:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801987c:	f8de 2000 	ldr.w	r2, [lr]
 8019880:	9202      	str	r2, [sp, #8]
 8019882:	9a01      	ldr	r2, [sp, #4]
 8019884:	43d6      	mvns	r6, r2
 8019886:	b2f6      	uxtb	r6, r6
 8019888:	9a00      	ldr	r2, [sp, #0]
 801988a:	2a00      	cmp	r2, #0
 801988c:	dc03      	bgt.n	8019896 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801988e:	9a03      	ldr	r2, [sp, #12]
 8019890:	2a00      	cmp	r2, #0
 8019892:	f340 8124 	ble.w	8019ade <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019896:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019898:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801989c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80198a0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80198a4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80198a6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80198aa:	2b00      	cmp	r3, #0
 80198ac:	dd0e      	ble.n	80198cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80198ae:	1408      	asrs	r0, r1, #16
 80198b0:	d405      	bmi.n	80198be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80198b2:	4560      	cmp	r0, ip
 80198b4:	da03      	bge.n	80198be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80198b6:	1410      	asrs	r0, r2, #16
 80198b8:	d401      	bmi.n	80198be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80198ba:	42b8      	cmp	r0, r7
 80198bc:	db07      	blt.n	80198ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80198be:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80198c0:	4401      	add	r1, r0
 80198c2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80198c4:	3b01      	subs	r3, #1
 80198c6:	4402      	add	r2, r0
 80198c8:	3402      	adds	r4, #2
 80198ca:	e7ee      	b.n	80198aa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80198cc:	d06e      	beq.n	80199ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80198ce:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80198d0:	1e58      	subs	r0, r3, #1
 80198d2:	fb05 1500 	mla	r5, r5, r0, r1
 80198d6:	142d      	asrs	r5, r5, #16
 80198d8:	d45c      	bmi.n	8019994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80198da:	4565      	cmp	r5, ip
 80198dc:	da5a      	bge.n	8019994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80198de:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80198e0:	fb05 2000 	mla	r0, r5, r0, r2
 80198e4:	1400      	asrs	r0, r0, #16
 80198e6:	d455      	bmi.n	8019994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80198e8:	42b8      	cmp	r0, r7
 80198ea:	da53      	bge.n	8019994 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80198ec:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80198f0:	4699      	mov	r9, r3
 80198f2:	46a2      	mov	sl, r4
 80198f4:	f1b9 0f00 	cmp.w	r9, #0
 80198f8:	dd54      	ble.n	80199a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80198fa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80198fe:	140d      	asrs	r5, r1, #16
 8019900:	1410      	asrs	r0, r2, #16
 8019902:	fb07 5000 	mla	r0, r7, r0, r5
 8019906:	9d02      	ldr	r5, [sp, #8]
 8019908:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801990c:	f8ba 5000 	ldrh.w	r5, [sl]
 8019910:	122f      	asrs	r7, r5, #8
 8019912:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019916:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801991a:	fb17 f706 	smulbb	r7, r7, r6
 801991e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019922:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019926:	00ed      	lsls	r5, r5, #3
 8019928:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801992c:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8019930:	10c7      	asrs	r7, r0, #3
 8019932:	b2ed      	uxtb	r5, r5
 8019934:	00c0      	lsls	r0, r0, #3
 8019936:	fb18 f806 	smulbb	r8, r8, r6
 801993a:	fb15 f506 	smulbb	r5, r5, r6
 801993e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019942:	b2c0      	uxtb	r0, r0
 8019944:	fa1f fc8c 	uxth.w	ip, ip
 8019948:	fb07 870b 	mla	r7, r7, fp, r8
 801994c:	fb00 500b 	mla	r0, r0, fp, r5
 8019950:	b280      	uxth	r0, r0
 8019952:	b2bf      	uxth	r7, r7
 8019954:	f10c 0501 	add.w	r5, ip, #1
 8019958:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801995c:	f107 0801 	add.w	r8, r7, #1
 8019960:	1c45      	adds	r5, r0, #1
 8019962:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019966:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801996a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801996c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019970:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019974:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019978:	ea45 0c0c 	orr.w	ip, r5, ip
 801997c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8019980:	4401      	add	r1, r0
 8019982:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019984:	ea4c 0c08 	orr.w	ip, ip, r8
 8019988:	f82a cb02 	strh.w	ip, [sl], #2
 801998c:	4402      	add	r2, r0
 801998e:	f109 39ff 	add.w	r9, r9, #4294967295
 8019992:	e7af      	b.n	80198f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019994:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8019998:	f04f 0800 	mov.w	r8, #0
 801999c:	eb03 0008 	add.w	r0, r3, r8
 80199a0:	2800      	cmp	r0, #0
 80199a2:	dc41      	bgt.n	8019a28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80199a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80199a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80199ac:	9b00      	ldr	r3, [sp, #0]
 80199ae:	2b00      	cmp	r3, #0
 80199b0:	f340 8095 	ble.w	8019ade <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80199b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80199b8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80199bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80199c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80199c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80199c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80199ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80199ce:	eef0 6a62 	vmov.f32	s13, s5
 80199d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80199d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80199da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80199de:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80199e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80199e6:	eef0 6a43 	vmov.f32	s13, s6
 80199ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80199ee:	ee12 2a90 	vmov	r2, s5
 80199f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80199f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80199fa:	ee13 2a10 	vmov	r2, s6
 80199fe:	9311      	str	r3, [sp, #68]	@ 0x44
 8019a00:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019a02:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a06:	9312      	str	r3, [sp, #72]	@ 0x48
 8019a08:	9b00      	ldr	r3, [sp, #0]
 8019a0a:	9a03      	ldr	r2, [sp, #12]
 8019a0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a10:	3b01      	subs	r3, #1
 8019a12:	9300      	str	r3, [sp, #0]
 8019a14:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8019a18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019a1a:	eeb0 3a67 	vmov.f32	s6, s15
 8019a1e:	bf08      	it	eq
 8019a20:	4613      	moveq	r3, r2
 8019a22:	eef0 2a47 	vmov.f32	s5, s14
 8019a26:	e72f      	b.n	8019888 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019a28:	140f      	asrs	r7, r1, #16
 8019a2a:	d451      	bmi.n	8019ad0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019a2c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019a30:	42bd      	cmp	r5, r7
 8019a32:	dd4d      	ble.n	8019ad0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019a34:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019a38:	d44a      	bmi.n	8019ad0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019a3a:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019a3e:	4560      	cmp	r0, ip
 8019a40:	dd46      	ble.n	8019ad0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019a42:	b22d      	sxth	r5, r5
 8019a44:	fb0c 7505 	mla	r5, ip, r5, r7
 8019a48:	9802      	ldr	r0, [sp, #8]
 8019a4a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8019a4e:	f06f 0501 	mvn.w	r5, #1
 8019a52:	fb05 fb08 	mul.w	fp, r5, r8
 8019a56:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019a5a:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019a5e:	122f      	asrs	r7, r5, #8
 8019a60:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019a64:	fb17 f706 	smulbb	r7, r7, r6
 8019a68:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019a6c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019a70:	00ed      	lsls	r5, r5, #3
 8019a72:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019a76:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8019a7a:	10c7      	asrs	r7, r0, #3
 8019a7c:	b2ed      	uxtb	r5, r5
 8019a7e:	00c0      	lsls	r0, r0, #3
 8019a80:	fb19 f906 	smulbb	r9, r9, r6
 8019a84:	fb15 f506 	smulbb	r5, r5, r6
 8019a88:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019a8c:	b2c0      	uxtb	r0, r0
 8019a8e:	fa1f fc8c 	uxth.w	ip, ip
 8019a92:	fb07 970a 	mla	r7, r7, sl, r9
 8019a96:	fb00 500a 	mla	r0, r0, sl, r5
 8019a9a:	b2bf      	uxth	r7, r7
 8019a9c:	b280      	uxth	r0, r0
 8019a9e:	f10c 0501 	add.w	r5, ip, #1
 8019aa2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019aa6:	f107 0901 	add.w	r9, r7, #1
 8019aaa:	1c45      	adds	r5, r0, #1
 8019aac:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019ab0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019ab4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019ab8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019abc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019ac0:	ea45 0c0c 	orr.w	ip, r5, ip
 8019ac4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019ac8:	ea4c 0c09 	orr.w	ip, ip, r9
 8019acc:	f824 c00b 	strh.w	ip, [r4, fp]
 8019ad0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019ad2:	4401      	add	r1, r0
 8019ad4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019ad6:	f108 38ff 	add.w	r8, r8, #4294967295
 8019ada:	4402      	add	r2, r0
 8019adc:	e75e      	b.n	801999c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019ade:	b005      	add	sp, #20
 8019ae0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ae4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ae8:	b085      	sub	sp, #20
 8019aea:	4693      	mov	fp, r2
 8019aec:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8019aee:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8019af0:	6870      	ldr	r0, [r6, #4]
 8019af2:	9101      	str	r1, [sp, #4]
 8019af4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019af8:	fb00 2404 	mla	r4, r0, r4, r2
 8019afc:	6832      	ldr	r2, [r6, #0]
 8019afe:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8019b02:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019b06:	682a      	ldr	r2, [r5, #0]
 8019b08:	9202      	str	r2, [sp, #8]
 8019b0a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019b0e:	9a01      	ldr	r2, [sp, #4]
 8019b10:	2a00      	cmp	r2, #0
 8019b12:	dc03      	bgt.n	8019b1c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019b14:	f1bb 0f00 	cmp.w	fp, #0
 8019b18:	f340 809a 	ble.w	8019c50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019b1c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019b1e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019b22:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019b26:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019b2a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019b2c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019b30:	2b00      	cmp	r3, #0
 8019b32:	dd0c      	ble.n	8019b4e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019b34:	1406      	asrs	r6, r0, #16
 8019b36:	d405      	bmi.n	8019b44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019b38:	454e      	cmp	r6, r9
 8019b3a:	da03      	bge.n	8019b44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019b3c:	1416      	asrs	r6, r2, #16
 8019b3e:	d401      	bmi.n	8019b44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019b40:	4546      	cmp	r6, r8
 8019b42:	db05      	blt.n	8019b50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019b44:	4470      	add	r0, lr
 8019b46:	4462      	add	r2, ip
 8019b48:	3b01      	subs	r3, #1
 8019b4a:	3402      	adds	r4, #2
 8019b4c:	e7f0      	b.n	8019b30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019b4e:	d00f      	beq.n	8019b70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019b50:	1e5e      	subs	r6, r3, #1
 8019b52:	fb0e 0706 	mla	r7, lr, r6, r0
 8019b56:	143f      	asrs	r7, r7, #16
 8019b58:	d541      	bpl.n	8019bde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019b5a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019b5e:	4698      	mov	r8, r3
 8019b60:	9603      	str	r6, [sp, #12]
 8019b62:	f1b8 0f00 	cmp.w	r8, #0
 8019b66:	dc56      	bgt.n	8019c16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019b68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019b6c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019b70:	9b01      	ldr	r3, [sp, #4]
 8019b72:	2b00      	cmp	r3, #0
 8019b74:	dd6c      	ble.n	8019c50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019b76:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b7e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019b82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019b84:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b8c:	eeb0 6a62 	vmov.f32	s12, s5
 8019b90:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b98:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b9c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8019ba0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019ba4:	eeb0 6a43 	vmov.f32	s12, s6
 8019ba8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019bac:	ee12 2a90 	vmov	r2, s5
 8019bb0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019bb4:	fb92 fef3 	sdiv	lr, r2, r3
 8019bb8:	ee13 2a10 	vmov	r2, s6
 8019bbc:	fb92 fcf3 	sdiv	ip, r2, r3
 8019bc0:	9b01      	ldr	r3, [sp, #4]
 8019bc2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019bc6:	3b01      	subs	r3, #1
 8019bc8:	9301      	str	r3, [sp, #4]
 8019bca:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8019bce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019bd0:	eeb0 3a67 	vmov.f32	s6, s15
 8019bd4:	bf08      	it	eq
 8019bd6:	465b      	moveq	r3, fp
 8019bd8:	eef0 2a47 	vmov.f32	s5, s14
 8019bdc:	e797      	b.n	8019b0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019bde:	454f      	cmp	r7, r9
 8019be0:	dabb      	bge.n	8019b5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019be2:	fb0c 2606 	mla	r6, ip, r6, r2
 8019be6:	1436      	asrs	r6, r6, #16
 8019be8:	d4b7      	bmi.n	8019b5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019bea:	4546      	cmp	r6, r8
 8019bec:	dab5      	bge.n	8019b5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019bee:	461e      	mov	r6, r3
 8019bf0:	46a0      	mov	r8, r4
 8019bf2:	2e00      	cmp	r6, #0
 8019bf4:	ddb8      	ble.n	8019b68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019bf6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019bfa:	9902      	ldr	r1, [sp, #8]
 8019bfc:	1417      	asrs	r7, r2, #16
 8019bfe:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019c02:	fb0a 9707 	mla	r7, sl, r7, r9
 8019c06:	4470      	add	r0, lr
 8019c08:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019c0c:	f828 7b02 	strh.w	r7, [r8], #2
 8019c10:	4462      	add	r2, ip
 8019c12:	3e01      	subs	r6, #1
 8019c14:	e7ed      	b.n	8019bf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8019c16:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019c1a:	d414      	bmi.n	8019c46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019c1c:	68ae      	ldr	r6, [r5, #8]
 8019c1e:	454e      	cmp	r6, r9
 8019c20:	dd11      	ble.n	8019c46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019c22:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019c26:	d40e      	bmi.n	8019c46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019c28:	68ef      	ldr	r7, [r5, #12]
 8019c2a:	4557      	cmp	r7, sl
 8019c2c:	dd0b      	ble.n	8019c46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019c2e:	b236      	sxth	r6, r6
 8019c30:	fb0a 9606 	mla	r6, sl, r6, r9
 8019c34:	9f02      	ldr	r7, [sp, #8]
 8019c36:	f06f 0101 	mvn.w	r1, #1
 8019c3a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019c3e:	fb01 f608 	mul.w	r6, r1, r8
 8019c42:	9903      	ldr	r1, [sp, #12]
 8019c44:	538f      	strh	r7, [r1, r6]
 8019c46:	4470      	add	r0, lr
 8019c48:	4462      	add	r2, ip
 8019c4a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019c4e:	e788      	b.n	8019b62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019c50:	b005      	add	sp, #20
 8019c52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c5a:	b087      	sub	sp, #28
 8019c5c:	468b      	mov	fp, r1
 8019c5e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019c60:	9203      	str	r2, [sp, #12]
 8019c62:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8019c66:	9204      	str	r2, [sp, #16]
 8019c68:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8019c6c:	6841      	ldr	r1, [r0, #4]
 8019c6e:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8019c72:	fb01 2505 	mla	r5, r1, r5, r2
 8019c76:	6802      	ldr	r2, [r0, #0]
 8019c78:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019c7c:	f8d9 2000 	ldr.w	r2, [r9]
 8019c80:	9201      	str	r2, [sp, #4]
 8019c82:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019c86:	f1bb 0f00 	cmp.w	fp, #0
 8019c8a:	dc03      	bgt.n	8019c94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019c8c:	9a03      	ldr	r2, [sp, #12]
 8019c8e:	2a00      	cmp	r2, #0
 8019c90:	f340 8159 	ble.w	8019f46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019c94:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019c96:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019c9a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019c9e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019ca2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019ca4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019ca8:	2b00      	cmp	r3, #0
 8019caa:	dd0e      	ble.n	8019cca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019cac:	1402      	asrs	r2, r0, #16
 8019cae:	d405      	bmi.n	8019cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cb0:	42ba      	cmp	r2, r7
 8019cb2:	da03      	bge.n	8019cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cb4:	140a      	asrs	r2, r1, #16
 8019cb6:	d401      	bmi.n	8019cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cb8:	42b2      	cmp	r2, r6
 8019cba:	db07      	blt.n	8019ccc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019cbc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019cbe:	4410      	add	r0, r2
 8019cc0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019cc2:	3b01      	subs	r3, #1
 8019cc4:	4411      	add	r1, r2
 8019cc6:	3502      	adds	r5, #2
 8019cc8:	e7ee      	b.n	8019ca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019cca:	d017      	beq.n	8019cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019ccc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019cce:	1e5a      	subs	r2, r3, #1
 8019cd0:	fb04 0402 	mla	r4, r4, r2, r0
 8019cd4:	1424      	asrs	r4, r4, #16
 8019cd6:	d409      	bmi.n	8019cec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019cd8:	42bc      	cmp	r4, r7
 8019cda:	da07      	bge.n	8019cec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019cdc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019cde:	fb04 1202 	mla	r2, r4, r2, r1
 8019ce2:	1412      	asrs	r2, r2, #16
 8019ce4:	d402      	bmi.n	8019cec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019ce6:	42b2      	cmp	r2, r6
 8019ce8:	f2c0 80bf 	blt.w	8019e6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019cec:	2700      	movs	r7, #0
 8019cee:	19da      	adds	r2, r3, r7
 8019cf0:	2a00      	cmp	r2, #0
 8019cf2:	dc3e      	bgt.n	8019d72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019cf4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019cf8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8019cfc:	f1bb 0f00 	cmp.w	fp, #0
 8019d00:	f340 8121 	ble.w	8019f46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019d04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d0c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d10:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019d12:	f1bb 0b01 	subs.w	fp, fp, #1
 8019d16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d1e:	eeb0 6a62 	vmov.f32	s12, s5
 8019d22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d2e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8019d32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d36:	eeb0 6a43 	vmov.f32	s12, s6
 8019d3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d3e:	ee12 2a90 	vmov	r2, s5
 8019d42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d46:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d4a:	ee13 2a10 	vmov	r2, s6
 8019d4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d52:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019d54:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019d56:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d5a:	9a03      	ldr	r2, [sp, #12]
 8019d5c:	9314      	str	r3, [sp, #80]	@ 0x50
 8019d5e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8019d62:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019d64:	eeb0 3a67 	vmov.f32	s6, s15
 8019d68:	bf08      	it	eq
 8019d6a:	4613      	moveq	r3, r2
 8019d6c:	eef0 2a47 	vmov.f32	s5, s14
 8019d70:	e789      	b.n	8019c86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019d72:	1406      	asrs	r6, r0, #16
 8019d74:	d42d      	bmi.n	8019dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019d76:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8019d7a:	42b4      	cmp	r4, r6
 8019d7c:	dd29      	ble.n	8019dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019d7e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8019d82:	d426      	bmi.n	8019dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019d84:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019d88:	4562      	cmp	r2, ip
 8019d8a:	dd22      	ble.n	8019dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019d8c:	b224      	sxth	r4, r4
 8019d8e:	9a01      	ldr	r2, [sp, #4]
 8019d90:	fb0c 6404 	mla	r4, ip, r4, r6
 8019d94:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8019d98:	0e22      	lsrs	r2, r4, #24
 8019d9a:	d01a      	beq.n	8019dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019d9c:	9e04      	ldr	r6, [sp, #16]
 8019d9e:	4372      	muls	r2, r6
 8019da0:	1c56      	adds	r6, r2, #1
 8019da2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019da6:	1212      	asrs	r2, r2, #8
 8019da8:	0a26      	lsrs	r6, r4, #8
 8019daa:	2aff      	cmp	r2, #255	@ 0xff
 8019dac:	9605      	str	r6, [sp, #20]
 8019dae:	d116      	bne.n	8019dde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019db0:	f06f 0201 	mvn.w	r2, #1
 8019db4:	fb02 fc07 	mul.w	ip, r2, r7
 8019db8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019dbc:	0962      	lsrs	r2, r4, #5
 8019dbe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019dc2:	f026 0607 	bic.w	r6, r6, #7
 8019dc6:	4316      	orrs	r6, r2
 8019dc8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019dcc:	4326      	orrs	r6, r4
 8019dce:	f825 600c 	strh.w	r6, [r5, ip]
 8019dd2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019dd4:	4410      	add	r0, r2
 8019dd6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019dd8:	3f01      	subs	r7, #1
 8019dda:	4411      	add	r1, r2
 8019ddc:	e787      	b.n	8019cee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019dde:	f06f 0601 	mvn.w	r6, #1
 8019de2:	437e      	muls	r6, r7
 8019de4:	fa1f fa82 	uxth.w	sl, r2
 8019de8:	f835 8006 	ldrh.w	r8, [r5, r6]
 8019dec:	9602      	str	r6, [sp, #8]
 8019dee:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8019df2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8019df6:	43d2      	mvns	r2, r2
 8019df8:	b2d2      	uxtb	r2, r2
 8019dfa:	fb1c fc0a 	smulbb	ip, ip, sl
 8019dfe:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8019e02:	fb0e ce02 	mla	lr, lr, r2, ip
 8019e06:	b2e4      	uxtb	r4, r4
 8019e08:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019e0c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019e10:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019e14:	fa5f f888 	uxtb.w	r8, r8
 8019e18:	fb14 f40a 	smulbb	r4, r4, sl
 8019e1c:	fb08 4402 	mla	r4, r8, r2, r4
 8019e20:	fa1f fe8e 	uxth.w	lr, lr
 8019e24:	fb16 f60a 	smulbb	r6, r6, sl
 8019e28:	b2a4      	uxth	r4, r4
 8019e2a:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019e2e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8019e32:	f10e 0201 	add.w	r2, lr, #1
 8019e36:	1c66      	adds	r6, r4, #1
 8019e38:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019e3c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019e40:	fa1f fc8c 	uxth.w	ip, ip
 8019e44:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019e48:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8019e4c:	ea46 0e0e 	orr.w	lr, r6, lr
 8019e50:	f10c 0601 	add.w	r6, ip, #1
 8019e54:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019e58:	0976      	lsrs	r6, r6, #5
 8019e5a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019e5e:	9a02      	ldr	r2, [sp, #8]
 8019e60:	ea4e 0e06 	orr.w	lr, lr, r6
 8019e64:	f825 e002 	strh.w	lr, [r5, r2]
 8019e68:	e7b3      	b.n	8019dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019e6a:	f04f 0800 	mov.w	r8, #0
 8019e6e:	eba3 0208 	sub.w	r2, r3, r8
 8019e72:	2a00      	cmp	r2, #0
 8019e74:	f77f af3e 	ble.w	8019cf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019e78:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8019e7c:	1404      	asrs	r4, r0, #16
 8019e7e:	140a      	asrs	r2, r1, #16
 8019e80:	fb06 4202 	mla	r2, r6, r2, r4
 8019e84:	9c01      	ldr	r4, [sp, #4]
 8019e86:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019e8a:	0e22      	lsrs	r2, r4, #24
 8019e8c:	d016      	beq.n	8019ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019e8e:	9e04      	ldr	r6, [sp, #16]
 8019e90:	4372      	muls	r2, r6
 8019e92:	1c56      	adds	r6, r2, #1
 8019e94:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019e98:	1212      	asrs	r2, r2, #8
 8019e9a:	2aff      	cmp	r2, #255	@ 0xff
 8019e9c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8019ea0:	d113      	bne.n	8019eca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8019ea2:	0962      	lsrs	r2, r4, #5
 8019ea4:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019ea8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019eac:	f026 0607 	bic.w	r6, r6, #7
 8019eb0:	4316      	orrs	r6, r2
 8019eb2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019eb6:	4326      	orrs	r6, r4
 8019eb8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8019ebc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019ebe:	4410      	add	r0, r2
 8019ec0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019ec2:	f108 0801 	add.w	r8, r8, #1
 8019ec6:	4411      	add	r1, r2
 8019ec8:	e7d1      	b.n	8019e6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8019eca:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8019ece:	fa1f fa82 	uxth.w	sl, r2
 8019ed2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019ed6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8019eda:	43d2      	mvns	r2, r2
 8019edc:	b2d2      	uxtb	r2, r2
 8019ede:	fb17 f70a 	smulbb	r7, r7, sl
 8019ee2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019ee6:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019eea:	b2e4      	uxtb	r4, r4
 8019eec:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019ef0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019ef4:	fa5f fe8e 	uxtb.w	lr, lr
 8019ef8:	fb14 f40a 	smulbb	r4, r4, sl
 8019efc:	fb0e 4402 	mla	r4, lr, r2, r4
 8019f00:	b2f6      	uxtb	r6, r6
 8019f02:	fa1f fc8c 	uxth.w	ip, ip
 8019f06:	fb16 f60a 	smulbb	r6, r6, sl
 8019f0a:	b2a4      	uxth	r4, r4
 8019f0c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019f10:	fb07 6702 	mla	r7, r7, r2, r6
 8019f14:	f10c 0201 	add.w	r2, ip, #1
 8019f18:	1c66      	adds	r6, r4, #1
 8019f1a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019f1e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019f22:	b2bf      	uxth	r7, r7
 8019f24:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019f28:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019f2c:	ea46 0c0c 	orr.w	ip, r6, ip
 8019f30:	1c7e      	adds	r6, r7, #1
 8019f32:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8019f36:	0976      	lsrs	r6, r6, #5
 8019f38:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019f3c:	ea4c 0c06 	orr.w	ip, ip, r6
 8019f40:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8019f44:	e7ba      	b.n	8019ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019f46:	b007      	add	sp, #28
 8019f48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f50:	b085      	sub	sp, #20
 8019f52:	468b      	mov	fp, r1
 8019f54:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019f56:	9203      	str	r2, [sp, #12]
 8019f58:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019f5c:	6841      	ldr	r1, [r0, #4]
 8019f5e:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8019f62:	fb01 2404 	mla	r4, r1, r4, r2
 8019f66:	6802      	ldr	r2, [r0, #0]
 8019f68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f6c:	f8d8 2000 	ldr.w	r2, [r8]
 8019f70:	9201      	str	r2, [sp, #4]
 8019f72:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019f76:	f1bb 0f00 	cmp.w	fp, #0
 8019f7a:	dc03      	bgt.n	8019f84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019f7c:	9a03      	ldr	r2, [sp, #12]
 8019f7e:	2a00      	cmp	r2, #0
 8019f80:	f340 814f 	ble.w	801a222 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019f84:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019f86:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019f8a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019f8e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019f92:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019f94:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019f98:	2b00      	cmp	r3, #0
 8019f9a:	dd0e      	ble.n	8019fba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019f9c:	1408      	asrs	r0, r1, #16
 8019f9e:	d405      	bmi.n	8019fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019fa0:	42b8      	cmp	r0, r7
 8019fa2:	da03      	bge.n	8019fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019fa4:	1410      	asrs	r0, r2, #16
 8019fa6:	d401      	bmi.n	8019fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019fa8:	42b0      	cmp	r0, r6
 8019faa:	db07      	blt.n	8019fbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019fac:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019fae:	4401      	add	r1, r0
 8019fb0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019fb2:	3b01      	subs	r3, #1
 8019fb4:	4402      	add	r2, r0
 8019fb6:	3402      	adds	r4, #2
 8019fb8:	e7ee      	b.n	8019f98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019fba:	d017      	beq.n	8019fec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019fbc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019fbe:	1e58      	subs	r0, r3, #1
 8019fc0:	fb05 1500 	mla	r5, r5, r0, r1
 8019fc4:	142d      	asrs	r5, r5, #16
 8019fc6:	d409      	bmi.n	8019fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019fc8:	42bd      	cmp	r5, r7
 8019fca:	da07      	bge.n	8019fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019fcc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019fce:	fb05 2000 	mla	r0, r5, r0, r2
 8019fd2:	1400      	asrs	r0, r0, #16
 8019fd4:	d402      	bmi.n	8019fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019fd6:	42b0      	cmp	r0, r6
 8019fd8:	f2c0 80ba 	blt.w	801a150 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019fdc:	2600      	movs	r6, #0
 8019fde:	1998      	adds	r0, r3, r6
 8019fe0:	2800      	cmp	r0, #0
 8019fe2:	dc3e      	bgt.n	801a062 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019fe4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019fe8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019fec:	f1bb 0f00 	cmp.w	fp, #0
 8019ff0:	f340 8117 	ble.w	801a222 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019ff4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019ff8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019ffc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a000:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a002:	f1bb 0b01 	subs.w	fp, fp, #1
 801a006:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a00a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a00e:	eeb0 6a62 	vmov.f32	s12, s5
 801a012:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a016:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a01a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a01e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801a022:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a026:	eeb0 6a43 	vmov.f32	s12, s6
 801a02a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a02e:	ee12 2a90 	vmov	r2, s5
 801a032:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a036:	fb92 f3f3 	sdiv	r3, r2, r3
 801a03a:	ee13 2a10 	vmov	r2, s6
 801a03e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a042:	9311      	str	r3, [sp, #68]	@ 0x44
 801a044:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a046:	fb92 f3f3 	sdiv	r3, r2, r3
 801a04a:	9a03      	ldr	r2, [sp, #12]
 801a04c:	9312      	str	r3, [sp, #72]	@ 0x48
 801a04e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801a052:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a054:	eeb0 3a67 	vmov.f32	s6, s15
 801a058:	bf08      	it	eq
 801a05a:	4613      	moveq	r3, r2
 801a05c:	eef0 2a47 	vmov.f32	s5, s14
 801a060:	e789      	b.n	8019f76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a062:	140f      	asrs	r7, r1, #16
 801a064:	d424      	bmi.n	801a0b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a066:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a06a:	42bd      	cmp	r5, r7
 801a06c:	dd20      	ble.n	801a0b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a06e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a072:	d41d      	bmi.n	801a0b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a074:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a078:	4560      	cmp	r0, ip
 801a07a:	dd19      	ble.n	801a0b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a07c:	b22d      	sxth	r5, r5
 801a07e:	fb0c 7505 	mla	r5, ip, r5, r7
 801a082:	9801      	ldr	r0, [sp, #4]
 801a084:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a088:	0e07      	lsrs	r7, r0, #24
 801a08a:	2fff      	cmp	r7, #255	@ 0xff
 801a08c:	d116      	bne.n	801a0bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a08e:	f06f 0501 	mvn.w	r5, #1
 801a092:	fb05 f706 	mul.w	r7, r5, r6
 801a096:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801a09a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a09e:	0945      	lsrs	r5, r0, #5
 801a0a0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a0a4:	ea4c 0505 	orr.w	r5, ip, r5
 801a0a8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a0ac:	4305      	orrs	r5, r0
 801a0ae:	53e5      	strh	r5, [r4, r7]
 801a0b0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801a0b2:	4401      	add	r1, r0
 801a0b4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801a0b6:	3e01      	subs	r6, #1
 801a0b8:	4402      	add	r2, r0
 801a0ba:	e790      	b.n	8019fde <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a0bc:	b2fd      	uxtb	r5, r7
 801a0be:	2f00      	cmp	r7, #0
 801a0c0:	d0f6      	beq.n	801a0b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a0c2:	f06f 0701 	mvn.w	r7, #1
 801a0c6:	4377      	muls	r7, r6
 801a0c8:	fa1f f985 	uxth.w	r9, r5
 801a0cc:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a0d0:	9702      	str	r7, [sp, #8]
 801a0d2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a0d6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a0da:	43ed      	mvns	r5, r5
 801a0dc:	b2ed      	uxtb	r5, r5
 801a0de:	fb17 f709 	smulbb	r7, r7, r9
 801a0e2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a0e6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a0ea:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a0ee:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a0f2:	b2c0      	uxtb	r0, r0
 801a0f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a0f8:	fa5f fe8e 	uxtb.w	lr, lr
 801a0fc:	fb10 f009 	smulbb	r0, r0, r9
 801a100:	fb0e 0005 	mla	r0, lr, r5, r0
 801a104:	b280      	uxth	r0, r0
 801a106:	fa1f fc8c 	uxth.w	ip, ip
 801a10a:	fb1a fa09 	smulbb	sl, sl, r9
 801a10e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a112:	fb07 a705 	mla	r7, r7, r5, sl
 801a116:	f100 0a01 	add.w	sl, r0, #1
 801a11a:	f10c 0501 	add.w	r5, ip, #1
 801a11e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a122:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a126:	b2bf      	uxth	r7, r7
 801a128:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a12c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a130:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a134:	f107 0a01 	add.w	sl, r7, #1
 801a138:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a13c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a140:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a144:	9802      	ldr	r0, [sp, #8]
 801a146:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a14a:	f824 c000 	strh.w	ip, [r4, r0]
 801a14e:	e7af      	b.n	801a0b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a150:	f04f 0e00 	mov.w	lr, #0
 801a154:	eba3 000e 	sub.w	r0, r3, lr
 801a158:	2800      	cmp	r0, #0
 801a15a:	f77f af43 	ble.w	8019fe4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a15e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a162:	140d      	asrs	r5, r1, #16
 801a164:	1410      	asrs	r0, r2, #16
 801a166:	fb06 5000 	mla	r0, r6, r0, r5
 801a16a:	9d01      	ldr	r5, [sp, #4]
 801a16c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a170:	0e2e      	lsrs	r6, r5, #24
 801a172:	2eff      	cmp	r6, #255	@ 0xff
 801a174:	d112      	bne.n	801a19c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a176:	482c      	ldr	r0, [pc, #176]	@ (801a228 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a178:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a17c:	0968      	lsrs	r0, r5, #5
 801a17e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a182:	4330      	orrs	r0, r6
 801a184:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a188:	4328      	orrs	r0, r5
 801a18a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a18e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801a190:	4401      	add	r1, r0
 801a192:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801a194:	f10e 0e01 	add.w	lr, lr, #1
 801a198:	4402      	add	r2, r0
 801a19a:	e7db      	b.n	801a154 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a19c:	b2f0      	uxtb	r0, r6
 801a19e:	2e00      	cmp	r6, #0
 801a1a0:	d0f5      	beq.n	801a18e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a1a2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a1a6:	fa1f f980 	uxth.w	r9, r0
 801a1aa:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a1ae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a1b2:	43c0      	mvns	r0, r0
 801a1b4:	b2c0      	uxtb	r0, r0
 801a1b6:	fb16 f609 	smulbb	r6, r6, r9
 801a1ba:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a1be:	fb07 6700 	mla	r7, r7, r0, r6
 801a1c2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a1c6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a1ca:	b2ed      	uxtb	r5, r5
 801a1cc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a1d0:	fa5f fc8c 	uxtb.w	ip, ip
 801a1d4:	fb15 f509 	smulbb	r5, r5, r9
 801a1d8:	fb0c 5500 	mla	r5, ip, r0, r5
 801a1dc:	b2bf      	uxth	r7, r7
 801a1de:	fb1a fa09 	smulbb	sl, sl, r9
 801a1e2:	b2ad      	uxth	r5, r5
 801a1e4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a1e8:	fb06 a600 	mla	r6, r6, r0, sl
 801a1ec:	1c78      	adds	r0, r7, #1
 801a1ee:	f105 0a01 	add.w	sl, r5, #1
 801a1f2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a1f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a1fa:	b2b6      	uxth	r6, r6
 801a1fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a200:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801a204:	ea4a 0707 	orr.w	r7, sl, r7
 801a208:	f106 0a01 	add.w	sl, r6, #1
 801a20c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a210:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a214:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a218:	ea47 070a 	orr.w	r7, r7, sl
 801a21c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a220:	e7b5      	b.n	801a18e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a222:	b005      	add	sp, #20
 801a224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a228:	fffff800 	.word	0xfffff800

0801a22c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a22c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a230:	b087      	sub	sp, #28
 801a232:	468b      	mov	fp, r1
 801a234:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a236:	9203      	str	r2, [sp, #12]
 801a238:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801a23c:	9204      	str	r2, [sp, #16]
 801a23e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801a242:	6841      	ldr	r1, [r0, #4]
 801a244:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801a248:	fb01 2404 	mla	r4, r1, r4, r2
 801a24c:	6802      	ldr	r2, [r0, #0]
 801a24e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a252:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a256:	3201      	adds	r2, #1
 801a258:	f022 0201 	bic.w	r2, r2, #1
 801a25c:	9200      	str	r2, [sp, #0]
 801a25e:	f8d9 2000 	ldr.w	r2, [r9]
 801a262:	9201      	str	r2, [sp, #4]
 801a264:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a268:	f1bb 0f00 	cmp.w	fp, #0
 801a26c:	dc03      	bgt.n	801a276 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a26e:	9a03      	ldr	r2, [sp, #12]
 801a270:	2a00      	cmp	r2, #0
 801a272:	f340 8169 	ble.w	801a548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a276:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a278:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a27c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a280:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801a284:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a286:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801a28a:	2b00      	cmp	r3, #0
 801a28c:	dd0e      	ble.n	801a2ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a28e:	1402      	asrs	r2, r0, #16
 801a290:	d405      	bmi.n	801a29e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a292:	42ba      	cmp	r2, r7
 801a294:	da03      	bge.n	801a29e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a296:	140a      	asrs	r2, r1, #16
 801a298:	d401      	bmi.n	801a29e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a29a:	42b2      	cmp	r2, r6
 801a29c:	db07      	blt.n	801a2ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a29e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a2a0:	4410      	add	r0, r2
 801a2a2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a2a4:	3b01      	subs	r3, #1
 801a2a6:	4411      	add	r1, r2
 801a2a8:	3402      	adds	r4, #2
 801a2aa:	e7ee      	b.n	801a28a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a2ac:	d017      	beq.n	801a2de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a2ae:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a2b0:	1e5a      	subs	r2, r3, #1
 801a2b2:	fb05 0502 	mla	r5, r5, r2, r0
 801a2b6:	142d      	asrs	r5, r5, #16
 801a2b8:	d409      	bmi.n	801a2ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a2ba:	42bd      	cmp	r5, r7
 801a2bc:	da07      	bge.n	801a2ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a2be:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801a2c0:	fb05 1202 	mla	r2, r5, r2, r1
 801a2c4:	1412      	asrs	r2, r2, #16
 801a2c6:	d402      	bmi.n	801a2ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a2c8:	42b2      	cmp	r2, r6
 801a2ca:	f2c0 80c7 	blt.w	801a45c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a2ce:	2700      	movs	r7, #0
 801a2d0:	19da      	adds	r2, r3, r7
 801a2d2:	2a00      	cmp	r2, #0
 801a2d4:	dc3e      	bgt.n	801a354 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a2d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a2da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a2de:	f1bb 0f00 	cmp.w	fp, #0
 801a2e2:	f340 8131 	ble.w	801a548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a2e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a2ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a2ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a2f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a2f4:	f1bb 0b01 	subs.w	fp, fp, #1
 801a2f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a2fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a300:	eeb0 6a62 	vmov.f32	s12, s5
 801a304:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a308:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a30c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a310:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801a314:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a318:	eeb0 6a43 	vmov.f32	s12, s6
 801a31c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a320:	ee12 2a90 	vmov	r2, s5
 801a324:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a328:	fb92 f3f3 	sdiv	r3, r2, r3
 801a32c:	ee13 2a10 	vmov	r2, s6
 801a330:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a334:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a336:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a338:	fb92 f3f3 	sdiv	r3, r2, r3
 801a33c:	9a03      	ldr	r2, [sp, #12]
 801a33e:	9314      	str	r3, [sp, #80]	@ 0x50
 801a340:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801a344:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a346:	eeb0 3a67 	vmov.f32	s6, s15
 801a34a:	bf08      	it	eq
 801a34c:	4613      	moveq	r3, r2
 801a34e:	eef0 2a47 	vmov.f32	s5, s14
 801a352:	e789      	b.n	801a268 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a354:	1405      	asrs	r5, r0, #16
 801a356:	d435      	bmi.n	801a3c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a358:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a35c:	42aa      	cmp	r2, r5
 801a35e:	dd31      	ble.n	801a3c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a360:	140e      	asrs	r6, r1, #16
 801a362:	d42f      	bmi.n	801a3c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a364:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a368:	42b2      	cmp	r2, r6
 801a36a:	dd2b      	ble.n	801a3c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a36c:	9a00      	ldr	r2, [sp, #0]
 801a36e:	fb06 5502 	mla	r5, r6, r2, r5
 801a372:	086a      	lsrs	r2, r5, #1
 801a374:	9e01      	ldr	r6, [sp, #4]
 801a376:	5cb2      	ldrb	r2, [r6, r2]
 801a378:	07ee      	lsls	r6, r5, #31
 801a37a:	bf54      	ite	pl
 801a37c:	f002 020f 	andpl.w	r2, r2, #15
 801a380:	1112      	asrmi	r2, r2, #4
 801a382:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a386:	b2d2      	uxtb	r2, r2
 801a388:	b1e2      	cbz	r2, 801a3c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a38a:	9d04      	ldr	r5, [sp, #16]
 801a38c:	436a      	muls	r2, r5
 801a38e:	1c55      	adds	r5, r2, #1
 801a390:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a394:	4d6e      	ldr	r5, [pc, #440]	@ (801a550 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a396:	682d      	ldr	r5, [r5, #0]
 801a398:	1212      	asrs	r2, r2, #8
 801a39a:	0a2e      	lsrs	r6, r5, #8
 801a39c:	2aff      	cmp	r2, #255	@ 0xff
 801a39e:	9605      	str	r6, [sp, #20]
 801a3a0:	d116      	bne.n	801a3d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a3a2:	f06f 0201 	mvn.w	r2, #1
 801a3a6:	fb02 fc07 	mul.w	ip, r2, r7
 801a3aa:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801a3ae:	096a      	lsrs	r2, r5, #5
 801a3b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a3b4:	f026 0607 	bic.w	r6, r6, #7
 801a3b8:	4316      	orrs	r6, r2
 801a3ba:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a3be:	432e      	orrs	r6, r5
 801a3c0:	f824 600c 	strh.w	r6, [r4, ip]
 801a3c4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a3c6:	4410      	add	r0, r2
 801a3c8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a3ca:	3f01      	subs	r7, #1
 801a3cc:	4411      	add	r1, r2
 801a3ce:	e77f      	b.n	801a2d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a3d0:	f06f 0601 	mvn.w	r6, #1
 801a3d4:	437e      	muls	r6, r7
 801a3d6:	fa1f fa82 	uxth.w	sl, r2
 801a3da:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a3de:	9602      	str	r6, [sp, #8]
 801a3e0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a3e4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a3e8:	43d2      	mvns	r2, r2
 801a3ea:	b2d2      	uxtb	r2, r2
 801a3ec:	fb1c fc0a 	smulbb	ip, ip, sl
 801a3f0:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801a3f4:	fb0e ce02 	mla	lr, lr, r2, ip
 801a3f8:	b2ed      	uxtb	r5, r5
 801a3fa:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a3fe:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a402:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a406:	fa5f f888 	uxtb.w	r8, r8
 801a40a:	fb15 f50a 	smulbb	r5, r5, sl
 801a40e:	fb08 5502 	mla	r5, r8, r2, r5
 801a412:	fa1f fe8e 	uxth.w	lr, lr
 801a416:	fb16 f60a 	smulbb	r6, r6, sl
 801a41a:	b2ad      	uxth	r5, r5
 801a41c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801a420:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a424:	f10e 0201 	add.w	r2, lr, #1
 801a428:	1c6e      	adds	r6, r5, #1
 801a42a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a42e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a432:	fa1f fc8c 	uxth.w	ip, ip
 801a436:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a43a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801a43e:	ea46 0e0e 	orr.w	lr, r6, lr
 801a442:	f10c 0601 	add.w	r6, ip, #1
 801a446:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a44a:	0976      	lsrs	r6, r6, #5
 801a44c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a450:	9a02      	ldr	r2, [sp, #8]
 801a452:	ea4e 0e06 	orr.w	lr, lr, r6
 801a456:	f824 e002 	strh.w	lr, [r4, r2]
 801a45a:	e7b3      	b.n	801a3c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a45c:	f04f 0800 	mov.w	r8, #0
 801a460:	eba3 0208 	sub.w	r2, r3, r8
 801a464:	2a00      	cmp	r2, #0
 801a466:	f77f af36 	ble.w	801a2d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a46a:	9e00      	ldr	r6, [sp, #0]
 801a46c:	1402      	asrs	r2, r0, #16
 801a46e:	140d      	asrs	r5, r1, #16
 801a470:	fb06 2505 	mla	r5, r6, r5, r2
 801a474:	086a      	lsrs	r2, r5, #1
 801a476:	9e01      	ldr	r6, [sp, #4]
 801a478:	5cb2      	ldrb	r2, [r6, r2]
 801a47a:	07ed      	lsls	r5, r5, #31
 801a47c:	bf54      	ite	pl
 801a47e:	f002 020f 	andpl.w	r2, r2, #15
 801a482:	1112      	asrmi	r2, r2, #4
 801a484:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a488:	b2d2      	uxtb	r2, r2
 801a48a:	b1c2      	cbz	r2, 801a4be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a48c:	9d04      	ldr	r5, [sp, #16]
 801a48e:	436a      	muls	r2, r5
 801a490:	1c55      	adds	r5, r2, #1
 801a492:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a496:	4d2e      	ldr	r5, [pc, #184]	@ (801a550 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a498:	1212      	asrs	r2, r2, #8
 801a49a:	682e      	ldr	r6, [r5, #0]
 801a49c:	2aff      	cmp	r2, #255	@ 0xff
 801a49e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a4a2:	d113      	bne.n	801a4cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a4a4:	0972      	lsrs	r2, r6, #5
 801a4a6:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801a4aa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a4ae:	f025 0507 	bic.w	r5, r5, #7
 801a4b2:	4315      	orrs	r5, r2
 801a4b4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a4b8:	4335      	orrs	r5, r6
 801a4ba:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a4be:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a4c0:	4410      	add	r0, r2
 801a4c2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a4c4:	f108 0801 	add.w	r8, r8, #1
 801a4c8:	4411      	add	r1, r2
 801a4ca:	e7c9      	b.n	801a460 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a4cc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a4d0:	fa1f fa82 	uxth.w	sl, r2
 801a4d4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a4d8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a4dc:	43d2      	mvns	r2, r2
 801a4de:	b2d2      	uxtb	r2, r2
 801a4e0:	fb17 f70a 	smulbb	r7, r7, sl
 801a4e4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a4e8:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a4ec:	b2f6      	uxtb	r6, r6
 801a4ee:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a4f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a4f6:	fa5f fe8e 	uxtb.w	lr, lr
 801a4fa:	fb16 f60a 	smulbb	r6, r6, sl
 801a4fe:	fb0e 6602 	mla	r6, lr, r2, r6
 801a502:	b2ed      	uxtb	r5, r5
 801a504:	fa1f fc8c 	uxth.w	ip, ip
 801a508:	fb15 f50a 	smulbb	r5, r5, sl
 801a50c:	b2b6      	uxth	r6, r6
 801a50e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a512:	fb07 5702 	mla	r7, r7, r2, r5
 801a516:	f10c 0201 	add.w	r2, ip, #1
 801a51a:	1c75      	adds	r5, r6, #1
 801a51c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a520:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a524:	b2bf      	uxth	r7, r7
 801a526:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a52a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a52e:	ea45 0c0c 	orr.w	ip, r5, ip
 801a532:	1c7d      	adds	r5, r7, #1
 801a534:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a538:	096d      	lsrs	r5, r5, #5
 801a53a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a53e:	ea4c 0c05 	orr.w	ip, ip, r5
 801a542:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a546:	e7ba      	b.n	801a4be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a548:	b007      	add	sp, #28
 801a54a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a54e:	bf00      	nop
 801a550:	20013f70 	.word	0x20013f70

0801a554 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a554:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a558:	b087      	sub	sp, #28
 801a55a:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 801a868 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801a55e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a560:	9205      	str	r2, [sp, #20]
 801a562:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801a566:	9101      	str	r1, [sp, #4]
 801a568:	6841      	ldr	r1, [r0, #4]
 801a56a:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 801a56e:	fb01 2404 	mla	r4, r1, r4, r2
 801a572:	6802      	ldr	r2, [r0, #0]
 801a574:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a578:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a57c:	3201      	adds	r2, #1
 801a57e:	f022 0201 	bic.w	r2, r2, #1
 801a582:	9202      	str	r2, [sp, #8]
 801a584:	f8db 2000 	ldr.w	r2, [fp]
 801a588:	9203      	str	r2, [sp, #12]
 801a58a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a58e:	9a01      	ldr	r2, [sp, #4]
 801a590:	2a00      	cmp	r2, #0
 801a592:	dc03      	bgt.n	801a59c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a594:	9a05      	ldr	r2, [sp, #20]
 801a596:	2a00      	cmp	r2, #0
 801a598:	f340 8162 	ble.w	801a860 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a59c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a59e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801a5a2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801a5a6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801a5aa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a5ac:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801a5b0:	2b00      	cmp	r3, #0
 801a5b2:	dd0e      	ble.n	801a5d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a5b4:	1402      	asrs	r2, r0, #16
 801a5b6:	d405      	bmi.n	801a5c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a5b8:	42ba      	cmp	r2, r7
 801a5ba:	da03      	bge.n	801a5c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a5bc:	140a      	asrs	r2, r1, #16
 801a5be:	d401      	bmi.n	801a5c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a5c0:	42b2      	cmp	r2, r6
 801a5c2:	db07      	blt.n	801a5d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a5c4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a5c6:	4410      	add	r0, r2
 801a5c8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a5ca:	3b01      	subs	r3, #1
 801a5cc:	4411      	add	r1, r2
 801a5ce:	3402      	adds	r4, #2
 801a5d0:	e7ee      	b.n	801a5b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a5d2:	d017      	beq.n	801a604 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a5d4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a5d6:	1e5a      	subs	r2, r3, #1
 801a5d8:	fb05 0502 	mla	r5, r5, r2, r0
 801a5dc:	142d      	asrs	r5, r5, #16
 801a5de:	d409      	bmi.n	801a5f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a5e0:	42bd      	cmp	r5, r7
 801a5e2:	da07      	bge.n	801a5f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a5e4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801a5e6:	fb05 1202 	mla	r2, r5, r2, r1
 801a5ea:	1412      	asrs	r2, r2, #16
 801a5ec:	d402      	bmi.n	801a5f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a5ee:	42b2      	cmp	r2, r6
 801a5f0:	f2c0 80c3 	blt.w	801a77a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801a5f4:	2500      	movs	r5, #0
 801a5f6:	195a      	adds	r2, r3, r5
 801a5f8:	2a00      	cmp	r2, #0
 801a5fa:	dc3f      	bgt.n	801a67c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a5fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a600:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a604:	9b01      	ldr	r3, [sp, #4]
 801a606:	2b00      	cmp	r3, #0
 801a608:	f340 812a 	ble.w	801a860 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a60c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a610:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a614:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a618:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a61a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a61e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a622:	eeb0 6a62 	vmov.f32	s12, s5
 801a626:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a62a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a62e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a632:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801a636:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a63a:	eeb0 6a43 	vmov.f32	s12, s6
 801a63e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a642:	ee12 2a90 	vmov	r2, s5
 801a646:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a64a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a64e:	ee13 2a10 	vmov	r2, s6
 801a652:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a654:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a656:	fb92 f3f3 	sdiv	r3, r2, r3
 801a65a:	9314      	str	r3, [sp, #80]	@ 0x50
 801a65c:	9b01      	ldr	r3, [sp, #4]
 801a65e:	9a05      	ldr	r2, [sp, #20]
 801a660:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a664:	3b01      	subs	r3, #1
 801a666:	9301      	str	r3, [sp, #4]
 801a668:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801a66c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a66e:	eeb0 3a67 	vmov.f32	s6, s15
 801a672:	bf08      	it	eq
 801a674:	4613      	moveq	r3, r2
 801a676:	eef0 2a47 	vmov.f32	s5, s14
 801a67a:	e788      	b.n	801a58e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a67c:	1406      	asrs	r6, r0, #16
 801a67e:	d42c      	bmi.n	801a6da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a680:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a684:	42b2      	cmp	r2, r6
 801a686:	dd28      	ble.n	801a6da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a688:	140f      	asrs	r7, r1, #16
 801a68a:	d426      	bmi.n	801a6da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a68c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801a690:	42ba      	cmp	r2, r7
 801a692:	dd22      	ble.n	801a6da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a694:	9a02      	ldr	r2, [sp, #8]
 801a696:	fb07 6602 	mla	r6, r7, r2, r6
 801a69a:	0872      	lsrs	r2, r6, #1
 801a69c:	9f03      	ldr	r7, [sp, #12]
 801a69e:	5cba      	ldrb	r2, [r7, r2]
 801a6a0:	07f6      	lsls	r6, r6, #31
 801a6a2:	bf54      	ite	pl
 801a6a4:	f002 020f 	andpl.w	r2, r2, #15
 801a6a8:	1112      	asrmi	r2, r2, #4
 801a6aa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a6ae:	b2d2      	uxtb	r2, r2
 801a6b0:	2aff      	cmp	r2, #255	@ 0xff
 801a6b2:	d118      	bne.n	801a6e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801a6b4:	f8d8 2000 	ldr.w	r2, [r8]
 801a6b8:	f06f 0601 	mvn.w	r6, #1
 801a6bc:	fb06 f705 	mul.w	r7, r6, r5
 801a6c0:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 801a6c4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801a6c8:	0956      	lsrs	r6, r2, #5
 801a6ca:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a6ce:	ea4c 0606 	orr.w	r6, ip, r6
 801a6d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a6d6:	4316      	orrs	r6, r2
 801a6d8:	53e6      	strh	r6, [r4, r7]
 801a6da:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a6dc:	4410      	add	r0, r2
 801a6de:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a6e0:	3d01      	subs	r5, #1
 801a6e2:	4411      	add	r1, r2
 801a6e4:	e787      	b.n	801a5f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a6e6:	2a00      	cmp	r2, #0
 801a6e8:	d0f7      	beq.n	801a6da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a6ea:	f06f 0601 	mvn.w	r6, #1
 801a6ee:	436e      	muls	r6, r5
 801a6f0:	f8d8 c000 	ldr.w	ip, [r8]
 801a6f4:	f834 e006 	ldrh.w	lr, [r4, r6]
 801a6f8:	9604      	str	r6, [sp, #16]
 801a6fa:	fa1f f982 	uxth.w	r9, r2
 801a6fe:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a702:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801a706:	43d2      	mvns	r2, r2
 801a708:	b2d2      	uxtb	r2, r2
 801a70a:	fb16 f609 	smulbb	r6, r6, r9
 801a70e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a712:	fb07 6702 	mla	r7, r7, r2, r6
 801a716:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801a71a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a71e:	fa5f fc8c 	uxtb.w	ip, ip
 801a722:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a726:	fa5f fe8e 	uxtb.w	lr, lr
 801a72a:	fb1c fc09 	smulbb	ip, ip, r9
 801a72e:	fb0e cc02 	mla	ip, lr, r2, ip
 801a732:	b2bf      	uxth	r7, r7
 801a734:	fb1a fa09 	smulbb	sl, sl, r9
 801a738:	fa1f fc8c 	uxth.w	ip, ip
 801a73c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a740:	fb06 a602 	mla	r6, r6, r2, sl
 801a744:	1c7a      	adds	r2, r7, #1
 801a746:	f10c 0a01 	add.w	sl, ip, #1
 801a74a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a74e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801a752:	b2b6      	uxth	r6, r6
 801a754:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a758:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801a75c:	ea4a 0707 	orr.w	r7, sl, r7
 801a760:	f106 0a01 	add.w	sl, r6, #1
 801a764:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a768:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a76c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a770:	9a04      	ldr	r2, [sp, #16]
 801a772:	ea47 070a 	orr.w	r7, r7, sl
 801a776:	52a7      	strh	r7, [r4, r2]
 801a778:	e7af      	b.n	801a6da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a77a:	f04f 0e00 	mov.w	lr, #0
 801a77e:	eba3 020e 	sub.w	r2, r3, lr
 801a782:	2a00      	cmp	r2, #0
 801a784:	f77f af3a 	ble.w	801a5fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a788:	9e02      	ldr	r6, [sp, #8]
 801a78a:	1402      	asrs	r2, r0, #16
 801a78c:	140d      	asrs	r5, r1, #16
 801a78e:	fb06 2505 	mla	r5, r6, r5, r2
 801a792:	086a      	lsrs	r2, r5, #1
 801a794:	9e03      	ldr	r6, [sp, #12]
 801a796:	5cb2      	ldrb	r2, [r6, r2]
 801a798:	07ed      	lsls	r5, r5, #31
 801a79a:	bf54      	ite	pl
 801a79c:	f002 020f 	andpl.w	r2, r2, #15
 801a7a0:	1112      	asrmi	r2, r2, #4
 801a7a2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a7a6:	b2d2      	uxtb	r2, r2
 801a7a8:	2aff      	cmp	r2, #255	@ 0xff
 801a7aa:	d115      	bne.n	801a7d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801a7ac:	f8d8 5000 	ldr.w	r5, [r8]
 801a7b0:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 801a7b4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801a7b8:	096a      	lsrs	r2, r5, #5
 801a7ba:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a7be:	4332      	orrs	r2, r6
 801a7c0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a7c4:	432a      	orrs	r2, r5
 801a7c6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801a7ca:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a7cc:	4410      	add	r0, r2
 801a7ce:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a7d0:	f10e 0e01 	add.w	lr, lr, #1
 801a7d4:	4411      	add	r1, r2
 801a7d6:	e7d2      	b.n	801a77e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a7d8:	2a00      	cmp	r2, #0
 801a7da:	d0f6      	beq.n	801a7ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a7dc:	f8d8 7000 	ldr.w	r7, [r8]
 801a7e0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a7e4:	fa1f f982 	uxth.w	r9, r2
 801a7e8:	ea4f 262c 	mov.w	r6, ip, asr #8
 801a7ec:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801a7f0:	43d2      	mvns	r2, r2
 801a7f2:	b2d2      	uxtb	r2, r2
 801a7f4:	fb15 f509 	smulbb	r5, r5, r9
 801a7f8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a7fc:	fb06 5602 	mla	r6, r6, r2, r5
 801a800:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801a804:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a808:	b2ff      	uxtb	r7, r7
 801a80a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a80e:	fa5f fc8c 	uxtb.w	ip, ip
 801a812:	fb17 f709 	smulbb	r7, r7, r9
 801a816:	fb0c 7702 	mla	r7, ip, r2, r7
 801a81a:	b2b6      	uxth	r6, r6
 801a81c:	fb1a fa09 	smulbb	sl, sl, r9
 801a820:	b2bf      	uxth	r7, r7
 801a822:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a826:	fb05 a502 	mla	r5, r5, r2, sl
 801a82a:	1c72      	adds	r2, r6, #1
 801a82c:	f107 0a01 	add.w	sl, r7, #1
 801a830:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801a834:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a838:	b2ad      	uxth	r5, r5
 801a83a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a83e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a842:	ea4a 0606 	orr.w	r6, sl, r6
 801a846:	f105 0a01 	add.w	sl, r5, #1
 801a84a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a84e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a852:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a856:	ea46 060a 	orr.w	r6, r6, sl
 801a85a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801a85e:	e7b4      	b.n	801a7ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a860:	b007      	add	sp, #28
 801a862:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a866:	bf00      	nop
 801a868:	20013f70 	.word	0x20013f70

0801a86c <_ZN8touchgfx8LCD16bppD1Ev>:
 801a86c:	4770      	bx	lr

0801a86e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 801a86e:	4770      	bx	lr

0801a870 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801a870:	4770      	bx	lr

0801a872 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801a872:	4770      	bx	lr

0801a874 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801a874:	4770      	bx	lr

0801a876 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801a876:	4770      	bx	lr

0801a878 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801a878:	4770      	bx	lr

0801a87a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801a87a:	4770      	bx	lr

0801a87c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801a87c:	4770      	bx	lr

0801a87e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a87e:	4770      	bx	lr

0801a880 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a880:	4770      	bx	lr

0801a882 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a882:	4770      	bx	lr

0801a884 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a884:	4770      	bx	lr

0801a886 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a886:	4770      	bx	lr

0801a888 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a888:	4770      	bx	lr

0801a88a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a88a:	4770      	bx	lr

0801a88c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a88c:	4770      	bx	lr

0801a88e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a88e:	4770      	bx	lr

0801a890 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a890:	4770      	bx	lr

0801a892 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a892:	4770      	bx	lr

0801a894 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a894:	4770      	bx	lr

0801a896 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a896:	4770      	bx	lr

0801a898 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a898:	4770      	bx	lr

0801a89a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a89a:	4770      	bx	lr

0801a89c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a89c:	4770      	bx	lr

0801a89e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a89e:	4770      	bx	lr

0801a8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801a8a0:	4770      	bx	lr

0801a8a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a8a2:	4770      	bx	lr

0801a8a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801a8a4:	4770      	bx	lr

0801a8a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a8a6:	4770      	bx	lr

0801a8a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a8a8:	4770      	bx	lr

0801a8aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a8aa:	4770      	bx	lr

0801a8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a8ac:	4770      	bx	lr

0801a8ae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801a8ae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a8b2:	b088      	sub	sp, #32
 801a8b4:	ac08      	add	r4, sp, #32
 801a8b6:	4606      	mov	r6, r0
 801a8b8:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801a8bc:	4620      	mov	r0, r4
 801a8be:	4688      	mov	r8, r1
 801a8c0:	4691      	mov	r9, r2
 801a8c2:	f7fd fc31 	bl	8018128 <_ZNK8touchgfx6Bitmap7getDataEv>
 801a8c6:	6833      	ldr	r3, [r6, #0]
 801a8c8:	4605      	mov	r5, r0
 801a8ca:	4620      	mov	r0, r4
 801a8cc:	699f      	ldr	r7, [r3, #24]
 801a8ce:	f7fd fb39 	bl	8017f44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a8d2:	4682      	mov	sl, r0
 801a8d4:	4620      	mov	r0, r4
 801a8d6:	f7fd fb69 	bl	8017fac <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a8da:	9500      	str	r5, [sp, #0]
 801a8dc:	e9cd a001 	strd	sl, r0, [sp, #4]
 801a8e0:	464b      	mov	r3, r9
 801a8e2:	a806      	add	r0, sp, #24
 801a8e4:	4642      	mov	r2, r8
 801a8e6:	4631      	mov	r1, r6
 801a8e8:	47b8      	blx	r7
 801a8ea:	4628      	mov	r0, r5
 801a8ec:	b008      	add	sp, #32
 801a8ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801a8f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801a8f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801a8f8:	2300      	movs	r3, #0
 801a8fa:	9300      	str	r3, [sp, #0]
 801a8fc:	4b3d      	ldr	r3, [pc, #244]	@ (801a9f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801a8fe:	781b      	ldrb	r3, [r3, #0]
 801a900:	2b00      	cmp	r3, #0
 801a902:	d137      	bne.n	801a974 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801a904:	4a3c      	ldr	r2, [pc, #240]	@ (801a9f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a906:	f9b2 2000 	ldrsh.w	r2, [r2]
 801a90a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a90e:	2b00      	cmp	r3, #0
 801a910:	d132      	bne.n	801a978 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801a912:	4b3a      	ldr	r3, [pc, #232]	@ (801a9fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a914:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a918:	6808      	ldr	r0, [r1, #0]
 801a91a:	6849      	ldr	r1, [r1, #4]
 801a91c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a920:	ac02      	add	r4, sp, #8
 801a922:	ab02      	add	r3, sp, #8
 801a924:	c303      	stmia	r3!, {r0, r1}
 801a926:	4669      	mov	r1, sp
 801a928:	4620      	mov	r0, r4
 801a92a:	f7f9 fd0b 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a92e:	4668      	mov	r0, sp
 801a930:	f7f9 fce0 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a934:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a938:	f8bd 2000 	ldrh.w	r2, [sp]
 801a93c:	4d30      	ldr	r5, [pc, #192]	@ (801aa00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801a93e:	4413      	add	r3, r2
 801a940:	f8ad 3008 	strh.w	r3, [sp, #8]
 801a944:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a948:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a94c:	6828      	ldr	r0, [r5, #0]
 801a94e:	4413      	add	r3, r2
 801a950:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a954:	6803      	ldr	r3, [r0, #0]
 801a956:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a958:	4798      	blx	r3
 801a95a:	f010 0f01 	tst.w	r0, #1
 801a95e:	462f      	mov	r7, r5
 801a960:	d00c      	beq.n	801a97c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801a962:	6828      	ldr	r0, [r5, #0]
 801a964:	6803      	ldr	r3, [r0, #0]
 801a966:	e894 0006 	ldmia.w	r4, {r1, r2}
 801a96a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801a96c:	4798      	blx	r3
 801a96e:	b004      	add	sp, #16
 801a970:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a974:	4a21      	ldr	r2, [pc, #132]	@ (801a9fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a976:	e7c6      	b.n	801a906 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801a978:	4b1f      	ldr	r3, [pc, #124]	@ (801a9f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a97a:	e7cb      	b.n	801a914 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801a97c:	6838      	ldr	r0, [r7, #0]
 801a97e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801a982:	6803      	ldr	r3, [r0, #0]
 801a984:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801a988:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a98a:	4798      	blx	r3
 801a98c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801a990:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a994:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801a998:	fb16 3602 	smlabb	r6, r6, r2, r3
 801a99c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a9a0:	6838      	ldr	r0, [r7, #0]
 801a9a2:	6803      	ldr	r3, [r0, #0]
 801a9a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a9a6:	4798      	blx	r3
 801a9a8:	4a13      	ldr	r2, [pc, #76]	@ (801a9f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a9aa:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801a9ae:	8813      	ldrh	r3, [r2, #0]
 801a9b0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801a9b4:	fb03 1404 	mla	r4, r3, r4, r1
 801a9b8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a9bc:	435d      	muls	r5, r3
 801a9be:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a9c2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801a9c6:	4691      	mov	r9, r2
 801a9c8:	6838      	ldr	r0, [r7, #0]
 801a9ca:	42ac      	cmp	r4, r5
 801a9cc:	6803      	ldr	r3, [r0, #0]
 801a9ce:	d20e      	bcs.n	801a9ee <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801a9d0:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 801a9d4:	4632      	mov	r2, r6
 801a9d6:	4643      	mov	r3, r8
 801a9d8:	4621      	mov	r1, r4
 801a9da:	47d0      	blx	sl
 801a9dc:	f8b9 3000 	ldrh.w	r3, [r9]
 801a9e0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a9e4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801a9e8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a9ec:	e7ec      	b.n	801a9c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801a9ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a9f0:	4798      	blx	r3
 801a9f2:	e7bc      	b.n	801a96e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801a9f4:	20013f58 	.word	0x20013f58
 801a9f8:	20013f5a 	.word	0x20013f5a
 801a9fc:	20013f5c 	.word	0x20013f5c
 801aa00:	20013f60 	.word	0x20013f60

0801aa04 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801aa04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa08:	b08b      	sub	sp, #44	@ 0x2c
 801aa0a:	460f      	mov	r7, r1
 801aa0c:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 801aa10:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801aa14:	4616      	mov	r6, r2
 801aa16:	f1bb 0f00 	cmp.w	fp, #0
 801aa1a:	d04a      	beq.n	801aab2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801aa1c:	6810      	ldr	r0, [r2, #0]
 801aa1e:	6851      	ldr	r1, [r2, #4]
 801aa20:	ad06      	add	r5, sp, #24
 801aa22:	c503      	stmia	r5!, {r0, r1}
 801aa24:	6818      	ldr	r0, [r3, #0]
 801aa26:	6859      	ldr	r1, [r3, #4]
 801aa28:	ad08      	add	r5, sp, #32
 801aa2a:	c503      	stmia	r5!, {r0, r1}
 801aa2c:	a806      	add	r0, sp, #24
 801aa2e:	f7f9 fc61 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801aa32:	4631      	mov	r1, r6
 801aa34:	a808      	add	r0, sp, #32
 801aa36:	f7f9 fc85 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aa3a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801aa3e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801aa42:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801aa46:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801aa4a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801aa4e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801aa52:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801aa56:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801aa5a:	4f5f      	ldr	r7, [pc, #380]	@ (801abd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801aa5c:	440a      	add	r2, r1
 801aa5e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801aa62:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801aa66:	6838      	ldr	r0, [r7, #0]
 801aa68:	4413      	add	r3, r2
 801aa6a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801aa6e:	6803      	ldr	r3, [r0, #0]
 801aa70:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801aa72:	4798      	blx	r3
 801aa74:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801aa78:	46b9      	mov	r9, r7
 801aa7a:	d11d      	bne.n	801aab8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801aa7c:	b9fc      	cbnz	r4, 801aabe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801aa7e:	f010 0f01 	tst.w	r0, #1
 801aa82:	d01c      	beq.n	801aabe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801aa84:	f8d9 0000 	ldr.w	r0, [r9]
 801aa88:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801aa8c:	6801      	ldr	r1, [r0, #0]
 801aa8e:	f8cd b00c 	str.w	fp, [sp, #12]
 801aa92:	2700      	movs	r7, #0
 801aa94:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801aa98:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801aa9c:	9402      	str	r4, [sp, #8]
 801aa9e:	b2ad      	uxth	r5, r5
 801aaa0:	fa1f f488 	uxth.w	r4, r8
 801aaa4:	9501      	str	r5, [sp, #4]
 801aaa6:	9400      	str	r4, [sp, #0]
 801aaa8:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 801aaaa:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801aaae:	4631      	mov	r1, r6
 801aab0:	47a0      	blx	r4
 801aab2:	b00b      	add	sp, #44	@ 0x2c
 801aab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aab8:	f010 0f04 	tst.w	r0, #4
 801aabc:	e7e1      	b.n	801aa82 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801aabe:	f8d9 0000 	ldr.w	r0, [r9]
 801aac2:	6803      	ldr	r3, [r0, #0]
 801aac4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801aac6:	4798      	blx	r3
 801aac8:	4b44      	ldr	r3, [pc, #272]	@ (801abdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801aaca:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801aace:	881a      	ldrh	r2, [r3, #0]
 801aad0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801aad4:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801aad8:	fb02 1404 	mla	r4, r2, r4, r1
 801aadc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801aae0:	469a      	mov	sl, r3
 801aae2:	fb05 f502 	mul.w	r5, r5, r2
 801aae6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801aaea:	d059      	beq.n	801aba0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801aaec:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801aaf0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801aaf4:	fa1f f28b 	uxth.w	r2, fp
 801aaf8:	fa1f f989 	uxth.w	r9, r9
 801aafc:	469e      	mov	lr, r3
 801aafe:	42ac      	cmp	r4, r5
 801ab00:	d264      	bcs.n	801abcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ab02:	eb04 0a07 	add.w	sl, r4, r7
 801ab06:	4554      	cmp	r4, sl
 801ab08:	d23d      	bcs.n	801ab86 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801ab0a:	8821      	ldrh	r1, [r4, #0]
 801ab0c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801ab10:	1208      	asrs	r0, r1, #8
 801ab12:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ab16:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ab1a:	fb10 f009 	smulbb	r0, r0, r9
 801ab1e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801ab22:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ab26:	00c9      	lsls	r1, r1, #3
 801ab28:	fb0c 0c02 	mla	ip, ip, r2, r0
 801ab2c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801ab30:	10d8      	asrs	r0, r3, #3
 801ab32:	b2c9      	uxtb	r1, r1
 801ab34:	00db      	lsls	r3, r3, #3
 801ab36:	fa1f fc8c 	uxth.w	ip, ip
 801ab3a:	fb1b fb09 	smulbb	fp, fp, r9
 801ab3e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ab42:	b2db      	uxtb	r3, r3
 801ab44:	fb11 f109 	smulbb	r1, r1, r9
 801ab48:	fb00 b002 	mla	r0, r0, r2, fp
 801ab4c:	fb03 1302 	mla	r3, r3, r2, r1
 801ab50:	f10c 0b01 	add.w	fp, ip, #1
 801ab54:	b29b      	uxth	r3, r3
 801ab56:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801ab5a:	b280      	uxth	r0, r0
 801ab5c:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 801ab60:	f103 0c01 	add.w	ip, r3, #1
 801ab64:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ab68:	1c43      	adds	r3, r0, #1
 801ab6a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ab6e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ab72:	0940      	lsrs	r0, r0, #5
 801ab74:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ab78:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ab7c:	ea4c 0c00 	orr.w	ip, ip, r0
 801ab80:	f824 cb02 	strh.w	ip, [r4], #2
 801ab84:	e7bf      	b.n	801ab06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ab86:	f8be 3000 	ldrh.w	r3, [lr]
 801ab8a:	eba3 0308 	sub.w	r3, r3, r8
 801ab8e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ab92:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ab96:	eba3 0308 	sub.w	r3, r3, r8
 801ab9a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ab9e:	e7ae      	b.n	801aafe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801aba0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801aba4:	f8d9 0000 	ldr.w	r0, [r9]
 801aba8:	42ac      	cmp	r4, r5
 801abaa:	6803      	ldr	r3, [r0, #0]
 801abac:	d20e      	bcs.n	801abcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801abae:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 801abb2:	4632      	mov	r2, r6
 801abb4:	463b      	mov	r3, r7
 801abb6:	4621      	mov	r1, r4
 801abb8:	47c0      	blx	r8
 801abba:	f8ba 3000 	ldrh.w	r3, [sl]
 801abbe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801abc2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801abc6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801abca:	e7eb      	b.n	801aba4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801abcc:	4b02      	ldr	r3, [pc, #8]	@ (801abd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801abce:	6818      	ldr	r0, [r3, #0]
 801abd0:	6803      	ldr	r3, [r0, #0]
 801abd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801abd4:	4798      	blx	r3
 801abd6:	e76c      	b.n	801aab2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801abd8:	20013f60 	.word	0x20013f60
 801abdc:	20013f5a 	.word	0x20013f5a

0801abe0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801abe0:	b510      	push	{r4, lr}
 801abe2:	218c      	movs	r1, #140	@ 0x8c
 801abe4:	4604      	mov	r4, r0
 801abe6:	f00c f9f5 	bl	8026fd4 <_ZdlPvj>
 801abea:	4620      	mov	r0, r4
 801abec:	bd10      	pop	{r4, pc}

0801abee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801abee:	b510      	push	{r4, lr}
 801abf0:	2104      	movs	r1, #4
 801abf2:	4604      	mov	r4, r0
 801abf4:	f00c f9ee 	bl	8026fd4 <_ZdlPvj>
 801abf8:	4620      	mov	r0, r4
 801abfa:	bd10      	pop	{r4, pc}

0801abfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801abfc:	b510      	push	{r4, lr}
 801abfe:	2104      	movs	r1, #4
 801ac00:	4604      	mov	r4, r0
 801ac02:	f00c f9e7 	bl	8026fd4 <_ZdlPvj>
 801ac06:	4620      	mov	r0, r4
 801ac08:	bd10      	pop	{r4, pc}

0801ac0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801ac0a:	b510      	push	{r4, lr}
 801ac0c:	f640 0144 	movw	r1, #2116	@ 0x844
 801ac10:	4604      	mov	r4, r0
 801ac12:	f00c f9df 	bl	8026fd4 <_ZdlPvj>
 801ac16:	4620      	mov	r0, r4
 801ac18:	bd10      	pop	{r4, pc}

0801ac1a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801ac1a:	b510      	push	{r4, lr}
 801ac1c:	f44f 7182 	mov.w	r1, #260	@ 0x104
 801ac20:	4604      	mov	r4, r0
 801ac22:	f00c f9d7 	bl	8026fd4 <_ZdlPvj>
 801ac26:	4620      	mov	r0, r4
 801ac28:	bd10      	pop	{r4, pc}

0801ac2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ac2a:	b510      	push	{r4, lr}
 801ac2c:	2104      	movs	r1, #4
 801ac2e:	4604      	mov	r4, r0
 801ac30:	f00c f9d0 	bl	8026fd4 <_ZdlPvj>
 801ac34:	4620      	mov	r0, r4
 801ac36:	bd10      	pop	{r4, pc}

0801ac38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ac38:	b510      	push	{r4, lr}
 801ac3a:	2104      	movs	r1, #4
 801ac3c:	4604      	mov	r4, r0
 801ac3e:	f00c f9c9 	bl	8026fd4 <_ZdlPvj>
 801ac42:	4620      	mov	r0, r4
 801ac44:	bd10      	pop	{r4, pc}

0801ac46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ac46:	b510      	push	{r4, lr}
 801ac48:	2104      	movs	r1, #4
 801ac4a:	4604      	mov	r4, r0
 801ac4c:	f00c f9c2 	bl	8026fd4 <_ZdlPvj>
 801ac50:	4620      	mov	r0, r4
 801ac52:	bd10      	pop	{r4, pc}

0801ac54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ac54:	b510      	push	{r4, lr}
 801ac56:	2104      	movs	r1, #4
 801ac58:	4604      	mov	r4, r0
 801ac5a:	f00c f9bb 	bl	8026fd4 <_ZdlPvj>
 801ac5e:	4620      	mov	r0, r4
 801ac60:	bd10      	pop	{r4, pc}

0801ac62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ac62:	b510      	push	{r4, lr}
 801ac64:	2104      	movs	r1, #4
 801ac66:	4604      	mov	r4, r0
 801ac68:	f00c f9b4 	bl	8026fd4 <_ZdlPvj>
 801ac6c:	4620      	mov	r0, r4
 801ac6e:	bd10      	pop	{r4, pc}

0801ac70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801ac70:	b510      	push	{r4, lr}
 801ac72:	2104      	movs	r1, #4
 801ac74:	4604      	mov	r4, r0
 801ac76:	f00c f9ad 	bl	8026fd4 <_ZdlPvj>
 801ac7a:	4620      	mov	r0, r4
 801ac7c:	bd10      	pop	{r4, pc}

0801ac7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ac7e:	b510      	push	{r4, lr}
 801ac80:	2104      	movs	r1, #4
 801ac82:	4604      	mov	r4, r0
 801ac84:	f00c f9a6 	bl	8026fd4 <_ZdlPvj>
 801ac88:	4620      	mov	r0, r4
 801ac8a:	bd10      	pop	{r4, pc}

0801ac8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801ac8c:	b510      	push	{r4, lr}
 801ac8e:	2104      	movs	r1, #4
 801ac90:	4604      	mov	r4, r0
 801ac92:	f00c f99f 	bl	8026fd4 <_ZdlPvj>
 801ac96:	4620      	mov	r0, r4
 801ac98:	bd10      	pop	{r4, pc}

0801ac9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ac9a:	b510      	push	{r4, lr}
 801ac9c:	2104      	movs	r1, #4
 801ac9e:	4604      	mov	r4, r0
 801aca0:	f00c f998 	bl	8026fd4 <_ZdlPvj>
 801aca4:	4620      	mov	r0, r4
 801aca6:	bd10      	pop	{r4, pc}

0801aca8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801aca8:	b510      	push	{r4, lr}
 801acaa:	2104      	movs	r1, #4
 801acac:	4604      	mov	r4, r0
 801acae:	f00c f991 	bl	8026fd4 <_ZdlPvj>
 801acb2:	4620      	mov	r0, r4
 801acb4:	bd10      	pop	{r4, pc}

0801acb6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801acb6:	b510      	push	{r4, lr}
 801acb8:	2104      	movs	r1, #4
 801acba:	4604      	mov	r4, r0
 801acbc:	f00c f98a 	bl	8026fd4 <_ZdlPvj>
 801acc0:	4620      	mov	r0, r4
 801acc2:	bd10      	pop	{r4, pc}

0801acc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801acc4:	b510      	push	{r4, lr}
 801acc6:	2104      	movs	r1, #4
 801acc8:	4604      	mov	r4, r0
 801acca:	f00c f983 	bl	8026fd4 <_ZdlPvj>
 801acce:	4620      	mov	r0, r4
 801acd0:	bd10      	pop	{r4, pc}

0801acd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801acd2:	b510      	push	{r4, lr}
 801acd4:	2104      	movs	r1, #4
 801acd6:	4604      	mov	r4, r0
 801acd8:	f00c f97c 	bl	8026fd4 <_ZdlPvj>
 801acdc:	4620      	mov	r0, r4
 801acde:	bd10      	pop	{r4, pc}

0801ace0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ace0:	b510      	push	{r4, lr}
 801ace2:	2104      	movs	r1, #4
 801ace4:	4604      	mov	r4, r0
 801ace6:	f00c f975 	bl	8026fd4 <_ZdlPvj>
 801acea:	4620      	mov	r0, r4
 801acec:	bd10      	pop	{r4, pc}

0801acee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801acee:	b510      	push	{r4, lr}
 801acf0:	2104      	movs	r1, #4
 801acf2:	4604      	mov	r4, r0
 801acf4:	f00c f96e 	bl	8026fd4 <_ZdlPvj>
 801acf8:	4620      	mov	r0, r4
 801acfa:	bd10      	pop	{r4, pc}

0801acfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801acfc:	b510      	push	{r4, lr}
 801acfe:	2104      	movs	r1, #4
 801ad00:	4604      	mov	r4, r0
 801ad02:	f00c f967 	bl	8026fd4 <_ZdlPvj>
 801ad06:	4620      	mov	r0, r4
 801ad08:	bd10      	pop	{r4, pc}

0801ad0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ad0a:	b510      	push	{r4, lr}
 801ad0c:	2104      	movs	r1, #4
 801ad0e:	4604      	mov	r4, r0
 801ad10:	f00c f960 	bl	8026fd4 <_ZdlPvj>
 801ad14:	4620      	mov	r0, r4
 801ad16:	bd10      	pop	{r4, pc}

0801ad18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ad18:	b510      	push	{r4, lr}
 801ad1a:	2104      	movs	r1, #4
 801ad1c:	4604      	mov	r4, r0
 801ad1e:	f00c f959 	bl	8026fd4 <_ZdlPvj>
 801ad22:	4620      	mov	r0, r4
 801ad24:	bd10      	pop	{r4, pc}

0801ad26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ad26:	b510      	push	{r4, lr}
 801ad28:	2104      	movs	r1, #4
 801ad2a:	4604      	mov	r4, r0
 801ad2c:	f00c f952 	bl	8026fd4 <_ZdlPvj>
 801ad30:	4620      	mov	r0, r4
 801ad32:	bd10      	pop	{r4, pc}

0801ad34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ad34:	b510      	push	{r4, lr}
 801ad36:	2104      	movs	r1, #4
 801ad38:	4604      	mov	r4, r0
 801ad3a:	f00c f94b 	bl	8026fd4 <_ZdlPvj>
 801ad3e:	4620      	mov	r0, r4
 801ad40:	bd10      	pop	{r4, pc}

0801ad42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ad42:	b510      	push	{r4, lr}
 801ad44:	2104      	movs	r1, #4
 801ad46:	4604      	mov	r4, r0
 801ad48:	f00c f944 	bl	8026fd4 <_ZdlPvj>
 801ad4c:	4620      	mov	r0, r4
 801ad4e:	bd10      	pop	{r4, pc}

0801ad50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ad50:	b510      	push	{r4, lr}
 801ad52:	2104      	movs	r1, #4
 801ad54:	4604      	mov	r4, r0
 801ad56:	f00c f93d 	bl	8026fd4 <_ZdlPvj>
 801ad5a:	4620      	mov	r0, r4
 801ad5c:	bd10      	pop	{r4, pc}

0801ad5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ad5e:	b510      	push	{r4, lr}
 801ad60:	2104      	movs	r1, #4
 801ad62:	4604      	mov	r4, r0
 801ad64:	f00c f936 	bl	8026fd4 <_ZdlPvj>
 801ad68:	4620      	mov	r0, r4
 801ad6a:	bd10      	pop	{r4, pc}

0801ad6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ad6c:	b510      	push	{r4, lr}
 801ad6e:	2104      	movs	r1, #4
 801ad70:	4604      	mov	r4, r0
 801ad72:	f00c f92f 	bl	8026fd4 <_ZdlPvj>
 801ad76:	4620      	mov	r0, r4
 801ad78:	bd10      	pop	{r4, pc}

0801ad7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801ad7a:	b510      	push	{r4, lr}
 801ad7c:	2104      	movs	r1, #4
 801ad7e:	4604      	mov	r4, r0
 801ad80:	f00c f928 	bl	8026fd4 <_ZdlPvj>
 801ad84:	4620      	mov	r0, r4
 801ad86:	bd10      	pop	{r4, pc}

0801ad88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801ad88:	b510      	push	{r4, lr}
 801ad8a:	2104      	movs	r1, #4
 801ad8c:	4604      	mov	r4, r0
 801ad8e:	f00c f921 	bl	8026fd4 <_ZdlPvj>
 801ad92:	4620      	mov	r0, r4
 801ad94:	bd10      	pop	{r4, pc}

0801ad96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801ad96:	b510      	push	{r4, lr}
 801ad98:	2104      	movs	r1, #4
 801ad9a:	4604      	mov	r4, r0
 801ad9c:	f00c f91a 	bl	8026fd4 <_ZdlPvj>
 801ada0:	4620      	mov	r0, r4
 801ada2:	bd10      	pop	{r4, pc}

0801ada4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801ada4:	b510      	push	{r4, lr}
 801ada6:	2104      	movs	r1, #4
 801ada8:	4604      	mov	r4, r0
 801adaa:	f00c f913 	bl	8026fd4 <_ZdlPvj>
 801adae:	4620      	mov	r0, r4
 801adb0:	bd10      	pop	{r4, pc}
	...

0801adb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801adb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adb8:	b08f      	sub	sp, #60	@ 0x3c
 801adba:	4616      	mov	r6, r2
 801adbc:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801adc0:	9205      	str	r2, [sp, #20]
 801adc2:	4682      	mov	sl, r0
 801adc4:	460d      	mov	r5, r1
 801adc6:	2a00      	cmp	r2, #0
 801adc8:	f000 82b7 	beq.w	801b33a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801adcc:	6830      	ldr	r0, [r6, #0]
 801adce:	6871      	ldr	r1, [r6, #4]
 801add0:	ac0a      	add	r4, sp, #40	@ 0x28
 801add2:	c403      	stmia	r4!, {r0, r1}
 801add4:	6818      	ldr	r0, [r3, #0]
 801add6:	6859      	ldr	r1, [r3, #4]
 801add8:	ac0c      	add	r4, sp, #48	@ 0x30
 801adda:	c403      	stmia	r4!, {r0, r1}
 801addc:	a80a      	add	r0, sp, #40	@ 0x28
 801adde:	f7f9 fa89 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ade2:	4631      	mov	r1, r6
 801ade4:	a80c      	add	r0, sp, #48	@ 0x30
 801ade6:	f7f9 faad 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801adea:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801adee:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801adf2:	bfd7      	itett	le
 801adf4:	b293      	uxthle	r3, r2
 801adf6:	2301      	movgt	r3, #1
 801adf8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801adfc:	fb91 f3f3 	sdivle	r3, r1, r3
 801ae00:	9300      	str	r3, [sp, #0]
 801ae02:	f105 0308 	add.w	r3, r5, #8
 801ae06:	9900      	ldr	r1, [sp, #0]
 801ae08:	9306      	str	r3, [sp, #24]
 801ae0a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801ae0e:	440b      	add	r3, r1
 801ae10:	3b01      	subs	r3, #1
 801ae12:	fb93 f3f1 	sdiv	r3, r3, r1
 801ae16:	9906      	ldr	r1, [sp, #24]
 801ae18:	3b01      	subs	r3, #1
 801ae1a:	b29b      	uxth	r3, r3
 801ae1c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801ae20:	9307      	str	r3, [sp, #28]
 801ae22:	9900      	ldr	r1, [sp, #0]
 801ae24:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801ae28:	fb93 f0f1 	sdiv	r0, r3, r1
 801ae2c:	b284      	uxth	r4, r0
 801ae2e:	9402      	str	r4, [sp, #8]
 801ae30:	9d02      	ldr	r5, [sp, #8]
 801ae32:	9c00      	ldr	r4, [sp, #0]
 801ae34:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801ae38:	fb05 3414 	mls	r4, r5, r4, r3
 801ae3c:	fb14 f402 	smulbb	r4, r4, r2
 801ae40:	440c      	add	r4, r1
 801ae42:	b2a4      	uxth	r4, r4
 801ae44:	2d00      	cmp	r5, #0
 801ae46:	d06c      	beq.n	801af22 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801ae48:	1e6a      	subs	r2, r5, #1
 801ae4a:	9806      	ldr	r0, [sp, #24]
 801ae4c:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801ae50:	9a07      	ldr	r2, [sp, #28]
 801ae52:	ba36      	rev	r6, r6
 801ae54:	4416      	add	r6, r2
 801ae56:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801ae5a:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801ae5e:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 801b194 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801ae62:	4411      	add	r1, r2
 801ae64:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801ae68:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801ae6c:	4413      	add	r3, r2
 801ae6e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801ae72:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801ae76:	9301      	str	r3, [sp, #4]
 801ae78:	4bc4      	ldr	r3, [pc, #784]	@ (801b18c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801ae7a:	6818      	ldr	r0, [r3, #0]
 801ae7c:	6803      	ldr	r3, [r0, #0]
 801ae7e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ae80:	4798      	blx	r3
 801ae82:	4bc3      	ldr	r3, [pc, #780]	@ (801b190 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801ae84:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801ae88:	881b      	ldrh	r3, [r3, #0]
 801ae8a:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801ae8e:	fb03 2808 	mla	r8, r3, r8, r2
 801ae92:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801ae96:	436b      	muls	r3, r5
 801ae98:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801ae9c:	9309      	str	r3, [sp, #36]	@ 0x24
 801ae9e:	2500      	movs	r5, #0
 801aea0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801aea4:	fb94 f3f3 	sdiv	r3, r4, r3
 801aea8:	9304      	str	r3, [sp, #16]
 801aeaa:	f10a 0304 	add.w	r3, sl, #4
 801aeae:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801aeb2:	4629      	mov	r1, r5
 801aeb4:	4618      	mov	r0, r3
 801aeb6:	9308      	str	r3, [sp, #32]
 801aeb8:	f00d f9e1 	bl	802827e <memset>
 801aebc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aebe:	4543      	cmp	r3, r8
 801aec0:	f240 8236 	bls.w	801b330 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 801aec4:	2203      	movs	r2, #3
 801aec6:	2107      	movs	r1, #7
 801aec8:	200b      	movs	r0, #11
 801aeca:	2c00      	cmp	r4, #0
 801aecc:	f000 8131 	beq.w	801b132 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801aed0:	7833      	ldrb	r3, [r6, #0]
 801aed2:	b2db      	uxtb	r3, r3
 801aed4:	2bfe      	cmp	r3, #254	@ 0xfe
 801aed6:	d126      	bne.n	801af26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801aed8:	f896 e001 	ldrb.w	lr, [r6, #1]
 801aedc:	f896 c002 	ldrb.w	ip, [r6, #2]
 801aee0:	f896 b003 	ldrb.w	fp, [r6, #3]
 801aee4:	fa5f fe8e 	uxtb.w	lr, lr
 801aee8:	fa5f fc8c 	uxtb.w	ip, ip
 801aeec:	f36e 0507 	bfi	r5, lr, #0, #8
 801aef0:	f36c 250f 	bfi	r5, ip, #8, #8
 801aef4:	fa5f fb8b 	uxtb.w	fp, fp
 801aef8:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801aefc:	f36b 4517 	bfi	r5, fp, #16, #8
 801af00:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801af04:	0e2b      	lsrs	r3, r5, #24
 801af06:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801af0a:	fb10 c303 	smlabb	r3, r0, r3, ip
 801af0e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801af12:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801af16:	3c01      	subs	r4, #1
 801af18:	1d37      	adds	r7, r6, #4
 801af1a:	b2a4      	uxth	r4, r4
 801af1c:	605d      	str	r5, [r3, #4]
 801af1e:	463e      	mov	r6, r7
 801af20:	e7d3      	b.n	801aeca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801af22:	9e07      	ldr	r6, [sp, #28]
 801af24:	e797      	b.n	801ae56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801af26:	2bff      	cmp	r3, #255	@ 0xff
 801af28:	d127      	bne.n	801af7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801af2a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801af2e:	78b3      	ldrb	r3, [r6, #2]
 801af30:	f896 e003 	ldrb.w	lr, [r6, #3]
 801af34:	f896 b004 	ldrb.w	fp, [r6, #4]
 801af38:	fa5f fc8c 	uxtb.w	ip, ip
 801af3c:	b2db      	uxtb	r3, r3
 801af3e:	f36c 0507 	bfi	r5, ip, #0, #8
 801af42:	f363 250f 	bfi	r5, r3, #8, #8
 801af46:	fa5f fe8e 	uxtb.w	lr, lr
 801af4a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801af4e:	fb12 330e 	smlabb	r3, r2, lr, r3
 801af52:	fa5f fb8b 	uxtb.w	fp, fp
 801af56:	f36e 4517 	bfi	r5, lr, #16, #8
 801af5a:	fb11 330c 	smlabb	r3, r1, ip, r3
 801af5e:	f36b 651f 	bfi	r5, fp, #24, #8
 801af62:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801af66:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801af6a:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801af6e:	3c01      	subs	r4, #1
 801af70:	1d77      	adds	r7, r6, #5
 801af72:	b2a4      	uxth	r4, r4
 801af74:	f8cb 5004 	str.w	r5, [fp, #4]
 801af78:	e7d1      	b.n	801af1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801af7a:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801af7e:	f106 0701 	add.w	r7, r6, #1
 801af82:	d107      	bne.n	801af94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801af84:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801af88:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801af8c:	685d      	ldr	r5, [r3, #4]
 801af8e:	3c01      	subs	r4, #1
 801af90:	b2a4      	uxth	r4, r4
 801af92:	e7c4      	b.n	801af1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801af94:	f1bc 0f01 	cmp.w	ip, #1
 801af98:	d12c      	bne.n	801aff4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801af9a:	f003 0e03 	and.w	lr, r3, #3
 801af9e:	f1ae 0e02 	sub.w	lr, lr, #2
 801afa2:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801afa6:	fa5f fe8e 	uxtb.w	lr, lr
 801afaa:	f003 0c0c 	and.w	ip, r3, #12
 801afae:	f36e 0507 	bfi	r5, lr, #0, #8
 801afb2:	f1ac 0c08 	sub.w	ip, ip, #8
 801afb6:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801afba:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801afbe:	f36c 250f 	bfi	r5, ip, #8, #8
 801afc2:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801afc6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801afca:	3b02      	subs	r3, #2
 801afcc:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801afd0:	b2db      	uxtb	r3, r3
 801afd2:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801afd6:	f363 4517 	bfi	r5, r3, #16, #8
 801afda:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801afde:	0e2e      	lsrs	r6, r5, #24
 801afe0:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801afe4:	fb10 c606 	smlabb	r6, r0, r6, ip
 801afe8:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 801afec:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801aff0:	6075      	str	r5, [r6, #4]
 801aff2:	e7cc      	b.n	801af8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801aff4:	f1bc 0f02 	cmp.w	ip, #2
 801aff8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801affc:	d12a      	bne.n	801b054 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801affe:	1cb7      	adds	r7, r6, #2
 801b000:	7876      	ldrb	r6, [r6, #1]
 801b002:	b2f6      	uxtb	r6, r6
 801b004:	f006 0c0f 	and.w	ip, r6, #15
 801b008:	3b20      	subs	r3, #32
 801b00a:	f1ac 0c08 	sub.w	ip, ip, #8
 801b00e:	449c      	add	ip, r3
 801b010:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801b014:	fa5f fc8c 	uxtb.w	ip, ip
 801b018:	f36c 0507 	bfi	r5, ip, #0, #8
 801b01c:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 801b020:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801b024:	fa5f fe8e 	uxtb.w	lr, lr
 801b028:	1136      	asrs	r6, r6, #4
 801b02a:	f36e 250f 	bfi	r5, lr, #8, #8
 801b02e:	3e08      	subs	r6, #8
 801b030:	4433      	add	r3, r6
 801b032:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b036:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801b03a:	b2db      	uxtb	r3, r3
 801b03c:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801b040:	f363 4517 	bfi	r5, r3, #16, #8
 801b044:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801b048:	0e2e      	lsrs	r6, r5, #24
 801b04a:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801b04e:	fb10 e606 	smlabb	r6, r0, r6, lr
 801b052:	e7c9      	b.n	801afe8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801b054:	1c5e      	adds	r6, r3, #1
 801b056:	42a6      	cmp	r6, r4
 801b058:	dd4e      	ble.n	801b0f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801b05a:	1b36      	subs	r6, r6, r4
 801b05c:	2e00      	cmp	r6, #0
 801b05e:	dc4e      	bgt.n	801b0fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801b060:	f8dd b004 	ldr.w	fp, [sp, #4]
 801b064:	2400      	movs	r4, #0
 801b066:	f1bb 0f00 	cmp.w	fp, #0
 801b06a:	f340 8122 	ble.w	801b2b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801b06e:	1c7b      	adds	r3, r7, #1
 801b070:	9303      	str	r3, [sp, #12]
 801b072:	783b      	ldrb	r3, [r7, #0]
 801b074:	b2db      	uxtb	r3, r3
 801b076:	2bfe      	cmp	r3, #254	@ 0xfe
 801b078:	d160      	bne.n	801b13c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801b07a:	7879      	ldrb	r1, [r7, #1]
 801b07c:	78ba      	ldrb	r2, [r7, #2]
 801b07e:	78f8      	ldrb	r0, [r7, #3]
 801b080:	b2c9      	uxtb	r1, r1
 801b082:	f361 0507 	bfi	r5, r1, #0, #8
 801b086:	b2d2      	uxtb	r2, r2
 801b088:	1d3b      	adds	r3, r7, #4
 801b08a:	f362 250f 	bfi	r5, r2, #8, #8
 801b08e:	b2c0      	uxtb	r0, r0
 801b090:	9303      	str	r3, [sp, #12]
 801b092:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801b096:	2303      	movs	r3, #3
 801b098:	fb13 2200 	smlabb	r2, r3, r0, r2
 801b09c:	f360 4517 	bfi	r5, r0, #16, #8
 801b0a0:	2307      	movs	r3, #7
 801b0a2:	fb13 2101 	smlabb	r1, r3, r1, r2
 801b0a6:	0e2e      	lsrs	r6, r5, #24
 801b0a8:	230b      	movs	r3, #11
 801b0aa:	fb13 1306 	smlabb	r3, r3, r6, r1
 801b0ae:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b0b2:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801b0b6:	605d      	str	r5, [r3, #4]
 801b0b8:	2601      	movs	r6, #1
 801b0ba:	4637      	mov	r7, r6
 801b0bc:	0e2b      	lsrs	r3, r5, #24
 801b0be:	ebab 0b07 	sub.w	fp, fp, r7
 801b0c2:	eba6 0607 	sub.w	r6, r6, r7
 801b0c6:	f040 80d3 	bne.w	801b270 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801b0ca:	b18c      	cbz	r4, 801b0f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 801b0cc:	4648      	mov	r0, r9
 801b0ce:	00a1      	lsls	r1, r4, #2
 801b0d0:	f7e5 ff1e 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801b0d4:	9b05      	ldr	r3, [sp, #20]
 801b0d6:	4622      	mov	r2, r4
 801b0d8:	4649      	mov	r1, r9
 801b0da:	4640      	mov	r0, r8
 801b0dc:	f7e5 ff66 	bl	8000fac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801b0e0:	4b2c      	ldr	r3, [pc, #176]	@ (801b194 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801b0e2:	4a2d      	ldr	r2, [pc, #180]	@ (801b198 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801b0e4:	4599      	cmp	r9, r3
 801b0e6:	bf08      	it	eq
 801b0e8:	4613      	moveq	r3, r2
 801b0ea:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801b0ee:	4699      	mov	r9, r3
 801b0f0:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801b0f4:	2400      	movs	r4, #0
 801b0f6:	e0da      	b.n	801b2ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801b0f8:	1ba6      	subs	r6, r4, r6
 801b0fa:	b2b4      	uxth	r4, r6
 801b0fc:	e70f      	b.n	801af1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801b0fe:	9b01      	ldr	r3, [sp, #4]
 801b100:	9a01      	ldr	r2, [sp, #4]
 801b102:	42b3      	cmp	r3, r6
 801b104:	bfa8      	it	ge
 801b106:	4633      	movge	r3, r6
 801b108:	0e2c      	lsrs	r4, r5, #24
 801b10a:	eba2 0b03 	sub.w	fp, r2, r3
 801b10e:	eba6 0603 	sub.w	r6, r6, r3
 801b112:	d00b      	beq.n	801b12c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801b114:	f1a9 0104 	sub.w	r1, r9, #4
 801b118:	461a      	mov	r2, r3
 801b11a:	2a00      	cmp	r2, #0
 801b11c:	dc02      	bgt.n	801b124 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801b11e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b122:	e7a0      	b.n	801b066 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801b124:	f841 5f04 	str.w	r5, [r1, #4]!
 801b128:	3a01      	subs	r2, #1
 801b12a:	e7f6      	b.n	801b11a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801b12c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801b130:	e799      	b.n	801b066 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801b132:	4637      	mov	r7, r6
 801b134:	f8dd b004 	ldr.w	fp, [sp, #4]
 801b138:	4626      	mov	r6, r4
 801b13a:	e794      	b.n	801b066 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801b13c:	2bff      	cmp	r3, #255	@ 0xff
 801b13e:	d11d      	bne.n	801b17c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801b140:	7878      	ldrb	r0, [r7, #1]
 801b142:	78ba      	ldrb	r2, [r7, #2]
 801b144:	78fe      	ldrb	r6, [r7, #3]
 801b146:	1d7b      	adds	r3, r7, #5
 801b148:	b2c0      	uxtb	r0, r0
 801b14a:	9303      	str	r3, [sp, #12]
 801b14c:	793b      	ldrb	r3, [r7, #4]
 801b14e:	f360 0507 	bfi	r5, r0, #0, #8
 801b152:	b2d2      	uxtb	r2, r2
 801b154:	b2d9      	uxtb	r1, r3
 801b156:	f362 250f 	bfi	r5, r2, #8, #8
 801b15a:	b2f6      	uxtb	r6, r6
 801b15c:	2303      	movs	r3, #3
 801b15e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801b162:	fb13 2206 	smlabb	r2, r3, r6, r2
 801b166:	2307      	movs	r3, #7
 801b168:	fb13 2000 	smlabb	r0, r3, r0, r2
 801b16c:	f366 4517 	bfi	r5, r6, #16, #8
 801b170:	230b      	movs	r3, #11
 801b172:	f361 651f 	bfi	r5, r1, #24, #8
 801b176:	fb13 0301 	smlabb	r3, r3, r1, r0
 801b17a:	e798      	b.n	801b0ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801b17c:	119e      	asrs	r6, r3, #6
 801b17e:	d10d      	bne.n	801b19c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801b180:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b184:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801b188:	685d      	ldr	r5, [r3, #4]
 801b18a:	e795      	b.n	801b0b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801b18c:	20013f60 	.word	0x20013f60
 801b190:	20013f5a 	.word	0x20013f5a
 801b194:	20000180 	.word	0x20000180
 801b198:	20000280 	.word	0x20000280
 801b19c:	2e01      	cmp	r6, #1
 801b19e:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801b1a2:	d12b      	bne.n	801b1fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801b1a4:	f003 0003 	and.w	r0, r3, #3
 801b1a8:	3802      	subs	r0, #2
 801b1aa:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801b1ae:	b2c0      	uxtb	r0, r0
 801b1b0:	f003 020c 	and.w	r2, r3, #12
 801b1b4:	f360 0507 	bfi	r5, r0, #0, #8
 801b1b8:	3a08      	subs	r2, #8
 801b1ba:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801b1be:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801b1c2:	f362 250f 	bfi	r5, r2, #8, #8
 801b1c6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801b1ca:	1e9f      	subs	r7, r3, #2
 801b1cc:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801b1d0:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801b1d4:	b2db      	uxtb	r3, r3
 801b1d6:	2703      	movs	r7, #3
 801b1d8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801b1dc:	fb17 2203 	smlabb	r2, r7, r3, r2
 801b1e0:	2707      	movs	r7, #7
 801b1e2:	f363 4517 	bfi	r5, r3, #16, #8
 801b1e6:	fb17 2000 	smlabb	r0, r7, r0, r2
 801b1ea:	230b      	movs	r3, #11
 801b1ec:	fb13 0101 	smlabb	r1, r3, r1, r0
 801b1f0:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801b1f4:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801b1f8:	604d      	str	r5, [r1, #4]
 801b1fa:	e75e      	b.n	801b0ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801b1fc:	2e02      	cmp	r6, #2
 801b1fe:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b202:	d12f      	bne.n	801b264 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801b204:	7878      	ldrb	r0, [r7, #1]
 801b206:	1cba      	adds	r2, r7, #2
 801b208:	b2c0      	uxtb	r0, r0
 801b20a:	9203      	str	r2, [sp, #12]
 801b20c:	f000 020f 	and.w	r2, r0, #15
 801b210:	3b20      	subs	r3, #32
 801b212:	3a08      	subs	r2, #8
 801b214:	441a      	add	r2, r3
 801b216:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801b21a:	b2d2      	uxtb	r2, r2
 801b21c:	f362 0507 	bfi	r5, r2, #0, #8
 801b220:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801b224:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801b228:	b2f6      	uxtb	r6, r6
 801b22a:	1100      	asrs	r0, r0, #4
 801b22c:	f366 250f 	bfi	r5, r6, #8, #8
 801b230:	3808      	subs	r0, #8
 801b232:	4403      	add	r3, r0
 801b234:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801b238:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801b23c:	b2db      	uxtb	r3, r3
 801b23e:	2003      	movs	r0, #3
 801b240:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801b244:	fb10 6603 	smlabb	r6, r0, r3, r6
 801b248:	2007      	movs	r0, #7
 801b24a:	f363 4517 	bfi	r5, r3, #16, #8
 801b24e:	fb10 6202 	smlabb	r2, r0, r2, r6
 801b252:	230b      	movs	r3, #11
 801b254:	fb13 2101 	smlabb	r1, r3, r1, r2
 801b258:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801b25c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801b260:	604d      	str	r5, [r1, #4]
 801b262:	e729      	b.n	801b0b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801b264:	1c5e      	adds	r6, r3, #1
 801b266:	45b3      	cmp	fp, r6
 801b268:	465f      	mov	r7, fp
 801b26a:	bfa8      	it	ge
 801b26c:	4637      	movge	r7, r6
 801b26e:	e725      	b.n	801b0bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801b270:	193b      	adds	r3, r7, r4
 801b272:	2b40      	cmp	r3, #64	@ 0x40
 801b274:	dd13      	ble.n	801b29e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801b276:	4648      	mov	r0, r9
 801b278:	00a1      	lsls	r1, r4, #2
 801b27a:	f7e5 fe49 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801b27e:	4649      	mov	r1, r9
 801b280:	9b05      	ldr	r3, [sp, #20]
 801b282:	4622      	mov	r2, r4
 801b284:	4640      	mov	r0, r8
 801b286:	f7e5 fe91 	bl	8000fac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801b28a:	4b2d      	ldr	r3, [pc, #180]	@ (801b340 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 801b28c:	4599      	cmp	r9, r3
 801b28e:	bf0c      	ite	eq
 801b290:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 801b34c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801b294:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 801b340 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801b298:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801b29c:	2400      	movs	r4, #0
 801b29e:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801b2a2:	463b      	mov	r3, r7
 801b2a4:	3b01      	subs	r3, #1
 801b2a6:	f842 5b04 	str.w	r5, [r2], #4
 801b2aa:	d1fb      	bne.n	801b2a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 801b2ac:	443c      	add	r4, r7
 801b2ae:	9f03      	ldr	r7, [sp, #12]
 801b2b0:	e6d9      	b.n	801b066 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801b2b2:	b15c      	cbz	r4, 801b2cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 801b2b4:	00a1      	lsls	r1, r4, #2
 801b2b6:	4648      	mov	r0, r9
 801b2b8:	f7e5 fe2a 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801b2bc:	4640      	mov	r0, r8
 801b2be:	9b05      	ldr	r3, [sp, #20]
 801b2c0:	4622      	mov	r2, r4
 801b2c2:	4649      	mov	r1, r9
 801b2c4:	f7e5 fe72 	bl	8000fac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801b2c8:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801b2cc:	4b1d      	ldr	r3, [pc, #116]	@ (801b344 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 801b2ce:	9a01      	ldr	r2, [sp, #4]
 801b2d0:	881b      	ldrh	r3, [r3, #0]
 801b2d2:	1a9b      	subs	r3, r3, r2
 801b2d4:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801b2d8:	9b04      	ldr	r3, [sp, #16]
 801b2da:	3301      	adds	r3, #1
 801b2dc:	9304      	str	r3, [sp, #16]
 801b2de:	9a04      	ldr	r2, [sp, #16]
 801b2e0:	9b00      	ldr	r3, [sp, #0]
 801b2e2:	4293      	cmp	r3, r2
 801b2e4:	d11d      	bne.n	801b322 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801b2e6:	9b02      	ldr	r3, [sp, #8]
 801b2e8:	9a02      	ldr	r2, [sp, #8]
 801b2ea:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801b2ee:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801b2f2:	9808      	ldr	r0, [sp, #32]
 801b2f4:	f103 0b01 	add.w	fp, r3, #1
 801b2f8:	9b06      	ldr	r3, [sp, #24]
 801b2fa:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801b2fe:	9b07      	ldr	r3, [sp, #28]
 801b300:	2500      	movs	r5, #0
 801b302:	ba3f      	rev	r7, r7
 801b304:	1ba4      	subs	r4, r4, r6
 801b306:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801b30a:	4629      	mov	r1, r5
 801b30c:	441f      	add	r7, r3
 801b30e:	b2a4      	uxth	r4, r4
 801b310:	f00c ffb5 	bl	802827e <memset>
 801b314:	f8cd b008 	str.w	fp, [sp, #8]
 801b318:	9504      	str	r5, [sp, #16]
 801b31a:	f7e5 fdef 	bl	8000efc <_ZN8touchgfx5paint8tearDownEv>
 801b31e:	463e      	mov	r6, r7
 801b320:	e5cc      	b.n	801aebc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801b322:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801b326:	9b01      	ldr	r3, [sp, #4]
 801b328:	1ae4      	subs	r4, r4, r3
 801b32a:	1ba4      	subs	r4, r4, r6
 801b32c:	b2a4      	uxth	r4, r4
 801b32e:	e7f4      	b.n	801b31a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 801b330:	4b05      	ldr	r3, [pc, #20]	@ (801b348 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801b332:	6818      	ldr	r0, [r3, #0]
 801b334:	6803      	ldr	r3, [r0, #0]
 801b336:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b338:	4798      	blx	r3
 801b33a:	b00f      	add	sp, #60	@ 0x3c
 801b33c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b340:	20000180 	.word	0x20000180
 801b344:	20013f5a 	.word	0x20013f5a
 801b348:	20013f60 	.word	0x20013f60
 801b34c:	20000280 	.word	0x20000280

0801b350 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b354:	b08f      	sub	sp, #60	@ 0x3c
 801b356:	461c      	mov	r4, r3
 801b358:	9205      	str	r2, [sp, #20]
 801b35a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b35e:	9100      	str	r1, [sp, #0]
 801b360:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b362:	9201      	str	r2, [sp, #4]
 801b364:	2a00      	cmp	r2, #0
 801b366:	f000 8115 	beq.w	801b594 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b36a:	6820      	ldr	r0, [r4, #0]
 801b36c:	6861      	ldr	r1, [r4, #4]
 801b36e:	aa0a      	add	r2, sp, #40	@ 0x28
 801b370:	c203      	stmia	r2!, {r0, r1}
 801b372:	6818      	ldr	r0, [r3, #0]
 801b374:	6859      	ldr	r1, [r3, #4]
 801b376:	aa0c      	add	r2, sp, #48	@ 0x30
 801b378:	c203      	stmia	r2!, {r0, r1}
 801b37a:	a80a      	add	r0, sp, #40	@ 0x28
 801b37c:	f7f8 ffba 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b380:	4621      	mov	r1, r4
 801b382:	a80c      	add	r0, sp, #48	@ 0x30
 801b384:	f7f8 ffde 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b388:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801b38c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801b390:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801b394:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801b398:	bfde      	ittt	le
 801b39a:	b2b3      	uxthle	r3, r6
 801b39c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801b3a0:	fb92 f3f3 	sdivle	r3, r2, r3
 801b3a4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801b3a8:	bfc8      	it	gt
 801b3aa:	2301      	movgt	r3, #1
 801b3ac:	fb92 f1f3 	sdiv	r1, r2, r3
 801b3b0:	fa1f fc81 	uxth.w	ip, r1
 801b3b4:	fb0c 2413 	mls	r4, ip, r3, r2
 801b3b8:	fb14 f406 	smulbb	r4, r4, r6
 801b3bc:	441d      	add	r5, r3
 801b3be:	4404      	add	r4, r0
 801b3c0:	4661      	mov	r1, ip
 801b3c2:	3d01      	subs	r5, #1
 801b3c4:	b2a4      	uxth	r4, r4
 801b3c6:	fb95 f5f3 	sdiv	r5, r5, r3
 801b3ca:	b131      	cbz	r1, 801b3da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b3cc:	9b05      	ldr	r3, [sp, #20]
 801b3ce:	9900      	ldr	r1, [sp, #0]
 801b3d0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b3d4:	ba1b      	rev	r3, r3
 801b3d6:	4419      	add	r1, r3
 801b3d8:	9100      	str	r1, [sp, #0]
 801b3da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801b3de:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801b3e2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801b3e6:	4418      	add	r0, r3
 801b3e8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801b3ec:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801b3f0:	441a      	add	r2, r3
 801b3f2:	4b6a      	ldr	r3, [pc, #424]	@ (801b59c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b3f4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801b3f8:	6818      	ldr	r0, [r3, #0]
 801b3fa:	6803      	ldr	r3, [r0, #0]
 801b3fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b3fe:	4798      	blx	r3
 801b400:	4967      	ldr	r1, [pc, #412]	@ (801b5a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b402:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801b406:	880b      	ldrh	r3, [r1, #0]
 801b408:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801b40c:	9109      	str	r1, [sp, #36]	@ 0x24
 801b40e:	fb03 c202 	mla	r2, r3, r2, ip
 801b412:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b416:	4373      	muls	r3, r6
 801b418:	b2ad      	uxth	r5, r5
 801b41a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b41e:	00ad      	lsls	r5, r5, #2
 801b420:	9306      	str	r3, [sp, #24]
 801b422:	1d2b      	adds	r3, r5, #4
 801b424:	9307      	str	r3, [sp, #28]
 801b426:	9b01      	ldr	r3, [sp, #4]
 801b428:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b42c:	9103      	str	r1, [sp, #12]
 801b42e:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801b432:	2c00      	cmp	r4, #0
 801b434:	bf0c      	ite	eq
 801b436:	46c6      	moveq	lr, r8
 801b438:	f04f 0e00 	movne.w	lr, #0
 801b43c:	2300      	movs	r3, #0
 801b43e:	b292      	uxth	r2, r2
 801b440:	fa1f fe8e 	uxth.w	lr, lr
 801b444:	9302      	str	r3, [sp, #8]
 801b446:	9204      	str	r2, [sp, #16]
 801b448:	9a06      	ldr	r2, [sp, #24]
 801b44a:	4282      	cmp	r2, r0
 801b44c:	f240 809d 	bls.w	801b58a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b450:	b963      	cbnz	r3, 801b46c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b452:	9b00      	ldr	r3, [sp, #0]
 801b454:	781a      	ldrb	r2, [r3, #0]
 801b456:	0993      	lsrs	r3, r2, #6
 801b458:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b45c:	9202      	str	r2, [sp, #8]
 801b45e:	1e5a      	subs	r2, r3, #1
 801b460:	2a02      	cmp	r2, #2
 801b462:	d815      	bhi.n	801b490 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b464:	9a00      	ldr	r2, [sp, #0]
 801b466:	3201      	adds	r2, #1
 801b468:	9200      	str	r2, [sp, #0]
 801b46a:	b29b      	uxth	r3, r3
 801b46c:	b1b4      	cbz	r4, 801b49c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b46e:	429c      	cmp	r4, r3
 801b470:	bf95      	itete	ls
 801b472:	1b1c      	subls	r4, r3, r4
 801b474:	1ae4      	subhi	r4, r4, r3
 801b476:	fa1f fa84 	uxthls.w	sl, r4
 801b47a:	b2a4      	uxthhi	r4, r4
 801b47c:	bf87      	ittee	hi
 801b47e:	4671      	movhi	r1, lr
 801b480:	f04f 0a00 	movhi.w	sl, #0
 801b484:	fa1f f188 	uxthls.w	r1, r8
 801b488:	2400      	movls	r4, #0
 801b48a:	4653      	mov	r3, sl
 801b48c:	468e      	mov	lr, r1
 801b48e:	e7db      	b.n	801b448 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b490:	9a00      	ldr	r2, [sp, #0]
 801b492:	9b00      	ldr	r3, [sp, #0]
 801b494:	3202      	adds	r2, #2
 801b496:	785b      	ldrb	r3, [r3, #1]
 801b498:	9200      	str	r2, [sp, #0]
 801b49a:	e7e7      	b.n	801b46c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b49c:	2202      	movs	r2, #2
 801b49e:	4615      	mov	r5, r2
 801b4a0:	9907      	ldr	r1, [sp, #28]
 801b4a2:	9a02      	ldr	r2, [sp, #8]
 801b4a4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b4a8:	9905      	ldr	r1, [sp, #20]
 801b4aa:	4573      	cmp	r3, lr
 801b4ac:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b4b0:	9a01      	ldr	r2, [sp, #4]
 801b4b2:	bf2b      	itete	cs
 801b4b4:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b4b8:	ebae 0103 	subcc.w	r1, lr, r3
 801b4bc:	46f1      	movcs	r9, lr
 801b4be:	4699      	movcc	r9, r3
 801b4c0:	bf27      	ittee	cs
 801b4c2:	fa1f fa8a 	uxthcs.w	sl, sl
 801b4c6:	4621      	movcs	r1, r4
 801b4c8:	b289      	uxthcc	r1, r1
 801b4ca:	46a2      	movcc	sl, r4
 801b4cc:	2aff      	cmp	r2, #255	@ 0xff
 801b4ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b4d2:	d105      	bne.n	801b4e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b4d4:	4481      	add	r9, r0
 801b4d6:	4581      	cmp	r9, r0
 801b4d8:	d045      	beq.n	801b566 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b4da:	f820 cb02 	strh.w	ip, [r0], #2
 801b4de:	e7fa      	b.n	801b4d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b4e0:	9d03      	ldr	r5, [sp, #12]
 801b4e2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b4e6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b4ea:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b4ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b4f2:	436a      	muls	r2, r5
 801b4f4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801b4f8:	fa5f fc8c 	uxtb.w	ip, ip
 801b4fc:	9208      	str	r2, [sp, #32]
 801b4fe:	fb0b fb05 	mul.w	fp, fp, r5
 801b502:	fb0c fc05 	mul.w	ip, ip, r5
 801b506:	4481      	add	r9, r0
 801b508:	4581      	cmp	r9, r0
 801b50a:	d02c      	beq.n	801b566 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b50c:	8802      	ldrh	r2, [r0, #0]
 801b50e:	9d04      	ldr	r5, [sp, #16]
 801b510:	9f04      	ldr	r7, [sp, #16]
 801b512:	1216      	asrs	r6, r2, #8
 801b514:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b518:	fb16 f605 	smulbb	r6, r6, r5
 801b51c:	9d08      	ldr	r5, [sp, #32]
 801b51e:	442e      	add	r6, r5
 801b520:	10d5      	asrs	r5, r2, #3
 801b522:	00d2      	lsls	r2, r2, #3
 801b524:	b2d2      	uxtb	r2, r2
 801b526:	fb12 f207 	smulbb	r2, r2, r7
 801b52a:	b2b6      	uxth	r6, r6
 801b52c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b530:	4462      	add	r2, ip
 801b532:	fb15 f507 	smulbb	r5, r5, r7
 801b536:	b292      	uxth	r2, r2
 801b538:	1c77      	adds	r7, r6, #1
 801b53a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b53e:	1c57      	adds	r7, r2, #1
 801b540:	445d      	add	r5, fp
 801b542:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b546:	b2ad      	uxth	r5, r5
 801b548:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b54c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801b550:	4316      	orrs	r6, r2
 801b552:	1c6a      	adds	r2, r5, #1
 801b554:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b558:	096d      	lsrs	r5, r5, #5
 801b55a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b55e:	432e      	orrs	r6, r5
 801b560:	f820 6b02 	strh.w	r6, [r0], #2
 801b564:	e7d0      	b.n	801b508 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b566:	4573      	cmp	r3, lr
 801b568:	d38f      	bcc.n	801b48a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b56a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801b56e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b570:	fa1f f188 	uxth.w	r1, r8
 801b574:	1a64      	subs	r4, r4, r1
 801b576:	881b      	ldrh	r3, [r3, #0]
 801b578:	b2a4      	uxth	r4, r4
 801b57a:	2c00      	cmp	r4, #0
 801b57c:	eba3 0308 	sub.w	r3, r3, r8
 801b580:	bf18      	it	ne
 801b582:	2100      	movne	r1, #0
 801b584:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b588:	e77f      	b.n	801b48a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b58a:	4b04      	ldr	r3, [pc, #16]	@ (801b59c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b58c:	6818      	ldr	r0, [r3, #0]
 801b58e:	6803      	ldr	r3, [r0, #0]
 801b590:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b592:	4798      	blx	r3
 801b594:	b00f      	add	sp, #60	@ 0x3c
 801b596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b59a:	bf00      	nop
 801b59c:	20013f60 	.word	0x20013f60
 801b5a0:	20013f5a 	.word	0x20013f5a

0801b5a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b5a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5a8:	b09f      	sub	sp, #124	@ 0x7c
 801b5aa:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801b5ae:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801b5b2:	9209      	str	r2, [sp, #36]	@ 0x24
 801b5b4:	461d      	mov	r5, r3
 801b5b6:	4604      	mov	r4, r0
 801b5b8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b5ba:	2a00      	cmp	r2, #0
 801b5bc:	f000 81eb 	beq.w	801b996 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b5c0:	6828      	ldr	r0, [r5, #0]
 801b5c2:	6869      	ldr	r1, [r5, #4]
 801b5c4:	aa1a      	add	r2, sp, #104	@ 0x68
 801b5c6:	c203      	stmia	r2!, {r0, r1}
 801b5c8:	6818      	ldr	r0, [r3, #0]
 801b5ca:	6859      	ldr	r1, [r3, #4]
 801b5cc:	aa1c      	add	r2, sp, #112	@ 0x70
 801b5ce:	c203      	stmia	r2!, {r0, r1}
 801b5d0:	a81a      	add	r0, sp, #104	@ 0x68
 801b5d2:	f7f8 fe8f 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b5d6:	4629      	mov	r1, r5
 801b5d8:	a81c      	add	r0, sp, #112	@ 0x70
 801b5da:	f7f8 feb3 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b5de:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801b5e2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801b5e6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801b5ea:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801b5ee:	bfd7      	itett	le
 801b5f0:	b29a      	uxthle	r2, r3
 801b5f2:	2201      	movgt	r2, #1
 801b5f4:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801b5f8:	fb91 f2f2 	sdivle	r2, r1, r2
 801b5fc:	9202      	str	r2, [sp, #8]
 801b5fe:	9802      	ldr	r0, [sp, #8]
 801b600:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801b604:	fb92 f0f0 	sdiv	r0, r2, r0
 801b608:	b280      	uxth	r0, r0
 801b60a:	9010      	str	r0, [sp, #64]	@ 0x40
 801b60c:	9902      	ldr	r1, [sp, #8]
 801b60e:	9802      	ldr	r0, [sp, #8]
 801b610:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b612:	4488      	add	r8, r1
 801b614:	fb05 2510 	mls	r5, r5, r0, r2
 801b618:	fb15 f503 	smulbb	r5, r5, r3
 801b61c:	f108 38ff 	add.w	r8, r8, #4294967295
 801b620:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801b624:	fb98 f8f1 	sdiv	r8, r8, r1
 801b628:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801b62c:	440d      	add	r5, r1
 801b62e:	4419      	add	r1, r3
 801b630:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801b634:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801b638:	441a      	add	r2, r3
 801b63a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801b63e:	9304      	str	r3, [sp, #16]
 801b640:	4b95      	ldr	r3, [pc, #596]	@ (801b898 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b642:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801b646:	6818      	ldr	r0, [r3, #0]
 801b648:	6803      	ldr	r3, [r0, #0]
 801b64a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b64c:	4798      	blx	r3
 801b64e:	4b93      	ldr	r3, [pc, #588]	@ (801b89c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b650:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801b654:	881a      	ldrh	r2, [r3, #0]
 801b656:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801b65a:	9318      	str	r3, [sp, #96]	@ 0x60
 801b65c:	fb02 7101 	mla	r1, r2, r1, r7
 801b660:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b664:	4356      	muls	r6, r2
 801b666:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b66a:	f108 0801 	add.w	r8, r8, #1
 801b66e:	920a      	str	r2, [sp, #40]	@ 0x28
 801b670:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b672:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801b676:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b678:	fa1f f888 	uxth.w	r8, r8
 801b67c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b680:	f108 0204 	add.w	r2, r8, #4
 801b684:	9211      	str	r2, [sp, #68]	@ 0x44
 801b686:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b688:	4b85      	ldr	r3, [pc, #532]	@ (801b8a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b68a:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801b68e:	b2ad      	uxth	r5, r5
 801b690:	9215      	str	r2, [sp, #84]	@ 0x54
 801b692:	2d00      	cmp	r5, #0
 801b694:	9a04      	ldr	r2, [sp, #16]
 801b696:	f04f 0100 	mov.w	r1, #0
 801b69a:	bf18      	it	ne
 801b69c:	2200      	movne	r2, #0
 801b69e:	1b1b      	subs	r3, r3, r4
 801b6a0:	b292      	uxth	r2, r2
 801b6a2:	910d      	str	r1, [sp, #52]	@ 0x34
 801b6a4:	9319      	str	r3, [sp, #100]	@ 0x64
 801b6a6:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801b6a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b6aa:	fa11 f383 	uxtah	r3, r1, r3
 801b6ae:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801b6b0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b6b4:	3304      	adds	r3, #4
 801b6b6:	9306      	str	r3, [sp, #24]
 801b6b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b6ba:	4283      	cmp	r3, r0
 801b6bc:	f240 8166 	bls.w	801b98c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b6c0:	9902      	ldr	r1, [sp, #8]
 801b6c2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801b6c6:	fbb5 f3f3 	udiv	r3, r5, r3
 801b6ca:	1acb      	subs	r3, r1, r3
 801b6cc:	b29b      	uxth	r3, r3
 801b6ce:	9316      	str	r3, [sp, #88]	@ 0x58
 801b6d0:	9b06      	ldr	r3, [sp, #24]
 801b6d2:	9e06      	ldr	r6, [sp, #24]
 801b6d4:	7859      	ldrb	r1, [r3, #1]
 801b6d6:	789b      	ldrb	r3, [r3, #2]
 801b6d8:	7836      	ldrb	r6, [r6, #0]
 801b6da:	9612      	str	r6, [sp, #72]	@ 0x48
 801b6dc:	021b      	lsls	r3, r3, #8
 801b6de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b6e2:	9906      	ldr	r1, [sp, #24]
 801b6e4:	78c9      	ldrb	r1, [r1, #3]
 801b6e6:	430b      	orrs	r3, r1
 801b6e8:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801b6ea:	3601      	adds	r6, #1
 801b6ec:	4419      	add	r1, r3
 801b6ee:	9605      	str	r6, [sp, #20]
 801b6f0:	1c4e      	adds	r6, r1, #1
 801b6f2:	9603      	str	r6, [sp, #12]
 801b6f4:	7849      	ldrb	r1, [r1, #1]
 801b6f6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801b6f8:	0209      	lsls	r1, r1, #8
 801b6fa:	5cf3      	ldrb	r3, [r6, r3]
 801b6fc:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801b700:	4319      	orrs	r1, r3
 801b702:	b28b      	uxth	r3, r1
 801b704:	930c      	str	r3, [sp, #48]	@ 0x30
 801b706:	2300      	movs	r3, #0
 801b708:	f04f 0a01 	mov.w	sl, #1
 801b70c:	9307      	str	r3, [sp, #28]
 801b70e:	469c      	mov	ip, r3
 801b710:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801b714:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801b718:	46d3      	mov	fp, sl
 801b71a:	4657      	mov	r7, sl
 801b71c:	930e      	str	r3, [sp, #56]	@ 0x38
 801b71e:	2d00      	cmp	r5, #0
 801b720:	d07e      	beq.n	801b820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b722:	42af      	cmp	r7, r5
 801b724:	d26e      	bcs.n	801b804 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b726:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b728:	9201      	str	r2, [sp, #4]
 801b72a:	1bed      	subs	r5, r5, r7
 801b72c:	4283      	cmp	r3, r0
 801b72e:	b2ad      	uxth	r5, r5
 801b730:	d802      	bhi.n	801b738 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b732:	e073      	b.n	801b81c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b734:	2b00      	cmp	r3, #0
 801b736:	d15f      	bne.n	801b7f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b738:	9b03      	ldr	r3, [sp, #12]
 801b73a:	785b      	ldrb	r3, [r3, #1]
 801b73c:	f1cb 0207 	rsb	r2, fp, #7
 801b740:	4093      	lsls	r3, r2
 801b742:	005b      	lsls	r3, r3, #1
 801b744:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801b748:	9b03      	ldr	r3, [sp, #12]
 801b74a:	781b      	ldrb	r3, [r3, #0]
 801b74c:	fa43 f30b 	asr.w	r3, r3, fp
 801b750:	b2db      	uxtb	r3, r3
 801b752:	4313      	orrs	r3, r2
 801b754:	f10b 0201 	add.w	r2, fp, #1
 801b758:	fa5f fb82 	uxtb.w	fp, r2
 801b75c:	9a03      	ldr	r2, [sp, #12]
 801b75e:	f1bb 0f08 	cmp.w	fp, #8
 801b762:	bf15      	itete	ne
 801b764:	3201      	addne	r2, #1
 801b766:	3202      	addeq	r2, #2
 801b768:	9203      	strne	r2, [sp, #12]
 801b76a:	9203      	streq	r2, [sp, #12]
 801b76c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b76e:	b29f      	uxth	r7, r3
 801b770:	bf08      	it	eq
 801b772:	f04f 0b00 	moveq.w	fp, #0
 801b776:	42ba      	cmp	r2, r7
 801b778:	d309      	bcc.n	801b78e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b77a:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801b77e:	2301      	movs	r3, #1
 801b780:	9a05      	ldr	r2, [sp, #20]
 801b782:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801b786:	d30e      	bcc.n	801b7a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b788:	469a      	mov	sl, r3
 801b78a:	2600      	movs	r6, #0
 801b78c:	e035      	b.n	801b7fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b78e:	9b05      	ldr	r3, [sp, #20]
 801b790:	429f      	cmp	r7, r3
 801b792:	d318      	bcc.n	801b7c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b794:	eb04 030a 	add.w	r3, r4, sl
 801b798:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801b79c:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801b7a0:	f10a 0301 	add.w	r3, sl, #1
 801b7a4:	b29b      	uxth	r3, r3
 801b7a6:	9a05      	ldr	r2, [sp, #20]
 801b7a8:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801b7ac:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801b7ae:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b7b2:	7116      	strb	r6, [r2, #4]
 801b7b4:	f10a 0601 	add.w	r6, sl, #1
 801b7b8:	80d1      	strh	r1, [r2, #6]
 801b7ba:	7156      	strb	r6, [r2, #5]
 801b7bc:	9a05      	ldr	r2, [sp, #20]
 801b7be:	3201      	adds	r2, #1
 801b7c0:	b292      	uxth	r2, r2
 801b7c2:	9205      	str	r2, [sp, #20]
 801b7c4:	e7e0      	b.n	801b788 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b7c6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b7ca:	463a      	mov	r2, r7
 801b7cc:	795b      	ldrb	r3, [r3, #5]
 801b7ce:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801b7d2:	4426      	add	r6, r4
 801b7d4:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801b7d6:	eb01 0c06 	add.w	ip, r1, r6
 801b7da:	f1bc 0f00 	cmp.w	ip, #0
 801b7de:	dd07      	ble.n	801b7f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b7e0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b7e4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b7e8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b7ec:	88d2      	ldrh	r2, [r2, #6]
 801b7ee:	e7f1      	b.n	801b7d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b7f0:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801b7f4:	b29b      	uxth	r3, r3
 801b7f6:	e7c3      	b.n	801b780 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b7f8:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b7fa:	970c      	str	r7, [sp, #48]	@ 0x30
 801b7fc:	9a01      	ldr	r2, [sp, #4]
 801b7fe:	46b4      	mov	ip, r6
 801b800:	461f      	mov	r7, r3
 801b802:	e78c      	b.n	801b71e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b804:	1b7b      	subs	r3, r7, r5
 801b806:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b80a:	9201      	str	r2, [sp, #4]
 801b80c:	eb0c 0605 	add.w	r6, ip, r5
 801b810:	b29b      	uxth	r3, r3
 801b812:	b2b6      	uxth	r6, r6
 801b814:	2500      	movs	r5, #0
 801b816:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b818:	4282      	cmp	r2, r0
 801b81a:	d88b      	bhi.n	801b734 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b81c:	9a01      	ldr	r2, [sp, #4]
 801b81e:	e74b      	b.n	801b6b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b820:	4297      	cmp	r7, r2
 801b822:	d332      	bcc.n	801b88a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b824:	1abb      	subs	r3, r7, r2
 801b826:	b29b      	uxth	r3, r3
 801b828:	9208      	str	r2, [sp, #32]
 801b82a:	9501      	str	r5, [sp, #4]
 801b82c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801b82e:	29ff      	cmp	r1, #255	@ 0xff
 801b830:	9908      	ldr	r1, [sp, #32]
 801b832:	eb0c 0601 	add.w	r6, ip, r1
 801b836:	d135      	bne.n	801b8a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b838:	f1a0 0e02 	sub.w	lr, r0, #2
 801b83c:	b2b6      	uxth	r6, r6
 801b83e:	45b4      	cmp	ip, r6
 801b840:	f040 808c 	bne.w	801b95c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b844:	9908      	ldr	r1, [sp, #32]
 801b846:	4297      	cmp	r7, r2
 801b848:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b84c:	d3e2      	bcc.n	801b814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b84e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801b850:	9904      	ldr	r1, [sp, #16]
 801b852:	8812      	ldrh	r2, [r2, #0]
 801b854:	1a52      	subs	r2, r2, r1
 801b856:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b85a:	9a07      	ldr	r2, [sp, #28]
 801b85c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801b85e:	3201      	adds	r2, #1
 801b860:	428a      	cmp	r2, r1
 801b862:	9207      	str	r2, [sp, #28]
 801b864:	f040 8087 	bne.w	801b976 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b868:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801b86c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801b870:	9b04      	ldr	r3, [sp, #16]
 801b872:	1bed      	subs	r5, r5, r7
 801b874:	b2ad      	uxth	r5, r5
 801b876:	2d00      	cmp	r5, #0
 801b878:	bf08      	it	eq
 801b87a:	461a      	moveq	r2, r3
 801b87c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b87e:	bf18      	it	ne
 801b880:	2200      	movne	r2, #0
 801b882:	3301      	adds	r3, #1
 801b884:	930d      	str	r3, [sp, #52]	@ 0x34
 801b886:	b292      	uxth	r2, r2
 801b888:	e70d      	b.n	801b6a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b88a:	1bd1      	subs	r1, r2, r7
 801b88c:	b28b      	uxth	r3, r1
 801b88e:	9301      	str	r3, [sp, #4]
 801b890:	9708      	str	r7, [sp, #32]
 801b892:	462b      	mov	r3, r5
 801b894:	e7ca      	b.n	801b82c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b896:	bf00      	nop
 801b898:	20013f60 	.word	0x20013f60
 801b89c:	20013f5a 	.word	0x20013f5a
 801b8a0:	fffff7fb 	.word	0xfffff7fb
 801b8a4:	b2b6      	uxth	r6, r6
 801b8a6:	900b      	str	r0, [sp, #44]	@ 0x2c
 801b8a8:	45b4      	cmp	ip, r6
 801b8aa:	d0cb      	beq.n	801b844 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801b8ac:	f10c 0101 	add.w	r1, ip, #1
 801b8b0:	44a4      	add	ip, r4
 801b8b2:	9117      	str	r1, [sp, #92]	@ 0x5c
 801b8b4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801b8b8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801b8ba:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b8be:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801b8c0:	f8b1 c000 	ldrh.w	ip, [r1]
 801b8c4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b8c6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b8ca:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801b8ce:	fb1e fe01 	smulbb	lr, lr, r1
 801b8d2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b8d6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b8d8:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801b8dc:	fb08 e801 	mla	r8, r8, r1, lr
 801b8e0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b8e4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b8e6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801b8ea:	fb19 f901 	smulbb	r9, r9, r1
 801b8ee:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b8f2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b8f4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b8f8:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b8fc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b900:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b902:	fa5f fc8c 	uxtb.w	ip, ip
 801b906:	fb1c fc01 	smulbb	ip, ip, r1
 801b90a:	00ed      	lsls	r5, r5, #3
 801b90c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b90e:	b2ed      	uxtb	r5, r5
 801b910:	fb05 c501 	mla	r5, r5, r1, ip
 801b914:	fa1f f888 	uxth.w	r8, r8
 801b918:	fa1f fe8e 	uxth.w	lr, lr
 801b91c:	b2ad      	uxth	r5, r5
 801b91e:	f108 0c01 	add.w	ip, r8, #1
 801b922:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b926:	f10e 0901 	add.w	r9, lr, #1
 801b92a:	f105 0c01 	add.w	ip, r5, #1
 801b92e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b932:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b936:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b93a:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801b93e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b942:	ea4c 0808 	orr.w	r8, ip, r8
 801b946:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801b948:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801b94c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801b950:	ea48 0809 	orr.w	r8, r8, r9
 801b954:	f821 8b02 	strh.w	r8, [r1], #2
 801b958:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b95a:	e7a5      	b.n	801b8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b95c:	f10c 0801 	add.w	r8, ip, #1
 801b960:	44a4      	add	ip, r4
 801b962:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801b964:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801b968:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b96c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b970:	fa1f fc88 	uxth.w	ip, r8
 801b974:	e763      	b.n	801b83e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801b976:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b97a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801b97e:	1aad      	subs	r5, r5, r2
 801b980:	b2ad      	uxth	r5, r5
 801b982:	2d00      	cmp	r5, #0
 801b984:	bf18      	it	ne
 801b986:	2200      	movne	r2, #0
 801b988:	9201      	str	r2, [sp, #4]
 801b98a:	e744      	b.n	801b816 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801b98c:	4b03      	ldr	r3, [pc, #12]	@ (801b99c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801b98e:	6818      	ldr	r0, [r3, #0]
 801b990:	6803      	ldr	r3, [r0, #0]
 801b992:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b994:	4798      	blx	r3
 801b996:	b01f      	add	sp, #124	@ 0x7c
 801b998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b99c:	20013f60 	.word	0x20013f60

0801b9a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801b9a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9a4:	b093      	sub	sp, #76	@ 0x4c
 801b9a6:	4616      	mov	r6, r2
 801b9a8:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801b9ac:	9003      	str	r0, [sp, #12]
 801b9ae:	460d      	mov	r5, r1
 801b9b0:	9201      	str	r2, [sp, #4]
 801b9b2:	2a00      	cmp	r2, #0
 801b9b4:	f000 8304 	beq.w	801bfc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 801b9b8:	6830      	ldr	r0, [r6, #0]
 801b9ba:	6871      	ldr	r1, [r6, #4]
 801b9bc:	ac0e      	add	r4, sp, #56	@ 0x38
 801b9be:	c403      	stmia	r4!, {r0, r1}
 801b9c0:	6818      	ldr	r0, [r3, #0]
 801b9c2:	6859      	ldr	r1, [r3, #4]
 801b9c4:	ac10      	add	r4, sp, #64	@ 0x40
 801b9c6:	c403      	stmia	r4!, {r0, r1}
 801b9c8:	a80e      	add	r0, sp, #56	@ 0x38
 801b9ca:	f7f8 fc93 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b9ce:	4631      	mov	r1, r6
 801b9d0:	a810      	add	r0, sp, #64	@ 0x40
 801b9d2:	f7f8 fcb7 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b9d6:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801b9da:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801b9de:	bfd7      	itett	le
 801b9e0:	b293      	uxthle	r3, r2
 801b9e2:	2301      	movgt	r3, #1
 801b9e4:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801b9e8:	fb91 f3f3 	sdivle	r3, r1, r3
 801b9ec:	9304      	str	r3, [sp, #16]
 801b9ee:	f105 0308 	add.w	r3, r5, #8
 801b9f2:	9904      	ldr	r1, [sp, #16]
 801b9f4:	9308      	str	r3, [sp, #32]
 801b9f6:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801b9fa:	440b      	add	r3, r1
 801b9fc:	3b01      	subs	r3, #1
 801b9fe:	fb93 f3f1 	sdiv	r3, r3, r1
 801ba02:	9908      	ldr	r1, [sp, #32]
 801ba04:	3b01      	subs	r3, #1
 801ba06:	b29b      	uxth	r3, r3
 801ba08:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801ba0c:	9309      	str	r3, [sp, #36]	@ 0x24
 801ba0e:	9904      	ldr	r1, [sp, #16]
 801ba10:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801ba14:	fb93 f0f1 	sdiv	r0, r3, r1
 801ba18:	b284      	uxth	r4, r0
 801ba1a:	9405      	str	r4, [sp, #20]
 801ba1c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801ba20:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801ba24:	fb05 3914 	mls	r9, r5, r4, r3
 801ba28:	fb19 f902 	smulbb	r9, r9, r2
 801ba2c:	4489      	add	r9, r1
 801ba2e:	fa1f f989 	uxth.w	r9, r9
 801ba32:	2d00      	cmp	r5, #0
 801ba34:	d05d      	beq.n	801baf2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801ba36:	1e6a      	subs	r2, r5, #1
 801ba38:	9808      	ldr	r0, [sp, #32]
 801ba3a:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801ba3e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ba40:	fa9a fa8a 	rev.w	sl, sl
 801ba44:	4492      	add	sl, r2
 801ba46:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801ba4a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801ba4e:	4411      	add	r1, r2
 801ba50:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801ba54:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801ba58:	4413      	add	r3, r2
 801ba5a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801ba5e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801ba62:	9302      	str	r3, [sp, #8]
 801ba64:	4bcb      	ldr	r3, [pc, #812]	@ (801bd94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801ba66:	6818      	ldr	r0, [r3, #0]
 801ba68:	6803      	ldr	r3, [r0, #0]
 801ba6a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ba6c:	4798      	blx	r3
 801ba6e:	4bca      	ldr	r3, [pc, #808]	@ (801bd98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801ba70:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801ba74:	881b      	ldrh	r3, [r3, #0]
 801ba76:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801ba7a:	fb03 2404 	mla	r4, r3, r4, r2
 801ba7e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ba82:	436b      	muls	r3, r5
 801ba84:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ba88:	930d      	str	r3, [sp, #52]	@ 0x34
 801ba8a:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801ba8e:	fb99 f3f3 	sdiv	r3, r9, r3
 801ba92:	9306      	str	r3, [sp, #24]
 801ba94:	9b01      	ldr	r3, [sp, #4]
 801ba96:	43db      	mvns	r3, r3
 801ba98:	b2db      	uxtb	r3, r3
 801ba9a:	930a      	str	r3, [sp, #40]	@ 0x28
 801ba9c:	9b03      	ldr	r3, [sp, #12]
 801ba9e:	3304      	adds	r3, #4
 801baa0:	4618      	mov	r0, r3
 801baa2:	2280      	movs	r2, #128	@ 0x80
 801baa4:	2100      	movs	r1, #0
 801baa6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801baa8:	f00c fbe9 	bl	802827e <memset>
 801baac:	4bbb      	ldr	r3, [pc, #748]	@ (801bd9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801baae:	9300      	str	r3, [sp, #0]
 801bab0:	2300      	movs	r3, #0
 801bab2:	f04f 0600 	mov.w	r6, #0
 801bab6:	9307      	str	r3, [sp, #28]
 801bab8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801baba:	42a3      	cmp	r3, r4
 801babc:	f240 827b 	bls.w	801bfb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 801bac0:	f04f 0e07 	mov.w	lr, #7
 801bac4:	f1b9 0f00 	cmp.w	r9, #0
 801bac8:	f000 8159 	beq.w	801bd7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801bacc:	f89a 5000 	ldrb.w	r5, [sl]
 801bad0:	b2ed      	uxtb	r5, r5
 801bad2:	11aa      	asrs	r2, r5, #6
 801bad4:	f10a 0701 	add.w	r7, sl, #1
 801bad8:	d10e      	bne.n	801baf8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801bada:	9b03      	ldr	r3, [sp, #12]
 801badc:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801bae0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801bae4:	88ae      	ldrh	r6, [r5, #4]
 801bae6:	f109 39ff 	add.w	r9, r9, #4294967295
 801baea:	fa1f f989 	uxth.w	r9, r9
 801baee:	46ba      	mov	sl, r7
 801baf0:	e7e8      	b.n	801bac4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801baf2:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801baf6:	e7a6      	b.n	801ba46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801baf8:	2a01      	cmp	r2, #1
 801bafa:	d129      	bne.n	801bb50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801bafc:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801bb00:	f005 0203 	and.w	r2, r5, #3
 801bb04:	3b02      	subs	r3, #2
 801bb06:	4413      	add	r3, r2
 801bb08:	f003 031f 	and.w	r3, r3, #31
 801bb0c:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801bb10:	f363 0604 	bfi	r6, r3, #0, #5
 801bb14:	3a02      	subs	r2, #2
 801bb16:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801bb1a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801bb1e:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801bb22:	f362 164a 	bfi	r6, r2, #5, #6
 801bb26:	3d02      	subs	r5, #2
 801bb28:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801bb2c:	f005 051f 	and.w	r5, r5, #31
 801bb30:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801bb34:	2103      	movs	r1, #3
 801bb36:	fb11 2205 	smlabb	r2, r1, r5, r2
 801bb3a:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801bb3e:	9a03      	ldr	r2, [sp, #12]
 801bb40:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801bb44:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bb48:	f365 26cf 	bfi	r6, r5, #11, #5
 801bb4c:	809e      	strh	r6, [r3, #4]
 801bb4e:	e7ca      	b.n	801bae6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801bb50:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801bb54:	2a02      	cmp	r2, #2
 801bb56:	b2ab      	uxth	r3, r5
 801bb58:	d136      	bne.n	801bbc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801bb5a:	2101      	movs	r1, #1
 801bb5c:	fb12 1205 	smlabb	r2, r2, r5, r1
 801bb60:	4492      	add	sl, r2
 801bb62:	463a      	mov	r2, r7
 801bb64:	4552      	cmp	r2, sl
 801bb66:	d01c      	beq.n	801bba2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801bb68:	4694      	mov	ip, r2
 801bb6a:	f04f 0b03 	mov.w	fp, #3
 801bb6e:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801bb72:	7852      	ldrb	r2, [r2, #1]
 801bb74:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801bb78:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801bb7c:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801bb80:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801bb84:	f001 021f 	and.w	r2, r1, #31
 801bb88:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801bb8c:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801bb90:	9a03      	ldr	r2, [sp, #12]
 801bb92:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801bb96:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801bb9a:	460e      	mov	r6, r1
 801bb9c:	8081      	strh	r1, [r0, #4]
 801bb9e:	4662      	mov	r2, ip
 801bba0:	e7e0      	b.n	801bb64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801bba2:	4599      	cmp	r9, r3
 801bba4:	d20b      	bcs.n	801bbbe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801bba6:	eba5 0509 	sub.w	r5, r5, r9
 801bbaa:	2d00      	cmp	r5, #0
 801bbac:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801bbb0:	f300 8209 	bgt.w	801bfc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 801bbb4:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801bbb8:	2301      	movs	r3, #1
 801bbba:	9307      	str	r3, [sp, #28]
 801bbbc:	e00c      	b.n	801bbd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801bbbe:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801bbc2:	eba9 0903 	sub.w	r9, r9, r3
 801bbc6:	e790      	b.n	801baea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 801bbc8:	4599      	cmp	r9, r3
 801bbca:	d2fa      	bcs.n	801bbc2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801bbcc:	eba5 0509 	sub.w	r5, r5, r9
 801bbd0:	2d00      	cmp	r5, #0
 801bbd2:	dc1d      	bgt.n	801bc10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801bbd4:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801bbd8:	f04f 0b00 	mov.w	fp, #0
 801bbdc:	f1b8 0f00 	cmp.w	r8, #0
 801bbe0:	f340 81a1 	ble.w	801bf26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 801bbe4:	783b      	ldrb	r3, [r7, #0]
 801bbe6:	b2db      	uxtb	r3, r3
 801bbe8:	119a      	asrs	r2, r3, #6
 801bbea:	f107 0a01 	add.w	sl, r7, #1
 801bbee:	f040 80d7 	bne.w	801bda0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801bbf2:	9a03      	ldr	r2, [sp, #12]
 801bbf4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801bbf8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bbfc:	889e      	ldrh	r6, [r3, #4]
 801bbfe:	9b01      	ldr	r3, [sp, #4]
 801bc00:	2bff      	cmp	r3, #255	@ 0xff
 801bc02:	f040 81e9 	bne.w	801bfd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801bc06:	8026      	strh	r6, [r4, #0]
 801bc08:	f108 38ff 	add.w	r8, r8, #4294967295
 801bc0c:	3402      	adds	r4, #2
 801bc0e:	e0be      	b.n	801bd8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801bc10:	9b02      	ldr	r3, [sp, #8]
 801bc12:	9a02      	ldr	r2, [sp, #8]
 801bc14:	42ab      	cmp	r3, r5
 801bc16:	bfa8      	it	ge
 801bc18:	462b      	movge	r3, r5
 801bc1a:	eba2 0803 	sub.w	r8, r2, r3
 801bc1e:	9a07      	ldr	r2, [sp, #28]
 801bc20:	1aed      	subs	r5, r5, r3
 801bc22:	2a00      	cmp	r2, #0
 801bc24:	d05a      	beq.n	801bcdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801bc26:	9a01      	ldr	r2, [sp, #4]
 801bc28:	2aff      	cmp	r2, #255	@ 0xff
 801bc2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801bc2e:	d049      	beq.n	801bcc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801bc30:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801bc34:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801bc38:	42a3      	cmp	r3, r4
 801bc3a:	f240 80a5 	bls.w	801bd88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801bc3e:	46bc      	mov	ip, r7
 801bc40:	8820      	ldrh	r0, [r4, #0]
 801bc42:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801bc46:	7879      	ldrb	r1, [r7, #1]
 801bc48:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801bc4c:	b212      	sxth	r2, r2
 801bc4e:	b291      	uxth	r1, r2
 801bc50:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801bc54:	120f      	asrs	r7, r1, #8
 801bc56:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801bc5a:	fb1a fa09 	smulbb	sl, sl, r9
 801bc5e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801bc62:	fb07 a70e 	mla	r7, r7, lr, sl
 801bc66:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801bc6a:	00c0      	lsls	r0, r0, #3
 801bc6c:	10c9      	asrs	r1, r1, #3
 801bc6e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801bc72:	00d2      	lsls	r2, r2, #3
 801bc74:	b2c0      	uxtb	r0, r0
 801bc76:	fb1a fa09 	smulbb	sl, sl, r9
 801bc7a:	fb10 f009 	smulbb	r0, r0, r9
 801bc7e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bc82:	b2d2      	uxtb	r2, r2
 801bc84:	b2bf      	uxth	r7, r7
 801bc86:	fb01 a10e 	mla	r1, r1, lr, sl
 801bc8a:	fb02 020e 	mla	r2, r2, lr, r0
 801bc8e:	b289      	uxth	r1, r1
 801bc90:	b292      	uxth	r2, r2
 801bc92:	1c78      	adds	r0, r7, #1
 801bc94:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801bc98:	f101 0a01 	add.w	sl, r1, #1
 801bc9c:	1c50      	adds	r0, r2, #1
 801bc9e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801bca2:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801bca6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801bcaa:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801bcae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bcb2:	4307      	orrs	r7, r0
 801bcb4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bcb8:	ea47 070a 	orr.w	r7, r7, sl
 801bcbc:	f824 7b02 	strh.w	r7, [r4], #2
 801bcc0:	4667      	mov	r7, ip
 801bcc2:	e7b9      	b.n	801bc38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801bcc4:	42a3      	cmp	r3, r4
 801bcc6:	d95f      	bls.n	801bd88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801bcc8:	463a      	mov	r2, r7
 801bcca:	f812 1b02 	ldrb.w	r1, [r2], #2
 801bcce:	7878      	ldrb	r0, [r7, #1]
 801bcd0:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801bcd4:	f824 1b02 	strh.w	r1, [r4], #2
 801bcd8:	4617      	mov	r7, r2
 801bcda:	e7f3      	b.n	801bcc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801bcdc:	9901      	ldr	r1, [sp, #4]
 801bcde:	29ff      	cmp	r1, #255	@ 0xff
 801bce0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801bce4:	b2b2      	uxth	r2, r6
 801bce6:	d044      	beq.n	801bd72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801bce8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801bcec:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801bcf0:	ea4f 2922 	mov.w	r9, r2, asr #8
 801bcf4:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801bcf8:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801bcfc:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801bd00:	4608      	mov	r0, r1
 801bd02:	fb09 f901 	mul.w	r9, r9, r1
 801bd06:	fb0e fe01 	mul.w	lr, lr, r1
 801bd0a:	00d1      	lsls	r1, r2, #3
 801bd0c:	b2c9      	uxtb	r1, r1
 801bd0e:	4341      	muls	r1, r0
 801bd10:	429c      	cmp	r4, r3
 801bd12:	f4bf af61 	bcs.w	801bbd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801bd16:	8822      	ldrh	r2, [r4, #0]
 801bd18:	1210      	asrs	r0, r2, #8
 801bd1a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801bd1e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bd22:	00d2      	lsls	r2, r2, #3
 801bd24:	fb00 900a 	mla	r0, r0, sl, r9
 801bd28:	b2d2      	uxtb	r2, r2
 801bd2a:	b280      	uxth	r0, r0
 801bd2c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801bd30:	fb02 120a 	mla	r2, r2, sl, r1
 801bd34:	b292      	uxth	r2, r2
 801bd36:	f100 0b01 	add.w	fp, r0, #1
 801bd3a:	fb0c ec0a 	mla	ip, ip, sl, lr
 801bd3e:	fa1f fc8c 	uxth.w	ip, ip
 801bd42:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801bd46:	1c50      	adds	r0, r2, #1
 801bd48:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801bd4c:	f10c 0201 	add.w	r2, ip, #1
 801bd50:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bd54:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801bd58:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801bd5c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801bd60:	ea40 0b0b 	orr.w	fp, r0, fp
 801bd64:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801bd68:	ea4b 0b0c 	orr.w	fp, fp, ip
 801bd6c:	f824 bb02 	strh.w	fp, [r4], #2
 801bd70:	e7ce      	b.n	801bd10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801bd72:	429c      	cmp	r4, r3
 801bd74:	f4bf af30 	bcs.w	801bbd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801bd78:	f824 2b02 	strh.w	r2, [r4], #2
 801bd7c:	e7f9      	b.n	801bd72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801bd7e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801bd82:	4657      	mov	r7, sl
 801bd84:	464d      	mov	r5, r9
 801bd86:	e727      	b.n	801bbd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801bd88:	2300      	movs	r3, #0
 801bd8a:	e716      	b.n	801bbba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801bd8c:	44bb      	add	fp, r7
 801bd8e:	4657      	mov	r7, sl
 801bd90:	e724      	b.n	801bbdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801bd92:	bf00      	nop
 801bd94:	20013f60 	.word	0x20013f60
 801bd98:	20013f5a 	.word	0x20013f5a
 801bd9c:	20000180 	.word	0x20000180
 801bda0:	2a01      	cmp	r2, #1
 801bda2:	d12a      	bne.n	801bdfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801bda4:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801bda8:	f003 0203 	and.w	r2, r3, #3
 801bdac:	3902      	subs	r1, #2
 801bdae:	4411      	add	r1, r2
 801bdb0:	f001 011f 	and.w	r1, r1, #31
 801bdb4:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801bdb8:	f361 0604 	bfi	r6, r1, #0, #5
 801bdbc:	3802      	subs	r0, #2
 801bdbe:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801bdc2:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801bdc6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801bdca:	f360 164a 	bfi	r6, r0, #5, #6
 801bdce:	3b02      	subs	r3, #2
 801bdd0:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801bdd4:	f002 031f 	and.w	r3, r2, #31
 801bdd8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801bddc:	2203      	movs	r2, #3
 801bdde:	f363 26cf 	bfi	r6, r3, #11, #5
 801bde2:	fb12 0303 	smlabb	r3, r2, r3, r0
 801bde6:	2207      	movs	r2, #7
 801bde8:	fb12 3301 	smlabb	r3, r2, r1, r3
 801bdec:	9a03      	ldr	r2, [sp, #12]
 801bdee:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801bdf2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bdf6:	809e      	strh	r6, [r3, #4]
 801bdf8:	e701      	b.n	801bbfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801bdfa:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801bdfe:	45a8      	cmp	r8, r5
 801be00:	4647      	mov	r7, r8
 801be02:	bfa8      	it	ge
 801be04:	462f      	movge	r7, r5
 801be06:	2a02      	cmp	r2, #2
 801be08:	d154      	bne.n	801beb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801be0a:	9b01      	ldr	r3, [sp, #4]
 801be0c:	2bff      	cmp	r3, #255	@ 0xff
 801be0e:	d01a      	beq.n	801be46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801be10:	eb0b 0307 	add.w	r3, fp, r7
 801be14:	2b40      	cmp	r3, #64	@ 0x40
 801be16:	dd16      	ble.n	801be46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801be18:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801be1c:	4649      	mov	r1, r9
 801be1e:	9800      	ldr	r0, [sp, #0]
 801be20:	f7e5 f876 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801be24:	465a      	mov	r2, fp
 801be26:	9b01      	ldr	r3, [sp, #4]
 801be28:	9900      	ldr	r1, [sp, #0]
 801be2a:	4620      	mov	r0, r4
 801be2c:	f7e5 f89a 	bl	8000f64 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801be30:	9b00      	ldr	r3, [sp, #0]
 801be32:	461a      	mov	r2, r3
 801be34:	4b6c      	ldr	r3, [pc, #432]	@ (801bfe8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801be36:	429a      	cmp	r2, r3
 801be38:	bf0c      	ite	eq
 801be3a:	4b6c      	ldreq	r3, [pc, #432]	@ (801bfec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801be3c:	4b6a      	ldrne	r3, [pc, #424]	@ (801bfe8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801be3e:	9300      	str	r3, [sp, #0]
 801be40:	444c      	add	r4, r9
 801be42:	f04f 0b00 	mov.w	fp, #0
 801be46:	4652      	mov	r2, sl
 801be48:	2100      	movs	r1, #0
 801be4a:	42a9      	cmp	r1, r5
 801be4c:	da2c      	bge.n	801bea8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801be4e:	4694      	mov	ip, r2
 801be50:	f04f 0903 	mov.w	r9, #3
 801be54:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801be58:	7852      	ldrb	r2, [r2, #1]
 801be5a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801be5e:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801be62:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801be66:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801be6a:	f003 021f 	and.w	r2, r3, #31
 801be6e:	fb19 000e 	smlabb	r0, r9, lr, r0
 801be72:	f04f 0e07 	mov.w	lr, #7
 801be76:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801be7a:	9a03      	ldr	r2, [sp, #12]
 801be7c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801be80:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801be84:	42b9      	cmp	r1, r7
 801be86:	461e      	mov	r6, r3
 801be88:	8083      	strh	r3, [r0, #4]
 801be8a:	da0a      	bge.n	801bea2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801be8c:	9a01      	ldr	r2, [sp, #4]
 801be8e:	2aff      	cmp	r2, #255	@ 0xff
 801be90:	bf15      	itete	ne
 801be92:	9a00      	ldrne	r2, [sp, #0]
 801be94:	8023      	strheq	r3, [r4, #0]
 801be96:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801be9a:	3402      	addeq	r4, #2
 801be9c:	bf18      	it	ne
 801be9e:	f10b 0b01 	addne.w	fp, fp, #1
 801bea2:	3101      	adds	r1, #1
 801bea4:	4662      	mov	r2, ip
 801bea6:	e7d0      	b.n	801be4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801bea8:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801beac:	eba8 0807 	sub.w	r8, r8, r7
 801beb0:	1bed      	subs	r5, r5, r7
 801beb2:	e76c      	b.n	801bd8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801beb4:	9b01      	ldr	r3, [sp, #4]
 801beb6:	2bff      	cmp	r3, #255	@ 0xff
 801beb8:	eba8 0807 	sub.w	r8, r8, r7
 801bebc:	eba5 0507 	sub.w	r5, r5, r7
 801bec0:	fa1f f986 	uxth.w	r9, r6
 801bec4:	d027      	beq.n	801bf16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 801bec6:	eb0b 0307 	add.w	r3, fp, r7
 801beca:	2b40      	cmp	r3, #64	@ 0x40
 801becc:	dd18      	ble.n	801bf00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 801bece:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801bed2:	4619      	mov	r1, r3
 801bed4:	9800      	ldr	r0, [sp, #0]
 801bed6:	930c      	str	r3, [sp, #48]	@ 0x30
 801bed8:	f7e5 f81a 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801bedc:	465a      	mov	r2, fp
 801bede:	9b01      	ldr	r3, [sp, #4]
 801bee0:	9900      	ldr	r1, [sp, #0]
 801bee2:	4620      	mov	r0, r4
 801bee4:	f7e5 f83e 	bl	8000f64 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801bee8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801beea:	441c      	add	r4, r3
 801beec:	9b00      	ldr	r3, [sp, #0]
 801beee:	461a      	mov	r2, r3
 801bef0:	4b3d      	ldr	r3, [pc, #244]	@ (801bfe8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801bef2:	429a      	cmp	r2, r3
 801bef4:	bf0c      	ite	eq
 801bef6:	4b3d      	ldreq	r3, [pc, #244]	@ (801bfec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801bef8:	4b3b      	ldrne	r3, [pc, #236]	@ (801bfe8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801befa:	9300      	str	r3, [sp, #0]
 801befc:	f04f 0b00 	mov.w	fp, #0
 801bf00:	9b00      	ldr	r3, [sp, #0]
 801bf02:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801bf06:	463b      	mov	r3, r7
 801bf08:	2b00      	cmp	r3, #0
 801bf0a:	f43f af3f 	beq.w	801bd8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801bf0e:	f822 9b02 	strh.w	r9, [r2], #2
 801bf12:	3b01      	subs	r3, #1
 801bf14:	e7f8      	b.n	801bf08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801bf16:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801bf1a:	42a7      	cmp	r7, r4
 801bf1c:	f67f af37 	bls.w	801bd8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801bf20:	f824 9b02 	strh.w	r9, [r4], #2
 801bf24:	e7f9      	b.n	801bf1a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801bf26:	f1bb 0f00 	cmp.w	fp, #0
 801bf2a:	d00c      	beq.n	801bf46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 801bf2c:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801bf30:	4641      	mov	r1, r8
 801bf32:	9800      	ldr	r0, [sp, #0]
 801bf34:	f7e4 ffec 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801bf38:	4620      	mov	r0, r4
 801bf3a:	9b01      	ldr	r3, [sp, #4]
 801bf3c:	9900      	ldr	r1, [sp, #0]
 801bf3e:	465a      	mov	r2, fp
 801bf40:	f7e5 f810 	bl	8000f64 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801bf44:	4444      	add	r4, r8
 801bf46:	4b2a      	ldr	r3, [pc, #168]	@ (801bff0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801bf48:	9a02      	ldr	r2, [sp, #8]
 801bf4a:	881b      	ldrh	r3, [r3, #0]
 801bf4c:	1a9b      	subs	r3, r3, r2
 801bf4e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bf52:	9b06      	ldr	r3, [sp, #24]
 801bf54:	3301      	adds	r3, #1
 801bf56:	9306      	str	r3, [sp, #24]
 801bf58:	9a06      	ldr	r2, [sp, #24]
 801bf5a:	9b04      	ldr	r3, [sp, #16]
 801bf5c:	4293      	cmp	r3, r2
 801bf5e:	d120      	bne.n	801bfa2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 801bf60:	9b05      	ldr	r3, [sp, #20]
 801bf62:	9a05      	ldr	r2, [sp, #20]
 801bf64:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801bf68:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801bf6c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801bf6e:	f103 0801 	add.w	r8, r3, #1
 801bf72:	9b08      	ldr	r3, [sp, #32]
 801bf74:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801bf78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bf7a:	ba3f      	rev	r7, r7
 801bf7c:	2280      	movs	r2, #128	@ 0x80
 801bf7e:	2100      	movs	r1, #0
 801bf80:	441f      	add	r7, r3
 801bf82:	eba9 0905 	sub.w	r9, r9, r5
 801bf86:	f00c f97a 	bl	802827e <memset>
 801bf8a:	2300      	movs	r3, #0
 801bf8c:	fa1f f989 	uxth.w	r9, r9
 801bf90:	f04f 0600 	mov.w	r6, #0
 801bf94:	f8cd 8014 	str.w	r8, [sp, #20]
 801bf98:	9306      	str	r3, [sp, #24]
 801bf9a:	f7e4 ffaf 	bl	8000efc <_ZN8touchgfx5paint8tearDownEv>
 801bf9e:	46ba      	mov	sl, r7
 801bfa0:	e58a      	b.n	801bab8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801bfa2:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801bfa6:	9b02      	ldr	r3, [sp, #8]
 801bfa8:	eba9 0903 	sub.w	r9, r9, r3
 801bfac:	eba9 0505 	sub.w	r5, r9, r5
 801bfb0:	fa1f f985 	uxth.w	r9, r5
 801bfb4:	e7f1      	b.n	801bf9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 801bfb6:	4b0f      	ldr	r3, [pc, #60]	@ (801bff4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 801bfb8:	6818      	ldr	r0, [r3, #0]
 801bfba:	6803      	ldr	r3, [r0, #0]
 801bfbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bfbe:	4798      	blx	r3
 801bfc0:	b013      	add	sp, #76	@ 0x4c
 801bfc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfc6:	9b02      	ldr	r3, [sp, #8]
 801bfc8:	9a02      	ldr	r2, [sp, #8]
 801bfca:	42ab      	cmp	r3, r5
 801bfcc:	bfa8      	it	ge
 801bfce:	462b      	movge	r3, r5
 801bfd0:	eba2 0803 	sub.w	r8, r2, r3
 801bfd4:	1aed      	subs	r5, r5, r3
 801bfd6:	e626      	b.n	801bc26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801bfd8:	f108 38ff 	add.w	r8, r8, #4294967295
 801bfdc:	fa1f f986 	uxth.w	r9, r6
 801bfe0:	2500      	movs	r5, #0
 801bfe2:	2701      	movs	r7, #1
 801bfe4:	e76f      	b.n	801bec6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801bfe6:	bf00      	nop
 801bfe8:	20000180 	.word	0x20000180
 801bfec:	20000280 	.word	0x20000280
 801bff0:	20013f5a 	.word	0x20013f5a
 801bff4:	20013f60 	.word	0x20013f60

0801bff8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bffc:	b08f      	sub	sp, #60	@ 0x3c
 801bffe:	461c      	mov	r4, r3
 801c000:	9203      	str	r2, [sp, #12]
 801c002:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801c006:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c008:	9202      	str	r2, [sp, #8]
 801c00a:	460f      	mov	r7, r1
 801c00c:	2a00      	cmp	r2, #0
 801c00e:	f000 8128 	beq.w	801c262 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801c012:	6820      	ldr	r0, [r4, #0]
 801c014:	6861      	ldr	r1, [r4, #4]
 801c016:	aa0a      	add	r2, sp, #40	@ 0x28
 801c018:	c203      	stmia	r2!, {r0, r1}
 801c01a:	6818      	ldr	r0, [r3, #0]
 801c01c:	6859      	ldr	r1, [r3, #4]
 801c01e:	aa0c      	add	r2, sp, #48	@ 0x30
 801c020:	c203      	stmia	r2!, {r0, r1}
 801c022:	a80a      	add	r0, sp, #40	@ 0x28
 801c024:	f7f8 f966 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c028:	4621      	mov	r1, r4
 801c02a:	a80c      	add	r0, sp, #48	@ 0x30
 801c02c:	f7f8 f98a 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c030:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801c034:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801c038:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801c03c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801c040:	bfde      	ittt	le
 801c042:	b2b3      	uxthle	r3, r6
 801c044:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801c048:	fb92 f3f3 	sdivle	r3, r2, r3
 801c04c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801c050:	bfc8      	it	gt
 801c052:	2301      	movgt	r3, #1
 801c054:	fb92 f1f3 	sdiv	r1, r2, r3
 801c058:	fa1f fc81 	uxth.w	ip, r1
 801c05c:	fb0c 2413 	mls	r4, ip, r3, r2
 801c060:	fb14 f406 	smulbb	r4, r4, r6
 801c064:	441d      	add	r5, r3
 801c066:	4404      	add	r4, r0
 801c068:	4661      	mov	r1, ip
 801c06a:	3d01      	subs	r5, #1
 801c06c:	b2a4      	uxth	r4, r4
 801c06e:	fb95 f5f3 	sdiv	r5, r5, r3
 801c072:	b121      	cbz	r1, 801c07e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801c074:	9b03      	ldr	r3, [sp, #12]
 801c076:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c07a:	ba1b      	rev	r3, r3
 801c07c:	441f      	add	r7, r3
 801c07e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801c082:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801c086:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801c08a:	4418      	add	r0, r3
 801c08c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801c090:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801c094:	441a      	add	r2, r3
 801c096:	4b74      	ldr	r3, [pc, #464]	@ (801c268 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c098:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801c09c:	6818      	ldr	r0, [r3, #0]
 801c09e:	6803      	ldr	r3, [r0, #0]
 801c0a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c0a2:	4798      	blx	r3
 801c0a4:	4a71      	ldr	r2, [pc, #452]	@ (801c26c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801c0a6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801c0aa:	8813      	ldrh	r3, [r2, #0]
 801c0ac:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801c0b0:	9209      	str	r2, [sp, #36]	@ 0x24
 801c0b2:	fb03 c101 	mla	r1, r3, r1, ip
 801c0b6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c0ba:	4373      	muls	r3, r6
 801c0bc:	b2ad      	uxth	r5, r5
 801c0be:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c0c2:	00ad      	lsls	r5, r5, #2
 801c0c4:	2c00      	cmp	r4, #0
 801c0c6:	9304      	str	r3, [sp, #16]
 801c0c8:	f105 0304 	add.w	r3, r5, #4
 801c0cc:	9305      	str	r3, [sp, #20]
 801c0ce:	bf0c      	ite	eq
 801c0d0:	46c8      	moveq	r8, r9
 801c0d2:	f04f 0800 	movne.w	r8, #0
 801c0d6:	2300      	movs	r3, #0
 801c0d8:	fa1f f888 	uxth.w	r8, r8
 801c0dc:	9301      	str	r3, [sp, #4]
 801c0de:	9a04      	ldr	r2, [sp, #16]
 801c0e0:	4282      	cmp	r2, r0
 801c0e2:	f240 80b9 	bls.w	801c258 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801c0e6:	b95b      	cbnz	r3, 801c100 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801c0e8:	783a      	ldrb	r2, [r7, #0]
 801c0ea:	0993      	lsrs	r3, r2, #6
 801c0ec:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801c0f0:	9201      	str	r2, [sp, #4]
 801c0f2:	1e5a      	subs	r2, r3, #1
 801c0f4:	2a02      	cmp	r2, #2
 801c0f6:	bf8d      	iteet	hi
 801c0f8:	787b      	ldrbhi	r3, [r7, #1]
 801c0fa:	3701      	addls	r7, #1
 801c0fc:	b29b      	uxthls	r3, r3
 801c0fe:	3702      	addhi	r7, #2
 801c100:	b184      	cbz	r4, 801c124 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801c102:	429c      	cmp	r4, r3
 801c104:	bf95      	itete	ls
 801c106:	1b1c      	subls	r4, r3, r4
 801c108:	1ae4      	subhi	r4, r4, r3
 801c10a:	fa1f fa84 	uxthls.w	sl, r4
 801c10e:	b2a4      	uxthhi	r4, r4
 801c110:	bf87      	ittee	hi
 801c112:	46c4      	movhi	ip, r8
 801c114:	f04f 0a00 	movhi.w	sl, #0
 801c118:	fa1f fc89 	uxthls.w	ip, r9
 801c11c:	2400      	movls	r4, #0
 801c11e:	4653      	mov	r3, sl
 801c120:	46e0      	mov	r8, ip
 801c122:	e7dc      	b.n	801c0de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801c124:	2204      	movs	r2, #4
 801c126:	4615      	mov	r5, r2
 801c128:	9905      	ldr	r1, [sp, #20]
 801c12a:	9a01      	ldr	r2, [sp, #4]
 801c12c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c130:	9903      	ldr	r1, [sp, #12]
 801c132:	588a      	ldr	r2, [r1, r2]
 801c134:	4543      	cmp	r3, r8
 801c136:	bf27      	ittee	cs
 801c138:	eba3 0a08 	subcs.w	sl, r3, r8
 801c13c:	46c6      	movcs	lr, r8
 801c13e:	eba8 0c03 	subcc.w	ip, r8, r3
 801c142:	469e      	movcc	lr, r3
 801c144:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801c148:	bf27      	ittee	cs
 801c14a:	fa1f fa8a 	uxthcs.w	sl, sl
 801c14e:	46a4      	movcs	ip, r4
 801c150:	fa1f fc8c 	uxthcc.w	ip, ip
 801c154:	46a2      	movcc	sl, r4
 801c156:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801c15a:	2900      	cmp	r1, #0
 801c15c:	d066      	beq.n	801c22c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801c15e:	29ff      	cmp	r1, #255	@ 0xff
 801c160:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801c164:	d114      	bne.n	801c190 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c166:	9d02      	ldr	r5, [sp, #8]
 801c168:	2dff      	cmp	r5, #255	@ 0xff
 801c16a:	d111      	bne.n	801c190 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c16c:	0951      	lsrs	r1, r2, #5
 801c16e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801c172:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c176:	f026 0607 	bic.w	r6, r6, #7
 801c17a:	430e      	orrs	r6, r1
 801c17c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c180:	4316      	orrs	r6, r2
 801c182:	b2b6      	uxth	r6, r6
 801c184:	4486      	add	lr, r0
 801c186:	4586      	cmp	lr, r0
 801c188:	d051      	beq.n	801c22e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c18a:	f820 6b02 	strh.w	r6, [r0], #2
 801c18e:	e7fa      	b.n	801c186 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801c190:	9d02      	ldr	r5, [sp, #8]
 801c192:	4369      	muls	r1, r5
 801c194:	1c4d      	adds	r5, r1, #1
 801c196:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801c19a:	122d      	asrs	r5, r5, #8
 801c19c:	ea6f 0b05 	mvn.w	fp, r5
 801c1a0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c1a4:	b2ad      	uxth	r5, r5
 801c1a6:	b2f6      	uxtb	r6, r6
 801c1a8:	b2d2      	uxtb	r2, r2
 801c1aa:	fb11 f105 	smulbb	r1, r1, r5
 801c1ae:	fb16 f605 	smulbb	r6, r6, r5
 801c1b2:	fb12 f205 	smulbb	r2, r2, r5
 801c1b6:	b289      	uxth	r1, r1
 801c1b8:	b2b6      	uxth	r6, r6
 801c1ba:	b292      	uxth	r2, r2
 801c1bc:	9106      	str	r1, [sp, #24]
 801c1be:	9607      	str	r6, [sp, #28]
 801c1c0:	9208      	str	r2, [sp, #32]
 801c1c2:	4486      	add	lr, r0
 801c1c4:	fa5f fb8b 	uxtb.w	fp, fp
 801c1c8:	4586      	cmp	lr, r0
 801c1ca:	d030      	beq.n	801c22e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c1cc:	8802      	ldrh	r2, [r0, #0]
 801c1ce:	9906      	ldr	r1, [sp, #24]
 801c1d0:	1216      	asrs	r6, r2, #8
 801c1d2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c1d6:	10d5      	asrs	r5, r2, #3
 801c1d8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c1dc:	fb06 160b 	mla	r6, r6, fp, r1
 801c1e0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c1e4:	9907      	ldr	r1, [sp, #28]
 801c1e6:	00d2      	lsls	r2, r2, #3
 801c1e8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c1ec:	fb05 150b 	mla	r5, r5, fp, r1
 801c1f0:	b2d2      	uxtb	r2, r2
 801c1f2:	9908      	ldr	r1, [sp, #32]
 801c1f4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c1f8:	b2b6      	uxth	r6, r6
 801c1fa:	fb02 120b 	mla	r2, r2, fp, r1
 801c1fe:	b292      	uxth	r2, r2
 801c200:	1c71      	adds	r1, r6, #1
 801c202:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801c206:	1c51      	adds	r1, r2, #1
 801c208:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c20c:	b2ad      	uxth	r5, r5
 801c20e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c212:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801c216:	4316      	orrs	r6, r2
 801c218:	1c6a      	adds	r2, r5, #1
 801c21a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c21e:	096d      	lsrs	r5, r5, #5
 801c220:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c224:	432e      	orrs	r6, r5
 801c226:	f820 6b02 	strh.w	r6, [r0], #2
 801c22a:	e7cd      	b.n	801c1c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801c22c:	4470      	add	r0, lr
 801c22e:	4543      	cmp	r3, r8
 801c230:	f4ff af75 	bcc.w	801c11e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c234:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801c238:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c23a:	fa1f fc89 	uxth.w	ip, r9
 801c23e:	eba4 040c 	sub.w	r4, r4, ip
 801c242:	881b      	ldrh	r3, [r3, #0]
 801c244:	b2a4      	uxth	r4, r4
 801c246:	2c00      	cmp	r4, #0
 801c248:	eba3 0309 	sub.w	r3, r3, r9
 801c24c:	bf18      	it	ne
 801c24e:	f04f 0c00 	movne.w	ip, #0
 801c252:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c256:	e762      	b.n	801c11e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c258:	4b03      	ldr	r3, [pc, #12]	@ (801c268 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c25a:	6818      	ldr	r0, [r3, #0]
 801c25c:	6803      	ldr	r3, [r0, #0]
 801c25e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c260:	4798      	blx	r3
 801c262:	b00f      	add	sp, #60	@ 0x3c
 801c264:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c268:	20013f60 	.word	0x20013f60
 801c26c:	20013f5a 	.word	0x20013f5a

0801c270 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c274:	b093      	sub	sp, #76	@ 0x4c
 801c276:	461c      	mov	r4, r3
 801c278:	9205      	str	r2, [sp, #20]
 801c27a:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801c27e:	9101      	str	r1, [sp, #4]
 801c280:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c282:	9202      	str	r2, [sp, #8]
 801c284:	2a00      	cmp	r2, #0
 801c286:	f000 812c 	beq.w	801c4e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c28a:	6820      	ldr	r0, [r4, #0]
 801c28c:	6861      	ldr	r1, [r4, #4]
 801c28e:	aa0e      	add	r2, sp, #56	@ 0x38
 801c290:	c203      	stmia	r2!, {r0, r1}
 801c292:	6818      	ldr	r0, [r3, #0]
 801c294:	6859      	ldr	r1, [r3, #4]
 801c296:	aa10      	add	r2, sp, #64	@ 0x40
 801c298:	c203      	stmia	r2!, {r0, r1}
 801c29a:	a80e      	add	r0, sp, #56	@ 0x38
 801c29c:	f7f8 f82a 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c2a0:	4621      	mov	r1, r4
 801c2a2:	a810      	add	r0, sp, #64	@ 0x40
 801c2a4:	f7f8 f84e 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c2a8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801c2ac:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801c2b0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801c2b4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801c2b8:	bfde      	ittt	le
 801c2ba:	b2b3      	uxthle	r3, r6
 801c2bc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801c2c0:	fb92 f3f3 	sdivle	r3, r2, r3
 801c2c4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801c2c8:	bfc8      	it	gt
 801c2ca:	2301      	movgt	r3, #1
 801c2cc:	fb92 f1f3 	sdiv	r1, r2, r3
 801c2d0:	fa1f fc81 	uxth.w	ip, r1
 801c2d4:	fb0c 2413 	mls	r4, ip, r3, r2
 801c2d8:	fb14 f406 	smulbb	r4, r4, r6
 801c2dc:	441d      	add	r5, r3
 801c2de:	4404      	add	r4, r0
 801c2e0:	4661      	mov	r1, ip
 801c2e2:	3d01      	subs	r5, #1
 801c2e4:	b2a4      	uxth	r4, r4
 801c2e6:	fb95 f5f3 	sdiv	r5, r5, r3
 801c2ea:	b131      	cbz	r1, 801c2fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801c2ec:	9b05      	ldr	r3, [sp, #20]
 801c2ee:	9901      	ldr	r1, [sp, #4]
 801c2f0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c2f4:	ba1b      	rev	r3, r3
 801c2f6:	4419      	add	r1, r3
 801c2f8:	9101      	str	r1, [sp, #4]
 801c2fa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801c2fe:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801c302:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801c306:	4418      	add	r0, r3
 801c308:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801c30c:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801c310:	441a      	add	r2, r3
 801c312:	4b75      	ldr	r3, [pc, #468]	@ (801c4e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c314:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801c318:	6818      	ldr	r0, [r3, #0]
 801c31a:	6803      	ldr	r3, [r0, #0]
 801c31c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c31e:	4798      	blx	r3
 801c320:	4972      	ldr	r1, [pc, #456]	@ (801c4ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801c322:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801c326:	880b      	ldrh	r3, [r1, #0]
 801c328:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801c32c:	910d      	str	r1, [sp, #52]	@ 0x34
 801c32e:	fb03 c202 	mla	r2, r3, r2, ip
 801c332:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c336:	4373      	muls	r3, r6
 801c338:	b2ad      	uxth	r5, r5
 801c33a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c33e:	00ad      	lsls	r5, r5, #2
 801c340:	9308      	str	r3, [sp, #32]
 801c342:	1d2b      	adds	r3, r5, #4
 801c344:	9309      	str	r3, [sp, #36]	@ 0x24
 801c346:	9b02      	ldr	r3, [sp, #8]
 801c348:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c34c:	9106      	str	r1, [sp, #24]
 801c34e:	43da      	mvns	r2, r3
 801c350:	2c00      	cmp	r4, #0
 801c352:	bf0c      	ite	eq
 801c354:	46dc      	moveq	ip, fp
 801c356:	f04f 0c00 	movne.w	ip, #0
 801c35a:	2300      	movs	r3, #0
 801c35c:	b2d2      	uxtb	r2, r2
 801c35e:	fa1f fc8c 	uxth.w	ip, ip
 801c362:	9303      	str	r3, [sp, #12]
 801c364:	9207      	str	r2, [sp, #28]
 801c366:	9a08      	ldr	r2, [sp, #32]
 801c368:	4282      	cmp	r2, r0
 801c36a:	f240 80b5 	bls.w	801c4d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c36e:	b963      	cbnz	r3, 801c38a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c370:	9b01      	ldr	r3, [sp, #4]
 801c372:	781a      	ldrb	r2, [r3, #0]
 801c374:	0993      	lsrs	r3, r2, #6
 801c376:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801c37a:	9203      	str	r2, [sp, #12]
 801c37c:	1e5a      	subs	r2, r3, #1
 801c37e:	2a02      	cmp	r2, #2
 801c380:	d815      	bhi.n	801c3ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801c382:	9a01      	ldr	r2, [sp, #4]
 801c384:	3201      	adds	r2, #1
 801c386:	9201      	str	r2, [sp, #4]
 801c388:	b29b      	uxth	r3, r3
 801c38a:	b1b4      	cbz	r4, 801c3ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801c38c:	429c      	cmp	r4, r3
 801c38e:	bf95      	itete	ls
 801c390:	1b1c      	subls	r4, r3, r4
 801c392:	1ae4      	subhi	r4, r4, r3
 801c394:	fa1f f884 	uxthls.w	r8, r4
 801c398:	b2a4      	uxthhi	r4, r4
 801c39a:	bf87      	ittee	hi
 801c39c:	4666      	movhi	r6, ip
 801c39e:	f04f 0800 	movhi.w	r8, #0
 801c3a2:	fa1f f68b 	uxthls.w	r6, fp
 801c3a6:	2400      	movls	r4, #0
 801c3a8:	4643      	mov	r3, r8
 801c3aa:	46b4      	mov	ip, r6
 801c3ac:	e7db      	b.n	801c366 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801c3ae:	9a01      	ldr	r2, [sp, #4]
 801c3b0:	9b01      	ldr	r3, [sp, #4]
 801c3b2:	3202      	adds	r2, #2
 801c3b4:	785b      	ldrb	r3, [r3, #1]
 801c3b6:	9201      	str	r2, [sp, #4]
 801c3b8:	e7e7      	b.n	801c38a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c3ba:	2203      	movs	r2, #3
 801c3bc:	4615      	mov	r5, r2
 801c3be:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c3c0:	9a03      	ldr	r2, [sp, #12]
 801c3c2:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c3c6:	9905      	ldr	r1, [sp, #20]
 801c3c8:	4563      	cmp	r3, ip
 801c3ca:	eb01 0502 	add.w	r5, r1, r2
 801c3ce:	9902      	ldr	r1, [sp, #8]
 801c3d0:	bf29      	itett	cs
 801c3d2:	eba3 080c 	subcs.w	r8, r3, ip
 801c3d6:	ebac 0603 	subcc.w	r6, ip, r3
 801c3da:	fa1f f888 	uxthcs.w	r8, r8
 801c3de:	46e1      	movcs	r9, ip
 801c3e0:	bf2f      	iteee	cs
 801c3e2:	4626      	movcs	r6, r4
 801c3e4:	b2b6      	uxthcc	r6, r6
 801c3e6:	4699      	movcc	r9, r3
 801c3e8:	46a0      	movcc	r8, r4
 801c3ea:	29ff      	cmp	r1, #255	@ 0xff
 801c3ec:	d04a      	beq.n	801c484 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801c3ee:	9f06      	ldr	r7, [sp, #24]
 801c3f0:	78a9      	ldrb	r1, [r5, #2]
 801c3f2:	9004      	str	r0, [sp, #16]
 801c3f4:	4379      	muls	r1, r7
 801c3f6:	910a      	str	r1, [sp, #40]	@ 0x28
 801c3f8:	7869      	ldrb	r1, [r5, #1]
 801c3fa:	4379      	muls	r1, r7
 801c3fc:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c3fe:	9905      	ldr	r1, [sp, #20]
 801c400:	5c8a      	ldrb	r2, [r1, r2]
 801c402:	437a      	muls	r2, r7
 801c404:	920c      	str	r2, [sp, #48]	@ 0x30
 801c406:	46ca      	mov	sl, r9
 801c408:	f1ba 0f00 	cmp.w	sl, #0
 801c40c:	d03d      	beq.n	801c48a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801c40e:	9a04      	ldr	r2, [sp, #16]
 801c410:	9f07      	ldr	r7, [sp, #28]
 801c412:	8812      	ldrh	r2, [r2, #0]
 801c414:	1215      	asrs	r5, r2, #8
 801c416:	46be      	mov	lr, r7
 801c418:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c41c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c41e:	10d1      	asrs	r1, r2, #3
 801c420:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801c424:	fb05 750e 	mla	r5, r5, lr, r7
 801c428:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c42c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801c42e:	00d2      	lsls	r2, r2, #3
 801c430:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801c434:	fb01 710e 	mla	r1, r1, lr, r7
 801c438:	b2d2      	uxtb	r2, r2
 801c43a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801c43c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c440:	b2ad      	uxth	r5, r5
 801c442:	fb02 720e 	mla	r2, r2, lr, r7
 801c446:	b292      	uxth	r2, r2
 801c448:	f105 0e01 	add.w	lr, r5, #1
 801c44c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c450:	f102 0e01 	add.w	lr, r2, #1
 801c454:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801c458:	b289      	uxth	r1, r1
 801c45a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c45e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c462:	4315      	orrs	r5, r2
 801c464:	1c4a      	adds	r2, r1, #1
 801c466:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c46a:	0949      	lsrs	r1, r1, #5
 801c46c:	9a04      	ldr	r2, [sp, #16]
 801c46e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c472:	430d      	orrs	r5, r1
 801c474:	f822 5b02 	strh.w	r5, [r2], #2
 801c478:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c47c:	9204      	str	r2, [sp, #16]
 801c47e:	fa1f fa8a 	uxth.w	sl, sl
 801c482:	e7c1      	b.n	801c408 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801c484:	4649      	mov	r1, r9
 801c486:	4686      	mov	lr, r0
 801c488:	b999      	cbnz	r1, 801c4b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c48a:	4563      	cmp	r3, ip
 801c48c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801c490:	d38a      	bcc.n	801c3a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c492:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801c496:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c498:	fa1f f68b 	uxth.w	r6, fp
 801c49c:	1ba4      	subs	r4, r4, r6
 801c49e:	881b      	ldrh	r3, [r3, #0]
 801c4a0:	b2a4      	uxth	r4, r4
 801c4a2:	2c00      	cmp	r4, #0
 801c4a4:	eba3 030b 	sub.w	r3, r3, fp
 801c4a8:	bf18      	it	ne
 801c4aa:	2600      	movne	r6, #0
 801c4ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c4b0:	e77a      	b.n	801c3a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c4b2:	78aa      	ldrb	r2, [r5, #2]
 801c4b4:	4f0e      	ldr	r7, [pc, #56]	@ (801c4f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801c4b6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801c4ba:	786a      	ldrb	r2, [r5, #1]
 801c4bc:	00d2      	lsls	r2, r2, #3
 801c4be:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c4c2:	ea4a 0202 	orr.w	r2, sl, r2
 801c4c6:	f895 a000 	ldrb.w	sl, [r5]
 801c4ca:	3901      	subs	r1, #1
 801c4cc:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801c4d0:	f82e 2b02 	strh.w	r2, [lr], #2
 801c4d4:	b289      	uxth	r1, r1
 801c4d6:	e7d7      	b.n	801c488 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801c4d8:	4b03      	ldr	r3, [pc, #12]	@ (801c4e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c4da:	6818      	ldr	r0, [r3, #0]
 801c4dc:	6803      	ldr	r3, [r0, #0]
 801c4de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c4e0:	4798      	blx	r3
 801c4e2:	b013      	add	sp, #76	@ 0x4c
 801c4e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4e8:	20013f60 	.word	0x20013f60
 801c4ec:	20013f5a 	.word	0x20013f5a
 801c4f0:	fffff800 	.word	0xfffff800

0801c4f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4f8:	b09d      	sub	sp, #116	@ 0x74
 801c4fa:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801c4fe:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801c502:	920e      	str	r2, [sp, #56]	@ 0x38
 801c504:	461c      	mov	r4, r3
 801c506:	4683      	mov	fp, r0
 801c508:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c50a:	2a00      	cmp	r2, #0
 801c50c:	f000 81e0 	beq.w	801c8d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801c510:	6820      	ldr	r0, [r4, #0]
 801c512:	6861      	ldr	r1, [r4, #4]
 801c514:	aa18      	add	r2, sp, #96	@ 0x60
 801c516:	c203      	stmia	r2!, {r0, r1}
 801c518:	6818      	ldr	r0, [r3, #0]
 801c51a:	6859      	ldr	r1, [r3, #4]
 801c51c:	aa1a      	add	r2, sp, #104	@ 0x68
 801c51e:	c203      	stmia	r2!, {r0, r1}
 801c520:	a818      	add	r0, sp, #96	@ 0x60
 801c522:	f7f7 fee7 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c526:	4621      	mov	r1, r4
 801c528:	a81a      	add	r0, sp, #104	@ 0x68
 801c52a:	f7f7 ff0b 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c52e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801c532:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801c536:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801c53a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801c53e:	bfd7      	itett	le
 801c540:	b29a      	uxthle	r2, r3
 801c542:	2201      	movgt	r2, #1
 801c544:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801c548:	fb91 f2f2 	sdivle	r2, r1, r2
 801c54c:	9202      	str	r2, [sp, #8]
 801c54e:	9802      	ldr	r0, [sp, #8]
 801c550:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801c554:	fb92 f0f0 	sdiv	r0, r2, r0
 801c558:	b280      	uxth	r0, r0
 801c55a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c55c:	9902      	ldr	r1, [sp, #8]
 801c55e:	9802      	ldr	r0, [sp, #8]
 801c560:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c562:	440c      	add	r4, r1
 801c564:	fb05 2510 	mls	r5, r5, r0, r2
 801c568:	fb15 f503 	smulbb	r5, r5, r3
 801c56c:	3c01      	subs	r4, #1
 801c56e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801c572:	fb94 f4f1 	sdiv	r4, r4, r1
 801c576:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801c57a:	440d      	add	r5, r1
 801c57c:	4419      	add	r1, r3
 801c57e:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801c582:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801c586:	441a      	add	r2, r3
 801c588:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801c58c:	9306      	str	r3, [sp, #24]
 801c58e:	4bb3      	ldr	r3, [pc, #716]	@ (801c85c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801c590:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801c594:	6818      	ldr	r0, [r3, #0]
 801c596:	6803      	ldr	r3, [r0, #0]
 801c598:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c59a:	4798      	blx	r3
 801c59c:	4bb0      	ldr	r3, [pc, #704]	@ (801c860 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801c59e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801c5a2:	881a      	ldrh	r2, [r3, #0]
 801c5a4:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801c5a8:	9316      	str	r3, [sp, #88]	@ 0x58
 801c5aa:	fb02 7101 	mla	r1, r2, r1, r7
 801c5ae:	3401      	adds	r4, #1
 801c5b0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801c5b4:	b2a4      	uxth	r4, r4
 801c5b6:	4356      	muls	r6, r2
 801c5b8:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801c5bc:	00a4      	lsls	r4, r4, #2
 801c5be:	920a      	str	r2, [sp, #40]	@ 0x28
 801c5c0:	1d22      	adds	r2, r4, #4
 801c5c2:	b2ad      	uxth	r5, r5
 801c5c4:	9213      	str	r2, [sp, #76]	@ 0x4c
 801c5c6:	4ba7      	ldr	r3, [pc, #668]	@ (801c864 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801c5c8:	9a06      	ldr	r2, [sp, #24]
 801c5ca:	2d00      	cmp	r5, #0
 801c5cc:	bf0c      	ite	eq
 801c5ce:	4611      	moveq	r1, r2
 801c5d0:	2100      	movne	r1, #0
 801c5d2:	2200      	movs	r2, #0
 801c5d4:	eba3 030b 	sub.w	r3, r3, fp
 801c5d8:	b289      	uxth	r1, r1
 801c5da:	920d      	str	r2, [sp, #52]	@ 0x34
 801c5dc:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c5de:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c5e0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c5e2:	fa12 f383 	uxtah	r3, r2, r3
 801c5e6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c5e8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c5ec:	3304      	adds	r3, #4
 801c5ee:	9308      	str	r3, [sp, #32]
 801c5f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c5f2:	4543      	cmp	r3, r8
 801c5f4:	f240 8167 	bls.w	801c8c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c5f8:	9a02      	ldr	r2, [sp, #8]
 801c5fa:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801c5fe:	fbb5 f3f3 	udiv	r3, r5, r3
 801c602:	1ad3      	subs	r3, r2, r3
 801c604:	b29b      	uxth	r3, r3
 801c606:	9314      	str	r3, [sp, #80]	@ 0x50
 801c608:	9b08      	ldr	r3, [sp, #32]
 801c60a:	9808      	ldr	r0, [sp, #32]
 801c60c:	785a      	ldrb	r2, [r3, #1]
 801c60e:	789b      	ldrb	r3, [r3, #2]
 801c610:	7800      	ldrb	r0, [r0, #0]
 801c612:	9010      	str	r0, [sp, #64]	@ 0x40
 801c614:	021b      	lsls	r3, r3, #8
 801c616:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c61a:	9a08      	ldr	r2, [sp, #32]
 801c61c:	78d2      	ldrb	r2, [r2, #3]
 801c61e:	4313      	orrs	r3, r2
 801c620:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c622:	3001      	adds	r0, #1
 801c624:	441a      	add	r2, r3
 801c626:	9007      	str	r0, [sp, #28]
 801c628:	1c50      	adds	r0, r2, #1
 801c62a:	9005      	str	r0, [sp, #20]
 801c62c:	7852      	ldrb	r2, [r2, #1]
 801c62e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c630:	0212      	lsls	r2, r2, #8
 801c632:	5cc3      	ldrb	r3, [r0, r3]
 801c634:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801c638:	431a      	orrs	r2, r3
 801c63a:	b293      	uxth	r3, r2
 801c63c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c63e:	2300      	movs	r3, #0
 801c640:	9309      	str	r3, [sp, #36]	@ 0x24
 801c642:	2301      	movs	r3, #1
 801c644:	9301      	str	r3, [sp, #4]
 801c646:	9304      	str	r3, [sp, #16]
 801c648:	2300      	movs	r3, #0
 801c64a:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801c64e:	9303      	str	r3, [sp, #12]
 801c650:	f04f 0e01 	mov.w	lr, #1
 801c654:	2d00      	cmp	r5, #0
 801c656:	d07c      	beq.n	801c752 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801c658:	45ae      	cmp	lr, r5
 801c65a:	d26b      	bcs.n	801c734 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c65c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c65e:	eba5 050e 	sub.w	r5, r5, lr
 801c662:	4543      	cmp	r3, r8
 801c664:	b2ad      	uxth	r5, r5
 801c666:	460c      	mov	r4, r1
 801c668:	d802      	bhi.n	801c670 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801c66a:	e070      	b.n	801c74e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c66c:	2b00      	cmp	r3, #0
 801c66e:	d15c      	bne.n	801c72a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c670:	9b05      	ldr	r3, [sp, #20]
 801c672:	9a04      	ldr	r2, [sp, #16]
 801c674:	785b      	ldrb	r3, [r3, #1]
 801c676:	9904      	ldr	r1, [sp, #16]
 801c678:	f1c2 0207 	rsb	r2, r2, #7
 801c67c:	4093      	lsls	r3, r2
 801c67e:	005b      	lsls	r3, r3, #1
 801c680:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801c684:	9b05      	ldr	r3, [sp, #20]
 801c686:	781b      	ldrb	r3, [r3, #0]
 801c688:	410b      	asrs	r3, r1
 801c68a:	3101      	adds	r1, #1
 801c68c:	b2c9      	uxtb	r1, r1
 801c68e:	2908      	cmp	r1, #8
 801c690:	9104      	str	r1, [sp, #16]
 801c692:	9905      	ldr	r1, [sp, #20]
 801c694:	bf0a      	itet	eq
 801c696:	3102      	addeq	r1, #2
 801c698:	3101      	addne	r1, #1
 801c69a:	9105      	streq	r1, [sp, #20]
 801c69c:	b2db      	uxtb	r3, r3
 801c69e:	bf0a      	itet	eq
 801c6a0:	2100      	moveq	r1, #0
 801c6a2:	9105      	strne	r1, [sp, #20]
 801c6a4:	9104      	streq	r1, [sp, #16]
 801c6a6:	4313      	orrs	r3, r2
 801c6a8:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801c6aa:	b29a      	uxth	r2, r3
 801c6ac:	4291      	cmp	r1, r2
 801c6ae:	d30a      	bcc.n	801c6c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c6b0:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801c6b4:	2301      	movs	r3, #1
 801c6b6:	9907      	ldr	r1, [sp, #28]
 801c6b8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801c6bc:	d30f      	bcc.n	801c6de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c6be:	2100      	movs	r1, #0
 801c6c0:	9301      	str	r3, [sp, #4]
 801c6c2:	9103      	str	r1, [sp, #12]
 801c6c4:	e032      	b.n	801c72c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801c6c6:	9b07      	ldr	r3, [sp, #28]
 801c6c8:	429a      	cmp	r2, r3
 801c6ca:	d318      	bcc.n	801c6fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c6cc:	9b01      	ldr	r3, [sp, #4]
 801c6ce:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801c6d2:	445b      	add	r3, fp
 801c6d4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801c6d8:	9b01      	ldr	r3, [sp, #4]
 801c6da:	3301      	adds	r3, #1
 801c6dc:	b29b      	uxth	r3, r3
 801c6de:	9907      	ldr	r1, [sp, #28]
 801c6e0:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801c6e4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c6e8:	7108      	strb	r0, [r1, #4]
 801c6ea:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801c6ec:	80c8      	strh	r0, [r1, #6]
 801c6ee:	9801      	ldr	r0, [sp, #4]
 801c6f0:	3001      	adds	r0, #1
 801c6f2:	7148      	strb	r0, [r1, #5]
 801c6f4:	9907      	ldr	r1, [sp, #28]
 801c6f6:	3101      	adds	r1, #1
 801c6f8:	b289      	uxth	r1, r1
 801c6fa:	9107      	str	r1, [sp, #28]
 801c6fc:	e7df      	b.n	801c6be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c6fe:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c702:	4611      	mov	r1, r2
 801c704:	795b      	ldrb	r3, [r3, #5]
 801c706:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801c70a:	4458      	add	r0, fp
 801c70c:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801c70e:	4406      	add	r6, r0
 801c710:	2e00      	cmp	r6, #0
 801c712:	dd06      	ble.n	801c722 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801c714:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c718:	790e      	ldrb	r6, [r1, #4]
 801c71a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c71e:	88c9      	ldrh	r1, [r1, #6]
 801c720:	e7f4      	b.n	801c70c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801c722:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801c726:	b29b      	uxth	r3, r3
 801c728:	e7c5      	b.n	801c6b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801c72a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c72c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801c72e:	4621      	mov	r1, r4
 801c730:	469e      	mov	lr, r3
 801c732:	e78f      	b.n	801c654 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801c734:	9a03      	ldr	r2, [sp, #12]
 801c736:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c73a:	442a      	add	r2, r5
 801c73c:	ebae 0305 	sub.w	r3, lr, r5
 801c740:	b292      	uxth	r2, r2
 801c742:	b29b      	uxth	r3, r3
 801c744:	9203      	str	r2, [sp, #12]
 801c746:	2500      	movs	r5, #0
 801c748:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c74a:	4542      	cmp	r2, r8
 801c74c:	d88e      	bhi.n	801c66c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801c74e:	4621      	mov	r1, r4
 801c750:	e74e      	b.n	801c5f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801c752:	458e      	cmp	lr, r1
 801c754:	bf29      	itett	cs
 801c756:	ebae 0301 	subcs.w	r3, lr, r1
 801c75a:	eba1 040e 	subcc.w	r4, r1, lr
 801c75e:	b29b      	uxthcs	r3, r3
 801c760:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801c762:	bf2f      	iteee	cs
 801c764:	462c      	movcs	r4, r5
 801c766:	b2a4      	uxthcc	r4, r4
 801c768:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801c76c:	462b      	movcc	r3, r5
 801c76e:	f04f 0900 	mov.w	r9, #0
 801c772:	9a03      	ldr	r2, [sp, #12]
 801c774:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801c776:	444a      	add	r2, r9
 801c778:	4548      	cmp	r0, r9
 801c77a:	b292      	uxth	r2, r2
 801c77c:	d074      	beq.n	801c868 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c77e:	445a      	add	r2, fp
 801c780:	2004      	movs	r0, #4
 801c782:	4605      	mov	r5, r0
 801c784:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801c788:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801c78a:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c78e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801c790:	5880      	ldr	r0, [r0, r2]
 801c792:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c796:	d014      	beq.n	801c7c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c798:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801c79c:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c7a0:	d112      	bne.n	801c7c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c7a2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c7a4:	2aff      	cmp	r2, #255	@ 0xff
 801c7a6:	d10f      	bne.n	801c7c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c7a8:	0942      	lsrs	r2, r0, #5
 801c7aa:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801c7ae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c7b2:	f025 0507 	bic.w	r5, r5, #7
 801c7b6:	4315      	orrs	r5, r2
 801c7b8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c7bc:	4305      	orrs	r5, r0
 801c7be:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c7c2:	f109 0901 	add.w	r9, r9, #1
 801c7c6:	e7d4      	b.n	801c772 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c7c8:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c7cc:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c7d0:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801c7d4:	9215      	str	r2, [sp, #84]	@ 0x54
 801c7d6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c7d8:	fb02 fa0a 	mul.w	sl, r2, sl
 801c7dc:	f10a 0201 	add.w	r2, sl, #1
 801c7e0:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c7e4:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c7e8:	1212      	asrs	r2, r2, #8
 801c7ea:	fa1f fa82 	uxth.w	sl, r2
 801c7ee:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c7f2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801c7f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c7fa:	43d2      	mvns	r2, r2
 801c7fc:	b2d2      	uxtb	r2, r2
 801c7fe:	fb16 f60a 	smulbb	r6, r6, sl
 801c802:	fa5f fc8c 	uxtb.w	ip, ip
 801c806:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c80a:	b2c0      	uxtb	r0, r0
 801c80c:	fb07 6702 	mla	r7, r7, r2, r6
 801c810:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c814:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801c816:	fb10 f00a 	smulbb	r0, r0, sl
 801c81a:	fb0c 0002 	mla	r0, ip, r2, r0
 801c81e:	b2ed      	uxtb	r5, r5
 801c820:	b2bf      	uxth	r7, r7
 801c822:	fb15 f50a 	smulbb	r5, r5, sl
 801c826:	b280      	uxth	r0, r0
 801c828:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c82c:	fb06 5602 	mla	r6, r6, r2, r5
 801c830:	1c7a      	adds	r2, r7, #1
 801c832:	1c45      	adds	r5, r0, #1
 801c834:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c838:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c83c:	b2b6      	uxth	r6, r6
 801c83e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c842:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801c846:	432f      	orrs	r7, r5
 801c848:	1c75      	adds	r5, r6, #1
 801c84a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c84e:	096d      	lsrs	r5, r5, #5
 801c850:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c854:	432f      	orrs	r7, r5
 801c856:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c85a:	e7b2      	b.n	801c7c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c85c:	20013f60 	.word	0x20013f60
 801c860:	20013f5a 	.word	0x20013f5a
 801c864:	fffff7fb 	.word	0xfffff7fb
 801c868:	9203      	str	r2, [sp, #12]
 801c86a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c86c:	458e      	cmp	lr, r1
 801c86e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c872:	f4ff af68 	bcc.w	801c746 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c876:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801c878:	9906      	ldr	r1, [sp, #24]
 801c87a:	8812      	ldrh	r2, [r2, #0]
 801c87c:	1a52      	subs	r2, r2, r1
 801c87e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c882:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c884:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801c886:	3201      	adds	r2, #1
 801c888:	428a      	cmp	r2, r1
 801c88a:	9209      	str	r2, [sp, #36]	@ 0x24
 801c88c:	d111      	bne.n	801c8b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c88e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801c892:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801c896:	9b06      	ldr	r3, [sp, #24]
 801c898:	eba5 0509 	sub.w	r5, r5, r9
 801c89c:	b2ad      	uxth	r5, r5
 801c89e:	2d00      	cmp	r5, #0
 801c8a0:	bf08      	it	eq
 801c8a2:	4619      	moveq	r1, r3
 801c8a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c8a6:	bf18      	it	ne
 801c8a8:	2100      	movne	r1, #0
 801c8aa:	3301      	adds	r3, #1
 801c8ac:	930d      	str	r3, [sp, #52]	@ 0x34
 801c8ae:	b289      	uxth	r1, r1
 801c8b0:	e695      	b.n	801c5de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c8b2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c8b6:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801c8ba:	1b2d      	subs	r5, r5, r4
 801c8bc:	b2ad      	uxth	r5, r5
 801c8be:	2d00      	cmp	r5, #0
 801c8c0:	bf18      	it	ne
 801c8c2:	2400      	movne	r4, #0
 801c8c4:	e740      	b.n	801c748 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c8c6:	4b04      	ldr	r3, [pc, #16]	@ (801c8d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c8c8:	6818      	ldr	r0, [r3, #0]
 801c8ca:	6803      	ldr	r3, [r0, #0]
 801c8cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c8ce:	4798      	blx	r3
 801c8d0:	b01d      	add	sp, #116	@ 0x74
 801c8d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c8d6:	bf00      	nop
 801c8d8:	20013f60 	.word	0x20013f60

0801c8dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c8dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8e0:	b09f      	sub	sp, #124	@ 0x7c
 801c8e2:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801c8e6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801c8ea:	920a      	str	r2, [sp, #40]	@ 0x28
 801c8ec:	461d      	mov	r5, r3
 801c8ee:	4604      	mov	r4, r0
 801c8f0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c8f2:	2a00      	cmp	r2, #0
 801c8f4:	f000 81fa 	beq.w	801ccec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c8f8:	6828      	ldr	r0, [r5, #0]
 801c8fa:	6869      	ldr	r1, [r5, #4]
 801c8fc:	aa1a      	add	r2, sp, #104	@ 0x68
 801c8fe:	c203      	stmia	r2!, {r0, r1}
 801c900:	6818      	ldr	r0, [r3, #0]
 801c902:	6859      	ldr	r1, [r3, #4]
 801c904:	aa1c      	add	r2, sp, #112	@ 0x70
 801c906:	c203      	stmia	r2!, {r0, r1}
 801c908:	a81a      	add	r0, sp, #104	@ 0x68
 801c90a:	f7f7 fcf3 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c90e:	4629      	mov	r1, r5
 801c910:	a81c      	add	r0, sp, #112	@ 0x70
 801c912:	f7f7 fd17 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c916:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801c91a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801c91e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801c922:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801c926:	bfd7      	itett	le
 801c928:	b29a      	uxthle	r2, r3
 801c92a:	2201      	movgt	r2, #1
 801c92c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801c930:	fb91 f2f2 	sdivle	r2, r1, r2
 801c934:	9201      	str	r2, [sp, #4]
 801c936:	9801      	ldr	r0, [sp, #4]
 801c938:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801c93c:	fb92 f0f0 	sdiv	r0, r2, r0
 801c940:	b280      	uxth	r0, r0
 801c942:	9010      	str	r0, [sp, #64]	@ 0x40
 801c944:	9901      	ldr	r1, [sp, #4]
 801c946:	9801      	ldr	r0, [sp, #4]
 801c948:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c94a:	440e      	add	r6, r1
 801c94c:	fb05 2510 	mls	r5, r5, r0, r2
 801c950:	fb15 f503 	smulbb	r5, r5, r3
 801c954:	3e01      	subs	r6, #1
 801c956:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801c95a:	fb96 f6f1 	sdiv	r6, r6, r1
 801c95e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801c962:	440d      	add	r5, r1
 801c964:	4419      	add	r1, r3
 801c966:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801c96a:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801c96e:	441a      	add	r2, r3
 801c970:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801c974:	9304      	str	r3, [sp, #16]
 801c976:	4b96      	ldr	r3, [pc, #600]	@ (801cbd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c978:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801c97c:	6818      	ldr	r0, [r3, #0]
 801c97e:	6803      	ldr	r3, [r0, #0]
 801c980:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c982:	4798      	blx	r3
 801c984:	4b93      	ldr	r3, [pc, #588]	@ (801cbd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c986:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801c98a:	881a      	ldrh	r2, [r3, #0]
 801c98c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801c990:	9318      	str	r3, [sp, #96]	@ 0x60
 801c992:	fb02 c101 	mla	r1, r2, r1, ip
 801c996:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c99a:	4357      	muls	r7, r2
 801c99c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c9a0:	3601      	adds	r6, #1
 801c9a2:	920b      	str	r2, [sp, #44]	@ 0x2c
 801c9a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c9a6:	4b8c      	ldr	r3, [pc, #560]	@ (801cbd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c9a8:	b2b6      	uxth	r6, r6
 801c9aa:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c9ae:	1d32      	adds	r2, r6, #4
 801c9b0:	9206      	str	r2, [sp, #24]
 801c9b2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c9b4:	43d2      	mvns	r2, r2
 801c9b6:	b2d2      	uxtb	r2, r2
 801c9b8:	b2ad      	uxth	r5, r5
 801c9ba:	9215      	str	r2, [sp, #84]	@ 0x54
 801c9bc:	9a04      	ldr	r2, [sp, #16]
 801c9be:	2d00      	cmp	r5, #0
 801c9c0:	bf0c      	ite	eq
 801c9c2:	4611      	moveq	r1, r2
 801c9c4:	2100      	movne	r1, #0
 801c9c6:	2200      	movs	r2, #0
 801c9c8:	1b1b      	subs	r3, r3, r4
 801c9ca:	b289      	uxth	r1, r1
 801c9cc:	920d      	str	r2, [sp, #52]	@ 0x34
 801c9ce:	9319      	str	r3, [sp, #100]	@ 0x64
 801c9d0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c9d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c9d4:	fa12 f383 	uxtah	r3, r2, r3
 801c9d8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c9da:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c9de:	3304      	adds	r3, #4
 801c9e0:	9307      	str	r3, [sp, #28]
 801c9e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c9e4:	455b      	cmp	r3, fp
 801c9e6:	f240 817c 	bls.w	801cce2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c9ea:	9a01      	ldr	r2, [sp, #4]
 801c9ec:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801c9f0:	fbb5 f3f3 	udiv	r3, r5, r3
 801c9f4:	1ad3      	subs	r3, r2, r3
 801c9f6:	b29b      	uxth	r3, r3
 801c9f8:	9316      	str	r3, [sp, #88]	@ 0x58
 801c9fa:	9b07      	ldr	r3, [sp, #28]
 801c9fc:	9807      	ldr	r0, [sp, #28]
 801c9fe:	785a      	ldrb	r2, [r3, #1]
 801ca00:	789b      	ldrb	r3, [r3, #2]
 801ca02:	7800      	ldrb	r0, [r0, #0]
 801ca04:	9011      	str	r0, [sp, #68]	@ 0x44
 801ca06:	021b      	lsls	r3, r3, #8
 801ca08:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ca0c:	9a07      	ldr	r2, [sp, #28]
 801ca0e:	78d2      	ldrb	r2, [r2, #3]
 801ca10:	4313      	orrs	r3, r2
 801ca12:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ca14:	3001      	adds	r0, #1
 801ca16:	441a      	add	r2, r3
 801ca18:	9005      	str	r0, [sp, #20]
 801ca1a:	1c50      	adds	r0, r2, #1
 801ca1c:	9003      	str	r0, [sp, #12]
 801ca1e:	7852      	ldrb	r2, [r2, #1]
 801ca20:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ca22:	0212      	lsls	r2, r2, #8
 801ca24:	5cc3      	ldrb	r3, [r0, r3]
 801ca26:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801ca2a:	431a      	orrs	r2, r3
 801ca2c:	b293      	uxth	r3, r2
 801ca2e:	930c      	str	r3, [sp, #48]	@ 0x30
 801ca30:	2300      	movs	r3, #0
 801ca32:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801ca36:	9308      	str	r3, [sp, #32]
 801ca38:	461a      	mov	r2, r3
 801ca3a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801ca3e:	930e      	str	r3, [sp, #56]	@ 0x38
 801ca40:	f04f 0801 	mov.w	r8, #1
 801ca44:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801ca48:	f8cd 8008 	str.w	r8, [sp, #8]
 801ca4c:	46c4      	mov	ip, r8
 801ca4e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ca50:	2d00      	cmp	r5, #0
 801ca52:	d07c      	beq.n	801cb4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ca54:	45ac      	cmp	ip, r5
 801ca56:	d26c      	bcs.n	801cb32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801ca58:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ca5a:	eba5 050c 	sub.w	r5, r5, ip
 801ca5e:	455b      	cmp	r3, fp
 801ca60:	b2ad      	uxth	r5, r5
 801ca62:	4608      	mov	r0, r1
 801ca64:	d802      	bhi.n	801ca6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801ca66:	e070      	b.n	801cb4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801ca68:	2b00      	cmp	r3, #0
 801ca6a:	d15c      	bne.n	801cb26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801ca6c:	9b03      	ldr	r3, [sp, #12]
 801ca6e:	9a02      	ldr	r2, [sp, #8]
 801ca70:	785b      	ldrb	r3, [r3, #1]
 801ca72:	9902      	ldr	r1, [sp, #8]
 801ca74:	f1c2 0207 	rsb	r2, r2, #7
 801ca78:	4093      	lsls	r3, r2
 801ca7a:	005b      	lsls	r3, r3, #1
 801ca7c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801ca80:	9b03      	ldr	r3, [sp, #12]
 801ca82:	781b      	ldrb	r3, [r3, #0]
 801ca84:	410b      	asrs	r3, r1
 801ca86:	3101      	adds	r1, #1
 801ca88:	b2c9      	uxtb	r1, r1
 801ca8a:	2908      	cmp	r1, #8
 801ca8c:	9102      	str	r1, [sp, #8]
 801ca8e:	9903      	ldr	r1, [sp, #12]
 801ca90:	bf0a      	itet	eq
 801ca92:	3102      	addeq	r1, #2
 801ca94:	3101      	addne	r1, #1
 801ca96:	9103      	streq	r1, [sp, #12]
 801ca98:	b2db      	uxtb	r3, r3
 801ca9a:	bf0a      	itet	eq
 801ca9c:	2100      	moveq	r1, #0
 801ca9e:	9103      	strne	r1, [sp, #12]
 801caa0:	9102      	streq	r1, [sp, #8]
 801caa2:	4313      	orrs	r3, r2
 801caa4:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801caa6:	b29a      	uxth	r2, r3
 801caa8:	4291      	cmp	r1, r2
 801caaa:	d30a      	bcc.n	801cac2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801caac:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801cab0:	2301      	movs	r3, #1
 801cab2:	9905      	ldr	r1, [sp, #20]
 801cab4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801cab8:	d30f      	bcc.n	801cada <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801caba:	2100      	movs	r1, #0
 801cabc:	4698      	mov	r8, r3
 801cabe:	9100      	str	r1, [sp, #0]
 801cac0:	e032      	b.n	801cb28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801cac2:	9b05      	ldr	r3, [sp, #20]
 801cac4:	429a      	cmp	r2, r3
 801cac6:	d318      	bcc.n	801cafa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801cac8:	eb04 0308 	add.w	r3, r4, r8
 801cacc:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801cad0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801cad4:	f108 0301 	add.w	r3, r8, #1
 801cad8:	b29b      	uxth	r3, r3
 801cada:	9905      	ldr	r1, [sp, #20]
 801cadc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801cae0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801cae4:	710e      	strb	r6, [r1, #4]
 801cae6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801cae8:	80ce      	strh	r6, [r1, #6]
 801caea:	f108 0601 	add.w	r6, r8, #1
 801caee:	714e      	strb	r6, [r1, #5]
 801caf0:	9905      	ldr	r1, [sp, #20]
 801caf2:	3101      	adds	r1, #1
 801caf4:	b289      	uxth	r1, r1
 801caf6:	9105      	str	r1, [sp, #20]
 801caf8:	e7df      	b.n	801caba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801cafa:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801cafe:	4611      	mov	r1, r2
 801cb00:	795b      	ldrb	r3, [r3, #5]
 801cb02:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801cb06:	4426      	add	r6, r4
 801cb08:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801cb0a:	4437      	add	r7, r6
 801cb0c:	2f00      	cmp	r7, #0
 801cb0e:	dd06      	ble.n	801cb1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801cb10:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801cb14:	790f      	ldrb	r7, [r1, #4]
 801cb16:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801cb1a:	88c9      	ldrh	r1, [r1, #6]
 801cb1c:	e7f4      	b.n	801cb08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801cb1e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801cb22:	b29b      	uxth	r3, r3
 801cb24:	e7c5      	b.n	801cab2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801cb26:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801cb28:	920c      	str	r2, [sp, #48]	@ 0x30
 801cb2a:	4601      	mov	r1, r0
 801cb2c:	9a00      	ldr	r2, [sp, #0]
 801cb2e:	469c      	mov	ip, r3
 801cb30:	e78e      	b.n	801ca50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801cb32:	1957      	adds	r7, r2, r5
 801cb34:	ebac 0305 	sub.w	r3, ip, r5
 801cb38:	b2ba      	uxth	r2, r7
 801cb3a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801cb3e:	9200      	str	r2, [sp, #0]
 801cb40:	b29b      	uxth	r3, r3
 801cb42:	2500      	movs	r5, #0
 801cb44:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801cb46:	455a      	cmp	r2, fp
 801cb48:	d88e      	bhi.n	801ca68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801cb4a:	4601      	mov	r1, r0
 801cb4c:	e749      	b.n	801c9e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801cb4e:	458c      	cmp	ip, r1
 801cb50:	bf2c      	ite	cs
 801cb52:	4628      	movcs	r0, r5
 801cb54:	462b      	movcc	r3, r5
 801cb56:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801cb58:	bf27      	ittee	cs
 801cb5a:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801cb5c:	ebac 0301 	subcs.w	r3, ip, r1
 801cb60:	eba1 000c 	subcc.w	r0, r1, ip
 801cb64:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801cb68:	bf2c      	ite	cs
 801cb6a:	b29b      	uxthcs	r3, r3
 801cb6c:	b280      	uxthcc	r0, r0
 801cb6e:	2dff      	cmp	r5, #255	@ 0xff
 801cb70:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801cb72:	eb02 0705 	add.w	r7, r2, r5
 801cb76:	b2bd      	uxth	r5, r7
 801cb78:	9500      	str	r5, [sp, #0]
 801cb7a:	d12f      	bne.n	801cbdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801cb7c:	465e      	mov	r6, fp
 801cb7e:	9d00      	ldr	r5, [sp, #0]
 801cb80:	42aa      	cmp	r2, r5
 801cb82:	f040 8084 	bne.w	801cc8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801cb86:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801cb88:	458c      	cmp	ip, r1
 801cb8a:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801cb8e:	d3d8      	bcc.n	801cb42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801cb90:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801cb92:	9904      	ldr	r1, [sp, #16]
 801cb94:	8812      	ldrh	r2, [r2, #0]
 801cb96:	1a52      	subs	r2, r2, r1
 801cb98:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801cb9c:	9a08      	ldr	r2, [sp, #32]
 801cb9e:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801cba0:	3201      	adds	r2, #1
 801cba2:	428a      	cmp	r2, r1
 801cba4:	9208      	str	r2, [sp, #32]
 801cba6:	f040 8092 	bne.w	801ccce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801cbaa:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801cbae:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801cbb2:	9b04      	ldr	r3, [sp, #16]
 801cbb4:	eba5 050c 	sub.w	r5, r5, ip
 801cbb8:	b2ad      	uxth	r5, r5
 801cbba:	2d00      	cmp	r5, #0
 801cbbc:	bf08      	it	eq
 801cbbe:	4619      	moveq	r1, r3
 801cbc0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801cbc2:	bf18      	it	ne
 801cbc4:	2100      	movne	r1, #0
 801cbc6:	3301      	adds	r3, #1
 801cbc8:	930d      	str	r3, [sp, #52]	@ 0x34
 801cbca:	b289      	uxth	r1, r1
 801cbcc:	e700      	b.n	801c9d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801cbce:	bf00      	nop
 801cbd0:	20013f60 	.word	0x20013f60
 801cbd4:	20013f5a 	.word	0x20013f5a
 801cbd8:	fffff7fb 	.word	0xfffff7fb
 801cbdc:	46d9      	mov	r9, fp
 801cbde:	9d00      	ldr	r5, [sp, #0]
 801cbe0:	42aa      	cmp	r2, r5
 801cbe2:	d0d0      	beq.n	801cb86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801cbe4:	1c55      	adds	r5, r2, #1
 801cbe6:	4422      	add	r2, r4
 801cbe8:	9517      	str	r5, [sp, #92]	@ 0x5c
 801cbea:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801cbee:	9a06      	ldr	r2, [sp, #24]
 801cbf0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cbf4:	4472      	add	r2, lr
 801cbf6:	9212      	str	r2, [sp, #72]	@ 0x48
 801cbf8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801cbfa:	f8b9 2000 	ldrh.w	r2, [r9]
 801cbfe:	f897 a002 	ldrb.w	sl, [r7, #2]
 801cc02:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801cc04:	1216      	asrs	r6, r2, #8
 801cc06:	fb1a fa07 	smulbb	sl, sl, r7
 801cc0a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801cc0e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801cc10:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cc14:	fb06 a607 	mla	r6, r6, r7, sl
 801cc18:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801cc1a:	f897 a001 	ldrb.w	sl, [r7, #1]
 801cc1e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801cc20:	10d5      	asrs	r5, r2, #3
 801cc22:	fb1a fa07 	smulbb	sl, sl, r7
 801cc26:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801cc2a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801cc2c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cc30:	fb05 a507 	mla	r5, r5, r7, sl
 801cc34:	9f06      	ldr	r7, [sp, #24]
 801cc36:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801cc3a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801cc3c:	00d2      	lsls	r2, r2, #3
 801cc3e:	fb1e fe07 	smulbb	lr, lr, r7
 801cc42:	b2d2      	uxtb	r2, r2
 801cc44:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801cc46:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cc4a:	b2b6      	uxth	r6, r6
 801cc4c:	fb02 e207 	mla	r2, r2, r7, lr
 801cc50:	b292      	uxth	r2, r2
 801cc52:	b2ad      	uxth	r5, r5
 801cc54:	f106 0a01 	add.w	sl, r6, #1
 801cc58:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801cc5c:	f102 0e01 	add.w	lr, r2, #1
 801cc60:	f105 0a01 	add.w	sl, r5, #1
 801cc64:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801cc68:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cc6c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801cc70:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801cc74:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cc78:	ea4e 0606 	orr.w	r6, lr, r6
 801cc7c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801cc80:	ea46 060a 	orr.w	r6, r6, sl
 801cc84:	f829 6b02 	strh.w	r6, [r9], #2
 801cc88:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801cc8c:	e7a7      	b.n	801cbde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801cc8e:	f102 0e01 	add.w	lr, r2, #1
 801cc92:	4422      	add	r2, r4
 801cc94:	9f06      	ldr	r7, [sp, #24]
 801cc96:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801cc9a:	9a06      	ldr	r2, [sp, #24]
 801cc9c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cca0:	eb02 0a05 	add.w	sl, r2, r5
 801cca4:	4a13      	ldr	r2, [pc, #76]	@ (801ccf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801cca6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801ccaa:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801ccae:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ccb2:	00d2      	lsls	r2, r2, #3
 801ccb4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ccb8:	ea49 0202 	orr.w	r2, r9, r2
 801ccbc:	f817 9005 	ldrb.w	r9, [r7, r5]
 801ccc0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801ccc4:	f826 2b02 	strh.w	r2, [r6], #2
 801ccc8:	fa1f f28e 	uxth.w	r2, lr
 801cccc:	e757      	b.n	801cb7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801ccce:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801ccd2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801ccd6:	1a2d      	subs	r5, r5, r0
 801ccd8:	b2ad      	uxth	r5, r5
 801ccda:	2d00      	cmp	r5, #0
 801ccdc:	bf18      	it	ne
 801ccde:	2000      	movne	r0, #0
 801cce0:	e730      	b.n	801cb44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cce2:	4b05      	ldr	r3, [pc, #20]	@ (801ccf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801cce4:	6818      	ldr	r0, [r3, #0]
 801cce6:	6803      	ldr	r3, [r0, #0]
 801cce8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ccea:	4798      	blx	r3
 801ccec:	b01f      	add	sp, #124	@ 0x7c
 801ccee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ccf2:	bf00      	nop
 801ccf4:	fffff800 	.word	0xfffff800
 801ccf8:	20013f60 	.word	0x20013f60

0801ccfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801ccfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd00:	b091      	sub	sp, #68	@ 0x44
 801cd02:	469b      	mov	fp, r3
 801cd04:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801cd08:	4616      	mov	r6, r2
 801cd0a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801cd0e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801cd12:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801cd16:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801cd1a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801cd1e:	4604      	mov	r4, r0
 801cd20:	460d      	mov	r5, r1
 801cd22:	4640      	mov	r0, r8
 801cd24:	4659      	mov	r1, fp
 801cd26:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801cd2a:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801cd2e:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801cd32:	f7f1 f8eb 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 801cd36:	4631      	mov	r1, r6
 801cd38:	4640      	mov	r0, r8
 801cd3a:	f7f1 f8e7 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 801cd3e:	4b74      	ldr	r3, [pc, #464]	@ (801cf10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801cd40:	8818      	ldrh	r0, [r3, #0]
 801cd42:	4b74      	ldr	r3, [pc, #464]	@ (801cf14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801cd44:	8819      	ldrh	r1, [r3, #0]
 801cd46:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801cd4a:	2b00      	cmp	r3, #0
 801cd4c:	b202      	sxth	r2, r0
 801cd4e:	b20e      	sxth	r6, r1
 801cd50:	da07      	bge.n	801cd62 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801cd52:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801cd56:	4463      	add	r3, ip
 801cd58:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801cd5c:	2300      	movs	r3, #0
 801cd5e:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801cd62:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801cd66:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801cd6a:	1ad2      	subs	r2, r2, r3
 801cd6c:	4594      	cmp	ip, r2
 801cd6e:	bfc4      	itt	gt
 801cd70:	1ac2      	subgt	r2, r0, r3
 801cd72:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801cd76:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801cd7a:	2a00      	cmp	r2, #0
 801cd7c:	da07      	bge.n	801cd8e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801cd7e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801cd82:	4462      	add	r2, ip
 801cd84:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801cd88:	2200      	movs	r2, #0
 801cd8a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801cd8e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801cd92:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801cd96:	eba6 060a 	sub.w	r6, r6, sl
 801cd9a:	42b2      	cmp	r2, r6
 801cd9c:	bfc4      	itt	gt
 801cd9e:	eba1 020a 	subgt.w	r2, r1, sl
 801cda2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801cda6:	4a5c      	ldr	r2, [pc, #368]	@ (801cf18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801cda8:	7812      	ldrb	r2, [r2, #0]
 801cdaa:	b9a2      	cbnz	r2, 801cdd6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801cdac:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801cdb0:	4286      	cmp	r6, r0
 801cdb2:	4640      	mov	r0, r8
 801cdb4:	9303      	str	r3, [sp, #12]
 801cdb6:	bf14      	ite	ne
 801cdb8:	2600      	movne	r6, #0
 801cdba:	2601      	moveq	r6, #1
 801cdbc:	f7f1 f8e9 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cdc0:	9b03      	ldr	r3, [sp, #12]
 801cdc2:	b160      	cbz	r0, 801cdde <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801cdc4:	2300      	movs	r3, #0
 801cdc6:	8023      	strh	r3, [r4, #0]
 801cdc8:	8063      	strh	r3, [r4, #2]
 801cdca:	80a3      	strh	r3, [r4, #4]
 801cdcc:	4620      	mov	r0, r4
 801cdce:	80e3      	strh	r3, [r4, #6]
 801cdd0:	b011      	add	sp, #68	@ 0x44
 801cdd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdd6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801cdda:	428e      	cmp	r6, r1
 801cddc:	e7e9      	b.n	801cdb2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801cdde:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801cde2:	9205      	str	r2, [sp, #20]
 801cde4:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801cde8:	9206      	str	r2, [sp, #24]
 801cdea:	f8bb 2000 	ldrh.w	r2, [fp]
 801cdee:	900e      	str	r0, [sp, #56]	@ 0x38
 801cdf0:	1a9b      	subs	r3, r3, r2
 801cdf2:	b21b      	sxth	r3, r3
 801cdf4:	9303      	str	r3, [sp, #12]
 801cdf6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cdfa:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801cdfe:	ebaa 0a03 	sub.w	sl, sl, r3
 801ce02:	fa0f f38a 	sxth.w	r3, sl
 801ce06:	9304      	str	r3, [sp, #16]
 801ce08:	9b03      	ldr	r3, [sp, #12]
 801ce0a:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801ce0e:	9b04      	ldr	r3, [sp, #16]
 801ce10:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801ce14:	9b05      	ldr	r3, [sp, #20]
 801ce16:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801ce1a:	a90e      	add	r1, sp, #56	@ 0x38
 801ce1c:	9b06      	ldr	r3, [sp, #24]
 801ce1e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801ce22:	a80c      	add	r0, sp, #48	@ 0x30
 801ce24:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801ce28:	f7f7 fa8c 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce2c:	4640      	mov	r0, r8
 801ce2e:	f7f7 fa61 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce32:	a80e      	add	r0, sp, #56	@ 0x38
 801ce34:	f7f7 fa5e 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce38:	4b38      	ldr	r3, [pc, #224]	@ (801cf1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801ce3a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801ce3e:	881b      	ldrh	r3, [r3, #0]
 801ce40:	9307      	str	r3, [sp, #28]
 801ce42:	682b      	ldr	r3, [r5, #0]
 801ce44:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801cf20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801ce48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801ce4a:	4628      	mov	r0, r5
 801ce4c:	4798      	blx	r3
 801ce4e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801ce52:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801ce56:	4681      	mov	r9, r0
 801ce58:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801ce5c:	f8db 0000 	ldr.w	r0, [fp]
 801ce60:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801ce62:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801ce66:	6803      	ldr	r3, [r0, #0]
 801ce68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801ce6a:	4798      	blx	r3
 801ce6c:	4607      	mov	r7, r0
 801ce6e:	f8db 0000 	ldr.w	r0, [fp]
 801ce72:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801ce76:	6803      	ldr	r3, [r0, #0]
 801ce78:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801ce7c:	9109      	str	r1, [sp, #36]	@ 0x24
 801ce7e:	9208      	str	r2, [sp, #32]
 801ce80:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ce82:	4798      	blx	r3
 801ce84:	f010 0f01 	tst.w	r0, #1
 801ce88:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ce8c:	d012      	beq.n	801ceb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801ce8e:	f8db 0000 	ldr.w	r0, [fp]
 801ce92:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801ce96:	6803      	ldr	r3, [r0, #0]
 801ce98:	9200      	str	r2, [sp, #0]
 801ce9a:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801ce9c:	e898 0006 	ldmia.w	r8, {r1, r2}
 801cea0:	462b      	mov	r3, r5
 801cea2:	47b0      	blx	r6
 801cea4:	9b03      	ldr	r3, [sp, #12]
 801cea6:	8023      	strh	r3, [r4, #0]
 801cea8:	9b04      	ldr	r3, [sp, #16]
 801ceaa:	8063      	strh	r3, [r4, #2]
 801ceac:	9b05      	ldr	r3, [sp, #20]
 801ceae:	80a3      	strh	r3, [r4, #4]
 801ceb0:	9b06      	ldr	r3, [sp, #24]
 801ceb2:	e78b      	b.n	801cdcc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801ceb4:	fb09 f202 	mul.w	r2, r9, r2
 801ceb8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801cebc:	440f      	add	r7, r1
 801cebe:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801cec2:	b166      	cbz	r6, 801cede <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801cec4:	9a07      	ldr	r2, [sp, #28]
 801cec6:	4592      	cmp	sl, r2
 801cec8:	d109      	bne.n	801cede <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801ceca:	f8db 0000 	ldr.w	r0, [fp]
 801cece:	6802      	ldr	r2, [r0, #0]
 801ced0:	fb09 f303 	mul.w	r3, r9, r3
 801ced4:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801ced6:	4629      	mov	r1, r5
 801ced8:	463a      	mov	r2, r7
 801ceda:	47b0      	blx	r6
 801cedc:	e7e2      	b.n	801cea4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801cede:	fb0a f303 	mul.w	r3, sl, r3
 801cee2:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801cf20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801cee6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801ceea:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801ceee:	4545      	cmp	r5, r8
 801cef0:	d2d8      	bcs.n	801cea4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801cef2:	f8db 0000 	ldr.w	r0, [fp]
 801cef6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801cefa:	6802      	ldr	r2, [r0, #0]
 801cefc:	4629      	mov	r1, r5
 801cefe:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801cf02:	005b      	lsls	r3, r3, #1
 801cf04:	463a      	mov	r2, r7
 801cf06:	47d0      	blx	sl
 801cf08:	444f      	add	r7, r9
 801cf0a:	4435      	add	r5, r6
 801cf0c:	e7ef      	b.n	801ceee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801cf0e:	bf00      	nop
 801cf10:	20013f54 	.word	0x20013f54
 801cf14:	20013f56 	.word	0x20013f56
 801cf18:	20013f58 	.word	0x20013f58
 801cf1c:	20013f5a 	.word	0x20013f5a
 801cf20:	20013f60 	.word	0x20013f60

0801cf24 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801cf24:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cf26:	4606      	mov	r6, r0
 801cf28:	b087      	sub	sp, #28
 801cf2a:	460c      	mov	r4, r1
 801cf2c:	4617      	mov	r7, r2
 801cf2e:	461d      	mov	r5, r3
 801cf30:	b333      	cbz	r3, 801cf80 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cf32:	4608      	mov	r0, r1
 801cf34:	f7f1 f82d 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cf38:	bb10      	cbnz	r0, 801cf80 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cf3a:	6820      	ldr	r0, [r4, #0]
 801cf3c:	6861      	ldr	r1, [r4, #4]
 801cf3e:	4c1c      	ldr	r4, [pc, #112]	@ (801cfb0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801cf40:	ab04      	add	r3, sp, #16
 801cf42:	c303      	stmia	r3!, {r0, r1}
 801cf44:	a804      	add	r0, sp, #16
 801cf46:	f7f7 f9d5 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf4a:	6820      	ldr	r0, [r4, #0]
 801cf4c:	6803      	ldr	r3, [r0, #0]
 801cf4e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801cf50:	4798      	blx	r3
 801cf52:	2dff      	cmp	r5, #255	@ 0xff
 801cf54:	d016      	beq.n	801cf84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801cf56:	f010 0f08 	tst.w	r0, #8
 801cf5a:	6820      	ldr	r0, [r4, #0]
 801cf5c:	d015      	beq.n	801cf8a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801cf5e:	2400      	movs	r4, #0
 801cf60:	6801      	ldr	r1, [r0, #0]
 801cf62:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801cf66:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cf6a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801cf6e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801cf72:	9401      	str	r4, [sp, #4]
 801cf74:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801cf78:	9400      	str	r4, [sp, #0]
 801cf7a:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801cf7c:	4639      	mov	r1, r7
 801cf7e:	47a0      	blx	r4
 801cf80:	b007      	add	sp, #28
 801cf82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cf84:	f010 0f02 	tst.w	r0, #2
 801cf88:	e7e7      	b.n	801cf5a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801cf8a:	6803      	ldr	r3, [r0, #0]
 801cf8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cf8e:	4798      	blx	r3
 801cf90:	4b08      	ldr	r3, [pc, #32]	@ (801cfb4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801cf92:	881a      	ldrh	r2, [r3, #0]
 801cf94:	6833      	ldr	r3, [r6, #0]
 801cf96:	e9cd 7500 	strd	r7, r5, [sp]
 801cf9a:	4601      	mov	r1, r0
 801cf9c:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801cf9e:	4630      	mov	r0, r6
 801cfa0:	ab04      	add	r3, sp, #16
 801cfa2:	47a8      	blx	r5
 801cfa4:	6820      	ldr	r0, [r4, #0]
 801cfa6:	6803      	ldr	r3, [r0, #0]
 801cfa8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cfaa:	4798      	blx	r3
 801cfac:	e7e8      	b.n	801cf80 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cfae:	bf00      	nop
 801cfb0:	20013f60 	.word	0x20013f60
 801cfb4:	20013f5a 	.word	0x20013f5a

0801cfb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801cfb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cfbc:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801cfc0:	9e08      	ldr	r6, [sp, #32]
 801cfc2:	4688      	mov	r8, r1
 801cfc4:	4614      	mov	r4, r2
 801cfc6:	461d      	mov	r5, r3
 801cfc8:	2f00      	cmp	r7, #0
 801cfca:	f000 80a9 	beq.w	801d120 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cfce:	4618      	mov	r0, r3
 801cfd0:	f7f0 ffdf 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cfd4:	2800      	cmp	r0, #0
 801cfd6:	f040 80a3 	bne.w	801d120 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cfda:	f9b5 1000 	ldrsh.w	r1, [r5]
 801cfde:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801cfe2:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801cfe6:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801cfea:	fb04 1303 	mla	r3, r4, r3, r1
 801cfee:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801cff2:	4365      	muls	r5, r4
 801cff4:	2fff      	cmp	r7, #255	@ 0xff
 801cff6:	eba4 0200 	sub.w	r2, r4, r0
 801cffa:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801cffe:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801d002:	d04a      	beq.n	801d09a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801d004:	b2bc      	uxth	r4, r7
 801d006:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801d00a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801d00e:	fa5f f788 	uxtb.w	r7, r8
 801d012:	b2f3      	uxtb	r3, r6
 801d014:	0040      	lsls	r0, r0, #1
 801d016:	fb0e fe04 	mul.w	lr, lr, r4
 801d01a:	4367      	muls	r7, r4
 801d01c:	4363      	muls	r3, r4
 801d01e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801d022:	fa1f fc8c 	uxth.w	ip, ip
 801d026:	42a9      	cmp	r1, r5
 801d028:	d27a      	bcs.n	801d120 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d02a:	eb01 0900 	add.w	r9, r1, r0
 801d02e:	4549      	cmp	r1, r9
 801d030:	d231      	bcs.n	801d096 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801d032:	880a      	ldrh	r2, [r1, #0]
 801d034:	1214      	asrs	r4, r2, #8
 801d036:	10d6      	asrs	r6, r2, #3
 801d038:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801d03c:	00d2      	lsls	r2, r2, #3
 801d03e:	b2d2      	uxtb	r2, r2
 801d040:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d044:	fb14 f40c 	smulbb	r4, r4, ip
 801d048:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d04c:	4474      	add	r4, lr
 801d04e:	fb12 f20c 	smulbb	r2, r2, ip
 801d052:	b2a4      	uxth	r4, r4
 801d054:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801d058:	441a      	add	r2, r3
 801d05a:	b292      	uxth	r2, r2
 801d05c:	f104 0a01 	add.w	sl, r4, #1
 801d060:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d064:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d068:	fb16 f60c 	smulbb	r6, r6, ip
 801d06c:	f102 0a01 	add.w	sl, r2, #1
 801d070:	443e      	add	r6, r7
 801d072:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801d076:	b2b6      	uxth	r6, r6
 801d078:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801d07c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d080:	4322      	orrs	r2, r4
 801d082:	1c74      	adds	r4, r6, #1
 801d084:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801d088:	0976      	lsrs	r6, r6, #5
 801d08a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801d08e:	4332      	orrs	r2, r6
 801d090:	f821 2b02 	strh.w	r2, [r1], #2
 801d094:	e7cb      	b.n	801d02e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801d096:	4441      	add	r1, r8
 801d098:	e7c5      	b.n	801d026 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801d09a:	4f22      	ldr	r7, [pc, #136]	@ (801d124 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801d09c:	0973      	lsrs	r3, r6, #5
 801d09e:	ea08 0707 	and.w	r7, r8, r7
 801d0a2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d0a6:	433b      	orrs	r3, r7
 801d0a8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801d0ac:	4333      	orrs	r3, r6
 801d0ae:	07e7      	lsls	r7, r4, #31
 801d0b0:	b29b      	uxth	r3, r3
 801d0b2:	d50b      	bpl.n	801d0cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801d0b4:	0040      	lsls	r0, r0, #1
 801d0b6:	0052      	lsls	r2, r2, #1
 801d0b8:	42a9      	cmp	r1, r5
 801d0ba:	d231      	bcs.n	801d120 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d0bc:	180c      	adds	r4, r1, r0
 801d0be:	42a1      	cmp	r1, r4
 801d0c0:	d202      	bcs.n	801d0c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801d0c2:	f821 3b02 	strh.w	r3, [r1], #2
 801d0c6:	e7fa      	b.n	801d0be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801d0c8:	4411      	add	r1, r2
 801d0ca:	e7f5      	b.n	801d0b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801d0cc:	078e      	lsls	r6, r1, #30
 801d0ce:	d008      	beq.n	801d0e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801d0d0:	0066      	lsls	r6, r4, #1
 801d0d2:	460a      	mov	r2, r1
 801d0d4:	42aa      	cmp	r2, r5
 801d0d6:	d202      	bcs.n	801d0de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801d0d8:	8013      	strh	r3, [r2, #0]
 801d0da:	4432      	add	r2, r6
 801d0dc:	e7fa      	b.n	801d0d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801d0de:	3102      	adds	r1, #2
 801d0e0:	3801      	subs	r0, #1
 801d0e2:	07c2      	lsls	r2, r0, #31
 801d0e4:	d50b      	bpl.n	801d0fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801d0e6:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801d0ea:	3a01      	subs	r2, #1
 801d0ec:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801d0f0:	0066      	lsls	r6, r4, #1
 801d0f2:	42aa      	cmp	r2, r5
 801d0f4:	d202      	bcs.n	801d0fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801d0f6:	8013      	strh	r3, [r2, #0]
 801d0f8:	4432      	add	r2, r6
 801d0fa:	e7fa      	b.n	801d0f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801d0fc:	3801      	subs	r0, #1
 801d0fe:	b178      	cbz	r0, 801d120 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d100:	1040      	asrs	r0, r0, #1
 801d102:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801d106:	0080      	lsls	r0, r0, #2
 801d108:	0064      	lsls	r4, r4, #1
 801d10a:	42a9      	cmp	r1, r5
 801d10c:	d208      	bcs.n	801d120 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d10e:	180e      	adds	r6, r1, r0
 801d110:	460a      	mov	r2, r1
 801d112:	42b2      	cmp	r2, r6
 801d114:	d202      	bcs.n	801d11c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801d116:	f842 3b04 	str.w	r3, [r2], #4
 801d11a:	e7fa      	b.n	801d112 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801d11c:	4421      	add	r1, r4
 801d11e:	e7f4      	b.n	801d10a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801d120:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d124:	00fff800 	.word	0x00fff800

0801d128 <_ZN8touchgfx8LCD16bppC1Ev>:
 801d128:	2200      	movs	r2, #0
 801d12a:	4912      	ldr	r1, [pc, #72]	@ (801d174 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801d12c:	6001      	str	r1, [r0, #0]
 801d12e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801d132:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801d136:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801d13a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801d13e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801d142:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801d146:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801d14a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801d14e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801d152:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801d156:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801d15a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801d15e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801d162:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801d166:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801d16a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801d16e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801d172:	4770      	bx	lr
 801d174:	0802b838 	.word	0x0802b838

0801d178 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801d178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d17c:	460d      	mov	r5, r1
 801d17e:	b08d      	sub	sp, #52	@ 0x34
 801d180:	4604      	mov	r4, r0
 801d182:	6808      	ldr	r0, [r1, #0]
 801d184:	6849      	ldr	r1, [r1, #4]
 801d186:	4699      	mov	r9, r3
 801d188:	ab08      	add	r3, sp, #32
 801d18a:	c303      	stmia	r3!, {r0, r1}
 801d18c:	6810      	ldr	r0, [r2, #0]
 801d18e:	6851      	ldr	r1, [r2, #4]
 801d190:	ab0a      	add	r3, sp, #40	@ 0x28
 801d192:	c303      	stmia	r3!, {r0, r1}
 801d194:	a808      	add	r0, sp, #32
 801d196:	f7f7 f8ad 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d19a:	4629      	mov	r1, r5
 801d19c:	a80a      	add	r0, sp, #40	@ 0x28
 801d19e:	f7f7 f8d1 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d1a2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801d1a6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801d1aa:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801d1ae:	4d63      	ldr	r5, [pc, #396]	@ (801d33c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d1b0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801d1b4:	6828      	ldr	r0, [r5, #0]
 801d1b6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801d1ba:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d1be:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d1c2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801d1c6:	440a      	add	r2, r1
 801d1c8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801d1cc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801d1d0:	4413      	add	r3, r2
 801d1d2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801d1d6:	6803      	ldr	r3, [r0, #0]
 801d1d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d1da:	4798      	blx	r3
 801d1dc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d1e0:	d119      	bne.n	801d216 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801d1e2:	f010 0f20 	tst.w	r0, #32
 801d1e6:	6828      	ldr	r0, [r5, #0]
 801d1e8:	d018      	beq.n	801d21c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801d1ea:	2500      	movs	r5, #0
 801d1ec:	6801      	ldr	r1, [r0, #0]
 801d1ee:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801d1f2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801d1f6:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801d1fa:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801d1fe:	9502      	str	r5, [sp, #8]
 801d200:	b2b6      	uxth	r6, r6
 801d202:	fa1f f588 	uxth.w	r5, r8
 801d206:	9601      	str	r6, [sp, #4]
 801d208:	9500      	str	r5, [sp, #0]
 801d20a:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801d20c:	4621      	mov	r1, r4
 801d20e:	47a8      	blx	r5
 801d210:	b00d      	add	sp, #52	@ 0x34
 801d212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d216:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801d21a:	e7e4      	b.n	801d1e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801d21c:	6803      	ldr	r3, [r0, #0]
 801d21e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d220:	4798      	blx	r3
 801d222:	4947      	ldr	r1, [pc, #284]	@ (801d340 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801d224:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801d228:	880b      	ldrh	r3, [r1, #0]
 801d22a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801d22e:	fb03 5202 	mla	r2, r3, r2, r5
 801d232:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d236:	4373      	muls	r3, r6
 801d238:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d23c:	9307      	str	r3, [sp, #28]
 801d23e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d242:	9306      	str	r3, [sp, #24]
 801d244:	468a      	mov	sl, r1
 801d246:	9b07      	ldr	r3, [sp, #28]
 801d248:	4298      	cmp	r0, r3
 801d24a:	d270      	bcs.n	801d32e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801d24c:	9b06      	ldr	r3, [sp, #24]
 801d24e:	4621      	mov	r1, r4
 801d250:	eb00 0b03 	add.w	fp, r0, r3
 801d254:	4558      	cmp	r0, fp
 801d256:	d25d      	bcs.n	801d314 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801d258:	f851 4b04 	ldr.w	r4, [r1], #4
 801d25c:	0e23      	lsrs	r3, r4, #24
 801d25e:	d014      	beq.n	801d28a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d260:	2bff      	cmp	r3, #255	@ 0xff
 801d262:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801d266:	d112      	bne.n	801d28e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d268:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d26c:	d10f      	bne.n	801d28e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d26e:	0963      	lsrs	r3, r4, #5
 801d270:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801d274:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d278:	f02c 0c07 	bic.w	ip, ip, #7
 801d27c:	ea43 0c0c 	orr.w	ip, r3, ip
 801d280:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801d284:	ea4c 0404 	orr.w	r4, ip, r4
 801d288:	8004      	strh	r4, [r0, #0]
 801d28a:	3002      	adds	r0, #2
 801d28c:	e7e2      	b.n	801d254 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801d28e:	fb09 f303 	mul.w	r3, r9, r3
 801d292:	8807      	ldrh	r7, [r0, #0]
 801d294:	1c5a      	adds	r2, r3, #1
 801d296:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801d29a:	1212      	asrs	r2, r2, #8
 801d29c:	123e      	asrs	r6, r7, #8
 801d29e:	b293      	uxth	r3, r2
 801d2a0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801d2a4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d2a8:	43d2      	mvns	r2, r2
 801d2aa:	b2d2      	uxtb	r2, r2
 801d2ac:	10fd      	asrs	r5, r7, #3
 801d2ae:	fb1e fe03 	smulbb	lr, lr, r3
 801d2b2:	00ff      	lsls	r7, r7, #3
 801d2b4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d2b8:	fb06 e602 	mla	r6, r6, r2, lr
 801d2bc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d2c0:	b2ff      	uxtb	r7, r7
 801d2c2:	fa5f fc8c 	uxtb.w	ip, ip
 801d2c6:	b2e4      	uxtb	r4, r4
 801d2c8:	b2b6      	uxth	r6, r6
 801d2ca:	fb1c fc03 	smulbb	ip, ip, r3
 801d2ce:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d2d2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d2d6:	fb14 f403 	smulbb	r4, r4, r3
 801d2da:	fb05 c502 	mla	r5, r5, r2, ip
 801d2de:	f106 0e01 	add.w	lr, r6, #1
 801d2e2:	fb07 4702 	mla	r7, r7, r2, r4
 801d2e6:	b2ad      	uxth	r5, r5
 801d2e8:	b2bf      	uxth	r7, r7
 801d2ea:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801d2ee:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801d2f2:	f105 0c01 	add.w	ip, r5, #1
 801d2f6:	1c7e      	adds	r6, r7, #1
 801d2f8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801d2fc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d300:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d304:	096d      	lsrs	r5, r5, #5
 801d306:	ea46 060e 	orr.w	r6, r6, lr
 801d30a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d30e:	432e      	orrs	r6, r5
 801d310:	8006      	strh	r6, [r0, #0]
 801d312:	e7ba      	b.n	801d28a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d314:	f8ba 3000 	ldrh.w	r3, [sl]
 801d318:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801d31c:	eba3 0308 	sub.w	r3, r3, r8
 801d320:	eba4 0408 	sub.w	r4, r4, r8
 801d324:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d328:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801d32c:	e78b      	b.n	801d246 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801d32e:	4b03      	ldr	r3, [pc, #12]	@ (801d33c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d330:	6818      	ldr	r0, [r3, #0]
 801d332:	6803      	ldr	r3, [r0, #0]
 801d334:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d336:	4798      	blx	r3
 801d338:	e76a      	b.n	801d210 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801d33a:	bf00      	nop
 801d33c:	20013f60 	.word	0x20013f60
 801d340:	20013f5a 	.word	0x20013f5a

0801d344 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801d344:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d348:	460c      	mov	r4, r1
 801d34a:	b085      	sub	sp, #20
 801d34c:	6810      	ldr	r0, [r2, #0]
 801d34e:	6851      	ldr	r1, [r2, #4]
 801d350:	466d      	mov	r5, sp
 801d352:	c503      	stmia	r5!, {r0, r1}
 801d354:	6818      	ldr	r0, [r3, #0]
 801d356:	6859      	ldr	r1, [r3, #4]
 801d358:	4616      	mov	r6, r2
 801d35a:	c503      	stmia	r5!, {r0, r1}
 801d35c:	4668      	mov	r0, sp
 801d35e:	f7f6 ffc9 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d362:	4631      	mov	r1, r6
 801d364:	a802      	add	r0, sp, #8
 801d366:	f7f6 ffed 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d36a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801d36e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801d372:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d376:	4d28      	ldr	r5, [pc, #160]	@ (801d418 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801d378:	4e28      	ldr	r6, [pc, #160]	@ (801d41c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801d37a:	6828      	ldr	r0, [r5, #0]
 801d37c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801d380:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801d384:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d388:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d38c:	f8bd 1000 	ldrh.w	r1, [sp]
 801d390:	440a      	add	r2, r1
 801d392:	f8ad 2008 	strh.w	r2, [sp, #8]
 801d396:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d39a:	4413      	add	r3, r2
 801d39c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801d3a0:	6803      	ldr	r3, [r0, #0]
 801d3a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d3a4:	4798      	blx	r3
 801d3a6:	8833      	ldrh	r3, [r6, #0]
 801d3a8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801d3ac:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801d3b0:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801d420 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801d3b4:	fb03 1202 	mla	r2, r3, r2, r1
 801d3b8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d3bc:	fb08 f303 	mul.w	r3, r8, r3
 801d3c0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d3c4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801d3c8:	4298      	cmp	r0, r3
 801d3ca:	d21d      	bcs.n	801d408 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801d3cc:	eb00 080c 	add.w	r8, r0, ip
 801d3d0:	4540      	cmp	r0, r8
 801d3d2:	d20f      	bcs.n	801d3f4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801d3d4:	f854 1b04 	ldr.w	r1, [r4], #4
 801d3d8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801d3dc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801d3e0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d3e4:	ea42 0209 	orr.w	r2, r2, r9
 801d3e8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801d3ec:	430a      	orrs	r2, r1
 801d3ee:	f820 2b02 	strh.w	r2, [r0], #2
 801d3f2:	e7ed      	b.n	801d3d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801d3f4:	8832      	ldrh	r2, [r6, #0]
 801d3f6:	1bd2      	subs	r2, r2, r7
 801d3f8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d3fc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801d400:	1bd2      	subs	r2, r2, r7
 801d402:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801d406:	e7df      	b.n	801d3c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801d408:	6828      	ldr	r0, [r5, #0]
 801d40a:	6803      	ldr	r3, [r0, #0]
 801d40c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d40e:	4798      	blx	r3
 801d410:	b005      	add	sp, #20
 801d412:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d416:	bf00      	nop
 801d418:	20013f60 	.word	0x20013f60
 801d41c:	20013f5a 	.word	0x20013f5a
 801d420:	fffff800 	.word	0xfffff800

0801d424 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801d424:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d428:	460e      	mov	r6, r1
 801d42a:	b08e      	sub	sp, #56	@ 0x38
 801d42c:	4604      	mov	r4, r0
 801d42e:	6808      	ldr	r0, [r1, #0]
 801d430:	6849      	ldr	r1, [r1, #4]
 801d432:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801d60c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801d436:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801d610 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801d43a:	461d      	mov	r5, r3
 801d43c:	ab0a      	add	r3, sp, #40	@ 0x28
 801d43e:	c303      	stmia	r3!, {r0, r1}
 801d440:	6810      	ldr	r0, [r2, #0]
 801d442:	6851      	ldr	r1, [r2, #4]
 801d444:	ab0c      	add	r3, sp, #48	@ 0x30
 801d446:	c303      	stmia	r3!, {r0, r1}
 801d448:	a80a      	add	r0, sp, #40	@ 0x28
 801d44a:	f7f6 ff53 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d44e:	4631      	mov	r1, r6
 801d450:	a80c      	add	r0, sp, #48	@ 0x30
 801d452:	f7f6 ff77 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d456:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801d45a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801d45e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801d462:	f8d8 0000 	ldr.w	r0, [r8]
 801d466:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801d46a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801d46e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d472:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d476:	440c      	add	r4, r1
 801d478:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801d47c:	440a      	add	r2, r1
 801d47e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801d482:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801d486:	4413      	add	r3, r2
 801d488:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801d48c:	6803      	ldr	r3, [r0, #0]
 801d48e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d490:	4798      	blx	r3
 801d492:	2dff      	cmp	r5, #255	@ 0xff
 801d494:	d124      	bne.n	801d4e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801d496:	f010 0f01 	tst.w	r0, #1
 801d49a:	f8d8 0000 	ldr.w	r0, [r8]
 801d49e:	d022      	beq.n	801d4e6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801d4a0:	2100      	movs	r1, #0
 801d4a2:	f8d0 c000 	ldr.w	ip, [r0]
 801d4a6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801d4aa:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801d4ae:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801d4b2:	f04f 0e01 	mov.w	lr, #1
 801d4b6:	f8cd e018 	str.w	lr, [sp, #24]
 801d4ba:	f8b9 e000 	ldrh.w	lr, [r9]
 801d4be:	9503      	str	r5, [sp, #12]
 801d4c0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801d4c4:	b2b6      	uxth	r6, r6
 801d4c6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801d4ca:	9102      	str	r1, [sp, #8]
 801d4cc:	b2bf      	uxth	r7, r7
 801d4ce:	9601      	str	r6, [sp, #4]
 801d4d0:	9700      	str	r7, [sp, #0]
 801d4d2:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801d4d6:	4621      	mov	r1, r4
 801d4d8:	47a8      	blx	r5
 801d4da:	b00e      	add	sp, #56	@ 0x38
 801d4dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d4e0:	f010 0f04 	tst.w	r0, #4
 801d4e4:	e7d9      	b.n	801d49a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801d4e6:	6803      	ldr	r3, [r0, #0]
 801d4e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d4ea:	4798      	blx	r3
 801d4ec:	f8b9 3000 	ldrh.w	r3, [r9]
 801d4f0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801d4f4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801d4f8:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801d4fc:	fb03 1202 	mla	r2, r3, r2, r1
 801d500:	ebac 0c07 	sub.w	ip, ip, r7
 801d504:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d508:	435e      	muls	r6, r3
 801d50a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d50e:	2dff      	cmp	r5, #255	@ 0xff
 801d510:	eba3 0707 	sub.w	r7, r3, r7
 801d514:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d518:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d51c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d520:	d049      	beq.n	801d5b6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d522:	43eb      	mvns	r3, r5
 801d524:	fa1f f985 	uxth.w	r9, r5
 801d528:	b2db      	uxtb	r3, r3
 801d52a:	42b0      	cmp	r0, r6
 801d52c:	d266      	bcs.n	801d5fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d52e:	eb00 0a0e 	add.w	sl, r0, lr
 801d532:	4550      	cmp	r0, sl
 801d534:	4621      	mov	r1, r4
 801d536:	f104 0403 	add.w	r4, r4, #3
 801d53a:	d25b      	bcs.n	801d5f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d53c:	8802      	ldrh	r2, [r0, #0]
 801d53e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d542:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d546:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801d54a:	fb11 f109 	smulbb	r1, r1, r9
 801d54e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d552:	10d5      	asrs	r5, r2, #3
 801d554:	fb08 1803 	mla	r8, r8, r3, r1
 801d558:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d55c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d560:	fb11 f109 	smulbb	r1, r1, r9
 801d564:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d568:	fb05 1503 	mla	r5, r5, r3, r1
 801d56c:	00d2      	lsls	r2, r2, #3
 801d56e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d572:	b2d2      	uxtb	r2, r2
 801d574:	fb11 f109 	smulbb	r1, r1, r9
 801d578:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d57c:	fa1f f888 	uxth.w	r8, r8
 801d580:	fb02 1203 	mla	r2, r2, r3, r1
 801d584:	b292      	uxth	r2, r2
 801d586:	f108 0101 	add.w	r1, r8, #1
 801d58a:	b2ad      	uxth	r5, r5
 801d58c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d590:	1c51      	adds	r1, r2, #1
 801d592:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d596:	1c69      	adds	r1, r5, #1
 801d598:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d59c:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801d5a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d5a4:	096d      	lsrs	r5, r5, #5
 801d5a6:	ea42 0208 	orr.w	r2, r2, r8
 801d5aa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d5ae:	432a      	orrs	r2, r5
 801d5b0:	f820 2b02 	strh.w	r2, [r0], #2
 801d5b4:	e7bd      	b.n	801d532 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d5b6:	4a14      	ldr	r2, [pc, #80]	@ (801d608 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d5b8:	42b0      	cmp	r0, r6
 801d5ba:	d21f      	bcs.n	801d5fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d5bc:	eb00 050e 	add.w	r5, r0, lr
 801d5c0:	42a8      	cmp	r0, r5
 801d5c2:	4621      	mov	r1, r4
 801d5c4:	f104 0403 	add.w	r4, r4, #3
 801d5c8:	d210      	bcs.n	801d5ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d5ca:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d5ce:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d5d2:	00db      	lsls	r3, r3, #3
 801d5d4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d5d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d5dc:	430b      	orrs	r3, r1
 801d5de:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d5e2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d5e6:	f820 3b02 	strh.w	r3, [r0], #2
 801d5ea:	e7e9      	b.n	801d5c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d5ec:	4438      	add	r0, r7
 801d5ee:	eb01 040c 	add.w	r4, r1, ip
 801d5f2:	e7e1      	b.n	801d5b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d5f4:	4438      	add	r0, r7
 801d5f6:	eb01 040c 	add.w	r4, r1, ip
 801d5fa:	e796      	b.n	801d52a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d5fc:	4b03      	ldr	r3, [pc, #12]	@ (801d60c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d5fe:	6818      	ldr	r0, [r3, #0]
 801d600:	6803      	ldr	r3, [r0, #0]
 801d602:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d604:	4798      	blx	r3
 801d606:	e768      	b.n	801d4da <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d608:	fffff800 	.word	0xfffff800
 801d60c:	20013f60 	.word	0x20013f60
 801d610:	20013f5a 	.word	0x20013f5a

0801d614 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d614:	b4f0      	push	{r4, r5, r6, r7}
 801d616:	4616      	mov	r6, r2
 801d618:	2e01      	cmp	r6, #1
 801d61a:	461c      	mov	r4, r3
 801d61c:	460d      	mov	r5, r1
 801d61e:	9a04      	ldr	r2, [sp, #16]
 801d620:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d624:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801d628:	d012      	beq.n	801d650 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801d62a:	d303      	bcc.n	801d634 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801d62c:	2e02      	cmp	r6, #2
 801d62e:	d00a      	beq.n	801d646 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801d630:	bcf0      	pop	{r4, r5, r6, r7}
 801d632:	4770      	bx	lr
 801d634:	6805      	ldr	r5, [r0, #0]
 801d636:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d63a:	68ed      	ldr	r5, [r5, #12]
 801d63c:	4613      	mov	r3, r2
 801d63e:	46ac      	mov	ip, r5
 801d640:	4622      	mov	r2, r4
 801d642:	bcf0      	pop	{r4, r5, r6, r7}
 801d644:	4760      	bx	ip
 801d646:	4621      	mov	r1, r4
 801d648:	4628      	mov	r0, r5
 801d64a:	bcf0      	pop	{r4, r5, r6, r7}
 801d64c:	f7ff bd94 	b.w	801d178 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d650:	4621      	mov	r1, r4
 801d652:	4628      	mov	r0, r5
 801d654:	bcf0      	pop	{r4, r5, r6, r7}
 801d656:	f7ff bee5 	b.w	801d424 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d65c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d65c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d660:	4681      	mov	r9, r0
 801d662:	b093      	sub	sp, #76	@ 0x4c
 801d664:	6810      	ldr	r0, [r2, #0]
 801d666:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801d66a:	4f6d      	ldr	r7, [pc, #436]	@ (801d820 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d66c:	4688      	mov	r8, r1
 801d66e:	6851      	ldr	r1, [r2, #4]
 801d670:	ac0e      	add	r4, sp, #56	@ 0x38
 801d672:	c403      	stmia	r4!, {r0, r1}
 801d674:	6818      	ldr	r0, [r3, #0]
 801d676:	6859      	ldr	r1, [r3, #4]
 801d678:	ac10      	add	r4, sp, #64	@ 0x40
 801d67a:	4616      	mov	r6, r2
 801d67c:	c403      	stmia	r4!, {r0, r1}
 801d67e:	a80e      	add	r0, sp, #56	@ 0x38
 801d680:	f7f6 fe38 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d684:	4631      	mov	r1, r6
 801d686:	a810      	add	r0, sp, #64	@ 0x40
 801d688:	f7f6 fe5c 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d68c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801d690:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801d694:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801d698:	4e62      	ldr	r6, [pc, #392]	@ (801d824 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d69a:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801d69e:	6830      	ldr	r0, [r6, #0]
 801d6a0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801d6a4:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d6a8:	4489      	add	r9, r1
 801d6aa:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801d6ae:	440a      	add	r2, r1
 801d6b0:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801d6b4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801d6b8:	4413      	add	r3, r2
 801d6ba:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801d6be:	6803      	ldr	r3, [r0, #0]
 801d6c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d6c2:	4798      	blx	r3
 801d6c4:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801d6c8:	6830      	ldr	r0, [r6, #0]
 801d6ca:	d01d      	beq.n	801d708 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d6cc:	2200      	movs	r2, #0
 801d6ce:	6801      	ldr	r1, [r0, #0]
 801d6d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801d6d4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d6d8:	220b      	movs	r2, #11
 801d6da:	9207      	str	r2, [sp, #28]
 801d6dc:	883a      	ldrh	r2, [r7, #0]
 801d6de:	9206      	str	r2, [sp, #24]
 801d6e0:	2201      	movs	r2, #1
 801d6e2:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d6e6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801d6ea:	9203      	str	r2, [sp, #12]
 801d6ec:	b2a4      	uxth	r4, r4
 801d6ee:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801d6f2:	9200      	str	r2, [sp, #0]
 801d6f4:	b2ad      	uxth	r5, r5
 801d6f6:	9502      	str	r5, [sp, #8]
 801d6f8:	9401      	str	r4, [sp, #4]
 801d6fa:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801d6fc:	4642      	mov	r2, r8
 801d6fe:	4649      	mov	r1, r9
 801d700:	47a0      	blx	r4
 801d702:	b013      	add	sp, #76	@ 0x4c
 801d704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d708:	6803      	ldr	r3, [r0, #0]
 801d70a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d70c:	4798      	blx	r3
 801d70e:	883b      	ldrh	r3, [r7, #0]
 801d710:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801d714:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801d718:	fb03 1202 	mla	r2, r3, r2, r1
 801d71c:	435d      	muls	r5, r3
 801d71e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d722:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d726:	920c      	str	r2, [sp, #48]	@ 0x30
 801d728:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801d72c:	1b12      	subs	r2, r2, r4
 801d72e:	920d      	str	r2, [sp, #52]	@ 0x34
 801d730:	0062      	lsls	r2, r4, #1
 801d732:	1b1c      	subs	r4, r3, r4
 801d734:	0063      	lsls	r3, r4, #1
 801d736:	920a      	str	r2, [sp, #40]	@ 0x28
 801d738:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d73a:	f04f 0e04 	mov.w	lr, #4
 801d73e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d740:	4298      	cmp	r0, r3
 801d742:	d266      	bcs.n	801d812 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d744:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d746:	eb00 0b03 	add.w	fp, r0, r3
 801d74a:	4558      	cmp	r0, fp
 801d74c:	d25c      	bcs.n	801d808 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d74e:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d752:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d756:	f858 2003 	ldr.w	r2, [r8, r3]
 801d75a:	0e11      	lsrs	r1, r2, #24
 801d75c:	d012      	beq.n	801d784 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d75e:	29ff      	cmp	r1, #255	@ 0xff
 801d760:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d764:	d110      	bne.n	801d788 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d766:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801d76a:	d10d      	bne.n	801d788 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d76c:	0953      	lsrs	r3, r2, #5
 801d76e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801d772:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d776:	f027 0707 	bic.w	r7, r7, #7
 801d77a:	431f      	orrs	r7, r3
 801d77c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d780:	433a      	orrs	r2, r7
 801d782:	8002      	strh	r2, [r0, #0]
 801d784:	3002      	adds	r0, #2
 801d786:	e7e0      	b.n	801d74a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d788:	fb0a f101 	mul.w	r1, sl, r1
 801d78c:	8806      	ldrh	r6, [r0, #0]
 801d78e:	1c4b      	adds	r3, r1, #1
 801d790:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d794:	1235      	asrs	r5, r6, #8
 801d796:	10f4      	asrs	r4, r6, #3
 801d798:	121b      	asrs	r3, r3, #8
 801d79a:	00f6      	lsls	r6, r6, #3
 801d79c:	b299      	uxth	r1, r3
 801d79e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d7a2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d7a6:	b2f6      	uxtb	r6, r6
 801d7a8:	43db      	mvns	r3, r3
 801d7aa:	b2d2      	uxtb	r2, r2
 801d7ac:	b2db      	uxtb	r3, r3
 801d7ae:	fb1c fc01 	smulbb	ip, ip, r1
 801d7b2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d7b6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d7ba:	fb12 f201 	smulbb	r2, r2, r1
 801d7be:	fb05 c503 	mla	r5, r5, r3, ip
 801d7c2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801d7c6:	b2ff      	uxtb	r7, r7
 801d7c8:	fb06 2203 	mla	r2, r6, r3, r2
 801d7cc:	b2ad      	uxth	r5, r5
 801d7ce:	fb17 f701 	smulbb	r7, r7, r1
 801d7d2:	b292      	uxth	r2, r2
 801d7d4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d7d8:	fb04 7403 	mla	r4, r4, r3, r7
 801d7dc:	f105 0c01 	add.w	ip, r5, #1
 801d7e0:	1c57      	adds	r7, r2, #1
 801d7e2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d7e6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d7ea:	b2a4      	uxth	r4, r4
 801d7ec:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d7f0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d7f4:	433d      	orrs	r5, r7
 801d7f6:	1c67      	adds	r7, r4, #1
 801d7f8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d7fc:	0964      	lsrs	r4, r4, #5
 801d7fe:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d802:	4325      	orrs	r5, r4
 801d804:	8005      	strh	r5, [r0, #0]
 801d806:	e7bd      	b.n	801d784 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d808:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d80a:	4418      	add	r0, r3
 801d80c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d80e:	4499      	add	r9, r3
 801d810:	e795      	b.n	801d73e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d812:	4b04      	ldr	r3, [pc, #16]	@ (801d824 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d814:	6818      	ldr	r0, [r3, #0]
 801d816:	6803      	ldr	r3, [r0, #0]
 801d818:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d81a:	4798      	blx	r3
 801d81c:	e771      	b.n	801d702 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d81e:	bf00      	nop
 801d820:	20013f5a 	.word	0x20013f5a
 801d824:	20013f60 	.word	0x20013f60

0801d828 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d82c:	b087      	sub	sp, #28
 801d82e:	4680      	mov	r8, r0
 801d830:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801d834:	460d      	mov	r5, r1
 801d836:	4614      	mov	r4, r2
 801d838:	2e00      	cmp	r6, #0
 801d83a:	f000 80b9 	beq.w	801d9b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d83e:	6810      	ldr	r0, [r2, #0]
 801d840:	6851      	ldr	r1, [r2, #4]
 801d842:	af02      	add	r7, sp, #8
 801d844:	c703      	stmia	r7!, {r0, r1}
 801d846:	6818      	ldr	r0, [r3, #0]
 801d848:	6859      	ldr	r1, [r3, #4]
 801d84a:	af04      	add	r7, sp, #16
 801d84c:	c703      	stmia	r7!, {r0, r1}
 801d84e:	a802      	add	r0, sp, #8
 801d850:	f7f6 fd50 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d854:	4621      	mov	r1, r4
 801d856:	a804      	add	r0, sp, #16
 801d858:	f7f6 fd74 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d85c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d860:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d864:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d868:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d86c:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d870:	eb08 0401 	add.w	r4, r8, r1
 801d874:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d878:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d87c:	440a      	add	r2, r1
 801d87e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d882:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d886:	4413      	add	r3, r2
 801d888:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d88c:	4b4a      	ldr	r3, [pc, #296]	@ (801d9b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d88e:	6818      	ldr	r0, [r3, #0]
 801d890:	6803      	ldr	r3, [r0, #0]
 801d892:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d894:	4798      	blx	r3
 801d896:	4b49      	ldr	r3, [pc, #292]	@ (801d9bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d898:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d89c:	881a      	ldrh	r2, [r3, #0]
 801d89e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d8a2:	2eff      	cmp	r6, #255	@ 0xff
 801d8a4:	fb02 c101 	mla	r1, r2, r1, ip
 801d8a8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d8ac:	fb02 f207 	mul.w	r2, r2, r7
 801d8b0:	f105 0104 	add.w	r1, r5, #4
 801d8b4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d8b8:	461d      	mov	r5, r3
 801d8ba:	d05a      	beq.n	801d972 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d8bc:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801d8c0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d8c4:	b2b6      	uxth	r6, r6
 801d8c6:	fa1f fe8e 	uxth.w	lr, lr
 801d8ca:	9301      	str	r3, [sp, #4]
 801d8cc:	4282      	cmp	r2, r0
 801d8ce:	d96a      	bls.n	801d9a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d8d0:	eb00 0b0a 	add.w	fp, r0, sl
 801d8d4:	4583      	cmp	fp, r0
 801d8d6:	d940      	bls.n	801d95a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d8d8:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d8dc:	8805      	ldrh	r5, [r0, #0]
 801d8de:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d8e2:	122f      	asrs	r7, r5, #8
 801d8e4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d8e8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801d8ec:	fb17 f70e 	smulbb	r7, r7, lr
 801d8f0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d8f4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d8f8:	00ed      	lsls	r5, r5, #3
 801d8fa:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d8fe:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801d902:	10df      	asrs	r7, r3, #3
 801d904:	b2ed      	uxtb	r5, r5
 801d906:	00db      	lsls	r3, r3, #3
 801d908:	fa1f fc8c 	uxth.w	ip, ip
 801d90c:	fb19 f90e 	smulbb	r9, r9, lr
 801d910:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d914:	b2db      	uxtb	r3, r3
 801d916:	fb15 f50e 	smulbb	r5, r5, lr
 801d91a:	fb07 9706 	mla	r7, r7, r6, r9
 801d91e:	fb03 5306 	mla	r3, r3, r6, r5
 801d922:	f10c 0901 	add.w	r9, ip, #1
 801d926:	b29b      	uxth	r3, r3
 801d928:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d92c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801d930:	f103 0c01 	add.w	ip, r3, #1
 801d934:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d938:	b2bf      	uxth	r7, r7
 801d93a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d93e:	ea4c 0c09 	orr.w	ip, ip, r9
 801d942:	f107 0901 	add.w	r9, r7, #1
 801d946:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d94a:	097f      	lsrs	r7, r7, #5
 801d94c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d950:	ea4c 0c07 	orr.w	ip, ip, r7
 801d954:	f820 cb02 	strh.w	ip, [r0], #2
 801d958:	e7bc      	b.n	801d8d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d95a:	9b01      	ldr	r3, [sp, #4]
 801d95c:	881b      	ldrh	r3, [r3, #0]
 801d95e:	eba3 0308 	sub.w	r3, r3, r8
 801d962:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d966:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d96a:	eba3 0308 	sub.w	r3, r3, r8
 801d96e:	441c      	add	r4, r3
 801d970:	e7ac      	b.n	801d8cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d972:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d976:	4282      	cmp	r2, r0
 801d978:	d915      	bls.n	801d9a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d97a:	eb00 060a 	add.w	r6, r0, sl
 801d97e:	4286      	cmp	r6, r0
 801d980:	d906      	bls.n	801d990 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d982:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d986:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d98a:	f820 3b02 	strh.w	r3, [r0], #2
 801d98e:	e7f6      	b.n	801d97e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d990:	882b      	ldrh	r3, [r5, #0]
 801d992:	eba3 0308 	sub.w	r3, r3, r8
 801d996:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d99a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d99e:	eba3 0308 	sub.w	r3, r3, r8
 801d9a2:	441c      	add	r4, r3
 801d9a4:	e7e7      	b.n	801d976 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d9a6:	4b04      	ldr	r3, [pc, #16]	@ (801d9b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d9a8:	6818      	ldr	r0, [r3, #0]
 801d9aa:	6803      	ldr	r3, [r0, #0]
 801d9ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d9ae:	4798      	blx	r3
 801d9b0:	b007      	add	sp, #28
 801d9b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9b6:	bf00      	nop
 801d9b8:	20013f60 	.word	0x20013f60
 801d9bc:	20013f5a 	.word	0x20013f5a

0801d9c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d9c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9c4:	b091      	sub	sp, #68	@ 0x44
 801d9c6:	4680      	mov	r8, r0
 801d9c8:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801d9cc:	460f      	mov	r7, r1
 801d9ce:	4614      	mov	r4, r2
 801d9d0:	2d00      	cmp	r5, #0
 801d9d2:	d051      	beq.n	801da78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d9d4:	6810      	ldr	r0, [r2, #0]
 801d9d6:	6851      	ldr	r1, [r2, #4]
 801d9d8:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801dbdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d9dc:	ae0c      	add	r6, sp, #48	@ 0x30
 801d9de:	c603      	stmia	r6!, {r0, r1}
 801d9e0:	6818      	ldr	r0, [r3, #0]
 801d9e2:	6859      	ldr	r1, [r3, #4]
 801d9e4:	ae0e      	add	r6, sp, #56	@ 0x38
 801d9e6:	c603      	stmia	r6!, {r0, r1}
 801d9e8:	a80c      	add	r0, sp, #48	@ 0x30
 801d9ea:	f7f6 fc83 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d9ee:	4621      	mov	r1, r4
 801d9f0:	a80e      	add	r0, sp, #56	@ 0x38
 801d9f2:	f7f6 fca7 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d9f6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801d9fa:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801d9fe:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801da02:	f8d9 0000 	ldr.w	r0, [r9]
 801da06:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801da0a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801da0e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801da12:	eb08 0401 	add.w	r4, r8, r1
 801da16:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801da1a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801dbe0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801da1e:	440a      	add	r2, r1
 801da20:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801da24:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801da28:	4413      	add	r3, r2
 801da2a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801da2e:	6803      	ldr	r3, [r0, #0]
 801da30:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801da32:	4798      	blx	r3
 801da34:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801da38:	f8d9 0000 	ldr.w	r0, [r9]
 801da3c:	d01f      	beq.n	801da7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801da3e:	2200      	movs	r2, #0
 801da40:	6801      	ldr	r1, [r0, #0]
 801da42:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801da46:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801da4a:	220b      	movs	r2, #11
 801da4c:	9207      	str	r2, [sp, #28]
 801da4e:	f8b8 2000 	ldrh.w	r2, [r8]
 801da52:	9206      	str	r2, [sp, #24]
 801da54:	2201      	movs	r2, #1
 801da56:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801da5a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801da5e:	9203      	str	r2, [sp, #12]
 801da60:	fa1f f28a 	uxth.w	r2, sl
 801da64:	9202      	str	r2, [sp, #8]
 801da66:	b2b6      	uxth	r6, r6
 801da68:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801da6c:	9200      	str	r2, [sp, #0]
 801da6e:	9601      	str	r6, [sp, #4]
 801da70:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801da72:	463a      	mov	r2, r7
 801da74:	4621      	mov	r1, r4
 801da76:	47a8      	blx	r5
 801da78:	b011      	add	sp, #68	@ 0x44
 801da7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da7e:	6803      	ldr	r3, [r0, #0]
 801da80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801da82:	4798      	blx	r3
 801da84:	f8b8 2000 	ldrh.w	r2, [r8]
 801da88:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801da8c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801da90:	2dff      	cmp	r5, #255	@ 0xff
 801da92:	fb02 1303 	mla	r3, r2, r3, r1
 801da96:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801da9a:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801da9e:	fb0a fa02 	mul.w	sl, sl, r2
 801daa2:	d062      	beq.n	801db6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801daa4:	ea6f 0c05 	mvn.w	ip, r5
 801daa8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801daac:	930a      	str	r3, [sp, #40]	@ 0x28
 801daae:	b2ad      	uxth	r5, r5
 801dab0:	fa5f fc8c 	uxtb.w	ip, ip
 801dab4:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801dab8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801daba:	4298      	cmp	r0, r3
 801dabc:	f080 8085 	bcs.w	801dbca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801dac0:	eb00 0b09 	add.w	fp, r0, r9
 801dac4:	4558      	cmp	r0, fp
 801dac6:	d246      	bcs.n	801db56 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801dac8:	f814 eb01 	ldrb.w	lr, [r4], #1
 801dacc:	2303      	movs	r3, #3
 801dace:	2204      	movs	r2, #4
 801dad0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801dad4:	eb07 0a0e 	add.w	sl, r7, lr
 801dad8:	8803      	ldrh	r3, [r0, #0]
 801dada:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801dade:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801dae2:	1219      	asrs	r1, r3, #8
 801dae4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801dae8:	fb18 f805 	smulbb	r8, r8, r5
 801daec:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801daf0:	10da      	asrs	r2, r3, #3
 801daf2:	fb01 810c 	mla	r1, r1, ip, r8
 801daf6:	00db      	lsls	r3, r3, #3
 801daf8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801dafc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801db00:	b2db      	uxtb	r3, r3
 801db02:	fb18 f805 	smulbb	r8, r8, r5
 801db06:	fb1e fe05 	smulbb	lr, lr, r5
 801db0a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801db0e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801db12:	b289      	uxth	r1, r1
 801db14:	fb02 820c 	mla	r2, r2, ip, r8
 801db18:	fb03 e30c 	mla	r3, r3, ip, lr
 801db1c:	b292      	uxth	r2, r2
 801db1e:	b29b      	uxth	r3, r3
 801db20:	f101 0801 	add.w	r8, r1, #1
 801db24:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801db28:	f103 0e01 	add.w	lr, r3, #1
 801db2c:	f102 0801 	add.w	r8, r2, #1
 801db30:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801db34:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801db38:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801db3c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801db40:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801db44:	ea4e 0101 	orr.w	r1, lr, r1
 801db48:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801db4c:	ea41 0108 	orr.w	r1, r1, r8
 801db50:	f820 1b02 	strh.w	r1, [r0], #2
 801db54:	e7b6      	b.n	801dac4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801db56:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801db58:	881b      	ldrh	r3, [r3, #0]
 801db5a:	1b9b      	subs	r3, r3, r6
 801db5c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801db60:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801db64:	1b9b      	subs	r3, r3, r6
 801db66:	441c      	add	r4, r3
 801db68:	e7a6      	b.n	801dab8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801db6a:	491b      	ldr	r1, [pc, #108]	@ (801dbd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801db6c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801db70:	2203      	movs	r2, #3
 801db72:	2504      	movs	r5, #4
 801db74:	4550      	cmp	r0, sl
 801db76:	d228      	bcs.n	801dbca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801db78:	eb00 0c09 	add.w	ip, r0, r9
 801db7c:	4560      	cmp	r0, ip
 801db7e:	4623      	mov	r3, r4
 801db80:	d219      	bcs.n	801dbb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801db82:	f893 e000 	ldrb.w	lr, [r3]
 801db86:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801db8a:	eb07 0b0e 	add.w	fp, r7, lr
 801db8e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801db92:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801db96:	f89b b001 	ldrb.w	fp, [fp, #1]
 801db9a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801db9e:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801dba2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801dba6:	ea43 030b 	orr.w	r3, r3, fp
 801dbaa:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801dbae:	3401      	adds	r4, #1
 801dbb0:	f820 3b02 	strh.w	r3, [r0], #2
 801dbb4:	e7e2      	b.n	801db7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801dbb6:	f8b8 3000 	ldrh.w	r3, [r8]
 801dbba:	1b9b      	subs	r3, r3, r6
 801dbbc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dbc0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801dbc4:	1b9b      	subs	r3, r3, r6
 801dbc6:	441c      	add	r4, r3
 801dbc8:	e7d4      	b.n	801db74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801dbca:	4b04      	ldr	r3, [pc, #16]	@ (801dbdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801dbcc:	6818      	ldr	r0, [r3, #0]
 801dbce:	6803      	ldr	r3, [r0, #0]
 801dbd0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801dbd2:	4798      	blx	r3
 801dbd4:	e750      	b.n	801da78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801dbd6:	bf00      	nop
 801dbd8:	fffff800 	.word	0xfffff800
 801dbdc:	20013f60 	.word	0x20013f60
 801dbe0:	20013f5a 	.word	0x20013f5a

0801dbe4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801dbe4:	b4f0      	push	{r4, r5, r6, r7}
 801dbe6:	460c      	mov	r4, r1
 801dbe8:	4611      	mov	r1, r2
 801dbea:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801dbee:	780f      	ldrb	r7, [r1, #0]
 801dbf0:	784e      	ldrb	r6, [r1, #1]
 801dbf2:	2f01      	cmp	r7, #1
 801dbf4:	461a      	mov	r2, r3
 801dbf6:	9b04      	ldr	r3, [sp, #16]
 801dbf8:	d038      	beq.n	801dc6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801dbfa:	d31f      	bcc.n	801dc3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801dbfc:	2f02      	cmp	r7, #2
 801dbfe:	d14d      	bne.n	801dc9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801dc00:	2e03      	cmp	r6, #3
 801dc02:	d84b      	bhi.n	801dc9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801dc04:	e8df f006 	tbb	[pc, r6]
 801dc08:	17140702 	.word	0x17140702
 801dc0c:	9504      	str	r5, [sp, #16]
 801dc0e:	4620      	mov	r0, r4
 801dc10:	bcf0      	pop	{r4, r5, r6, r7}
 801dc12:	f7ff be09 	b.w	801d828 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801dc16:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801dc18:	2800      	cmp	r0, #0
 801dc1a:	d03f      	beq.n	801dc9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801dc1c:	6806      	ldr	r6, [r0, #0]
 801dc1e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dc22:	68b5      	ldr	r5, [r6, #8]
 801dc24:	4613      	mov	r3, r2
 801dc26:	46ac      	mov	ip, r5
 801dc28:	460a      	mov	r2, r1
 801dc2a:	4621      	mov	r1, r4
 801dc2c:	bcf0      	pop	{r4, r5, r6, r7}
 801dc2e:	4760      	bx	ip
 801dc30:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801dc34:	e7f0      	b.n	801dc18 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801dc36:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801dc3a:	e7ed      	b.n	801dc18 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801dc3c:	2e03      	cmp	r6, #3
 801dc3e:	d82d      	bhi.n	801dc9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801dc40:	e8df f006 	tbb	[pc, r6]
 801dc44:	110e0702 	.word	0x110e0702
 801dc48:	9504      	str	r5, [sp, #16]
 801dc4a:	4620      	mov	r0, r4
 801dc4c:	bcf0      	pop	{r4, r5, r6, r7}
 801dc4e:	f7ff bd05 	b.w	801d65c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801dc52:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801dc54:	b310      	cbz	r0, 801dc9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801dc56:	6806      	ldr	r6, [r0, #0]
 801dc58:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dc5c:	68f5      	ldr	r5, [r6, #12]
 801dc5e:	e7e1      	b.n	801dc24 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801dc60:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801dc64:	e7f6      	b.n	801dc54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801dc66:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801dc6a:	e7f3      	b.n	801dc54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801dc6c:	2e03      	cmp	r6, #3
 801dc6e:	d815      	bhi.n	801dc9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801dc70:	e8df f006 	tbb	[pc, r6]
 801dc74:	110e0702 	.word	0x110e0702
 801dc78:	9504      	str	r5, [sp, #16]
 801dc7a:	4620      	mov	r0, r4
 801dc7c:	bcf0      	pop	{r4, r5, r6, r7}
 801dc7e:	f7ff be9f 	b.w	801d9c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801dc82:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801dc84:	b150      	cbz	r0, 801dc9c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801dc86:	6806      	ldr	r6, [r0, #0]
 801dc88:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dc8c:	6935      	ldr	r5, [r6, #16]
 801dc8e:	e7c9      	b.n	801dc24 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801dc90:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801dc94:	e7f6      	b.n	801dc84 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801dc96:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801dc9a:	e7f3      	b.n	801dc84 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801dc9c:	bcf0      	pop	{r4, r5, r6, r7}
 801dc9e:	4770      	bx	lr

0801dca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801dca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dca4:	4604      	mov	r4, r0
 801dca6:	b087      	sub	sp, #28
 801dca8:	6810      	ldr	r0, [r2, #0]
 801dcaa:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801dcae:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801dee8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801dcb2:	460e      	mov	r6, r1
 801dcb4:	6851      	ldr	r1, [r2, #4]
 801dcb6:	ad02      	add	r5, sp, #8
 801dcb8:	c503      	stmia	r5!, {r0, r1}
 801dcba:	6818      	ldr	r0, [r3, #0]
 801dcbc:	6859      	ldr	r1, [r3, #4]
 801dcbe:	ad04      	add	r5, sp, #16
 801dcc0:	4617      	mov	r7, r2
 801dcc2:	c503      	stmia	r5!, {r0, r1}
 801dcc4:	a802      	add	r0, sp, #8
 801dcc6:	f7f6 fb15 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dcca:	4639      	mov	r1, r7
 801dccc:	a804      	add	r0, sp, #16
 801dcce:	f7f6 fb39 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dcd2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801dcd6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dcda:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801dcde:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801dce2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801dce6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dcea:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801dcee:	440e      	add	r6, r1
 801dcf0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dcf4:	440a      	add	r2, r1
 801dcf6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801dcfa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801dcfe:	4413      	add	r3, r2
 801dd00:	f8ad 3012 	strh.w	r3, [sp, #18]
 801dd04:	4b77      	ldr	r3, [pc, #476]	@ (801dee4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801dd06:	6818      	ldr	r0, [r3, #0]
 801dd08:	6803      	ldr	r3, [r0, #0]
 801dd0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801dd0c:	4798      	blx	r3
 801dd0e:	f8b9 b000 	ldrh.w	fp, [r9]
 801dd12:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dd16:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801dd1a:	fb0b 2303 	mla	r3, fp, r3, r2
 801dd1e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dd22:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801dd26:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801dd2a:	fb05 f50b 	mul.w	r5, r5, fp
 801dd2e:	9300      	str	r3, [sp, #0]
 801dd30:	d069      	beq.n	801de06 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801dd32:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801dd36:	4558      	cmp	r0, fp
 801dd38:	f080 80cc 	bcs.w	801ded4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801dd3c:	9b00      	ldr	r3, [sp, #0]
 801dd3e:	18c3      	adds	r3, r0, r3
 801dd40:	9301      	str	r3, [sp, #4]
 801dd42:	4631      	mov	r1, r6
 801dd44:	9b01      	ldr	r3, [sp, #4]
 801dd46:	4298      	cmp	r0, r3
 801dd48:	d24f      	bcs.n	801ddea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801dd4a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801dd4e:	2a00      	cmp	r2, #0
 801dd50:	d048      	beq.n	801dde4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801dd52:	fb0a f202 	mul.w	r2, sl, r2
 801dd56:	1c53      	adds	r3, r2, #1
 801dd58:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dd5c:	121b      	asrs	r3, r3, #8
 801dd5e:	d041      	beq.n	801dde4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801dd60:	8802      	ldrh	r2, [r0, #0]
 801dd62:	f8b4 c000 	ldrh.w	ip, [r4]
 801dd66:	b29e      	uxth	r6, r3
 801dd68:	1215      	asrs	r5, r2, #8
 801dd6a:	43db      	mvns	r3, r3
 801dd6c:	b2db      	uxtb	r3, r3
 801dd6e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801dd72:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801dd76:	fb15 f503 	smulbb	r5, r5, r3
 801dd7a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801dd7e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801dd82:	00d2      	lsls	r2, r2, #3
 801dd84:	fb07 5706 	mla	r7, r7, r6, r5
 801dd88:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801dd8c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801dd90:	b2d2      	uxtb	r2, r2
 801dd92:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dd96:	b2bf      	uxth	r7, r7
 801dd98:	fb1e fe03 	smulbb	lr, lr, r3
 801dd9c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801dda0:	fa5f fc8c 	uxtb.w	ip, ip
 801dda4:	fb12 f203 	smulbb	r2, r2, r3
 801dda8:	fb05 e506 	mla	r5, r5, r6, lr
 801ddac:	fb0c 2c06 	mla	ip, ip, r6, r2
 801ddb0:	f107 0e01 	add.w	lr, r7, #1
 801ddb4:	fa1f fc8c 	uxth.w	ip, ip
 801ddb8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801ddbc:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801ddc0:	f10c 0701 	add.w	r7, ip, #1
 801ddc4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ddc8:	b2ad      	uxth	r5, r5
 801ddca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ddce:	ea47 070e 	orr.w	r7, r7, lr
 801ddd2:	f105 0e01 	add.w	lr, r5, #1
 801ddd6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ddda:	096d      	lsrs	r5, r5, #5
 801dddc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801dde0:	432f      	orrs	r7, r5
 801dde2:	8007      	strh	r7, [r0, #0]
 801dde4:	3002      	adds	r0, #2
 801dde6:	3402      	adds	r4, #2
 801dde8:	e7ac      	b.n	801dd44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801ddea:	f8b9 3000 	ldrh.w	r3, [r9]
 801ddee:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801ddf2:	eba3 0308 	sub.w	r3, r3, r8
 801ddf6:	eba6 0608 	sub.w	r6, r6, r8
 801ddfa:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801ddfe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801de02:	440e      	add	r6, r1
 801de04:	e797      	b.n	801dd36 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801de06:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801de0a:	42a8      	cmp	r0, r5
 801de0c:	d262      	bcs.n	801ded4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801de0e:	9b00      	ldr	r3, [sp, #0]
 801de10:	4631      	mov	r1, r6
 801de12:	eb00 0b03 	add.w	fp, r0, r3
 801de16:	4558      	cmp	r0, fp
 801de18:	d24e      	bcs.n	801deb8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801de1a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801de1e:	b12b      	cbz	r3, 801de2c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801de20:	2bff      	cmp	r3, #255	@ 0xff
 801de22:	f8b4 e000 	ldrh.w	lr, [r4]
 801de26:	d104      	bne.n	801de32 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801de28:	f8a0 e000 	strh.w	lr, [r0]
 801de2c:	3002      	adds	r0, #2
 801de2e:	3402      	adds	r4, #2
 801de30:	e7f1      	b.n	801de16 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801de32:	8802      	ldrh	r2, [r0, #0]
 801de34:	b29f      	uxth	r7, r3
 801de36:	1216      	asrs	r6, r2, #8
 801de38:	43db      	mvns	r3, r3
 801de3a:	b2db      	uxtb	r3, r3
 801de3c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801de40:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801de44:	fb16 f603 	smulbb	r6, r6, r3
 801de48:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801de4c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801de50:	00d2      	lsls	r2, r2, #3
 801de52:	fb0c 6c07 	mla	ip, ip, r7, r6
 801de56:	b2d2      	uxtb	r2, r2
 801de58:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801de5c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801de60:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801de64:	fb1a fa03 	smulbb	sl, sl, r3
 801de68:	fa1f fc8c 	uxth.w	ip, ip
 801de6c:	fb12 f303 	smulbb	r3, r2, r3
 801de70:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801de74:	fa5f fe8e 	uxtb.w	lr, lr
 801de78:	fb06 a607 	mla	r6, r6, r7, sl
 801de7c:	f10c 0201 	add.w	r2, ip, #1
 801de80:	fb0e 3307 	mla	r3, lr, r7, r3
 801de84:	b2b6      	uxth	r6, r6
 801de86:	b29b      	uxth	r3, r3
 801de88:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801de8c:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801de90:	f106 0a01 	add.w	sl, r6, #1
 801de94:	f103 0c01 	add.w	ip, r3, #1
 801de98:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801de9c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801dea0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801dea4:	0976      	lsrs	r6, r6, #5
 801dea6:	ea4c 0c02 	orr.w	ip, ip, r2
 801deaa:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801deae:	ea4c 0c06 	orr.w	ip, ip, r6
 801deb2:	f8a0 c000 	strh.w	ip, [r0]
 801deb6:	e7b9      	b.n	801de2c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801deb8:	f8b9 3000 	ldrh.w	r3, [r9]
 801debc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801dec0:	eba3 0308 	sub.w	r3, r3, r8
 801dec4:	eba6 0608 	sub.w	r6, r6, r8
 801dec8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801decc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ded0:	440e      	add	r6, r1
 801ded2:	e79a      	b.n	801de0a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801ded4:	4b03      	ldr	r3, [pc, #12]	@ (801dee4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801ded6:	6818      	ldr	r0, [r3, #0]
 801ded8:	6803      	ldr	r3, [r0, #0]
 801deda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801dedc:	4798      	blx	r3
 801dede:	b007      	add	sp, #28
 801dee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dee4:	20013f60 	.word	0x20013f60
 801dee8:	20013f5a 	.word	0x20013f5a

0801deec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801deec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801def0:	b089      	sub	sp, #36	@ 0x24
 801def2:	4607      	mov	r7, r0
 801def4:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801def8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801defa:	4688      	mov	r8, r1
 801defc:	4692      	mov	sl, r2
 801defe:	4699      	mov	r9, r3
 801df00:	2e00      	cmp	r6, #0
 801df02:	d048      	beq.n	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801df04:	4608      	mov	r0, r1
 801df06:	f7fa f81d 	bl	8017f44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801df0a:	4605      	mov	r5, r0
 801df0c:	4640      	mov	r0, r8
 801df0e:	f7fa f84d 	bl	8017fac <_ZNK8touchgfx6Bitmap9getHeightEv>
 801df12:	f8ad 000e 	strh.w	r0, [sp, #14]
 801df16:	4640      	mov	r0, r8
 801df18:	f8ad a008 	strh.w	sl, [sp, #8]
 801df1c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801df20:	f8ad 900a 	strh.w	r9, [sp, #10]
 801df24:	f7fa f900 	bl	8018128 <_ZNK8touchgfx6Bitmap7getDataEv>
 801df28:	4605      	mov	r5, r0
 801df2a:	4640      	mov	r0, r8
 801df2c:	f7fa f92c 	bl	8018188 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801df30:	4682      	mov	sl, r0
 801df32:	4640      	mov	r0, r8
 801df34:	f7fa f97c 	bl	8018230 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801df38:	2810      	cmp	r0, #16
 801df3a:	d82c      	bhi.n	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801df3c:	e8df f010 	tbh	[pc, r0, lsl #1]
 801df40:	00ba00ca 	.word	0x00ba00ca
 801df44:	002b0011 	.word	0x002b0011
 801df48:	002b002b 	.word	0x002b002b
 801df4c:	002b002b 	.word	0x002b002b
 801df50:	002b002b 	.word	0x002b002b
 801df54:	00c1002b 	.word	0x00c1002b
 801df58:	002b002b 	.word	0x002b002b
 801df5c:	002b0180 	.word	0x002b0180
 801df60:	0173      	.short	0x0173
 801df62:	4bbc      	ldr	r3, [pc, #752]	@ (801e254 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801df64:	6818      	ldr	r0, [r3, #0]
 801df66:	6803      	ldr	r3, [r0, #0]
 801df68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801df6a:	4798      	blx	r3
 801df6c:	2eff      	cmp	r6, #255	@ 0xff
 801df6e:	d101      	bne.n	801df74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801df70:	0683      	lsls	r3, r0, #26
 801df72:	d506      	bpl.n	801df82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801df74:	4633      	mov	r3, r6
 801df76:	4622      	mov	r2, r4
 801df78:	a902      	add	r1, sp, #8
 801df7a:	4628      	mov	r0, r5
 801df7c:	f7ff f8fc 	bl	801d178 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801df80:	e009      	b.n	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801df82:	4640      	mov	r0, r8
 801df84:	f7fa f898 	bl	80180b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801df88:	b940      	cbnz	r0, 801df9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801df8a:	4623      	mov	r3, r4
 801df8c:	aa02      	add	r2, sp, #8
 801df8e:	4629      	mov	r1, r5
 801df90:	4638      	mov	r0, r7
 801df92:	f7ff f9d7 	bl	801d344 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801df96:	b009      	add	sp, #36	@ 0x24
 801df98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df9c:	f10d 0918 	add.w	r9, sp, #24
 801dfa0:	4641      	mov	r1, r8
 801dfa2:	4648      	mov	r0, r9
 801dfa4:	f7fa f836 	bl	8018014 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801dfa8:	e899 0003 	ldmia.w	r9, {r0, r1}
 801dfac:	f10d 0810 	add.w	r8, sp, #16
 801dfb0:	e888 0003 	stmia.w	r8, {r0, r1}
 801dfb4:	4640      	mov	r0, r8
 801dfb6:	4621      	mov	r1, r4
 801dfb8:	f7ef ffa8 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 801dfbc:	4640      	mov	r0, r8
 801dfbe:	f7ef ffe8 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801dfc2:	2800      	cmp	r0, #0
 801dfc4:	d1d6      	bne.n	801df74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801dfc6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dfca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dfce:	4293      	cmp	r3, r2
 801dfd0:	dd12      	ble.n	801dff8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801dfd2:	1a9b      	subs	r3, r3, r2
 801dfd4:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dfd8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dfdc:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dfe0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dfe4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dfe8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dfec:	464a      	mov	r2, r9
 801dfee:	4633      	mov	r3, r6
 801dff0:	a902      	add	r1, sp, #8
 801dff2:	4628      	mov	r0, r5
 801dff4:	f7ff f8c0 	bl	801d178 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dff8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801dffc:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e000:	4293      	cmp	r3, r2
 801e002:	dd12      	ble.n	801e02a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801e004:	1a9b      	subs	r3, r3, r2
 801e006:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e00a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e00e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e012:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e016:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e01a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e01e:	23ff      	movs	r3, #255	@ 0xff
 801e020:	464a      	mov	r2, r9
 801e022:	a902      	add	r1, sp, #8
 801e024:	4628      	mov	r0, r5
 801e026:	f7ff f8a7 	bl	801d178 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e02a:	4643      	mov	r3, r8
 801e02c:	aa02      	add	r2, sp, #8
 801e02e:	4629      	mov	r1, r5
 801e030:	4638      	mov	r0, r7
 801e032:	f7ff f987 	bl	801d344 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e036:	88a2      	ldrh	r2, [r4, #4]
 801e038:	8823      	ldrh	r3, [r4, #0]
 801e03a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e03e:	4413      	add	r3, r2
 801e040:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e044:	440a      	add	r2, r1
 801e046:	b29b      	uxth	r3, r3
 801e048:	b292      	uxth	r2, r2
 801e04a:	b211      	sxth	r1, r2
 801e04c:	b218      	sxth	r0, r3
 801e04e:	4288      	cmp	r0, r1
 801e050:	dd12      	ble.n	801e078 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801e052:	1a9b      	subs	r3, r3, r2
 801e054:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e058:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801e05c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e060:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e064:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e068:	23ff      	movs	r3, #255	@ 0xff
 801e06a:	464a      	mov	r2, r9
 801e06c:	a902      	add	r1, sp, #8
 801e06e:	4628      	mov	r0, r5
 801e070:	f8ad 601a 	strh.w	r6, [sp, #26]
 801e074:	f7ff f880 	bl	801d178 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e078:	88e2      	ldrh	r2, [r4, #6]
 801e07a:	8863      	ldrh	r3, [r4, #2]
 801e07c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e080:	4413      	add	r3, r2
 801e082:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e086:	440a      	add	r2, r1
 801e088:	b29b      	uxth	r3, r3
 801e08a:	b292      	uxth	r2, r2
 801e08c:	b211      	sxth	r1, r2
 801e08e:	b218      	sxth	r0, r3
 801e090:	4288      	cmp	r0, r1
 801e092:	dd80      	ble.n	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e094:	1a9b      	subs	r3, r3, r2
 801e096:	f9b4 6000 	ldrsh.w	r6, [r4]
 801e09a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e09e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e0a2:	f8ad 6018 	strh.w	r6, [sp, #24]
 801e0a6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e0aa:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e0ae:	23ff      	movs	r3, #255	@ 0xff
 801e0b0:	464a      	mov	r2, r9
 801e0b2:	e761      	b.n	801df78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801e0b4:	4633      	mov	r3, r6
 801e0b6:	4622      	mov	r2, r4
 801e0b8:	a902      	add	r1, sp, #8
 801e0ba:	4628      	mov	r0, r5
 801e0bc:	f7ff f9b2 	bl	801d424 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801e0c0:	e769      	b.n	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e0c2:	e9cd 4600 	strd	r4, r6, [sp]
 801e0c6:	ab02      	add	r3, sp, #8
 801e0c8:	4652      	mov	r2, sl
 801e0ca:	4629      	mov	r1, r5
 801e0cc:	4638      	mov	r0, r7
 801e0ce:	f7ff fd89 	bl	801dbe4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801e0d2:	e760      	b.n	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e0d4:	4640      	mov	r0, r8
 801e0d6:	f7f9 ffef 	bl	80180b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e0da:	b948      	cbnz	r0, 801e0f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801e0dc:	683b      	ldr	r3, [r7, #0]
 801e0de:	e9cd 6000 	strd	r6, r0, [sp]
 801e0e2:	aa02      	add	r2, sp, #8
 801e0e4:	68de      	ldr	r6, [r3, #12]
 801e0e6:	4629      	mov	r1, r5
 801e0e8:	4623      	mov	r3, r4
 801e0ea:	4638      	mov	r0, r7
 801e0ec:	47b0      	blx	r6
 801e0ee:	e752      	b.n	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e0f0:	f10d 0918 	add.w	r9, sp, #24
 801e0f4:	4641      	mov	r1, r8
 801e0f6:	4648      	mov	r0, r9
 801e0f8:	f7f9 ff8c 	bl	8018014 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e0fc:	e899 0003 	ldmia.w	r9, {r0, r1}
 801e100:	f10d 0810 	add.w	r8, sp, #16
 801e104:	e888 0003 	stmia.w	r8, {r0, r1}
 801e108:	4640      	mov	r0, r8
 801e10a:	4621      	mov	r1, r4
 801e10c:	f7ef fefe 	bl	800df0c <_ZN8touchgfx4RectaNERKS0_>
 801e110:	4640      	mov	r0, r8
 801e112:	f7ef ff3e 	bl	800df92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e116:	b138      	cbz	r0, 801e128 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801e118:	9600      	str	r6, [sp, #0]
 801e11a:	4623      	mov	r3, r4
 801e11c:	aa02      	add	r2, sp, #8
 801e11e:	4651      	mov	r1, sl
 801e120:	4628      	mov	r0, r5
 801e122:	f7ff fdbd 	bl	801dca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e126:	e736      	b.n	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e128:	683b      	ldr	r3, [r7, #0]
 801e12a:	e9cd 6000 	strd	r6, r0, [sp]
 801e12e:	aa02      	add	r2, sp, #8
 801e130:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801e134:	4629      	mov	r1, r5
 801e136:	4643      	mov	r3, r8
 801e138:	4638      	mov	r0, r7
 801e13a:	47d8      	blx	fp
 801e13c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e140:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e144:	4293      	cmp	r3, r2
 801e146:	dd13      	ble.n	801e170 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801e148:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e14c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e150:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e154:	1a9b      	subs	r3, r3, r2
 801e156:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e15a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e15e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e162:	9600      	str	r6, [sp, #0]
 801e164:	464b      	mov	r3, r9
 801e166:	aa02      	add	r2, sp, #8
 801e168:	4651      	mov	r1, sl
 801e16a:	4628      	mov	r0, r5
 801e16c:	f7ff fd98 	bl	801dca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e170:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e174:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e178:	4293      	cmp	r3, r2
 801e17a:	dd13      	ble.n	801e1a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801e17c:	1a9b      	subs	r3, r3, r2
 801e17e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e182:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e186:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e18a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e18e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e192:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e196:	9600      	str	r6, [sp, #0]
 801e198:	464b      	mov	r3, r9
 801e19a:	aa02      	add	r2, sp, #8
 801e19c:	4651      	mov	r1, sl
 801e19e:	4628      	mov	r0, r5
 801e1a0:	f7ff fd7e 	bl	801dca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e1a4:	88a2      	ldrh	r2, [r4, #4]
 801e1a6:	8823      	ldrh	r3, [r4, #0]
 801e1a8:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e1ac:	4413      	add	r3, r2
 801e1ae:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e1b2:	440a      	add	r2, r1
 801e1b4:	b29b      	uxth	r3, r3
 801e1b6:	b292      	uxth	r2, r2
 801e1b8:	b211      	sxth	r1, r2
 801e1ba:	b218      	sxth	r0, r3
 801e1bc:	4288      	cmp	r0, r1
 801e1be:	dd13      	ble.n	801e1e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801e1c0:	1a9b      	subs	r3, r3, r2
 801e1c2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e1c6:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801e1ca:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e1ce:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e1d2:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e1d6:	9600      	str	r6, [sp, #0]
 801e1d8:	464b      	mov	r3, r9
 801e1da:	aa02      	add	r2, sp, #8
 801e1dc:	4651      	mov	r1, sl
 801e1de:	4628      	mov	r0, r5
 801e1e0:	f8ad 701a 	strh.w	r7, [sp, #26]
 801e1e4:	f7ff fd5c 	bl	801dca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e1e8:	88e2      	ldrh	r2, [r4, #6]
 801e1ea:	8863      	ldrh	r3, [r4, #2]
 801e1ec:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e1f0:	4413      	add	r3, r2
 801e1f2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e1f6:	440a      	add	r2, r1
 801e1f8:	b29b      	uxth	r3, r3
 801e1fa:	b292      	uxth	r2, r2
 801e1fc:	b211      	sxth	r1, r2
 801e1fe:	b218      	sxth	r0, r3
 801e200:	4288      	cmp	r0, r1
 801e202:	f77f aec8 	ble.w	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e206:	f9b4 7000 	ldrsh.w	r7, [r4]
 801e20a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e20e:	f8ad 7018 	strh.w	r7, [sp, #24]
 801e212:	1a9b      	subs	r3, r3, r2
 801e214:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e218:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e21c:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e220:	9600      	str	r6, [sp, #0]
 801e222:	464b      	mov	r3, r9
 801e224:	e77a      	b.n	801e11c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801e226:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801e22a:	2800      	cmp	r0, #0
 801e22c:	f43f aeb3 	beq.w	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e230:	6803      	ldr	r3, [r0, #0]
 801e232:	9600      	str	r6, [sp, #0]
 801e234:	68de      	ldr	r6, [r3, #12]
 801e236:	4623      	mov	r3, r4
 801e238:	aa02      	add	r2, sp, #8
 801e23a:	4629      	mov	r1, r5
 801e23c:	47b0      	blx	r6
 801e23e:	e6aa      	b.n	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e240:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801e244:	2800      	cmp	r0, #0
 801e246:	f43f aea6 	beq.w	801df96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e24a:	6803      	ldr	r3, [r0, #0]
 801e24c:	9600      	str	r6, [sp, #0]
 801e24e:	689e      	ldr	r6, [r3, #8]
 801e250:	e7f1      	b.n	801e236 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801e252:	bf00      	nop
 801e254:	20013f60 	.word	0x20013f60

0801e258 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801e258:	b180      	cbz	r0, 801e27c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801e25a:	2903      	cmp	r1, #3
 801e25c:	d81c      	bhi.n	801e298 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e25e:	e8df f001 	tbb	[pc, r1]
 801e262:	1d02      	.short	0x1d02
 801e264:	1f08      	.short	0x1f08
 801e266:	4b10      	ldr	r3, [pc, #64]	@ (801e2a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e268:	8818      	ldrh	r0, [r3, #0]
 801e26a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e26e:	4240      	negs	r0, r0
 801e270:	4770      	bx	lr
 801e272:	4b0d      	ldr	r3, [pc, #52]	@ (801e2a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e274:	8818      	ldrh	r0, [r3, #0]
 801e276:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e27a:	4770      	bx	lr
 801e27c:	2903      	cmp	r1, #3
 801e27e:	d80b      	bhi.n	801e298 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e280:	a301      	add	r3, pc, #4	@ (adr r3, 801e288 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801e282:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e286:	bf00      	nop
 801e288:	0801e29d 	.word	0x0801e29d
 801e28c:	0801e273 	.word	0x0801e273
 801e290:	0801e2a1 	.word	0x0801e2a1
 801e294:	0801e267 	.word	0x0801e267
 801e298:	2000      	movs	r0, #0
 801e29a:	4770      	bx	lr
 801e29c:	2001      	movs	r0, #1
 801e29e:	4770      	bx	lr
 801e2a0:	f04f 30ff 	mov.w	r0, #4294967295
 801e2a4:	4770      	bx	lr
 801e2a6:	bf00      	nop
 801e2a8:	20013f5a 	.word	0x20013f5a

0801e2ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801e2ac:	b180      	cbz	r0, 801e2d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801e2ae:	2903      	cmp	r1, #3
 801e2b0:	d81c      	bhi.n	801e2ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e2b2:	e8df f001 	tbb	[pc, r1]
 801e2b6:	021d      	.short	0x021d
 801e2b8:	071f      	.short	0x071f
 801e2ba:	4b10      	ldr	r3, [pc, #64]	@ (801e2fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e2bc:	8818      	ldrh	r0, [r3, #0]
 801e2be:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e2c2:	4770      	bx	lr
 801e2c4:	4b0d      	ldr	r3, [pc, #52]	@ (801e2fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e2c6:	8818      	ldrh	r0, [r3, #0]
 801e2c8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e2cc:	4240      	negs	r0, r0
 801e2ce:	4770      	bx	lr
 801e2d0:	2903      	cmp	r1, #3
 801e2d2:	d80b      	bhi.n	801e2ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e2d4:	a301      	add	r3, pc, #4	@ (adr r3, 801e2dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801e2d6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e2da:	bf00      	nop
 801e2dc:	0801e2bb 	.word	0x0801e2bb
 801e2e0:	0801e2f5 	.word	0x0801e2f5
 801e2e4:	0801e2c5 	.word	0x0801e2c5
 801e2e8:	0801e2f1 	.word	0x0801e2f1
 801e2ec:	2000      	movs	r0, #0
 801e2ee:	4770      	bx	lr
 801e2f0:	2001      	movs	r0, #1
 801e2f2:	4770      	bx	lr
 801e2f4:	f04f 30ff 	mov.w	r0, #4294967295
 801e2f8:	4770      	bx	lr
 801e2fa:	bf00      	nop
 801e2fc:	20013f5a 	.word	0x20013f5a

0801e300 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801e300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e304:	b099      	sub	sp, #100	@ 0x64
 801e306:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e308:	a914      	add	r1, sp, #80	@ 0x50
 801e30a:	e881 000c 	stmia.w	r1, {r2, r3}
 801e30e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801e312:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801e316:	f891 900d 	ldrb.w	r9, [r1, #13]
 801e31a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e31c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801e320:	9310      	str	r3, [sp, #64]	@ 0x40
 801e322:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801e326:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801e32a:	930c      	str	r3, [sp, #48]	@ 0x30
 801e32c:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801e330:	798f      	ldrb	r7, [r1, #6]
 801e332:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801e336:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801e33a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801e33e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801e342:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801e346:	431f      	orrs	r7, r3
 801e348:	f000 8195 	beq.w	801e676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e34c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801e350:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801e354:	f891 9007 	ldrb.w	r9, [r1, #7]
 801e358:	ea59 0903 	orrs.w	r9, r9, r3
 801e35c:	f000 818b 	beq.w	801e676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e360:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801e364:	b29b      	uxth	r3, r3
 801e366:	2d00      	cmp	r5, #0
 801e368:	f000 812e 	beq.w	801e5c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801e36c:	1aed      	subs	r5, r5, r3
 801e36e:	b2ad      	uxth	r5, r5
 801e370:	042b      	lsls	r3, r5, #16
 801e372:	d502      	bpl.n	801e37a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e374:	1b64      	subs	r4, r4, r5
 801e376:	b224      	sxth	r4, r4
 801e378:	2500      	movs	r5, #0
 801e37a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801e37e:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e382:	428c      	cmp	r4, r1
 801e384:	b28b      	uxth	r3, r1
 801e386:	bfbf      	itttt	lt
 801e388:	18ed      	addlt	r5, r5, r3
 801e38a:	1b2c      	sublt	r4, r5, r4
 801e38c:	b2a5      	uxthlt	r5, r4
 801e38e:	460c      	movlt	r4, r1
 801e390:	8891      	ldrh	r1, [r2, #4]
 801e392:	440b      	add	r3, r1
 801e394:	b21b      	sxth	r3, r3
 801e396:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e398:	88d3      	ldrh	r3, [r2, #6]
 801e39a:	8852      	ldrh	r2, [r2, #2]
 801e39c:	4413      	add	r3, r2
 801e39e:	b21b      	sxth	r3, r3
 801e3a0:	930d      	str	r3, [sp, #52]	@ 0x34
 801e3a2:	4bbe      	ldr	r3, [pc, #760]	@ (801e69c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801e3a4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e3a6:	f893 b000 	ldrb.w	fp, [r3]
 801e3aa:	f10b 3cff 	add.w	ip, fp, #4294967295
 801e3ae:	f1dc 0300 	rsbs	r3, ip, #0
 801e3b2:	eb43 030c 	adc.w	r3, r3, ip
 801e3b6:	930e      	str	r3, [sp, #56]	@ 0x38
 801e3b8:	4621      	mov	r1, r4
 801e3ba:	4653      	mov	r3, sl
 801e3bc:	a814      	add	r0, sp, #80	@ 0x50
 801e3be:	f7f5 fe0e 	bl	8013fde <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801e3c2:	4621      	mov	r1, r4
 801e3c4:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801e3c8:	4653      	mov	r3, sl
 801e3ca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e3cc:	a814      	add	r0, sp, #80	@ 0x50
 801e3ce:	f7f5 fe23 	bl	8014018 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801e3d2:	a918      	add	r1, sp, #96	@ 0x60
 801e3d4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801e3d8:	a817      	add	r0, sp, #92	@ 0x5c
 801e3da:	f7f5 ff49 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801e3de:	f1ba 0f00 	cmp.w	sl, #0
 801e3e2:	f040 80f4 	bne.w	801e5ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801e3e6:	f1bb 0f01 	cmp.w	fp, #1
 801e3ea:	f040 80f8 	bne.w	801e5de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801e3ee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e3f0:	2b00      	cmp	r3, #0
 801e3f2:	f040 8145 	bne.w	801e680 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801e3f6:	b2ba      	uxth	r2, r7
 801e3f8:	b905      	cbnz	r5, 801e3fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801e3fa:	b16e      	cbz	r6, 801e418 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801e3fc:	fb06 5302 	mla	r3, r6, r2, r5
 801e400:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801e402:	fb08 f303 	mul.w	r3, r8, r3
 801e406:	4631      	mov	r1, r6
 801e408:	f003 0607 	and.w	r6, r3, #7
 801e40c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801e410:	9328      	str	r3, [sp, #160]	@ 0xa0
 801e412:	eba9 0301 	sub.w	r3, r9, r1
 801e416:	930a      	str	r3, [sp, #40]	@ 0x28
 801e418:	4651      	mov	r1, sl
 801e41a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e41c:	f7ff ff1c 	bl	801e258 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801e420:	4681      	mov	r9, r0
 801e422:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e424:	f7ff ff42 	bl	801e2ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801e428:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e42a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801e42c:	eba3 0a01 	sub.w	sl, r3, r1
 801e430:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e432:	459a      	cmp	sl, r3
 801e434:	bfa8      	it	ge
 801e436:	469a      	movge	sl, r3
 801e438:	f1ba 0f00 	cmp.w	sl, #0
 801e43c:	4683      	mov	fp, r0
 801e43e:	f340 811a 	ble.w	801e676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e442:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e444:	1b64      	subs	r4, r4, r5
 801e446:	1b1c      	subs	r4, r3, r4
 801e448:	42bc      	cmp	r4, r7
 801e44a:	bfd4      	ite	le
 801e44c:	ebc5 0504 	rsble	r5, r5, r4
 801e450:	ebc5 0507 	rsbgt	r5, r5, r7
 801e454:	2d00      	cmp	r5, #0
 801e456:	f340 810e 	ble.w	801e676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e45a:	1b52      	subs	r2, r2, r5
 801e45c:	fb08 f302 	mul.w	r3, r8, r2
 801e460:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e462:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e464:	2b00      	cmp	r3, #0
 801e466:	f040 8116 	bne.w	801e696 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801e46a:	4b8d      	ldr	r3, [pc, #564]	@ (801e6a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801e46c:	6818      	ldr	r0, [r3, #0]
 801e46e:	6803      	ldr	r3, [r0, #0]
 801e470:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e472:	4798      	blx	r3
 801e474:	2301      	movs	r3, #1
 801e476:	fa03 f308 	lsl.w	r3, r3, r8
 801e47a:	4a8a      	ldr	r2, [pc, #552]	@ (801e6a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801e47c:	3b01      	subs	r3, #1
 801e47e:	b2db      	uxtb	r3, r3
 801e480:	8811      	ldrh	r1, [r2, #0]
 801e482:	930e      	str	r3, [sp, #56]	@ 0x38
 801e484:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801e488:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801e48c:	fb01 2303 	mla	r3, r1, r3, r2
 801e490:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e494:	930a      	str	r3, [sp, #40]	@ 0x28
 801e496:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e498:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801e49c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e49e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e4a0:	0a19      	lsrs	r1, r3, #8
 801e4a2:	b2cb      	uxtb	r3, r1
 801e4a4:	9312      	str	r3, [sp, #72]	@ 0x48
 801e4a6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e4a8:	b2db      	uxtb	r3, r3
 801e4aa:	9311      	str	r3, [sp, #68]	@ 0x44
 801e4ac:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e4ae:	095a      	lsrs	r2, r3, #5
 801e4b0:	4b7d      	ldr	r3, [pc, #500]	@ (801e6a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801e4b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e4b6:	400b      	ands	r3, r1
 801e4b8:	4313      	orrs	r3, r2
 801e4ba:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801e4bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e4c0:	4313      	orrs	r3, r2
 801e4c2:	b29b      	uxth	r3, r3
 801e4c4:	9310      	str	r3, [sp, #64]	@ 0x40
 801e4c6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e4c8:	781a      	ldrb	r2, [r3, #0]
 801e4ca:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801e4ce:	4132      	asrs	r2, r6
 801e4d0:	fb05 b919 	mls	r9, r5, r9, fp
 801e4d4:	fb03 fb05 	mul.w	fp, r3, r5
 801e4d8:	b2d2      	uxtb	r2, r2
 801e4da:	930d      	str	r3, [sp, #52]	@ 0x34
 801e4dc:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801e4e0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801e4e4:	f0c0 80f5 	bcc.w	801e6d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801e4e8:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801e4ec:	46ae      	mov	lr, r5
 801e4ee:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801e4f2:	f0c0 80dd 	bcc.w	801e6b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801e4f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e4f8:	4013      	ands	r3, r2
 801e4fa:	d055      	beq.n	801e5a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801e4fc:	20ff      	movs	r0, #255	@ 0xff
 801e4fe:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801e500:	fb90 f1f1 	sdiv	r1, r0, r1
 801e504:	434b      	muls	r3, r1
 801e506:	2bfe      	cmp	r3, #254	@ 0xfe
 801e508:	dd03      	ble.n	801e512 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801e50a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e50c:	4281      	cmp	r1, r0
 801e50e:	f000 80cd 	beq.w	801e6ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801e512:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e514:	f8bc 4000 	ldrh.w	r4, [ip]
 801e518:	fb11 f303 	smulbb	r3, r1, r3
 801e51c:	b29b      	uxth	r3, r3
 801e51e:	1c59      	adds	r1, r3, #1
 801e520:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e524:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e528:	b29f      	uxth	r7, r3
 801e52a:	43db      	mvns	r3, r3
 801e52c:	b2db      	uxtb	r3, r3
 801e52e:	9309      	str	r3, [sp, #36]	@ 0x24
 801e530:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e532:	1220      	asrs	r0, r4, #8
 801e534:	fb13 f907 	smulbb	r9, r3, r7
 801e538:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e53c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e53e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801e542:	fb00 9003 	mla	r0, r0, r3, r9
 801e546:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801e548:	10e1      	asrs	r1, r4, #3
 801e54a:	fb13 f907 	smulbb	r9, r3, r7
 801e54e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e552:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e554:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e558:	fb01 9103 	mla	r1, r1, r3, r9
 801e55c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e55e:	00e4      	lsls	r4, r4, #3
 801e560:	fb13 f707 	smulbb	r7, r3, r7
 801e564:	b2e4      	uxtb	r4, r4
 801e566:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e568:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e56c:	fb04 7403 	mla	r4, r4, r3, r7
 801e570:	b280      	uxth	r0, r0
 801e572:	b2a4      	uxth	r4, r4
 801e574:	1c43      	adds	r3, r0, #1
 801e576:	f104 0901 	add.w	r9, r4, #1
 801e57a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e57e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e582:	b289      	uxth	r1, r1
 801e584:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e588:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801e58c:	ea49 0000 	orr.w	r0, r9, r0
 801e590:	f101 0901 	add.w	r9, r1, #1
 801e594:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e598:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e59c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e5a0:	ea40 0009 	orr.w	r0, r0, r9
 801e5a4:	f8ac 0000 	strh.w	r0, [ip]
 801e5a8:	4446      	add	r6, r8
 801e5aa:	b2b6      	uxth	r6, r6
 801e5ac:	2e07      	cmp	r6, #7
 801e5ae:	bf81      	itttt	hi
 801e5b0:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801e5b2:	785a      	ldrbhi	r2, [r3, #1]
 801e5b4:	3301      	addhi	r3, #1
 801e5b6:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801e5b8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e5ba:	bf9a      	itte	ls
 801e5bc:	fa42 f208 	asrls.w	r2, r2, r8
 801e5c0:	b2d2      	uxtbls	r2, r2
 801e5c2:	2600      	movhi	r6, #0
 801e5c4:	449c      	add	ip, r3
 801e5c6:	e792      	b.n	801e4ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801e5c8:	441c      	add	r4, r3
 801e5ca:	b224      	sxth	r4, r4
 801e5cc:	e6d5      	b.n	801e37a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e5ce:	f1ba 0f01 	cmp.w	sl, #1
 801e5d2:	f47f af0c 	bne.w	801e3ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e5d6:	f1bb 0f01 	cmp.w	fp, #1
 801e5da:	f47f af08 	bne.w	801e3ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e5de:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 801e6a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e5e2:	f8db 0000 	ldr.w	r0, [fp]
 801e5e6:	6803      	ldr	r3, [r0, #0]
 801e5e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801e5ea:	4798      	blx	r3
 801e5ec:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801e5f0:	465a      	mov	r2, fp
 801e5f2:	d006      	beq.n	801e602 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e5f4:	f1b8 0f04 	cmp.w	r8, #4
 801e5f8:	d140      	bne.n	801e67c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801e5fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e5fc:	3300      	adds	r3, #0
 801e5fe:	bf18      	it	ne
 801e600:	2301      	movne	r3, #1
 801e602:	0580      	lsls	r0, r0, #22
 801e604:	d56e      	bpl.n	801e6e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e606:	f1b8 0f08 	cmp.w	r8, #8
 801e60a:	d16b      	bne.n	801e6e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e60c:	2b00      	cmp	r3, #0
 801e60e:	bf0c      	ite	eq
 801e610:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801e614:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801e618:	2d00      	cmp	r5, #0
 801e61a:	f47f aee8 	bne.w	801e3ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e61e:	2e00      	cmp	r6, #0
 801e620:	f47f aee5 	bne.w	801e3ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e624:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e626:	19e3      	adds	r3, r4, r7
 801e628:	4283      	cmp	r3, r0
 801e62a:	f73f aee0 	bgt.w	801e3ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e62e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e630:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e632:	444b      	add	r3, r9
 801e634:	4283      	cmp	r3, r0
 801e636:	f73f aeda 	bgt.w	801e3ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e63a:	6810      	ldr	r0, [r2, #0]
 801e63c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801e640:	6804      	ldr	r4, [r0, #0]
 801e642:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801e646:	b2bf      	uxth	r7, r7
 801e648:	f1b8 0f08 	cmp.w	r8, #8
 801e64c:	f04f 0500 	mov.w	r5, #0
 801e650:	bf18      	it	ne
 801e652:	3701      	addne	r7, #1
 801e654:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e658:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e65a:	9104      	str	r1, [sp, #16]
 801e65c:	bf18      	it	ne
 801e65e:	f027 0701 	bicne.w	r7, r7, #1
 801e662:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801e664:	bf18      	it	ne
 801e666:	b2bf      	uxthne	r7, r7
 801e668:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801e66c:	e9cd 7900 	strd	r7, r9, [sp]
 801e670:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801e672:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801e674:	47a0      	blx	r4
 801e676:	b019      	add	sp, #100	@ 0x64
 801e678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e67c:	2300      	movs	r3, #0
 801e67e:	e7c0      	b.n	801e602 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e680:	2208      	movs	r2, #8
 801e682:	fb92 f3f8 	sdiv	r3, r2, r8
 801e686:	1e5a      	subs	r2, r3, #1
 801e688:	443a      	add	r2, r7
 801e68a:	fb92 f2f3 	sdiv	r2, r2, r3
 801e68e:	fb12 f203 	smulbb	r2, r2, r3
 801e692:	b292      	uxth	r2, r2
 801e694:	e6b0      	b.n	801e3f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e696:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801e698:	e6ec      	b.n	801e474 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e69a:	bf00      	nop
 801e69c:	20013f58 	.word	0x20013f58
 801e6a0:	20013f60 	.word	0x20013f60
 801e6a4:	20013f5a 	.word	0x20013f5a
 801e6a8:	00fff800 	.word	0x00fff800
 801e6ac:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801e6ae:	e779      	b.n	801e5a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e6b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e6b2:	b153      	cbz	r3, 801e6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e6b4:	441e      	add	r6, r3
 801e6b6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e6b8:	b2b6      	uxth	r6, r6
 801e6ba:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e6be:	f006 0607 	and.w	r6, r6, #7
 801e6c2:	781a      	ldrb	r2, [r3, #0]
 801e6c4:	9328      	str	r3, [sp, #160]	@ 0xa0
 801e6c6:	4132      	asrs	r2, r6
 801e6c8:	b2d2      	uxtb	r2, r2
 801e6ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e6cc:	445b      	add	r3, fp
 801e6ce:	930a      	str	r3, [sp, #40]	@ 0x28
 801e6d0:	e706      	b.n	801e4e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e6d2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e6d4:	2b00      	cmp	r3, #0
 801e6d6:	d1ce      	bne.n	801e676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e6d8:	4b05      	ldr	r3, [pc, #20]	@ (801e6f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e6da:	6818      	ldr	r0, [r3, #0]
 801e6dc:	6803      	ldr	r3, [r0, #0]
 801e6de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e6e0:	4798      	blx	r3
 801e6e2:	e7c8      	b.n	801e676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e6e4:	2b00      	cmp	r3, #0
 801e6e6:	f43f ae82 	beq.w	801e3ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e6ea:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801e6ee:	e793      	b.n	801e618 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e6f0:	20013f60 	.word	0x20013f60

0801e6f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e6f4:	b538      	push	{r3, r4, r5, lr}
 801e6f6:	4c15      	ldr	r4, [pc, #84]	@ (801e74c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e6f8:	7823      	ldrb	r3, [r4, #0]
 801e6fa:	f3bf 8f5b 	dmb	ish
 801e6fe:	07da      	lsls	r2, r3, #31
 801e700:	4605      	mov	r5, r0
 801e702:	d40b      	bmi.n	801e71c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e704:	4620      	mov	r0, r4
 801e706:	f008 fc67 	bl	8026fd8 <__cxa_guard_acquire>
 801e70a:	b138      	cbz	r0, 801e71c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e70c:	4620      	mov	r0, r4
 801e70e:	f008 fc6f 	bl	8026ff0 <__cxa_guard_release>
 801e712:	4a0f      	ldr	r2, [pc, #60]	@ (801e750 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e714:	490f      	ldr	r1, [pc, #60]	@ (801e754 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e716:	4810      	ldr	r0, [pc, #64]	@ (801e758 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e718:	f008 fc57 	bl	8026fca <__aeabi_atexit>
 801e71c:	4c0f      	ldr	r4, [pc, #60]	@ (801e75c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e71e:	7823      	ldrb	r3, [r4, #0]
 801e720:	f3bf 8f5b 	dmb	ish
 801e724:	07db      	lsls	r3, r3, #31
 801e726:	d40b      	bmi.n	801e740 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e728:	4620      	mov	r0, r4
 801e72a:	f008 fc55 	bl	8026fd8 <__cxa_guard_acquire>
 801e72e:	b138      	cbz	r0, 801e740 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e730:	4620      	mov	r0, r4
 801e732:	f008 fc5d 	bl	8026ff0 <__cxa_guard_release>
 801e736:	4a06      	ldr	r2, [pc, #24]	@ (801e750 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e738:	4909      	ldr	r1, [pc, #36]	@ (801e760 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e73a:	480a      	ldr	r0, [pc, #40]	@ (801e764 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e73c:	f008 fc45 	bl	8026fca <__aeabi_atexit>
 801e740:	4b05      	ldr	r3, [pc, #20]	@ (801e758 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e742:	616b      	str	r3, [r5, #20]
 801e744:	4b07      	ldr	r3, [pc, #28]	@ (801e764 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e746:	61ab      	str	r3, [r5, #24]
 801e748:	bd38      	pop	{r3, r4, r5, pc}
 801e74a:	bf00      	nop
 801e74c:	20014044 	.word	0x20014044
 801e750:	20000000 	.word	0x20000000
 801e754:	0801a8a9 	.word	0x0801a8a9
 801e758:	200000d0 	.word	0x200000d0
 801e75c:	20014048 	.word	0x20014048
 801e760:	0801a8a7 	.word	0x0801a8a7
 801e764:	200000d4 	.word	0x200000d4

0801e768 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e768:	b538      	push	{r3, r4, r5, lr}
 801e76a:	4c15      	ldr	r4, [pc, #84]	@ (801e7c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e76c:	7823      	ldrb	r3, [r4, #0]
 801e76e:	f3bf 8f5b 	dmb	ish
 801e772:	07da      	lsls	r2, r3, #31
 801e774:	4605      	mov	r5, r0
 801e776:	d40b      	bmi.n	801e790 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e778:	4620      	mov	r0, r4
 801e77a:	f008 fc2d 	bl	8026fd8 <__cxa_guard_acquire>
 801e77e:	b138      	cbz	r0, 801e790 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e780:	4620      	mov	r0, r4
 801e782:	f008 fc35 	bl	8026ff0 <__cxa_guard_release>
 801e786:	4a0f      	ldr	r2, [pc, #60]	@ (801e7c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e788:	490f      	ldr	r1, [pc, #60]	@ (801e7c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e78a:	4810      	ldr	r0, [pc, #64]	@ (801e7cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e78c:	f008 fc1d 	bl	8026fca <__aeabi_atexit>
 801e790:	4c0f      	ldr	r4, [pc, #60]	@ (801e7d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e792:	7823      	ldrb	r3, [r4, #0]
 801e794:	f3bf 8f5b 	dmb	ish
 801e798:	07db      	lsls	r3, r3, #31
 801e79a:	d40b      	bmi.n	801e7b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e79c:	4620      	mov	r0, r4
 801e79e:	f008 fc1b 	bl	8026fd8 <__cxa_guard_acquire>
 801e7a2:	b138      	cbz	r0, 801e7b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e7a4:	4620      	mov	r0, r4
 801e7a6:	f008 fc23 	bl	8026ff0 <__cxa_guard_release>
 801e7aa:	4a06      	ldr	r2, [pc, #24]	@ (801e7c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e7ac:	4909      	ldr	r1, [pc, #36]	@ (801e7d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e7ae:	480a      	ldr	r0, [pc, #40]	@ (801e7d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e7b0:	f008 fc0b 	bl	8026fca <__aeabi_atexit>
 801e7b4:	4b05      	ldr	r3, [pc, #20]	@ (801e7cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e7b6:	60eb      	str	r3, [r5, #12]
 801e7b8:	4b07      	ldr	r3, [pc, #28]	@ (801e7d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e7ba:	612b      	str	r3, [r5, #16]
 801e7bc:	bd38      	pop	{r3, r4, r5, pc}
 801e7be:	bf00      	nop
 801e7c0:	2001401c 	.word	0x2001401c
 801e7c4:	20000000 	.word	0x20000000
 801e7c8:	0801a8ad 	.word	0x0801a8ad
 801e7cc:	200000a8 	.word	0x200000a8
 801e7d0:	20014020 	.word	0x20014020
 801e7d4:	0801a8ab 	.word	0x0801a8ab
 801e7d8:	200000ac 	.word	0x200000ac

0801e7dc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e7dc:	b510      	push	{r4, lr}
 801e7de:	4604      	mov	r4, r0
 801e7e0:	f7ff ff88 	bl	801e6f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e7e4:	4620      	mov	r0, r4
 801e7e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e7ea:	f7ff bfbd 	b.w	801e768 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e7f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e7f0:	b538      	push	{r3, r4, r5, lr}
 801e7f2:	4c15      	ldr	r4, [pc, #84]	@ (801e848 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e7f4:	7823      	ldrb	r3, [r4, #0]
 801e7f6:	f3bf 8f5b 	dmb	ish
 801e7fa:	07da      	lsls	r2, r3, #31
 801e7fc:	4605      	mov	r5, r0
 801e7fe:	d40b      	bmi.n	801e818 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e800:	4620      	mov	r0, r4
 801e802:	f008 fbe9 	bl	8026fd8 <__cxa_guard_acquire>
 801e806:	b138      	cbz	r0, 801e818 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e808:	4620      	mov	r0, r4
 801e80a:	f008 fbf1 	bl	8026ff0 <__cxa_guard_release>
 801e80e:	4a0f      	ldr	r2, [pc, #60]	@ (801e84c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e810:	490f      	ldr	r1, [pc, #60]	@ (801e850 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e812:	4810      	ldr	r0, [pc, #64]	@ (801e854 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e814:	f008 fbd9 	bl	8026fca <__aeabi_atexit>
 801e818:	4c0f      	ldr	r4, [pc, #60]	@ (801e858 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e81a:	7823      	ldrb	r3, [r4, #0]
 801e81c:	f3bf 8f5b 	dmb	ish
 801e820:	07db      	lsls	r3, r3, #31
 801e822:	d40b      	bmi.n	801e83c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e824:	4620      	mov	r0, r4
 801e826:	f008 fbd7 	bl	8026fd8 <__cxa_guard_acquire>
 801e82a:	b138      	cbz	r0, 801e83c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e82c:	4620      	mov	r0, r4
 801e82e:	f008 fbdf 	bl	8026ff0 <__cxa_guard_release>
 801e832:	4a06      	ldr	r2, [pc, #24]	@ (801e84c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e834:	4909      	ldr	r1, [pc, #36]	@ (801e85c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e836:	480a      	ldr	r0, [pc, #40]	@ (801e860 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e838:	f008 fbc7 	bl	8026fca <__aeabi_atexit>
 801e83c:	4b05      	ldr	r3, [pc, #20]	@ (801e854 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e83e:	626b      	str	r3, [r5, #36]	@ 0x24
 801e840:	4b07      	ldr	r3, [pc, #28]	@ (801e860 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e842:	62ab      	str	r3, [r5, #40]	@ 0x28
 801e844:	bd38      	pop	{r3, r4, r5, pc}
 801e846:	bf00      	nop
 801e848:	2001404c 	.word	0x2001404c
 801e84c:	20000000 	.word	0x20000000
 801e850:	0801a8a1 	.word	0x0801a8a1
 801e854:	200000d8 	.word	0x200000d8
 801e858:	20014050 	.word	0x20014050
 801e85c:	0801a89f 	.word	0x0801a89f
 801e860:	200000dc 	.word	0x200000dc

0801e864 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e864:	b538      	push	{r3, r4, r5, lr}
 801e866:	4c15      	ldr	r4, [pc, #84]	@ (801e8bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e868:	7823      	ldrb	r3, [r4, #0]
 801e86a:	f3bf 8f5b 	dmb	ish
 801e86e:	07da      	lsls	r2, r3, #31
 801e870:	4605      	mov	r5, r0
 801e872:	d40b      	bmi.n	801e88c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e874:	4620      	mov	r0, r4
 801e876:	f008 fbaf 	bl	8026fd8 <__cxa_guard_acquire>
 801e87a:	b138      	cbz	r0, 801e88c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e87c:	4620      	mov	r0, r4
 801e87e:	f008 fbb7 	bl	8026ff0 <__cxa_guard_release>
 801e882:	4a0f      	ldr	r2, [pc, #60]	@ (801e8c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e884:	490f      	ldr	r1, [pc, #60]	@ (801e8c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e886:	4810      	ldr	r0, [pc, #64]	@ (801e8c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e888:	f008 fb9f 	bl	8026fca <__aeabi_atexit>
 801e88c:	4c0f      	ldr	r4, [pc, #60]	@ (801e8cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e88e:	7823      	ldrb	r3, [r4, #0]
 801e890:	f3bf 8f5b 	dmb	ish
 801e894:	07db      	lsls	r3, r3, #31
 801e896:	d40b      	bmi.n	801e8b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e898:	4620      	mov	r0, r4
 801e89a:	f008 fb9d 	bl	8026fd8 <__cxa_guard_acquire>
 801e89e:	b138      	cbz	r0, 801e8b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e8a0:	4620      	mov	r0, r4
 801e8a2:	f008 fba5 	bl	8026ff0 <__cxa_guard_release>
 801e8a6:	4a06      	ldr	r2, [pc, #24]	@ (801e8c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e8a8:	4909      	ldr	r1, [pc, #36]	@ (801e8d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e8aa:	480a      	ldr	r0, [pc, #40]	@ (801e8d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e8ac:	f008 fb8d 	bl	8026fca <__aeabi_atexit>
 801e8b0:	4b05      	ldr	r3, [pc, #20]	@ (801e8c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e8b2:	61eb      	str	r3, [r5, #28]
 801e8b4:	4b07      	ldr	r3, [pc, #28]	@ (801e8d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e8b6:	622b      	str	r3, [r5, #32]
 801e8b8:	bd38      	pop	{r3, r4, r5, pc}
 801e8ba:	bf00      	nop
 801e8bc:	20014024 	.word	0x20014024
 801e8c0:	20000000 	.word	0x20000000
 801e8c4:	0801a8a5 	.word	0x0801a8a5
 801e8c8:	200000b0 	.word	0x200000b0
 801e8cc:	20014028 	.word	0x20014028
 801e8d0:	0801a8a3 	.word	0x0801a8a3
 801e8d4:	200000b4 	.word	0x200000b4

0801e8d8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e8d8:	b510      	push	{r4, lr}
 801e8da:	4604      	mov	r4, r0
 801e8dc:	f7ff ff88 	bl	801e7f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e8e0:	4620      	mov	r0, r4
 801e8e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e8e6:	f7ff bfbd 	b.w	801e864 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e8ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e8ec:	b538      	push	{r3, r4, r5, lr}
 801e8ee:	4c15      	ldr	r4, [pc, #84]	@ (801e944 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e8f0:	7823      	ldrb	r3, [r4, #0]
 801e8f2:	f3bf 8f5b 	dmb	ish
 801e8f6:	07da      	lsls	r2, r3, #31
 801e8f8:	4605      	mov	r5, r0
 801e8fa:	d40b      	bmi.n	801e914 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e8fc:	4620      	mov	r0, r4
 801e8fe:	f008 fb6b 	bl	8026fd8 <__cxa_guard_acquire>
 801e902:	b138      	cbz	r0, 801e914 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e904:	4620      	mov	r0, r4
 801e906:	f008 fb73 	bl	8026ff0 <__cxa_guard_release>
 801e90a:	4a0f      	ldr	r2, [pc, #60]	@ (801e948 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e90c:	490f      	ldr	r1, [pc, #60]	@ (801e94c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e90e:	4810      	ldr	r0, [pc, #64]	@ (801e950 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e910:	f008 fb5b 	bl	8026fca <__aeabi_atexit>
 801e914:	4c0f      	ldr	r4, [pc, #60]	@ (801e954 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e916:	7823      	ldrb	r3, [r4, #0]
 801e918:	f3bf 8f5b 	dmb	ish
 801e91c:	07db      	lsls	r3, r3, #31
 801e91e:	d40b      	bmi.n	801e938 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e920:	4620      	mov	r0, r4
 801e922:	f008 fb59 	bl	8026fd8 <__cxa_guard_acquire>
 801e926:	b138      	cbz	r0, 801e938 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e928:	4620      	mov	r0, r4
 801e92a:	f008 fb61 	bl	8026ff0 <__cxa_guard_release>
 801e92e:	4a06      	ldr	r2, [pc, #24]	@ (801e948 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e930:	4909      	ldr	r1, [pc, #36]	@ (801e958 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e932:	480a      	ldr	r0, [pc, #40]	@ (801e95c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e934:	f008 fb49 	bl	8026fca <__aeabi_atexit>
 801e938:	4b05      	ldr	r3, [pc, #20]	@ (801e950 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e93a:	636b      	str	r3, [r5, #52]	@ 0x34
 801e93c:	4b07      	ldr	r3, [pc, #28]	@ (801e95c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e93e:	63ab      	str	r3, [r5, #56]	@ 0x38
 801e940:	bd38      	pop	{r3, r4, r5, pc}
 801e942:	bf00      	nop
 801e944:	2001405c 	.word	0x2001405c
 801e948:	20000000 	.word	0x20000000
 801e94c:	0801a899 	.word	0x0801a899
 801e950:	200000e8 	.word	0x200000e8
 801e954:	20014060 	.word	0x20014060
 801e958:	0801a897 	.word	0x0801a897
 801e95c:	200000ec 	.word	0x200000ec

0801e960 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e960:	b538      	push	{r3, r4, r5, lr}
 801e962:	4c15      	ldr	r4, [pc, #84]	@ (801e9b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e964:	7823      	ldrb	r3, [r4, #0]
 801e966:	f3bf 8f5b 	dmb	ish
 801e96a:	07da      	lsls	r2, r3, #31
 801e96c:	4605      	mov	r5, r0
 801e96e:	d40b      	bmi.n	801e988 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e970:	4620      	mov	r0, r4
 801e972:	f008 fb31 	bl	8026fd8 <__cxa_guard_acquire>
 801e976:	b138      	cbz	r0, 801e988 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e978:	4620      	mov	r0, r4
 801e97a:	f008 fb39 	bl	8026ff0 <__cxa_guard_release>
 801e97e:	4a0f      	ldr	r2, [pc, #60]	@ (801e9bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e980:	490f      	ldr	r1, [pc, #60]	@ (801e9c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e982:	4810      	ldr	r0, [pc, #64]	@ (801e9c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e984:	f008 fb21 	bl	8026fca <__aeabi_atexit>
 801e988:	4c0f      	ldr	r4, [pc, #60]	@ (801e9c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e98a:	7823      	ldrb	r3, [r4, #0]
 801e98c:	f3bf 8f5b 	dmb	ish
 801e990:	07db      	lsls	r3, r3, #31
 801e992:	d40b      	bmi.n	801e9ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e994:	4620      	mov	r0, r4
 801e996:	f008 fb1f 	bl	8026fd8 <__cxa_guard_acquire>
 801e99a:	b138      	cbz	r0, 801e9ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e99c:	4620      	mov	r0, r4
 801e99e:	f008 fb27 	bl	8026ff0 <__cxa_guard_release>
 801e9a2:	4a06      	ldr	r2, [pc, #24]	@ (801e9bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e9a4:	4909      	ldr	r1, [pc, #36]	@ (801e9cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e9a6:	480a      	ldr	r0, [pc, #40]	@ (801e9d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e9a8:	f008 fb0f 	bl	8026fca <__aeabi_atexit>
 801e9ac:	4b05      	ldr	r3, [pc, #20]	@ (801e9c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e9ae:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801e9b0:	4b07      	ldr	r3, [pc, #28]	@ (801e9d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e9b2:	632b      	str	r3, [r5, #48]	@ 0x30
 801e9b4:	bd38      	pop	{r3, r4, r5, pc}
 801e9b6:	bf00      	nop
 801e9b8:	2001402c 	.word	0x2001402c
 801e9bc:	20000000 	.word	0x20000000
 801e9c0:	0801a89d 	.word	0x0801a89d
 801e9c4:	200000b8 	.word	0x200000b8
 801e9c8:	20014030 	.word	0x20014030
 801e9cc:	0801a89b 	.word	0x0801a89b
 801e9d0:	200000bc 	.word	0x200000bc

0801e9d4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e9d4:	b510      	push	{r4, lr}
 801e9d6:	4604      	mov	r4, r0
 801e9d8:	f7ff ff88 	bl	801e8ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e9dc:	4620      	mov	r0, r4
 801e9de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e9e2:	f7ff bfbd 	b.w	801e960 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e9e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e9e8:	b538      	push	{r3, r4, r5, lr}
 801e9ea:	4c15      	ldr	r4, [pc, #84]	@ (801ea40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e9ec:	7823      	ldrb	r3, [r4, #0]
 801e9ee:	f3bf 8f5b 	dmb	ish
 801e9f2:	07da      	lsls	r2, r3, #31
 801e9f4:	4605      	mov	r5, r0
 801e9f6:	d40b      	bmi.n	801ea10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e9f8:	4620      	mov	r0, r4
 801e9fa:	f008 faed 	bl	8026fd8 <__cxa_guard_acquire>
 801e9fe:	b138      	cbz	r0, 801ea10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801ea00:	4620      	mov	r0, r4
 801ea02:	f008 faf5 	bl	8026ff0 <__cxa_guard_release>
 801ea06:	4a0f      	ldr	r2, [pc, #60]	@ (801ea44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801ea08:	490f      	ldr	r1, [pc, #60]	@ (801ea48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801ea0a:	4810      	ldr	r0, [pc, #64]	@ (801ea4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801ea0c:	f008 fadd 	bl	8026fca <__aeabi_atexit>
 801ea10:	4c0f      	ldr	r4, [pc, #60]	@ (801ea50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801ea12:	7823      	ldrb	r3, [r4, #0]
 801ea14:	f3bf 8f5b 	dmb	ish
 801ea18:	07db      	lsls	r3, r3, #31
 801ea1a:	d40b      	bmi.n	801ea34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801ea1c:	4620      	mov	r0, r4
 801ea1e:	f008 fadb 	bl	8026fd8 <__cxa_guard_acquire>
 801ea22:	b138      	cbz	r0, 801ea34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801ea24:	4620      	mov	r0, r4
 801ea26:	f008 fae3 	bl	8026ff0 <__cxa_guard_release>
 801ea2a:	4a06      	ldr	r2, [pc, #24]	@ (801ea44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801ea2c:	4909      	ldr	r1, [pc, #36]	@ (801ea54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801ea2e:	480a      	ldr	r0, [pc, #40]	@ (801ea58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801ea30:	f008 facb 	bl	8026fca <__aeabi_atexit>
 801ea34:	4b05      	ldr	r3, [pc, #20]	@ (801ea4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801ea36:	656b      	str	r3, [r5, #84]	@ 0x54
 801ea38:	4b07      	ldr	r3, [pc, #28]	@ (801ea58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801ea3a:	65ab      	str	r3, [r5, #88]	@ 0x58
 801ea3c:	bd38      	pop	{r3, r4, r5, pc}
 801ea3e:	bf00      	nop
 801ea40:	20014064 	.word	0x20014064
 801ea44:	20000000 	.word	0x20000000
 801ea48:	0801a889 	.word	0x0801a889
 801ea4c:	200000f0 	.word	0x200000f0
 801ea50:	20014068 	.word	0x20014068
 801ea54:	0801a887 	.word	0x0801a887
 801ea58:	200000f4 	.word	0x200000f4

0801ea5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801ea5c:	b538      	push	{r3, r4, r5, lr}
 801ea5e:	4c15      	ldr	r4, [pc, #84]	@ (801eab4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801ea60:	7823      	ldrb	r3, [r4, #0]
 801ea62:	f3bf 8f5b 	dmb	ish
 801ea66:	07da      	lsls	r2, r3, #31
 801ea68:	4605      	mov	r5, r0
 801ea6a:	d40b      	bmi.n	801ea84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801ea6c:	4620      	mov	r0, r4
 801ea6e:	f008 fab3 	bl	8026fd8 <__cxa_guard_acquire>
 801ea72:	b138      	cbz	r0, 801ea84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801ea74:	4620      	mov	r0, r4
 801ea76:	f008 fabb 	bl	8026ff0 <__cxa_guard_release>
 801ea7a:	4a0f      	ldr	r2, [pc, #60]	@ (801eab8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ea7c:	490f      	ldr	r1, [pc, #60]	@ (801eabc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801ea7e:	4810      	ldr	r0, [pc, #64]	@ (801eac0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ea80:	f008 faa3 	bl	8026fca <__aeabi_atexit>
 801ea84:	4c0f      	ldr	r4, [pc, #60]	@ (801eac4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801ea86:	7823      	ldrb	r3, [r4, #0]
 801ea88:	f3bf 8f5b 	dmb	ish
 801ea8c:	07db      	lsls	r3, r3, #31
 801ea8e:	d40b      	bmi.n	801eaa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ea90:	4620      	mov	r0, r4
 801ea92:	f008 faa1 	bl	8026fd8 <__cxa_guard_acquire>
 801ea96:	b138      	cbz	r0, 801eaa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ea98:	4620      	mov	r0, r4
 801ea9a:	f008 faa9 	bl	8026ff0 <__cxa_guard_release>
 801ea9e:	4a06      	ldr	r2, [pc, #24]	@ (801eab8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801eaa0:	4909      	ldr	r1, [pc, #36]	@ (801eac8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801eaa2:	480a      	ldr	r0, [pc, #40]	@ (801eacc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801eaa4:	f008 fa91 	bl	8026fca <__aeabi_atexit>
 801eaa8:	4b05      	ldr	r3, [pc, #20]	@ (801eac0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801eaaa:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801eaac:	4b07      	ldr	r3, [pc, #28]	@ (801eacc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801eaae:	652b      	str	r3, [r5, #80]	@ 0x50
 801eab0:	bd38      	pop	{r3, r4, r5, pc}
 801eab2:	bf00      	nop
 801eab4:	2001406c 	.word	0x2001406c
 801eab8:	20000000 	.word	0x20000000
 801eabc:	0801a88d 	.word	0x0801a88d
 801eac0:	200000f8 	.word	0x200000f8
 801eac4:	20014070 	.word	0x20014070
 801eac8:	0801a88b 	.word	0x0801a88b
 801eacc:	200000fc 	.word	0x200000fc

0801ead0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801ead0:	b538      	push	{r3, r4, r5, lr}
 801ead2:	4c15      	ldr	r4, [pc, #84]	@ (801eb28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801ead4:	7823      	ldrb	r3, [r4, #0]
 801ead6:	f3bf 8f5b 	dmb	ish
 801eada:	07da      	lsls	r2, r3, #31
 801eadc:	4605      	mov	r5, r0
 801eade:	d40b      	bmi.n	801eaf8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801eae0:	4620      	mov	r0, r4
 801eae2:	f008 fa79 	bl	8026fd8 <__cxa_guard_acquire>
 801eae6:	b138      	cbz	r0, 801eaf8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801eae8:	4620      	mov	r0, r4
 801eaea:	f008 fa81 	bl	8026ff0 <__cxa_guard_release>
 801eaee:	4a0f      	ldr	r2, [pc, #60]	@ (801eb2c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801eaf0:	490f      	ldr	r1, [pc, #60]	@ (801eb30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801eaf2:	4810      	ldr	r0, [pc, #64]	@ (801eb34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801eaf4:	f008 fa69 	bl	8026fca <__aeabi_atexit>
 801eaf8:	4c0f      	ldr	r4, [pc, #60]	@ (801eb38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801eafa:	7823      	ldrb	r3, [r4, #0]
 801eafc:	f3bf 8f5b 	dmb	ish
 801eb00:	07db      	lsls	r3, r3, #31
 801eb02:	d40b      	bmi.n	801eb1c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801eb04:	4620      	mov	r0, r4
 801eb06:	f008 fa67 	bl	8026fd8 <__cxa_guard_acquire>
 801eb0a:	b138      	cbz	r0, 801eb1c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801eb0c:	4620      	mov	r0, r4
 801eb0e:	f008 fa6f 	bl	8026ff0 <__cxa_guard_release>
 801eb12:	4a06      	ldr	r2, [pc, #24]	@ (801eb2c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801eb14:	4909      	ldr	r1, [pc, #36]	@ (801eb3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801eb16:	480a      	ldr	r0, [pc, #40]	@ (801eb40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801eb18:	f008 fa57 	bl	8026fca <__aeabi_atexit>
 801eb1c:	4b05      	ldr	r3, [pc, #20]	@ (801eb34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801eb1e:	646b      	str	r3, [r5, #68]	@ 0x44
 801eb20:	4b07      	ldr	r3, [pc, #28]	@ (801eb40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801eb22:	64ab      	str	r3, [r5, #72]	@ 0x48
 801eb24:	bd38      	pop	{r3, r4, r5, pc}
 801eb26:	bf00      	nop
 801eb28:	20014034 	.word	0x20014034
 801eb2c:	20000000 	.word	0x20000000
 801eb30:	0801a891 	.word	0x0801a891
 801eb34:	200000c0 	.word	0x200000c0
 801eb38:	20014038 	.word	0x20014038
 801eb3c:	0801a88f 	.word	0x0801a88f
 801eb40:	200000c4 	.word	0x200000c4

0801eb44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801eb44:	b538      	push	{r3, r4, r5, lr}
 801eb46:	4c15      	ldr	r4, [pc, #84]	@ (801eb9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801eb48:	7823      	ldrb	r3, [r4, #0]
 801eb4a:	f3bf 8f5b 	dmb	ish
 801eb4e:	07da      	lsls	r2, r3, #31
 801eb50:	4605      	mov	r5, r0
 801eb52:	d40b      	bmi.n	801eb6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801eb54:	4620      	mov	r0, r4
 801eb56:	f008 fa3f 	bl	8026fd8 <__cxa_guard_acquire>
 801eb5a:	b138      	cbz	r0, 801eb6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801eb5c:	4620      	mov	r0, r4
 801eb5e:	f008 fa47 	bl	8026ff0 <__cxa_guard_release>
 801eb62:	4a0f      	ldr	r2, [pc, #60]	@ (801eba0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801eb64:	490f      	ldr	r1, [pc, #60]	@ (801eba4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801eb66:	4810      	ldr	r0, [pc, #64]	@ (801eba8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801eb68:	f008 fa2f 	bl	8026fca <__aeabi_atexit>
 801eb6c:	4c0f      	ldr	r4, [pc, #60]	@ (801ebac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801eb6e:	7823      	ldrb	r3, [r4, #0]
 801eb70:	f3bf 8f5b 	dmb	ish
 801eb74:	07db      	lsls	r3, r3, #31
 801eb76:	d40b      	bmi.n	801eb90 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801eb78:	4620      	mov	r0, r4
 801eb7a:	f008 fa2d 	bl	8026fd8 <__cxa_guard_acquire>
 801eb7e:	b138      	cbz	r0, 801eb90 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801eb80:	4620      	mov	r0, r4
 801eb82:	f008 fa35 	bl	8026ff0 <__cxa_guard_release>
 801eb86:	4a06      	ldr	r2, [pc, #24]	@ (801eba0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801eb88:	4909      	ldr	r1, [pc, #36]	@ (801ebb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801eb8a:	480a      	ldr	r0, [pc, #40]	@ (801ebb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801eb8c:	f008 fa1d 	bl	8026fca <__aeabi_atexit>
 801eb90:	4b05      	ldr	r3, [pc, #20]	@ (801eba8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801eb92:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801eb94:	4b07      	ldr	r3, [pc, #28]	@ (801ebb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801eb96:	642b      	str	r3, [r5, #64]	@ 0x40
 801eb98:	bd38      	pop	{r3, r4, r5, pc}
 801eb9a:	bf00      	nop
 801eb9c:	20014054 	.word	0x20014054
 801eba0:	20000000 	.word	0x20000000
 801eba4:	0801a895 	.word	0x0801a895
 801eba8:	200000e0 	.word	0x200000e0
 801ebac:	20014058 	.word	0x20014058
 801ebb0:	0801a893 	.word	0x0801a893
 801ebb4:	200000e4 	.word	0x200000e4

0801ebb8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801ebb8:	b510      	push	{r4, lr}
 801ebba:	4604      	mov	r4, r0
 801ebbc:	f7ff ff14 	bl	801e9e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801ebc0:	4620      	mov	r0, r4
 801ebc2:	f7ff ff85 	bl	801ead0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801ebc6:	4620      	mov	r0, r4
 801ebc8:	f7ff ff48 	bl	801ea5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801ebcc:	4620      	mov	r0, r4
 801ebce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ebd2:	f7ff bfb7 	b.w	801eb44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801ebd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801ebd8:	b538      	push	{r3, r4, r5, lr}
 801ebda:	4c15      	ldr	r4, [pc, #84]	@ (801ec30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801ebdc:	7823      	ldrb	r3, [r4, #0]
 801ebde:	f3bf 8f5b 	dmb	ish
 801ebe2:	07da      	lsls	r2, r3, #31
 801ebe4:	4605      	mov	r5, r0
 801ebe6:	d40b      	bmi.n	801ec00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ebe8:	4620      	mov	r0, r4
 801ebea:	f008 f9f5 	bl	8026fd8 <__cxa_guard_acquire>
 801ebee:	b138      	cbz	r0, 801ec00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ebf0:	4620      	mov	r0, r4
 801ebf2:	f008 f9fd 	bl	8026ff0 <__cxa_guard_release>
 801ebf6:	4a0f      	ldr	r2, [pc, #60]	@ (801ec34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ebf8:	490f      	ldr	r1, [pc, #60]	@ (801ec38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801ebfa:	4810      	ldr	r0, [pc, #64]	@ (801ec3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ebfc:	f008 f9e5 	bl	8026fca <__aeabi_atexit>
 801ec00:	4c0f      	ldr	r4, [pc, #60]	@ (801ec40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801ec02:	7823      	ldrb	r3, [r4, #0]
 801ec04:	f3bf 8f5b 	dmb	ish
 801ec08:	07db      	lsls	r3, r3, #31
 801ec0a:	d40b      	bmi.n	801ec24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ec0c:	4620      	mov	r0, r4
 801ec0e:	f008 f9e3 	bl	8026fd8 <__cxa_guard_acquire>
 801ec12:	b138      	cbz	r0, 801ec24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ec14:	4620      	mov	r0, r4
 801ec16:	f008 f9eb 	bl	8026ff0 <__cxa_guard_release>
 801ec1a:	4a06      	ldr	r2, [pc, #24]	@ (801ec34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ec1c:	4909      	ldr	r1, [pc, #36]	@ (801ec44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801ec1e:	480a      	ldr	r0, [pc, #40]	@ (801ec48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ec20:	f008 f9d3 	bl	8026fca <__aeabi_atexit>
 801ec24:	4b05      	ldr	r3, [pc, #20]	@ (801ec3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ec26:	666b      	str	r3, [r5, #100]	@ 0x64
 801ec28:	4b07      	ldr	r3, [pc, #28]	@ (801ec48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ec2a:	66ab      	str	r3, [r5, #104]	@ 0x68
 801ec2c:	bd38      	pop	{r3, r4, r5, pc}
 801ec2e:	bf00      	nop
 801ec30:	2001403c 	.word	0x2001403c
 801ec34:	20000000 	.word	0x20000000
 801ec38:	0801a881 	.word	0x0801a881
 801ec3c:	200000c8 	.word	0x200000c8
 801ec40:	20014040 	.word	0x20014040
 801ec44:	0801a87f 	.word	0x0801a87f
 801ec48:	200000cc 	.word	0x200000cc

0801ec4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801ec4c:	b538      	push	{r3, r4, r5, lr}
 801ec4e:	4c15      	ldr	r4, [pc, #84]	@ (801eca4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801ec50:	7823      	ldrb	r3, [r4, #0]
 801ec52:	f3bf 8f5b 	dmb	ish
 801ec56:	07da      	lsls	r2, r3, #31
 801ec58:	4605      	mov	r5, r0
 801ec5a:	d40b      	bmi.n	801ec74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ec5c:	4620      	mov	r0, r4
 801ec5e:	f008 f9bb 	bl	8026fd8 <__cxa_guard_acquire>
 801ec62:	b138      	cbz	r0, 801ec74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ec64:	4620      	mov	r0, r4
 801ec66:	f008 f9c3 	bl	8026ff0 <__cxa_guard_release>
 801ec6a:	4a0f      	ldr	r2, [pc, #60]	@ (801eca8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ec6c:	490f      	ldr	r1, [pc, #60]	@ (801ecac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801ec6e:	4810      	ldr	r0, [pc, #64]	@ (801ecb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ec70:	f008 f9ab 	bl	8026fca <__aeabi_atexit>
 801ec74:	4c0f      	ldr	r4, [pc, #60]	@ (801ecb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801ec76:	7823      	ldrb	r3, [r4, #0]
 801ec78:	f3bf 8f5b 	dmb	ish
 801ec7c:	07db      	lsls	r3, r3, #31
 801ec7e:	d40b      	bmi.n	801ec98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ec80:	4620      	mov	r0, r4
 801ec82:	f008 f9a9 	bl	8026fd8 <__cxa_guard_acquire>
 801ec86:	b138      	cbz	r0, 801ec98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ec88:	4620      	mov	r0, r4
 801ec8a:	f008 f9b1 	bl	8026ff0 <__cxa_guard_release>
 801ec8e:	4a06      	ldr	r2, [pc, #24]	@ (801eca8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ec90:	4909      	ldr	r1, [pc, #36]	@ (801ecb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801ec92:	480a      	ldr	r0, [pc, #40]	@ (801ecbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ec94:	f008 f999 	bl	8026fca <__aeabi_atexit>
 801ec98:	4b05      	ldr	r3, [pc, #20]	@ (801ecb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ec9a:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801ec9c:	4b07      	ldr	r3, [pc, #28]	@ (801ecbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ec9e:	662b      	str	r3, [r5, #96]	@ 0x60
 801eca0:	bd38      	pop	{r3, r4, r5, pc}
 801eca2:	bf00      	nop
 801eca4:	20014014 	.word	0x20014014
 801eca8:	20000000 	.word	0x20000000
 801ecac:	0801a885 	.word	0x0801a885
 801ecb0:	200000a0 	.word	0x200000a0
 801ecb4:	20014018 	.word	0x20014018
 801ecb8:	0801a883 	.word	0x0801a883
 801ecbc:	200000a4 	.word	0x200000a4

0801ecc0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801ecc0:	b510      	push	{r4, lr}
 801ecc2:	4604      	mov	r4, r0
 801ecc4:	f7ff ff88 	bl	801ebd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801ecc8:	4620      	mov	r0, r4
 801ecca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ecce:	f7ff bfbd 	b.w	801ec4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801ecd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801ecd4:	b538      	push	{r3, r4, r5, lr}
 801ecd6:	4c15      	ldr	r4, [pc, #84]	@ (801ed2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801ecd8:	7823      	ldrb	r3, [r4, #0]
 801ecda:	f3bf 8f5b 	dmb	ish
 801ecde:	07da      	lsls	r2, r3, #31
 801ece0:	4605      	mov	r5, r0
 801ece2:	d40b      	bmi.n	801ecfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ece4:	4620      	mov	r0, r4
 801ece6:	f008 f977 	bl	8026fd8 <__cxa_guard_acquire>
 801ecea:	b138      	cbz	r0, 801ecfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ecec:	4620      	mov	r0, r4
 801ecee:	f008 f97f 	bl	8026ff0 <__cxa_guard_release>
 801ecf2:	4a0f      	ldr	r2, [pc, #60]	@ (801ed30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ecf4:	490f      	ldr	r1, [pc, #60]	@ (801ed34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801ecf6:	4810      	ldr	r0, [pc, #64]	@ (801ed38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ecf8:	f008 f967 	bl	8026fca <__aeabi_atexit>
 801ecfc:	4c0f      	ldr	r4, [pc, #60]	@ (801ed3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801ecfe:	7823      	ldrb	r3, [r4, #0]
 801ed00:	f3bf 8f5b 	dmb	ish
 801ed04:	07db      	lsls	r3, r3, #31
 801ed06:	d40b      	bmi.n	801ed20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ed08:	4620      	mov	r0, r4
 801ed0a:	f008 f965 	bl	8026fd8 <__cxa_guard_acquire>
 801ed0e:	b138      	cbz	r0, 801ed20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ed10:	4620      	mov	r0, r4
 801ed12:	f008 f96d 	bl	8026ff0 <__cxa_guard_release>
 801ed16:	4a06      	ldr	r2, [pc, #24]	@ (801ed30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ed18:	4909      	ldr	r1, [pc, #36]	@ (801ed40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801ed1a:	480a      	ldr	r0, [pc, #40]	@ (801ed44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801ed1c:	f008 f955 	bl	8026fca <__aeabi_atexit>
 801ed20:	4b05      	ldr	r3, [pc, #20]	@ (801ed38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ed22:	676b      	str	r3, [r5, #116]	@ 0x74
 801ed24:	4b07      	ldr	r3, [pc, #28]	@ (801ed44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801ed26:	67ab      	str	r3, [r5, #120]	@ 0x78
 801ed28:	bd38      	pop	{r3, r4, r5, pc}
 801ed2a:	bf00      	nop
 801ed2c:	2001400c 	.word	0x2001400c
 801ed30:	20000000 	.word	0x20000000
 801ed34:	0801a879 	.word	0x0801a879
 801ed38:	20000098 	.word	0x20000098
 801ed3c:	20014010 	.word	0x20014010
 801ed40:	0801a877 	.word	0x0801a877
 801ed44:	2000009c 	.word	0x2000009c

0801ed48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801ed48:	b538      	push	{r3, r4, r5, lr}
 801ed4a:	4c15      	ldr	r4, [pc, #84]	@ (801eda0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801ed4c:	7823      	ldrb	r3, [r4, #0]
 801ed4e:	f3bf 8f5b 	dmb	ish
 801ed52:	07da      	lsls	r2, r3, #31
 801ed54:	4605      	mov	r5, r0
 801ed56:	d40b      	bmi.n	801ed70 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ed58:	4620      	mov	r0, r4
 801ed5a:	f008 f93d 	bl	8026fd8 <__cxa_guard_acquire>
 801ed5e:	b138      	cbz	r0, 801ed70 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ed60:	4620      	mov	r0, r4
 801ed62:	f008 f945 	bl	8026ff0 <__cxa_guard_release>
 801ed66:	4a0f      	ldr	r2, [pc, #60]	@ (801eda4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801ed68:	490f      	ldr	r1, [pc, #60]	@ (801eda8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801ed6a:	4810      	ldr	r0, [pc, #64]	@ (801edac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ed6c:	f008 f92d 	bl	8026fca <__aeabi_atexit>
 801ed70:	4c0f      	ldr	r4, [pc, #60]	@ (801edb0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801ed72:	7823      	ldrb	r3, [r4, #0]
 801ed74:	f3bf 8f5b 	dmb	ish
 801ed78:	07db      	lsls	r3, r3, #31
 801ed7a:	d40b      	bmi.n	801ed94 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ed7c:	4620      	mov	r0, r4
 801ed7e:	f008 f92b 	bl	8026fd8 <__cxa_guard_acquire>
 801ed82:	b138      	cbz	r0, 801ed94 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ed84:	4620      	mov	r0, r4
 801ed86:	f008 f933 	bl	8026ff0 <__cxa_guard_release>
 801ed8a:	4a06      	ldr	r2, [pc, #24]	@ (801eda4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801ed8c:	4909      	ldr	r1, [pc, #36]	@ (801edb4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801ed8e:	480a      	ldr	r0, [pc, #40]	@ (801edb8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801ed90:	f008 f91b 	bl	8026fca <__aeabi_atexit>
 801ed94:	4b05      	ldr	r3, [pc, #20]	@ (801edac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ed96:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801ed98:	4b07      	ldr	r3, [pc, #28]	@ (801edb8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801ed9a:	672b      	str	r3, [r5, #112]	@ 0x70
 801ed9c:	bd38      	pop	{r3, r4, r5, pc}
 801ed9e:	bf00      	nop
 801eda0:	20014004 	.word	0x20014004
 801eda4:	20000000 	.word	0x20000000
 801eda8:	0801a87d 	.word	0x0801a87d
 801edac:	20000090 	.word	0x20000090
 801edb0:	20014008 	.word	0x20014008
 801edb4:	0801a87b 	.word	0x0801a87b
 801edb8:	20000094 	.word	0x20000094

0801edbc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801edbc:	b510      	push	{r4, lr}
 801edbe:	4604      	mov	r4, r0
 801edc0:	f7ff ff88 	bl	801ecd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801edc4:	4620      	mov	r0, r4
 801edc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801edca:	f7ff bfbd 	b.w	801ed48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801edce <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801edce:	b510      	push	{r4, lr}
 801edd0:	4604      	mov	r4, r0
 801edd2:	f7ff fff3 	bl	801edbc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801edd6:	4620      	mov	r0, r4
 801edd8:	f7ff ff72 	bl	801ecc0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801eddc:	4620      	mov	r0, r4
 801edde:	f7ff fdf9 	bl	801e9d4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801ede2:	4620      	mov	r0, r4
 801ede4:	f7ff fcfa 	bl	801e7dc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801ede8:	4620      	mov	r0, r4
 801edea:	f7ff fd75 	bl	801e8d8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801edee:	4620      	mov	r0, r4
 801edf0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801edf4:	f7ff bee0 	b.w	801ebb8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801edf8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801edf8:	b538      	push	{r3, r4, r5, lr}
 801edfa:	4c0b      	ldr	r4, [pc, #44]	@ (801ee28 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801edfc:	7823      	ldrb	r3, [r4, #0]
 801edfe:	f3bf 8f5b 	dmb	ish
 801ee02:	07db      	lsls	r3, r3, #31
 801ee04:	4605      	mov	r5, r0
 801ee06:	d40b      	bmi.n	801ee20 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801ee08:	4620      	mov	r0, r4
 801ee0a:	f008 f8e5 	bl	8026fd8 <__cxa_guard_acquire>
 801ee0e:	b138      	cbz	r0, 801ee20 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801ee10:	4620      	mov	r0, r4
 801ee12:	f008 f8ed 	bl	8026ff0 <__cxa_guard_release>
 801ee16:	4a05      	ldr	r2, [pc, #20]	@ (801ee2c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801ee18:	4905      	ldr	r1, [pc, #20]	@ (801ee30 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801ee1a:	4806      	ldr	r0, [pc, #24]	@ (801ee34 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ee1c:	f008 f8d5 	bl	8026fca <__aeabi_atexit>
 801ee20:	4b04      	ldr	r3, [pc, #16]	@ (801ee34 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ee22:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801ee24:	bd38      	pop	{r3, r4, r5, pc}
 801ee26:	bf00      	nop
 801ee28:	20013ff8 	.word	0x20013ff8
 801ee2c:	20000000 	.word	0x20000000
 801ee30:	0801a875 	.word	0x0801a875
 801ee34:	20000088 	.word	0x20000088

0801ee38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801ee38:	b538      	push	{r3, r4, r5, lr}
 801ee3a:	4c0b      	ldr	r4, [pc, #44]	@ (801ee68 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801ee3c:	7823      	ldrb	r3, [r4, #0]
 801ee3e:	f3bf 8f5b 	dmb	ish
 801ee42:	07db      	lsls	r3, r3, #31
 801ee44:	4605      	mov	r5, r0
 801ee46:	d40b      	bmi.n	801ee60 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ee48:	4620      	mov	r0, r4
 801ee4a:	f008 f8c5 	bl	8026fd8 <__cxa_guard_acquire>
 801ee4e:	b138      	cbz	r0, 801ee60 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ee50:	4620      	mov	r0, r4
 801ee52:	f008 f8cd 	bl	8026ff0 <__cxa_guard_release>
 801ee56:	4a05      	ldr	r2, [pc, #20]	@ (801ee6c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801ee58:	4905      	ldr	r1, [pc, #20]	@ (801ee70 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801ee5a:	4806      	ldr	r0, [pc, #24]	@ (801ee74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ee5c:	f008 f8b5 	bl	8026fca <__aeabi_atexit>
 801ee60:	4b04      	ldr	r3, [pc, #16]	@ (801ee74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ee62:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801ee66:	bd38      	pop	{r3, r4, r5, pc}
 801ee68:	20013ffc 	.word	0x20013ffc
 801ee6c:	20000000 	.word	0x20000000
 801ee70:	0801a873 	.word	0x0801a873
 801ee74:	2000008c 	.word	0x2000008c

0801ee78 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801ee78:	b570      	push	{r4, r5, r6, lr}
 801ee7a:	4d0d      	ldr	r5, [pc, #52]	@ (801eeb0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801ee7c:	4c0d      	ldr	r4, [pc, #52]	@ (801eeb4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801ee7e:	782b      	ldrb	r3, [r5, #0]
 801ee80:	f3bf 8f5b 	dmb	ish
 801ee84:	f013 0f01 	tst.w	r3, #1
 801ee88:	4606      	mov	r6, r0
 801ee8a:	d10d      	bne.n	801eea8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ee8c:	4628      	mov	r0, r5
 801ee8e:	f008 f8a3 	bl	8026fd8 <__cxa_guard_acquire>
 801ee92:	b148      	cbz	r0, 801eea8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ee94:	4b08      	ldr	r3, [pc, #32]	@ (801eeb8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801ee96:	6023      	str	r3, [r4, #0]
 801ee98:	4628      	mov	r0, r5
 801ee9a:	f008 f8a9 	bl	8026ff0 <__cxa_guard_release>
 801ee9e:	4a07      	ldr	r2, [pc, #28]	@ (801eebc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801eea0:	4907      	ldr	r1, [pc, #28]	@ (801eec0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801eea2:	4620      	mov	r0, r4
 801eea4:	f008 f891 	bl	8026fca <__aeabi_atexit>
 801eea8:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801eeac:	bd70      	pop	{r4, r5, r6, pc}
 801eeae:	bf00      	nop
 801eeb0:	20014000 	.word	0x20014000
 801eeb4:	20014178 	.word	0x20014178
 801eeb8:	0802b5d4 	.word	0x0802b5d4
 801eebc:	20000000 	.word	0x20000000
 801eec0:	0801a871 	.word	0x0801a871

0801eec4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801eec4:	b510      	push	{r4, lr}
 801eec6:	4604      	mov	r4, r0
 801eec8:	f7ff ff96 	bl	801edf8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801eecc:	4620      	mov	r0, r4
 801eece:	f7ff ffb3 	bl	801ee38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801eed2:	4620      	mov	r0, r4
 801eed4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eed8:	f7ff bfce 	b.w	801ee78 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801eedc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801eedc:	b570      	push	{r4, r5, r6, lr}
 801eede:	4d0d      	ldr	r5, [pc, #52]	@ (801ef14 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801eee0:	4c0d      	ldr	r4, [pc, #52]	@ (801ef18 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801eee2:	782b      	ldrb	r3, [r5, #0]
 801eee4:	f3bf 8f5b 	dmb	ish
 801eee8:	f013 0f01 	tst.w	r3, #1
 801eeec:	4606      	mov	r6, r0
 801eeee:	d10d      	bne.n	801ef0c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801eef0:	4628      	mov	r0, r5
 801eef2:	f008 f871 	bl	8026fd8 <__cxa_guard_acquire>
 801eef6:	b148      	cbz	r0, 801ef0c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801eef8:	4b08      	ldr	r3, [pc, #32]	@ (801ef1c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801eefa:	6023      	str	r3, [r4, #0]
 801eefc:	4628      	mov	r0, r5
 801eefe:	f008 f877 	bl	8026ff0 <__cxa_guard_release>
 801ef02:	4a07      	ldr	r2, [pc, #28]	@ (801ef20 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801ef04:	4907      	ldr	r1, [pc, #28]	@ (801ef24 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801ef06:	4620      	mov	r0, r4
 801ef08:	f008 f85f 	bl	8026fca <__aeabi_atexit>
 801ef0c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801ef10:	bd70      	pop	{r4, r5, r6, pc}
 801ef12:	bf00      	nop
 801ef14:	20013ff4 	.word	0x20013ff4
 801ef18:	20014074 	.word	0x20014074
 801ef1c:	0802b5f0 	.word	0x0802b5f0
 801ef20:	20000000 	.word	0x20000000
 801ef24:	0801a86f 	.word	0x0801a86f

0801ef28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801ef28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef2c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801ef30:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801ef34:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801ef38:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801ef3c:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801ef40:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801ef44:	8808      	ldrh	r0, [r1, #0]
 801ef46:	fb05 4c0e 	mla	ip, r5, lr, r4
 801ef4a:	2d00      	cmp	r5, #0
 801ef4c:	eb02 0a0c 	add.w	sl, r2, ip
 801ef50:	f2c0 80b0 	blt.w	801f0b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ef54:	45ab      	cmp	fp, r5
 801ef56:	f340 80ad 	ble.w	801f0b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ef5a:	2c00      	cmp	r4, #0
 801ef5c:	f2c0 80a8 	blt.w	801f0b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ef60:	45a6      	cmp	lr, r4
 801ef62:	f340 80a5 	ble.w	801f0b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ef66:	f812 200c 	ldrb.w	r2, [r2, ip]
 801ef6a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801ef6e:	1c62      	adds	r2, r4, #1
 801ef70:	f100 80a3 	bmi.w	801f0ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ef74:	4596      	cmp	lr, r2
 801ef76:	f340 80a0 	ble.w	801f0ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ef7a:	f1b9 0f00 	cmp.w	r9, #0
 801ef7e:	f000 809c 	beq.w	801f0ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ef82:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ef86:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ef8a:	3501      	adds	r5, #1
 801ef8c:	f100 8099 	bmi.w	801f0c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ef90:	45ab      	cmp	fp, r5
 801ef92:	f340 8096 	ble.w	801f0c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ef96:	2f00      	cmp	r7, #0
 801ef98:	f000 8093 	beq.w	801f0c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ef9c:	2c00      	cmp	r4, #0
 801ef9e:	f2c0 808e 	blt.w	801f0be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801efa2:	45a6      	cmp	lr, r4
 801efa4:	f340 808b 	ble.w	801f0be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801efa8:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801efac:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801efb0:	3401      	adds	r4, #1
 801efb2:	f100 8089 	bmi.w	801f0c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801efb6:	45a6      	cmp	lr, r4
 801efb8:	f340 8086 	ble.w	801f0c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801efbc:	f1b9 0f00 	cmp.w	r9, #0
 801efc0:	f000 8082 	beq.w	801f0c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801efc4:	44d6      	add	lr, sl
 801efc6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801efca:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801efce:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801efd2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801efd6:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801efda:	fb19 fe07 	smulbb	lr, r9, r7
 801efde:	ea44 0808 	orr.w	r8, r4, r8
 801efe2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801efe6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801efea:	f1c7 0210 	rsb	r2, r7, #16
 801efee:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801eff2:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801eff6:	ea44 0c0c 	orr.w	ip, r4, ip
 801effa:	eba2 0209 	sub.w	r2, r2, r9
 801effe:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f002:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f006:	fb04 f40c 	mul.w	r4, r4, ip
 801f00a:	fb02 4808 	mla	r8, r2, r8, r4
 801f00e:	041a      	lsls	r2, r3, #16
 801f010:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f014:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f018:	4313      	orrs	r3, r2
 801f01a:	042a      	lsls	r2, r5, #16
 801f01c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f020:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f024:	fb0e 8303 	mla	r3, lr, r3, r8
 801f028:	432a      	orrs	r2, r5
 801f02a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f02e:	fb07 3202 	mla	r2, r7, r2, r3
 801f032:	0d53      	lsrs	r3, r2, #21
 801f034:	0952      	lsrs	r2, r2, #5
 801f036:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f03a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f03e:	431a      	orrs	r2, r3
 801f040:	b293      	uxth	r3, r2
 801f042:	b2b4      	uxth	r4, r6
 801f044:	1202      	asrs	r2, r0, #8
 801f046:	43f6      	mvns	r6, r6
 801f048:	b2f6      	uxtb	r6, r6
 801f04a:	121d      	asrs	r5, r3, #8
 801f04c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801f050:	fb12 f206 	smulbb	r2, r2, r6
 801f054:	10c7      	asrs	r7, r0, #3
 801f056:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f05a:	00c0      	lsls	r0, r0, #3
 801f05c:	fb05 2504 	mla	r5, r5, r4, r2
 801f060:	b2c0      	uxtb	r0, r0
 801f062:	10da      	asrs	r2, r3, #3
 801f064:	00db      	lsls	r3, r3, #3
 801f066:	b2db      	uxtb	r3, r3
 801f068:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f06c:	fb10 f006 	smulbb	r0, r0, r6
 801f070:	b2ad      	uxth	r5, r5
 801f072:	fb03 0004 	mla	r0, r3, r4, r0
 801f076:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f07a:	fb17 f706 	smulbb	r7, r7, r6
 801f07e:	b280      	uxth	r0, r0
 801f080:	1c6b      	adds	r3, r5, #1
 801f082:	fb02 7204 	mla	r2, r2, r4, r7
 801f086:	b292      	uxth	r2, r2
 801f088:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f08c:	1c43      	adds	r3, r0, #1
 801f08e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f092:	1c50      	adds	r0, r2, #1
 801f094:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f098:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f09c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f0a0:	0952      	lsrs	r2, r2, #5
 801f0a2:	432b      	orrs	r3, r5
 801f0a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f0a8:	4313      	orrs	r3, r2
 801f0aa:	800b      	strh	r3, [r1, #0]
 801f0ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0b0:	4680      	mov	r8, r0
 801f0b2:	e75c      	b.n	801ef6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801f0b4:	4684      	mov	ip, r0
 801f0b6:	4680      	mov	r8, r0
 801f0b8:	e767      	b.n	801ef8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f0ba:	4684      	mov	ip, r0
 801f0bc:	e765      	b.n	801ef8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f0be:	4605      	mov	r5, r0
 801f0c0:	e776      	b.n	801efb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801f0c2:	4603      	mov	r3, r0
 801f0c4:	4605      	mov	r5, r0
 801f0c6:	e782      	b.n	801efce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801f0c8:	4603      	mov	r3, r0
 801f0ca:	e780      	b.n	801efce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801f0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f0cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0d0:	b099      	sub	sp, #100	@ 0x64
 801f0d2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801f0d6:	9215      	str	r2, [sp, #84]	@ 0x54
 801f0d8:	9309      	str	r3, [sp, #36]	@ 0x24
 801f0da:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801f0dc:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801f0e0:	930d      	str	r3, [sp, #52]	@ 0x34
 801f0e2:	910c      	str	r1, [sp, #48]	@ 0x30
 801f0e4:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801f0e8:	9016      	str	r0, [sp, #88]	@ 0x58
 801f0ea:	6850      	ldr	r0, [r2, #4]
 801f0ec:	6812      	ldr	r2, [r2, #0]
 801f0ee:	fb00 1303 	mla	r3, r0, r3, r1
 801f0f2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801f0f6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f0f8:	681b      	ldr	r3, [r3, #0]
 801f0fa:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f0fc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f0fe:	685e      	ldr	r6, [r3, #4]
 801f100:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f102:	43db      	mvns	r3, r3
 801f104:	b2db      	uxtb	r3, r3
 801f106:	3604      	adds	r6, #4
 801f108:	930a      	str	r3, [sp, #40]	@ 0x28
 801f10a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f10c:	2b00      	cmp	r3, #0
 801f10e:	dc03      	bgt.n	801f118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f110:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801f112:	2b00      	cmp	r3, #0
 801f114:	f340 8225 	ble.w	801f562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f118:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f11a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f11e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f122:	1e48      	subs	r0, r1, #1
 801f124:	1e57      	subs	r7, r2, #1
 801f126:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f128:	2b00      	cmp	r3, #0
 801f12a:	f340 80e3 	ble.w	801f2f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801f12e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801f132:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f136:	d406      	bmi.n	801f146 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f138:	4584      	cmp	ip, r0
 801f13a:	da04      	bge.n	801f146 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f13c:	2b00      	cmp	r3, #0
 801f13e:	db02      	blt.n	801f146 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f140:	42bb      	cmp	r3, r7
 801f142:	f2c0 80d8 	blt.w	801f2f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f146:	f11c 0c01 	adds.w	ip, ip, #1
 801f14a:	f100 80c9 	bmi.w	801f2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f14e:	4561      	cmp	r1, ip
 801f150:	f2c0 80c6 	blt.w	801f2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f154:	3301      	adds	r3, #1
 801f156:	f100 80c3 	bmi.w	801f2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f15a:	429a      	cmp	r2, r3
 801f15c:	f2c0 80c0 	blt.w	801f2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f160:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801f164:	4647      	mov	r7, r8
 801f166:	f1bb 0f00 	cmp.w	fp, #0
 801f16a:	f340 80e3 	ble.w	801f334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801f16e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801f170:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f172:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f176:	689b      	ldr	r3, [r3, #8]
 801f178:	ea5f 422a 	movs.w	r2, sl, asr #16
 801f17c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f180:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801f184:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f188:	f100 8121 	bmi.w	801f3ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f18c:	f103 39ff 	add.w	r9, r3, #4294967295
 801f190:	454a      	cmp	r2, r9
 801f192:	f280 811c 	bge.w	801f3ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f196:	f1bc 0f00 	cmp.w	ip, #0
 801f19a:	f2c0 8118 	blt.w	801f3ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f19e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801f1a2:	45cc      	cmp	ip, r9
 801f1a4:	f280 8113 	bge.w	801f3ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f1a8:	b21b      	sxth	r3, r3
 801f1aa:	fb0c 2203 	mla	r2, ip, r3, r2
 801f1ae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f1b0:	eb04 0902 	add.w	r9, r4, r2
 801f1b4:	5ca2      	ldrb	r2, [r4, r2]
 801f1b6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801f1ba:	2800      	cmp	r0, #0
 801f1bc:	f000 80fe 	beq.w	801f3bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f1c0:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f1c4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801f1c8:	9211      	str	r2, [sp, #68]	@ 0x44
 801f1ca:	b151      	cbz	r1, 801f1e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f1cc:	eb09 0203 	add.w	r2, r9, r3
 801f1d0:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f1d4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f1d8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f1da:	7853      	ldrb	r3, [r2, #1]
 801f1dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f1e0:	9312      	str	r3, [sp, #72]	@ 0x48
 801f1e2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f1e4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801f1e6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f1ea:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f1ee:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f1f2:	ea4c 0c03 	orr.w	ip, ip, r3
 801f1f6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f1f8:	041b      	lsls	r3, r3, #16
 801f1fa:	fb10 f201 	smulbb	r2, r0, r1
 801f1fe:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801f202:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f206:	10d2      	asrs	r2, r2, #3
 801f208:	4323      	orrs	r3, r4
 801f20a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801f20e:	4353      	muls	r3, r2
 801f210:	fb09 330c 	mla	r3, r9, ip, r3
 801f214:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f218:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f21c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f220:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f224:	f1c1 0c10 	rsb	ip, r1, #16
 801f228:	ebac 0c00 	sub.w	ip, ip, r0
 801f22c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f230:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f234:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f236:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f238:	0418      	lsls	r0, r3, #16
 801f23a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f23e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f242:	4318      	orrs	r0, r3
 801f244:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f248:	fb02 c200 	mla	r2, r2, r0, ip
 801f24c:	0d53      	lsrs	r3, r2, #21
 801f24e:	0952      	lsrs	r2, r2, #5
 801f250:	8838      	ldrh	r0, [r7, #0]
 801f252:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f256:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f25a:	431a      	orrs	r2, r3
 801f25c:	b292      	uxth	r2, r2
 801f25e:	1201      	asrs	r1, r0, #8
 801f260:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801f264:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801f268:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f26c:	fb11 f104 	smulbb	r1, r1, r4
 801f270:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f274:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f278:	00c0      	lsls	r0, r0, #3
 801f27a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801f27e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801f282:	10d1      	asrs	r1, r2, #3
 801f284:	b2c0      	uxtb	r0, r0
 801f286:	00d2      	lsls	r2, r2, #3
 801f288:	b2d2      	uxtb	r2, r2
 801f28a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f28e:	fb1e fe04 	smulbb	lr, lr, r4
 801f292:	fb10 f004 	smulbb	r0, r0, r4
 801f296:	fa1f fc8c 	uxth.w	ip, ip
 801f29a:	fb01 e103 	mla	r1, r1, r3, lr
 801f29e:	fb02 0303 	mla	r3, r2, r3, r0
 801f2a2:	b29a      	uxth	r2, r3
 801f2a4:	f10c 0301 	add.w	r3, ip, #1
 801f2a8:	b289      	uxth	r1, r1
 801f2aa:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f2ae:	1c53      	adds	r3, r2, #1
 801f2b0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f2b4:	1c4a      	adds	r2, r1, #1
 801f2b6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f2ba:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801f2be:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f2c2:	0949      	lsrs	r1, r1, #5
 801f2c4:	ea43 030c 	orr.w	r3, r3, ip
 801f2c8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f2cc:	430b      	orrs	r3, r1
 801f2ce:	803b      	strh	r3, [r7, #0]
 801f2d0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801f2d2:	449a      	add	sl, r3
 801f2d4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f2d6:	3702      	adds	r7, #2
 801f2d8:	441d      	add	r5, r3
 801f2da:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f2de:	e742      	b.n	801f166 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f2e0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801f2e2:	449a      	add	sl, r3
 801f2e4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f2e6:	441d      	add	r5, r3
 801f2e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f2ea:	3b01      	subs	r3, #1
 801f2ec:	9309      	str	r3, [sp, #36]	@ 0x24
 801f2ee:	f108 0802 	add.w	r8, r8, #2
 801f2f2:	e718      	b.n	801f126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801f2f4:	d023      	beq.n	801f33e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801f2f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f2f8:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801f2fa:	3b01      	subs	r3, #1
 801f2fc:	fb00 a003 	mla	r0, r0, r3, sl
 801f300:	1400      	asrs	r0, r0, #16
 801f302:	f53f af2d 	bmi.w	801f160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f306:	3901      	subs	r1, #1
 801f308:	4288      	cmp	r0, r1
 801f30a:	f6bf af29 	bge.w	801f160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f30e:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801f310:	fb01 5303 	mla	r3, r1, r3, r5
 801f314:	141b      	asrs	r3, r3, #16
 801f316:	f53f af23 	bmi.w	801f160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f31a:	3a01      	subs	r2, #1
 801f31c:	4293      	cmp	r3, r2
 801f31e:	f6bf af1f 	bge.w	801f160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f322:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801f326:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801f32a:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801f32e:	f1be 0f00 	cmp.w	lr, #0
 801f332:	dc6c      	bgt.n	801f40e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801f334:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f336:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f33a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801f33e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f340:	2b00      	cmp	r3, #0
 801f342:	f340 810e 	ble.w	801f562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f346:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f34a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f34e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f352:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f354:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f358:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f35c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f360:	eef0 6a62 	vmov.f32	s13, s5
 801f364:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f368:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f36c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f370:	ee16 aa90 	vmov	sl, s13
 801f374:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f378:	eef0 6a43 	vmov.f32	s13, s6
 801f37c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f380:	ee12 2a90 	vmov	r2, s5
 801f384:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f388:	fb92 f3f3 	sdiv	r3, r2, r3
 801f38c:	ee13 2a10 	vmov	r2, s6
 801f390:	9325      	str	r3, [sp, #148]	@ 0x94
 801f392:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f394:	fb92 f3f3 	sdiv	r3, r2, r3
 801f398:	9326      	str	r3, [sp, #152]	@ 0x98
 801f39a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f39c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801f39e:	3b01      	subs	r3, #1
 801f3a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f3a4:	930c      	str	r3, [sp, #48]	@ 0x30
 801f3a6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f3a8:	bf08      	it	eq
 801f3aa:	4613      	moveq	r3, r2
 801f3ac:	ee16 5a90 	vmov	r5, s13
 801f3b0:	9309      	str	r3, [sp, #36]	@ 0x24
 801f3b2:	eeb0 3a67 	vmov.f32	s6, s15
 801f3b6:	eef0 2a47 	vmov.f32	s5, s14
 801f3ba:	e6a6      	b.n	801f10a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f3bc:	2900      	cmp	r1, #0
 801f3be:	f43f af10 	beq.w	801f1e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f3c2:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f3c6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f3ca:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f3cc:	e709      	b.n	801f1e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f3ce:	f112 0901 	adds.w	r9, r2, #1
 801f3d2:	f53f af7d 	bmi.w	801f2d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f3d6:	454b      	cmp	r3, r9
 801f3d8:	f6ff af7a 	blt.w	801f2d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f3dc:	f11c 0901 	adds.w	r9, ip, #1
 801f3e0:	f53f af76 	bmi.w	801f2d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f3e4:	45ce      	cmp	lr, r9
 801f3e6:	f6ff af73 	blt.w	801f2d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f3ea:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f3ec:	9202      	str	r2, [sp, #8]
 801f3ee:	b21b      	sxth	r3, r3
 801f3f0:	fa0f f28e 	sxth.w	r2, lr
 801f3f4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801f3f8:	e9cd c003 	strd	ip, r0, [sp, #12]
 801f3fc:	9201      	str	r2, [sp, #4]
 801f3fe:	9300      	str	r3, [sp, #0]
 801f400:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f402:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801f404:	4633      	mov	r3, r6
 801f406:	4639      	mov	r1, r7
 801f408:	f7ff fd8e 	bl	801ef28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801f40c:	e760      	b.n	801f2d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f40e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f410:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f412:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f416:	ea4f 422a 	mov.w	r2, sl, asr #16
 801f41a:	1429      	asrs	r1, r5, #16
 801f41c:	fb03 2101 	mla	r1, r3, r1, r2
 801f420:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f422:	440a      	add	r2, r1
 801f424:	5c61      	ldrb	r1, [r4, r1]
 801f426:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801f42a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f42e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801f432:	f1bc 0f00 	cmp.w	ip, #0
 801f436:	f000 808c 	beq.w	801f552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801f43a:	7857      	ldrb	r7, [r2, #1]
 801f43c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801f440:	9413      	str	r4, [sp, #76]	@ 0x4c
 801f442:	b140      	cbz	r0, 801f456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f444:	18d7      	adds	r7, r2, r3
 801f446:	5cd3      	ldrb	r3, [r2, r3]
 801f448:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f44c:	9310      	str	r3, [sp, #64]	@ 0x40
 801f44e:	787b      	ldrb	r3, [r7, #1]
 801f450:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f454:	9314      	str	r3, [sp, #80]	@ 0x50
 801f456:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f458:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f45a:	fb1c f200 	smulbb	r2, ip, r0
 801f45e:	041f      	lsls	r7, r3, #16
 801f460:	10d2      	asrs	r2, r2, #3
 801f462:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f466:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801f46a:	431f      	orrs	r7, r3
 801f46c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801f470:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f472:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f474:	041b      	lsls	r3, r3, #16
 801f476:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801f47a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f47e:	ea43 030b 	orr.w	r3, r3, fp
 801f482:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801f484:	4353      	muls	r3, r2
 801f486:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f48a:	fb04 3707 	mla	r7, r4, r7, r3
 801f48e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f492:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801f496:	ea43 0b01 	orr.w	fp, r3, r1
 801f49a:	f1c0 0110 	rsb	r1, r0, #16
 801f49e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f4a0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f4a2:	eba1 0c0c 	sub.w	ip, r1, ip
 801f4a6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f4aa:	fb0c 770b 	mla	r7, ip, fp, r7
 801f4ae:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f4b2:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801f4b6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f4ba:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f4be:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f4c2:	fb02 770c 	mla	r7, r2, ip, r7
 801f4c6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801f4c8:	0d79      	lsrs	r1, r7, #21
 801f4ca:	097f      	lsrs	r7, r7, #5
 801f4cc:	8812      	ldrh	r2, [r2, #0]
 801f4ce:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f4d2:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801f4d6:	430f      	orrs	r7, r1
 801f4d8:	b2bb      	uxth	r3, r7
 801f4da:	1211      	asrs	r1, r2, #8
 801f4dc:	1218      	asrs	r0, r3, #8
 801f4de:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f4e2:	fb11 f104 	smulbb	r1, r1, r4
 801f4e6:	10d7      	asrs	r7, r2, #3
 801f4e8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f4ec:	00d2      	lsls	r2, r2, #3
 801f4ee:	fb00 1009 	mla	r0, r0, r9, r1
 801f4f2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f4f6:	10d9      	asrs	r1, r3, #3
 801f4f8:	b2d2      	uxtb	r2, r2
 801f4fa:	00db      	lsls	r3, r3, #3
 801f4fc:	fb17 f704 	smulbb	r7, r7, r4
 801f500:	fb12 f204 	smulbb	r2, r2, r4
 801f504:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f508:	b2db      	uxtb	r3, r3
 801f50a:	b280      	uxth	r0, r0
 801f50c:	fb01 7109 	mla	r1, r1, r9, r7
 801f510:	fb03 2309 	mla	r3, r3, r9, r2
 801f514:	b29b      	uxth	r3, r3
 801f516:	b289      	uxth	r1, r1
 801f518:	1c42      	adds	r2, r0, #1
 801f51a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f51e:	1c4f      	adds	r7, r1, #1
 801f520:	1c5a      	adds	r2, r3, #1
 801f522:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f526:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f52a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801f52e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f532:	0949      	lsrs	r1, r1, #5
 801f534:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f536:	4310      	orrs	r0, r2
 801f538:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f53c:	4308      	orrs	r0, r1
 801f53e:	f823 0b02 	strh.w	r0, [r3], #2
 801f542:	930e      	str	r3, [sp, #56]	@ 0x38
 801f544:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801f546:	449a      	add	sl, r3
 801f548:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f54a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f54e:	441d      	add	r5, r3
 801f550:	e6ed      	b.n	801f32e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801f552:	2800      	cmp	r0, #0
 801f554:	f43f af7f 	beq.w	801f456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f558:	5cd3      	ldrb	r3, [r2, r3]
 801f55a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f55e:	9310      	str	r3, [sp, #64]	@ 0x40
 801f560:	e779      	b.n	801f456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f562:	b019      	add	sp, #100	@ 0x64
 801f564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f568:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f56c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801f570:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801f574:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801f578:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801f57c:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801f580:	8808      	ldrh	r0, [r1, #0]
 801f582:	fb08 470e 	mla	r7, r8, lr, r4
 801f586:	f1b8 0f00 	cmp.w	r8, #0
 801f58a:	eb02 0907 	add.w	r9, r2, r7
 801f58e:	db67      	blt.n	801f660 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f590:	45c2      	cmp	sl, r8
 801f592:	dd65      	ble.n	801f660 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f594:	2c00      	cmp	r4, #0
 801f596:	db61      	blt.n	801f65c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f598:	45a6      	cmp	lr, r4
 801f59a:	dd5f      	ble.n	801f65c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f59c:	5dd2      	ldrb	r2, [r2, r7]
 801f59e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f5a2:	1c62      	adds	r2, r4, #1
 801f5a4:	d45f      	bmi.n	801f666 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f5a6:	4596      	cmp	lr, r2
 801f5a8:	dd5d      	ble.n	801f666 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f5aa:	2d00      	cmp	r5, #0
 801f5ac:	d05b      	beq.n	801f666 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f5ae:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f5b2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f5b6:	f118 0801 	adds.w	r8, r8, #1
 801f5ba:	d458      	bmi.n	801f66e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f5bc:	45c2      	cmp	sl, r8
 801f5be:	dd56      	ble.n	801f66e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f5c0:	2e00      	cmp	r6, #0
 801f5c2:	d054      	beq.n	801f66e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f5c4:	2c00      	cmp	r4, #0
 801f5c6:	db50      	blt.n	801f66a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f5c8:	45a6      	cmp	lr, r4
 801f5ca:	dd4e      	ble.n	801f66a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f5cc:	f819 200e 	ldrb.w	r2, [r9, lr]
 801f5d0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f5d4:	3401      	adds	r4, #1
 801f5d6:	d407      	bmi.n	801f5e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f5d8:	45a6      	cmp	lr, r4
 801f5da:	dd05      	ble.n	801f5e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f5dc:	b125      	cbz	r5, 801f5e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f5de:	44ce      	add	lr, r9
 801f5e0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f5e4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f5e8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f5ec:	fb15 f406 	smulbb	r4, r5, r6
 801f5f0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f5f4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f5f8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f5fc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f600:	ea43 0c0c 	orr.w	ip, r3, ip
 801f604:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801f608:	f1c6 0310 	rsb	r3, r6, #16
 801f60c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801f610:	1b5b      	subs	r3, r3, r5
 801f612:	ea4e 0707 	orr.w	r7, lr, r7
 801f616:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f61a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f61e:	437d      	muls	r5, r7
 801f620:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f624:	0403      	lsls	r3, r0, #16
 801f626:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f62a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f62e:	4318      	orrs	r0, r3
 801f630:	0413      	lsls	r3, r2, #16
 801f632:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f636:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f63a:	4313      	orrs	r3, r2
 801f63c:	fb04 c000 	mla	r0, r4, r0, ip
 801f640:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f644:	fb06 0003 	mla	r0, r6, r3, r0
 801f648:	0d43      	lsrs	r3, r0, #21
 801f64a:	0940      	lsrs	r0, r0, #5
 801f64c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f650:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f654:	4318      	orrs	r0, r3
 801f656:	8008      	strh	r0, [r1, #0]
 801f658:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f65c:	4684      	mov	ip, r0
 801f65e:	e7a0      	b.n	801f5a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801f660:	4607      	mov	r7, r0
 801f662:	4684      	mov	ip, r0
 801f664:	e7a7      	b.n	801f5b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f666:	4607      	mov	r7, r0
 801f668:	e7a5      	b.n	801f5b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f66a:	4602      	mov	r2, r0
 801f66c:	e7b2      	b.n	801f5d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801f66e:	4602      	mov	r2, r0
 801f670:	e7ba      	b.n	801f5e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801f672 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f672:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f676:	b093      	sub	sp, #76	@ 0x4c
 801f678:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801f67c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801f67e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f680:	9108      	str	r1, [sp, #32]
 801f682:	9306      	str	r3, [sp, #24]
 801f684:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801f688:	9010      	str	r0, [sp, #64]	@ 0x40
 801f68a:	6850      	ldr	r0, [r2, #4]
 801f68c:	6812      	ldr	r2, [r2, #0]
 801f68e:	fb00 1303 	mla	r3, r0, r3, r1
 801f692:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f696:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f698:	681b      	ldr	r3, [r3, #0]
 801f69a:	9307      	str	r3, [sp, #28]
 801f69c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f69e:	685f      	ldr	r7, [r3, #4]
 801f6a0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f6a4:	3704      	adds	r7, #4
 801f6a6:	9b08      	ldr	r3, [sp, #32]
 801f6a8:	2b00      	cmp	r3, #0
 801f6aa:	dc03      	bgt.n	801f6b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f6ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f6ae:	2b00      	cmp	r3, #0
 801f6b0:	f340 81b2 	ble.w	801fa18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f6b4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f6b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f6ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f6be:	1e48      	subs	r0, r1, #1
 801f6c0:	f102 3cff 	add.w	ip, r2, #4294967295
 801f6c4:	9b06      	ldr	r3, [sp, #24]
 801f6c6:	2b00      	cmp	r3, #0
 801f6c8:	f340 80a9 	ble.w	801f81e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f6cc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f6d0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f6d4:	d406      	bmi.n	801f6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f6d6:	4586      	cmp	lr, r0
 801f6d8:	da04      	bge.n	801f6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f6da:	2b00      	cmp	r3, #0
 801f6dc:	db02      	blt.n	801f6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f6de:	4563      	cmp	r3, ip
 801f6e0:	f2c0 809e 	blt.w	801f820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f6e4:	f11e 0e01 	adds.w	lr, lr, #1
 801f6e8:	f100 808f 	bmi.w	801f80a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f6ec:	4571      	cmp	r1, lr
 801f6ee:	f2c0 808c 	blt.w	801f80a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f6f2:	3301      	adds	r3, #1
 801f6f4:	f100 8089 	bmi.w	801f80a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f6f8:	429a      	cmp	r2, r3
 801f6fa:	f2c0 8086 	blt.w	801f80a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f6fe:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f702:	46c8      	mov	r8, r9
 801f704:	f1bb 0f00 	cmp.w	fp, #0
 801f708:	f340 80a6 	ble.w	801f858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f70c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801f70e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f710:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f714:	689b      	ldr	r3, [r3, #8]
 801f716:	1422      	asrs	r2, r4, #16
 801f718:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f71c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f720:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f724:	f100 80e3 	bmi.w	801f8ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f728:	f103 3aff 	add.w	sl, r3, #4294967295
 801f72c:	4552      	cmp	r2, sl
 801f72e:	f280 80de 	bge.w	801f8ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f732:	f1bc 0f00 	cmp.w	ip, #0
 801f736:	f2c0 80da 	blt.w	801f8ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f73a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f73e:	45d4      	cmp	ip, sl
 801f740:	f280 80d5 	bge.w	801f8ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f744:	b21b      	sxth	r3, r3
 801f746:	fb0c 2203 	mla	r2, ip, r3, r2
 801f74a:	9d07      	ldr	r5, [sp, #28]
 801f74c:	eb05 0a02 	add.w	sl, r5, r2
 801f750:	5caa      	ldrb	r2, [r5, r2]
 801f752:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f756:	2800      	cmp	r0, #0
 801f758:	f000 80c0 	beq.w	801f8dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f75c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f760:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f764:	920b      	str	r2, [sp, #44]	@ 0x2c
 801f766:	b151      	cbz	r1, 801f77e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f768:	eb0a 0203 	add.w	r2, sl, r3
 801f76c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f770:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f774:	9309      	str	r3, [sp, #36]	@ 0x24
 801f776:	7853      	ldrb	r3, [r2, #1]
 801f778:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f77c:	930c      	str	r3, [sp, #48]	@ 0x30
 801f77e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f780:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f782:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f786:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f78a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f78e:	ea4c 0c03 	orr.w	ip, ip, r3
 801f792:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f794:	041b      	lsls	r3, r3, #16
 801f796:	fb10 f201 	smulbb	r2, r0, r1
 801f79a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f79e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f7a2:	10d2      	asrs	r2, r2, #3
 801f7a4:	432b      	orrs	r3, r5
 801f7a6:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f7aa:	4353      	muls	r3, r2
 801f7ac:	fb0a 330c 	mla	r3, sl, ip, r3
 801f7b0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f7b4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f7b8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f7bc:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f7c0:	f1c1 0c10 	rsb	ip, r1, #16
 801f7c4:	ebac 0c00 	sub.w	ip, ip, r0
 801f7c8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f7cc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f7d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f7d2:	0418      	lsls	r0, r3, #16
 801f7d4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f7d8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f7dc:	4318      	orrs	r0, r3
 801f7de:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f7e2:	fb02 c200 	mla	r2, r2, r0, ip
 801f7e6:	0d53      	lsrs	r3, r2, #21
 801f7e8:	0952      	lsrs	r2, r2, #5
 801f7ea:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f7ee:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f7f2:	431a      	orrs	r2, r3
 801f7f4:	f8a8 2000 	strh.w	r2, [r8]
 801f7f8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f7fa:	441c      	add	r4, r3
 801f7fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f7fe:	f108 0802 	add.w	r8, r8, #2
 801f802:	441e      	add	r6, r3
 801f804:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f808:	e77c      	b.n	801f704 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f80a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f80c:	441c      	add	r4, r3
 801f80e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f810:	441e      	add	r6, r3
 801f812:	9b06      	ldr	r3, [sp, #24]
 801f814:	3b01      	subs	r3, #1
 801f816:	9306      	str	r3, [sp, #24]
 801f818:	f109 0902 	add.w	r9, r9, #2
 801f81c:	e752      	b.n	801f6c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f81e:	d020      	beq.n	801f862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f820:	9b06      	ldr	r3, [sp, #24]
 801f822:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f824:	3b01      	subs	r3, #1
 801f826:	fb00 4003 	mla	r0, r0, r3, r4
 801f82a:	1400      	asrs	r0, r0, #16
 801f82c:	f53f af67 	bmi.w	801f6fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f830:	3901      	subs	r1, #1
 801f832:	4288      	cmp	r0, r1
 801f834:	f6bf af63 	bge.w	801f6fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f838:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801f83a:	fb01 6303 	mla	r3, r1, r3, r6
 801f83e:	141b      	asrs	r3, r3, #16
 801f840:	f53f af5d 	bmi.w	801f6fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f844:	3a01      	subs	r2, #1
 801f846:	4293      	cmp	r3, r2
 801f848:	f6bf af59 	bge.w	801f6fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f84c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f850:	46ca      	mov	sl, r9
 801f852:	f1b8 0f00 	cmp.w	r8, #0
 801f856:	dc67      	bgt.n	801f928 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f858:	9b06      	ldr	r3, [sp, #24]
 801f85a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f85e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f862:	9b08      	ldr	r3, [sp, #32]
 801f864:	2b00      	cmp	r3, #0
 801f866:	f340 80d7 	ble.w	801fa18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f86a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f86e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f872:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f876:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f878:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f87c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f880:	eeb0 6a62 	vmov.f32	s12, s5
 801f884:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f888:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f88c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f890:	ee16 4a10 	vmov	r4, s12
 801f894:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f898:	eeb0 6a43 	vmov.f32	s12, s6
 801f89c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f8a0:	ee12 2a90 	vmov	r2, s5
 801f8a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f8a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f8ac:	ee13 2a10 	vmov	r2, s6
 801f8b0:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f8b2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f8b4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f8b8:	9320      	str	r3, [sp, #128]	@ 0x80
 801f8ba:	9b08      	ldr	r3, [sp, #32]
 801f8bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f8be:	3b01      	subs	r3, #1
 801f8c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f8c4:	9308      	str	r3, [sp, #32]
 801f8c6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f8c8:	bf08      	it	eq
 801f8ca:	4613      	moveq	r3, r2
 801f8cc:	ee16 6a10 	vmov	r6, s12
 801f8d0:	9306      	str	r3, [sp, #24]
 801f8d2:	eeb0 3a67 	vmov.f32	s6, s15
 801f8d6:	eef0 2a47 	vmov.f32	s5, s14
 801f8da:	e6e4      	b.n	801f6a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f8dc:	2900      	cmp	r1, #0
 801f8de:	f43f af4e 	beq.w	801f77e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f8e2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f8e6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f8ea:	9309      	str	r3, [sp, #36]	@ 0x24
 801f8ec:	e747      	b.n	801f77e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f8ee:	f112 0a01 	adds.w	sl, r2, #1
 801f8f2:	d481      	bmi.n	801f7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f8f4:	4553      	cmp	r3, sl
 801f8f6:	f6ff af7f 	blt.w	801f7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f8fa:	f11c 0a01 	adds.w	sl, ip, #1
 801f8fe:	f53f af7b 	bmi.w	801f7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f902:	45d6      	cmp	lr, sl
 801f904:	f6ff af78 	blt.w	801f7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f908:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f90c:	b21b      	sxth	r3, r3
 801f90e:	fa0f f28e 	sxth.w	r2, lr
 801f912:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f916:	9201      	str	r2, [sp, #4]
 801f918:	9300      	str	r3, [sp, #0]
 801f91a:	9a07      	ldr	r2, [sp, #28]
 801f91c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801f91e:	463b      	mov	r3, r7
 801f920:	4641      	mov	r1, r8
 801f922:	f7ff fe21 	bl	801f568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f926:	e767      	b.n	801f7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f928:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f92a:	9d07      	ldr	r5, [sp, #28]
 801f92c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f930:	1422      	asrs	r2, r4, #16
 801f932:	1431      	asrs	r1, r6, #16
 801f934:	fb03 2101 	mla	r1, r3, r1, r2
 801f938:	9a07      	ldr	r2, [sp, #28]
 801f93a:	440a      	add	r2, r1
 801f93c:	5c69      	ldrb	r1, [r5, r1]
 801f93e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f942:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f946:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f94a:	f1be 0f00 	cmp.w	lr, #0
 801f94e:	d05c      	beq.n	801fa0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f950:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f954:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f958:	950d      	str	r5, [sp, #52]	@ 0x34
 801f95a:	b150      	cbz	r0, 801f972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f95c:	eb02 0c03 	add.w	ip, r2, r3
 801f960:	5cd3      	ldrb	r3, [r2, r3]
 801f962:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f966:	930a      	str	r3, [sp, #40]	@ 0x28
 801f968:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f96c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f970:	930e      	str	r3, [sp, #56]	@ 0x38
 801f972:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f974:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f976:	fb1e f200 	smulbb	r2, lr, r0
 801f97a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f97e:	10d2      	asrs	r2, r2, #3
 801f980:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f984:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f988:	ea4c 0c03 	orr.w	ip, ip, r3
 801f98c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f990:	9311      	str	r3, [sp, #68]	@ 0x44
 801f992:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f994:	041b      	lsls	r3, r3, #16
 801f996:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801f99a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f99e:	ea43 030b 	orr.w	r3, r3, fp
 801f9a2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f9a4:	4353      	muls	r3, r2
 801f9a6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f9aa:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f9ae:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f9b2:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801f9b6:	ea43 0b01 	orr.w	fp, r3, r1
 801f9ba:	f1c0 0110 	rsb	r1, r0, #16
 801f9be:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f9c0:	eba1 0e0e 	sub.w	lr, r1, lr
 801f9c4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f9c8:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f9cc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f9d0:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801f9d4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f9d8:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f9dc:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f9e0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f9e4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f9e8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f9ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f9f0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f9f4:	ea43 0c0c 	orr.w	ip, r3, ip
 801f9f8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f9fa:	f82a cb02 	strh.w	ip, [sl], #2
 801f9fe:	441c      	add	r4, r3
 801fa00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa02:	f108 38ff 	add.w	r8, r8, #4294967295
 801fa06:	441e      	add	r6, r3
 801fa08:	e723      	b.n	801f852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801fa0a:	2800      	cmp	r0, #0
 801fa0c:	d0b1      	beq.n	801f972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801fa0e:	5cd3      	ldrb	r3, [r2, r3]
 801fa10:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801fa14:	930a      	str	r3, [sp, #40]	@ 0x28
 801fa16:	e7ac      	b.n	801f972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801fa18:	b013      	add	sp, #76	@ 0x4c
 801fa1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fa1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801fa1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa22:	880d      	ldrh	r5, [r1, #0]
 801fa24:	b087      	sub	sp, #28
 801fa26:	10ef      	asrs	r7, r5, #3
 801fa28:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801fa2c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801fa30:	00ed      	lsls	r5, r5, #3
 801fa32:	9701      	str	r7, [sp, #4]
 801fa34:	b2ed      	uxtb	r5, r5
 801fa36:	9502      	str	r5, [sp, #8]
 801fa38:	9d01      	ldr	r5, [sp, #4]
 801fa3a:	9103      	str	r1, [sp, #12]
 801fa3c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801fa40:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801fa44:	9902      	ldr	r1, [sp, #8]
 801fa46:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801fa4a:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801fa4e:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801fa52:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801fa56:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801fa5a:	022d      	lsls	r5, r5, #8
 801fa5c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801fa60:	fb06 0709 	mla	r7, r6, r9, r0
 801fa64:	430d      	orrs	r5, r1
 801fa66:	2e00      	cmp	r6, #0
 801fa68:	eb02 0c07 	add.w	ip, r2, r7
 801fa6c:	9505      	str	r5, [sp, #20]
 801fa6e:	f2c0 80b6 	blt.w	801fbde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801fa72:	45b3      	cmp	fp, r6
 801fa74:	f340 80b3 	ble.w	801fbde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801fa78:	2800      	cmp	r0, #0
 801fa7a:	f2c0 80ae 	blt.w	801fbda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801fa7e:	4581      	cmp	r9, r0
 801fa80:	f340 80ab 	ble.w	801fbda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801fa84:	5dd7      	ldrb	r7, [r2, r7]
 801fa86:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fa8a:	441f      	add	r7, r3
 801fa8c:	1c42      	adds	r2, r0, #1
 801fa8e:	f100 80a9 	bmi.w	801fbe4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801fa92:	4591      	cmp	r9, r2
 801fa94:	f340 80a6 	ble.w	801fbe4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801fa98:	2c00      	cmp	r4, #0
 801fa9a:	f000 80a3 	beq.w	801fbe4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801fa9e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801faa2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801faa6:	441d      	add	r5, r3
 801faa8:	3601      	adds	r6, #1
 801faaa:	f100 809f 	bmi.w	801fbec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801faae:	45b3      	cmp	fp, r6
 801fab0:	f340 809c 	ble.w	801fbec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801fab4:	f1be 0f00 	cmp.w	lr, #0
 801fab8:	f000 8098 	beq.w	801fbec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801fabc:	2800      	cmp	r0, #0
 801fabe:	f2c0 8093 	blt.w	801fbe8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801fac2:	4581      	cmp	r9, r0
 801fac4:	f340 8090 	ble.w	801fbe8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801fac8:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801facc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fad0:	441e      	add	r6, r3
 801fad2:	3001      	adds	r0, #1
 801fad4:	f100 808d 	bmi.w	801fbf2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801fad8:	4581      	cmp	r9, r0
 801fada:	f340 808a 	ble.w	801fbf2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801fade:	2c00      	cmp	r4, #0
 801fae0:	f000 8087 	beq.w	801fbf2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801fae4:	44e1      	add	r9, ip
 801fae6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801faea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801faee:	4413      	add	r3, r2
 801faf0:	b2a4      	uxth	r4, r4
 801faf2:	fa1f fe8e 	uxth.w	lr, lr
 801faf6:	fb04 fb0e 	mul.w	fp, r4, lr
 801fafa:	0124      	lsls	r4, r4, #4
 801fafc:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801fb00:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801fb04:	eba4 040b 	sub.w	r4, r4, fp
 801fb08:	fa1f f08e 	uxth.w	r0, lr
 801fb0c:	b2a2      	uxth	r2, r4
 801fb0e:	78ac      	ldrb	r4, [r5, #2]
 801fb10:	f897 c002 	ldrb.w	ip, [r7, #2]
 801fb14:	9901      	ldr	r1, [sp, #4]
 801fb16:	eba9 0900 	sub.w	r9, r9, r0
 801fb1a:	fa1f f989 	uxth.w	r9, r9
 801fb1e:	4354      	muls	r4, r2
 801fb20:	fb09 440c 	mla	r4, r9, ip, r4
 801fb24:	f896 c002 	ldrb.w	ip, [r6, #2]
 801fb28:	fb00 440c 	mla	r4, r0, ip, r4
 801fb2c:	f893 c002 	ldrb.w	ip, [r3, #2]
 801fb30:	fa1f fe88 	uxth.w	lr, r8
 801fb34:	ea6f 0808 	mvn.w	r8, r8
 801fb38:	fa5f f888 	uxtb.w	r8, r8
 801fb3c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801fb40:	fb1a fa08 	smulbb	sl, sl, r8
 801fb44:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801fb48:	fb0c ac0e 	mla	ip, ip, lr, sl
 801fb4c:	f895 a001 	ldrb.w	sl, [r5, #1]
 801fb50:	787c      	ldrb	r4, [r7, #1]
 801fb52:	782d      	ldrb	r5, [r5, #0]
 801fb54:	783f      	ldrb	r7, [r7, #0]
 801fb56:	fb02 fa0a 	mul.w	sl, r2, sl
 801fb5a:	fb09 aa04 	mla	sl, r9, r4, sl
 801fb5e:	7874      	ldrb	r4, [r6, #1]
 801fb60:	436a      	muls	r2, r5
 801fb62:	7835      	ldrb	r5, [r6, #0]
 801fb64:	fb00 aa04 	mla	sl, r0, r4, sl
 801fb68:	fb09 2207 	mla	r2, r9, r7, r2
 801fb6c:	785c      	ldrb	r4, [r3, #1]
 801fb6e:	781b      	ldrb	r3, [r3, #0]
 801fb70:	fb00 2005 	mla	r0, r0, r5, r2
 801fb74:	fb0b a404 	mla	r4, fp, r4, sl
 801fb78:	fb0b 0b03 	mla	fp, fp, r3, r0
 801fb7c:	9b02      	ldr	r3, [sp, #8]
 801fb7e:	fb11 fa08 	smulbb	sl, r1, r8
 801fb82:	fa1f fc8c 	uxth.w	ip, ip
 801fb86:	fb13 f808 	smulbb	r8, r3, r8
 801fb8a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801fb8e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801fb92:	fb04 a40e 	mla	r4, r4, lr, sl
 801fb96:	f10c 0301 	add.w	r3, ip, #1
 801fb9a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801fb9e:	fa1f fe8e 	uxth.w	lr, lr
 801fba2:	b2a4      	uxth	r4, r4
 801fba4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fba8:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801fbac:	f104 0a01 	add.w	sl, r4, #1
 801fbb0:	f10e 0c01 	add.w	ip, lr, #1
 801fbb4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fbb8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801fbbc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fbc0:	0964      	lsrs	r4, r4, #5
 801fbc2:	ea4c 0c03 	orr.w	ip, ip, r3
 801fbc6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801fbca:	9b03      	ldr	r3, [sp, #12]
 801fbcc:	ea4c 0c04 	orr.w	ip, ip, r4
 801fbd0:	f8a3 c000 	strh.w	ip, [r3]
 801fbd4:	b007      	add	sp, #28
 801fbd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fbda:	af05      	add	r7, sp, #20
 801fbdc:	e756      	b.n	801fa8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801fbde:	ad05      	add	r5, sp, #20
 801fbe0:	462f      	mov	r7, r5
 801fbe2:	e761      	b.n	801faa8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801fbe4:	ad05      	add	r5, sp, #20
 801fbe6:	e75f      	b.n	801faa8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801fbe8:	ae05      	add	r6, sp, #20
 801fbea:	e772      	b.n	801fad2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801fbec:	ab05      	add	r3, sp, #20
 801fbee:	461e      	mov	r6, r3
 801fbf0:	e77e      	b.n	801faf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801fbf2:	ab05      	add	r3, sp, #20
 801fbf4:	e77c      	b.n	801faf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801fbf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fbf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fbfa:	b095      	sub	sp, #84	@ 0x54
 801fbfc:	9212      	str	r2, [sp, #72]	@ 0x48
 801fbfe:	9309      	str	r3, [sp, #36]	@ 0x24
 801fc00:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801fc02:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801fc06:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fc08:	910e      	str	r1, [sp, #56]	@ 0x38
 801fc0a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801fc0e:	9013      	str	r0, [sp, #76]	@ 0x4c
 801fc10:	6850      	ldr	r0, [r2, #4]
 801fc12:	6812      	ldr	r2, [r2, #0]
 801fc14:	fb00 1303 	mla	r3, r0, r3, r1
 801fc18:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fc1c:	930a      	str	r3, [sp, #40]	@ 0x28
 801fc1e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fc20:	681b      	ldr	r3, [r3, #0]
 801fc22:	930d      	str	r3, [sp, #52]	@ 0x34
 801fc24:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fc26:	685c      	ldr	r4, [r3, #4]
 801fc28:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801fc2a:	43db      	mvns	r3, r3
 801fc2c:	b2db      	uxtb	r3, r3
 801fc2e:	3404      	adds	r4, #4
 801fc30:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fc32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fc34:	2b00      	cmp	r3, #0
 801fc36:	dc03      	bgt.n	801fc40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fc38:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801fc3a:	2b00      	cmp	r3, #0
 801fc3c:	f340 8255 	ble.w	80200ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fc40:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fc42:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fc46:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fc4a:	1e48      	subs	r0, r1, #1
 801fc4c:	1e55      	subs	r5, r2, #1
 801fc4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc50:	2b00      	cmp	r3, #0
 801fc52:	f340 80f9 	ble.w	801fe48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801fc56:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801fc58:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc5a:	1436      	asrs	r6, r6, #16
 801fc5c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801fc60:	d406      	bmi.n	801fc70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fc62:	4286      	cmp	r6, r0
 801fc64:	da04      	bge.n	801fc70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fc66:	2b00      	cmp	r3, #0
 801fc68:	db02      	blt.n	801fc70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fc6a:	42ab      	cmp	r3, r5
 801fc6c:	f2c0 80ed 	blt.w	801fe4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801fc70:	3601      	adds	r6, #1
 801fc72:	f100 80da 	bmi.w	801fe2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fc76:	42b1      	cmp	r1, r6
 801fc78:	f2c0 80d7 	blt.w	801fe2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fc7c:	3301      	adds	r3, #1
 801fc7e:	f100 80d4 	bmi.w	801fe2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fc82:	429a      	cmp	r2, r3
 801fc84:	f2c0 80d1 	blt.w	801fe2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fc88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc8a:	9311      	str	r3, [sp, #68]	@ 0x44
 801fc8c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fc8e:	930c      	str	r3, [sp, #48]	@ 0x30
 801fc90:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801fc92:	2b00      	cmp	r3, #0
 801fc94:	f340 80fa 	ble.w	801fe8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801fc98:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801fc9a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc9c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801fc9e:	68c6      	ldr	r6, [r0, #12]
 801fca0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801fca2:	141d      	asrs	r5, r3, #16
 801fca4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801fca8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fcaa:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801fcac:	1400      	asrs	r0, r0, #16
 801fcae:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fcb2:	6892      	ldr	r2, [r2, #8]
 801fcb4:	f100 813e 	bmi.w	801ff34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fcb8:	1e57      	subs	r7, r2, #1
 801fcba:	42b8      	cmp	r0, r7
 801fcbc:	f280 813a 	bge.w	801ff34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fcc0:	2d00      	cmp	r5, #0
 801fcc2:	f2c0 8137 	blt.w	801ff34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fcc6:	1e77      	subs	r7, r6, #1
 801fcc8:	42bd      	cmp	r5, r7
 801fcca:	f280 8133 	bge.w	801ff34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fcce:	b212      	sxth	r2, r2
 801fcd0:	fb05 0002 	mla	r0, r5, r2, r0
 801fcd4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fcd6:	f815 a000 	ldrb.w	sl, [r5, r0]
 801fcda:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801fcde:	182e      	adds	r6, r5, r0
 801fce0:	eb04 050a 	add.w	r5, r4, sl
 801fce4:	2b00      	cmp	r3, #0
 801fce6:	f000 8117 	beq.w	801ff18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801fcea:	f896 c001 	ldrb.w	ip, [r6, #1]
 801fcee:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801fcf2:	44a4      	add	ip, r4
 801fcf4:	2900      	cmp	r1, #0
 801fcf6:	f000 8117 	beq.w	801ff28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801fcfa:	18b0      	adds	r0, r6, r2
 801fcfc:	5cb2      	ldrb	r2, [r6, r2]
 801fcfe:	7840      	ldrb	r0, [r0, #1]
 801fd00:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fd04:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fd08:	4422      	add	r2, r4
 801fd0a:	4420      	add	r0, r4
 801fd0c:	b29b      	uxth	r3, r3
 801fd0e:	b289      	uxth	r1, r1
 801fd10:	fb03 f901 	mul.w	r9, r3, r1
 801fd14:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fd18:	011b      	lsls	r3, r3, #4
 801fd1a:	b289      	uxth	r1, r1
 801fd1c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801fd20:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fd24:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801fd26:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801fd2a:	f8b6 e000 	ldrh.w	lr, [r6]
 801fd2e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801fd32:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801fd36:	eba3 0309 	sub.w	r3, r3, r9
 801fd3a:	b29b      	uxth	r3, r3
 801fd3c:	eba8 0801 	sub.w	r8, r8, r1
 801fd40:	fa1f f888 	uxth.w	r8, r8
 801fd44:	435f      	muls	r7, r3
 801fd46:	fb08 770b 	mla	r7, r8, fp, r7
 801fd4a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fd4e:	9310      	str	r3, [sp, #64]	@ 0x40
 801fd50:	fb01 770b 	mla	r7, r1, fp, r7
 801fd54:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fd58:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fd5a:	fb09 770b 	mla	r7, r9, fp, r7
 801fd5e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801fd62:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801fd66:	fb1b fb03 	smulbb	fp, fp, r3
 801fd6a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fd6e:	fb07 b706 	mla	r7, r7, r6, fp
 801fd72:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fd74:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fd78:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801fd7c:	f89c c000 	ldrb.w	ip, [ip]
 801fd80:	435d      	muls	r5, r3
 801fd82:	fb08 550b 	mla	r5, r8, fp, r5
 801fd86:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fd8a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fd8c:	fb01 550b 	mla	r5, r1, fp, r5
 801fd90:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fd94:	fb09 550b 	mla	r5, r9, fp, r5
 801fd98:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801fd9c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801fda0:	fb1b fb03 	smulbb	fp, fp, r3
 801fda4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fda6:	fb03 f30c 	mul.w	r3, r3, ip
 801fdaa:	f892 c000 	ldrb.w	ip, [r2]
 801fdae:	fb08 330a 	mla	r3, r8, sl, r3
 801fdb2:	fb01 330c 	mla	r3, r1, ip, r3
 801fdb6:	f890 c000 	ldrb.w	ip, [r0]
 801fdba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fdbe:	fb09 3c0c 	mla	ip, r9, ip, r3
 801fdc2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fdc4:	fa5f fe8e 	uxtb.w	lr, lr
 801fdc8:	b2bf      	uxth	r7, r7
 801fdca:	fb1e fe03 	smulbb	lr, lr, r3
 801fdce:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fdd2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801fdd6:	fb05 b506 	mla	r5, r5, r6, fp
 801fdda:	1c7b      	adds	r3, r7, #1
 801fddc:	fb0c e606 	mla	r6, ip, r6, lr
 801fde0:	b2ad      	uxth	r5, r5
 801fde2:	b2b6      	uxth	r6, r6
 801fde4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801fde8:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801fdec:	f105 0b01 	add.w	fp, r5, #1
 801fdf0:	1c77      	adds	r7, r6, #1
 801fdf2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801fdf6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fdfa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fdfe:	096d      	lsrs	r5, r5, #5
 801fe00:	431f      	orrs	r7, r3
 801fe02:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fe06:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fe08:	433d      	orrs	r5, r7
 801fe0a:	801d      	strh	r5, [r3, #0]
 801fe0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fe0e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801fe10:	3302      	adds	r3, #2
 801fe12:	930c      	str	r3, [sp, #48]	@ 0x30
 801fe14:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fe16:	4413      	add	r3, r2
 801fe18:	931f      	str	r3, [sp, #124]	@ 0x7c
 801fe1a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801fe1c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fe1e:	4413      	add	r3, r2
 801fe20:	9320      	str	r3, [sp, #128]	@ 0x80
 801fe22:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801fe24:	3b01      	subs	r3, #1
 801fe26:	9311      	str	r3, [sp, #68]	@ 0x44
 801fe28:	e732      	b.n	801fc90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fe2a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fe2c:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801fe2e:	4433      	add	r3, r6
 801fe30:	931f      	str	r3, [sp, #124]	@ 0x7c
 801fe32:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801fe34:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fe36:	4433      	add	r3, r6
 801fe38:	9320      	str	r3, [sp, #128]	@ 0x80
 801fe3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe3c:	3b01      	subs	r3, #1
 801fe3e:	9309      	str	r3, [sp, #36]	@ 0x24
 801fe40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fe42:	3302      	adds	r3, #2
 801fe44:	930a      	str	r3, [sp, #40]	@ 0x28
 801fe46:	e702      	b.n	801fc4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fe48:	d027      	beq.n	801fe9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801fe4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe4c:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801fe4e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801fe50:	3b01      	subs	r3, #1
 801fe52:	fb00 5003 	mla	r0, r0, r3, r5
 801fe56:	1400      	asrs	r0, r0, #16
 801fe58:	f53f af16 	bmi.w	801fc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe5c:	3901      	subs	r1, #1
 801fe5e:	4288      	cmp	r0, r1
 801fe60:	f6bf af12 	bge.w	801fc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe64:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801fe66:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801fe68:	fb01 0303 	mla	r3, r1, r3, r0
 801fe6c:	141b      	asrs	r3, r3, #16
 801fe6e:	f53f af0b 	bmi.w	801fc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe72:	3a01      	subs	r2, #1
 801fe74:	4293      	cmp	r3, r2
 801fe76:	f6bf af07 	bge.w	801fc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe7c:	9311      	str	r3, [sp, #68]	@ 0x44
 801fe7e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801fe82:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fe84:	930c      	str	r3, [sp, #48]	@ 0x30
 801fe86:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801fe88:	2b00      	cmp	r3, #0
 801fe8a:	dc70      	bgt.n	801ff6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801fe8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe8e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801fe90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fe94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fe98:	930a      	str	r3, [sp, #40]	@ 0x28
 801fe9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fe9c:	2b00      	cmp	r3, #0
 801fe9e:	f340 8124 	ble.w	80200ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fea2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fea6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801feaa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801feae:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801feb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801feb4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801feb8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801febc:	eef0 6a62 	vmov.f32	s13, s5
 801fec0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fec4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fec8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fecc:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801fed0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fed4:	eef0 6a43 	vmov.f32	s13, s6
 801fed8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fedc:	ee12 2a90 	vmov	r2, s5
 801fee0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fee4:	fb92 f3f3 	sdiv	r3, r2, r3
 801fee8:	ee13 2a10 	vmov	r2, s6
 801feec:	9321      	str	r3, [sp, #132]	@ 0x84
 801feee:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801fef0:	fb92 f3f3 	sdiv	r3, r2, r3
 801fef4:	9322      	str	r3, [sp, #136]	@ 0x88
 801fef6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fef8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801fefa:	3b01      	subs	r3, #1
 801fefc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff00:	930e      	str	r3, [sp, #56]	@ 0x38
 801ff02:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ff04:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801ff08:	bf08      	it	eq
 801ff0a:	4613      	moveq	r3, r2
 801ff0c:	9309      	str	r3, [sp, #36]	@ 0x24
 801ff0e:	eeb0 3a67 	vmov.f32	s6, s15
 801ff12:	eef0 2a47 	vmov.f32	s5, s14
 801ff16:	e68c      	b.n	801fc32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ff18:	b149      	cbz	r1, 801ff2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801ff1a:	5cb2      	ldrb	r2, [r6, r2]
 801ff1c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ff20:	4422      	add	r2, r4
 801ff22:	4628      	mov	r0, r5
 801ff24:	46ac      	mov	ip, r5
 801ff26:	e6f1      	b.n	801fd0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ff28:	4628      	mov	r0, r5
 801ff2a:	462a      	mov	r2, r5
 801ff2c:	e6ee      	b.n	801fd0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ff2e:	4628      	mov	r0, r5
 801ff30:	462a      	mov	r2, r5
 801ff32:	e7f7      	b.n	801ff24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801ff34:	1c47      	adds	r7, r0, #1
 801ff36:	f53f af69 	bmi.w	801fe0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ff3a:	42ba      	cmp	r2, r7
 801ff3c:	f6ff af66 	blt.w	801fe0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ff40:	1c6f      	adds	r7, r5, #1
 801ff42:	f53f af63 	bmi.w	801fe0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ff46:	42be      	cmp	r6, r7
 801ff48:	f6ff af60 	blt.w	801fe0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ff4c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801ff4e:	9002      	str	r0, [sp, #8]
 801ff50:	b236      	sxth	r6, r6
 801ff52:	b212      	sxth	r2, r2
 801ff54:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801ff58:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801ff5c:	9200      	str	r2, [sp, #0]
 801ff5e:	9601      	str	r6, [sp, #4]
 801ff60:	4623      	mov	r3, r4
 801ff62:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801ff66:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ff68:	f7ff fd59 	bl	801fa1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801ff6c:	e74e      	b.n	801fe0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ff6e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ff70:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801ff72:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801ff74:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ff76:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ff7a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801ff7c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ff80:	142d      	asrs	r5, r5, #16
 801ff82:	1400      	asrs	r0, r0, #16
 801ff84:	fb02 5000 	mla	r0, r2, r0, r5
 801ff88:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ff8a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801ff8e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ff92:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801ff96:	182e      	adds	r6, r5, r0
 801ff98:	eb04 0509 	add.w	r5, r4, r9
 801ff9c:	2b00      	cmp	r3, #0
 801ff9e:	f000 8096 	beq.w	80200ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801ffa2:	7877      	ldrb	r7, [r6, #1]
 801ffa4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ffa8:	4427      	add	r7, r4
 801ffaa:	2900      	cmp	r1, #0
 801ffac:	f000 8097 	beq.w	80200de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801ffb0:	18b0      	adds	r0, r6, r2
 801ffb2:	5cb2      	ldrb	r2, [r6, r2]
 801ffb4:	7840      	ldrb	r0, [r0, #1]
 801ffb6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ffba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ffbe:	4422      	add	r2, r4
 801ffc0:	4420      	add	r0, r4
 801ffc2:	b29b      	uxth	r3, r3
 801ffc4:	b289      	uxth	r1, r1
 801ffc6:	fb03 f801 	mul.w	r8, r3, r1
 801ffca:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801ffcc:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ffd0:	f8b6 c000 	ldrh.w	ip, [r6]
 801ffd4:	78be      	ldrb	r6, [r7, #2]
 801ffd6:	f814 9009 	ldrb.w	r9, [r4, r9]
 801ffda:	011b      	lsls	r3, r3, #4
 801ffdc:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801ffe0:	b289      	uxth	r1, r1
 801ffe2:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801ffe6:	eba3 0308 	sub.w	r3, r3, r8
 801ffea:	b29b      	uxth	r3, r3
 801ffec:	ebae 0e01 	sub.w	lr, lr, r1
 801fff0:	fa1f fe8e 	uxth.w	lr, lr
 801fff4:	435e      	muls	r6, r3
 801fff6:	fb0e 660b 	mla	r6, lr, fp, r6
 801fffa:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fffe:	9310      	str	r3, [sp, #64]	@ 0x40
 8020000:	fb01 660b 	mla	r6, r1, fp, r6
 8020004:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020008:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802000a:	fb08 660b 	mla	r6, r8, fp, r6
 802000e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8020012:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8020016:	fb1b fb03 	smulbb	fp, fp, r3
 802001a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802001e:	fb06 b60a 	mla	r6, r6, sl, fp
 8020022:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020024:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020028:	787d      	ldrb	r5, [r7, #1]
 802002a:	783f      	ldrb	r7, [r7, #0]
 802002c:	435d      	muls	r5, r3
 802002e:	fb0e 550b 	mla	r5, lr, fp, r5
 8020032:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020036:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020038:	fb01 550b 	mla	r5, r1, fp, r5
 802003c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020040:	fb08 550b 	mla	r5, r8, fp, r5
 8020044:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8020048:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 802004c:	fb1b fb03 	smulbb	fp, fp, r3
 8020050:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020052:	437b      	muls	r3, r7
 8020054:	7817      	ldrb	r7, [r2, #0]
 8020056:	fb0e 3309 	mla	r3, lr, r9, r3
 802005a:	fb01 3307 	mla	r3, r1, r7, r3
 802005e:	7807      	ldrb	r7, [r0, #0]
 8020060:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020064:	fb08 3707 	mla	r7, r8, r7, r3
 8020068:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802006a:	fa5f fc8c 	uxtb.w	ip, ip
 802006e:	fb1c fc03 	smulbb	ip, ip, r3
 8020072:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020076:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802007a:	fb05 b50a 	mla	r5, r5, sl, fp
 802007e:	fb07 c70a 	mla	r7, r7, sl, ip
 8020082:	b2b6      	uxth	r6, r6
 8020084:	b2ad      	uxth	r5, r5
 8020086:	b2bf      	uxth	r7, r7
 8020088:	1c73      	adds	r3, r6, #1
 802008a:	1c7a      	adds	r2, r7, #1
 802008c:	f105 0b01 	add.w	fp, r5, #1
 8020090:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020094:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020098:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802009c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80200a0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80200a4:	096d      	lsrs	r5, r5, #5
 80200a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80200a8:	4316      	orrs	r6, r2
 80200aa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80200ae:	432e      	orrs	r6, r5
 80200b0:	f823 6b02 	strh.w	r6, [r3], #2
 80200b4:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80200b6:	930c      	str	r3, [sp, #48]	@ 0x30
 80200b8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80200ba:	4413      	add	r3, r2
 80200bc:	931f      	str	r3, [sp, #124]	@ 0x7c
 80200be:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80200c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80200c2:	4413      	add	r3, r2
 80200c4:	9320      	str	r3, [sp, #128]	@ 0x80
 80200c6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80200c8:	3b01      	subs	r3, #1
 80200ca:	9311      	str	r3, [sp, #68]	@ 0x44
 80200cc:	e6db      	b.n	801fe86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80200ce:	b149      	cbz	r1, 80200e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80200d0:	5cb2      	ldrb	r2, [r6, r2]
 80200d2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80200d6:	4422      	add	r2, r4
 80200d8:	4628      	mov	r0, r5
 80200da:	462f      	mov	r7, r5
 80200dc:	e771      	b.n	801ffc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80200de:	4628      	mov	r0, r5
 80200e0:	462a      	mov	r2, r5
 80200e2:	e76e      	b.n	801ffc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80200e4:	4628      	mov	r0, r5
 80200e6:	462a      	mov	r2, r5
 80200e8:	e7f7      	b.n	80200da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80200ea:	b015      	add	sp, #84	@ 0x54
 80200ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080200f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80200f0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200f4:	880f      	ldrh	r7, [r1, #0]
 80200f6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 80200fa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80200fe:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8020102:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8020106:	023c      	lsls	r4, r7, #8
 8020108:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 802010c:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8020110:	017c      	lsls	r4, r7, #5
 8020112:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8020116:	00ff      	lsls	r7, r7, #3
 8020118:	ea4b 0404 	orr.w	r4, fp, r4
 802011c:	b2ff      	uxtb	r7, r7
 802011e:	fb05 ca0e 	mla	sl, r5, lr, ip
 8020122:	4327      	orrs	r7, r4
 8020124:	2d00      	cmp	r5, #0
 8020126:	eb02 080a 	add.w	r8, r2, sl
 802012a:	9701      	str	r7, [sp, #4]
 802012c:	db7e      	blt.n	802022c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802012e:	45a9      	cmp	r9, r5
 8020130:	dd7c      	ble.n	802022c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020132:	f1bc 0f00 	cmp.w	ip, #0
 8020136:	db77      	blt.n	8020228 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020138:	45e6      	cmp	lr, ip
 802013a:	dd75      	ble.n	8020228 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802013c:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020140:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020144:	441f      	add	r7, r3
 8020146:	f11c 0201 	adds.w	r2, ip, #1
 802014a:	d472      	bmi.n	8020232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 802014c:	4596      	cmp	lr, r2
 802014e:	dd70      	ble.n	8020232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020150:	2800      	cmp	r0, #0
 8020152:	d06e      	beq.n	8020232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020154:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020158:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802015c:	441c      	add	r4, r3
 802015e:	3501      	adds	r5, #1
 8020160:	d46b      	bmi.n	802023a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020162:	45a9      	cmp	r9, r5
 8020164:	dd69      	ble.n	802023a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020166:	2e00      	cmp	r6, #0
 8020168:	d067      	beq.n	802023a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802016a:	f1bc 0f00 	cmp.w	ip, #0
 802016e:	db62      	blt.n	8020236 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020170:	45e6      	cmp	lr, ip
 8020172:	dd60      	ble.n	8020236 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020174:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020178:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802017c:	441d      	add	r5, r3
 802017e:	f11c 0201 	adds.w	r2, ip, #1
 8020182:	d45d      	bmi.n	8020240 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020184:	4596      	cmp	lr, r2
 8020186:	dd5b      	ble.n	8020240 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020188:	2800      	cmp	r0, #0
 802018a:	d059      	beq.n	8020240 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802018c:	44c6      	add	lr, r8
 802018e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020192:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020196:	4413      	add	r3, r2
 8020198:	b280      	uxth	r0, r0
 802019a:	b2b2      	uxth	r2, r6
 802019c:	fb00 f602 	mul.w	r6, r0, r2
 80201a0:	0100      	lsls	r0, r0, #4
 80201a2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80201a6:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 80201aa:	1b80      	subs	r0, r0, r6
 80201ac:	fa1f fc82 	uxth.w	ip, r2
 80201b0:	b282      	uxth	r2, r0
 80201b2:	78a0      	ldrb	r0, [r4, #2]
 80201b4:	f897 e002 	ldrb.w	lr, [r7, #2]
 80201b8:	f897 9000 	ldrb.w	r9, [r7]
 80201bc:	787f      	ldrb	r7, [r7, #1]
 80201be:	eba8 080c 	sub.w	r8, r8, ip
 80201c2:	fa1f f888 	uxth.w	r8, r8
 80201c6:	4350      	muls	r0, r2
 80201c8:	fb08 0e0e 	mla	lr, r8, lr, r0
 80201cc:	78a8      	ldrb	r0, [r5, #2]
 80201ce:	fb0c e000 	mla	r0, ip, r0, lr
 80201d2:	f893 e002 	ldrb.w	lr, [r3, #2]
 80201d6:	fb06 0e0e 	mla	lr, r6, lr, r0
 80201da:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 80201de:	f894 e000 	ldrb.w	lr, [r4]
 80201e2:	fb02 fe0e 	mul.w	lr, r2, lr
 80201e6:	fb08 e909 	mla	r9, r8, r9, lr
 80201ea:	f895 e000 	ldrb.w	lr, [r5]
 80201ee:	fb0c 990e 	mla	r9, ip, lr, r9
 80201f2:	f893 e000 	ldrb.w	lr, [r3]
 80201f6:	785b      	ldrb	r3, [r3, #1]
 80201f8:	fb06 9e0e 	mla	lr, r6, lr, r9
 80201fc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020200:	ea4e 0e00 	orr.w	lr, lr, r0
 8020204:	7860      	ldrb	r0, [r4, #1]
 8020206:	4350      	muls	r0, r2
 8020208:	786a      	ldrb	r2, [r5, #1]
 802020a:	fb08 0007 	mla	r0, r8, r7, r0
 802020e:	fb0c 0202 	mla	r2, ip, r2, r0
 8020212:	fb06 2303 	mla	r3, r6, r3, r2
 8020216:	095b      	lsrs	r3, r3, #5
 8020218:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802021c:	ea4e 0303 	orr.w	r3, lr, r3
 8020220:	800b      	strh	r3, [r1, #0]
 8020222:	b003      	add	sp, #12
 8020224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020228:	af01      	add	r7, sp, #4
 802022a:	e78c      	b.n	8020146 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 802022c:	ac01      	add	r4, sp, #4
 802022e:	4627      	mov	r7, r4
 8020230:	e795      	b.n	802015e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020232:	ac01      	add	r4, sp, #4
 8020234:	e793      	b.n	802015e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020236:	ad01      	add	r5, sp, #4
 8020238:	e7a1      	b.n	802017e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802023a:	ab01      	add	r3, sp, #4
 802023c:	461d      	mov	r5, r3
 802023e:	e7ab      	b.n	8020198 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020240:	ab01      	add	r3, sp, #4
 8020242:	e7a9      	b.n	8020198 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020244:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020248:	b08f      	sub	sp, #60	@ 0x3c
 802024a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 802024e:	920c      	str	r2, [sp, #48]	@ 0x30
 8020250:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8020252:	910a      	str	r1, [sp, #40]	@ 0x28
 8020254:	9306      	str	r3, [sp, #24]
 8020256:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 802025a:	900d      	str	r0, [sp, #52]	@ 0x34
 802025c:	6850      	ldr	r0, [r2, #4]
 802025e:	6812      	ldr	r2, [r2, #0]
 8020260:	fb00 1303 	mla	r3, r0, r3, r1
 8020264:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020268:	9307      	str	r3, [sp, #28]
 802026a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802026c:	681b      	ldr	r3, [r3, #0]
 802026e:	9308      	str	r3, [sp, #32]
 8020270:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020272:	685c      	ldr	r4, [r3, #4]
 8020274:	3404      	adds	r4, #4
 8020276:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020278:	2b00      	cmp	r3, #0
 802027a:	dc03      	bgt.n	8020284 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 802027c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802027e:	2b00      	cmp	r3, #0
 8020280:	f340 81d6 	ble.w	8020630 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020284:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020286:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802028a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802028e:	1e48      	subs	r0, r1, #1
 8020290:	1e56      	subs	r6, r2, #1
 8020292:	9b06      	ldr	r3, [sp, #24]
 8020294:	2b00      	cmp	r3, #0
 8020296:	f340 80b7 	ble.w	8020408 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 802029a:	ea5f 472b 	movs.w	r7, fp, asr #16
 802029e:	ea4f 4325 	mov.w	r3, r5, asr #16
 80202a2:	d406      	bmi.n	80202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80202a4:	4287      	cmp	r7, r0
 80202a6:	da04      	bge.n	80202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80202a8:	2b00      	cmp	r3, #0
 80202aa:	db02      	blt.n	80202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80202ac:	42b3      	cmp	r3, r6
 80202ae:	f2c0 80ac 	blt.w	802040a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80202b2:	3701      	adds	r7, #1
 80202b4:	f100 809d 	bmi.w	80203f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80202b8:	42b9      	cmp	r1, r7
 80202ba:	f2c0 809a 	blt.w	80203f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80202be:	3301      	adds	r3, #1
 80202c0:	f100 8097 	bmi.w	80203f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80202c4:	429a      	cmp	r2, r3
 80202c6:	f2c0 8094 	blt.w	80203f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80202ca:	9b06      	ldr	r3, [sp, #24]
 80202cc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80202ce:	9b07      	ldr	r3, [sp, #28]
 80202d0:	9309      	str	r3, [sp, #36]	@ 0x24
 80202d2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80202d4:	2b00      	cmp	r3, #0
 80202d6:	f340 80b5 	ble.w	8020444 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80202da:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80202dc:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80202de:	68c7      	ldr	r7, [r0, #12]
 80202e0:	6892      	ldr	r2, [r2, #8]
 80202e2:	ea5f 402b 	movs.w	r0, fp, asr #16
 80202e6:	ea4f 4625 	mov.w	r6, r5, asr #16
 80202ea:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80202ee:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80202f2:	f100 80fb 	bmi.w	80204ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80202f6:	f102 3cff 	add.w	ip, r2, #4294967295
 80202fa:	4560      	cmp	r0, ip
 80202fc:	f280 80f6 	bge.w	80204ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020300:	2e00      	cmp	r6, #0
 8020302:	f2c0 80f3 	blt.w	80204ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020306:	f107 3cff 	add.w	ip, r7, #4294967295
 802030a:	4566      	cmp	r6, ip
 802030c:	f280 80ee 	bge.w	80204ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020310:	b212      	sxth	r2, r2
 8020312:	fb06 0002 	mla	r0, r6, r2, r0
 8020316:	9e08      	ldr	r6, [sp, #32]
 8020318:	1837      	adds	r7, r6, r0
 802031a:	5c30      	ldrb	r0, [r6, r0]
 802031c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020320:	eb04 0c08 	add.w	ip, r4, r8
 8020324:	2b00      	cmp	r3, #0
 8020326:	f000 80d3 	beq.w	80204d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802032a:	787e      	ldrb	r6, [r7, #1]
 802032c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020330:	4426      	add	r6, r4
 8020332:	2900      	cmp	r1, #0
 8020334:	f000 80d4 	beq.w	80204e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020338:	18b8      	adds	r0, r7, r2
 802033a:	5cba      	ldrb	r2, [r7, r2]
 802033c:	7840      	ldrb	r0, [r0, #1]
 802033e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020342:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020346:	4422      	add	r2, r4
 8020348:	4420      	add	r0, r4
 802034a:	b29b      	uxth	r3, r3
 802034c:	b289      	uxth	r1, r1
 802034e:	fb03 f901 	mul.w	r9, r3, r1
 8020352:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020356:	011b      	lsls	r3, r3, #4
 8020358:	b289      	uxth	r1, r1
 802035a:	78b7      	ldrb	r7, [r6, #2]
 802035c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020360:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020364:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8020368:	eba3 0309 	sub.w	r3, r3, r9
 802036c:	b29b      	uxth	r3, r3
 802036e:	ebae 0e01 	sub.w	lr, lr, r1
 8020372:	fa1f fe8e 	uxth.w	lr, lr
 8020376:	435f      	muls	r7, r3
 8020378:	fb0e 770a 	mla	r7, lr, sl, r7
 802037c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020380:	fb01 770a 	mla	r7, r1, sl, r7
 8020384:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020388:	fb09 7a0a 	mla	sl, r9, sl, r7
 802038c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020390:	f896 8000 	ldrb.w	r8, [r6]
 8020394:	7876      	ldrb	r6, [r6, #1]
 8020396:	fb03 f808 	mul.w	r8, r3, r8
 802039a:	fb0e 8807 	mla	r8, lr, r7, r8
 802039e:	7817      	ldrb	r7, [r2, #0]
 80203a0:	fb01 8807 	mla	r8, r1, r7, r8
 80203a4:	7807      	ldrb	r7, [r0, #0]
 80203a6:	fb09 8707 	mla	r7, r9, r7, r8
 80203aa:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 80203ae:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80203b2:	ea47 070a 	orr.w	r7, r7, sl
 80203b6:	4373      	muls	r3, r6
 80203b8:	f892 a001 	ldrb.w	sl, [r2, #1]
 80203bc:	fb0e 330c 	mla	r3, lr, ip, r3
 80203c0:	fb01 310a 	mla	r1, r1, sl, r3
 80203c4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80203c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80203ca:	fb09 1a0a 	mla	sl, r9, sl, r1
 80203ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80203d2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80203d6:	ea47 070a 	orr.w	r7, r7, sl
 80203da:	801f      	strh	r7, [r3, #0]
 80203dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80203de:	3302      	adds	r3, #2
 80203e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80203e2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80203e4:	449b      	add	fp, r3
 80203e6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80203e8:	441d      	add	r5, r3
 80203ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80203ec:	3b01      	subs	r3, #1
 80203ee:	930b      	str	r3, [sp, #44]	@ 0x2c
 80203f0:	e76f      	b.n	80202d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80203f2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80203f4:	449b      	add	fp, r3
 80203f6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80203f8:	441d      	add	r5, r3
 80203fa:	9b06      	ldr	r3, [sp, #24]
 80203fc:	3b01      	subs	r3, #1
 80203fe:	9306      	str	r3, [sp, #24]
 8020400:	9b07      	ldr	r3, [sp, #28]
 8020402:	3302      	adds	r3, #2
 8020404:	9307      	str	r3, [sp, #28]
 8020406:	e744      	b.n	8020292 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020408:	d023      	beq.n	8020452 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802040a:	9b06      	ldr	r3, [sp, #24]
 802040c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802040e:	3b01      	subs	r3, #1
 8020410:	fb00 b003 	mla	r0, r0, r3, fp
 8020414:	1400      	asrs	r0, r0, #16
 8020416:	f53f af58 	bmi.w	80202ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802041a:	3901      	subs	r1, #1
 802041c:	4288      	cmp	r0, r1
 802041e:	f6bf af54 	bge.w	80202ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020422:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8020424:	fb01 5303 	mla	r3, r1, r3, r5
 8020428:	141b      	asrs	r3, r3, #16
 802042a:	f53f af4e 	bmi.w	80202ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802042e:	3a01      	subs	r2, #1
 8020430:	4293      	cmp	r3, r2
 8020432:	f6bf af4a 	bge.w	80202ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020436:	9b06      	ldr	r3, [sp, #24]
 8020438:	9309      	str	r3, [sp, #36]	@ 0x24
 802043a:	9b07      	ldr	r3, [sp, #28]
 802043c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802043e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020440:	2b00      	cmp	r3, #0
 8020442:	dc70      	bgt.n	8020526 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020444:	9b06      	ldr	r3, [sp, #24]
 8020446:	9a07      	ldr	r2, [sp, #28]
 8020448:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802044c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020450:	9307      	str	r3, [sp, #28]
 8020452:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020454:	2b00      	cmp	r3, #0
 8020456:	f340 80eb 	ble.w	8020630 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802045a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802045e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020462:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020466:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020468:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802046c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020470:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020474:	eef0 6a62 	vmov.f32	s13, s5
 8020478:	ee61 7a27 	vmul.f32	s15, s2, s15
 802047c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020480:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020484:	ee16 ba90 	vmov	fp, s13
 8020488:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802048c:	eef0 6a43 	vmov.f32	s13, s6
 8020490:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020494:	ee12 2a90 	vmov	r2, s5
 8020498:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802049c:	fb92 f3f3 	sdiv	r3, r2, r3
 80204a0:	ee13 2a10 	vmov	r2, s6
 80204a4:	931b      	str	r3, [sp, #108]	@ 0x6c
 80204a6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80204a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80204ac:	931c      	str	r3, [sp, #112]	@ 0x70
 80204ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80204b0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80204b2:	3b01      	subs	r3, #1
 80204b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80204b8:	930a      	str	r3, [sp, #40]	@ 0x28
 80204ba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80204bc:	bf08      	it	eq
 80204be:	4613      	moveq	r3, r2
 80204c0:	ee16 5a90 	vmov	r5, s13
 80204c4:	9306      	str	r3, [sp, #24]
 80204c6:	eeb0 3a67 	vmov.f32	s6, s15
 80204ca:	eef0 2a47 	vmov.f32	s5, s14
 80204ce:	e6d2      	b.n	8020276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80204d0:	b149      	cbz	r1, 80204e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80204d2:	5cba      	ldrb	r2, [r7, r2]
 80204d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80204d8:	4422      	add	r2, r4
 80204da:	4660      	mov	r0, ip
 80204dc:	4666      	mov	r6, ip
 80204de:	e734      	b.n	802034a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80204e0:	4660      	mov	r0, ip
 80204e2:	4662      	mov	r2, ip
 80204e4:	e731      	b.n	802034a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80204e6:	4660      	mov	r0, ip
 80204e8:	4662      	mov	r2, ip
 80204ea:	e7f7      	b.n	80204dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80204ec:	f110 0c01 	adds.w	ip, r0, #1
 80204f0:	f53f af74 	bmi.w	80203dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80204f4:	4562      	cmp	r2, ip
 80204f6:	f6ff af71 	blt.w	80203dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80204fa:	f116 0c01 	adds.w	ip, r6, #1
 80204fe:	f53f af6d 	bmi.w	80203dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020502:	4567      	cmp	r7, ip
 8020504:	f6ff af6a 	blt.w	80203dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020508:	b23f      	sxth	r7, r7
 802050a:	b212      	sxth	r2, r2
 802050c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020510:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020514:	9200      	str	r2, [sp, #0]
 8020516:	9701      	str	r7, [sp, #4]
 8020518:	4623      	mov	r3, r4
 802051a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 802051e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020520:	f7ff fde6 	bl	80200f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020524:	e75a      	b.n	80203dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020526:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8020528:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 802052c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020530:	1428      	asrs	r0, r5, #16
 8020532:	fb02 6000 	mla	r0, r2, r0, r6
 8020536:	9e08      	ldr	r6, [sp, #32]
 8020538:	f816 8000 	ldrb.w	r8, [r6, r0]
 802053c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020540:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020544:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020548:	1837      	adds	r7, r6, r0
 802054a:	eb04 0c08 	add.w	ip, r4, r8
 802054e:	2b00      	cmp	r3, #0
 8020550:	d060      	beq.n	8020614 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020552:	787e      	ldrb	r6, [r7, #1]
 8020554:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020558:	4426      	add	r6, r4
 802055a:	2900      	cmp	r1, #0
 802055c:	d062      	beq.n	8020624 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 802055e:	18b8      	adds	r0, r7, r2
 8020560:	5cba      	ldrb	r2, [r7, r2]
 8020562:	7840      	ldrb	r0, [r0, #1]
 8020564:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020568:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802056c:	4422      	add	r2, r4
 802056e:	4420      	add	r0, r4
 8020570:	b29b      	uxth	r3, r3
 8020572:	b289      	uxth	r1, r1
 8020574:	fb03 f901 	mul.w	r9, r3, r1
 8020578:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802057c:	011b      	lsls	r3, r3, #4
 802057e:	b289      	uxth	r1, r1
 8020580:	78b7      	ldrb	r7, [r6, #2]
 8020582:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020586:	f89c c001 	ldrb.w	ip, [ip, #1]
 802058a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 802058e:	eba3 0309 	sub.w	r3, r3, r9
 8020592:	b29b      	uxth	r3, r3
 8020594:	ebae 0e01 	sub.w	lr, lr, r1
 8020598:	fa1f fe8e 	uxth.w	lr, lr
 802059c:	435f      	muls	r7, r3
 802059e:	fb0e 770a 	mla	r7, lr, sl, r7
 80205a2:	f892 a002 	ldrb.w	sl, [r2, #2]
 80205a6:	fb01 770a 	mla	r7, r1, sl, r7
 80205aa:	f890 a002 	ldrb.w	sl, [r0, #2]
 80205ae:	fb09 7a0a 	mla	sl, r9, sl, r7
 80205b2:	f814 7008 	ldrb.w	r7, [r4, r8]
 80205b6:	f896 8000 	ldrb.w	r8, [r6]
 80205ba:	7876      	ldrb	r6, [r6, #1]
 80205bc:	fb03 f808 	mul.w	r8, r3, r8
 80205c0:	fb0e 8807 	mla	r8, lr, r7, r8
 80205c4:	7817      	ldrb	r7, [r2, #0]
 80205c6:	fb01 8807 	mla	r8, r1, r7, r8
 80205ca:	7807      	ldrb	r7, [r0, #0]
 80205cc:	fb09 8707 	mla	r7, r9, r7, r8
 80205d0:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 80205d4:	4373      	muls	r3, r6
 80205d6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80205da:	7856      	ldrb	r6, [r2, #1]
 80205dc:	ea47 070a 	orr.w	r7, r7, sl
 80205e0:	fb0e 330c 	mla	r3, lr, ip, r3
 80205e4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80205e8:	fb01 3306 	mla	r3, r1, r6, r3
 80205ec:	fb09 3a0a 	mla	sl, r9, sl, r3
 80205f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80205f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80205f6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80205fa:	ea47 070a 	orr.w	r7, r7, sl
 80205fe:	f823 7b02 	strh.w	r7, [r3], #2
 8020602:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020604:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8020606:	449b      	add	fp, r3
 8020608:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802060a:	441d      	add	r5, r3
 802060c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802060e:	3b01      	subs	r3, #1
 8020610:	9309      	str	r3, [sp, #36]	@ 0x24
 8020612:	e714      	b.n	802043e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020614:	b149      	cbz	r1, 802062a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020616:	5cba      	ldrb	r2, [r7, r2]
 8020618:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802061c:	4422      	add	r2, r4
 802061e:	4660      	mov	r0, ip
 8020620:	4666      	mov	r6, ip
 8020622:	e7a5      	b.n	8020570 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020624:	4660      	mov	r0, ip
 8020626:	4662      	mov	r2, ip
 8020628:	e7a2      	b.n	8020570 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802062a:	4660      	mov	r0, ip
 802062c:	4662      	mov	r2, ip
 802062e:	e7f7      	b.n	8020620 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020630:	b00f      	add	sp, #60	@ 0x3c
 8020632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020636 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8020636:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802063a:	b085      	sub	sp, #20
 802063c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8020640:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8020644:	9102      	str	r1, [sp, #8]
 8020646:	2c00      	cmp	r4, #0
 8020648:	fb04 710c 	mla	r1, r4, ip, r7
 802064c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8020650:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8020654:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8020658:	eb02 0e01 	add.w	lr, r2, r1
 802065c:	f2c0 8122 	blt.w	80208a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020660:	45a0      	cmp	r8, r4
 8020662:	f340 811f 	ble.w	80208a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020666:	2f00      	cmp	r7, #0
 8020668:	f2c0 811a 	blt.w	80208a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 802066c:	45bc      	cmp	ip, r7
 802066e:	f340 8117 	ble.w	80208a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020672:	5c52      	ldrb	r2, [r2, r1]
 8020674:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020678:	1c7a      	adds	r2, r7, #1
 802067a:	f100 8116 	bmi.w	80208aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 802067e:	4594      	cmp	ip, r2
 8020680:	f340 8113 	ble.w	80208aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020684:	2e00      	cmp	r6, #0
 8020686:	f000 8112 	beq.w	80208ae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 802068a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802068e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020692:	3401      	adds	r4, #1
 8020694:	f100 810f 	bmi.w	80208b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020698:	45a0      	cmp	r8, r4
 802069a:	f340 810c 	ble.w	80208b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802069e:	2800      	cmp	r0, #0
 80206a0:	f000 810c 	beq.w	80208bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80206a4:	2f00      	cmp	r7, #0
 80206a6:	f2c0 8104 	blt.w	80208b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80206aa:	45bc      	cmp	ip, r7
 80206ac:	f340 8101 	ble.w	80208b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80206b0:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80206b4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80206b8:	3701      	adds	r7, #1
 80206ba:	f100 8102 	bmi.w	80208c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80206be:	45bc      	cmp	ip, r7
 80206c0:	f340 80ff 	ble.w	80208c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80206c4:	2e00      	cmp	r6, #0
 80206c6:	f000 80fe 	beq.w	80208c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 80206ca:	44f4      	add	ip, lr
 80206cc:	f89c 2001 	ldrb.w	r2, [ip, #1]
 80206d0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80206d4:	b2b6      	uxth	r6, r6
 80206d6:	b280      	uxth	r0, r0
 80206d8:	fb00 fe06 	mul.w	lr, r0, r6
 80206dc:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80206e0:	0136      	lsls	r6, r6, #4
 80206e2:	eba6 070e 	sub.w	r7, r6, lr
 80206e6:	b280      	uxth	r0, r0
 80206e8:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80206ec:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80206f0:	b2bf      	uxth	r7, r7
 80206f2:	1a1b      	subs	r3, r3, r0
 80206f4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80206f8:	b29b      	uxth	r3, r3
 80206fa:	fb0a f607 	mul.w	r6, sl, r7
 80206fe:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020702:	fb0b 6603 	mla	r6, fp, r3, r6
 8020706:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802070a:	fb00 6609 	mla	r6, r0, r9, r6
 802070e:	fb0e 6608 	mla	r6, lr, r8, r6
 8020712:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020716:	9600      	str	r6, [sp, #0]
 8020718:	2e00      	cmp	r6, #0
 802071a:	f000 80be 	beq.w	802089a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 802071e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020722:	fb0b fc0c 	mul.w	ip, fp, ip
 8020726:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802072a:	fb0b f505 	mul.w	r5, fp, r5
 802072e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020732:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8020736:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802073a:	44dc      	add	ip, fp
 802073c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020740:	9501      	str	r5, [sp, #4]
 8020742:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8020746:	9503      	str	r5, [sp, #12]
 8020748:	9d01      	ldr	r5, [sp, #4]
 802074a:	9e02      	ldr	r6, [sp, #8]
 802074c:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8020750:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020754:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8020758:	fb0a fc0c 	mul.w	ip, sl, ip
 802075c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020760:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020764:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020768:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802076c:	4465      	add	r5, ip
 802076e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020772:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8020776:	fb09 fc0c 	mul.w	ip, r9, ip
 802077a:	fb09 f904 	mul.w	r9, r9, r4
 802077e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8020782:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020786:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802078a:	fb08 f404 	mul.w	r4, r8, r4
 802078e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020792:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020796:	fb08 f802 	mul.w	r8, r8, r2
 802079a:	fb0a fa01 	mul.w	sl, sl, r1
 802079e:	0a22      	lsrs	r2, r4, #8
 80207a0:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80207a4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80207a8:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80207ac:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80207b0:	4414      	add	r4, r2
 80207b2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80207b6:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80207ba:	0a2d      	lsrs	r5, r5, #8
 80207bc:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80207c0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80207c4:	9a03      	ldr	r2, [sp, #12]
 80207c6:	8836      	ldrh	r6, [r6, #0]
 80207c8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80207cc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80207d0:	437d      	muls	r5, r7
 80207d2:	4461      	add	r1, ip
 80207d4:	0a24      	lsrs	r4, r4, #8
 80207d6:	fb02 5503 	mla	r5, r2, r3, r5
 80207da:	0a09      	lsrs	r1, r1, #8
 80207dc:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80207e0:	fb04 540e 	mla	r4, r4, lr, r5
 80207e4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80207e8:	fb01 4100 	mla	r1, r1, r0, r4
 80207ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80207f0:	0a09      	lsrs	r1, r1, #8
 80207f2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80207f6:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 80207fa:	fb07 f70a 	mul.w	r7, r7, sl
 80207fe:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020802:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8020806:	fb03 7101 	mla	r1, r3, r1, r7
 802080a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802080e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8020812:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020816:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802081a:	fb00 e101 	mla	r1, r0, r1, lr
 802081e:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8020822:	9a00      	ldr	r2, [sp, #0]
 8020824:	b287      	uxth	r7, r0
 8020826:	437a      	muls	r2, r7
 8020828:	0a09      	lsrs	r1, r1, #8
 802082a:	1c53      	adds	r3, r2, #1
 802082c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020830:	4321      	orrs	r1, r4
 8020832:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020836:	1235      	asrs	r5, r6, #8
 8020838:	0c0a      	lsrs	r2, r1, #16
 802083a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802083e:	b2db      	uxtb	r3, r3
 8020840:	fb12 f207 	smulbb	r2, r2, r7
 8020844:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8020848:	fb05 2503 	mla	r5, r5, r3, r2
 802084c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020850:	10f2      	asrs	r2, r6, #3
 8020852:	b2c8      	uxtb	r0, r1
 8020854:	00f6      	lsls	r6, r6, #3
 8020856:	fb14 f407 	smulbb	r4, r4, r7
 802085a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802085e:	b2f6      	uxtb	r6, r6
 8020860:	fb10 f007 	smulbb	r0, r0, r7
 8020864:	fb02 4203 	mla	r2, r2, r3, r4
 8020868:	b2ad      	uxth	r5, r5
 802086a:	fb06 0303 	mla	r3, r6, r3, r0
 802086e:	b299      	uxth	r1, r3
 8020870:	b294      	uxth	r4, r2
 8020872:	1c6b      	adds	r3, r5, #1
 8020874:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020878:	1c62      	adds	r2, r4, #1
 802087a:	1c4b      	adds	r3, r1, #1
 802087c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020880:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8020884:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020888:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802088c:	0952      	lsrs	r2, r2, #5
 802088e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020892:	432b      	orrs	r3, r5
 8020894:	4313      	orrs	r3, r2
 8020896:	9a02      	ldr	r2, [sp, #8]
 8020898:	8013      	strh	r3, [r2, #0]
 802089a:	b005      	add	sp, #20
 802089c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208a0:	2500      	movs	r5, #0
 80208a2:	e6e9      	b.n	8020678 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80208a4:	2100      	movs	r1, #0
 80208a6:	460d      	mov	r5, r1
 80208a8:	e6f3      	b.n	8020692 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80208aa:	2100      	movs	r1, #0
 80208ac:	e6f1      	b.n	8020692 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80208ae:	4631      	mov	r1, r6
 80208b0:	e6ef      	b.n	8020692 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80208b2:	2400      	movs	r4, #0
 80208b4:	e700      	b.n	80206b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80208b6:	2200      	movs	r2, #0
 80208b8:	4614      	mov	r4, r2
 80208ba:	e70b      	b.n	80206d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80208bc:	4602      	mov	r2, r0
 80208be:	4604      	mov	r4, r0
 80208c0:	e708      	b.n	80206d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80208c2:	2200      	movs	r2, #0
 80208c4:	e706      	b.n	80206d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80208c6:	4632      	mov	r2, r6
 80208c8:	e704      	b.n	80206d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080208ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80208ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80208ce:	b09f      	sub	sp, #124	@ 0x7c
 80208d0:	921b      	str	r2, [sp, #108]	@ 0x6c
 80208d2:	9309      	str	r3, [sp, #36]	@ 0x24
 80208d4:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 80208d6:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 80208da:	931c      	str	r3, [sp, #112]	@ 0x70
 80208dc:	9119      	str	r1, [sp, #100]	@ 0x64
 80208de:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 80208e2:	901d      	str	r0, [sp, #116]	@ 0x74
 80208e4:	6850      	ldr	r0, [r2, #4]
 80208e6:	6812      	ldr	r2, [r2, #0]
 80208e8:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80208ea:	fb00 1303 	mla	r3, r0, r3, r1
 80208ee:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80208f2:	930c      	str	r3, [sp, #48]	@ 0x30
 80208f4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80208f6:	681b      	ldr	r3, [r3, #0]
 80208f8:	9312      	str	r3, [sp, #72]	@ 0x48
 80208fa:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80208fc:	685e      	ldr	r6, [r3, #4]
 80208fe:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8020902:	930d      	str	r3, [sp, #52]	@ 0x34
 8020904:	3604      	adds	r6, #4
 8020906:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020908:	2b00      	cmp	r3, #0
 802090a:	dc03      	bgt.n	8020914 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802090c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802090e:	2b00      	cmp	r3, #0
 8020910:	f340 8388 	ble.w	8021024 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020914:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8020916:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802091a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802091e:	1e48      	subs	r0, r1, #1
 8020920:	1e57      	subs	r7, r2, #1
 8020922:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020924:	2b00      	cmp	r3, #0
 8020926:	f340 8195 	ble.w	8020c54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802092a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 802092c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020930:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020934:	d406      	bmi.n	8020944 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020936:	4584      	cmp	ip, r0
 8020938:	da04      	bge.n	8020944 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802093a:	2b00      	cmp	r3, #0
 802093c:	db02      	blt.n	8020944 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802093e:	42bb      	cmp	r3, r7
 8020940:	f2c0 8189 	blt.w	8020c56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8020944:	f11c 0c01 	adds.w	ip, ip, #1
 8020948:	f100 8177 	bmi.w	8020c3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802094c:	4561      	cmp	r1, ip
 802094e:	f2c0 8174 	blt.w	8020c3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020952:	3301      	adds	r3, #1
 8020954:	f100 8171 	bmi.w	8020c3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020958:	429a      	cmp	r2, r3
 802095a:	f2c0 816e 	blt.w	8020c3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802095e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020960:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8020962:	931a      	str	r3, [sp, #104]	@ 0x68
 8020964:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8020966:	2b00      	cmp	r3, #0
 8020968:	f340 8193 	ble.w	8020c92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 802096c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802096e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020972:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8020974:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8020978:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802097a:	141b      	asrs	r3, r3, #16
 802097c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020980:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020984:	f100 81d6 	bmi.w	8020d34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020988:	f100 38ff 	add.w	r8, r0, #4294967295
 802098c:	4543      	cmp	r3, r8
 802098e:	f280 81d1 	bge.w	8020d34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020992:	f1bc 0f00 	cmp.w	ip, #0
 8020996:	f2c0 81cd 	blt.w	8020d34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802099a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802099e:	45c4      	cmp	ip, r8
 80209a0:	f280 81c8 	bge.w	8020d34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80209a4:	b200      	sxth	r0, r0
 80209a6:	fb0c 3300 	mla	r3, ip, r0, r3
 80209aa:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80209ac:	eb04 0803 	add.w	r8, r4, r3
 80209b0:	5ce3      	ldrb	r3, [r4, r3]
 80209b2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80209b6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80209ba:	2a00      	cmp	r2, #0
 80209bc:	f000 81af 	beq.w	8020d1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80209c0:	f898 c001 	ldrb.w	ip, [r8, #1]
 80209c4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80209c8:	940e      	str	r4, [sp, #56]	@ 0x38
 80209ca:	0e24      	lsrs	r4, r4, #24
 80209cc:	9415      	str	r4, [sp, #84]	@ 0x54
 80209ce:	b179      	cbz	r1, 80209f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80209d0:	eb08 0c00 	add.w	ip, r8, r0
 80209d4:	f818 0000 	ldrb.w	r0, [r8, r0]
 80209d8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80209dc:	900a      	str	r0, [sp, #40]	@ 0x28
 80209de:	0e00      	lsrs	r0, r0, #24
 80209e0:	9013      	str	r0, [sp, #76]	@ 0x4c
 80209e2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80209e6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80209ea:	900f      	str	r0, [sp, #60]	@ 0x3c
 80209ec:	0e00      	lsrs	r0, r0, #24
 80209ee:	9016      	str	r0, [sp, #88]	@ 0x58
 80209f0:	b292      	uxth	r2, r2
 80209f2:	b289      	uxth	r1, r1
 80209f4:	fb02 f901 	mul.w	r9, r2, r1
 80209f8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80209fc:	0112      	lsls	r2, r2, #4
 80209fe:	eba2 0809 	sub.w	r8, r2, r9
 8020a02:	b289      	uxth	r1, r1
 8020a04:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8020a08:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020a0a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020a0c:	fa1f f888 	uxth.w	r8, r8
 8020a10:	1a52      	subs	r2, r2, r1
 8020a12:	b292      	uxth	r2, r2
 8020a14:	fb08 f000 	mul.w	r0, r8, r0
 8020a18:	fb02 000e 	mla	r0, r2, lr, r0
 8020a1c:	fb01 0004 	mla	r0, r1, r4, r0
 8020a20:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020a22:	fb09 0004 	mla	r0, r9, r4, r0
 8020a26:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020a2a:	2800      	cmp	r0, #0
 8020a2c:	f000 80fa 	beq.w	8020c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a30:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8020a34:	d01b      	beq.n	8020a6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020a36:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020a3a:	fb0e fa0a 	mul.w	sl, lr, sl
 8020a3e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020a42:	fb0e fe03 	mul.w	lr, lr, r3
 8020a46:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020a4a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020a4e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020a52:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8020a56:	4453      	add	r3, sl
 8020a58:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020a5c:	0a1b      	lsrs	r3, r3, #8
 8020a5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020a62:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020a66:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020a6a:	ea43 030c 	orr.w	r3, r3, ip
 8020a6e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020a70:	2cff      	cmp	r4, #255	@ 0xff
 8020a72:	d021      	beq.n	8020ab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020a74:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020a76:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020a7a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020a7c:	fb04 fb0b 	mul.w	fp, r4, fp
 8020a80:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020a82:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020a86:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020a88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020a8c:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a90:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020a94:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020a98:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020a9c:	44de      	add	lr, fp
 8020a9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020aa2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020aa6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020aaa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020aae:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020ab2:	ea4e 040a 	orr.w	r4, lr, sl
 8020ab6:	940e      	str	r4, [sp, #56]	@ 0x38
 8020ab8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020aba:	2cff      	cmp	r4, #255	@ 0xff
 8020abc:	d021      	beq.n	8020b02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8020abe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020ac0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020ac4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020ac6:	fb04 fb0b 	mul.w	fp, r4, fp
 8020aca:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020acc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020ad0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020ad2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ad6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ada:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020ade:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020ae2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020ae6:	44de      	add	lr, fp
 8020ae8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020aec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020af0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020af4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020af8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020afc:	ea4e 040a 	orr.w	r4, lr, sl
 8020b00:	940a      	str	r4, [sp, #40]	@ 0x28
 8020b02:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020b04:	2cff      	cmp	r4, #255	@ 0xff
 8020b06:	d021      	beq.n	8020b4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020b08:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020b0a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020b0e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020b10:	fb04 fb0b 	mul.w	fp, r4, fp
 8020b14:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020b16:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020b1a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020b1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020b20:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b24:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020b28:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020b2c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020b30:	44de      	add	lr, fp
 8020b32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020b36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020b3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b3e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020b42:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020b46:	ea4e 040a 	orr.w	r4, lr, sl
 8020b4a:	940f      	str	r4, [sp, #60]	@ 0x3c
 8020b4c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020b4e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020b52:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020b54:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8020b58:	fb08 fc0c 	mul.w	ip, r8, ip
 8020b5c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020b60:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020b64:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020b66:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020b6a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020b6e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020b70:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020b74:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8020b78:	fb08 f80e 	mul.w	r8, r8, lr
 8020b7c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020b80:	fb02 8303 	mla	r3, r2, r3, r8
 8020b84:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020b86:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020b88:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020b8c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020b8e:	fb01 330a 	mla	r3, r1, sl, r3
 8020b92:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 8020b96:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8020b98:	fb09 3901 	mla	r9, r9, r1, r3
 8020b9c:	4342      	muls	r2, r0
 8020b9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ba2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020ba6:	883b      	ldrh	r3, [r7, #0]
 8020ba8:	1c50      	adds	r0, r2, #1
 8020baa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020bae:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8020bb2:	ea4c 0c09 	orr.w	ip, ip, r9
 8020bb6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8020bba:	1219      	asrs	r1, r3, #8
 8020bbc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020bc0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020bc4:	b2c0      	uxtb	r0, r0
 8020bc6:	fb12 f204 	smulbb	r2, r2, r4
 8020bca:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020bce:	fb01 2100 	mla	r1, r1, r0, r2
 8020bd2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020bd6:	10da      	asrs	r2, r3, #3
 8020bd8:	fa5f fc8c 	uxtb.w	ip, ip
 8020bdc:	00db      	lsls	r3, r3, #3
 8020bde:	fb1c fc04 	smulbb	ip, ip, r4
 8020be2:	b2db      	uxtb	r3, r3
 8020be4:	b289      	uxth	r1, r1
 8020be6:	fb03 c300 	mla	r3, r3, r0, ip
 8020bea:	fa1f fc83 	uxth.w	ip, r3
 8020bee:	1c4b      	adds	r3, r1, #1
 8020bf0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020bf4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020bf8:	fb1e fe04 	smulbb	lr, lr, r4
 8020bfc:	f10c 0301 	add.w	r3, ip, #1
 8020c00:	fb02 e200 	mla	r2, r2, r0, lr
 8020c04:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020c08:	b292      	uxth	r2, r2
 8020c0a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8020c0e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020c12:	430b      	orrs	r3, r1
 8020c14:	1c51      	adds	r1, r2, #1
 8020c16:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020c1a:	0952      	lsrs	r2, r2, #5
 8020c1c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020c20:	4313      	orrs	r3, r2
 8020c22:	803b      	strh	r3, [r7, #0]
 8020c24:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8020c26:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8020c28:	441a      	add	r2, r3
 8020c2a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020c2c:	9229      	str	r2, [sp, #164]	@ 0xa4
 8020c2e:	441d      	add	r5, r3
 8020c30:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8020c32:	3b01      	subs	r3, #1
 8020c34:	3702      	adds	r7, #2
 8020c36:	931a      	str	r3, [sp, #104]	@ 0x68
 8020c38:	e694      	b.n	8020964 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020c3a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8020c3c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020c3e:	441c      	add	r4, r3
 8020c40:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020c42:	9429      	str	r4, [sp, #164]	@ 0xa4
 8020c44:	441d      	add	r5, r3
 8020c46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020c48:	3b01      	subs	r3, #1
 8020c4a:	9309      	str	r3, [sp, #36]	@ 0x24
 8020c4c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020c4e:	3302      	adds	r3, #2
 8020c50:	930c      	str	r3, [sp, #48]	@ 0x30
 8020c52:	e666      	b.n	8020922 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020c54:	d024      	beq.n	8020ca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8020c56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020c58:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8020c5a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020c5c:	3b01      	subs	r3, #1
 8020c5e:	fb00 4003 	mla	r0, r0, r3, r4
 8020c62:	1400      	asrs	r0, r0, #16
 8020c64:	f53f ae7b 	bmi.w	802095e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c68:	3901      	subs	r1, #1
 8020c6a:	4288      	cmp	r0, r1
 8020c6c:	f6bf ae77 	bge.w	802095e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c70:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8020c72:	fb01 5303 	mla	r3, r1, r3, r5
 8020c76:	141b      	asrs	r3, r3, #16
 8020c78:	f53f ae71 	bmi.w	802095e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c7c:	3a01      	subs	r2, #1
 8020c7e:	4293      	cmp	r3, r2
 8020c80:	f6bf ae6d 	bge.w	802095e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c84:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8020c88:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8020c8c:	f1bb 0f00 	cmp.w	fp, #0
 8020c90:	dc70      	bgt.n	8020d74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020c92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020c94:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020c98:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020c9a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020c9e:	930c      	str	r3, [sp, #48]	@ 0x30
 8020ca0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020ca2:	2b00      	cmp	r3, #0
 8020ca4:	f340 81be 	ble.w	8021024 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020ca8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020cb0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cb4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020cb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020cba:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020cbe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020cc2:	eef0 6a62 	vmov.f32	s13, s5
 8020cc6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020cca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020cce:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020cd2:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8020cd6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020cda:	eef0 6a43 	vmov.f32	s13, s6
 8020cde:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020ce2:	ee12 2a90 	vmov	r2, s5
 8020ce6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020cea:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cee:	ee13 2a10 	vmov	r2, s6
 8020cf2:	932b      	str	r3, [sp, #172]	@ 0xac
 8020cf4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020cf6:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cfa:	932c      	str	r3, [sp, #176]	@ 0xb0
 8020cfc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020cfe:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8020d00:	3b01      	subs	r3, #1
 8020d02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d06:	9319      	str	r3, [sp, #100]	@ 0x64
 8020d08:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020d0a:	bf08      	it	eq
 8020d0c:	4613      	moveq	r3, r2
 8020d0e:	ee16 5a90 	vmov	r5, s13
 8020d12:	9309      	str	r3, [sp, #36]	@ 0x24
 8020d14:	eeb0 3a67 	vmov.f32	s6, s15
 8020d18:	eef0 2a47 	vmov.f32	s5, s14
 8020d1c:	e5f3      	b.n	8020906 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020d1e:	2900      	cmp	r1, #0
 8020d20:	f43f ae66 	beq.w	80209f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020d24:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020d28:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020d2c:	900a      	str	r0, [sp, #40]	@ 0x28
 8020d2e:	0e00      	lsrs	r0, r0, #24
 8020d30:	9013      	str	r0, [sp, #76]	@ 0x4c
 8020d32:	e65d      	b.n	80209f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020d34:	f113 0801 	adds.w	r8, r3, #1
 8020d38:	f53f af74 	bmi.w	8020c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d3c:	4540      	cmp	r0, r8
 8020d3e:	f6ff af71 	blt.w	8020c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d42:	f11c 0801 	adds.w	r8, ip, #1
 8020d46:	f53f af6d 	bmi.w	8020c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d4a:	45c6      	cmp	lr, r8
 8020d4c:	f6ff af6a 	blt.w	8020c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d50:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8020d52:	9302      	str	r3, [sp, #8]
 8020d54:	b200      	sxth	r0, r0
 8020d56:	fa0f f38e 	sxth.w	r3, lr
 8020d5a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020d5e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020d62:	9301      	str	r3, [sp, #4]
 8020d64:	9000      	str	r0, [sp, #0]
 8020d66:	4633      	mov	r3, r6
 8020d68:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020d6a:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8020d6c:	4639      	mov	r1, r7
 8020d6e:	f7ff fc62 	bl	8020636 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020d72:	e757      	b.n	8020c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d74:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8020d76:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020d78:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020d7c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8020d7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d82:	1427      	asrs	r7, r4, #16
 8020d84:	142b      	asrs	r3, r5, #16
 8020d86:	fb01 7303 	mla	r3, r1, r3, r7
 8020d8a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020d8c:	18e7      	adds	r7, r4, r3
 8020d8e:	5ce3      	ldrb	r3, [r4, r3]
 8020d90:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020d94:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020d98:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020d9c:	2a00      	cmp	r2, #0
 8020d9e:	f000 8137 	beq.w	8021010 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020da2:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020da6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020daa:	9410      	str	r4, [sp, #64]	@ 0x40
 8020dac:	0e24      	lsrs	r4, r4, #24
 8020dae:	9417      	str	r4, [sp, #92]	@ 0x5c
 8020db0:	b170      	cbz	r0, 8020dd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020db2:	eb07 0e01 	add.w	lr, r7, r1
 8020db6:	5c79      	ldrb	r1, [r7, r1]
 8020db8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020dbc:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020dbe:	0e09      	lsrs	r1, r1, #24
 8020dc0:	9114      	str	r1, [sp, #80]	@ 0x50
 8020dc2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020dc6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020dca:	9111      	str	r1, [sp, #68]	@ 0x44
 8020dcc:	0e09      	lsrs	r1, r1, #24
 8020dce:	9118      	str	r1, [sp, #96]	@ 0x60
 8020dd0:	b292      	uxth	r2, r2
 8020dd2:	b280      	uxth	r0, r0
 8020dd4:	fb02 f800 	mul.w	r8, r2, r0
 8020dd8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020ddc:	0112      	lsls	r2, r2, #4
 8020dde:	eba2 0e08 	sub.w	lr, r2, r8
 8020de2:	b280      	uxth	r0, r0
 8020de4:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8020de8:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8020dea:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020dec:	fa1f fe8e 	uxth.w	lr, lr
 8020df0:	1a12      	subs	r2, r2, r0
 8020df2:	b292      	uxth	r2, r2
 8020df4:	fb0e f101 	mul.w	r1, lr, r1
 8020df8:	fb02 110c 	mla	r1, r2, ip, r1
 8020dfc:	fb00 1104 	mla	r1, r0, r4, r1
 8020e00:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020e02:	fb08 1104 	mla	r1, r8, r4, r1
 8020e06:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020e0a:	2900      	cmp	r1, #0
 8020e0c:	f000 80f5 	beq.w	8020ffa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020e10:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020e14:	d019      	beq.n	8020e4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020e16:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020e1a:	fb0c fa0a 	mul.w	sl, ip, sl
 8020e1e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020e22:	fb0c fc03 	mul.w	ip, ip, r3
 8020e26:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020e2a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020e2e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020e32:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8020e36:	4453      	add	r3, sl
 8020e38:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020e3c:	0a1b      	lsrs	r3, r3, #8
 8020e3e:	0a3f      	lsrs	r7, r7, #8
 8020e40:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020e44:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8020e48:	433b      	orrs	r3, r7
 8020e4a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020e4c:	2cff      	cmp	r4, #255	@ 0xff
 8020e4e:	d020      	beq.n	8020e92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020e50:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020e52:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020e56:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020e58:	4367      	muls	r7, r4
 8020e5a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020e5c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020e60:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020e62:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020e66:	fb04 fa0a 	mul.w	sl, r4, sl
 8020e6a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020e6e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020e72:	44bc      	add	ip, r7
 8020e74:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020e78:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020e7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e84:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020e88:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020e8c:	ea4c 040a 	orr.w	r4, ip, sl
 8020e90:	9410      	str	r4, [sp, #64]	@ 0x40
 8020e92:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020e94:	2cff      	cmp	r4, #255	@ 0xff
 8020e96:	d020      	beq.n	8020eda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020e98:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020e9a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020e9e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020ea0:	4367      	muls	r7, r4
 8020ea2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020ea4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020ea8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020eaa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020eae:	fb04 fa0a 	mul.w	sl, r4, sl
 8020eb2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020eb6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020eba:	44bc      	add	ip, r7
 8020ebc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020ec0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020ec4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ec8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ecc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020ed0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020ed4:	ea4c 040a 	orr.w	r4, ip, sl
 8020ed8:	940b      	str	r4, [sp, #44]	@ 0x2c
 8020eda:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020edc:	2cff      	cmp	r4, #255	@ 0xff
 8020ede:	d020      	beq.n	8020f22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020ee0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020ee2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020ee6:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020ee8:	4367      	muls	r7, r4
 8020eea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020eec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020ef0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020ef2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020ef6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020efa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020efe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020f02:	44bc      	add	ip, r7
 8020f04:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020f08:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020f0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f14:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020f18:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020f1c:	ea4c 040a 	orr.w	r4, ip, sl
 8020f20:	9411      	str	r4, [sp, #68]	@ 0x44
 8020f22:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020f24:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020f28:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020f2a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8020f2e:	fb0e f707 	mul.w	r7, lr, r7
 8020f32:	fb02 770c 	mla	r7, r2, ip, r7
 8020f36:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020f3a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020f3c:	fb00 770c 	mla	r7, r0, ip, r7
 8020f40:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020f44:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020f46:	fb08 770c 	mla	r7, r8, ip, r7
 8020f4a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8020f4e:	fb0e fe0c 	mul.w	lr, lr, ip
 8020f52:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020f56:	fb02 e303 	mla	r3, r2, r3, lr
 8020f5a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020f5c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020f5e:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020f62:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020f64:	fb00 330a 	mla	r3, r0, sl, r3
 8020f68:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8020f6c:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020f70:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020f72:	f8b9 0000 	ldrh.w	r0, [r9]
 8020f76:	434b      	muls	r3, r1
 8020f78:	0a3f      	lsrs	r7, r7, #8
 8020f7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f7e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020f82:	1c59      	adds	r1, r3, #1
 8020f84:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020f88:	ea47 070c 	orr.w	r7, r7, ip
 8020f8c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020f90:	1202      	asrs	r2, r0, #8
 8020f92:	0c3b      	lsrs	r3, r7, #16
 8020f94:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020f98:	b2c9      	uxtb	r1, r1
 8020f9a:	fb13 f304 	smulbb	r3, r3, r4
 8020f9e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020fa2:	fb02 3201 	mla	r2, r2, r1, r3
 8020fa6:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020faa:	10c3      	asrs	r3, r0, #3
 8020fac:	b2ff      	uxtb	r7, r7
 8020fae:	00c0      	lsls	r0, r0, #3
 8020fb0:	b292      	uxth	r2, r2
 8020fb2:	fb1c fc04 	smulbb	ip, ip, r4
 8020fb6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8020fba:	b2c0      	uxtb	r0, r0
 8020fbc:	fb17 f704 	smulbb	r7, r7, r4
 8020fc0:	fb03 c301 	mla	r3, r3, r1, ip
 8020fc4:	fb00 7001 	mla	r0, r0, r1, r7
 8020fc8:	f102 0c01 	add.w	ip, r2, #1
 8020fcc:	b280      	uxth	r0, r0
 8020fce:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020fd2:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8020fd6:	1c42      	adds	r2, r0, #1
 8020fd8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020fdc:	b29b      	uxth	r3, r3
 8020fde:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020fe2:	ea42 020c 	orr.w	r2, r2, ip
 8020fe6:	f103 0c01 	add.w	ip, r3, #1
 8020fea:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020fee:	095b      	lsrs	r3, r3, #5
 8020ff0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020ff4:	431a      	orrs	r2, r3
 8020ff6:	f8a9 2000 	strh.w	r2, [r9]
 8020ffa:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8020ffc:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8020ffe:	441a      	add	r2, r3
 8021000:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021002:	9229      	str	r2, [sp, #164]	@ 0xa4
 8021004:	f109 0902 	add.w	r9, r9, #2
 8021008:	441d      	add	r5, r3
 802100a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802100e:	e63d      	b.n	8020c8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021010:	2800      	cmp	r0, #0
 8021012:	f43f aedd 	beq.w	8020dd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021016:	5c79      	ldrb	r1, [r7, r1]
 8021018:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802101c:	910b      	str	r1, [sp, #44]	@ 0x2c
 802101e:	0e09      	lsrs	r1, r1, #24
 8021020:	9114      	str	r1, [sp, #80]	@ 0x50
 8021022:	e6d5      	b.n	8020dd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021024:	b01f      	add	sp, #124	@ 0x7c
 8021026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802102a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802102a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802102e:	b089      	sub	sp, #36	@ 0x24
 8021030:	9101      	str	r1, [sp, #4]
 8021032:	9801      	ldr	r0, [sp, #4]
 8021034:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8021038:	8800      	ldrh	r0, [r0, #0]
 802103a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 802103e:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8021042:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8021046:	1206      	asrs	r6, r0, #8
 8021048:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 802104c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8021050:	9602      	str	r6, [sp, #8]
 8021052:	10c6      	asrs	r6, r0, #3
 8021054:	00c0      	lsls	r0, r0, #3
 8021056:	b2c0      	uxtb	r0, r0
 8021058:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802105c:	9004      	str	r0, [sp, #16]
 802105e:	2f00      	cmp	r7, #0
 8021060:	fb07 100c 	mla	r0, r7, ip, r1
 8021064:	9603      	str	r6, [sp, #12]
 8021066:	eb02 0e00 	add.w	lr, r2, r0
 802106a:	f2c0 810a 	blt.w	8021282 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802106e:	45b8      	cmp	r8, r7
 8021070:	f340 8107 	ble.w	8021282 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021074:	2900      	cmp	r1, #0
 8021076:	f2c0 8102 	blt.w	802127e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802107a:	458c      	cmp	ip, r1
 802107c:	f340 80ff 	ble.w	802127e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021080:	5c12      	ldrb	r2, [r2, r0]
 8021082:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8021086:	1c4a      	adds	r2, r1, #1
 8021088:	f100 80fe 	bmi.w	8021288 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802108c:	4594      	cmp	ip, r2
 802108e:	f340 80fb 	ble.w	8021288 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021092:	2d00      	cmp	r5, #0
 8021094:	f000 80fa 	beq.w	802128c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8021098:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802109c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80210a0:	3701      	adds	r7, #1
 80210a2:	f100 80f7 	bmi.w	8021294 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80210a6:	45b8      	cmp	r8, r7
 80210a8:	f340 80f4 	ble.w	8021294 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80210ac:	2c00      	cmp	r4, #0
 80210ae:	f000 80f4 	beq.w	802129a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80210b2:	2900      	cmp	r1, #0
 80210b4:	eb0e 020c 	add.w	r2, lr, ip
 80210b8:	f2c0 80ea 	blt.w	8021290 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80210bc:	458c      	cmp	ip, r1
 80210be:	f340 80e7 	ble.w	8021290 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80210c2:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80210c6:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80210ca:	3101      	adds	r1, #1
 80210cc:	f100 80e8 	bmi.w	80212a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80210d0:	458c      	cmp	ip, r1
 80210d2:	f340 80e5 	ble.w	80212a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80210d6:	2d00      	cmp	r5, #0
 80210d8:	f000 80e4 	beq.w	80212a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80210dc:	7852      	ldrb	r2, [r2, #1]
 80210de:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80210e2:	0e0b      	lsrs	r3, r1, #24
 80210e4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80210e8:	9300      	str	r3, [sp, #0]
 80210ea:	b2a4      	uxth	r4, r4
 80210ec:	b2ab      	uxth	r3, r5
 80210ee:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80210f2:	fb03 f904 	mul.w	r9, r3, r4
 80210f6:	fb0a f505 	mul.w	r5, sl, r5
 80210fa:	011b      	lsls	r3, r3, #4
 80210fc:	eba3 0e09 	sub.w	lr, r3, r9
 8021100:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8021104:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8021108:	0a28      	lsrs	r0, r5, #8
 802110a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802110e:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8021112:	4405      	add	r5, r0
 8021114:	0a2d      	lsrs	r5, r5, #8
 8021116:	fb0a f303 	mul.w	r3, sl, r3
 802111a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802111e:	9005      	str	r0, [sp, #20]
 8021120:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8021124:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021128:	0a1b      	lsrs	r3, r3, #8
 802112a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 802112e:	9306      	str	r3, [sp, #24]
 8021130:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8021134:	fb0b f303 	mul.w	r3, fp, r3
 8021138:	0a1d      	lsrs	r5, r3, #8
 802113a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802113e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8021142:	fb0b f606 	mul.w	r6, fp, r6
 8021146:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802114a:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 802114e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021152:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021156:	fb08 f707 	mul.w	r7, r8, r7
 802115a:	441d      	add	r5, r3
 802115c:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8021160:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021164:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8021168:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 802116c:	fb08 fc0c 	mul.w	ip, r8, ip
 8021170:	0a1b      	lsrs	r3, r3, #8
 8021172:	9307      	str	r3, [sp, #28]
 8021174:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021178:	0e0b      	lsrs	r3, r1, #24
 802117a:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 802117e:	435f      	muls	r7, r3
 8021180:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021184:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8021188:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 802118c:	4460      	add	r0, ip
 802118e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021192:	b2a4      	uxth	r4, r4
 8021194:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021198:	0a2d      	lsrs	r5, r5, #8
 802119a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802119e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80211a2:	fa1f fe8e 	uxth.w	lr, lr
 80211a6:	4359      	muls	r1, r3
 80211a8:	1b12      	subs	r2, r2, r4
 80211aa:	9b05      	ldr	r3, [sp, #20]
 80211ac:	44bc      	add	ip, r7
 80211ae:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80211b2:	b292      	uxth	r2, r2
 80211b4:	fb05 f50e 	mul.w	r5, r5, lr
 80211b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80211bc:	fb03 5502 	mla	r5, r3, r2, r5
 80211c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80211c4:	9b06      	ldr	r3, [sp, #24]
 80211c6:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 80211ca:	0a36      	lsrs	r6, r6, #8
 80211cc:	0a00      	lsrs	r0, r0, #8
 80211ce:	fb0c 5509 	mla	r5, ip, r9, r5
 80211d2:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80211d6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80211da:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 80211de:	fb00 5504 	mla	r5, r0, r4, r5
 80211e2:	fb0e f606 	mul.w	r6, lr, r6
 80211e6:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 80211ea:	0a09      	lsrs	r1, r1, #8
 80211ec:	9b07      	ldr	r3, [sp, #28]
 80211ee:	fb02 6000 	mla	r0, r2, r0, r6
 80211f2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80211f6:	fb09 0001 	mla	r0, r9, r1, r0
 80211fa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80211fe:	fb0e fe0b 	mul.w	lr, lr, fp
 8021202:	fb04 0003 	mla	r0, r4, r3, r0
 8021206:	fb02 e20a 	mla	r2, r2, sl, lr
 802120a:	9b00      	ldr	r3, [sp, #0]
 802120c:	fb04 2408 	mla	r4, r4, r8, r2
 8021210:	fb09 4903 	mla	r9, r9, r3, r4
 8021214:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021218:	9b02      	ldr	r3, [sp, #8]
 802121a:	9a04      	ldr	r2, [sp, #16]
 802121c:	fa5f f989 	uxtb.w	r9, r9
 8021220:	fb03 f109 	mul.w	r1, r3, r9
 8021224:	9b03      	ldr	r3, [sp, #12]
 8021226:	0a2d      	lsrs	r5, r5, #8
 8021228:	0a00      	lsrs	r0, r0, #8
 802122a:	fb03 f309 	mul.w	r3, r3, r9
 802122e:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8021232:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021236:	4305      	orrs	r5, r0
 8021238:	fb02 f909 	mul.w	r9, r2, r9
 802123c:	1c58      	adds	r0, r3, #1
 802123e:	1c4a      	adds	r2, r1, #1
 8021240:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021244:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021248:	0a2b      	lsrs	r3, r5, #8
 802124a:	0c2a      	lsrs	r2, r5, #16
 802124c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021250:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021254:	00db      	lsls	r3, r3, #3
 8021256:	0212      	lsls	r2, r2, #8
 8021258:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802125c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021260:	4313      	orrs	r3, r2
 8021262:	f109 0201 	add.w	r2, r9, #1
 8021266:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802126a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 802126e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021272:	431d      	orrs	r5, r3
 8021274:	9b01      	ldr	r3, [sp, #4]
 8021276:	801d      	strh	r5, [r3, #0]
 8021278:	b009      	add	sp, #36	@ 0x24
 802127a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802127e:	2000      	movs	r0, #0
 8021280:	e701      	b.n	8021086 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8021282:	2600      	movs	r6, #0
 8021284:	4630      	mov	r0, r6
 8021286:	e70b      	b.n	80210a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021288:	2600      	movs	r6, #0
 802128a:	e709      	b.n	80210a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802128c:	462e      	mov	r6, r5
 802128e:	e707      	b.n	80210a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021290:	2700      	movs	r7, #0
 8021292:	e71a      	b.n	80210ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8021294:	2100      	movs	r1, #0
 8021296:	460f      	mov	r7, r1
 8021298:	e723      	b.n	80210e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802129a:	4621      	mov	r1, r4
 802129c:	4627      	mov	r7, r4
 802129e:	e720      	b.n	80210e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80212a0:	2100      	movs	r1, #0
 80212a2:	e71e      	b.n	80210e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80212a4:	4629      	mov	r1, r5
 80212a6:	e71c      	b.n	80210e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080212a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80212a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212ac:	b09b      	sub	sp, #108	@ 0x6c
 80212ae:	9218      	str	r2, [sp, #96]	@ 0x60
 80212b0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80212b2:	9116      	str	r1, [sp, #88]	@ 0x58
 80212b4:	9307      	str	r3, [sp, #28]
 80212b6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 80212ba:	9019      	str	r0, [sp, #100]	@ 0x64
 80212bc:	6850      	ldr	r0, [r2, #4]
 80212be:	6812      	ldr	r2, [r2, #0]
 80212c0:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 80212c2:	fb00 1303 	mla	r3, r0, r3, r1
 80212c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80212ca:	930a      	str	r3, [sp, #40]	@ 0x28
 80212cc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80212ce:	681b      	ldr	r3, [r3, #0]
 80212d0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80212d2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80212d4:	685e      	ldr	r6, [r3, #4]
 80212d6:	3604      	adds	r6, #4
 80212d8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80212da:	2b00      	cmp	r3, #0
 80212dc:	dc03      	bgt.n	80212e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80212de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80212e0:	2b00      	cmp	r3, #0
 80212e2:	f340 8373 	ble.w	80219cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80212e6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80212e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80212ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80212f0:	1e48      	subs	r0, r1, #1
 80212f2:	1e57      	subs	r7, r2, #1
 80212f4:	9b07      	ldr	r3, [sp, #28]
 80212f6:	2b00      	cmp	r3, #0
 80212f8:	f340 8190 	ble.w	802161c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80212fc:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80212fe:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021302:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021306:	d406      	bmi.n	8021316 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021308:	4584      	cmp	ip, r0
 802130a:	da04      	bge.n	8021316 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802130c:	2b00      	cmp	r3, #0
 802130e:	db02      	blt.n	8021316 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021310:	42bb      	cmp	r3, r7
 8021312:	f2c0 8184 	blt.w	802161e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021316:	f11c 0c01 	adds.w	ip, ip, #1
 802131a:	f100 8172 	bmi.w	8021602 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802131e:	4561      	cmp	r1, ip
 8021320:	f2c0 816f 	blt.w	8021602 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021324:	3301      	adds	r3, #1
 8021326:	f100 816c 	bmi.w	8021602 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802132a:	429a      	cmp	r2, r3
 802132c:	f2c0 8169 	blt.w	8021602 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021330:	9b07      	ldr	r3, [sp, #28]
 8021332:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8021334:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021336:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021338:	2b00      	cmp	r3, #0
 802133a:	f340 818e 	ble.w	802165a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 802133e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8021340:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021344:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021346:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802134a:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 802134c:	141b      	asrs	r3, r3, #16
 802134e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021352:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021356:	f100 81d1 	bmi.w	80216fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802135a:	f101 38ff 	add.w	r8, r1, #4294967295
 802135e:	4543      	cmp	r3, r8
 8021360:	f280 81cc 	bge.w	80216fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021364:	f1bc 0f00 	cmp.w	ip, #0
 8021368:	f2c0 81c8 	blt.w	80216fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802136c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021370:	45c4      	cmp	ip, r8
 8021372:	f280 81c3 	bge.w	80216fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021376:	b209      	sxth	r1, r1
 8021378:	fb0c 3301 	mla	r3, ip, r1, r3
 802137c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802137e:	eb04 0803 	add.w	r8, r4, r3
 8021382:	5ce3      	ldrb	r3, [r4, r3]
 8021384:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021388:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802138c:	2a00      	cmp	r2, #0
 802138e:	f000 81aa 	beq.w	80216e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021392:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021396:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802139a:	940b      	str	r4, [sp, #44]	@ 0x2c
 802139c:	0e24      	lsrs	r4, r4, #24
 802139e:	9412      	str	r4, [sp, #72]	@ 0x48
 80213a0:	b178      	cbz	r0, 80213c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80213a2:	eb08 0c01 	add.w	ip, r8, r1
 80213a6:	f818 1001 	ldrb.w	r1, [r8, r1]
 80213aa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80213ae:	9108      	str	r1, [sp, #32]
 80213b0:	0e09      	lsrs	r1, r1, #24
 80213b2:	9110      	str	r1, [sp, #64]	@ 0x40
 80213b4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80213b8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80213bc:	910c      	str	r1, [sp, #48]	@ 0x30
 80213be:	0e09      	lsrs	r1, r1, #24
 80213c0:	9113      	str	r1, [sp, #76]	@ 0x4c
 80213c2:	b292      	uxth	r2, r2
 80213c4:	b280      	uxth	r0, r0
 80213c6:	fb02 f900 	mul.w	r9, r2, r0
 80213ca:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80213ce:	0112      	lsls	r2, r2, #4
 80213d0:	eba2 0809 	sub.w	r8, r2, r9
 80213d4:	b280      	uxth	r0, r0
 80213d6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80213da:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80213dc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80213de:	fa1f f888 	uxth.w	r8, r8
 80213e2:	1a12      	subs	r2, r2, r0
 80213e4:	b292      	uxth	r2, r2
 80213e6:	fb08 f101 	mul.w	r1, r8, r1
 80213ea:	fb02 110e 	mla	r1, r2, lr, r1
 80213ee:	fb00 1104 	mla	r1, r0, r4, r1
 80213f2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80213f4:	fb09 1104 	mla	r1, r9, r4, r1
 80213f8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80213fc:	2900      	cmp	r1, #0
 80213fe:	f000 80f5 	beq.w	80215ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021402:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8021406:	d01b      	beq.n	8021440 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021408:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802140c:	fb0e fa0a 	mul.w	sl, lr, sl
 8021410:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021414:	fb0e fe03 	mul.w	lr, lr, r3
 8021418:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802141c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021420:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021424:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8021428:	4453      	add	r3, sl
 802142a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802142e:	0a1b      	lsrs	r3, r3, #8
 8021430:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021434:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021438:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802143c:	ea43 030c 	orr.w	r3, r3, ip
 8021440:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8021442:	2cff      	cmp	r4, #255	@ 0xff
 8021444:	d021      	beq.n	802148a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021446:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021448:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802144c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802144e:	fb04 fb0b 	mul.w	fp, r4, fp
 8021452:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021454:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021458:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802145a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802145e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021462:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021466:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802146a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802146e:	44de      	add	lr, fp
 8021470:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021474:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021478:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802147c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021480:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021484:	ea4e 040a 	orr.w	r4, lr, sl
 8021488:	940b      	str	r4, [sp, #44]	@ 0x2c
 802148a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802148c:	2cff      	cmp	r4, #255	@ 0xff
 802148e:	d021      	beq.n	80214d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021490:	9c08      	ldr	r4, [sp, #32]
 8021492:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8021496:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8021498:	fb04 fb0b 	mul.w	fp, r4, fp
 802149c:	9c08      	ldr	r4, [sp, #32]
 802149e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80214a2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80214a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80214a8:	fb04 fa0a 	mul.w	sl, r4, sl
 80214ac:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80214b0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80214b4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80214b8:	44de      	add	lr, fp
 80214ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80214be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80214c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80214c6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80214ca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80214ce:	ea4e 040a 	orr.w	r4, lr, sl
 80214d2:	9408      	str	r4, [sp, #32]
 80214d4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80214d6:	2cff      	cmp	r4, #255	@ 0xff
 80214d8:	d021      	beq.n	802151e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80214da:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80214dc:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80214e0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80214e2:	fb04 fb0b 	mul.w	fp, r4, fp
 80214e6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80214e8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80214ec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80214ee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80214f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80214f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80214fa:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80214fe:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021502:	44de      	add	lr, fp
 8021504:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021508:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802150c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021510:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021514:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021518:	ea4e 040a 	orr.w	r4, lr, sl
 802151c:	940c      	str	r4, [sp, #48]	@ 0x30
 802151e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021520:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021524:	9c08      	ldr	r4, [sp, #32]
 8021526:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802152a:	fb08 fc0c 	mul.w	ip, r8, ip
 802152e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021532:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8021536:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8021538:	fb00 cc0e 	mla	ip, r0, lr, ip
 802153c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8021540:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021542:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021546:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802154a:	fb08 f80e 	mul.w	r8, r8, lr
 802154e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021552:	fb02 8303 	mla	r3, r2, r3, r8
 8021556:	9a08      	ldr	r2, [sp, #32]
 8021558:	f8b7 8000 	ldrh.w	r8, [r7]
 802155c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8021560:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8021562:	fb00 330a 	mla	r3, r0, sl, r3
 8021566:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 802156a:	fb09 3900 	mla	r9, r9, r0, r3
 802156e:	43c9      	mvns	r1, r1
 8021570:	ea4f 2228 	mov.w	r2, r8, asr #8
 8021574:	fa5f fe81 	uxtb.w	lr, r1
 8021578:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802157c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021580:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8021584:	fb02 f20e 	mul.w	r2, r2, lr
 8021588:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802158c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8021590:	ea4c 0c09 	orr.w	ip, ip, r9
 8021594:	1c53      	adds	r3, r2, #1
 8021596:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802159a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802159e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80215a2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80215a6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80215aa:	4a63      	ldr	r2, [pc, #396]	@ (8021738 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80215ac:	fb00 f00e 	mul.w	r0, r0, lr
 80215b0:	b2db      	uxtb	r3, r3
 80215b2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80215b6:	1c43      	adds	r3, r0, #1
 80215b8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80215bc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80215c0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80215c4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80215c8:	b2c9      	uxtb	r1, r1
 80215ca:	00db      	lsls	r3, r3, #3
 80215cc:	fb01 f10e 	mul.w	r1, r1, lr
 80215d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80215d4:	4313      	orrs	r3, r2
 80215d6:	1c4a      	adds	r2, r1, #1
 80215d8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80215dc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80215e0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80215e4:	ea4c 0c03 	orr.w	ip, ip, r3
 80215e8:	f8a7 c000 	strh.w	ip, [r7]
 80215ec:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80215ee:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80215f0:	441a      	add	r2, r3
 80215f2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80215f4:	9225      	str	r2, [sp, #148]	@ 0x94
 80215f6:	441d      	add	r5, r3
 80215f8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80215fa:	3b01      	subs	r3, #1
 80215fc:	3702      	adds	r7, #2
 80215fe:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021600:	e699      	b.n	8021336 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021602:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8021604:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8021606:	441c      	add	r4, r3
 8021608:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802160a:	9425      	str	r4, [sp, #148]	@ 0x94
 802160c:	441d      	add	r5, r3
 802160e:	9b07      	ldr	r3, [sp, #28]
 8021610:	3b01      	subs	r3, #1
 8021612:	9307      	str	r3, [sp, #28]
 8021614:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021616:	3302      	adds	r3, #2
 8021618:	930a      	str	r3, [sp, #40]	@ 0x28
 802161a:	e66b      	b.n	80212f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802161c:	d024      	beq.n	8021668 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802161e:	9b07      	ldr	r3, [sp, #28]
 8021620:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8021622:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8021624:	3b01      	subs	r3, #1
 8021626:	fb00 4003 	mla	r0, r0, r3, r4
 802162a:	1400      	asrs	r0, r0, #16
 802162c:	f53f ae80 	bmi.w	8021330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021630:	3901      	subs	r1, #1
 8021632:	4288      	cmp	r0, r1
 8021634:	f6bf ae7c 	bge.w	8021330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021638:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802163a:	fb01 5303 	mla	r3, r1, r3, r5
 802163e:	141b      	asrs	r3, r3, #16
 8021640:	f53f ae76 	bmi.w	8021330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021644:	3a01      	subs	r2, #1
 8021646:	4293      	cmp	r3, r2
 8021648:	f6bf ae72 	bge.w	8021330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802164c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021650:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8021654:	f1bb 0f00 	cmp.w	fp, #0
 8021658:	dc70      	bgt.n	802173c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802165a:	9b07      	ldr	r3, [sp, #28]
 802165c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021660:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021662:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021666:	930a      	str	r3, [sp, #40]	@ 0x28
 8021668:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802166a:	2b00      	cmp	r3, #0
 802166c:	f340 81ae 	ble.w	80219cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021670:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021674:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021678:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802167c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802167e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021682:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021686:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802168a:	eef0 6a62 	vmov.f32	s13, s5
 802168e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021692:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021696:	ee77 2a62 	vsub.f32	s5, s14, s5
 802169a:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 802169e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80216a2:	eef0 6a43 	vmov.f32	s13, s6
 80216a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80216aa:	ee12 2a90 	vmov	r2, s5
 80216ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80216b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80216b6:	ee13 2a10 	vmov	r2, s6
 80216ba:	9327      	str	r3, [sp, #156]	@ 0x9c
 80216bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80216be:	fb92 f3f3 	sdiv	r3, r2, r3
 80216c2:	9328      	str	r3, [sp, #160]	@ 0xa0
 80216c4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80216c6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80216c8:	3b01      	subs	r3, #1
 80216ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80216ce:	9316      	str	r3, [sp, #88]	@ 0x58
 80216d0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80216d2:	bf08      	it	eq
 80216d4:	4613      	moveq	r3, r2
 80216d6:	ee16 5a90 	vmov	r5, s13
 80216da:	9307      	str	r3, [sp, #28]
 80216dc:	eeb0 3a67 	vmov.f32	s6, s15
 80216e0:	eef0 2a47 	vmov.f32	s5, s14
 80216e4:	e5f8      	b.n	80212d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80216e6:	2800      	cmp	r0, #0
 80216e8:	f43f ae6b 	beq.w	80213c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80216ec:	f818 1001 	ldrb.w	r1, [r8, r1]
 80216f0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80216f4:	9108      	str	r1, [sp, #32]
 80216f6:	0e09      	lsrs	r1, r1, #24
 80216f8:	9110      	str	r1, [sp, #64]	@ 0x40
 80216fa:	e662      	b.n	80213c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80216fc:	f113 0801 	adds.w	r8, r3, #1
 8021700:	f53f af74 	bmi.w	80215ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021704:	4541      	cmp	r1, r8
 8021706:	f6ff af71 	blt.w	80215ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802170a:	f11c 0801 	adds.w	r8, ip, #1
 802170e:	f53f af6d 	bmi.w	80215ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021712:	45c6      	cmp	lr, r8
 8021714:	f6ff af6a 	blt.w	80215ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021718:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802171c:	b209      	sxth	r1, r1
 802171e:	fa0f f38e 	sxth.w	r3, lr
 8021722:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8021726:	9301      	str	r3, [sp, #4]
 8021728:	9100      	str	r1, [sp, #0]
 802172a:	4633      	mov	r3, r6
 802172c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802172e:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8021730:	4639      	mov	r1, r7
 8021732:	f7ff fc7a 	bl	802102a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8021736:	e759      	b.n	80215ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021738:	fffff800 	.word	0xfffff800
 802173c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 802173e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8021740:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021744:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021746:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802174a:	1427      	asrs	r7, r4, #16
 802174c:	142b      	asrs	r3, r5, #16
 802174e:	fb01 7303 	mla	r3, r1, r3, r7
 8021752:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8021754:	18e7      	adds	r7, r4, r3
 8021756:	5ce3      	ldrb	r3, [r4, r3]
 8021758:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802175c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021760:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021764:	2a00      	cmp	r2, #0
 8021766:	f000 8127 	beq.w	80219b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802176a:	f897 e001 	ldrb.w	lr, [r7, #1]
 802176e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021772:	940d      	str	r4, [sp, #52]	@ 0x34
 8021774:	0e24      	lsrs	r4, r4, #24
 8021776:	9414      	str	r4, [sp, #80]	@ 0x50
 8021778:	b170      	cbz	r0, 8021798 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802177a:	eb07 0e01 	add.w	lr, r7, r1
 802177e:	5c79      	ldrb	r1, [r7, r1]
 8021780:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021784:	9109      	str	r1, [sp, #36]	@ 0x24
 8021786:	0e09      	lsrs	r1, r1, #24
 8021788:	9111      	str	r1, [sp, #68]	@ 0x44
 802178a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802178e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021792:	910e      	str	r1, [sp, #56]	@ 0x38
 8021794:	0e09      	lsrs	r1, r1, #24
 8021796:	9115      	str	r1, [sp, #84]	@ 0x54
 8021798:	b292      	uxth	r2, r2
 802179a:	b280      	uxth	r0, r0
 802179c:	fb02 f800 	mul.w	r8, r2, r0
 80217a0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80217a4:	0112      	lsls	r2, r2, #4
 80217a6:	eba2 0e08 	sub.w	lr, r2, r8
 80217aa:	b280      	uxth	r0, r0
 80217ac:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80217b0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80217b2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80217b4:	fa1f fe8e 	uxth.w	lr, lr
 80217b8:	1a09      	subs	r1, r1, r0
 80217ba:	b289      	uxth	r1, r1
 80217bc:	fb0e f202 	mul.w	r2, lr, r2
 80217c0:	fb01 220c 	mla	r2, r1, ip, r2
 80217c4:	fb00 2204 	mla	r2, r0, r4, r2
 80217c8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80217ca:	fb08 2204 	mla	r2, r8, r4, r2
 80217ce:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80217d2:	2a00      	cmp	r2, #0
 80217d4:	f000 80e5 	beq.w	80219a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80217d8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80217dc:	d019      	beq.n	8021812 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80217de:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80217e2:	fb0c fa0a 	mul.w	sl, ip, sl
 80217e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80217ea:	fb0c fc03 	mul.w	ip, ip, r3
 80217ee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80217f2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80217f6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80217fa:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80217fe:	4453      	add	r3, sl
 8021800:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021804:	0a1b      	lsrs	r3, r3, #8
 8021806:	0a3f      	lsrs	r7, r7, #8
 8021808:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802180c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021810:	433b      	orrs	r3, r7
 8021812:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021814:	2cff      	cmp	r4, #255	@ 0xff
 8021816:	d020      	beq.n	802185a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021818:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802181a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802181e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021820:	4367      	muls	r7, r4
 8021822:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021824:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021828:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802182a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802182e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021832:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021836:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802183a:	44bc      	add	ip, r7
 802183c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021840:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021844:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021848:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802184c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021850:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021854:	ea4c 040a 	orr.w	r4, ip, sl
 8021858:	940d      	str	r4, [sp, #52]	@ 0x34
 802185a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802185c:	2cff      	cmp	r4, #255	@ 0xff
 802185e:	d020      	beq.n	80218a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8021860:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8021862:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8021866:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8021868:	4367      	muls	r7, r4
 802186a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802186c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021870:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8021872:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021876:	fb04 fa0a 	mul.w	sl, r4, sl
 802187a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802187e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021882:	44bc      	add	ip, r7
 8021884:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021888:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802188c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021890:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021894:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021898:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802189c:	ea4c 040a 	orr.w	r4, ip, sl
 80218a0:	9409      	str	r4, [sp, #36]	@ 0x24
 80218a2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80218a4:	2cff      	cmp	r4, #255	@ 0xff
 80218a6:	d020      	beq.n	80218ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80218a8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80218aa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80218ae:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80218b0:	4367      	muls	r7, r4
 80218b2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80218b4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80218b8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80218ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80218be:	fb04 fa0a 	mul.w	sl, r4, sl
 80218c2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80218c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80218ca:	44bc      	add	ip, r7
 80218cc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80218d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80218d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80218dc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80218e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80218e4:	ea4c 040a 	orr.w	r4, ip, sl
 80218e8:	940e      	str	r4, [sp, #56]	@ 0x38
 80218ea:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80218ec:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80218f0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80218f2:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80218f6:	fb0e f707 	mul.w	r7, lr, r7
 80218fa:	fb01 770c 	mla	r7, r1, ip, r7
 80218fe:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021902:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8021904:	fb00 770c 	mla	r7, r0, ip, r7
 8021908:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802190c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802190e:	fb08 770c 	mla	r7, r8, ip, r7
 8021912:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8021916:	fb0e fe0c 	mul.w	lr, lr, ip
 802191a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802191e:	fb01 e303 	mla	r3, r1, r3, lr
 8021922:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8021924:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8021928:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802192a:	fb00 330a 	mla	r3, r0, sl, r3
 802192e:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8021932:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021936:	f8b9 3000 	ldrh.w	r3, [r9]
 802193a:	43d2      	mvns	r2, r2
 802193c:	1218      	asrs	r0, r3, #8
 802193e:	b2d2      	uxtb	r2, r2
 8021940:	10d9      	asrs	r1, r3, #3
 8021942:	0a3f      	lsrs	r7, r7, #8
 8021944:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021948:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802194c:	00db      	lsls	r3, r3, #3
 802194e:	4350      	muls	r0, r2
 8021950:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8021954:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8021958:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802195c:	b2db      	uxtb	r3, r3
 802195e:	ea47 070c 	orr.w	r7, r7, ip
 8021962:	4351      	muls	r1, r2
 8021964:	4353      	muls	r3, r2
 8021966:	1c42      	adds	r2, r0, #1
 8021968:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802196c:	0c3a      	lsrs	r2, r7, #16
 802196e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021972:	4a18      	ldr	r2, [pc, #96]	@ (80219d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8021974:	b2c0      	uxtb	r0, r0
 8021976:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802197a:	1c4a      	adds	r2, r1, #1
 802197c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021980:	0a3a      	lsrs	r2, r7, #8
 8021982:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021986:	00c9      	lsls	r1, r1, #3
 8021988:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802198c:	4301      	orrs	r1, r0
 802198e:	1c58      	adds	r0, r3, #1
 8021990:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021994:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021998:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 802199c:	4308      	orrs	r0, r1
 802199e:	f8a9 0000 	strh.w	r0, [r9]
 80219a2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80219a4:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80219a6:	441a      	add	r2, r3
 80219a8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80219aa:	9225      	str	r2, [sp, #148]	@ 0x94
 80219ac:	f109 0902 	add.w	r9, r9, #2
 80219b0:	441d      	add	r5, r3
 80219b2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80219b6:	e64d      	b.n	8021654 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80219b8:	2800      	cmp	r0, #0
 80219ba:	f43f aeed 	beq.w	8021798 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80219be:	5c79      	ldrb	r1, [r7, r1]
 80219c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80219c4:	9109      	str	r1, [sp, #36]	@ 0x24
 80219c6:	0e09      	lsrs	r1, r1, #24
 80219c8:	9111      	str	r1, [sp, #68]	@ 0x44
 80219ca:	e6e5      	b.n	8021798 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80219cc:	b01b      	add	sp, #108	@ 0x6c
 80219ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80219d2:	bf00      	nop
 80219d4:	fffff800 	.word	0xfffff800

080219d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80219d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80219dc:	b085      	sub	sp, #20
 80219de:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 80219e2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80219e6:	9103      	str	r1, [sp, #12]
 80219e8:	fb00 7406 	mla	r4, r0, r6, r7
 80219ec:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80219f0:	2800      	cmp	r0, #0
 80219f2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 80219f6:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 80219fa:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 80219fe:	9501      	str	r5, [sp, #4]
 8021a00:	eb03 0904 	add.w	r9, r3, r4
 8021a04:	f2c0 8150 	blt.w	8021ca8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021a08:	4583      	cmp	fp, r0
 8021a0a:	f340 814d 	ble.w	8021ca8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021a0e:	2f00      	cmp	r7, #0
 8021a10:	f2c0 8146 	blt.w	8021ca0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021a14:	42be      	cmp	r6, r7
 8021a16:	f340 8143 	ble.w	8021ca0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021a1a:	f813 c004 	ldrb.w	ip, [r3, r4]
 8021a1e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8021a22:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021a26:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8021a2a:	4355      	muls	r5, r2
 8021a2c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021a30:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8021a34:	fb0c f203 	mul.w	r2, ip, r3
 8021a38:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021a3c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8021a40:	441d      	add	r5, r3
 8021a42:	f102 0320 	add.w	r3, r2, #32
 8021a46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021a4a:	0a1b      	lsrs	r3, r3, #8
 8021a4c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021a50:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021a54:	431c      	orrs	r4, r3
 8021a56:	1c7b      	adds	r3, r7, #1
 8021a58:	f100 812b 	bmi.w	8021cb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021a5c:	429e      	cmp	r6, r3
 8021a5e:	f340 8128 	ble.w	8021cb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021a62:	2900      	cmp	r1, #0
 8021a64:	f000 8128 	beq.w	8021cb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8021a68:	9a01      	ldr	r2, [sp, #4]
 8021a6a:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021a6e:	8855      	ldrh	r5, [r2, #2]
 8021a70:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021a74:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8021a78:	fb08 f802 	mul.w	r8, r8, r2
 8021a7c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021a80:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8021a84:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021a88:	435d      	muls	r5, r3
 8021a8a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021a8e:	44d0      	add	r8, sl
 8021a90:	f105 0a20 	add.w	sl, r5, #32
 8021a94:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021a98:	0a2d      	lsrs	r5, r5, #8
 8021a9a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021a9e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021aa2:	432a      	orrs	r2, r5
 8021aa4:	3001      	adds	r0, #1
 8021aa6:	f100 810d 	bmi.w	8021cc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021aaa:	4583      	cmp	fp, r0
 8021aac:	f340 810a 	ble.w	8021cc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021ab0:	f1be 0f00 	cmp.w	lr, #0
 8021ab4:	f000 810b 	beq.w	8021cce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8021ab8:	2f00      	cmp	r7, #0
 8021aba:	f2c0 8100 	blt.w	8021cbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021abe:	42be      	cmp	r6, r7
 8021ac0:	f340 80fd 	ble.w	8021cbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021ac4:	9801      	ldr	r0, [sp, #4]
 8021ac6:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021aca:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021ace:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021ad2:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8021ad6:	fb0a fa00 	mul.w	sl, sl, r0
 8021ada:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8021ade:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8021ae2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021ae6:	fb05 f808 	mul.w	r8, r5, r8
 8021aea:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8021aee:	4482      	add	sl, r0
 8021af0:	f108 0020 	add.w	r0, r8, #32
 8021af4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021af8:	0a00      	lsrs	r0, r0, #8
 8021afa:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021afe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021b02:	ea4b 0b00 	orr.w	fp, fp, r0
 8021b06:	3701      	adds	r7, #1
 8021b08:	f100 80e6 	bmi.w	8021cd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021b0c:	42be      	cmp	r6, r7
 8021b0e:	f340 80e3 	ble.w	8021cd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021b12:	2900      	cmp	r1, #0
 8021b14:	f000 80e3 	beq.w	8021cde <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021b18:	3601      	adds	r6, #1
 8021b1a:	9801      	ldr	r0, [sp, #4]
 8021b1c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021b20:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021b24:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021b28:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8021b2c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021b30:	fb09 f906 	mul.w	r9, r9, r6
 8021b34:	fb07 f800 	mul.w	r8, r7, r0
 8021b38:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8021b3c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021b40:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8021b44:	44d1      	add	r9, sl
 8021b46:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021b4a:	f108 0020 	add.w	r0, r8, #32
 8021b4e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021b52:	0a00      	lsrs	r0, r0, #8
 8021b54:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021b58:	4330      	orrs	r0, r6
 8021b5a:	b28e      	uxth	r6, r1
 8021b5c:	fa1f f98e 	uxth.w	r9, lr
 8021b60:	fb06 f809 	mul.w	r8, r6, r9
 8021b64:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021b68:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021b6c:	0136      	lsls	r6, r6, #4
 8021b6e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021b72:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8021b76:	9601      	str	r6, [sp, #4]
 8021b78:	ea4a 0404 	orr.w	r4, sl, r4
 8021b7c:	fa1f f689 	uxth.w	r6, r9
 8021b80:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021b84:	fb11 f90e 	smulbb	r9, r1, lr
 8021b88:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021b8c:	9602      	str	r6, [sp, #8]
 8021b8e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021b92:	4626      	mov	r6, r4
 8021b94:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021b98:	f1ce 0410 	rsb	r4, lr, #16
 8021b9c:	1a64      	subs	r4, r4, r1
 8021b9e:	ea4a 0202 	orr.w	r2, sl, r2
 8021ba2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021ba6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021baa:	434a      	muls	r2, r1
 8021bac:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021bb0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021bb4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021bb8:	fb04 2406 	mla	r4, r4, r6, r2
 8021bbc:	ea4a 0000 	orr.w	r0, sl, r0
 8021bc0:	fb09 4200 	mla	r2, r9, r0, r4
 8021bc4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021bc8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021bcc:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8021bd0:	ea44 0b0b 	orr.w	fp, r4, fp
 8021bd4:	9c01      	ldr	r4, [sp, #4]
 8021bd6:	9e02      	ldr	r6, [sp, #8]
 8021bd8:	9903      	ldr	r1, [sp, #12]
 8021bda:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8021bde:	1ba4      	subs	r4, r4, r6
 8021be0:	9e01      	ldr	r6, [sp, #4]
 8021be2:	8808      	ldrh	r0, [r1, #0]
 8021be4:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8021be8:	eba6 0608 	sub.w	r6, r6, r8
 8021bec:	b2b6      	uxth	r6, r6
 8021bee:	b2a4      	uxth	r4, r4
 8021bf0:	4373      	muls	r3, r6
 8021bf2:	fb0c 3304 	mla	r3, ip, r4, r3
 8021bf6:	9c02      	ldr	r4, [sp, #8]
 8021bf8:	fb04 3505 	mla	r5, r4, r5, r3
 8021bfc:	fb08 5707 	mla	r7, r8, r7, r5
 8021c00:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021c04:	b289      	uxth	r1, r1
 8021c06:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021c0a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021c0e:	434f      	muls	r7, r1
 8021c10:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021c14:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021c18:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021c1c:	1c7b      	adds	r3, r7, #1
 8021c1e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021c22:	ea42 0e0e 	orr.w	lr, r2, lr
 8021c26:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021c2a:	fa1f f28e 	uxth.w	r2, lr
 8021c2e:	1203      	asrs	r3, r0, #8
 8021c30:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021c34:	b2ff      	uxtb	r7, r7
 8021c36:	1215      	asrs	r5, r2, #8
 8021c38:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021c3c:	fb13 f307 	smulbb	r3, r3, r7
 8021c40:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021c44:	fb05 3501 	mla	r5, r5, r1, r3
 8021c48:	10c3      	asrs	r3, r0, #3
 8021c4a:	10d4      	asrs	r4, r2, #3
 8021c4c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021c50:	fb13 f307 	smulbb	r3, r3, r7
 8021c54:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8021c58:	fb04 3401 	mla	r4, r4, r1, r3
 8021c5c:	00c3      	lsls	r3, r0, #3
 8021c5e:	00d2      	lsls	r2, r2, #3
 8021c60:	b2db      	uxtb	r3, r3
 8021c62:	fb13 f307 	smulbb	r3, r3, r7
 8021c66:	b2d2      	uxtb	r2, r2
 8021c68:	fb02 3101 	mla	r1, r2, r1, r3
 8021c6c:	b2ad      	uxth	r5, r5
 8021c6e:	b289      	uxth	r1, r1
 8021c70:	b2a4      	uxth	r4, r4
 8021c72:	1c6b      	adds	r3, r5, #1
 8021c74:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021c78:	1c62      	adds	r2, r4, #1
 8021c7a:	1c4b      	adds	r3, r1, #1
 8021c7c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021c80:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021c84:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021c88:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021c8c:	0964      	lsrs	r4, r4, #5
 8021c8e:	432b      	orrs	r3, r5
 8021c90:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021c94:	9a03      	ldr	r2, [sp, #12]
 8021c96:	4323      	orrs	r3, r4
 8021c98:	8013      	strh	r3, [r2, #0]
 8021c9a:	b005      	add	sp, #20
 8021c9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ca0:	f04f 0c00 	mov.w	ip, #0
 8021ca4:	4664      	mov	r4, ip
 8021ca6:	e6d6      	b.n	8021a56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021ca8:	2300      	movs	r3, #0
 8021caa:	469c      	mov	ip, r3
 8021cac:	461a      	mov	r2, r3
 8021cae:	461c      	mov	r4, r3
 8021cb0:	e6f8      	b.n	8021aa4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021cb2:	2300      	movs	r3, #0
 8021cb4:	461a      	mov	r2, r3
 8021cb6:	e6f5      	b.n	8021aa4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021cb8:	460b      	mov	r3, r1
 8021cba:	460a      	mov	r2, r1
 8021cbc:	e6f2      	b.n	8021aa4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021cbe:	2500      	movs	r5, #0
 8021cc0:	46ab      	mov	fp, r5
 8021cc2:	e720      	b.n	8021b06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021cc4:	2700      	movs	r7, #0
 8021cc6:	463d      	mov	r5, r7
 8021cc8:	4638      	mov	r0, r7
 8021cca:	46bb      	mov	fp, r7
 8021ccc:	e745      	b.n	8021b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021cce:	4677      	mov	r7, lr
 8021cd0:	4675      	mov	r5, lr
 8021cd2:	4670      	mov	r0, lr
 8021cd4:	46f3      	mov	fp, lr
 8021cd6:	e740      	b.n	8021b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021cd8:	2700      	movs	r7, #0
 8021cda:	4638      	mov	r0, r7
 8021cdc:	e73d      	b.n	8021b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021cde:	460f      	mov	r7, r1
 8021ce0:	4608      	mov	r0, r1
 8021ce2:	e73a      	b.n	8021b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021ce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021ce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ce8:	b097      	sub	sp, #92	@ 0x5c
 8021cea:	9214      	str	r2, [sp, #80]	@ 0x50
 8021cec:	9308      	str	r3, [sp, #32]
 8021cee:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8021cf0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8021cf4:	9312      	str	r3, [sp, #72]	@ 0x48
 8021cf6:	9111      	str	r1, [sp, #68]	@ 0x44
 8021cf8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8021cfc:	9015      	str	r0, [sp, #84]	@ 0x54
 8021cfe:	6850      	ldr	r0, [r2, #4]
 8021d00:	6812      	ldr	r2, [r2, #0]
 8021d02:	fb00 1303 	mla	r3, r0, r3, r1
 8021d06:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021d0a:	9309      	str	r3, [sp, #36]	@ 0x24
 8021d0c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021d0e:	681b      	ldr	r3, [r3, #0]
 8021d10:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021d12:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021d14:	685b      	ldr	r3, [r3, #4]
 8021d16:	930c      	str	r3, [sp, #48]	@ 0x30
 8021d18:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8021d1c:	930a      	str	r3, [sp, #40]	@ 0x28
 8021d1e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021d20:	2b00      	cmp	r3, #0
 8021d22:	dc03      	bgt.n	8021d2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021d24:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8021d26:	2b00      	cmp	r3, #0
 8021d28:	f340 83cb 	ble.w	80224c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021d2c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021d2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d32:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021d36:	1e48      	subs	r0, r1, #1
 8021d38:	1e55      	subs	r5, r2, #1
 8021d3a:	9b08      	ldr	r3, [sp, #32]
 8021d3c:	2b00      	cmp	r3, #0
 8021d3e:	f340 81a3 	ble.w	8022088 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021d42:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8021d44:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021d46:	1436      	asrs	r6, r6, #16
 8021d48:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021d4c:	d406      	bmi.n	8021d5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021d4e:	4286      	cmp	r6, r0
 8021d50:	da04      	bge.n	8021d5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021d52:	2b00      	cmp	r3, #0
 8021d54:	db02      	blt.n	8021d5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021d56:	42ab      	cmp	r3, r5
 8021d58:	f2c0 8197 	blt.w	802208a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021d5c:	3601      	adds	r6, #1
 8021d5e:	f100 8184 	bmi.w	802206a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021d62:	42b1      	cmp	r1, r6
 8021d64:	f2c0 8181 	blt.w	802206a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021d68:	3301      	adds	r3, #1
 8021d6a:	f100 817e 	bmi.w	802206a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021d6e:	429a      	cmp	r2, r3
 8021d70:	f2c0 817b 	blt.w	802206a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021d74:	9b08      	ldr	r3, [sp, #32]
 8021d76:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8021d78:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021d7a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021d7e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021d80:	2b00      	cmp	r3, #0
 8021d82:	f340 81a4 	ble.w	80220ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021d86:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021d88:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8021d8a:	1418      	asrs	r0, r3, #16
 8021d8c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021d8e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021d92:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021d94:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021d98:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021d9a:	142d      	asrs	r5, r5, #16
 8021d9c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021da0:	f100 81f8 	bmi.w	8022194 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021da4:	f102 3eff 	add.w	lr, r2, #4294967295
 8021da8:	4575      	cmp	r5, lr
 8021daa:	f280 81f3 	bge.w	8022194 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021dae:	2800      	cmp	r0, #0
 8021db0:	f2c0 81f0 	blt.w	8022194 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021db4:	f103 3eff 	add.w	lr, r3, #4294967295
 8021db8:	4570      	cmp	r0, lr
 8021dba:	f280 81eb 	bge.w	8022194 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021dbe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021dc0:	b212      	sxth	r2, r2
 8021dc2:	fb00 5002 	mla	r0, r0, r2, r5
 8021dc6:	fa1f fe81 	uxth.w	lr, r1
 8021dca:	eb03 0a00 	add.w	sl, r3, r0
 8021dce:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021dd2:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021dd6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021dda:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8021dde:	b29b      	uxth	r3, r3
 8021de0:	f1bc 0f00 	cmp.w	ip, #0
 8021de4:	f000 81b9 	beq.w	802215a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021de8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021dec:	940d      	str	r4, [sp, #52]	@ 0x34
 8021dee:	eb0a 0b02 	add.w	fp, sl, r2
 8021df2:	fa1f fa8c 	uxth.w	sl, ip
 8021df6:	fb0a fe0e 	mul.w	lr, sl, lr
 8021dfa:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021dfe:	fa1f fa8a 	uxth.w	sl, sl
 8021e02:	eba5 050e 	sub.w	r5, r5, lr
 8021e06:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021e0a:	940e      	str	r4, [sp, #56]	@ 0x38
 8021e0c:	eba3 030a 	sub.w	r3, r3, sl
 8021e10:	b2ad      	uxth	r5, r5
 8021e12:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021e14:	b29b      	uxth	r3, r3
 8021e16:	fb08 f505 	mul.w	r5, r8, r5
 8021e1a:	fb09 5303 	mla	r3, r9, r3, r5
 8021e1e:	fb0a 3304 	mla	r3, sl, r4, r3
 8021e22:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8021e24:	fb0e 3304 	mla	r3, lr, r4, r3
 8021e28:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021e2c:	2b00      	cmp	r3, #0
 8021e2e:	f000 810f 	beq.w	8022050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021e32:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021e34:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8021e38:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021e3c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021e40:	f000 8190 	beq.w	8022164 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021e44:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021e48:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021e4c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021e50:	fb09 f000 	mul.w	r0, r9, r0
 8021e54:	fb0a fe0e 	mul.w	lr, sl, lr
 8021e58:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021e5c:	f100 0b20 	add.w	fp, r0, #32
 8021e60:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021e64:	44ce      	add	lr, r9
 8021e66:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021e6a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021e6e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021e72:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8021e76:	ea4e 0909 	orr.w	r9, lr, r9
 8021e7a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8021e7e:	8868      	ldrh	r0, [r5, #2]
 8021e80:	d019      	beq.n	8021eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021e82:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021e86:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021e8a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021e8e:	fb08 f800 	mul.w	r8, r8, r0
 8021e92:	fb0a fe0e 	mul.w	lr, sl, lr
 8021e96:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021e9a:	f108 0b20 	add.w	fp, r8, #32
 8021e9e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021ea2:	4486      	add	lr, r0
 8021ea4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021ea8:	0a00      	lsrs	r0, r0, #8
 8021eaa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021eae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021eb2:	ea4e 0000 	orr.w	r0, lr, r0
 8021eb6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021eba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021ebe:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8021ec2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021ec6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021eca:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021ece:	ea4e 0909 	orr.w	r9, lr, r9
 8021ed2:	ea4a 0000 	orr.w	r0, sl, r0
 8021ed6:	f1bc 0f00 	cmp.w	ip, #0
 8021eda:	f000 8145 	beq.w	8022168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021ede:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8021ee2:	3a01      	subs	r2, #1
 8021ee4:	0052      	lsls	r2, r2, #1
 8021ee6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021ee8:	3202      	adds	r2, #2
 8021eea:	2cff      	cmp	r4, #255	@ 0xff
 8021eec:	eb05 0e02 	add.w	lr, r5, r2
 8021ef0:	5aaa      	ldrh	r2, [r5, r2]
 8021ef2:	d018      	beq.n	8021f26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021ef4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8021ef8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021efc:	fb04 fa02 	mul.w	sl, r4, r2
 8021f00:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021f04:	fb08 f805 	mul.w	r8, r8, r5
 8021f08:	f10a 0520 	add.w	r5, sl, #32
 8021f0c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021f10:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021f14:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021f18:	4442      	add	r2, r8
 8021f1a:	0a2d      	lsrs	r5, r5, #8
 8021f1c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021f20:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021f24:	432a      	orrs	r2, r5
 8021f26:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8021f28:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021f2c:	2cff      	cmp	r4, #255	@ 0xff
 8021f2e:	d01a      	beq.n	8021f66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021f30:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8021f34:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021f38:	fb04 fa05 	mul.w	sl, r4, r5
 8021f3c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021f40:	fb08 f80e 	mul.w	r8, r8, lr
 8021f44:	f10a 0e20 	add.w	lr, sl, #32
 8021f48:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021f4c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021f50:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021f54:	4445      	add	r5, r8
 8021f56:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021f5a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021f5e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021f62:	ea45 050e 	orr.w	r5, r5, lr
 8021f66:	fb1c fe01 	smulbb	lr, ip, r1
 8021f6a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021f6e:	f1cc 0810 	rsb	r8, ip, #16
 8021f72:	eba8 0801 	sub.w	r8, r8, r1
 8021f76:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021f7a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021f7e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021f82:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021f86:	4341      	muls	r1, r0
 8021f88:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021f8c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021f90:	ea4a 0202 	orr.w	r2, sl, r2
 8021f94:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021f98:	fb09 1108 	mla	r1, r9, r8, r1
 8021f9c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021fa0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8021fa4:	fb0c 1102 	mla	r1, ip, r2, r1
 8021fa8:	ea4b 0505 	orr.w	r5, fp, r5
 8021fac:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021fb0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021fb4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021fb8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021fbc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021fc0:	ea42 0e0e 	orr.w	lr, r2, lr
 8021fc4:	fa1f f28e 	uxth.w	r2, lr
 8021fc8:	2bff      	cmp	r3, #255	@ 0xff
 8021fca:	d103      	bne.n	8021fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021fcc:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8021fce:	29ff      	cmp	r1, #255	@ 0xff
 8021fd0:	f000 80de 	beq.w	8022190 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021fd4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8021fd6:	8838      	ldrh	r0, [r7, #0]
 8021fd8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021fda:	434b      	muls	r3, r1
 8021fdc:	f103 0c01 	add.w	ip, r3, #1
 8021fe0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021fe4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021fe8:	fa5f fc83 	uxtb.w	ip, r3
 8021fec:	1203      	asrs	r3, r0, #8
 8021fee:	1215      	asrs	r5, r2, #8
 8021ff0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021ff4:	fb13 f30c 	smulbb	r3, r3, ip
 8021ff8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021ffc:	fb05 3501 	mla	r5, r5, r1, r3
 8022000:	10c3      	asrs	r3, r0, #3
 8022002:	10d1      	asrs	r1, r2, #3
 8022004:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8022008:	fb13 f30c 	smulbb	r3, r3, ip
 802200c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022010:	fb01 3104 	mla	r1, r1, r4, r3
 8022014:	00c3      	lsls	r3, r0, #3
 8022016:	00d2      	lsls	r2, r2, #3
 8022018:	b2db      	uxtb	r3, r3
 802201a:	b2d2      	uxtb	r2, r2
 802201c:	fb13 f30c 	smulbb	r3, r3, ip
 8022020:	b2ad      	uxth	r5, r5
 8022022:	fb02 3304 	mla	r3, r2, r4, r3
 8022026:	b29a      	uxth	r2, r3
 8022028:	1c6b      	adds	r3, r5, #1
 802202a:	b289      	uxth	r1, r1
 802202c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022030:	1c53      	adds	r3, r2, #1
 8022032:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022036:	1c4a      	adds	r2, r1, #1
 8022038:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802203c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022040:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022044:	0949      	lsrs	r1, r1, #5
 8022046:	432b      	orrs	r3, r5
 8022048:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802204c:	430b      	orrs	r3, r1
 802204e:	803b      	strh	r3, [r7, #0]
 8022050:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8022052:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8022054:	4413      	add	r3, r2
 8022056:	9321      	str	r3, [sp, #132]	@ 0x84
 8022058:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802205a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802205c:	441a      	add	r2, r3
 802205e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8022060:	9222      	str	r2, [sp, #136]	@ 0x88
 8022062:	3b01      	subs	r3, #1
 8022064:	3702      	adds	r7, #2
 8022066:	9313      	str	r3, [sp, #76]	@ 0x4c
 8022068:	e689      	b.n	8021d7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802206a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802206c:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 802206e:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8022070:	4433      	add	r3, r6
 8022072:	9321      	str	r3, [sp, #132]	@ 0x84
 8022074:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022076:	441c      	add	r4, r3
 8022078:	9b08      	ldr	r3, [sp, #32]
 802207a:	9422      	str	r4, [sp, #136]	@ 0x88
 802207c:	3b01      	subs	r3, #1
 802207e:	9308      	str	r3, [sp, #32]
 8022080:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022082:	3302      	adds	r3, #2
 8022084:	9309      	str	r3, [sp, #36]	@ 0x24
 8022086:	e658      	b.n	8021d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022088:	d028      	beq.n	80220dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802208a:	9b08      	ldr	r3, [sp, #32]
 802208c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 802208e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8022090:	3b01      	subs	r3, #1
 8022092:	fb00 5003 	mla	r0, r0, r3, r5
 8022096:	1400      	asrs	r0, r0, #16
 8022098:	f53f ae6c 	bmi.w	8021d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802209c:	3901      	subs	r1, #1
 802209e:	4288      	cmp	r0, r1
 80220a0:	f6bf ae68 	bge.w	8021d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80220a4:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80220a6:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80220a8:	fb01 0303 	mla	r3, r1, r3, r0
 80220ac:	141b      	asrs	r3, r3, #16
 80220ae:	f53f ae61 	bmi.w	8021d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80220b2:	3a01      	subs	r2, #1
 80220b4:	4293      	cmp	r3, r2
 80220b6:	f6bf ae5d 	bge.w	8021d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80220ba:	9b08      	ldr	r3, [sp, #32]
 80220bc:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80220c0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80220c2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80220c6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80220c8:	2b00      	cmp	r3, #0
 80220ca:	f300 8082 	bgt.w	80221d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80220ce:	9b08      	ldr	r3, [sp, #32]
 80220d0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80220d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80220d6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80220da:	9309      	str	r3, [sp, #36]	@ 0x24
 80220dc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80220de:	2b00      	cmp	r3, #0
 80220e0:	f340 81ef 	ble.w	80224c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80220e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80220e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80220ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80220f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80220f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80220f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80220fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80220fe:	eef0 6a62 	vmov.f32	s13, s5
 8022102:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022106:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802210a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802210e:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8022112:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022116:	eef0 6a43 	vmov.f32	s13, s6
 802211a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802211e:	ee12 2a90 	vmov	r2, s5
 8022122:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022126:	fb92 f3f3 	sdiv	r3, r2, r3
 802212a:	ee13 2a10 	vmov	r2, s6
 802212e:	9323      	str	r3, [sp, #140]	@ 0x8c
 8022130:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022132:	fb92 f3f3 	sdiv	r3, r2, r3
 8022136:	9324      	str	r3, [sp, #144]	@ 0x90
 8022138:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802213a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802213c:	3b01      	subs	r3, #1
 802213e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022142:	9311      	str	r3, [sp, #68]	@ 0x44
 8022144:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022146:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 802214a:	bf08      	it	eq
 802214c:	4613      	moveq	r3, r2
 802214e:	9308      	str	r3, [sp, #32]
 8022150:	eeb0 3a67 	vmov.f32	s6, s15
 8022154:	eef0 2a47 	vmov.f32	s5, s14
 8022158:	e5e1      	b.n	8021d1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802215a:	fb08 f505 	mul.w	r5, r8, r5
 802215e:	fb09 5303 	mla	r3, r9, r3, r5
 8022162:	e661      	b.n	8021e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8022164:	4681      	mov	r9, r0
 8022166:	e688      	b.n	8021e7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022168:	f1c1 0210 	rsb	r2, r1, #16
 802216c:	4341      	muls	r1, r0
 802216e:	fb09 1902 	mla	r9, r9, r2, r1
 8022172:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022176:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802217a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802217e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022182:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022186:	ea42 0909 	orr.w	r9, r2, r9
 802218a:	fa1f f289 	uxth.w	r2, r9
 802218e:	e71b      	b.n	8021fc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022190:	803a      	strh	r2, [r7, #0]
 8022192:	e75d      	b.n	8022050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022194:	f115 0e01 	adds.w	lr, r5, #1
 8022198:	f53f af5a 	bmi.w	8022050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802219c:	4572      	cmp	r2, lr
 802219e:	f6ff af57 	blt.w	8022050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80221a2:	f110 0e01 	adds.w	lr, r0, #1
 80221a6:	f53f af53 	bmi.w	8022050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80221aa:	4573      	cmp	r3, lr
 80221ac:	f6ff af50 	blt.w	8022050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80221b0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80221b2:	9502      	str	r5, [sp, #8]
 80221b4:	b21b      	sxth	r3, r3
 80221b6:	b212      	sxth	r2, r2
 80221b8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80221bc:	9301      	str	r3, [sp, #4]
 80221be:	9200      	str	r2, [sp, #0]
 80221c0:	e9cd c405 	strd	ip, r4, [sp, #20]
 80221c4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 80221c8:	4639      	mov	r1, r7
 80221ca:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80221cc:	f7ff fc04 	bl	80219d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80221d0:	e73e      	b.n	8022050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80221d2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80221d4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80221d8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80221da:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80221de:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80221e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80221e4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80221e6:	141f      	asrs	r7, r3, #16
 80221e8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80221ea:	141b      	asrs	r3, r3, #16
 80221ec:	fb01 3707 	mla	r7, r1, r7, r3
 80221f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80221f2:	fa1f fc82 	uxth.w	ip, r2
 80221f6:	eb03 0a07 	add.w	sl, r3, r7
 80221fa:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80221fe:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022202:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022206:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802220a:	b29b      	uxth	r3, r3
 802220c:	2d00      	cmp	r5, #0
 802220e:	f000 813d 	beq.w	802248c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022212:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022216:	940f      	str	r4, [sp, #60]	@ 0x3c
 8022218:	eb0a 0b01 	add.w	fp, sl, r1
 802221c:	fa1f fa85 	uxth.w	sl, r5
 8022220:	fb0a fc0c 	mul.w	ip, sl, ip
 8022224:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022228:	fa1f fa8a 	uxth.w	sl, sl
 802222c:	eba0 000c 	sub.w	r0, r0, ip
 8022230:	eba3 030a 	sub.w	r3, r3, sl
 8022234:	b280      	uxth	r0, r0
 8022236:	fb08 f000 	mul.w	r0, r8, r0
 802223a:	b29b      	uxth	r3, r3
 802223c:	fb09 0303 	mla	r3, r9, r3, r0
 8022240:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8022242:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022246:	9410      	str	r4, [sp, #64]	@ 0x40
 8022248:	fb0a 3300 	mla	r3, sl, r0, r3
 802224c:	fb0c 3304 	mla	r3, ip, r4, r3
 8022250:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022254:	2b00      	cmp	r3, #0
 8022256:	f000 810b 	beq.w	8022470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802225a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802225c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802225e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8022262:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022266:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802226a:	f000 8114 	beq.w	8022496 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 802226e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8022272:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022276:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802227a:	fb09 f707 	mul.w	r7, r9, r7
 802227e:	fb0a fc0c 	mul.w	ip, sl, ip
 8022282:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022286:	f107 0b20 	add.w	fp, r7, #32
 802228a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 802228e:	44cc      	add	ip, r9
 8022290:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022294:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022298:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802229c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80222a0:	ea4c 0909 	orr.w	r9, ip, r9
 80222a4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80222a8:	8847      	ldrh	r7, [r0, #2]
 80222aa:	d019      	beq.n	80222e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80222ac:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80222b0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80222b4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80222b8:	fb08 f807 	mul.w	r8, r8, r7
 80222bc:	fb0a fc0c 	mul.w	ip, sl, ip
 80222c0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80222c4:	f108 0b20 	add.w	fp, r8, #32
 80222c8:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80222cc:	44bc      	add	ip, r7
 80222ce:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80222d2:	0a3f      	lsrs	r7, r7, #8
 80222d4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80222d8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80222dc:	ea4c 0707 	orr.w	r7, ip, r7
 80222e0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80222e4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80222e8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80222ec:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80222f0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80222f4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80222f8:	ea4c 0909 	orr.w	r9, ip, r9
 80222fc:	ea4a 0707 	orr.w	r7, sl, r7
 8022300:	2d00      	cmp	r5, #0
 8022302:	f000 80ca 	beq.w	802249a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022306:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802230a:	3901      	subs	r1, #1
 802230c:	0049      	lsls	r1, r1, #1
 802230e:	3102      	adds	r1, #2
 8022310:	eb00 0c01 	add.w	ip, r0, r1
 8022314:	5a41      	ldrh	r1, [r0, r1]
 8022316:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8022318:	28ff      	cmp	r0, #255	@ 0xff
 802231a:	d019      	beq.n	8022350 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 802231c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802231e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8022322:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022326:	fb04 fa01 	mul.w	sl, r4, r1
 802232a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802232e:	fb08 f800 	mul.w	r8, r8, r0
 8022332:	f10a 0020 	add.w	r0, sl, #32
 8022336:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802233a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802233e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022342:	4441      	add	r1, r8
 8022344:	0a00      	lsrs	r0, r0, #8
 8022346:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802234a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802234e:	4301      	orrs	r1, r0
 8022350:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8022352:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022356:	2cff      	cmp	r4, #255	@ 0xff
 8022358:	d01a      	beq.n	8022390 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802235a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 802235e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022362:	fb04 fa00 	mul.w	sl, r4, r0
 8022366:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802236a:	fb08 f80c 	mul.w	r8, r8, ip
 802236e:	f10a 0c20 	add.w	ip, sl, #32
 8022372:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022376:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802237a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802237e:	4440      	add	r0, r8
 8022380:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022384:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022388:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802238c:	ea40 000c 	orr.w	r0, r0, ip
 8022390:	fb15 fc02 	smulbb	ip, r5, r2
 8022394:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022398:	f1c5 0810 	rsb	r8, r5, #16
 802239c:	eba8 0802 	sub.w	r8, r8, r2
 80223a0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80223a4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80223a8:	437a      	muls	r2, r7
 80223aa:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80223ae:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80223b2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80223b6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80223ba:	fb09 2208 	mla	r2, r9, r8, r2
 80223be:	ea4a 0101 	orr.w	r1, sl, r1
 80223c2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80223c6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80223ca:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80223ce:	fb05 2201 	mla	r2, r5, r1, r2
 80223d2:	ea4b 0000 	orr.w	r0, fp, r0
 80223d6:	fb0c 2200 	mla	r2, ip, r0, r2
 80223da:	0d57      	lsrs	r7, r2, #21
 80223dc:	0952      	lsrs	r2, r2, #5
 80223de:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80223e2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80223e6:	433a      	orrs	r2, r7
 80223e8:	2bff      	cmp	r3, #255	@ 0xff
 80223ea:	b292      	uxth	r2, r2
 80223ec:	d102      	bne.n	80223f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80223ee:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80223f0:	29ff      	cmp	r1, #255	@ 0xff
 80223f2:	d063      	beq.n	80224bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80223f4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80223f6:	f8be 1000 	ldrh.w	r1, [lr]
 80223fa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80223fc:	4343      	muls	r3, r0
 80223fe:	1c58      	adds	r0, r3, #1
 8022400:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022404:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022408:	1208      	asrs	r0, r1, #8
 802240a:	b2db      	uxtb	r3, r3
 802240c:	1215      	asrs	r5, r2, #8
 802240e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022412:	fb10 f003 	smulbb	r0, r0, r3
 8022416:	10cf      	asrs	r7, r1, #3
 8022418:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802241c:	00c9      	lsls	r1, r1, #3
 802241e:	fb05 0504 	mla	r5, r5, r4, r0
 8022422:	b2c9      	uxtb	r1, r1
 8022424:	10d0      	asrs	r0, r2, #3
 8022426:	00d2      	lsls	r2, r2, #3
 8022428:	fb11 f103 	smulbb	r1, r1, r3
 802242c:	b2d2      	uxtb	r2, r2
 802242e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8022432:	fb02 1204 	mla	r2, r2, r4, r1
 8022436:	fb17 f703 	smulbb	r7, r7, r3
 802243a:	b2ad      	uxth	r5, r5
 802243c:	b292      	uxth	r2, r2
 802243e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8022442:	fb00 7004 	mla	r0, r0, r4, r7
 8022446:	1c6b      	adds	r3, r5, #1
 8022448:	1c57      	adds	r7, r2, #1
 802244a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802244e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022452:	b280      	uxth	r0, r0
 8022454:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022458:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802245c:	433d      	orrs	r5, r7
 802245e:	1c47      	adds	r7, r0, #1
 8022460:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022464:	097f      	lsrs	r7, r7, #5
 8022466:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802246a:	433d      	orrs	r5, r7
 802246c:	f8ae 5000 	strh.w	r5, [lr]
 8022470:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8022472:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8022474:	4413      	add	r3, r2
 8022476:	9321      	str	r3, [sp, #132]	@ 0x84
 8022478:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802247a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802247c:	441a      	add	r2, r3
 802247e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8022480:	9222      	str	r2, [sp, #136]	@ 0x88
 8022482:	3b01      	subs	r3, #1
 8022484:	f10e 0e02 	add.w	lr, lr, #2
 8022488:	9313      	str	r3, [sp, #76]	@ 0x4c
 802248a:	e61c      	b.n	80220c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802248c:	fb08 f000 	mul.w	r0, r8, r0
 8022490:	fb09 0303 	mla	r3, r9, r3, r0
 8022494:	e6dc      	b.n	8022250 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022496:	46b9      	mov	r9, r7
 8022498:	e704      	b.n	80222a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 802249a:	f1c2 0110 	rsb	r1, r2, #16
 802249e:	437a      	muls	r2, r7
 80224a0:	fb09 2901 	mla	r9, r9, r1, r2
 80224a4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80224a8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80224ac:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80224b0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80224b4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80224b8:	4302      	orrs	r2, r0
 80224ba:	e795      	b.n	80223e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80224bc:	f8ae 2000 	strh.w	r2, [lr]
 80224c0:	e7d6      	b.n	8022470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80224c2:	b017      	add	sp, #92	@ 0x5c
 80224c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080224c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80224c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80224cc:	b085      	sub	sp, #20
 80224ce:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 80224d2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80224d6:	9103      	str	r1, [sp, #12]
 80224d8:	fb00 7406 	mla	r4, r0, r6, r7
 80224dc:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80224e0:	2800      	cmp	r0, #0
 80224e2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 80224e6:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 80224ea:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 80224ee:	9501      	str	r5, [sp, #4]
 80224f0:	eb02 0904 	add.w	r9, r2, r4
 80224f4:	f2c0 8141 	blt.w	802277a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80224f8:	4583      	cmp	fp, r0
 80224fa:	f340 813e 	ble.w	802277a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80224fe:	2f00      	cmp	r7, #0
 8022500:	f2c0 8137 	blt.w	8022772 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022504:	42be      	cmp	r6, r7
 8022506:	f340 8134 	ble.w	8022772 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802250a:	f812 c004 	ldrb.w	ip, [r2, r4]
 802250e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022512:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022516:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802251a:	4355      	muls	r5, r2
 802251c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022520:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8022524:	fb0c f203 	mul.w	r2, ip, r3
 8022528:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802252c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8022530:	441d      	add	r5, r3
 8022532:	f102 0320 	add.w	r3, r2, #32
 8022536:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802253a:	0a1b      	lsrs	r3, r3, #8
 802253c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022540:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022544:	431c      	orrs	r4, r3
 8022546:	1c7b      	adds	r3, r7, #1
 8022548:	f100 811c 	bmi.w	8022784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802254c:	429e      	cmp	r6, r3
 802254e:	f340 8119 	ble.w	8022784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022552:	2900      	cmp	r1, #0
 8022554:	f000 8119 	beq.w	802278a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022558:	9a01      	ldr	r2, [sp, #4]
 802255a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802255e:	8855      	ldrh	r5, [r2, #2]
 8022560:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022564:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8022568:	fb08 f802 	mul.w	r8, r8, r2
 802256c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022570:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8022574:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022578:	435d      	muls	r5, r3
 802257a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802257e:	44d0      	add	r8, sl
 8022580:	f105 0a20 	add.w	sl, r5, #32
 8022584:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022588:	0a2d      	lsrs	r5, r5, #8
 802258a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802258e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022592:	432a      	orrs	r2, r5
 8022594:	3001      	adds	r0, #1
 8022596:	f100 80fe 	bmi.w	8022796 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802259a:	4583      	cmp	fp, r0
 802259c:	f340 80fb 	ble.w	8022796 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80225a0:	f1be 0f00 	cmp.w	lr, #0
 80225a4:	f000 80fc 	beq.w	80227a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80225a8:	2f00      	cmp	r7, #0
 80225aa:	f2c0 80f1 	blt.w	8022790 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80225ae:	42be      	cmp	r6, r7
 80225b0:	f340 80ee 	ble.w	8022790 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80225b4:	9801      	ldr	r0, [sp, #4]
 80225b6:	f819 5006 	ldrb.w	r5, [r9, r6]
 80225ba:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80225be:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80225c2:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 80225c6:	fb0a fa00 	mul.w	sl, sl, r0
 80225ca:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 80225ce:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80225d2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80225d6:	fb05 f808 	mul.w	r8, r5, r8
 80225da:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 80225de:	4482      	add	sl, r0
 80225e0:	f108 0020 	add.w	r0, r8, #32
 80225e4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80225e8:	0a00      	lsrs	r0, r0, #8
 80225ea:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80225ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80225f2:	ea4b 0b00 	orr.w	fp, fp, r0
 80225f6:	3701      	adds	r7, #1
 80225f8:	f100 80d7 	bmi.w	80227aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80225fc:	42be      	cmp	r6, r7
 80225fe:	f340 80d4 	ble.w	80227aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022602:	2900      	cmp	r1, #0
 8022604:	f000 80d4 	beq.w	80227b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022608:	3601      	adds	r6, #1
 802260a:	9801      	ldr	r0, [sp, #4]
 802260c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022610:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022614:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022618:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 802261c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022620:	fb09 f906 	mul.w	r9, r9, r6
 8022624:	fb07 f800 	mul.w	r8, r7, r0
 8022628:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 802262c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022630:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8022634:	44d1      	add	r9, sl
 8022636:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802263a:	f108 0020 	add.w	r0, r8, #32
 802263e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022642:	0a00      	lsrs	r0, r0, #8
 8022644:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022648:	4330      	orrs	r0, r6
 802264a:	b28e      	uxth	r6, r1
 802264c:	fa1f f98e 	uxth.w	r9, lr
 8022650:	fb06 f809 	mul.w	r8, r6, r9
 8022654:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022658:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802265c:	0136      	lsls	r6, r6, #4
 802265e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022662:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8022666:	9601      	str	r6, [sp, #4]
 8022668:	ea4a 0404 	orr.w	r4, sl, r4
 802266c:	fa1f f689 	uxth.w	r6, r9
 8022670:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022674:	fb11 f90e 	smulbb	r9, r1, lr
 8022678:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802267c:	9602      	str	r6, [sp, #8]
 802267e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022682:	4626      	mov	r6, r4
 8022684:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022688:	f1ce 0410 	rsb	r4, lr, #16
 802268c:	1a64      	subs	r4, r4, r1
 802268e:	ea4a 0202 	orr.w	r2, sl, r2
 8022692:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022696:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802269a:	434a      	muls	r2, r1
 802269c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80226a0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80226a4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80226a8:	fb04 2406 	mla	r4, r4, r6, r2
 80226ac:	ea4a 0000 	orr.w	r0, sl, r0
 80226b0:	fb09 4200 	mla	r2, r9, r0, r4
 80226b4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80226b8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80226bc:	9801      	ldr	r0, [sp, #4]
 80226be:	9903      	ldr	r1, [sp, #12]
 80226c0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80226c4:	ea44 0b0b 	orr.w	fp, r4, fp
 80226c8:	9c02      	ldr	r4, [sp, #8]
 80226ca:	8809      	ldrh	r1, [r1, #0]
 80226cc:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 80226d0:	1b00      	subs	r0, r0, r4
 80226d2:	9c01      	ldr	r4, [sp, #4]
 80226d4:	eba4 0608 	sub.w	r6, r4, r8
 80226d8:	b2b6      	uxth	r6, r6
 80226da:	b280      	uxth	r0, r0
 80226dc:	4373      	muls	r3, r6
 80226de:	fb0c 3300 	mla	r3, ip, r0, r3
 80226e2:	9802      	ldr	r0, [sp, #8]
 80226e4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80226e8:	fb00 3505 	mla	r5, r0, r5, r3
 80226ec:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80226f0:	fb08 5707 	mla	r7, r8, r7, r5
 80226f4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80226f8:	120b      	asrs	r3, r1, #8
 80226fa:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80226fe:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022702:	b2ff      	uxtb	r7, r7
 8022704:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022708:	10c8      	asrs	r0, r1, #3
 802270a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802270e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8022712:	00c9      	lsls	r1, r1, #3
 8022714:	437b      	muls	r3, r7
 8022716:	ea42 0e0e 	orr.w	lr, r2, lr
 802271a:	b2c9      	uxtb	r1, r1
 802271c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8022720:	fa1f f28e 	uxth.w	r2, lr
 8022724:	4378      	muls	r0, r7
 8022726:	434f      	muls	r7, r1
 8022728:	1c59      	adds	r1, r3, #1
 802272a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802272e:	1213      	asrs	r3, r2, #8
 8022730:	f023 0307 	bic.w	r3, r3, #7
 8022734:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022738:	1c41      	adds	r1, r0, #1
 802273a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802273e:	10d1      	asrs	r1, r2, #3
 8022740:	f021 0103 	bic.w	r1, r1, #3
 8022744:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022748:	021b      	lsls	r3, r3, #8
 802274a:	00c9      	lsls	r1, r1, #3
 802274c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022750:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8022754:	430b      	orrs	r3, r1
 8022756:	1c79      	adds	r1, r7, #1
 8022758:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 802275c:	00d2      	lsls	r2, r2, #3
 802275e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8022762:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022766:	431a      	orrs	r2, r3
 8022768:	9b03      	ldr	r3, [sp, #12]
 802276a:	801a      	strh	r2, [r3, #0]
 802276c:	b005      	add	sp, #20
 802276e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022772:	f04f 0c00 	mov.w	ip, #0
 8022776:	4664      	mov	r4, ip
 8022778:	e6e5      	b.n	8022546 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802277a:	2300      	movs	r3, #0
 802277c:	469c      	mov	ip, r3
 802277e:	461a      	mov	r2, r3
 8022780:	461c      	mov	r4, r3
 8022782:	e707      	b.n	8022594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022784:	2300      	movs	r3, #0
 8022786:	461a      	mov	r2, r3
 8022788:	e704      	b.n	8022594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802278a:	460b      	mov	r3, r1
 802278c:	460a      	mov	r2, r1
 802278e:	e701      	b.n	8022594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022790:	2500      	movs	r5, #0
 8022792:	46ab      	mov	fp, r5
 8022794:	e72f      	b.n	80225f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8022796:	2700      	movs	r7, #0
 8022798:	463d      	mov	r5, r7
 802279a:	4638      	mov	r0, r7
 802279c:	46bb      	mov	fp, r7
 802279e:	e754      	b.n	802264a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80227a0:	4677      	mov	r7, lr
 80227a2:	4675      	mov	r5, lr
 80227a4:	4670      	mov	r0, lr
 80227a6:	46f3      	mov	fp, lr
 80227a8:	e74f      	b.n	802264a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80227aa:	2700      	movs	r7, #0
 80227ac:	4638      	mov	r0, r7
 80227ae:	e74c      	b.n	802264a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80227b0:	460f      	mov	r7, r1
 80227b2:	4608      	mov	r0, r1
 80227b4:	e749      	b.n	802264a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080227b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80227b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80227bc:	b093      	sub	sp, #76	@ 0x4c
 80227be:	9210      	str	r2, [sp, #64]	@ 0x40
 80227c0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80227c2:	910e      	str	r1, [sp, #56]	@ 0x38
 80227c4:	9306      	str	r3, [sp, #24]
 80227c6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80227ca:	9011      	str	r0, [sp, #68]	@ 0x44
 80227cc:	6850      	ldr	r0, [r2, #4]
 80227ce:	6812      	ldr	r2, [r2, #0]
 80227d0:	fb00 1303 	mla	r3, r0, r3, r1
 80227d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80227d8:	9307      	str	r3, [sp, #28]
 80227da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80227dc:	681b      	ldr	r3, [r3, #0]
 80227de:	9308      	str	r3, [sp, #32]
 80227e0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80227e2:	685b      	ldr	r3, [r3, #4]
 80227e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80227e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80227e8:	2b00      	cmp	r3, #0
 80227ea:	dc03      	bgt.n	80227f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80227ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80227ee:	2b00      	cmp	r3, #0
 80227f0:	f340 83b4 	ble.w	8022f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80227f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80227f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80227fa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80227fe:	1e48      	subs	r0, r1, #1
 8022800:	1e55      	subs	r5, r2, #1
 8022802:	9b06      	ldr	r3, [sp, #24]
 8022804:	2b00      	cmp	r3, #0
 8022806:	f340 8163 	ble.w	8022ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802280a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 802280c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802280e:	1436      	asrs	r6, r6, #16
 8022810:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022814:	d406      	bmi.n	8022824 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022816:	4286      	cmp	r6, r0
 8022818:	da04      	bge.n	8022824 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802281a:	2b00      	cmp	r3, #0
 802281c:	db02      	blt.n	8022824 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802281e:	42ab      	cmp	r3, r5
 8022820:	f2c0 8157 	blt.w	8022ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8022824:	3601      	adds	r6, #1
 8022826:	f100 8144 	bmi.w	8022ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802282a:	42b1      	cmp	r1, r6
 802282c:	f2c0 8141 	blt.w	8022ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022830:	3301      	adds	r3, #1
 8022832:	f100 813e 	bmi.w	8022ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022836:	429a      	cmp	r2, r3
 8022838:	f2c0 813b 	blt.w	8022ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802283c:	9b06      	ldr	r3, [sp, #24]
 802283e:	9f07      	ldr	r7, [sp, #28]
 8022840:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022842:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8022846:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8022848:	2b00      	cmp	r3, #0
 802284a:	f340 8164 	ble.w	8022b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802284e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022850:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8022852:	1418      	asrs	r0, r3, #16
 8022854:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022856:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802285a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802285c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022860:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022862:	142d      	asrs	r5, r5, #16
 8022864:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022868:	f100 81ee 	bmi.w	8022c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802286c:	f102 3eff 	add.w	lr, r2, #4294967295
 8022870:	4575      	cmp	r5, lr
 8022872:	f280 81e9 	bge.w	8022c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022876:	2800      	cmp	r0, #0
 8022878:	f2c0 81e6 	blt.w	8022c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802287c:	f103 3eff 	add.w	lr, r3, #4294967295
 8022880:	4570      	cmp	r0, lr
 8022882:	f280 81e1 	bge.w	8022c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022886:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022888:	b212      	sxth	r2, r2
 802288a:	fb00 5002 	mla	r0, r0, r2, r5
 802288e:	fa1f fe81 	uxth.w	lr, r1
 8022892:	eb03 0a00 	add.w	sl, r3, r0
 8022896:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802289a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802289e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80228a2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80228a6:	b29b      	uxth	r3, r3
 80228a8:	f1bc 0f00 	cmp.w	ip, #0
 80228ac:	f000 8179 	beq.w	8022ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80228b0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80228b4:	940a      	str	r4, [sp, #40]	@ 0x28
 80228b6:	eb0a 0b02 	add.w	fp, sl, r2
 80228ba:	fa1f fa8c 	uxth.w	sl, ip
 80228be:	fb0a fe0e 	mul.w	lr, sl, lr
 80228c2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80228c6:	fa1f fa8a 	uxth.w	sl, sl
 80228ca:	eba5 050e 	sub.w	r5, r5, lr
 80228ce:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80228d2:	940b      	str	r4, [sp, #44]	@ 0x2c
 80228d4:	eba3 030a 	sub.w	r3, r3, sl
 80228d8:	b2ad      	uxth	r5, r5
 80228da:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80228dc:	b29b      	uxth	r3, r3
 80228de:	fb08 f505 	mul.w	r5, r8, r5
 80228e2:	fb09 5303 	mla	r3, r9, r3, r5
 80228e6:	fb0a 3304 	mla	r3, sl, r4, r3
 80228ea:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80228ec:	fb0e 3304 	mla	r3, lr, r4, r3
 80228f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80228f4:	2b00      	cmp	r3, #0
 80228f6:	f000 80cf 	beq.w	8022a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80228fa:	9c08      	ldr	r4, [sp, #32]
 80228fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8022900:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022904:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022908:	f000 8150 	beq.w	8022bac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802290c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8022910:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022914:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022918:	fb09 f000 	mul.w	r0, r9, r0
 802291c:	fb0a fe0e 	mul.w	lr, sl, lr
 8022920:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022924:	f100 0b20 	add.w	fp, r0, #32
 8022928:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 802292c:	44ce      	add	lr, r9
 802292e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022932:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022936:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802293a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 802293e:	ea4e 0909 	orr.w	r9, lr, r9
 8022942:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8022946:	8868      	ldrh	r0, [r5, #2]
 8022948:	d019      	beq.n	802297e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802294a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 802294e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022952:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022956:	fb08 f800 	mul.w	r8, r8, r0
 802295a:	fb0a fe0e 	mul.w	lr, sl, lr
 802295e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022962:	f108 0b20 	add.w	fp, r8, #32
 8022966:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 802296a:	4486      	add	lr, r0
 802296c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022970:	0a00      	lsrs	r0, r0, #8
 8022972:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022976:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802297a:	ea4e 0000 	orr.w	r0, lr, r0
 802297e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022982:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022986:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802298a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 802298e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022992:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022996:	ea4e 0909 	orr.w	r9, lr, r9
 802299a:	ea4a 0000 	orr.w	r0, sl, r0
 802299e:	f1bc 0f00 	cmp.w	ip, #0
 80229a2:	f000 8105 	beq.w	8022bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80229a6:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80229aa:	3a01      	subs	r2, #1
 80229ac:	0052      	lsls	r2, r2, #1
 80229ae:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80229b0:	3202      	adds	r2, #2
 80229b2:	2cff      	cmp	r4, #255	@ 0xff
 80229b4:	eb05 0e02 	add.w	lr, r5, r2
 80229b8:	5aaa      	ldrh	r2, [r5, r2]
 80229ba:	d018      	beq.n	80229ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80229bc:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 80229c0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80229c4:	fb04 fa02 	mul.w	sl, r4, r2
 80229c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80229cc:	fb08 f805 	mul.w	r8, r8, r5
 80229d0:	f10a 0520 	add.w	r5, sl, #32
 80229d4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80229d8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80229dc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80229e0:	4442      	add	r2, r8
 80229e2:	0a2d      	lsrs	r5, r5, #8
 80229e4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80229e8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80229ec:	432a      	orrs	r2, r5
 80229ee:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80229f0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80229f4:	2cff      	cmp	r4, #255	@ 0xff
 80229f6:	d01a      	beq.n	8022a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80229f8:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 80229fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022a00:	fb04 fa05 	mul.w	sl, r4, r5
 8022a04:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022a08:	fb08 f80e 	mul.w	r8, r8, lr
 8022a0c:	f10a 0e20 	add.w	lr, sl, #32
 8022a10:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022a14:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022a18:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022a1c:	4445      	add	r5, r8
 8022a1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022a22:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022a26:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8022a2a:	ea45 050e 	orr.w	r5, r5, lr
 8022a2e:	fb1c fe01 	smulbb	lr, ip, r1
 8022a32:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022a36:	f1cc 0810 	rsb	r8, ip, #16
 8022a3a:	eba8 0801 	sub.w	r8, r8, r1
 8022a3e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022a42:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022a46:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022a4a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022a4e:	4341      	muls	r1, r0
 8022a50:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022a54:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022a58:	ea4a 0202 	orr.w	r2, sl, r2
 8022a5c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022a60:	fb09 1108 	mla	r1, r9, r8, r1
 8022a64:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022a68:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8022a6c:	fb0c 1102 	mla	r1, ip, r2, r1
 8022a70:	ea4b 0505 	orr.w	r5, fp, r5
 8022a74:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022a78:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022a7c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022a80:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022a84:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8022a88:	ea42 0e0e 	orr.w	lr, r2, lr
 8022a8c:	fa1f f28e 	uxth.w	r2, lr
 8022a90:	2bff      	cmp	r3, #255	@ 0xff
 8022a92:	f040 80a1 	bne.w	8022bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8022a96:	803a      	strh	r2, [r7, #0]
 8022a98:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022a9a:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8022a9c:	4413      	add	r3, r2
 8022a9e:	931d      	str	r3, [sp, #116]	@ 0x74
 8022aa0:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022aa2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022aa4:	441a      	add	r2, r3
 8022aa6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8022aa8:	921e      	str	r2, [sp, #120]	@ 0x78
 8022aaa:	3b01      	subs	r3, #1
 8022aac:	3702      	adds	r7, #2
 8022aae:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022ab0:	e6c9      	b.n	8022846 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022ab2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022ab4:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8022ab6:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 8022ab8:	4433      	add	r3, r6
 8022aba:	931d      	str	r3, [sp, #116]	@ 0x74
 8022abc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022abe:	441c      	add	r4, r3
 8022ac0:	9b06      	ldr	r3, [sp, #24]
 8022ac2:	941e      	str	r4, [sp, #120]	@ 0x78
 8022ac4:	3b01      	subs	r3, #1
 8022ac6:	9306      	str	r3, [sp, #24]
 8022ac8:	9b07      	ldr	r3, [sp, #28]
 8022aca:	3302      	adds	r3, #2
 8022acc:	9307      	str	r3, [sp, #28]
 8022ace:	e698      	b.n	8022802 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022ad0:	d028      	beq.n	8022b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022ad2:	9b06      	ldr	r3, [sp, #24]
 8022ad4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8022ad6:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8022ad8:	3b01      	subs	r3, #1
 8022ada:	fb00 5003 	mla	r0, r0, r3, r5
 8022ade:	1400      	asrs	r0, r0, #16
 8022ae0:	f53f aeac 	bmi.w	802283c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022ae4:	3901      	subs	r1, #1
 8022ae6:	4288      	cmp	r0, r1
 8022ae8:	f6bf aea8 	bge.w	802283c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022aec:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8022aee:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022af0:	fb01 0303 	mla	r3, r1, r3, r0
 8022af4:	141b      	asrs	r3, r3, #16
 8022af6:	f53f aea1 	bmi.w	802283c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022afa:	3a01      	subs	r2, #1
 8022afc:	4293      	cmp	r3, r2
 8022afe:	f6bf ae9d 	bge.w	802283c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022b02:	9b06      	ldr	r3, [sp, #24]
 8022b04:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022b08:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022b0a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8022b0e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8022b10:	2b00      	cmp	r3, #0
 8022b12:	f300 80b6 	bgt.w	8022c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8022b16:	9b06      	ldr	r3, [sp, #24]
 8022b18:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022b1c:	9b07      	ldr	r3, [sp, #28]
 8022b1e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022b22:	9307      	str	r3, [sp, #28]
 8022b24:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022b26:	2b00      	cmp	r3, #0
 8022b28:	f340 8218 	ble.w	8022f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022b2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022b30:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022b34:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022b38:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022b3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022b3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022b42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022b46:	eef0 6a62 	vmov.f32	s13, s5
 8022b4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022b4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b52:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022b56:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8022b5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022b5e:	eef0 6a43 	vmov.f32	s13, s6
 8022b62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022b66:	ee12 2a90 	vmov	r2, s5
 8022b6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022b6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b72:	ee13 2a10 	vmov	r2, s6
 8022b76:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022b78:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022b7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b7e:	9320      	str	r3, [sp, #128]	@ 0x80
 8022b80:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022b82:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8022b84:	3b01      	subs	r3, #1
 8022b86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b8a:	930e      	str	r3, [sp, #56]	@ 0x38
 8022b8c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022b8e:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8022b92:	bf08      	it	eq
 8022b94:	4613      	moveq	r3, r2
 8022b96:	9306      	str	r3, [sp, #24]
 8022b98:	eeb0 3a67 	vmov.f32	s6, s15
 8022b9c:	eef0 2a47 	vmov.f32	s5, s14
 8022ba0:	e621      	b.n	80227e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022ba2:	fb08 f505 	mul.w	r5, r8, r5
 8022ba6:	fb09 5303 	mla	r3, r9, r3, r5
 8022baa:	e6a1      	b.n	80228f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8022bac:	4681      	mov	r9, r0
 8022bae:	e6c8      	b.n	8022942 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022bb0:	f1c1 0210 	rsb	r2, r1, #16
 8022bb4:	4341      	muls	r1, r0
 8022bb6:	fb09 1902 	mla	r9, r9, r2, r1
 8022bba:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022bbe:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022bc2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022bc6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022bca:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022bce:	ea42 0909 	orr.w	r9, r2, r9
 8022bd2:	fa1f f289 	uxth.w	r2, r9
 8022bd6:	e75b      	b.n	8022a90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022bd8:	f8b7 c000 	ldrh.w	ip, [r7]
 8022bdc:	43db      	mvns	r3, r3
 8022bde:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022be2:	fa5f fe83 	uxtb.w	lr, r3
 8022be6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022bea:	fb00 f00e 	mul.w	r0, r0, lr
 8022bee:	1c41      	adds	r1, r0, #1
 8022bf0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022bf4:	1211      	asrs	r1, r2, #8
 8022bf6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8022bfa:	f021 0107 	bic.w	r1, r1, #7
 8022bfe:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022c02:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8022c06:	48d7      	ldr	r0, [pc, #860]	@ (8022f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022c08:	fb05 f50e 	mul.w	r5, r5, lr
 8022c0c:	b2c9      	uxtb	r1, r1
 8022c0e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022c12:	1c69      	adds	r1, r5, #1
 8022c14:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022c18:	10d1      	asrs	r1, r2, #3
 8022c1a:	f021 0103 	bic.w	r1, r1, #3
 8022c1e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022c22:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022c26:	b2db      	uxtb	r3, r3
 8022c28:	00c9      	lsls	r1, r1, #3
 8022c2a:	fb03 f30e 	mul.w	r3, r3, lr
 8022c2e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022c32:	4301      	orrs	r1, r0
 8022c34:	1c58      	adds	r0, r3, #1
 8022c36:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022c3a:	00d2      	lsls	r2, r2, #3
 8022c3c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022c40:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022c44:	430a      	orrs	r2, r1
 8022c46:	e726      	b.n	8022a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8022c48:	f115 0e01 	adds.w	lr, r5, #1
 8022c4c:	f53f af24 	bmi.w	8022a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022c50:	4572      	cmp	r2, lr
 8022c52:	f6ff af21 	blt.w	8022a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022c56:	f110 0e01 	adds.w	lr, r0, #1
 8022c5a:	f53f af1d 	bmi.w	8022a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022c5e:	4573      	cmp	r3, lr
 8022c60:	f6ff af1a 	blt.w	8022a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022c64:	b21b      	sxth	r3, r3
 8022c66:	b212      	sxth	r2, r2
 8022c68:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8022c6c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022c70:	9301      	str	r3, [sp, #4]
 8022c72:	9200      	str	r2, [sp, #0]
 8022c74:	4639      	mov	r1, r7
 8022c76:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8022c7a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8022c7c:	f7ff fc24 	bl	80224c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022c80:	e70a      	b.n	8022a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022c82:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022c84:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022c88:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022c8a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022c8e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022c90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c94:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022c96:	141f      	asrs	r7, r3, #16
 8022c98:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022c9a:	141b      	asrs	r3, r3, #16
 8022c9c:	fb01 3707 	mla	r7, r1, r7, r3
 8022ca0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022ca2:	fa1f fc82 	uxth.w	ip, r2
 8022ca6:	eb03 0a07 	add.w	sl, r3, r7
 8022caa:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022cae:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022cb2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022cb6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8022cba:	b29b      	uxth	r3, r3
 8022cbc:	2d00      	cmp	r5, #0
 8022cbe:	f000 80fe 	beq.w	8022ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022cc2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022cc6:	940c      	str	r4, [sp, #48]	@ 0x30
 8022cc8:	eb0a 0b01 	add.w	fp, sl, r1
 8022ccc:	fa1f fa85 	uxth.w	sl, r5
 8022cd0:	fb0a fc0c 	mul.w	ip, sl, ip
 8022cd4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022cd8:	fa1f fa8a 	uxth.w	sl, sl
 8022cdc:	eba0 000c 	sub.w	r0, r0, ip
 8022ce0:	eba3 030a 	sub.w	r3, r3, sl
 8022ce4:	b280      	uxth	r0, r0
 8022ce6:	fb08 f000 	mul.w	r0, r8, r0
 8022cea:	b29b      	uxth	r3, r3
 8022cec:	fb09 0303 	mla	r3, r9, r3, r0
 8022cf0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8022cf2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022cf6:	940d      	str	r4, [sp, #52]	@ 0x34
 8022cf8:	fb0a 3300 	mla	r3, sl, r0, r3
 8022cfc:	fb0c 3304 	mla	r3, ip, r4, r3
 8022d00:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022d04:	2b00      	cmp	r3, #0
 8022d06:	f000 80cc 	beq.w	8022ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022d0a:	9808      	ldr	r0, [sp, #32]
 8022d0c:	9c08      	ldr	r4, [sp, #32]
 8022d0e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8022d12:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022d16:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022d1a:	f000 80d5 	beq.w	8022ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022d1e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8022d22:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022d26:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022d2a:	fb09 f707 	mul.w	r7, r9, r7
 8022d2e:	fb0a fc0c 	mul.w	ip, sl, ip
 8022d32:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022d36:	f107 0b20 	add.w	fp, r7, #32
 8022d3a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8022d3e:	44cc      	add	ip, r9
 8022d40:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022d44:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022d48:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022d4c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8022d50:	ea4c 0909 	orr.w	r9, ip, r9
 8022d54:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8022d58:	8847      	ldrh	r7, [r0, #2]
 8022d5a:	d019      	beq.n	8022d90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022d5c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8022d60:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022d64:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022d68:	fb08 f807 	mul.w	r8, r8, r7
 8022d6c:	fb0a fc0c 	mul.w	ip, sl, ip
 8022d70:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022d74:	f108 0b20 	add.w	fp, r8, #32
 8022d78:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8022d7c:	44bc      	add	ip, r7
 8022d7e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022d82:	0a3f      	lsrs	r7, r7, #8
 8022d84:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022d88:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022d8c:	ea4c 0707 	orr.w	r7, ip, r7
 8022d90:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022d94:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022d98:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8022d9c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022da0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022da4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8022da8:	ea4c 0909 	orr.w	r9, ip, r9
 8022dac:	ea4a 0707 	orr.w	r7, sl, r7
 8022db0:	2d00      	cmp	r5, #0
 8022db2:	f000 808b 	beq.w	8022ecc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022db6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8022dba:	3901      	subs	r1, #1
 8022dbc:	0049      	lsls	r1, r1, #1
 8022dbe:	3102      	adds	r1, #2
 8022dc0:	eb00 0c01 	add.w	ip, r0, r1
 8022dc4:	5a41      	ldrh	r1, [r0, r1]
 8022dc6:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8022dc8:	28ff      	cmp	r0, #255	@ 0xff
 8022dca:	d019      	beq.n	8022e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8022dcc:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8022dce:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8022dd2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022dd6:	fb04 fa01 	mul.w	sl, r4, r1
 8022dda:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022dde:	fb08 f800 	mul.w	r8, r8, r0
 8022de2:	f10a 0020 	add.w	r0, sl, #32
 8022de6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022dea:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022dee:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022df2:	4441      	add	r1, r8
 8022df4:	0a00      	lsrs	r0, r0, #8
 8022df6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022dfa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022dfe:	4301      	orrs	r1, r0
 8022e00:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022e02:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022e06:	2cff      	cmp	r4, #255	@ 0xff
 8022e08:	d01a      	beq.n	8022e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8022e0a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8022e0e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022e12:	fb04 fa00 	mul.w	sl, r4, r0
 8022e16:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022e1a:	fb08 f80c 	mul.w	r8, r8, ip
 8022e1e:	f10a 0c20 	add.w	ip, sl, #32
 8022e22:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022e26:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022e2a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022e2e:	4440      	add	r0, r8
 8022e30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022e34:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022e38:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022e3c:	ea40 000c 	orr.w	r0, r0, ip
 8022e40:	fb15 fc02 	smulbb	ip, r5, r2
 8022e44:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022e48:	f1c5 0810 	rsb	r8, r5, #16
 8022e4c:	eba8 0802 	sub.w	r8, r8, r2
 8022e50:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022e54:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022e58:	437a      	muls	r2, r7
 8022e5a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022e5e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022e62:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022e66:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022e6a:	fb09 2208 	mla	r2, r9, r8, r2
 8022e6e:	ea4a 0101 	orr.w	r1, sl, r1
 8022e72:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022e76:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022e7a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022e7e:	fb05 2201 	mla	r2, r5, r1, r2
 8022e82:	ea4b 0000 	orr.w	r0, fp, r0
 8022e86:	fb0c 2200 	mla	r2, ip, r0, r2
 8022e8a:	0d57      	lsrs	r7, r2, #21
 8022e8c:	0952      	lsrs	r2, r2, #5
 8022e8e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022e92:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022e96:	433a      	orrs	r2, r7
 8022e98:	2bff      	cmp	r3, #255	@ 0xff
 8022e9a:	b292      	uxth	r2, r2
 8022e9c:	d127      	bne.n	8022eee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8022e9e:	f8ae 2000 	strh.w	r2, [lr]
 8022ea2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022ea4:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8022ea6:	4413      	add	r3, r2
 8022ea8:	931d      	str	r3, [sp, #116]	@ 0x74
 8022eaa:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022eac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022eae:	441a      	add	r2, r3
 8022eb0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8022eb2:	921e      	str	r2, [sp, #120]	@ 0x78
 8022eb4:	3b01      	subs	r3, #1
 8022eb6:	f10e 0e02 	add.w	lr, lr, #2
 8022eba:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022ebc:	e627      	b.n	8022b0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022ebe:	fb08 f000 	mul.w	r0, r8, r0
 8022ec2:	fb09 0303 	mla	r3, r9, r3, r0
 8022ec6:	e71b      	b.n	8022d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022ec8:	46b9      	mov	r9, r7
 8022eca:	e743      	b.n	8022d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8022ecc:	f1c2 0110 	rsb	r1, r2, #16
 8022ed0:	437a      	muls	r2, r7
 8022ed2:	fb09 2901 	mla	r9, r9, r1, r2
 8022ed6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022eda:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022ede:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022ee2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022ee6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022eea:	4302      	orrs	r2, r0
 8022eec:	e7d4      	b.n	8022e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022eee:	f8be 7000 	ldrh.w	r7, [lr]
 8022ef2:	4c1c      	ldr	r4, [pc, #112]	@ (8022f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022ef4:	43db      	mvns	r3, r3
 8022ef6:	1238      	asrs	r0, r7, #8
 8022ef8:	fa5f fc83 	uxtb.w	ip, r3
 8022efc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022f00:	10fd      	asrs	r5, r7, #3
 8022f02:	fb00 f00c 	mul.w	r0, r0, ip
 8022f06:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8022f0a:	fb05 f10c 	mul.w	r1, r5, ip
 8022f0e:	1c45      	adds	r5, r0, #1
 8022f10:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022f14:	1215      	asrs	r5, r2, #8
 8022f16:	f025 0507 	bic.w	r5, r5, #7
 8022f1a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022f1e:	1c4d      	adds	r5, r1, #1
 8022f20:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022f24:	10d1      	asrs	r1, r2, #3
 8022f26:	f021 0103 	bic.w	r1, r1, #3
 8022f2a:	00fb      	lsls	r3, r7, #3
 8022f2c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022f30:	b2db      	uxtb	r3, r3
 8022f32:	b2c0      	uxtb	r0, r0
 8022f34:	00c9      	lsls	r1, r1, #3
 8022f36:	fb03 f30c 	mul.w	r3, r3, ip
 8022f3a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022f3e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022f42:	4308      	orrs	r0, r1
 8022f44:	1c59      	adds	r1, r3, #1
 8022f46:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022f4a:	00d2      	lsls	r2, r2, #3
 8022f4c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022f50:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022f54:	4318      	orrs	r0, r3
 8022f56:	f8ae 0000 	strh.w	r0, [lr]
 8022f5a:	e7a2      	b.n	8022ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022f5c:	b013      	add	sp, #76	@ 0x4c
 8022f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f62:	bf00      	nop
 8022f64:	fffff800 	.word	0xfffff800

08022f68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022f68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022f6c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8022f70:	fb05 4c03 	mla	ip, r5, r3, r4
 8022f74:	2d00      	cmp	r5, #0
 8022f76:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022f7a:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8022f7e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8022f82:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8022f86:	8808      	ldrh	r0, [r1, #0]
 8022f88:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022f8c:	f2c0 80a7 	blt.w	80230de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022f90:	45aa      	cmp	sl, r5
 8022f92:	f340 80a4 	ble.w	80230de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022f96:	2c00      	cmp	r4, #0
 8022f98:	f2c0 809f 	blt.w	80230da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022f9c:	42a3      	cmp	r3, r4
 8022f9e:	f340 809c 	ble.w	80230da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022fa2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022fa6:	1c62      	adds	r2, r4, #1
 8022fa8:	f100 809c 	bmi.w	80230e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022fac:	4293      	cmp	r3, r2
 8022fae:	f340 8099 	ble.w	80230e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022fb2:	f1b9 0f00 	cmp.w	r9, #0
 8022fb6:	f000 8095 	beq.w	80230e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022fba:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022fbe:	3501      	adds	r5, #1
 8022fc0:	f100 8094 	bmi.w	80230ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022fc4:	45aa      	cmp	sl, r5
 8022fc6:	f340 8091 	ble.w	80230ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022fca:	2f00      	cmp	r7, #0
 8022fcc:	f000 808e 	beq.w	80230ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022fd0:	2c00      	cmp	r4, #0
 8022fd2:	f2c0 8089 	blt.w	80230e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022fd6:	42a3      	cmp	r3, r4
 8022fd8:	f340 8086 	ble.w	80230e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022fdc:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022fe0:	3401      	adds	r4, #1
 8022fe2:	f100 8086 	bmi.w	80230f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022fe6:	42a3      	cmp	r3, r4
 8022fe8:	f340 8083 	ble.w	80230f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022fec:	f1b9 0f00 	cmp.w	r9, #0
 8022ff0:	d07f      	beq.n	80230f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022ff2:	3301      	adds	r3, #1
 8022ff4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022ff8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022ffc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8023000:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8023004:	fb19 fe07 	smulbb	lr, r9, r7
 8023008:	ea44 0808 	orr.w	r8, r4, r8
 802300c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023010:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8023014:	f1c7 0210 	rsb	r2, r7, #16
 8023018:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 802301c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8023020:	ea44 0c0c 	orr.w	ip, r4, ip
 8023024:	eba2 0209 	sub.w	r2, r2, r9
 8023028:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 802302c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023030:	fb04 f40c 	mul.w	r4, r4, ip
 8023034:	fb02 4808 	mla	r8, r2, r8, r4
 8023038:	041a      	lsls	r2, r3, #16
 802303a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802303e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8023042:	4313      	orrs	r3, r2
 8023044:	042a      	lsls	r2, r5, #16
 8023046:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802304a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 802304e:	fb0e 8303 	mla	r3, lr, r3, r8
 8023052:	432a      	orrs	r2, r5
 8023054:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8023058:	fb07 3202 	mla	r2, r7, r2, r3
 802305c:	0d53      	lsrs	r3, r2, #21
 802305e:	0952      	lsrs	r2, r2, #5
 8023060:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023064:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8023068:	431a      	orrs	r2, r3
 802306a:	b293      	uxth	r3, r2
 802306c:	b2b4      	uxth	r4, r6
 802306e:	1202      	asrs	r2, r0, #8
 8023070:	43f6      	mvns	r6, r6
 8023072:	b2f6      	uxtb	r6, r6
 8023074:	121d      	asrs	r5, r3, #8
 8023076:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802307a:	fb12 f206 	smulbb	r2, r2, r6
 802307e:	10c7      	asrs	r7, r0, #3
 8023080:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8023084:	00c0      	lsls	r0, r0, #3
 8023086:	fb05 2504 	mla	r5, r5, r4, r2
 802308a:	b2c0      	uxtb	r0, r0
 802308c:	10da      	asrs	r2, r3, #3
 802308e:	00db      	lsls	r3, r3, #3
 8023090:	b2db      	uxtb	r3, r3
 8023092:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8023096:	fb10 f006 	smulbb	r0, r0, r6
 802309a:	b2ad      	uxth	r5, r5
 802309c:	fb03 0004 	mla	r0, r3, r4, r0
 80230a0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80230a4:	fb17 f706 	smulbb	r7, r7, r6
 80230a8:	b280      	uxth	r0, r0
 80230aa:	1c6b      	adds	r3, r5, #1
 80230ac:	fb02 7204 	mla	r2, r2, r4, r7
 80230b0:	b292      	uxth	r2, r2
 80230b2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80230b6:	1c43      	adds	r3, r0, #1
 80230b8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80230bc:	1c50      	adds	r0, r2, #1
 80230be:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80230c2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80230c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80230ca:	0952      	lsrs	r2, r2, #5
 80230cc:	432b      	orrs	r3, r5
 80230ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80230d2:	4313      	orrs	r3, r2
 80230d4:	800b      	strh	r3, [r1, #0]
 80230d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80230da:	4680      	mov	r8, r0
 80230dc:	e763      	b.n	8022fa6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80230de:	4684      	mov	ip, r0
 80230e0:	4680      	mov	r8, r0
 80230e2:	e76c      	b.n	8022fbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80230e4:	4684      	mov	ip, r0
 80230e6:	e76a      	b.n	8022fbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80230e8:	4605      	mov	r5, r0
 80230ea:	e779      	b.n	8022fe0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80230ec:	4603      	mov	r3, r0
 80230ee:	4605      	mov	r5, r0
 80230f0:	e782      	b.n	8022ff8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80230f2:	4603      	mov	r3, r0
 80230f4:	e780      	b.n	8022ff8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080230f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80230f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80230fa:	b093      	sub	sp, #76	@ 0x4c
 80230fc:	461d      	mov	r5, r3
 80230fe:	9210      	str	r2, [sp, #64]	@ 0x40
 8023100:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8023102:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8023106:	920b      	str	r2, [sp, #44]	@ 0x2c
 8023108:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 802310c:	910a      	str	r1, [sp, #40]	@ 0x28
 802310e:	6859      	ldr	r1, [r3, #4]
 8023110:	681b      	ldr	r3, [r3, #0]
 8023112:	9011      	str	r0, [sp, #68]	@ 0x44
 8023114:	fb01 2707 	mla	r7, r1, r7, r2
 8023118:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802311c:	9307      	str	r3, [sp, #28]
 802311e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023120:	681b      	ldr	r3, [r3, #0]
 8023122:	9309      	str	r3, [sp, #36]	@ 0x24
 8023124:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8023126:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802312a:	43db      	mvns	r3, r3
 802312c:	b2db      	uxtb	r3, r3
 802312e:	9308      	str	r3, [sp, #32]
 8023130:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023132:	2b00      	cmp	r3, #0
 8023134:	dc03      	bgt.n	802313e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023136:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8023138:	2b00      	cmp	r3, #0
 802313a:	f340 8203 	ble.w	8023544 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802313e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023140:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023144:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023148:	1e48      	subs	r0, r1, #1
 802314a:	f102 3cff 	add.w	ip, r2, #4294967295
 802314e:	2d00      	cmp	r5, #0
 8023150:	f340 80da 	ble.w	8023308 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023154:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023158:	ea4f 4326 	mov.w	r3, r6, asr #16
 802315c:	d406      	bmi.n	802316c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802315e:	4586      	cmp	lr, r0
 8023160:	da04      	bge.n	802316c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023162:	2b00      	cmp	r3, #0
 8023164:	db02      	blt.n	802316c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023166:	4563      	cmp	r3, ip
 8023168:	f2c0 80cf 	blt.w	802330a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802316c:	f11e 0e01 	adds.w	lr, lr, #1
 8023170:	f100 80c1 	bmi.w	80232f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023174:	4571      	cmp	r1, lr
 8023176:	f2c0 80be 	blt.w	80232f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802317a:	3301      	adds	r3, #1
 802317c:	f100 80bb 	bmi.w	80232f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023180:	429a      	cmp	r2, r3
 8023182:	f2c0 80b8 	blt.w	80232f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023186:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802318a:	46a9      	mov	r9, r5
 802318c:	f1b9 0f00 	cmp.w	r9, #0
 8023190:	f340 80d8 	ble.w	8023344 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8023194:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023196:	1421      	asrs	r1, r4, #16
 8023198:	ea4f 4026 	mov.w	r0, r6, asr #16
 802319c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80231a0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80231a4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80231a8:	f100 8111 	bmi.w	80233ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80231ac:	f10e 3aff 	add.w	sl, lr, #4294967295
 80231b0:	4551      	cmp	r1, sl
 80231b2:	f280 810c 	bge.w	80233ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80231b6:	2800      	cmp	r0, #0
 80231b8:	f2c0 8109 	blt.w	80233ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80231bc:	f103 3aff 	add.w	sl, r3, #4294967295
 80231c0:	4550      	cmp	r0, sl
 80231c2:	f280 8104 	bge.w	80233ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80231c6:	fa0f f38e 	sxth.w	r3, lr
 80231ca:	fb00 1103 	mla	r1, r0, r3, r1
 80231ce:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80231d0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80231d4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80231d8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80231dc:	f1bc 0f00 	cmp.w	ip, #0
 80231e0:	d007      	beq.n	80231f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80231e2:	005b      	lsls	r3, r3, #1
 80231e4:	eb0a 0003 	add.w	r0, sl, r3
 80231e8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80231ec:	930c      	str	r3, [sp, #48]	@ 0x30
 80231ee:	8843      	ldrh	r3, [r0, #2]
 80231f0:	930d      	str	r3, [sp, #52]	@ 0x34
 80231f2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80231f6:	fb12 f30c 	smulbb	r3, r2, ip
 80231fa:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80231fe:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023202:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8023206:	10db      	asrs	r3, r3, #3
 8023208:	ea40 000e 	orr.w	r0, r0, lr
 802320c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023210:	f1cc 0e10 	rsb	lr, ip, #16
 8023214:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8023218:	ebae 0e02 	sub.w	lr, lr, r2
 802321c:	ea4a 0101 	orr.w	r1, sl, r1
 8023220:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023224:	4351      	muls	r1, r2
 8023226:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8023228:	9f08      	ldr	r7, [sp, #32]
 802322a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802322e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023232:	0410      	lsls	r0, r2, #16
 8023234:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8023238:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802323c:	4310      	orrs	r0, r2
 802323e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8023240:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8023242:	0412      	lsls	r2, r2, #16
 8023244:	fb03 e000 	mla	r0, r3, r0, lr
 8023248:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802324c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8023250:	ea42 020e 	orr.w	r2, r2, lr
 8023254:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023258:	fb03 0302 	mla	r3, r3, r2, r0
 802325c:	0d5a      	lsrs	r2, r3, #21
 802325e:	095b      	lsrs	r3, r3, #5
 8023260:	f8b8 0000 	ldrh.w	r0, [r8]
 8023264:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023268:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802326c:	4313      	orrs	r3, r2
 802326e:	b29b      	uxth	r3, r3
 8023270:	1201      	asrs	r1, r0, #8
 8023272:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8023276:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802327a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802327e:	fb11 f107 	smulbb	r1, r1, r7
 8023282:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8023286:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802328a:	00c0      	lsls	r0, r0, #3
 802328c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023290:	b2c0      	uxtb	r0, r0
 8023292:	10d9      	asrs	r1, r3, #3
 8023294:	00db      	lsls	r3, r3, #3
 8023296:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 802329a:	b2db      	uxtb	r3, r3
 802329c:	fb10 f007 	smulbb	r0, r0, r7
 80232a0:	fa1f fc8c 	uxth.w	ip, ip
 80232a4:	fb03 0302 	mla	r3, r3, r2, r0
 80232a8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80232ac:	fb1e fe07 	smulbb	lr, lr, r7
 80232b0:	fb01 e102 	mla	r1, r1, r2, lr
 80232b4:	b29a      	uxth	r2, r3
 80232b6:	f10c 0301 	add.w	r3, ip, #1
 80232ba:	b289      	uxth	r1, r1
 80232bc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80232c0:	1c53      	adds	r3, r2, #1
 80232c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80232c6:	1c4a      	adds	r2, r1, #1
 80232c8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80232cc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80232d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80232d4:	0949      	lsrs	r1, r1, #5
 80232d6:	ea43 030c 	orr.w	r3, r3, ip
 80232da:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80232de:	430b      	orrs	r3, r1
 80232e0:	f8a8 3000 	strh.w	r3, [r8]
 80232e4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80232e6:	441c      	add	r4, r3
 80232e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80232ea:	f108 0802 	add.w	r8, r8, #2
 80232ee:	441e      	add	r6, r3
 80232f0:	f109 39ff 	add.w	r9, r9, #4294967295
 80232f4:	e74a      	b.n	802318c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80232f6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80232f8:	441c      	add	r4, r3
 80232fa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80232fc:	441e      	add	r6, r3
 80232fe:	9b07      	ldr	r3, [sp, #28]
 8023300:	3302      	adds	r3, #2
 8023302:	3d01      	subs	r5, #1
 8023304:	9307      	str	r3, [sp, #28]
 8023306:	e722      	b.n	802314e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023308:	d022      	beq.n	8023350 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802330a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802330c:	1e6b      	subs	r3, r5, #1
 802330e:	fb00 4003 	mla	r0, r0, r3, r4
 8023312:	1400      	asrs	r0, r0, #16
 8023314:	f53f af37 	bmi.w	8023186 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023318:	3901      	subs	r1, #1
 802331a:	4288      	cmp	r0, r1
 802331c:	f6bf af33 	bge.w	8023186 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023320:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8023322:	fb01 6303 	mla	r3, r1, r3, r6
 8023326:	141b      	asrs	r3, r3, #16
 8023328:	f53f af2d 	bmi.w	8023186 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802332c:	3a01      	subs	r2, #1
 802332e:	4293      	cmp	r3, r2
 8023330:	f6bf af29 	bge.w	8023186 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023334:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023338:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 802333c:	46a8      	mov	r8, r5
 802333e:	f1b8 0f00 	cmp.w	r8, #0
 8023342:	dc5e      	bgt.n	8023402 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023344:	9b07      	ldr	r3, [sp, #28]
 8023346:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802334a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802334e:	9307      	str	r3, [sp, #28]
 8023350:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023352:	2b00      	cmp	r3, #0
 8023354:	f340 80f6 	ble.w	8023544 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023358:	ee30 0a04 	vadd.f32	s0, s0, s8
 802335c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023360:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023364:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8023366:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802336a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802336e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023372:	eef0 6a62 	vmov.f32	s13, s5
 8023376:	ee61 7a27 	vmul.f32	s15, s2, s15
 802337a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802337e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023382:	ee16 4a90 	vmov	r4, s13
 8023386:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802338a:	eef0 6a43 	vmov.f32	s13, s6
 802338e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023392:	ee12 2a90 	vmov	r2, s5
 8023396:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802339a:	fb92 f3f3 	sdiv	r3, r2, r3
 802339e:	ee13 2a10 	vmov	r2, s6
 80233a2:	931f      	str	r3, [sp, #124]	@ 0x7c
 80233a4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80233a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80233aa:	9320      	str	r3, [sp, #128]	@ 0x80
 80233ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80233ae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80233b0:	3b01      	subs	r3, #1
 80233b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80233b6:	930a      	str	r3, [sp, #40]	@ 0x28
 80233b8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80233ba:	ee16 6a90 	vmov	r6, s13
 80233be:	bf14      	ite	ne
 80233c0:	461d      	movne	r5, r3
 80233c2:	4615      	moveq	r5, r2
 80233c4:	eeb0 3a67 	vmov.f32	s6, s15
 80233c8:	eef0 2a47 	vmov.f32	s5, s14
 80233cc:	e6b0      	b.n	8023130 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80233ce:	f111 0a01 	adds.w	sl, r1, #1
 80233d2:	d487      	bmi.n	80232e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80233d4:	45d6      	cmp	lr, sl
 80233d6:	db85      	blt.n	80232e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80233d8:	f110 0a01 	adds.w	sl, r0, #1
 80233dc:	d482      	bmi.n	80232e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80233de:	4553      	cmp	r3, sl
 80233e0:	db80      	blt.n	80232e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80233e2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80233e4:	9101      	str	r1, [sp, #4]
 80233e6:	b21b      	sxth	r3, r3
 80233e8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80233ec:	9300      	str	r3, [sp, #0]
 80233ee:	e9cd c704 	strd	ip, r7, [sp, #16]
 80233f2:	fa0f f38e 	sxth.w	r3, lr
 80233f6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80233f8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80233fa:	4641      	mov	r1, r8
 80233fc:	f7ff fdb4 	bl	8022f68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023400:	e770      	b.n	80232e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023402:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023404:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8023406:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802340a:	1430      	asrs	r0, r6, #16
 802340c:	1423      	asrs	r3, r4, #16
 802340e:	fb01 3000 	mla	r0, r1, r0, r3
 8023412:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023414:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023418:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 802341c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023420:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023424:	8858      	ldrh	r0, [r3, #2]
 8023426:	f1be 0f00 	cmp.w	lr, #0
 802342a:	d00b      	beq.n	8023444 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802342c:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8023430:	3901      	subs	r1, #1
 8023432:	0049      	lsls	r1, r1, #1
 8023434:	3102      	adds	r1, #2
 8023436:	eb03 0b01 	add.w	fp, r3, r1
 802343a:	5a5b      	ldrh	r3, [r3, r1]
 802343c:	930e      	str	r3, [sp, #56]	@ 0x38
 802343e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023442:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023444:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023448:	fb12 f30e 	smulbb	r3, r2, lr
 802344c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8023450:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023454:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8023458:	10db      	asrs	r3, r3, #3
 802345a:	ea41 010c 	orr.w	r1, r1, ip
 802345e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8023462:	f1ce 0c10 	rsb	ip, lr, #16
 8023466:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802346a:	ebac 0c02 	sub.w	ip, ip, r2
 802346e:	ea4b 0000 	orr.w	r0, fp, r0
 8023472:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023476:	4350      	muls	r0, r2
 8023478:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802347a:	9f08      	ldr	r7, [sp, #32]
 802347c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023480:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023484:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023488:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 802348c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802348e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8023490:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8023494:	0412      	lsls	r2, r2, #16
 8023496:	ea4b 0101 	orr.w	r1, fp, r1
 802349a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802349e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80234a2:	fb03 c101 	mla	r1, r3, r1, ip
 80234a6:	4302      	orrs	r2, r0
 80234a8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80234ac:	fb03 1202 	mla	r2, r3, r2, r1
 80234b0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80234b4:	0952      	lsrs	r2, r2, #5
 80234b6:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 80234ba:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80234be:	f8b9 2000 	ldrh.w	r2, [r9]
 80234c2:	ea4b 0303 	orr.w	r3, fp, r3
 80234c6:	b29b      	uxth	r3, r3
 80234c8:	1211      	asrs	r1, r2, #8
 80234ca:	1218      	asrs	r0, r3, #8
 80234cc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80234d0:	fb11 f107 	smulbb	r1, r1, r7
 80234d4:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80234d8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80234dc:	00d2      	lsls	r2, r2, #3
 80234de:	fb00 100a 	mla	r0, r0, sl, r1
 80234e2:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80234e6:	10d9      	asrs	r1, r3, #3
 80234e8:	b2d2      	uxtb	r2, r2
 80234ea:	00db      	lsls	r3, r3, #3
 80234ec:	fb1c fc07 	smulbb	ip, ip, r7
 80234f0:	fb12 f207 	smulbb	r2, r2, r7
 80234f4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80234f8:	b2db      	uxtb	r3, r3
 80234fa:	b280      	uxth	r0, r0
 80234fc:	fb01 c10a 	mla	r1, r1, sl, ip
 8023500:	fb03 230a 	mla	r3, r3, sl, r2
 8023504:	b29b      	uxth	r3, r3
 8023506:	b289      	uxth	r1, r1
 8023508:	1c42      	adds	r2, r0, #1
 802350a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802350e:	f101 0c01 	add.w	ip, r1, #1
 8023512:	1c5a      	adds	r2, r3, #1
 8023514:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023518:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802351c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802351e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8023522:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023526:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802352a:	4310      	orrs	r0, r2
 802352c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8023530:	441c      	add	r4, r3
 8023532:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023534:	ea40 000c 	orr.w	r0, r0, ip
 8023538:	f829 0b02 	strh.w	r0, [r9], #2
 802353c:	441e      	add	r6, r3
 802353e:	f108 38ff 	add.w	r8, r8, #4294967295
 8023542:	e6fc      	b.n	802333e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023544:	b013      	add	sp, #76	@ 0x4c
 8023546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802354a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802354a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802354e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023552:	fb0e 4703 	mla	r7, lr, r3, r4
 8023556:	f1be 0f00 	cmp.w	lr, #0
 802355a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 802355e:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8023562:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8023566:	8808      	ldrh	r0, [r1, #0]
 8023568:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 802356c:	db60      	blt.n	8023630 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802356e:	45f1      	cmp	r9, lr
 8023570:	dd5e      	ble.n	8023630 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023572:	2c00      	cmp	r4, #0
 8023574:	db5a      	blt.n	802362c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023576:	42a3      	cmp	r3, r4
 8023578:	dd58      	ble.n	802362c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802357a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 802357e:	1c62      	adds	r2, r4, #1
 8023580:	d459      	bmi.n	8023636 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023582:	4293      	cmp	r3, r2
 8023584:	dd57      	ble.n	8023636 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023586:	2d00      	cmp	r5, #0
 8023588:	d055      	beq.n	8023636 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802358a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802358e:	f11e 0e01 	adds.w	lr, lr, #1
 8023592:	d454      	bmi.n	802363e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023594:	45f1      	cmp	r9, lr
 8023596:	dd52      	ble.n	802363e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023598:	2e00      	cmp	r6, #0
 802359a:	d050      	beq.n	802363e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802359c:	2c00      	cmp	r4, #0
 802359e:	db4c      	blt.n	802363a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80235a0:	42a3      	cmp	r3, r4
 80235a2:	dd4a      	ble.n	802363a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80235a4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80235a8:	3401      	adds	r4, #1
 80235aa:	d405      	bmi.n	80235b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80235ac:	42a3      	cmp	r3, r4
 80235ae:	dd03      	ble.n	80235b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80235b0:	b115      	cbz	r5, 80235b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80235b2:	3301      	adds	r3, #1
 80235b4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80235b8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80235bc:	fb15 f406 	smulbb	r4, r5, r6
 80235c0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80235c4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80235c8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80235cc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80235d0:	ea43 0c0c 	orr.w	ip, r3, ip
 80235d4:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80235d8:	f1c6 0310 	rsb	r3, r6, #16
 80235dc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80235e0:	1b5b      	subs	r3, r3, r5
 80235e2:	ea4e 0707 	orr.w	r7, lr, r7
 80235e6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80235ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80235ee:	437d      	muls	r5, r7
 80235f0:	fb03 5c0c 	mla	ip, r3, ip, r5
 80235f4:	0403      	lsls	r3, r0, #16
 80235f6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80235fa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80235fe:	4318      	orrs	r0, r3
 8023600:	0413      	lsls	r3, r2, #16
 8023602:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8023606:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802360a:	4313      	orrs	r3, r2
 802360c:	fb04 c000 	mla	r0, r4, r0, ip
 8023610:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023614:	fb06 0003 	mla	r0, r6, r3, r0
 8023618:	0d43      	lsrs	r3, r0, #21
 802361a:	0940      	lsrs	r0, r0, #5
 802361c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023620:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8023624:	4318      	orrs	r0, r3
 8023626:	8008      	strh	r0, [r1, #0]
 8023628:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802362c:	4684      	mov	ip, r0
 802362e:	e7a6      	b.n	802357e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023630:	4607      	mov	r7, r0
 8023632:	4684      	mov	ip, r0
 8023634:	e7ab      	b.n	802358e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023636:	4607      	mov	r7, r0
 8023638:	e7a9      	b.n	802358e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802363a:	4602      	mov	r2, r0
 802363c:	e7b4      	b.n	80235a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 802363e:	4602      	mov	r2, r0
 8023640:	e7ba      	b.n	80235b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08023642 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023642:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023646:	b08f      	sub	sp, #60	@ 0x3c
 8023648:	461d      	mov	r5, r3
 802364a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802364c:	920c      	str	r2, [sp, #48]	@ 0x30
 802364e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8023652:	9107      	str	r1, [sp, #28]
 8023654:	6859      	ldr	r1, [r3, #4]
 8023656:	681b      	ldr	r3, [r3, #0]
 8023658:	900d      	str	r0, [sp, #52]	@ 0x34
 802365a:	fb01 2707 	mla	r7, r1, r7, r2
 802365e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8023662:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023664:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8023668:	f8d3 8000 	ldr.w	r8, [r3]
 802366c:	9b07      	ldr	r3, [sp, #28]
 802366e:	2b00      	cmp	r3, #0
 8023670:	dc03      	bgt.n	802367a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023672:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8023674:	2b00      	cmp	r3, #0
 8023676:	f340 8181 	ble.w	802397c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802367a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802367c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023680:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023684:	1e48      	subs	r0, r1, #1
 8023686:	f102 3cff 	add.w	ip, r2, #4294967295
 802368a:	2d00      	cmp	r5, #0
 802368c:	f340 809b 	ble.w	80237c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023690:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023694:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023698:	d406      	bmi.n	80236a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802369a:	4586      	cmp	lr, r0
 802369c:	da04      	bge.n	80236a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802369e:	2b00      	cmp	r3, #0
 80236a0:	db02      	blt.n	80236a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80236a2:	4563      	cmp	r3, ip
 80236a4:	f2c0 8090 	blt.w	80237c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80236a8:	f11e 0e01 	adds.w	lr, lr, #1
 80236ac:	f100 8084 	bmi.w	80237b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80236b0:	4571      	cmp	r1, lr
 80236b2:	f2c0 8081 	blt.w	80237b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80236b6:	3301      	adds	r3, #1
 80236b8:	d47e      	bmi.n	80237b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80236ba:	429a      	cmp	r2, r3
 80236bc:	db7c      	blt.n	80237b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80236be:	46aa      	mov	sl, r5
 80236c0:	46b9      	mov	r9, r7
 80236c2:	f1ba 0f00 	cmp.w	sl, #0
 80236c6:	f340 8099 	ble.w	80237fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80236ca:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80236cc:	1421      	asrs	r1, r4, #16
 80236ce:	ea4f 4026 	mov.w	r0, r6, asr #16
 80236d2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80236d6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80236da:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80236de:	f100 80d0 	bmi.w	8023882 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80236e2:	f10e 3bff 	add.w	fp, lr, #4294967295
 80236e6:	4559      	cmp	r1, fp
 80236e8:	f280 80cb 	bge.w	8023882 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80236ec:	2800      	cmp	r0, #0
 80236ee:	f2c0 80c8 	blt.w	8023882 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80236f2:	f103 3bff 	add.w	fp, r3, #4294967295
 80236f6:	4558      	cmp	r0, fp
 80236f8:	f280 80c3 	bge.w	8023882 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80236fc:	fa0f fe8e 	sxth.w	lr, lr
 8023700:	fb00 110e 	mla	r1, r0, lr, r1
 8023704:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023708:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802370c:	8841      	ldrh	r1, [r0, #2]
 802370e:	f1bc 0f00 	cmp.w	ip, #0
 8023712:	d00b      	beq.n	802372c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023714:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 8023718:	3b01      	subs	r3, #1
 802371a:	005b      	lsls	r3, r3, #1
 802371c:	3302      	adds	r3, #2
 802371e:	eb00 0e03 	add.w	lr, r0, r3
 8023722:	5ac3      	ldrh	r3, [r0, r3]
 8023724:	9308      	str	r3, [sp, #32]
 8023726:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802372a:	9309      	str	r3, [sp, #36]	@ 0x24
 802372c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023730:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8023734:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8023738:	ea40 000b 	orr.w	r0, r0, fp
 802373c:	fb12 f30c 	smulbb	r3, r2, ip
 8023740:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023744:	10db      	asrs	r3, r3, #3
 8023746:	f1cc 0e10 	rsb	lr, ip, #16
 802374a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802374e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8023752:	ebae 0e02 	sub.w	lr, lr, r2
 8023756:	ea4b 0101 	orr.w	r1, fp, r1
 802375a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802375e:	4351      	muls	r1, r2
 8023760:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023762:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023766:	fb0e 1e00 	mla	lr, lr, r0, r1
 802376a:	0410      	lsls	r0, r2, #16
 802376c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8023770:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8023774:	4310      	orrs	r0, r2
 8023776:	9a08      	ldr	r2, [sp, #32]
 8023778:	9908      	ldr	r1, [sp, #32]
 802377a:	0412      	lsls	r2, r2, #16
 802377c:	fb03 e000 	mla	r0, r3, r0, lr
 8023780:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8023784:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8023788:	ea42 020e 	orr.w	r2, r2, lr
 802378c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023790:	fb03 0302 	mla	r3, r3, r2, r0
 8023794:	0d5a      	lsrs	r2, r3, #21
 8023796:	095b      	lsrs	r3, r3, #5
 8023798:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802379c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80237a0:	4313      	orrs	r3, r2
 80237a2:	f8a9 3000 	strh.w	r3, [r9]
 80237a6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80237a8:	441c      	add	r4, r3
 80237aa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80237ac:	f109 0902 	add.w	r9, r9, #2
 80237b0:	441e      	add	r6, r3
 80237b2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80237b6:	e784      	b.n	80236c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80237b8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80237ba:	441c      	add	r4, r3
 80237bc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80237be:	3d01      	subs	r5, #1
 80237c0:	441e      	add	r6, r3
 80237c2:	3702      	adds	r7, #2
 80237c4:	e761      	b.n	802368a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80237c6:	d01d      	beq.n	8023804 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80237c8:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80237ca:	1e6b      	subs	r3, r5, #1
 80237cc:	fb00 4003 	mla	r0, r0, r3, r4
 80237d0:	1400      	asrs	r0, r0, #16
 80237d2:	f53f af74 	bmi.w	80236be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80237d6:	3901      	subs	r1, #1
 80237d8:	4288      	cmp	r0, r1
 80237da:	f6bf af70 	bge.w	80236be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80237de:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80237e0:	fb01 6303 	mla	r3, r1, r3, r6
 80237e4:	141b      	asrs	r3, r3, #16
 80237e6:	f53f af6a 	bmi.w	80236be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80237ea:	3a01      	subs	r2, #1
 80237ec:	4293      	cmp	r3, r2
 80237ee:	f6bf af66 	bge.w	80236be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80237f2:	46a9      	mov	r9, r5
 80237f4:	46ba      	mov	sl, r7
 80237f6:	f1b9 0f00 	cmp.w	r9, #0
 80237fa:	dc5a      	bgt.n	80238b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 80237fc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023800:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8023804:	9b07      	ldr	r3, [sp, #28]
 8023806:	2b00      	cmp	r3, #0
 8023808:	f340 80b8 	ble.w	802397c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802380c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023810:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023814:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023818:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802381a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802381e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023822:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023826:	eef0 6a62 	vmov.f32	s13, s5
 802382a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802382e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023832:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023836:	ee16 4a90 	vmov	r4, s13
 802383a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802383e:	eef0 6a43 	vmov.f32	s13, s6
 8023842:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023846:	ee12 2a90 	vmov	r2, s5
 802384a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802384e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023852:	ee13 2a10 	vmov	r2, s6
 8023856:	931b      	str	r3, [sp, #108]	@ 0x6c
 8023858:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802385a:	fb92 f3f3 	sdiv	r3, r2, r3
 802385e:	931c      	str	r3, [sp, #112]	@ 0x70
 8023860:	9b07      	ldr	r3, [sp, #28]
 8023862:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8023864:	3b01      	subs	r3, #1
 8023866:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802386a:	9307      	str	r3, [sp, #28]
 802386c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802386e:	ee16 6a90 	vmov	r6, s13
 8023872:	bf14      	ite	ne
 8023874:	461d      	movne	r5, r3
 8023876:	4615      	moveq	r5, r2
 8023878:	eeb0 3a67 	vmov.f32	s6, s15
 802387c:	eef0 2a47 	vmov.f32	s5, s14
 8023880:	e6f4      	b.n	802366c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8023882:	f111 0b01 	adds.w	fp, r1, #1
 8023886:	d48e      	bmi.n	80237a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023888:	45de      	cmp	lr, fp
 802388a:	db8c      	blt.n	80237a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802388c:	f110 0b01 	adds.w	fp, r0, #1
 8023890:	d489      	bmi.n	80237a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023892:	455b      	cmp	r3, fp
 8023894:	db87      	blt.n	80237a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023896:	b21b      	sxth	r3, r3
 8023898:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802389c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80238a0:	9300      	str	r3, [sp, #0]
 80238a2:	4642      	mov	r2, r8
 80238a4:	fa0f f38e 	sxth.w	r3, lr
 80238a8:	4649      	mov	r1, r9
 80238aa:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80238ac:	f7ff fe4d 	bl	802354a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80238b0:	e779      	b.n	80237a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80238b2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80238b4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80238b8:	1420      	asrs	r0, r4, #16
 80238ba:	1431      	asrs	r1, r6, #16
 80238bc:	fb03 0101 	mla	r1, r3, r1, r0
 80238c0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80238c4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80238c8:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80238cc:	8841      	ldrh	r1, [r0, #2]
 80238ce:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80238d2:	f1be 0f00 	cmp.w	lr, #0
 80238d6:	d00b      	beq.n	80238f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80238d8:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 80238dc:	3b01      	subs	r3, #1
 80238de:	005b      	lsls	r3, r3, #1
 80238e0:	3302      	adds	r3, #2
 80238e2:	eb00 0b03 	add.w	fp, r0, r3
 80238e6:	5ac3      	ldrh	r3, [r0, r3]
 80238e8:	930a      	str	r3, [sp, #40]	@ 0x28
 80238ea:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80238ee:	930b      	str	r3, [sp, #44]	@ 0x2c
 80238f0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80238f4:	fb12 f30e 	smulbb	r3, r2, lr
 80238f8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80238fc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023900:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8023904:	10db      	asrs	r3, r3, #3
 8023906:	ea40 000c 	orr.w	r0, r0, ip
 802390a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802390e:	f1ce 0c10 	rsb	ip, lr, #16
 8023912:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8023916:	ebac 0c02 	sub.w	ip, ip, r2
 802391a:	ea4b 0101 	orr.w	r1, fp, r1
 802391e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023922:	4351      	muls	r1, r2
 8023924:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023926:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802392a:	fb0c 1c00 	mla	ip, ip, r0, r1
 802392e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023932:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 8023936:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8023938:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802393a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802393e:	0412      	lsls	r2, r2, #16
 8023940:	ea4b 0000 	orr.w	r0, fp, r0
 8023944:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8023948:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 802394c:	fb03 c000 	mla	r0, r3, r0, ip
 8023950:	ea42 0b0b 	orr.w	fp, r2, fp
 8023954:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023958:	fb03 000b 	mla	r0, r3, fp, r0
 802395c:	0d43      	lsrs	r3, r0, #21
 802395e:	0940      	lsrs	r0, r0, #5
 8023960:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023964:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8023968:	4318      	orrs	r0, r3
 802396a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802396c:	f82a 0b02 	strh.w	r0, [sl], #2
 8023970:	441c      	add	r4, r3
 8023972:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8023974:	f109 39ff 	add.w	r9, r9, #4294967295
 8023978:	441e      	add	r6, r3
 802397a:	e73c      	b.n	80237f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802397c:	b00f      	add	sp, #60	@ 0x3c
 802397e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023982 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8023982:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023986:	b085      	sub	sp, #20
 8023988:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 802398c:	9102      	str	r1, [sp, #8]
 802398e:	2c00      	cmp	r4, #0
 8023990:	fb04 7103 	mla	r1, r4, r3, r7
 8023994:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8023998:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 802399c:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 80239a0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80239a4:	f2c0 811b 	blt.w	8023bde <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80239a8:	45a6      	cmp	lr, r4
 80239aa:	f340 8118 	ble.w	8023bde <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80239ae:	2f00      	cmp	r7, #0
 80239b0:	f2c0 8113 	blt.w	8023bda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80239b4:	42bb      	cmp	r3, r7
 80239b6:	f340 8110 	ble.w	8023bda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80239ba:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80239be:	1c7a      	adds	r2, r7, #1
 80239c0:	f100 8110 	bmi.w	8023be4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80239c4:	4293      	cmp	r3, r2
 80239c6:	f340 810d 	ble.w	8023be4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80239ca:	2e00      	cmp	r6, #0
 80239cc:	f000 810c 	beq.w	8023be8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80239d0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80239d4:	3401      	adds	r4, #1
 80239d6:	f100 810b 	bmi.w	8023bf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80239da:	45a6      	cmp	lr, r4
 80239dc:	f340 8108 	ble.w	8023bf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80239e0:	2800      	cmp	r0, #0
 80239e2:	f000 8108 	beq.w	8023bf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80239e6:	2f00      	cmp	r7, #0
 80239e8:	f2c0 8100 	blt.w	8023bec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80239ec:	42bb      	cmp	r3, r7
 80239ee:	f340 80fd 	ble.w	8023bec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80239f2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80239f6:	3701      	adds	r7, #1
 80239f8:	f100 8100 	bmi.w	8023bfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80239fc:	42bb      	cmp	r3, r7
 80239fe:	f340 80fd 	ble.w	8023bfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023a02:	2e00      	cmp	r6, #0
 8023a04:	f000 80fc 	beq.w	8023c00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023a08:	3301      	adds	r3, #1
 8023a0a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8023a0e:	b2b6      	uxth	r6, r6
 8023a10:	b280      	uxth	r0, r0
 8023a12:	fb00 fe06 	mul.w	lr, r0, r6
 8023a16:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023a1a:	0136      	lsls	r6, r6, #4
 8023a1c:	eba6 070e 	sub.w	r7, r6, lr
 8023a20:	b280      	uxth	r0, r0
 8023a22:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8023a26:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023a2a:	b2bf      	uxth	r7, r7
 8023a2c:	1a1b      	subs	r3, r3, r0
 8023a2e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023a32:	b29b      	uxth	r3, r3
 8023a34:	fb0a f607 	mul.w	r6, sl, r7
 8023a38:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023a3c:	fb0b 6603 	mla	r6, fp, r3, r6
 8023a40:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023a44:	fb00 6609 	mla	r6, r0, r9, r6
 8023a48:	fb0e 6608 	mla	r6, lr, r8, r6
 8023a4c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023a50:	9600      	str	r6, [sp, #0]
 8023a52:	2e00      	cmp	r6, #0
 8023a54:	f000 80be 	beq.w	8023bd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8023a58:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023a5c:	fb0b fc0c 	mul.w	ip, fp, ip
 8023a60:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8023a64:	fb0b f505 	mul.w	r5, fp, r5
 8023a68:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023a6c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8023a70:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023a74:	44dc      	add	ip, fp
 8023a76:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023a7a:	9501      	str	r5, [sp, #4]
 8023a7c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8023a80:	9503      	str	r5, [sp, #12]
 8023a82:	9d01      	ldr	r5, [sp, #4]
 8023a84:	9e02      	ldr	r6, [sp, #8]
 8023a86:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8023a8a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023a8e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8023a92:	fb0a fc0c 	mul.w	ip, sl, ip
 8023a96:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023a9a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023a9e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023aa2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023aa6:	4465      	add	r5, ip
 8023aa8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023aac:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8023ab0:	fb09 fc0c 	mul.w	ip, r9, ip
 8023ab4:	fb09 f904 	mul.w	r9, r9, r4
 8023ab8:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8023abc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023ac0:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8023ac4:	fb08 f404 	mul.w	r4, r8, r4
 8023ac8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023acc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023ad0:	fb08 f802 	mul.w	r8, r8, r2
 8023ad4:	fb0a fa01 	mul.w	sl, sl, r1
 8023ad8:	0a22      	lsrs	r2, r4, #8
 8023ada:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8023ade:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023ae2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8023ae6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023aea:	4414      	add	r4, r2
 8023aec:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023af0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8023af4:	0a2d      	lsrs	r5, r5, #8
 8023af6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023afa:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023afe:	9a03      	ldr	r2, [sp, #12]
 8023b00:	8836      	ldrh	r6, [r6, #0]
 8023b02:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023b06:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023b0a:	437d      	muls	r5, r7
 8023b0c:	4461      	add	r1, ip
 8023b0e:	0a24      	lsrs	r4, r4, #8
 8023b10:	fb02 5503 	mla	r5, r2, r3, r5
 8023b14:	0a09      	lsrs	r1, r1, #8
 8023b16:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8023b1a:	fb04 540e 	mla	r4, r4, lr, r5
 8023b1e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023b22:	fb01 4100 	mla	r1, r1, r0, r4
 8023b26:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b2a:	0a09      	lsrs	r1, r1, #8
 8023b2c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023b30:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8023b34:	fb07 f70a 	mul.w	r7, r7, sl
 8023b38:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023b3c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8023b40:	fb03 7101 	mla	r1, r3, r1, r7
 8023b44:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023b48:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8023b4c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023b50:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8023b54:	fb00 e101 	mla	r1, r0, r1, lr
 8023b58:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8023b5c:	9a00      	ldr	r2, [sp, #0]
 8023b5e:	b287      	uxth	r7, r0
 8023b60:	437a      	muls	r2, r7
 8023b62:	0a09      	lsrs	r1, r1, #8
 8023b64:	1c53      	adds	r3, r2, #1
 8023b66:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023b6a:	4321      	orrs	r1, r4
 8023b6c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023b70:	1235      	asrs	r5, r6, #8
 8023b72:	0c0a      	lsrs	r2, r1, #16
 8023b74:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023b78:	b2db      	uxtb	r3, r3
 8023b7a:	fb12 f207 	smulbb	r2, r2, r7
 8023b7e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8023b82:	fb05 2503 	mla	r5, r5, r3, r2
 8023b86:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023b8a:	10f2      	asrs	r2, r6, #3
 8023b8c:	b2c8      	uxtb	r0, r1
 8023b8e:	00f6      	lsls	r6, r6, #3
 8023b90:	fb14 f407 	smulbb	r4, r4, r7
 8023b94:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8023b98:	b2f6      	uxtb	r6, r6
 8023b9a:	fb10 f007 	smulbb	r0, r0, r7
 8023b9e:	fb02 4203 	mla	r2, r2, r3, r4
 8023ba2:	b2ad      	uxth	r5, r5
 8023ba4:	fb06 0303 	mla	r3, r6, r3, r0
 8023ba8:	b299      	uxth	r1, r3
 8023baa:	b294      	uxth	r4, r2
 8023bac:	1c6b      	adds	r3, r5, #1
 8023bae:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023bb2:	1c62      	adds	r2, r4, #1
 8023bb4:	1c4b      	adds	r3, r1, #1
 8023bb6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023bba:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023bbe:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8023bc2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023bc6:	0952      	lsrs	r2, r2, #5
 8023bc8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023bcc:	432b      	orrs	r3, r5
 8023bce:	4313      	orrs	r3, r2
 8023bd0:	9a02      	ldr	r2, [sp, #8]
 8023bd2:	8013      	strh	r3, [r2, #0]
 8023bd4:	b005      	add	sp, #20
 8023bd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023bda:	2500      	movs	r5, #0
 8023bdc:	e6ef      	b.n	80239be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023bde:	2100      	movs	r1, #0
 8023be0:	460d      	mov	r5, r1
 8023be2:	e6f7      	b.n	80239d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023be4:	2100      	movs	r1, #0
 8023be6:	e6f5      	b.n	80239d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023be8:	4631      	mov	r1, r6
 8023bea:	e6f3      	b.n	80239d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023bec:	2400      	movs	r4, #0
 8023bee:	e702      	b.n	80239f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023bf0:	2200      	movs	r2, #0
 8023bf2:	4614      	mov	r4, r2
 8023bf4:	e70b      	b.n	8023a0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023bf6:	4602      	mov	r2, r0
 8023bf8:	4604      	mov	r4, r0
 8023bfa:	e708      	b.n	8023a0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023bfc:	2200      	movs	r2, #0
 8023bfe:	e706      	b.n	8023a0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023c00:	4632      	mov	r2, r6
 8023c02:	e704      	b.n	8023a0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c08:	b09d      	sub	sp, #116	@ 0x74
 8023c0a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8023c0e:	9219      	str	r2, [sp, #100]	@ 0x64
 8023c10:	9307      	str	r3, [sp, #28]
 8023c12:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8023c14:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 8023c18:	931a      	str	r3, [sp, #104]	@ 0x68
 8023c1a:	9117      	str	r1, [sp, #92]	@ 0x5c
 8023c1c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8023c20:	901b      	str	r0, [sp, #108]	@ 0x6c
 8023c22:	6850      	ldr	r0, [r2, #4]
 8023c24:	6812      	ldr	r2, [r2, #0]
 8023c26:	fb00 1303 	mla	r3, r0, r3, r1
 8023c2a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023c2e:	930a      	str	r3, [sp, #40]	@ 0x28
 8023c30:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023c32:	681b      	ldr	r3, [r3, #0]
 8023c34:	9310      	str	r3, [sp, #64]	@ 0x40
 8023c36:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8023c3a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023c3c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023c3e:	2b00      	cmp	r3, #0
 8023c40:	dc03      	bgt.n	8023c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023c42:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8023c44:	2b00      	cmp	r3, #0
 8023c46:	f340 8375 	ble.w	8024334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023c4a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023c4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023c50:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023c54:	1e48      	subs	r0, r1, #1
 8023c56:	1e57      	subs	r7, r2, #1
 8023c58:	9b07      	ldr	r3, [sp, #28]
 8023c5a:	2b00      	cmp	r3, #0
 8023c5c:	f340 818e 	ble.w	8023f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023c60:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023c64:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023c68:	d406      	bmi.n	8023c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023c6a:	4584      	cmp	ip, r0
 8023c6c:	da04      	bge.n	8023c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023c6e:	2b00      	cmp	r3, #0
 8023c70:	db02      	blt.n	8023c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023c72:	42bb      	cmp	r3, r7
 8023c74:	f2c0 8183 	blt.w	8023f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023c78:	f11c 0c01 	adds.w	ip, ip, #1
 8023c7c:	f100 8173 	bmi.w	8023f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023c80:	4561      	cmp	r1, ip
 8023c82:	f2c0 8170 	blt.w	8023f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023c86:	3301      	adds	r3, #1
 8023c88:	f100 816d 	bmi.w	8023f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023c8c:	429a      	cmp	r2, r3
 8023c8e:	f2c0 816a 	blt.w	8023f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023c92:	9b07      	ldr	r3, [sp, #28]
 8023c94:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8023c96:	9318      	str	r3, [sp, #96]	@ 0x60
 8023c98:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023c9a:	2b00      	cmp	r3, #0
 8023c9c:	f340 818c 	ble.w	8023fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023ca0:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8023ca2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023ca4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023ca8:	689b      	ldr	r3, [r3, #8]
 8023caa:	1422      	asrs	r2, r4, #16
 8023cac:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023cb0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023cb4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023cb8:	f100 81cd 	bmi.w	8024056 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023cbc:	f103 38ff 	add.w	r8, r3, #4294967295
 8023cc0:	4542      	cmp	r2, r8
 8023cc2:	f280 81c8 	bge.w	8024056 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023cc6:	f1bc 0f00 	cmp.w	ip, #0
 8023cca:	f2c0 81c4 	blt.w	8024056 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023cce:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023cd2:	45c4      	cmp	ip, r8
 8023cd4:	f280 81bf 	bge.w	8024056 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023cd8:	b21b      	sxth	r3, r3
 8023cda:	fb0c 2203 	mla	r2, ip, r3, r2
 8023cde:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023ce0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023ce4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023ce8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023cec:	2800      	cmp	r0, #0
 8023cee:	f000 81a9 	beq.w	8024044 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023cf2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023cf6:	950c      	str	r5, [sp, #48]	@ 0x30
 8023cf8:	0e2d      	lsrs	r5, r5, #24
 8023cfa:	9513      	str	r5, [sp, #76]	@ 0x4c
 8023cfc:	b181      	cbz	r1, 8023d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023cfe:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8023d02:	3b01      	subs	r3, #1
 8023d04:	009b      	lsls	r3, r3, #2
 8023d06:	3304      	adds	r3, #4
 8023d08:	eb08 0c03 	add.w	ip, r8, r3
 8023d0c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023d10:	9308      	str	r3, [sp, #32]
 8023d12:	0e1b      	lsrs	r3, r3, #24
 8023d14:	9311      	str	r3, [sp, #68]	@ 0x44
 8023d16:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023d1a:	930d      	str	r3, [sp, #52]	@ 0x34
 8023d1c:	0e1b      	lsrs	r3, r3, #24
 8023d1e:	9314      	str	r3, [sp, #80]	@ 0x50
 8023d20:	b280      	uxth	r0, r0
 8023d22:	b289      	uxth	r1, r1
 8023d24:	fb00 f901 	mul.w	r9, r0, r1
 8023d28:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023d2c:	0100      	lsls	r0, r0, #4
 8023d2e:	eba0 0809 	sub.w	r8, r0, r9
 8023d32:	b289      	uxth	r1, r1
 8023d34:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8023d38:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8023d3a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023d3c:	fa1f f888 	uxth.w	r8, r8
 8023d40:	1a5b      	subs	r3, r3, r1
 8023d42:	b29b      	uxth	r3, r3
 8023d44:	fb08 f000 	mul.w	r0, r8, r0
 8023d48:	fb03 000e 	mla	r0, r3, lr, r0
 8023d4c:	fb01 0005 	mla	r0, r1, r5, r0
 8023d50:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023d52:	fb09 0005 	mla	r0, r9, r5, r0
 8023d56:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023d5a:	2800      	cmp	r0, #0
 8023d5c:	f000 80fa 	beq.w	8023f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023d60:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8023d64:	d01b      	beq.n	8023d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023d66:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8023d6a:	fb0e fa0a 	mul.w	sl, lr, sl
 8023d6e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023d72:	fb0e fe02 	mul.w	lr, lr, r2
 8023d76:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023d7a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023d7e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023d82:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8023d86:	4452      	add	r2, sl
 8023d88:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023d8c:	0a12      	lsrs	r2, r2, #8
 8023d8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d92:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023d96:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023d9a:	ea42 020c 	orr.w	r2, r2, ip
 8023d9e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023da0:	2dff      	cmp	r5, #255	@ 0xff
 8023da2:	d021      	beq.n	8023de8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023da4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023da6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023daa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023dac:	fb05 fb0b 	mul.w	fp, r5, fp
 8023db0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023db2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023db6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023db8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023dbc:	fb05 fa0a 	mul.w	sl, r5, sl
 8023dc0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023dc4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023dc8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023dcc:	44de      	add	lr, fp
 8023dce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023dd2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023dd6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023dda:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023dde:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023de2:	ea4e 050a 	orr.w	r5, lr, sl
 8023de6:	950c      	str	r5, [sp, #48]	@ 0x30
 8023de8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023dea:	2dff      	cmp	r5, #255	@ 0xff
 8023dec:	d021      	beq.n	8023e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023dee:	9d08      	ldr	r5, [sp, #32]
 8023df0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023df4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023df6:	fb05 fb0b 	mul.w	fp, r5, fp
 8023dfa:	9d08      	ldr	r5, [sp, #32]
 8023dfc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023e00:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023e02:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023e06:	fb05 fa0a 	mul.w	sl, r5, sl
 8023e0a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023e0e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023e12:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023e16:	44de      	add	lr, fp
 8023e18:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023e1c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e24:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023e28:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023e2c:	ea4e 050a 	orr.w	r5, lr, sl
 8023e30:	9508      	str	r5, [sp, #32]
 8023e32:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023e34:	2dff      	cmp	r5, #255	@ 0xff
 8023e36:	d021      	beq.n	8023e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023e38:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023e3a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023e3e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023e40:	fb05 fb0b 	mul.w	fp, r5, fp
 8023e44:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023e46:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023e4a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023e4c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023e50:	fb05 fa0a 	mul.w	sl, r5, sl
 8023e54:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023e58:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023e5c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023e60:	44de      	add	lr, fp
 8023e62:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023e66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e6a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e6e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023e72:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023e76:	ea4e 050a 	orr.w	r5, lr, sl
 8023e7a:	950d      	str	r5, [sp, #52]	@ 0x34
 8023e7c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023e7e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023e82:	9d08      	ldr	r5, [sp, #32]
 8023e84:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8023e88:	fb08 fc0c 	mul.w	ip, r8, ip
 8023e8c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023e90:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023e94:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023e96:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023e9a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023e9e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023ea0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023ea4:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8023ea8:	fb08 f80e 	mul.w	r8, r8, lr
 8023eac:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023eb0:	fb03 8202 	mla	r2, r3, r2, r8
 8023eb4:	9b08      	ldr	r3, [sp, #32]
 8023eb6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023eb8:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8023ebc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8023ebe:	fb01 220a 	mla	r2, r1, sl, r2
 8023ec2:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 8023ec6:	fb09 2901 	mla	r9, r9, r1, r2
 8023eca:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023ecc:	883b      	ldrh	r3, [r7, #0]
 8023ece:	4342      	muls	r2, r0
 8023ed0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ed4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023ed8:	1c50      	adds	r0, r2, #1
 8023eda:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023ede:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8023ee2:	ea4c 0c09 	orr.w	ip, ip, r9
 8023ee6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8023eea:	1219      	asrs	r1, r3, #8
 8023eec:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023ef0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023ef4:	b2c0      	uxtb	r0, r0
 8023ef6:	fb12 f205 	smulbb	r2, r2, r5
 8023efa:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8023efe:	fb01 2100 	mla	r1, r1, r0, r2
 8023f02:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023f06:	10da      	asrs	r2, r3, #3
 8023f08:	fa5f fc8c 	uxtb.w	ip, ip
 8023f0c:	00db      	lsls	r3, r3, #3
 8023f0e:	fb1c fc05 	smulbb	ip, ip, r5
 8023f12:	b2db      	uxtb	r3, r3
 8023f14:	b289      	uxth	r1, r1
 8023f16:	fb03 c300 	mla	r3, r3, r0, ip
 8023f1a:	fa1f fc83 	uxth.w	ip, r3
 8023f1e:	1c4b      	adds	r3, r1, #1
 8023f20:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023f24:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8023f28:	fb1e fe05 	smulbb	lr, lr, r5
 8023f2c:	f10c 0301 	add.w	r3, ip, #1
 8023f30:	fb02 e200 	mla	r2, r2, r0, lr
 8023f34:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023f38:	b292      	uxth	r2, r2
 8023f3a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8023f3e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023f42:	430b      	orrs	r3, r1
 8023f44:	1c51      	adds	r1, r2, #1
 8023f46:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023f4a:	0952      	lsrs	r2, r2, #5
 8023f4c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023f50:	4313      	orrs	r3, r2
 8023f52:	803b      	strh	r3, [r7, #0]
 8023f54:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023f56:	441c      	add	r4, r3
 8023f58:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8023f5a:	441e      	add	r6, r3
 8023f5c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023f5e:	3b01      	subs	r3, #1
 8023f60:	3702      	adds	r7, #2
 8023f62:	9318      	str	r3, [sp, #96]	@ 0x60
 8023f64:	e698      	b.n	8023c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023f66:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023f68:	441c      	add	r4, r3
 8023f6a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8023f6c:	441e      	add	r6, r3
 8023f6e:	9b07      	ldr	r3, [sp, #28]
 8023f70:	3b01      	subs	r3, #1
 8023f72:	9307      	str	r3, [sp, #28]
 8023f74:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023f76:	3302      	adds	r3, #2
 8023f78:	930a      	str	r3, [sp, #40]	@ 0x28
 8023f7a:	e66d      	b.n	8023c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023f7c:	d023      	beq.n	8023fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023f7e:	9b07      	ldr	r3, [sp, #28]
 8023f80:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8023f82:	3b01      	subs	r3, #1
 8023f84:	fb00 4003 	mla	r0, r0, r3, r4
 8023f88:	1400      	asrs	r0, r0, #16
 8023f8a:	f53f ae82 	bmi.w	8023c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023f8e:	3901      	subs	r1, #1
 8023f90:	4288      	cmp	r0, r1
 8023f92:	f6bf ae7e 	bge.w	8023c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023f96:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8023f98:	fb01 6303 	mla	r3, r1, r3, r6
 8023f9c:	141b      	asrs	r3, r3, #16
 8023f9e:	f53f ae78 	bmi.w	8023c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023fa2:	3a01      	subs	r2, #1
 8023fa4:	4293      	cmp	r3, r2
 8023fa6:	f6bf ae74 	bge.w	8023c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023faa:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023fae:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8023fb2:	f1bb 0f00 	cmp.w	fp, #0
 8023fb6:	dc6c      	bgt.n	8024092 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023fb8:	9b07      	ldr	r3, [sp, #28]
 8023fba:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023fbe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023fc0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023fc4:	930a      	str	r3, [sp, #40]	@ 0x28
 8023fc6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023fc8:	2b00      	cmp	r3, #0
 8023fca:	f340 81b3 	ble.w	8024334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023fce:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023fd2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023fd6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023fda:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023fdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023fe0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023fe4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023fe8:	eef0 6a62 	vmov.f32	s13, s5
 8023fec:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023ff0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023ff4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023ff8:	ee16 4a90 	vmov	r4, s13
 8023ffc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024000:	eef0 6a43 	vmov.f32	s13, s6
 8024004:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024008:	ee12 2a90 	vmov	r2, s5
 802400c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024010:	fb92 f3f3 	sdiv	r3, r2, r3
 8024014:	ee13 2a10 	vmov	r2, s6
 8024018:	9329      	str	r3, [sp, #164]	@ 0xa4
 802401a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802401c:	fb92 f3f3 	sdiv	r3, r2, r3
 8024020:	932a      	str	r3, [sp, #168]	@ 0xa8
 8024022:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8024024:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8024026:	3b01      	subs	r3, #1
 8024028:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802402c:	9317      	str	r3, [sp, #92]	@ 0x5c
 802402e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8024030:	bf08      	it	eq
 8024032:	4613      	moveq	r3, r2
 8024034:	ee16 6a90 	vmov	r6, s13
 8024038:	9307      	str	r3, [sp, #28]
 802403a:	eeb0 3a67 	vmov.f32	s6, s15
 802403e:	eef0 2a47 	vmov.f32	s5, s14
 8024042:	e5fb      	b.n	8023c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024044:	2900      	cmp	r1, #0
 8024046:	f43f ae6b 	beq.w	8023d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802404a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802404e:	9308      	str	r3, [sp, #32]
 8024050:	0e1b      	lsrs	r3, r3, #24
 8024052:	9311      	str	r3, [sp, #68]	@ 0x44
 8024054:	e664      	b.n	8023d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024056:	f112 0801 	adds.w	r8, r2, #1
 802405a:	f53f af7b 	bmi.w	8023f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802405e:	4543      	cmp	r3, r8
 8024060:	f6ff af78 	blt.w	8023f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024064:	f11c 0801 	adds.w	r8, ip, #1
 8024068:	f53f af74 	bmi.w	8023f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802406c:	45c6      	cmp	lr, r8
 802406e:	f6ff af71 	blt.w	8023f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024072:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8024074:	9201      	str	r2, [sp, #4]
 8024076:	fa0f f28e 	sxth.w	r2, lr
 802407a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802407e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8024082:	9200      	str	r2, [sp, #0]
 8024084:	b21b      	sxth	r3, r3
 8024086:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8024088:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802408a:	4639      	mov	r1, r7
 802408c:	f7ff fc79 	bl	8023982 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024090:	e760      	b.n	8023f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024092:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8024094:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8024096:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802409a:	1427      	asrs	r7, r4, #16
 802409c:	1433      	asrs	r3, r6, #16
 802409e:	fb01 7303 	mla	r3, r1, r3, r7
 80240a2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80240a6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80240aa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80240ae:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80240b2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80240b6:	2a00      	cmp	r2, #0
 80240b8:	f000 8133 	beq.w	8024322 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80240bc:	687d      	ldr	r5, [r7, #4]
 80240be:	950e      	str	r5, [sp, #56]	@ 0x38
 80240c0:	0e2d      	lsrs	r5, r5, #24
 80240c2:	9515      	str	r5, [sp, #84]	@ 0x54
 80240c4:	b178      	cbz	r0, 80240e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80240c6:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 80240ca:	3901      	subs	r1, #1
 80240cc:	0089      	lsls	r1, r1, #2
 80240ce:	3104      	adds	r1, #4
 80240d0:	eb07 0e01 	add.w	lr, r7, r1
 80240d4:	5879      	ldr	r1, [r7, r1]
 80240d6:	9109      	str	r1, [sp, #36]	@ 0x24
 80240d8:	0e09      	lsrs	r1, r1, #24
 80240da:	9112      	str	r1, [sp, #72]	@ 0x48
 80240dc:	f8de 1004 	ldr.w	r1, [lr, #4]
 80240e0:	910f      	str	r1, [sp, #60]	@ 0x3c
 80240e2:	0e09      	lsrs	r1, r1, #24
 80240e4:	9116      	str	r1, [sp, #88]	@ 0x58
 80240e6:	b292      	uxth	r2, r2
 80240e8:	b280      	uxth	r0, r0
 80240ea:	fb02 f800 	mul.w	r8, r2, r0
 80240ee:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80240f2:	0112      	lsls	r2, r2, #4
 80240f4:	eba2 0e08 	sub.w	lr, r2, r8
 80240f8:	b280      	uxth	r0, r0
 80240fa:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80240fe:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8024100:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8024102:	fa1f fe8e 	uxth.w	lr, lr
 8024106:	1a12      	subs	r2, r2, r0
 8024108:	b292      	uxth	r2, r2
 802410a:	fb0e f101 	mul.w	r1, lr, r1
 802410e:	fb02 110c 	mla	r1, r2, ip, r1
 8024112:	fb00 1105 	mla	r1, r0, r5, r1
 8024116:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8024118:	fb08 1105 	mla	r1, r8, r5, r1
 802411c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024120:	2900      	cmp	r1, #0
 8024122:	f000 80f5 	beq.w	8024310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8024126:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802412a:	d019      	beq.n	8024160 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802412c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8024130:	fb0c fa0a 	mul.w	sl, ip, sl
 8024134:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024138:	fb0c fc03 	mul.w	ip, ip, r3
 802413c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024140:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8024144:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8024148:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802414c:	4453      	add	r3, sl
 802414e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024152:	0a1b      	lsrs	r3, r3, #8
 8024154:	0a3f      	lsrs	r7, r7, #8
 8024156:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802415a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802415e:	433b      	orrs	r3, r7
 8024160:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8024162:	2dff      	cmp	r5, #255	@ 0xff
 8024164:	d020      	beq.n	80241a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8024166:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024168:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802416c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802416e:	436f      	muls	r7, r5
 8024170:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024172:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024176:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8024178:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802417c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024180:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024184:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024188:	44bc      	add	ip, r7
 802418a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802418e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024192:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024196:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802419a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802419e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80241a2:	ea4c 050a 	orr.w	r5, ip, sl
 80241a6:	950e      	str	r5, [sp, #56]	@ 0x38
 80241a8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80241aa:	2dff      	cmp	r5, #255	@ 0xff
 80241ac:	d020      	beq.n	80241f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80241ae:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80241b0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80241b4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80241b6:	436f      	muls	r7, r5
 80241b8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80241ba:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80241be:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80241c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80241c4:	fb05 fa0a 	mul.w	sl, r5, sl
 80241c8:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80241cc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80241d0:	44bc      	add	ip, r7
 80241d2:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80241d6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80241da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241e2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80241e6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80241ea:	ea4c 050a 	orr.w	r5, ip, sl
 80241ee:	9509      	str	r5, [sp, #36]	@ 0x24
 80241f0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80241f2:	2dff      	cmp	r5, #255	@ 0xff
 80241f4:	d020      	beq.n	8024238 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80241f6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80241f8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80241fc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80241fe:	436f      	muls	r7, r5
 8024200:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024202:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024206:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8024208:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802420c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024210:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024214:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024218:	44bc      	add	ip, r7
 802421a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802421e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024222:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024226:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802422a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802422e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024232:	ea4c 050a 	orr.w	r5, ip, sl
 8024236:	950f      	str	r5, [sp, #60]	@ 0x3c
 8024238:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802423a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802423e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024240:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8024244:	fb0e f707 	mul.w	r7, lr, r7
 8024248:	fb02 770c 	mla	r7, r2, ip, r7
 802424c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024250:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024252:	fb00 770c 	mla	r7, r0, ip, r7
 8024256:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802425a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802425c:	fb08 770c 	mla	r7, r8, ip, r7
 8024260:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8024264:	fb0e fe0c 	mul.w	lr, lr, ip
 8024268:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802426c:	fb02 e303 	mla	r3, r2, r3, lr
 8024270:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8024272:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8024274:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8024278:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802427a:	fb00 330a 	mla	r3, r0, sl, r3
 802427e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8024282:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024286:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024288:	f8b9 0000 	ldrh.w	r0, [r9]
 802428c:	4359      	muls	r1, r3
 802428e:	0a3f      	lsrs	r7, r7, #8
 8024290:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024294:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024298:	1c4b      	adds	r3, r1, #1
 802429a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802429e:	ea47 070c 	orr.w	r7, r7, ip
 80242a2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80242a6:	1202      	asrs	r2, r0, #8
 80242a8:	0c3b      	lsrs	r3, r7, #16
 80242aa:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80242ae:	b2c9      	uxtb	r1, r1
 80242b0:	fb13 f305 	smulbb	r3, r3, r5
 80242b4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80242b8:	fb02 3201 	mla	r2, r2, r1, r3
 80242bc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80242c0:	10c3      	asrs	r3, r0, #3
 80242c2:	b2ff      	uxtb	r7, r7
 80242c4:	00c0      	lsls	r0, r0, #3
 80242c6:	b2c0      	uxtb	r0, r0
 80242c8:	fb17 f705 	smulbb	r7, r7, r5
 80242cc:	fb00 7001 	mla	r0, r0, r1, r7
 80242d0:	b292      	uxth	r2, r2
 80242d2:	fb1c fc05 	smulbb	ip, ip, r5
 80242d6:	b280      	uxth	r0, r0
 80242d8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80242dc:	fb03 c301 	mla	r3, r3, r1, ip
 80242e0:	1c51      	adds	r1, r2, #1
 80242e2:	f100 0c01 	add.w	ip, r0, #1
 80242e6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80242ea:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80242ee:	b29b      	uxth	r3, r3
 80242f0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80242f4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 80242f8:	ea4c 0202 	orr.w	r2, ip, r2
 80242fc:	f103 0c01 	add.w	ip, r3, #1
 8024300:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024304:	095b      	lsrs	r3, r3, #5
 8024306:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802430a:	431a      	orrs	r2, r3
 802430c:	f8a9 2000 	strh.w	r2, [r9]
 8024310:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8024312:	441c      	add	r4, r3
 8024314:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8024316:	f109 0902 	add.w	r9, r9, #2
 802431a:	441e      	add	r6, r3
 802431c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024320:	e647      	b.n	8023fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024322:	2800      	cmp	r0, #0
 8024324:	f43f aedf 	beq.w	80240e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024328:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802432c:	9109      	str	r1, [sp, #36]	@ 0x24
 802432e:	0e09      	lsrs	r1, r1, #24
 8024330:	9112      	str	r1, [sp, #72]	@ 0x48
 8024332:	e6d8      	b.n	80240e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024334:	b01d      	add	sp, #116	@ 0x74
 8024336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802433a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802433a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802433e:	b085      	sub	sp, #20
 8024340:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8024344:	9102      	str	r1, [sp, #8]
 8024346:	2c00      	cmp	r4, #0
 8024348:	fb04 7103 	mla	r1, r4, r3, r7
 802434c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8024350:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8024354:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8024358:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802435c:	f2c0 810c 	blt.w	8024578 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024360:	45a6      	cmp	lr, r4
 8024362:	f340 8109 	ble.w	8024578 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024366:	2f00      	cmp	r7, #0
 8024368:	f2c0 8104 	blt.w	8024574 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802436c:	42bb      	cmp	r3, r7
 802436e:	f340 8101 	ble.w	8024574 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024372:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024376:	1c7a      	adds	r2, r7, #1
 8024378:	f100 8101 	bmi.w	802457e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802437c:	4293      	cmp	r3, r2
 802437e:	f340 80fe 	ble.w	802457e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024382:	2e00      	cmp	r6, #0
 8024384:	f000 80fd 	beq.w	8024582 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024388:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802438c:	3401      	adds	r4, #1
 802438e:	f100 80fc 	bmi.w	802458a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024392:	45a6      	cmp	lr, r4
 8024394:	f340 80f9 	ble.w	802458a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024398:	2800      	cmp	r0, #0
 802439a:	f000 80f9 	beq.w	8024590 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802439e:	2f00      	cmp	r7, #0
 80243a0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80243a4:	f2c0 80ef 	blt.w	8024586 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80243a8:	42bb      	cmp	r3, r7
 80243aa:	f340 80ec 	ble.w	8024586 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80243ae:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80243b2:	3701      	adds	r7, #1
 80243b4:	f100 80ef 	bmi.w	8024596 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80243b8:	42bb      	cmp	r3, r7
 80243ba:	f340 80ec 	ble.w	8024596 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80243be:	2e00      	cmp	r6, #0
 80243c0:	f000 80eb 	beq.w	802459a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80243c4:	6852      	ldr	r2, [r2, #4]
 80243c6:	b2b6      	uxth	r6, r6
 80243c8:	b280      	uxth	r0, r0
 80243ca:	fb00 fe06 	mul.w	lr, r0, r6
 80243ce:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80243d2:	0136      	lsls	r6, r6, #4
 80243d4:	eba6 070e 	sub.w	r7, r6, lr
 80243d8:	b280      	uxth	r0, r0
 80243da:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80243de:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80243e2:	b2bf      	uxth	r7, r7
 80243e4:	1a1b      	subs	r3, r3, r0
 80243e6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80243ea:	b29b      	uxth	r3, r3
 80243ec:	fb07 f60a 	mul.w	r6, r7, sl
 80243f0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80243f4:	fb0b 6603 	mla	r6, fp, r3, r6
 80243f8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80243fc:	fb00 6609 	mla	r6, r0, r9, r6
 8024400:	fb0e 6608 	mla	r6, lr, r8, r6
 8024404:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024408:	9600      	str	r6, [sp, #0]
 802440a:	2e00      	cmp	r6, #0
 802440c:	f000 80af 	beq.w	802456e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024410:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024414:	fb0b fc0c 	mul.w	ip, fp, ip
 8024418:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802441c:	fb0b f505 	mul.w	r5, fp, r5
 8024420:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024424:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8024428:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802442c:	44dc      	add	ip, fp
 802442e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024432:	9501      	str	r5, [sp, #4]
 8024434:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8024438:	9503      	str	r5, [sp, #12]
 802443a:	9d01      	ldr	r5, [sp, #4]
 802443c:	9e02      	ldr	r6, [sp, #8]
 802443e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8024442:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024446:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802444a:	fb0a fc0c 	mul.w	ip, sl, ip
 802444e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024452:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024456:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802445a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802445e:	4465      	add	r5, ip
 8024460:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8024464:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8024468:	fb09 fc0c 	mul.w	ip, r9, ip
 802446c:	fb09 f904 	mul.w	r9, r9, r4
 8024470:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8024474:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024478:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802447c:	fb08 f404 	mul.w	r4, r8, r4
 8024480:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8024484:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8024488:	fb08 f802 	mul.w	r8, r8, r2
 802448c:	fb0a fa01 	mul.w	sl, sl, r1
 8024490:	0a22      	lsrs	r2, r4, #8
 8024492:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8024496:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802449a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802449e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80244a2:	4414      	add	r4, r2
 80244a4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80244a8:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80244ac:	0a2d      	lsrs	r5, r5, #8
 80244ae:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80244b2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80244b6:	9a03      	ldr	r2, [sp, #12]
 80244b8:	8836      	ldrh	r6, [r6, #0]
 80244ba:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80244be:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80244c2:	437d      	muls	r5, r7
 80244c4:	4461      	add	r1, ip
 80244c6:	0a24      	lsrs	r4, r4, #8
 80244c8:	fb02 5503 	mla	r5, r2, r3, r5
 80244cc:	0a09      	lsrs	r1, r1, #8
 80244ce:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80244d2:	fb04 540e 	mla	r4, r4, lr, r5
 80244d6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80244da:	fb01 4100 	mla	r1, r1, r0, r4
 80244de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244e2:	0a09      	lsrs	r1, r1, #8
 80244e4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80244e8:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 80244ec:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80244f0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 80244f4:	fb07 f70a 	mul.w	r7, r7, sl
 80244f8:	fb03 7101 	mla	r1, r3, r1, r7
 80244fc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024500:	9b00      	ldr	r3, [sp, #0]
 8024502:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8024506:	fb0e 1e08 	mla	lr, lr, r8, r1
 802450a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802450e:	fb00 e101 	mla	r1, r0, r1, lr
 8024512:	43da      	mvns	r2, r3
 8024514:	1233      	asrs	r3, r6, #8
 8024516:	b2d2      	uxtb	r2, r2
 8024518:	10f0      	asrs	r0, r6, #3
 802451a:	0a09      	lsrs	r1, r1, #8
 802451c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8024520:	00f6      	lsls	r6, r6, #3
 8024522:	4353      	muls	r3, r2
 8024524:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8024528:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802452c:	b2f6      	uxtb	r6, r6
 802452e:	4321      	orrs	r1, r4
 8024530:	4350      	muls	r0, r2
 8024532:	4356      	muls	r6, r2
 8024534:	1c5a      	adds	r2, r3, #1
 8024536:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802453a:	0c0b      	lsrs	r3, r1, #16
 802453c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024540:	1c42      	adds	r2, r0, #1
 8024542:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024546:	0a0a      	lsrs	r2, r1, #8
 8024548:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802454c:	021b      	lsls	r3, r3, #8
 802454e:	00d2      	lsls	r2, r2, #3
 8024550:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024554:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8024558:	4313      	orrs	r3, r2
 802455a:	1c72      	adds	r2, r6, #1
 802455c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024560:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8024564:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024568:	4319      	orrs	r1, r3
 802456a:	9b02      	ldr	r3, [sp, #8]
 802456c:	8019      	strh	r1, [r3, #0]
 802456e:	b005      	add	sp, #20
 8024570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024574:	2500      	movs	r5, #0
 8024576:	e6fe      	b.n	8024376 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024578:	2100      	movs	r1, #0
 802457a:	460d      	mov	r5, r1
 802457c:	e706      	b.n	802438c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802457e:	2100      	movs	r1, #0
 8024580:	e704      	b.n	802438c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024582:	4631      	mov	r1, r6
 8024584:	e702      	b.n	802438c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024586:	2400      	movs	r4, #0
 8024588:	e713      	b.n	80243b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802458a:	2200      	movs	r2, #0
 802458c:	4614      	mov	r4, r2
 802458e:	e71a      	b.n	80243c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024590:	4602      	mov	r2, r0
 8024592:	4604      	mov	r4, r0
 8024594:	e717      	b.n	80243c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024596:	2200      	movs	r2, #0
 8024598:	e715      	b.n	80243c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802459a:	4632      	mov	r2, r6
 802459c:	e713      	b.n	80243c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080245a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80245a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80245a4:	b09b      	sub	sp, #108	@ 0x6c
 80245a6:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 80245aa:	9218      	str	r2, [sp, #96]	@ 0x60
 80245ac:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80245ae:	9116      	str	r1, [sp, #88]	@ 0x58
 80245b0:	9307      	str	r3, [sp, #28]
 80245b2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 80245b6:	9019      	str	r0, [sp, #100]	@ 0x64
 80245b8:	6850      	ldr	r0, [r2, #4]
 80245ba:	6812      	ldr	r2, [r2, #0]
 80245bc:	fb00 1303 	mla	r3, r0, r3, r1
 80245c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80245c4:	930a      	str	r3, [sp, #40]	@ 0x28
 80245c6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80245c8:	681b      	ldr	r3, [r3, #0]
 80245ca:	930f      	str	r3, [sp, #60]	@ 0x3c
 80245cc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80245ce:	2b00      	cmp	r3, #0
 80245d0:	dc03      	bgt.n	80245da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80245d2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80245d4:	2b00      	cmp	r3, #0
 80245d6:	f340 8386 	ble.w	8024ce6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80245da:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80245dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80245e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80245e4:	1e48      	subs	r0, r1, #1
 80245e6:	1e57      	subs	r7, r2, #1
 80245e8:	9b07      	ldr	r3, [sp, #28]
 80245ea:	2b00      	cmp	r3, #0
 80245ec:	f340 8166 	ble.w	80248bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80245f0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80245f4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80245f8:	d406      	bmi.n	8024608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80245fa:	4584      	cmp	ip, r0
 80245fc:	da04      	bge.n	8024608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80245fe:	2b00      	cmp	r3, #0
 8024600:	db02      	blt.n	8024608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024602:	42bb      	cmp	r3, r7
 8024604:	f2c0 815b 	blt.w	80248be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024608:	f11c 0c01 	adds.w	ip, ip, #1
 802460c:	f100 814b 	bmi.w	80248a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024610:	4561      	cmp	r1, ip
 8024612:	f2c0 8148 	blt.w	80248a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024616:	3301      	adds	r3, #1
 8024618:	f100 8145 	bmi.w	80248a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802461c:	429a      	cmp	r2, r3
 802461e:	f2c0 8142 	blt.w	80248a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024622:	9b07      	ldr	r3, [sp, #28]
 8024624:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8024626:	9317      	str	r3, [sp, #92]	@ 0x5c
 8024628:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802462a:	2b00      	cmp	r3, #0
 802462c:	f340 8165 	ble.w	80248fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024630:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8024632:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8024634:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024638:	689b      	ldr	r3, [r3, #8]
 802463a:	1422      	asrs	r2, r4, #16
 802463c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024640:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024644:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024648:	f100 81d5 	bmi.w	80249f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802464c:	f103 38ff 	add.w	r8, r3, #4294967295
 8024650:	4542      	cmp	r2, r8
 8024652:	f280 81d0 	bge.w	80249f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024656:	f1bc 0f00 	cmp.w	ip, #0
 802465a:	f2c0 81cc 	blt.w	80249f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802465e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024662:	45c4      	cmp	ip, r8
 8024664:	f280 81c7 	bge.w	80249f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024668:	b21b      	sxth	r3, r3
 802466a:	fb0c 2203 	mla	r2, ip, r3, r2
 802466e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024670:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024674:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024678:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802467c:	2900      	cmp	r1, #0
 802467e:	f000 8182 	beq.w	8024986 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8024682:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024686:	950b      	str	r5, [sp, #44]	@ 0x2c
 8024688:	0e2d      	lsrs	r5, r5, #24
 802468a:	9512      	str	r5, [sp, #72]	@ 0x48
 802468c:	b180      	cbz	r0, 80246b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802468e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8024692:	3b01      	subs	r3, #1
 8024694:	009b      	lsls	r3, r3, #2
 8024696:	3304      	adds	r3, #4
 8024698:	eb08 0c03 	add.w	ip, r8, r3
 802469c:	f858 3003 	ldr.w	r3, [r8, r3]
 80246a0:	9308      	str	r3, [sp, #32]
 80246a2:	0e1b      	lsrs	r3, r3, #24
 80246a4:	9310      	str	r3, [sp, #64]	@ 0x40
 80246a6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80246aa:	930c      	str	r3, [sp, #48]	@ 0x30
 80246ac:	0e1b      	lsrs	r3, r3, #24
 80246ae:	9313      	str	r3, [sp, #76]	@ 0x4c
 80246b0:	b289      	uxth	r1, r1
 80246b2:	b280      	uxth	r0, r0
 80246b4:	fb01 f900 	mul.w	r9, r1, r0
 80246b8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80246bc:	0109      	lsls	r1, r1, #4
 80246be:	eba1 0809 	sub.w	r8, r1, r9
 80246c2:	b280      	uxth	r0, r0
 80246c4:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 80246c8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80246ca:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80246cc:	fa1f f888 	uxth.w	r8, r8
 80246d0:	1a09      	subs	r1, r1, r0
 80246d2:	b289      	uxth	r1, r1
 80246d4:	fb08 f303 	mul.w	r3, r8, r3
 80246d8:	fb01 330e 	mla	r3, r1, lr, r3
 80246dc:	fb00 3305 	mla	r3, r0, r5, r3
 80246e0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80246e2:	fb09 3305 	mla	r3, r9, r5, r3
 80246e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80246ea:	2b00      	cmp	r3, #0
 80246ec:	f000 80d2 	beq.w	8024894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80246f0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80246f4:	d01b      	beq.n	802472e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80246f6:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 80246fa:	fb0e fa0a 	mul.w	sl, lr, sl
 80246fe:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8024702:	fb0e fe02 	mul.w	lr, lr, r2
 8024706:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802470a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802470e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8024712:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8024716:	4452      	add	r2, sl
 8024718:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802471c:	0a12      	lsrs	r2, r2, #8
 802471e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024722:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8024726:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802472a:	ea42 020c 	orr.w	r2, r2, ip
 802472e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8024730:	2dff      	cmp	r5, #255	@ 0xff
 8024732:	d021      	beq.n	8024778 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8024734:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8024736:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802473a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802473c:	fb05 fb0b 	mul.w	fp, r5, fp
 8024740:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8024742:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024746:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8024748:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802474c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024750:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024754:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8024758:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802475c:	44de      	add	lr, fp
 802475e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024762:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024766:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802476a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802476e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024772:	ea4e 050a 	orr.w	r5, lr, sl
 8024776:	950b      	str	r5, [sp, #44]	@ 0x2c
 8024778:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802477a:	2dff      	cmp	r5, #255	@ 0xff
 802477c:	d021      	beq.n	80247c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802477e:	9d08      	ldr	r5, [sp, #32]
 8024780:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8024784:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8024786:	fb05 fb0b 	mul.w	fp, r5, fp
 802478a:	9d08      	ldr	r5, [sp, #32]
 802478c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8024790:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8024792:	fb05 fa0e 	mul.w	sl, r5, lr
 8024796:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802479a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802479e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80247a2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80247a6:	44de      	add	lr, fp
 80247a8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80247ac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80247b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80247b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80247b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80247bc:	ea4e 050a 	orr.w	r5, lr, sl
 80247c0:	9508      	str	r5, [sp, #32]
 80247c2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80247c4:	2dff      	cmp	r5, #255	@ 0xff
 80247c6:	d021      	beq.n	802480c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80247c8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80247ca:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80247ce:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80247d0:	fb05 fb0b 	mul.w	fp, r5, fp
 80247d4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80247d6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80247da:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80247dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80247e0:	fb05 fa0a 	mul.w	sl, r5, sl
 80247e4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80247e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80247ec:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80247f0:	44de      	add	lr, fp
 80247f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80247f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80247fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80247fe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024802:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024806:	ea4e 050a 	orr.w	r5, lr, sl
 802480a:	950c      	str	r5, [sp, #48]	@ 0x30
 802480c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802480e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024812:	9d08      	ldr	r5, [sp, #32]
 8024814:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8024818:	fb08 fc0c 	mul.w	ip, r8, ip
 802481c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024820:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8024824:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8024826:	fb00 cc0e 	mla	ip, r0, lr, ip
 802482a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802482e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8024830:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024834:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8024838:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802483c:	fb08 f80e 	mul.w	r8, r8, lr
 8024840:	fb01 8202 	mla	r2, r1, r2, r8
 8024844:	9908      	ldr	r1, [sp, #32]
 8024846:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802484a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802484c:	fb00 220a 	mla	r2, r0, sl, r2
 8024850:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8024854:	fb09 2900 	mla	r9, r9, r0, r2
 8024858:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802485c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024860:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024864:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8024868:	ea4c 0c09 	orr.w	ip, ip, r9
 802486c:	2bff      	cmp	r3, #255	@ 0xff
 802486e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8024872:	f040 8091 	bne.w	8024998 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8024876:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802487a:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 802487e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024882:	f022 0207 	bic.w	r2, r2, #7
 8024886:	431a      	orrs	r2, r3
 8024888:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802488c:	ea4c 0c02 	orr.w	ip, ip, r2
 8024890:	f8a7 c000 	strh.w	ip, [r7]
 8024894:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8024896:	441c      	add	r4, r3
 8024898:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802489a:	441e      	add	r6, r3
 802489c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802489e:	3b01      	subs	r3, #1
 80248a0:	3702      	adds	r7, #2
 80248a2:	9317      	str	r3, [sp, #92]	@ 0x5c
 80248a4:	e6c0      	b.n	8024628 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80248a6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80248a8:	441c      	add	r4, r3
 80248aa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80248ac:	441e      	add	r6, r3
 80248ae:	9b07      	ldr	r3, [sp, #28]
 80248b0:	3b01      	subs	r3, #1
 80248b2:	9307      	str	r3, [sp, #28]
 80248b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80248b6:	3302      	adds	r3, #2
 80248b8:	930a      	str	r3, [sp, #40]	@ 0x28
 80248ba:	e695      	b.n	80245e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80248bc:	d024      	beq.n	8024908 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80248be:	9b07      	ldr	r3, [sp, #28]
 80248c0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80248c2:	3b01      	subs	r3, #1
 80248c4:	fb00 4003 	mla	r0, r0, r3, r4
 80248c8:	1400      	asrs	r0, r0, #16
 80248ca:	f53f aeaa 	bmi.w	8024622 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80248ce:	3901      	subs	r1, #1
 80248d0:	4288      	cmp	r0, r1
 80248d2:	f6bf aea6 	bge.w	8024622 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80248d6:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80248d8:	fb01 6303 	mla	r3, r1, r3, r6
 80248dc:	141b      	asrs	r3, r3, #16
 80248de:	f53f aea0 	bmi.w	8024622 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80248e2:	3a01      	subs	r2, #1
 80248e4:	4293      	cmp	r3, r2
 80248e6:	f6bf ae9c 	bge.w	8024622 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80248ea:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80248ee:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80248f2:	f1bb 0f00 	cmp.w	fp, #0
 80248f6:	f300 809a 	bgt.w	8024a2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80248fa:	9b07      	ldr	r3, [sp, #28]
 80248fc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024900:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024902:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024906:	930a      	str	r3, [sp, #40]	@ 0x28
 8024908:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802490a:	2b00      	cmp	r3, #0
 802490c:	f340 81eb 	ble.w	8024ce6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024910:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024914:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024918:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802491c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802491e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024922:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024926:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802492a:	eef0 6a62 	vmov.f32	s13, s5
 802492e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024932:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024936:	ee77 2a62 	vsub.f32	s5, s14, s5
 802493a:	ee16 4a90 	vmov	r4, s13
 802493e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024942:	eef0 6a43 	vmov.f32	s13, s6
 8024946:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802494a:	ee12 2a90 	vmov	r2, s5
 802494e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024952:	fb92 f3f3 	sdiv	r3, r2, r3
 8024956:	ee13 2a10 	vmov	r2, s6
 802495a:	9327      	str	r3, [sp, #156]	@ 0x9c
 802495c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802495e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024962:	9328      	str	r3, [sp, #160]	@ 0xa0
 8024964:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8024966:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8024968:	3b01      	subs	r3, #1
 802496a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802496e:	9316      	str	r3, [sp, #88]	@ 0x58
 8024970:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024972:	bf08      	it	eq
 8024974:	4613      	moveq	r3, r2
 8024976:	ee16 6a90 	vmov	r6, s13
 802497a:	9307      	str	r3, [sp, #28]
 802497c:	eeb0 3a67 	vmov.f32	s6, s15
 8024980:	eef0 2a47 	vmov.f32	s5, s14
 8024984:	e622      	b.n	80245cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8024986:	2800      	cmp	r0, #0
 8024988:	f43f ae92 	beq.w	80246b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802498c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024990:	9308      	str	r3, [sp, #32]
 8024992:	0e1b      	lsrs	r3, r3, #24
 8024994:	9310      	str	r3, [sp, #64]	@ 0x40
 8024996:	e68b      	b.n	80246b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024998:	8839      	ldrh	r1, [r7, #0]
 802499a:	4dd4      	ldr	r5, [pc, #848]	@ (8024cec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802499c:	43db      	mvns	r3, r3
 802499e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80249a2:	fa5f f883 	uxtb.w	r8, r3
 80249a6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80249aa:	fb0e fe08 	mul.w	lr, lr, r8
 80249ae:	10c8      	asrs	r0, r1, #3
 80249b0:	00cb      	lsls	r3, r1, #3
 80249b2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80249b6:	f10e 0101 	add.w	r1, lr, #1
 80249ba:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80249be:	fb00 f008 	mul.w	r0, r0, r8
 80249c2:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80249c6:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80249ca:	f100 0e01 	add.w	lr, r0, #1
 80249ce:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80249d2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80249d6:	b2db      	uxtb	r3, r3
 80249d8:	b2c9      	uxtb	r1, r1
 80249da:	00d2      	lsls	r2, r2, #3
 80249dc:	fb03 f308 	mul.w	r3, r3, r8
 80249e0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80249e4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80249e8:	430a      	orrs	r2, r1
 80249ea:	1c59      	adds	r1, r3, #1
 80249ec:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80249f0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80249f4:	e748      	b.n	8024888 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80249f6:	f112 0801 	adds.w	r8, r2, #1
 80249fa:	f53f af4b 	bmi.w	8024894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80249fe:	4543      	cmp	r3, r8
 8024a00:	f6ff af48 	blt.w	8024894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024a04:	f11c 0801 	adds.w	r8, ip, #1
 8024a08:	f53f af44 	bmi.w	8024894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024a0c:	45c6      	cmp	lr, r8
 8024a0e:	f6ff af41 	blt.w	8024894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024a12:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8024a16:	fa0f f28e 	sxth.w	r2, lr
 8024a1a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8024a1e:	9200      	str	r2, [sp, #0]
 8024a20:	b21b      	sxth	r3, r3
 8024a22:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8024a24:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8024a26:	4639      	mov	r1, r7
 8024a28:	f7ff fc87 	bl	802433a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8024a2c:	e732      	b.n	8024894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024a2e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8024a30:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024a32:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8024a36:	1421      	asrs	r1, r4, #16
 8024a38:	1433      	asrs	r3, r6, #16
 8024a3a:	fb07 1303 	mla	r3, r7, r3, r1
 8024a3e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024a40:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8024a44:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024a48:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024a4c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024a50:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024a54:	2a00      	cmp	r2, #0
 8024a56:	f000 8107 	beq.w	8024c68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8024a5a:	684d      	ldr	r5, [r1, #4]
 8024a5c:	950d      	str	r5, [sp, #52]	@ 0x34
 8024a5e:	0e2d      	lsrs	r5, r5, #24
 8024a60:	9514      	str	r5, [sp, #80]	@ 0x50
 8024a62:	b178      	cbz	r0, 8024a84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024a64:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8024a68:	3f01      	subs	r7, #1
 8024a6a:	00bf      	lsls	r7, r7, #2
 8024a6c:	3704      	adds	r7, #4
 8024a6e:	eb01 0e07 	add.w	lr, r1, r7
 8024a72:	59c9      	ldr	r1, [r1, r7]
 8024a74:	9109      	str	r1, [sp, #36]	@ 0x24
 8024a76:	0e09      	lsrs	r1, r1, #24
 8024a78:	9111      	str	r1, [sp, #68]	@ 0x44
 8024a7a:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024a7e:	910e      	str	r1, [sp, #56]	@ 0x38
 8024a80:	0e09      	lsrs	r1, r1, #24
 8024a82:	9115      	str	r1, [sp, #84]	@ 0x54
 8024a84:	b292      	uxth	r2, r2
 8024a86:	b280      	uxth	r0, r0
 8024a88:	fb02 f900 	mul.w	r9, r2, r0
 8024a8c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024a90:	0112      	lsls	r2, r2, #4
 8024a92:	eba2 0e09 	sub.w	lr, r2, r9
 8024a96:	b280      	uxth	r0, r0
 8024a98:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8024a9c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8024a9e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024aa0:	fa1f fe8e 	uxth.w	lr, lr
 8024aa4:	1a09      	subs	r1, r1, r0
 8024aa6:	b289      	uxth	r1, r1
 8024aa8:	fb0e f202 	mul.w	r2, lr, r2
 8024aac:	fb01 220c 	mla	r2, r1, ip, r2
 8024ab0:	fb00 2205 	mla	r2, r0, r5, r2
 8024ab4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8024ab6:	fb09 2205 	mla	r2, r9, r5, r2
 8024aba:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024abe:	2a00      	cmp	r2, #0
 8024ac0:	f000 80c9 	beq.w	8024c56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024ac4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8024ac8:	d019      	beq.n	8024afe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8024aca:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8024ace:	fb0c fa0a 	mul.w	sl, ip, sl
 8024ad2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024ad6:	fb0c fc03 	mul.w	ip, ip, r3
 8024ada:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024ade:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8024ae2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8024ae6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8024aea:	4453      	add	r3, sl
 8024aec:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024af0:	0a1b      	lsrs	r3, r3, #8
 8024af2:	0a3f      	lsrs	r7, r7, #8
 8024af4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8024af8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8024afc:	433b      	orrs	r3, r7
 8024afe:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024b00:	2dff      	cmp	r5, #255	@ 0xff
 8024b02:	d020      	beq.n	8024b46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024b04:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024b06:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8024b0a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024b0c:	436f      	muls	r7, r5
 8024b0e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024b10:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024b14:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024b16:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b1a:	fb05 fa0a 	mul.w	sl, r5, sl
 8024b1e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024b22:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024b26:	44bc      	add	ip, r7
 8024b28:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024b2c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b38:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024b3c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024b40:	ea4c 050a 	orr.w	r5, ip, sl
 8024b44:	950d      	str	r5, [sp, #52]	@ 0x34
 8024b46:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024b48:	2dff      	cmp	r5, #255	@ 0xff
 8024b4a:	d020      	beq.n	8024b8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8024b4c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024b4e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8024b52:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024b54:	436f      	muls	r7, r5
 8024b56:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024b58:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8024b5c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024b5e:	fb05 fa0c 	mul.w	sl, r5, ip
 8024b62:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b66:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024b6a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024b6e:	44bc      	add	ip, r7
 8024b70:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024b74:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b80:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024b84:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024b88:	ea4c 050a 	orr.w	r5, ip, sl
 8024b8c:	9509      	str	r5, [sp, #36]	@ 0x24
 8024b8e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8024b90:	2dff      	cmp	r5, #255	@ 0xff
 8024b92:	d020      	beq.n	8024bd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024b94:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024b96:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8024b9a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8024b9c:	436f      	muls	r7, r5
 8024b9e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024ba0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024ba4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8024ba6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024baa:	fb05 fa0a 	mul.w	sl, r5, sl
 8024bae:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024bb2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024bb6:	44bc      	add	ip, r7
 8024bb8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024bbc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024bc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024bc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024bc8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024bcc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024bd0:	ea4c 050a 	orr.w	r5, ip, sl
 8024bd4:	950e      	str	r5, [sp, #56]	@ 0x38
 8024bd6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024bd8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8024bdc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024bde:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8024be2:	fb0e f707 	mul.w	r7, lr, r7
 8024be6:	fb01 770c 	mla	r7, r1, ip, r7
 8024bea:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024bee:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024bf0:	fb00 770c 	mla	r7, r0, ip, r7
 8024bf4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024bf8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024bfa:	fb09 770c 	mla	r7, r9, ip, r7
 8024bfe:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8024c02:	fb0e fe0c 	mul.w	lr, lr, ip
 8024c06:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024c0a:	fb01 e303 	mla	r3, r1, r3, lr
 8024c0e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024c10:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8024c14:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8024c16:	fb00 330a 	mla	r3, r0, sl, r3
 8024c1a:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8024c1e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024c22:	0a3f      	lsrs	r7, r7, #8
 8024c24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c28:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8024c2c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024c30:	ea47 070c 	orr.w	r7, r7, ip
 8024c34:	2aff      	cmp	r2, #255	@ 0xff
 8024c36:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8024c3a:	d11e      	bne.n	8024c7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024c3c:	097a      	lsrs	r2, r7, #5
 8024c3e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8024c42:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024c46:	f023 0307 	bic.w	r3, r3, #7
 8024c4a:	4313      	orrs	r3, r2
 8024c4c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024c50:	431f      	orrs	r7, r3
 8024c52:	f8a8 7000 	strh.w	r7, [r8]
 8024c56:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8024c58:	441c      	add	r4, r3
 8024c5a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024c5c:	f108 0802 	add.w	r8, r8, #2
 8024c60:	441e      	add	r6, r3
 8024c62:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024c66:	e644      	b.n	80248f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8024c68:	2800      	cmp	r0, #0
 8024c6a:	f43f af0b 	beq.w	8024a84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024c6e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024c72:	9109      	str	r1, [sp, #36]	@ 0x24
 8024c74:	0e09      	lsrs	r1, r1, #24
 8024c76:	9111      	str	r1, [sp, #68]	@ 0x44
 8024c78:	e704      	b.n	8024a84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024c7a:	f8b8 1000 	ldrh.w	r1, [r8]
 8024c7e:	43d2      	mvns	r2, r2
 8024c80:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024c84:	fa5f fe82 	uxtb.w	lr, r2
 8024c88:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8024c8c:	fb0c fc0e 	mul.w	ip, ip, lr
 8024c90:	10c8      	asrs	r0, r1, #3
 8024c92:	00ca      	lsls	r2, r1, #3
 8024c94:	f10c 0101 	add.w	r1, ip, #1
 8024c98:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024c9c:	0c39      	lsrs	r1, r7, #16
 8024c9e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024ca2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024ca6:	4911      	ldr	r1, [pc, #68]	@ (8024cec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024ca8:	fb00 f00e 	mul.w	r0, r0, lr
 8024cac:	fa5f fc8c 	uxtb.w	ip, ip
 8024cb0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024cb4:	b2d2      	uxtb	r2, r2
 8024cb6:	1c41      	adds	r1, r0, #1
 8024cb8:	fb02 f20e 	mul.w	r2, r2, lr
 8024cbc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024cc0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024cc4:	1c51      	adds	r1, r2, #1
 8024cc6:	00c0      	lsls	r0, r0, #3
 8024cc8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024ccc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024cd0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024cd4:	ea4c 0c00 	orr.w	ip, ip, r0
 8024cd8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024cdc:	ea47 0c0c 	orr.w	ip, r7, ip
 8024ce0:	f8a8 c000 	strh.w	ip, [r8]
 8024ce4:	e7b7      	b.n	8024c56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024ce6:	b01b      	add	sp, #108	@ 0x6c
 8024ce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024cec:	fffff800 	.word	0xfffff800

08024cf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024cf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024cf4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8024cf8:	2d00      	cmp	r5, #0
 8024cfa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024cfe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8024d02:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8024d06:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8024d0a:	fb05 0e03 	mla	lr, r5, r3, r0
 8024d0e:	f2c0 808c 	blt.w	8024e2a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024d12:	45a9      	cmp	r9, r5
 8024d14:	f340 8089 	ble.w	8024e2a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024d18:	2800      	cmp	r0, #0
 8024d1a:	f2c0 8084 	blt.w	8024e26 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024d1e:	4580      	cmp	r8, r0
 8024d20:	f340 8081 	ble.w	8024e26 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024d24:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024d28:	f01e 0f01 	tst.w	lr, #1
 8024d2c:	5d16      	ldrb	r6, [r2, r4]
 8024d2e:	bf0c      	ite	eq
 8024d30:	f006 060f 	andeq.w	r6, r6, #15
 8024d34:	1136      	asrne	r6, r6, #4
 8024d36:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024d3a:	b2f6      	uxtb	r6, r6
 8024d3c:	1c44      	adds	r4, r0, #1
 8024d3e:	d477      	bmi.n	8024e30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024d40:	45a0      	cmp	r8, r4
 8024d42:	dd75      	ble.n	8024e30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024d44:	2f00      	cmp	r7, #0
 8024d46:	d075      	beq.n	8024e34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024d48:	f10e 0a01 	add.w	sl, lr, #1
 8024d4c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024d50:	f01a 0f01 	tst.w	sl, #1
 8024d54:	5d14      	ldrb	r4, [r2, r4]
 8024d56:	bf0c      	ite	eq
 8024d58:	f004 040f 	andeq.w	r4, r4, #15
 8024d5c:	1124      	asrne	r4, r4, #4
 8024d5e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024d62:	b2e4      	uxtb	r4, r4
 8024d64:	3501      	adds	r5, #1
 8024d66:	d469      	bmi.n	8024e3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024d68:	45a9      	cmp	r9, r5
 8024d6a:	dd67      	ble.n	8024e3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024d6c:	f1bc 0f00 	cmp.w	ip, #0
 8024d70:	d067      	beq.n	8024e42 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024d72:	2800      	cmp	r0, #0
 8024d74:	db60      	blt.n	8024e38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024d76:	4580      	cmp	r8, r0
 8024d78:	dd5e      	ble.n	8024e38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024d7a:	eb03 090e 	add.w	r9, r3, lr
 8024d7e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024d82:	f019 0f01 	tst.w	r9, #1
 8024d86:	5d55      	ldrb	r5, [r2, r5]
 8024d88:	bf0c      	ite	eq
 8024d8a:	f005 050f 	andeq.w	r5, r5, #15
 8024d8e:	112d      	asrne	r5, r5, #4
 8024d90:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024d94:	b2ed      	uxtb	r5, r5
 8024d96:	3001      	adds	r0, #1
 8024d98:	d456      	bmi.n	8024e48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024d9a:	4580      	cmp	r8, r0
 8024d9c:	dd54      	ble.n	8024e48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024d9e:	2f00      	cmp	r7, #0
 8024da0:	d054      	beq.n	8024e4c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024da2:	3301      	adds	r3, #1
 8024da4:	449e      	add	lr, r3
 8024da6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024daa:	f01e 0f01 	tst.w	lr, #1
 8024dae:	5cd0      	ldrb	r0, [r2, r3]
 8024db0:	bf0c      	ite	eq
 8024db2:	f000 000f 	andeq.w	r0, r0, #15
 8024db6:	1100      	asrne	r0, r0, #4
 8024db8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024dbc:	b2c3      	uxtb	r3, r0
 8024dbe:	b2ba      	uxth	r2, r7
 8024dc0:	fa1f fc8c 	uxth.w	ip, ip
 8024dc4:	fb02 f00c 	mul.w	r0, r2, ip
 8024dc8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024dcc:	0112      	lsls	r2, r2, #4
 8024dce:	fa1f fc8c 	uxth.w	ip, ip
 8024dd2:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8024dd6:	1a12      	subs	r2, r2, r0
 8024dd8:	eba7 070c 	sub.w	r7, r7, ip
 8024ddc:	b292      	uxth	r2, r2
 8024dde:	b2bf      	uxth	r7, r7
 8024de0:	4362      	muls	r2, r4
 8024de2:	fb06 2207 	mla	r2, r6, r7, r2
 8024de6:	fb0c 2505 	mla	r5, ip, r5, r2
 8024dea:	fb00 5303 	mla	r3, r0, r3, r5
 8024dee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024df2:	b1b3      	cbz	r3, 8024e22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024df4:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8024df8:	435a      	muls	r2, r3
 8024dfa:	1c53      	adds	r3, r2, #1
 8024dfc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024e00:	4a2d      	ldr	r2, [pc, #180]	@ (8024eb8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024e02:	121b      	asrs	r3, r3, #8
 8024e04:	6812      	ldr	r2, [r2, #0]
 8024e06:	2bff      	cmp	r3, #255	@ 0xff
 8024e08:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024e0c:	d120      	bne.n	8024e50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024e0e:	4b2b      	ldr	r3, [pc, #172]	@ (8024ebc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024e10:	0950      	lsrs	r0, r2, #5
 8024e12:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024e16:	4033      	ands	r3, r6
 8024e18:	4318      	orrs	r0, r3
 8024e1a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024e1e:	4302      	orrs	r2, r0
 8024e20:	800a      	strh	r2, [r1, #0]
 8024e22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024e26:	2600      	movs	r6, #0
 8024e28:	e788      	b.n	8024d3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8024e2a:	2400      	movs	r4, #0
 8024e2c:	4626      	mov	r6, r4
 8024e2e:	e799      	b.n	8024d64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024e30:	2400      	movs	r4, #0
 8024e32:	e797      	b.n	8024d64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024e34:	463c      	mov	r4, r7
 8024e36:	e795      	b.n	8024d64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024e38:	2500      	movs	r5, #0
 8024e3a:	e7ac      	b.n	8024d96 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024e3c:	2300      	movs	r3, #0
 8024e3e:	461d      	mov	r5, r3
 8024e40:	e7bd      	b.n	8024dbe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024e42:	4663      	mov	r3, ip
 8024e44:	4665      	mov	r5, ip
 8024e46:	e7ba      	b.n	8024dbe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024e48:	2300      	movs	r3, #0
 8024e4a:	e7b8      	b.n	8024dbe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024e4c:	463b      	mov	r3, r7
 8024e4e:	e7b6      	b.n	8024dbe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024e50:	880d      	ldrh	r5, [r1, #0]
 8024e52:	b29f      	uxth	r7, r3
 8024e54:	122c      	asrs	r4, r5, #8
 8024e56:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024e5a:	43db      	mvns	r3, r3
 8024e5c:	b2db      	uxtb	r3, r3
 8024e5e:	fb10 f007 	smulbb	r0, r0, r7
 8024e62:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8024e66:	fb04 0403 	mla	r4, r4, r3, r0
 8024e6a:	b2f6      	uxtb	r6, r6
 8024e6c:	10e8      	asrs	r0, r5, #3
 8024e6e:	b2d2      	uxtb	r2, r2
 8024e70:	00ed      	lsls	r5, r5, #3
 8024e72:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024e76:	fb12 f207 	smulbb	r2, r2, r7
 8024e7a:	fb16 f607 	smulbb	r6, r6, r7
 8024e7e:	b2ed      	uxtb	r5, r5
 8024e80:	b2a4      	uxth	r4, r4
 8024e82:	fb00 6603 	mla	r6, r0, r3, r6
 8024e86:	fb05 2303 	mla	r3, r5, r3, r2
 8024e8a:	b29a      	uxth	r2, r3
 8024e8c:	1c63      	adds	r3, r4, #1
 8024e8e:	b2b0      	uxth	r0, r6
 8024e90:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024e94:	1c53      	adds	r3, r2, #1
 8024e96:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024e9a:	1c42      	adds	r2, r0, #1
 8024e9c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024ea0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8024ea4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024ea8:	0940      	lsrs	r0, r0, #5
 8024eaa:	4323      	orrs	r3, r4
 8024eac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024eb0:	4303      	orrs	r3, r0
 8024eb2:	800b      	strh	r3, [r1, #0]
 8024eb4:	e7b5      	b.n	8024e22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024eb6:	bf00      	nop
 8024eb8:	20013f70 	.word	0x20013f70
 8024ebc:	00fff800 	.word	0x00fff800

08024ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024ec4:	b097      	sub	sp, #92	@ 0x5c
 8024ec6:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 8024eca:	9214      	str	r2, [sp, #80]	@ 0x50
 8024ecc:	9309      	str	r3, [sp, #36]	@ 0x24
 8024ece:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8024ed0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8024ed4:	910d      	str	r1, [sp, #52]	@ 0x34
 8024ed6:	930f      	str	r3, [sp, #60]	@ 0x3c
 8024ed8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8024edc:	9015      	str	r0, [sp, #84]	@ 0x54
 8024ede:	6850      	ldr	r0, [r2, #4]
 8024ee0:	6812      	ldr	r2, [r2, #0]
 8024ee2:	fb00 1303 	mla	r3, r0, r3, r1
 8024ee6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024eea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024eec:	689b      	ldr	r3, [r3, #8]
 8024eee:	3301      	adds	r3, #1
 8024ef0:	f023 0301 	bic.w	r3, r3, #1
 8024ef4:	930a      	str	r3, [sp, #40]	@ 0x28
 8024ef6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024ef8:	681f      	ldr	r7, [r3, #0]
 8024efa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024efc:	2b00      	cmp	r3, #0
 8024efe:	dc03      	bgt.n	8024f08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024f00:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8024f02:	2b00      	cmp	r3, #0
 8024f04:	f340 8287 	ble.w	8025416 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024f08:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024f0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024f0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024f12:	1e48      	subs	r0, r1, #1
 8024f14:	f102 3cff 	add.w	ip, r2, #4294967295
 8024f18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024f1a:	2b00      	cmp	r3, #0
 8024f1c:	f340 80c4 	ble.w	80250a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024f20:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024f24:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024f28:	d406      	bmi.n	8024f38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024f2a:	4586      	cmp	lr, r0
 8024f2c:	da04      	bge.n	8024f38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024f2e:	2b00      	cmp	r3, #0
 8024f30:	db02      	blt.n	8024f38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024f32:	4563      	cmp	r3, ip
 8024f34:	f2c0 80b9 	blt.w	80250aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024f38:	f11e 0e01 	adds.w	lr, lr, #1
 8024f3c:	f100 80aa 	bmi.w	8025094 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024f40:	4571      	cmp	r1, lr
 8024f42:	f2c0 80a7 	blt.w	8025094 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024f46:	3301      	adds	r3, #1
 8024f48:	f100 80a4 	bmi.w	8025094 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024f4c:	429a      	cmp	r2, r3
 8024f4e:	f2c0 80a1 	blt.w	8025094 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024f52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024f54:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 8024f58:	930e      	str	r3, [sp, #56]	@ 0x38
 8024f5a:	46c8      	mov	r8, r9
 8024f5c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024f5e:	2b00      	cmp	r3, #0
 8024f60:	f340 80c3 	ble.w	80250ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024f64:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024f66:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024f6a:	1423      	asrs	r3, r4, #16
 8024f6c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024f70:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024f74:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024f78:	f100 814d 	bmi.w	8025216 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024f7c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024f80:	455b      	cmp	r3, fp
 8024f82:	f280 8148 	bge.w	8025216 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024f86:	2800      	cmp	r0, #0
 8024f88:	f2c0 8145 	blt.w	8025216 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024f8c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024f90:	4558      	cmp	r0, fp
 8024f92:	f280 8140 	bge.w	8025216 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024f96:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8024f98:	fb00 3305 	mla	r3, r0, r5, r3
 8024f9c:	0858      	lsrs	r0, r3, #1
 8024f9e:	07dd      	lsls	r5, r3, #31
 8024fa0:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024fa4:	bf54      	ite	pl
 8024fa6:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024faa:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024fae:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024fb2:	fa5f fc8c 	uxtb.w	ip, ip
 8024fb6:	2a00      	cmp	r2, #0
 8024fb8:	f000 80db 	beq.w	8025172 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024fbc:	1c58      	adds	r0, r3, #1
 8024fbe:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024fc2:	07c0      	lsls	r0, r0, #31
 8024fc4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024fc8:	bf54      	ite	pl
 8024fca:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024fce:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024fd2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024fd6:	fa5f f08e 	uxtb.w	r0, lr
 8024fda:	9010      	str	r0, [sp, #64]	@ 0x40
 8024fdc:	b1c9      	cbz	r1, 8025012 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024fde:	4453      	add	r3, sl
 8024fe0:	0858      	lsrs	r0, r3, #1
 8024fe2:	07dd      	lsls	r5, r3, #31
 8024fe4:	5c38      	ldrb	r0, [r7, r0]
 8024fe6:	bf54      	ite	pl
 8024fe8:	f000 000f 	andpl.w	r0, r0, #15
 8024fec:	1100      	asrmi	r0, r0, #4
 8024fee:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024ff2:	3301      	adds	r3, #1
 8024ff4:	b2c0      	uxtb	r0, r0
 8024ff6:	900b      	str	r0, [sp, #44]	@ 0x2c
 8024ff8:	0858      	lsrs	r0, r3, #1
 8024ffa:	07dd      	lsls	r5, r3, #31
 8024ffc:	f817 e000 	ldrb.w	lr, [r7, r0]
 8025000:	bf54      	ite	pl
 8025002:	f00e 030f 	andpl.w	r3, lr, #15
 8025006:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802500a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802500e:	b2db      	uxtb	r3, r3
 8025010:	9311      	str	r3, [sp, #68]	@ 0x44
 8025012:	b292      	uxth	r2, r2
 8025014:	b289      	uxth	r1, r1
 8025016:	fb02 f301 	mul.w	r3, r2, r1
 802501a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802501e:	0112      	lsls	r2, r2, #4
 8025020:	b289      	uxth	r1, r1
 8025022:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8025026:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8025028:	1ad2      	subs	r2, r2, r3
 802502a:	1a40      	subs	r0, r0, r1
 802502c:	b292      	uxth	r2, r2
 802502e:	436a      	muls	r2, r5
 8025030:	b280      	uxth	r0, r0
 8025032:	fb0c 2c00 	mla	ip, ip, r0, r2
 8025036:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025038:	fb01 c102 	mla	r1, r1, r2, ip
 802503c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802503e:	fb03 1302 	mla	r3, r3, r2, r1
 8025042:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025046:	b1db      	cbz	r3, 8025080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025048:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802504a:	4353      	muls	r3, r2
 802504c:	1c5a      	adds	r2, r3, #1
 802504e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025052:	4ac6      	ldr	r2, [pc, #792]	@ (802536c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025054:	121b      	asrs	r3, r3, #8
 8025056:	6812      	ldr	r2, [r2, #0]
 8025058:	2bff      	cmp	r3, #255	@ 0xff
 802505a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802505e:	f040 8099 	bne.w	8025194 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8025062:	0953      	lsrs	r3, r2, #5
 8025064:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8025068:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802506c:	f02c 0c07 	bic.w	ip, ip, #7
 8025070:	ea43 0c0c 	orr.w	ip, r3, ip
 8025074:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025078:	ea4c 0202 	orr.w	r2, ip, r2
 802507c:	f8a8 2000 	strh.w	r2, [r8]
 8025080:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8025082:	441c      	add	r4, r3
 8025084:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025086:	441e      	add	r6, r3
 8025088:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802508a:	3b01      	subs	r3, #1
 802508c:	f108 0802 	add.w	r8, r8, #2
 8025090:	930e      	str	r3, [sp, #56]	@ 0x38
 8025092:	e763      	b.n	8024f5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8025094:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8025096:	441c      	add	r4, r3
 8025098:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802509a:	441e      	add	r6, r3
 802509c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802509e:	3b01      	subs	r3, #1
 80250a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80250a2:	f109 0902 	add.w	r9, r9, #2
 80250a6:	e737      	b.n	8024f18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80250a8:	d024      	beq.n	80250f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80250aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80250ac:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 80250ae:	3b01      	subs	r3, #1
 80250b0:	fb00 4003 	mla	r0, r0, r3, r4
 80250b4:	1400      	asrs	r0, r0, #16
 80250b6:	f53f af4c 	bmi.w	8024f52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80250ba:	3901      	subs	r1, #1
 80250bc:	4288      	cmp	r0, r1
 80250be:	f6bf af48 	bge.w	8024f52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80250c2:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80250c4:	fb01 6303 	mla	r3, r1, r3, r6
 80250c8:	141b      	asrs	r3, r3, #16
 80250ca:	f53f af42 	bmi.w	8024f52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80250ce:	3a01      	subs	r2, #1
 80250d0:	4293      	cmp	r3, r2
 80250d2:	f6bf af3e 	bge.w	8024f52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80250d6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80250da:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80250de:	930e      	str	r3, [sp, #56]	@ 0x38
 80250e0:	46c8      	mov	r8, r9
 80250e2:	f1bb 0f00 	cmp.w	fp, #0
 80250e6:	f300 80b7 	bgt.w	8025258 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80250ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80250ec:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80250f0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80250f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80250f6:	2b00      	cmp	r3, #0
 80250f8:	f340 818d 	ble.w	8025416 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80250fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025100:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8025104:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025108:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802510a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802510e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025112:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025116:	eef0 6a62 	vmov.f32	s13, s5
 802511a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802511e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025122:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025126:	ee16 4a90 	vmov	r4, s13
 802512a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802512e:	eef0 6a43 	vmov.f32	s13, s6
 8025132:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025136:	ee12 2a90 	vmov	r2, s5
 802513a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802513e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025142:	ee13 2a10 	vmov	r2, s6
 8025146:	9323      	str	r3, [sp, #140]	@ 0x8c
 8025148:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802514a:	fb92 f3f3 	sdiv	r3, r2, r3
 802514e:	9324      	str	r3, [sp, #144]	@ 0x90
 8025150:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025152:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8025154:	3b01      	subs	r3, #1
 8025156:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802515a:	930d      	str	r3, [sp, #52]	@ 0x34
 802515c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802515e:	bf08      	it	eq
 8025160:	4613      	moveq	r3, r2
 8025162:	ee16 6a90 	vmov	r6, s13
 8025166:	9309      	str	r3, [sp, #36]	@ 0x24
 8025168:	eeb0 3a67 	vmov.f32	s6, s15
 802516c:	eef0 2a47 	vmov.f32	s5, s14
 8025170:	e6c3      	b.n	8024efa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025172:	2900      	cmp	r1, #0
 8025174:	f43f af4d 	beq.w	8025012 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025178:	eb0a 0003 	add.w	r0, sl, r3
 802517c:	0843      	lsrs	r3, r0, #1
 802517e:	07c0      	lsls	r0, r0, #31
 8025180:	5cfb      	ldrb	r3, [r7, r3]
 8025182:	bf54      	ite	pl
 8025184:	f003 030f 	andpl.w	r3, r3, #15
 8025188:	111b      	asrmi	r3, r3, #4
 802518a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802518e:	b2db      	uxtb	r3, r3
 8025190:	930b      	str	r3, [sp, #44]	@ 0x2c
 8025192:	e73e      	b.n	8025012 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025194:	f8b8 e000 	ldrh.w	lr, [r8]
 8025198:	fa1f fb83 	uxth.w	fp, r3
 802519c:	ea4f 202e 	mov.w	r0, lr, asr #8
 80251a0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80251a4:	43db      	mvns	r3, r3
 80251a6:	b2db      	uxtb	r3, r3
 80251a8:	fb11 f10b 	smulbb	r1, r1, fp
 80251ac:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80251b0:	fb00 1003 	mla	r0, r0, r3, r1
 80251b4:	fa5f fc8c 	uxtb.w	ip, ip
 80251b8:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80251bc:	b2d2      	uxtb	r2, r2
 80251be:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80251c2:	b280      	uxth	r0, r0
 80251c4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80251c8:	fb1c fc0b 	smulbb	ip, ip, fp
 80251cc:	fa5f fe8e 	uxtb.w	lr, lr
 80251d0:	fb12 fb0b 	smulbb	fp, r2, fp
 80251d4:	fb01 cc03 	mla	ip, r1, r3, ip
 80251d8:	fb0e bb03 	mla	fp, lr, r3, fp
 80251dc:	1c43      	adds	r3, r0, #1
 80251de:	fa1f fc8c 	uxth.w	ip, ip
 80251e2:	fa1f fb8b 	uxth.w	fp, fp
 80251e6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80251ea:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 80251ee:	f10c 0101 	add.w	r1, ip, #1
 80251f2:	f10b 0001 	add.w	r0, fp, #1
 80251f6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80251fa:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80251fe:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025202:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025206:	4318      	orrs	r0, r3
 8025208:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802520c:	ea40 000c 	orr.w	r0, r0, ip
 8025210:	f8a8 0000 	strh.w	r0, [r8]
 8025214:	e734      	b.n	8025080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025216:	f113 0b01 	adds.w	fp, r3, #1
 802521a:	f53f af31 	bmi.w	8025080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802521e:	45dc      	cmp	ip, fp
 8025220:	f6ff af2e 	blt.w	8025080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025224:	f110 0b01 	adds.w	fp, r0, #1
 8025228:	f53f af2a 	bmi.w	8025080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802522c:	45de      	cmp	lr, fp
 802522e:	f6ff af27 	blt.w	8025080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025232:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8025234:	9302      	str	r3, [sp, #8]
 8025236:	fa0f f38e 	sxth.w	r3, lr
 802523a:	9301      	str	r3, [sp, #4]
 802523c:	fa0f f38c 	sxth.w	r3, ip
 8025240:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025244:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025248:	9300      	str	r3, [sp, #0]
 802524a:	463a      	mov	r2, r7
 802524c:	4653      	mov	r3, sl
 802524e:	4641      	mov	r1, r8
 8025250:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8025252:	f7ff fd4d 	bl	8024cf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025256:	e713      	b.n	8025080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025258:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802525a:	1422      	asrs	r2, r4, #16
 802525c:	1433      	asrs	r3, r6, #16
 802525e:	fb05 2303 	mla	r3, r5, r3, r2
 8025262:	085a      	lsrs	r2, r3, #1
 8025264:	07dd      	lsls	r5, r3, #31
 8025266:	5cba      	ldrb	r2, [r7, r2]
 8025268:	bf54      	ite	pl
 802526a:	f002 020f 	andpl.w	r2, r2, #15
 802526e:	1112      	asrmi	r2, r2, #4
 8025270:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025274:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025278:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802527c:	b2d2      	uxtb	r2, r2
 802527e:	2900      	cmp	r1, #0
 8025280:	d076      	beq.n	8025370 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025282:	f103 0e01 	add.w	lr, r3, #1
 8025286:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802528a:	f01e 0f01 	tst.w	lr, #1
 802528e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025292:	bf0c      	ite	eq
 8025294:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025298:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802529c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80252a0:	fa5f f58c 	uxtb.w	r5, ip
 80252a4:	9512      	str	r5, [sp, #72]	@ 0x48
 80252a6:	b300      	cbz	r0, 80252ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80252a8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80252aa:	442b      	add	r3, r5
 80252ac:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80252b0:	07dd      	lsls	r5, r3, #31
 80252b2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80252b6:	bf54      	ite	pl
 80252b8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80252bc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80252c0:	3301      	adds	r3, #1
 80252c2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80252c6:	fa5f f58c 	uxtb.w	r5, ip
 80252ca:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80252ce:	950c      	str	r5, [sp, #48]	@ 0x30
 80252d0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80252d4:	07dd      	lsls	r5, r3, #31
 80252d6:	bf54      	ite	pl
 80252d8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80252dc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80252e0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80252e4:	fa5f f38c 	uxtb.w	r3, ip
 80252e8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80252ea:	b289      	uxth	r1, r1
 80252ec:	b280      	uxth	r0, r0
 80252ee:	fb01 f300 	mul.w	r3, r1, r0
 80252f2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80252f6:	0109      	lsls	r1, r1, #4
 80252f8:	b280      	uxth	r0, r0
 80252fa:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 80252fe:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8025300:	1ac9      	subs	r1, r1, r3
 8025302:	ebac 0c00 	sub.w	ip, ip, r0
 8025306:	b289      	uxth	r1, r1
 8025308:	4369      	muls	r1, r5
 802530a:	fa1f fc8c 	uxth.w	ip, ip
 802530e:	fb02 120c 	mla	r2, r2, ip, r1
 8025312:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8025314:	fb00 2001 	mla	r0, r0, r1, r2
 8025318:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802531a:	fb03 0302 	mla	r3, r3, r2, r0
 802531e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025322:	b1d3      	cbz	r3, 802535a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025324:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8025326:	4353      	muls	r3, r2
 8025328:	1c5a      	adds	r2, r3, #1
 802532a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802532e:	4a0f      	ldr	r2, [pc, #60]	@ (802536c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025330:	121b      	asrs	r3, r3, #8
 8025332:	6812      	ldr	r2, [r2, #0]
 8025334:	2bff      	cmp	r3, #255	@ 0xff
 8025336:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802533a:	d12d      	bne.n	8025398 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802533c:	0953      	lsrs	r3, r2, #5
 802533e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8025342:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025346:	f02c 0c07 	bic.w	ip, ip, #7
 802534a:	ea43 0c0c 	orr.w	ip, r3, ip
 802534e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025352:	ea4c 0202 	orr.w	r2, ip, r2
 8025356:	f8a8 2000 	strh.w	r2, [r8]
 802535a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802535c:	441c      	add	r4, r3
 802535e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025360:	f108 0802 	add.w	r8, r8, #2
 8025364:	441e      	add	r6, r3
 8025366:	f10b 3bff 	add.w	fp, fp, #4294967295
 802536a:	e6ba      	b.n	80250e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802536c:	20013f70 	.word	0x20013f70
 8025370:	2800      	cmp	r0, #0
 8025372:	d0ba      	beq.n	80252ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025374:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8025376:	442b      	add	r3, r5
 8025378:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802537c:	07db      	lsls	r3, r3, #31
 802537e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025382:	bf54      	ite	pl
 8025384:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025388:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802538c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025390:	fa5f f38c 	uxtb.w	r3, ip
 8025394:	930c      	str	r3, [sp, #48]	@ 0x30
 8025396:	e7a8      	b.n	80252ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025398:	f8b8 e000 	ldrh.w	lr, [r8]
 802539c:	fa1f fa83 	uxth.w	sl, r3
 80253a0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80253a4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80253a8:	43db      	mvns	r3, r3
 80253aa:	b2db      	uxtb	r3, r3
 80253ac:	fb11 f10a 	smulbb	r1, r1, sl
 80253b0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80253b4:	fb00 1003 	mla	r0, r0, r3, r1
 80253b8:	b2d2      	uxtb	r2, r2
 80253ba:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80253be:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80253c2:	fa5f fe8e 	uxtb.w	lr, lr
 80253c6:	fb12 f20a 	smulbb	r2, r2, sl
 80253ca:	fb0e 2203 	mla	r2, lr, r3, r2
 80253ce:	fa5f fc8c 	uxtb.w	ip, ip
 80253d2:	b280      	uxth	r0, r0
 80253d4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80253d8:	b292      	uxth	r2, r2
 80253da:	fb1c fc0a 	smulbb	ip, ip, sl
 80253de:	fb01 cc03 	mla	ip, r1, r3, ip
 80253e2:	1c43      	adds	r3, r0, #1
 80253e4:	1c51      	adds	r1, r2, #1
 80253e6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80253ea:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80253ee:	fa1f fc8c 	uxth.w	ip, ip
 80253f2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80253f6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80253fa:	4308      	orrs	r0, r1
 80253fc:	f10c 0101 	add.w	r1, ip, #1
 8025400:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025404:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025408:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802540c:	ea40 000c 	orr.w	r0, r0, ip
 8025410:	f8a8 0000 	strh.w	r0, [r8]
 8025414:	e7a1      	b.n	802535a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025416:	b017      	add	sp, #92	@ 0x5c
 8025418:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802541c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 802541c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025420:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8025424:	2d00      	cmp	r5, #0
 8025426:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802542a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802542e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8025432:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8025436:	fb05 0e03 	mla	lr, r5, r3, r0
 802543a:	f2c0 80b0 	blt.w	802559e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802543e:	45a9      	cmp	r9, r5
 8025440:	f340 80ad 	ble.w	802559e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025444:	2800      	cmp	r0, #0
 8025446:	f2c0 80a8 	blt.w	802559a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802544a:	4580      	cmp	r8, r0
 802544c:	f340 80a5 	ble.w	802559a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025450:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025454:	f01e 0f01 	tst.w	lr, #1
 8025458:	5d16      	ldrb	r6, [r2, r4]
 802545a:	bf0c      	ite	eq
 802545c:	f006 060f 	andeq.w	r6, r6, #15
 8025460:	1136      	asrne	r6, r6, #4
 8025462:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025466:	b2f6      	uxtb	r6, r6
 8025468:	1c44      	adds	r4, r0, #1
 802546a:	f100 809b 	bmi.w	80255a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802546e:	45a0      	cmp	r8, r4
 8025470:	f340 8098 	ble.w	80255a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025474:	2f00      	cmp	r7, #0
 8025476:	f000 8097 	beq.w	80255a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802547a:	f10e 0a01 	add.w	sl, lr, #1
 802547e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025482:	f01a 0f01 	tst.w	sl, #1
 8025486:	5d14      	ldrb	r4, [r2, r4]
 8025488:	bf0c      	ite	eq
 802548a:	f004 040f 	andeq.w	r4, r4, #15
 802548e:	1124      	asrne	r4, r4, #4
 8025490:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025494:	b2e4      	uxtb	r4, r4
 8025496:	3501      	adds	r5, #1
 8025498:	f100 808a 	bmi.w	80255b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802549c:	45a9      	cmp	r9, r5
 802549e:	f340 8087 	ble.w	80255b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80254a2:	f1bc 0f00 	cmp.w	ip, #0
 80254a6:	f000 8086 	beq.w	80255b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80254aa:	2800      	cmp	r0, #0
 80254ac:	db7e      	blt.n	80255ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80254ae:	4580      	cmp	r8, r0
 80254b0:	dd7c      	ble.n	80255ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80254b2:	eb03 090e 	add.w	r9, r3, lr
 80254b6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80254ba:	f019 0f01 	tst.w	r9, #1
 80254be:	5d55      	ldrb	r5, [r2, r5]
 80254c0:	bf0c      	ite	eq
 80254c2:	f005 050f 	andeq.w	r5, r5, #15
 80254c6:	112d      	asrne	r5, r5, #4
 80254c8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80254cc:	b2ed      	uxtb	r5, r5
 80254ce:	3001      	adds	r0, #1
 80254d0:	d474      	bmi.n	80255bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80254d2:	4580      	cmp	r8, r0
 80254d4:	dd72      	ble.n	80255bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80254d6:	2f00      	cmp	r7, #0
 80254d8:	d072      	beq.n	80255c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80254da:	3301      	adds	r3, #1
 80254dc:	449e      	add	lr, r3
 80254de:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80254e2:	f01e 0f01 	tst.w	lr, #1
 80254e6:	5cd0      	ldrb	r0, [r2, r3]
 80254e8:	bf0c      	ite	eq
 80254ea:	f000 000f 	andeq.w	r0, r0, #15
 80254ee:	1100      	asrne	r0, r0, #4
 80254f0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80254f4:	b2c3      	uxtb	r3, r0
 80254f6:	b2ba      	uxth	r2, r7
 80254f8:	fa1f fc8c 	uxth.w	ip, ip
 80254fc:	fb02 f00c 	mul.w	r0, r2, ip
 8025500:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025504:	0112      	lsls	r2, r2, #4
 8025506:	fa1f fc8c 	uxth.w	ip, ip
 802550a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802550e:	1a12      	subs	r2, r2, r0
 8025510:	eba7 070c 	sub.w	r7, r7, ip
 8025514:	b292      	uxth	r2, r2
 8025516:	b2bf      	uxth	r7, r7
 8025518:	4362      	muls	r2, r4
 802551a:	fb06 2207 	mla	r2, r6, r7, r2
 802551e:	fb0c 2505 	mla	r5, ip, r5, r2
 8025522:	fb00 5303 	mla	r3, r0, r3, r5
 8025526:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802552a:	b3a3      	cbz	r3, 8025596 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 802552c:	4a25      	ldr	r2, [pc, #148]	@ (80255c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 802552e:	880e      	ldrh	r6, [r1, #0]
 8025530:	6815      	ldr	r5, [r2, #0]
 8025532:	1234      	asrs	r4, r6, #8
 8025534:	b29a      	uxth	r2, r3
 8025536:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802553a:	43db      	mvns	r3, r3
 802553c:	b2db      	uxtb	r3, r3
 802553e:	fb10 f002 	smulbb	r0, r0, r2
 8025542:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025546:	fb04 0403 	mla	r4, r4, r3, r0
 802554a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802554e:	10f0      	asrs	r0, r6, #3
 8025550:	b2ed      	uxtb	r5, r5
 8025552:	00f6      	lsls	r6, r6, #3
 8025554:	fb17 f702 	smulbb	r7, r7, r2
 8025558:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802555c:	fb15 f202 	smulbb	r2, r5, r2
 8025560:	b2f6      	uxtb	r6, r6
 8025562:	b2a4      	uxth	r4, r4
 8025564:	fb00 7003 	mla	r0, r0, r3, r7
 8025568:	fb06 2303 	mla	r3, r6, r3, r2
 802556c:	b29a      	uxth	r2, r3
 802556e:	1c63      	adds	r3, r4, #1
 8025570:	b280      	uxth	r0, r0
 8025572:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025576:	1c53      	adds	r3, r2, #1
 8025578:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802557c:	1c42      	adds	r2, r0, #1
 802557e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025582:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8025586:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802558a:	0940      	lsrs	r0, r0, #5
 802558c:	4323      	orrs	r3, r4
 802558e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025592:	4303      	orrs	r3, r0
 8025594:	800b      	strh	r3, [r1, #0]
 8025596:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802559a:	2600      	movs	r6, #0
 802559c:	e764      	b.n	8025468 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802559e:	2400      	movs	r4, #0
 80255a0:	4626      	mov	r6, r4
 80255a2:	e778      	b.n	8025496 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80255a4:	2400      	movs	r4, #0
 80255a6:	e776      	b.n	8025496 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80255a8:	463c      	mov	r4, r7
 80255aa:	e774      	b.n	8025496 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80255ac:	2500      	movs	r5, #0
 80255ae:	e78e      	b.n	80254ce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80255b0:	2300      	movs	r3, #0
 80255b2:	461d      	mov	r5, r3
 80255b4:	e79f      	b.n	80254f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80255b6:	4663      	mov	r3, ip
 80255b8:	4665      	mov	r5, ip
 80255ba:	e79c      	b.n	80254f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80255bc:	2300      	movs	r3, #0
 80255be:	e79a      	b.n	80254f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80255c0:	463b      	mov	r3, r7
 80255c2:	e798      	b.n	80254f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80255c4:	20013f70 	.word	0x20013f70

080255c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80255c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255cc:	b093      	sub	sp, #76	@ 0x4c
 80255ce:	461d      	mov	r5, r3
 80255d0:	920c      	str	r2, [sp, #48]	@ 0x30
 80255d2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80255d4:	9107      	str	r1, [sp, #28]
 80255d6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80255da:	9011      	str	r0, [sp, #68]	@ 0x44
 80255dc:	6850      	ldr	r0, [r2, #4]
 80255de:	6812      	ldr	r2, [r2, #0]
 80255e0:	fb00 1303 	mla	r3, r0, r3, r1
 80255e4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80255e8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80255ea:	689b      	ldr	r3, [r3, #8]
 80255ec:	3301      	adds	r3, #1
 80255ee:	f023 0301 	bic.w	r3, r3, #1
 80255f2:	9306      	str	r3, [sp, #24]
 80255f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80255f6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 80255fa:	681f      	ldr	r7, [r3, #0]
 80255fc:	9b07      	ldr	r3, [sp, #28]
 80255fe:	2b00      	cmp	r3, #0
 8025600:	dc03      	bgt.n	802560a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025602:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025604:	2b00      	cmp	r3, #0
 8025606:	f340 8267 	ble.w	8025ad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802560a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802560c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025610:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025614:	1e48      	subs	r0, r1, #1
 8025616:	f102 3cff 	add.w	ip, r2, #4294967295
 802561a:	2d00      	cmp	r5, #0
 802561c:	f340 80b8 	ble.w	8025790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025620:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025624:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025628:	d406      	bmi.n	8025638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802562a:	4586      	cmp	lr, r0
 802562c:	da04      	bge.n	8025638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802562e:	2b00      	cmp	r3, #0
 8025630:	db02      	blt.n	8025638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025632:	4563      	cmp	r3, ip
 8025634:	f2c0 80ad 	blt.w	8025792 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025638:	f11e 0e01 	adds.w	lr, lr, #1
 802563c:	f100 80a0 	bmi.w	8025780 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025640:	4571      	cmp	r1, lr
 8025642:	f2c0 809d 	blt.w	8025780 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025646:	3301      	adds	r3, #1
 8025648:	f100 809a 	bmi.w	8025780 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802564c:	429a      	cmp	r2, r3
 802564e:	f2c0 8097 	blt.w	8025780 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025652:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8025656:	9509      	str	r5, [sp, #36]	@ 0x24
 8025658:	46c8      	mov	r8, r9
 802565a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802565c:	2b00      	cmp	r3, #0
 802565e:	f340 80b6 	ble.w	80257ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8025662:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8025666:	9308      	str	r3, [sp, #32]
 8025668:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802566a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802566e:	1423      	asrs	r3, r4, #16
 8025670:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025674:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025678:	f100 813e 	bmi.w	80258f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802567c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025680:	455b      	cmp	r3, fp
 8025682:	f280 8139 	bge.w	80258f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025686:	2800      	cmp	r0, #0
 8025688:	f2c0 8136 	blt.w	80258f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802568c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025690:	4558      	cmp	r0, fp
 8025692:	f280 8131 	bge.w	80258f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025696:	9a06      	ldr	r2, [sp, #24]
 8025698:	fb00 3302 	mla	r3, r0, r2, r3
 802569c:	0858      	lsrs	r0, r3, #1
 802569e:	07da      	lsls	r2, r3, #31
 80256a0:	f817 c000 	ldrb.w	ip, [r7, r0]
 80256a4:	9a08      	ldr	r2, [sp, #32]
 80256a6:	bf54      	ite	pl
 80256a8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80256ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80256b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80256b4:	fa5f fc8c 	uxtb.w	ip, ip
 80256b8:	2a00      	cmp	r2, #0
 80256ba:	f000 80cb 	beq.w	8025854 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80256be:	1c58      	adds	r0, r3, #1
 80256c0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80256c4:	07c0      	lsls	r0, r0, #31
 80256c6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80256ca:	bf54      	ite	pl
 80256cc:	f00e 0e0f 	andpl.w	lr, lr, #15
 80256d0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80256d4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80256d8:	fa5f fe8e 	uxtb.w	lr, lr
 80256dc:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 80256e0:	b1b9      	cbz	r1, 8025712 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80256e2:	4453      	add	r3, sl
 80256e4:	0858      	lsrs	r0, r3, #1
 80256e6:	07da      	lsls	r2, r3, #31
 80256e8:	5c38      	ldrb	r0, [r7, r0]
 80256ea:	bf54      	ite	pl
 80256ec:	f000 000f 	andpl.w	r0, r0, #15
 80256f0:	1100      	asrmi	r0, r0, #4
 80256f2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80256f6:	b2c0      	uxtb	r0, r0
 80256f8:	900a      	str	r0, [sp, #40]	@ 0x28
 80256fa:	1c58      	adds	r0, r3, #1
 80256fc:	0843      	lsrs	r3, r0, #1
 80256fe:	07c2      	lsls	r2, r0, #31
 8025700:	5cfb      	ldrb	r3, [r7, r3]
 8025702:	bf54      	ite	pl
 8025704:	f003 030f 	andpl.w	r3, r3, #15
 8025708:	111b      	asrmi	r3, r3, #4
 802570a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802570e:	b2db      	uxtb	r3, r3
 8025710:	930e      	str	r3, [sp, #56]	@ 0x38
 8025712:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025716:	b289      	uxth	r1, r1
 8025718:	fb02 f301 	mul.w	r3, r2, r1
 802571c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025720:	0112      	lsls	r2, r2, #4
 8025722:	b289      	uxth	r1, r1
 8025724:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8025728:	1a40      	subs	r0, r0, r1
 802572a:	fa1f fe80 	uxth.w	lr, r0
 802572e:	1ad2      	subs	r2, r2, r3
 8025730:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8025732:	b292      	uxth	r2, r2
 8025734:	4342      	muls	r2, r0
 8025736:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802573a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802573c:	fb01 c102 	mla	r1, r1, r2, ip
 8025740:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8025742:	fb03 1302 	mla	r3, r3, r2, r1
 8025746:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802574a:	2bff      	cmp	r3, #255	@ 0xff
 802574c:	f040 8093 	bne.w	8025876 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025750:	4bbe      	ldr	r3, [pc, #760]	@ (8025a4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025752:	681a      	ldr	r2, [r3, #0]
 8025754:	4bbe      	ldr	r3, [pc, #760]	@ (8025a50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025756:	0951      	lsrs	r1, r2, #5
 8025758:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802575c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025760:	430b      	orrs	r3, r1
 8025762:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025766:	4313      	orrs	r3, r2
 8025768:	f8a8 3000 	strh.w	r3, [r8]
 802576c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802576e:	441c      	add	r4, r3
 8025770:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025772:	441e      	add	r6, r3
 8025774:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025776:	3b01      	subs	r3, #1
 8025778:	f108 0802 	add.w	r8, r8, #2
 802577c:	9309      	str	r3, [sp, #36]	@ 0x24
 802577e:	e76c      	b.n	802565a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025780:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025782:	441c      	add	r4, r3
 8025784:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025786:	3d01      	subs	r5, #1
 8025788:	441e      	add	r6, r3
 802578a:	f109 0902 	add.w	r9, r9, #2
 802578e:	e744      	b.n	802561a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025790:	d021      	beq.n	80257d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8025792:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8025794:	1e6b      	subs	r3, r5, #1
 8025796:	fb00 4003 	mla	r0, r0, r3, r4
 802579a:	1400      	asrs	r0, r0, #16
 802579c:	f53f af59 	bmi.w	8025652 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80257a0:	3901      	subs	r1, #1
 80257a2:	4288      	cmp	r0, r1
 80257a4:	f6bf af55 	bge.w	8025652 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80257a8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80257aa:	fb01 6303 	mla	r3, r1, r3, r6
 80257ae:	141b      	asrs	r3, r3, #16
 80257b0:	f53f af4f 	bmi.w	8025652 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80257b4:	3a01      	subs	r2, #1
 80257b6:	4293      	cmp	r3, r2
 80257b8:	f6bf af4b 	bge.w	8025652 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80257bc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80257c0:	9308      	str	r3, [sp, #32]
 80257c2:	46a8      	mov	r8, r5
 80257c4:	46ce      	mov	lr, r9
 80257c6:	f1b8 0f00 	cmp.w	r8, #0
 80257ca:	f300 80b5 	bgt.w	8025938 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80257ce:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80257d2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80257d6:	9b07      	ldr	r3, [sp, #28]
 80257d8:	2b00      	cmp	r3, #0
 80257da:	f340 817d 	ble.w	8025ad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80257de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80257e2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80257e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80257ea:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80257ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80257f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80257f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80257f8:	eef0 6a62 	vmov.f32	s13, s5
 80257fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025800:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025804:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025808:	ee16 4a90 	vmov	r4, s13
 802580c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025810:	eef0 6a43 	vmov.f32	s13, s6
 8025814:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025818:	ee12 2a90 	vmov	r2, s5
 802581c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025820:	fb92 f3f3 	sdiv	r3, r2, r3
 8025824:	ee13 2a10 	vmov	r2, s6
 8025828:	931f      	str	r3, [sp, #124]	@ 0x7c
 802582a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802582c:	fb92 f3f3 	sdiv	r3, r2, r3
 8025830:	9320      	str	r3, [sp, #128]	@ 0x80
 8025832:	9b07      	ldr	r3, [sp, #28]
 8025834:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8025836:	3b01      	subs	r3, #1
 8025838:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802583c:	9307      	str	r3, [sp, #28]
 802583e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025840:	ee16 6a90 	vmov	r6, s13
 8025844:	bf14      	ite	ne
 8025846:	461d      	movne	r5, r3
 8025848:	4615      	moveq	r5, r2
 802584a:	eeb0 3a67 	vmov.f32	s6, s15
 802584e:	eef0 2a47 	vmov.f32	s5, s14
 8025852:	e6d3      	b.n	80255fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8025854:	2900      	cmp	r1, #0
 8025856:	f43f af5c 	beq.w	8025712 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802585a:	eb0a 0003 	add.w	r0, sl, r3
 802585e:	0843      	lsrs	r3, r0, #1
 8025860:	07c0      	lsls	r0, r0, #31
 8025862:	5cfb      	ldrb	r3, [r7, r3]
 8025864:	bf54      	ite	pl
 8025866:	f003 030f 	andpl.w	r3, r3, #15
 802586a:	111b      	asrmi	r3, r3, #4
 802586c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025870:	b2db      	uxtb	r3, r3
 8025872:	930a      	str	r3, [sp, #40]	@ 0x28
 8025874:	e74d      	b.n	8025712 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025876:	2b00      	cmp	r3, #0
 8025878:	f43f af78 	beq.w	802576c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802587c:	4a73      	ldr	r2, [pc, #460]	@ (8025a4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802587e:	f8b8 c000 	ldrh.w	ip, [r8]
 8025882:	6810      	ldr	r0, [r2, #0]
 8025884:	fa1f fe83 	uxth.w	lr, r3
 8025888:	ea4f 212c 	mov.w	r1, ip, asr #8
 802588c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025890:	43db      	mvns	r3, r3
 8025892:	b2db      	uxtb	r3, r3
 8025894:	fb12 f20e 	smulbb	r2, r2, lr
 8025898:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802589c:	fb01 2103 	mla	r1, r1, r3, r2
 80258a0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80258a4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80258a8:	b2c0      	uxtb	r0, r0
 80258aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80258ae:	fb1b fb0e 	smulbb	fp, fp, lr
 80258b2:	b289      	uxth	r1, r1
 80258b4:	fb10 fe0e 	smulbb	lr, r0, lr
 80258b8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80258bc:	fa5f fc8c 	uxtb.w	ip, ip
 80258c0:	fb02 b203 	mla	r2, r2, r3, fp
 80258c4:	1c48      	adds	r0, r1, #1
 80258c6:	fb0c e303 	mla	r3, ip, r3, lr
 80258ca:	b292      	uxth	r2, r2
 80258cc:	b29b      	uxth	r3, r3
 80258ce:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80258d2:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 80258d6:	f102 0b01 	add.w	fp, r2, #1
 80258da:	1c59      	adds	r1, r3, #1
 80258dc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80258e0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80258e4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80258e8:	0952      	lsrs	r2, r2, #5
 80258ea:	4301      	orrs	r1, r0
 80258ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80258f0:	4311      	orrs	r1, r2
 80258f2:	f8a8 1000 	strh.w	r1, [r8]
 80258f6:	e739      	b.n	802576c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80258f8:	f113 0b01 	adds.w	fp, r3, #1
 80258fc:	f53f af36 	bmi.w	802576c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025900:	45dc      	cmp	ip, fp
 8025902:	f6ff af33 	blt.w	802576c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025906:	f110 0b01 	adds.w	fp, r0, #1
 802590a:	f53f af2f 	bmi.w	802576c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802590e:	45de      	cmp	lr, fp
 8025910:	f6ff af2c 	blt.w	802576c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025914:	9a08      	ldr	r2, [sp, #32]
 8025916:	9302      	str	r3, [sp, #8]
 8025918:	fa0f f38e 	sxth.w	r3, lr
 802591c:	9301      	str	r3, [sp, #4]
 802591e:	fa0f f38c 	sxth.w	r3, ip
 8025922:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025926:	9105      	str	r1, [sp, #20]
 8025928:	9300      	str	r3, [sp, #0]
 802592a:	463a      	mov	r2, r7
 802592c:	4653      	mov	r3, sl
 802592e:	4641      	mov	r1, r8
 8025930:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8025932:	f7ff fd73 	bl	802541c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8025936:	e719      	b.n	802576c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025938:	9906      	ldr	r1, [sp, #24]
 802593a:	1422      	asrs	r2, r4, #16
 802593c:	1433      	asrs	r3, r6, #16
 802593e:	fb01 2303 	mla	r3, r1, r3, r2
 8025942:	085a      	lsrs	r2, r3, #1
 8025944:	07d9      	lsls	r1, r3, #31
 8025946:	5cba      	ldrb	r2, [r7, r2]
 8025948:	bf54      	ite	pl
 802594a:	f002 020f 	andpl.w	r2, r2, #15
 802594e:	1112      	asrmi	r2, r2, #4
 8025950:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025954:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025958:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802595c:	b2d2      	uxtb	r2, r2
 802595e:	2800      	cmp	r0, #0
 8025960:	d062      	beq.n	8025a28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8025962:	f103 0a01 	add.w	sl, r3, #1
 8025966:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802596a:	f01a 0f01 	tst.w	sl, #1
 802596e:	5c79      	ldrb	r1, [r7, r1]
 8025970:	bf0c      	ite	eq
 8025972:	f001 010f 	andeq.w	r1, r1, #15
 8025976:	1109      	asrne	r1, r1, #4
 8025978:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802597c:	b2c9      	uxtb	r1, r1
 802597e:	910f      	str	r1, [sp, #60]	@ 0x3c
 8025980:	f1bc 0f00 	cmp.w	ip, #0
 8025984:	d019      	beq.n	80259ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025986:	9908      	ldr	r1, [sp, #32]
 8025988:	440b      	add	r3, r1
 802598a:	0859      	lsrs	r1, r3, #1
 802598c:	f013 0f01 	tst.w	r3, #1
 8025990:	5c79      	ldrb	r1, [r7, r1]
 8025992:	bf0c      	ite	eq
 8025994:	f001 010f 	andeq.w	r1, r1, #15
 8025998:	1109      	asrne	r1, r1, #4
 802599a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802599e:	b2c9      	uxtb	r1, r1
 80259a0:	3301      	adds	r3, #1
 80259a2:	910b      	str	r1, [sp, #44]	@ 0x2c
 80259a4:	0859      	lsrs	r1, r3, #1
 80259a6:	07db      	lsls	r3, r3, #31
 80259a8:	5c79      	ldrb	r1, [r7, r1]
 80259aa:	bf54      	ite	pl
 80259ac:	f001 010f 	andpl.w	r1, r1, #15
 80259b0:	1109      	asrmi	r1, r1, #4
 80259b2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80259b6:	b2c9      	uxtb	r1, r1
 80259b8:	9110      	str	r1, [sp, #64]	@ 0x40
 80259ba:	b280      	uxth	r0, r0
 80259bc:	fa1f fc8c 	uxth.w	ip, ip
 80259c0:	fb00 f30c 	mul.w	r3, r0, ip
 80259c4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80259c8:	0100      	lsls	r0, r0, #4
 80259ca:	fa1f fc8c 	uxth.w	ip, ip
 80259ce:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 80259d2:	eba1 010c 	sub.w	r1, r1, ip
 80259d6:	fa1f fa81 	uxth.w	sl, r1
 80259da:	1ac0      	subs	r0, r0, r3
 80259dc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80259de:	b280      	uxth	r0, r0
 80259e0:	4348      	muls	r0, r1
 80259e2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80259e4:	fb02 020a 	mla	r2, r2, sl, r0
 80259e8:	fb0c 2c01 	mla	ip, ip, r1, r2
 80259ec:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80259ee:	fb03 c302 	mla	r3, r3, r2, ip
 80259f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80259f6:	2bff      	cmp	r3, #255	@ 0xff
 80259f8:	d12c      	bne.n	8025a54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80259fa:	4b14      	ldr	r3, [pc, #80]	@ (8025a4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80259fc:	681a      	ldr	r2, [r3, #0]
 80259fe:	4b14      	ldr	r3, [pc, #80]	@ (8025a50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025a00:	0951      	lsrs	r1, r2, #5
 8025a02:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025a06:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025a0a:	430b      	orrs	r3, r1
 8025a0c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025a10:	4313      	orrs	r3, r2
 8025a12:	f8ae 3000 	strh.w	r3, [lr]
 8025a16:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025a18:	441c      	add	r4, r3
 8025a1a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025a1c:	f10e 0e02 	add.w	lr, lr, #2
 8025a20:	441e      	add	r6, r3
 8025a22:	f108 38ff 	add.w	r8, r8, #4294967295
 8025a26:	e6ce      	b.n	80257c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8025a28:	f1bc 0f00 	cmp.w	ip, #0
 8025a2c:	d0c5      	beq.n	80259ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025a2e:	9908      	ldr	r1, [sp, #32]
 8025a30:	440b      	add	r3, r1
 8025a32:	0859      	lsrs	r1, r3, #1
 8025a34:	07db      	lsls	r3, r3, #31
 8025a36:	5c79      	ldrb	r1, [r7, r1]
 8025a38:	bf54      	ite	pl
 8025a3a:	f001 010f 	andpl.w	r1, r1, #15
 8025a3e:	1109      	asrmi	r1, r1, #4
 8025a40:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025a44:	b2c9      	uxtb	r1, r1
 8025a46:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025a48:	e7b7      	b.n	80259ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025a4a:	bf00      	nop
 8025a4c:	20013f70 	.word	0x20013f70
 8025a50:	fffff800 	.word	0xfffff800
 8025a54:	2b00      	cmp	r3, #0
 8025a56:	d0de      	beq.n	8025a16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025a58:	4a21      	ldr	r2, [pc, #132]	@ (8025ae0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8025a5a:	f8be c000 	ldrh.w	ip, [lr]
 8025a5e:	6810      	ldr	r0, [r2, #0]
 8025a60:	fa1f fa83 	uxth.w	sl, r3
 8025a64:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025a68:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025a6c:	43db      	mvns	r3, r3
 8025a6e:	b2db      	uxtb	r3, r3
 8025a70:	fb12 f20a 	smulbb	r2, r2, sl
 8025a74:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025a78:	fb01 2103 	mla	r1, r1, r3, r2
 8025a7c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025a80:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025a84:	b2c0      	uxtb	r0, r0
 8025a86:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8025a8a:	fa5f fc8c 	uxtb.w	ip, ip
 8025a8e:	fb10 f00a 	smulbb	r0, r0, sl
 8025a92:	fb0c 0003 	mla	r0, ip, r3, r0
 8025a96:	b289      	uxth	r1, r1
 8025a98:	fb1b fb0a 	smulbb	fp, fp, sl
 8025a9c:	b280      	uxth	r0, r0
 8025a9e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025aa2:	fb02 b203 	mla	r2, r2, r3, fp
 8025aa6:	1c4b      	adds	r3, r1, #1
 8025aa8:	f100 0b01 	add.w	fp, r0, #1
 8025aac:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025ab0:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025ab4:	b292      	uxth	r2, r2
 8025ab6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8025aba:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025abe:	ea4b 0101 	orr.w	r1, fp, r1
 8025ac2:	f102 0b01 	add.w	fp, r2, #1
 8025ac6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025aca:	0952      	lsrs	r2, r2, #5
 8025acc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025ad0:	4311      	orrs	r1, r2
 8025ad2:	f8ae 1000 	strh.w	r1, [lr]
 8025ad6:	e79e      	b.n	8025a16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025ad8:	b013      	add	sp, #76	@ 0x4c
 8025ada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025ade:	bf00      	nop
 8025ae0:	20013f70 	.word	0x20013f70

08025ae4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8025ae4:	b570      	push	{r4, r5, r6, lr}
 8025ae6:	1208      	asrs	r0, r1, #8
 8025ae8:	b29e      	uxth	r6, r3
 8025aea:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8025aee:	1213      	asrs	r3, r2, #8
 8025af0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025af4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8025af8:	fb13 f305 	smulbb	r3, r3, r5
 8025afc:	fb10 f006 	smulbb	r0, r0, r6
 8025b00:	4418      	add	r0, r3
 8025b02:	10cc      	asrs	r4, r1, #3
 8025b04:	10d3      	asrs	r3, r2, #3
 8025b06:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8025b0a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8025b0e:	fb13 f305 	smulbb	r3, r3, r5
 8025b12:	fb14 f406 	smulbb	r4, r4, r6
 8025b16:	00c9      	lsls	r1, r1, #3
 8025b18:	00d2      	lsls	r2, r2, #3
 8025b1a:	441c      	add	r4, r3
 8025b1c:	b2d2      	uxtb	r2, r2
 8025b1e:	b2cb      	uxtb	r3, r1
 8025b20:	fb12 f205 	smulbb	r2, r2, r5
 8025b24:	b280      	uxth	r0, r0
 8025b26:	fb13 f306 	smulbb	r3, r3, r6
 8025b2a:	4413      	add	r3, r2
 8025b2c:	1c42      	adds	r2, r0, #1
 8025b2e:	b29b      	uxth	r3, r3
 8025b30:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025b34:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8025b38:	1c58      	adds	r0, r3, #1
 8025b3a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025b3e:	b2a4      	uxth	r4, r4
 8025b40:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025b44:	4310      	orrs	r0, r2
 8025b46:	1c62      	adds	r2, r4, #1
 8025b48:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025b4c:	0964      	lsrs	r4, r4, #5
 8025b4e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8025b52:	4320      	orrs	r0, r4
 8025b54:	bd70      	pop	{r4, r5, r6, pc}
	...

08025b58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8025b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025b5c:	b08f      	sub	sp, #60	@ 0x3c
 8025b5e:	461c      	mov	r4, r3
 8025b60:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8025b64:	9004      	str	r0, [sp, #16]
 8025b66:	460d      	mov	r5, r1
 8025b68:	4616      	mov	r6, r2
 8025b6a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025b6c:	2f00      	cmp	r7, #0
 8025b6e:	f000 80f6 	beq.w	8025d5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8025b72:	6820      	ldr	r0, [r4, #0]
 8025b74:	6861      	ldr	r1, [r4, #4]
 8025b76:	aa0a      	add	r2, sp, #40	@ 0x28
 8025b78:	c203      	stmia	r2!, {r0, r1}
 8025b7a:	6818      	ldr	r0, [r3, #0]
 8025b7c:	6859      	ldr	r1, [r3, #4]
 8025b7e:	aa0c      	add	r2, sp, #48	@ 0x30
 8025b80:	c203      	stmia	r2!, {r0, r1}
 8025b82:	a80a      	add	r0, sp, #40	@ 0x28
 8025b84:	f7ee fbb6 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025b88:	4621      	mov	r1, r4
 8025b8a:	a80c      	add	r0, sp, #48	@ 0x30
 8025b8c:	f7ee fbda 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025b90:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8025b94:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8025b98:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8025b9c:	f002 0301 	and.w	r3, r2, #1
 8025ba0:	9306      	str	r3, [sp, #24]
 8025ba2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025ba6:	f003 0101 	and.w	r1, r3, #1
 8025baa:	9105      	str	r1, [sp, #20]
 8025bac:	9805      	ldr	r0, [sp, #20]
 8025bae:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8025bb2:	4403      	add	r3, r0
 8025bb4:	fb01 2303 	mla	r3, r1, r3, r2
 8025bb8:	f04f 0802 	mov.w	r8, #2
 8025bbc:	fb93 f3f8 	sdiv	r3, r3, r8
 8025bc0:	441d      	add	r5, r3
 8025bc2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8025bc6:	441a      	add	r2, r3
 8025bc8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8025bcc:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8025bd0:	4419      	add	r1, r3
 8025bd2:	4b64      	ldr	r3, [pc, #400]	@ (8025d64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025bd4:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8025bd8:	6818      	ldr	r0, [r3, #0]
 8025bda:	6803      	ldr	r3, [r0, #0]
 8025bdc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025bde:	4798      	blx	r3
 8025be0:	4a61      	ldr	r2, [pc, #388]	@ (8025d68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025be2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8025be6:	8813      	ldrh	r3, [r2, #0]
 8025be8:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8025bec:	2fff      	cmp	r7, #255	@ 0xff
 8025bee:	fb03 a404 	mla	r4, r3, r4, sl
 8025bf2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025bf6:	f106 0604 	add.w	r6, r6, #4
 8025bfa:	4611      	mov	r1, r2
 8025bfc:	fb03 fb0b 	mul.w	fp, r3, fp
 8025c00:	d06b      	beq.n	8025cda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025c02:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8025c06:	9303      	str	r3, [sp, #12]
 8025c08:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025c0c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025c10:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8025c14:	9b07      	ldr	r3, [sp, #28]
 8025c16:	42a3      	cmp	r3, r4
 8025c18:	f240 809c 	bls.w	8025d54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025c1c:	9b06      	ldr	r3, [sp, #24]
 8025c1e:	2b00      	cmp	r3, #0
 8025c20:	d039      	beq.n	8025c96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8025c22:	782b      	ldrb	r3, [r5, #0]
 8025c24:	8822      	ldrh	r2, [r4, #0]
 8025c26:	9804      	ldr	r0, [sp, #16]
 8025c28:	f003 030f 	and.w	r3, r3, #15
 8025c2c:	f105 0801 	add.w	r8, r5, #1
 8025c30:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025c34:	9b03      	ldr	r3, [sp, #12]
 8025c36:	9300      	str	r3, [sp, #0]
 8025c38:	463b      	mov	r3, r7
 8025c3a:	f7ff ff53 	bl	8025ae4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025c3e:	f824 0b02 	strh.w	r0, [r4], #2
 8025c42:	f109 3bff 	add.w	fp, r9, #4294967295
 8025c46:	f1bb 0f01 	cmp.w	fp, #1
 8025c4a:	46a2      	mov	sl, r4
 8025c4c:	f104 0404 	add.w	r4, r4, #4
 8025c50:	dd24      	ble.n	8025c9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8025c52:	f898 3000 	ldrb.w	r3, [r8]
 8025c56:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025c5a:	9804      	ldr	r0, [sp, #16]
 8025c5c:	091b      	lsrs	r3, r3, #4
 8025c5e:	f1ab 0b02 	sub.w	fp, fp, #2
 8025c62:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025c66:	9b03      	ldr	r3, [sp, #12]
 8025c68:	9300      	str	r3, [sp, #0]
 8025c6a:	463b      	mov	r3, r7
 8025c6c:	f7ff ff3a 	bl	8025ae4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025c70:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025c74:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025c78:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025c7c:	9804      	ldr	r0, [sp, #16]
 8025c7e:	f003 030f 	and.w	r3, r3, #15
 8025c82:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025c86:	9b03      	ldr	r3, [sp, #12]
 8025c88:	9300      	str	r3, [sp, #0]
 8025c8a:	463b      	mov	r3, r7
 8025c8c:	f7ff ff2a 	bl	8025ae4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025c90:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025c94:	e7d7      	b.n	8025c46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025c96:	46a8      	mov	r8, r5
 8025c98:	46cb      	mov	fp, r9
 8025c9a:	e7d4      	b.n	8025c46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025c9c:	d10e      	bne.n	8025cbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8025c9e:	f898 3000 	ldrb.w	r3, [r8]
 8025ca2:	f8ba 2000 	ldrh.w	r2, [sl]
 8025ca6:	9804      	ldr	r0, [sp, #16]
 8025ca8:	091b      	lsrs	r3, r3, #4
 8025caa:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025cae:	9b03      	ldr	r3, [sp, #12]
 8025cb0:	9300      	str	r3, [sp, #0]
 8025cb2:	463b      	mov	r3, r7
 8025cb4:	f7ff ff16 	bl	8025ae4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025cb8:	f82a 0b02 	strh.w	r0, [sl], #2
 8025cbc:	9b08      	ldr	r3, [sp, #32]
 8025cbe:	9a05      	ldr	r2, [sp, #20]
 8025cc0:	881c      	ldrh	r4, [r3, #0]
 8025cc2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025cc6:	eba4 0409 	sub.w	r4, r4, r9
 8025cca:	4413      	add	r3, r2
 8025ccc:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025cd0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025cd2:	fb93 f3f2 	sdiv	r3, r3, r2
 8025cd6:	441d      	add	r5, r3
 8025cd8:	e79c      	b.n	8025c14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8025cda:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025cde:	45a3      	cmp	fp, r4
 8025ce0:	d938      	bls.n	8025d54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025ce2:	9b06      	ldr	r3, [sp, #24]
 8025ce4:	b1f3      	cbz	r3, 8025d24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8025ce6:	782b      	ldrb	r3, [r5, #0]
 8025ce8:	f003 030f 	and.w	r3, r3, #15
 8025cec:	1c6a      	adds	r2, r5, #1
 8025cee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025cf2:	8023      	strh	r3, [r4, #0]
 8025cf4:	f109 30ff 	add.w	r0, r9, #4294967295
 8025cf8:	3402      	adds	r4, #2
 8025cfa:	2801      	cmp	r0, #1
 8025cfc:	4623      	mov	r3, r4
 8025cfe:	f104 0404 	add.w	r4, r4, #4
 8025d02:	dd12      	ble.n	8025d2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025d04:	7813      	ldrb	r3, [r2, #0]
 8025d06:	091b      	lsrs	r3, r3, #4
 8025d08:	3802      	subs	r0, #2
 8025d0a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025d0e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025d12:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025d16:	f003 030f 	and.w	r3, r3, #15
 8025d1a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025d1e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025d22:	e7ea      	b.n	8025cfa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025d24:	462a      	mov	r2, r5
 8025d26:	4648      	mov	r0, r9
 8025d28:	e7e7      	b.n	8025cfa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025d2a:	d106      	bne.n	8025d3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025d2c:	7812      	ldrb	r2, [r2, #0]
 8025d2e:	0912      	lsrs	r2, r2, #4
 8025d30:	3302      	adds	r3, #2
 8025d32:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025d36:	f823 2c02 	strh.w	r2, [r3, #-2]
 8025d3a:	880c      	ldrh	r4, [r1, #0]
 8025d3c:	9a05      	ldr	r2, [sp, #20]
 8025d3e:	eba4 0409 	sub.w	r4, r4, r9
 8025d42:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8025d46:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025d4a:	4413      	add	r3, r2
 8025d4c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025d50:	441d      	add	r5, r3
 8025d52:	e7c4      	b.n	8025cde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025d54:	4b03      	ldr	r3, [pc, #12]	@ (8025d64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025d56:	6818      	ldr	r0, [r3, #0]
 8025d58:	6803      	ldr	r3, [r0, #0]
 8025d5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025d5c:	4798      	blx	r3
 8025d5e:	b00f      	add	sp, #60	@ 0x3c
 8025d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d64:	20013f60 	.word	0x20013f60
 8025d68:	20013f5a 	.word	0x20013f5a

08025d6c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025d6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025d6e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025d72:	2dff      	cmp	r5, #255	@ 0xff
 8025d74:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025d78:	d10c      	bne.n	8025d94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025d7a:	2bff      	cmp	r3, #255	@ 0xff
 8025d7c:	d10a      	bne.n	8025d94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025d7e:	4b25      	ldr	r3, [pc, #148]	@ (8025e14 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025d80:	0948      	lsrs	r0, r1, #5
 8025d82:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025d86:	403b      	ands	r3, r7
 8025d88:	4318      	orrs	r0, r3
 8025d8a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025d8e:	4308      	orrs	r0, r1
 8025d90:	b280      	uxth	r0, r0
 8025d92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025d94:	fb15 f503 	smulbb	r5, r5, r3
 8025d98:	b2ab      	uxth	r3, r5
 8025d9a:	1c5d      	adds	r5, r3, #1
 8025d9c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025da0:	1214      	asrs	r4, r2, #8
 8025da2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025da6:	fa1f fc85 	uxth.w	ip, r5
 8025daa:	10d6      	asrs	r6, r2, #3
 8025dac:	00d0      	lsls	r0, r2, #3
 8025dae:	43ed      	mvns	r5, r5
 8025db0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025db4:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025db8:	b2eb      	uxtb	r3, r5
 8025dba:	b2c0      	uxtb	r0, r0
 8025dbc:	fb12 f20c 	smulbb	r2, r2, ip
 8025dc0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025dc4:	fb04 2403 	mla	r4, r4, r3, r2
 8025dc8:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8025dcc:	b2c8      	uxtb	r0, r1
 8025dce:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8025dd2:	b2fd      	uxtb	r5, r7
 8025dd4:	fb10 f00c 	smulbb	r0, r0, ip
 8025dd8:	b2a4      	uxth	r4, r4
 8025dda:	fb02 0003 	mla	r0, r2, r3, r0
 8025dde:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025de2:	fb15 f50c 	smulbb	r5, r5, ip
 8025de6:	fb06 5503 	mla	r5, r6, r3, r5
 8025dea:	b283      	uxth	r3, r0
 8025dec:	1c60      	adds	r0, r4, #1
 8025dee:	b2ad      	uxth	r5, r5
 8025df0:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025df4:	1c58      	adds	r0, r3, #1
 8025df6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025dfa:	1c6b      	adds	r3, r5, #1
 8025dfc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025e00:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8025e04:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025e08:	096d      	lsrs	r5, r5, #5
 8025e0a:	4320      	orrs	r0, r4
 8025e0c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8025e10:	4328      	orrs	r0, r5
 8025e12:	e7be      	b.n	8025d92 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025e14:	00fff800 	.word	0x00fff800

08025e18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e1c:	461c      	mov	r4, r3
 8025e1e:	b08d      	sub	sp, #52	@ 0x34
 8025e20:	460d      	mov	r5, r1
 8025e22:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8025e24:	6861      	ldr	r1, [r4, #4]
 8025e26:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8025e2a:	4680      	mov	r8, r0
 8025e2c:	6820      	ldr	r0, [r4, #0]
 8025e2e:	4616      	mov	r6, r2
 8025e30:	aa08      	add	r2, sp, #32
 8025e32:	c203      	stmia	r2!, {r0, r1}
 8025e34:	6818      	ldr	r0, [r3, #0]
 8025e36:	6859      	ldr	r1, [r3, #4]
 8025e38:	aa0a      	add	r2, sp, #40	@ 0x28
 8025e3a:	c203      	stmia	r2!, {r0, r1}
 8025e3c:	a808      	add	r0, sp, #32
 8025e3e:	f7ee fa59 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025e42:	4621      	mov	r1, r4
 8025e44:	a80a      	add	r0, sp, #40	@ 0x28
 8025e46:	f7ee fa7d 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025e4a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8025e4e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8025e52:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8025e56:	f002 0301 	and.w	r3, r2, #1
 8025e5a:	9303      	str	r3, [sp, #12]
 8025e5c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8025e60:	f003 0101 	and.w	r1, r3, #1
 8025e64:	9102      	str	r1, [sp, #8]
 8025e66:	9802      	ldr	r0, [sp, #8]
 8025e68:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8025e6c:	4403      	add	r3, r0
 8025e6e:	fb01 2303 	mla	r3, r1, r3, r2
 8025e72:	f04f 0a02 	mov.w	sl, #2
 8025e76:	fb93 f3fa 	sdiv	r3, r3, sl
 8025e7a:	441d      	add	r5, r3
 8025e7c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025e80:	441a      	add	r2, r3
 8025e82:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8025e86:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8025e8a:	4a3f      	ldr	r2, [pc, #252]	@ (8025f88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8025e8c:	9205      	str	r2, [sp, #20]
 8025e8e:	4419      	add	r1, r3
 8025e90:	6810      	ldr	r0, [r2, #0]
 8025e92:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8025e96:	6803      	ldr	r3, [r0, #0]
 8025e98:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025e9a:	4798      	blx	r3
 8025e9c:	4b3b      	ldr	r3, [pc, #236]	@ (8025f8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8025e9e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8025ea2:	8819      	ldrh	r1, [r3, #0]
 8025ea4:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8025ea8:	fb01 c404 	mla	r4, r1, r4, ip
 8025eac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025eb0:	434f      	muls	r7, r1
 8025eb2:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025eb6:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8025eba:	3604      	adds	r6, #4
 8025ebc:	9204      	str	r2, [sp, #16]
 8025ebe:	9b04      	ldr	r3, [sp, #16]
 8025ec0:	429c      	cmp	r4, r3
 8025ec2:	d258      	bcs.n	8025f76 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025ec4:	9b03      	ldr	r3, [sp, #12]
 8025ec6:	2b00      	cmp	r3, #0
 8025ec8:	d034      	beq.n	8025f34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8025eca:	782b      	ldrb	r3, [r5, #0]
 8025ecc:	f003 030f 	and.w	r3, r3, #15
 8025ed0:	1c6f      	adds	r7, r5, #1
 8025ed2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025ed6:	0e0b      	lsrs	r3, r1, #24
 8025ed8:	d006      	beq.n	8025ee8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8025eda:	8822      	ldrh	r2, [r4, #0]
 8025edc:	9300      	str	r3, [sp, #0]
 8025ede:	4640      	mov	r0, r8
 8025ee0:	464b      	mov	r3, r9
 8025ee2:	f7ff ff43 	bl	8025d6c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025ee6:	8020      	strh	r0, [r4, #0]
 8025ee8:	3402      	adds	r4, #2
 8025eea:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025eee:	f1ba 0f01 	cmp.w	sl, #1
 8025ef2:	dd22      	ble.n	8025f3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025ef4:	783b      	ldrb	r3, [r7, #0]
 8025ef6:	091b      	lsrs	r3, r3, #4
 8025ef8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025efc:	0e0b      	lsrs	r3, r1, #24
 8025efe:	d006      	beq.n	8025f0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025f00:	8822      	ldrh	r2, [r4, #0]
 8025f02:	9300      	str	r3, [sp, #0]
 8025f04:	4640      	mov	r0, r8
 8025f06:	464b      	mov	r3, r9
 8025f08:	f7ff ff30 	bl	8025d6c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025f0c:	8020      	strh	r0, [r4, #0]
 8025f0e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025f12:	f003 030f 	and.w	r3, r3, #15
 8025f16:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025f1a:	0e0b      	lsrs	r3, r1, #24
 8025f1c:	d006      	beq.n	8025f2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025f1e:	8862      	ldrh	r2, [r4, #2]
 8025f20:	9300      	str	r3, [sp, #0]
 8025f22:	4640      	mov	r0, r8
 8025f24:	464b      	mov	r3, r9
 8025f26:	f7ff ff21 	bl	8025d6c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025f2a:	8060      	strh	r0, [r4, #2]
 8025f2c:	3404      	adds	r4, #4
 8025f2e:	f1aa 0a02 	sub.w	sl, sl, #2
 8025f32:	e7dc      	b.n	8025eee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025f34:	462f      	mov	r7, r5
 8025f36:	46da      	mov	sl, fp
 8025f38:	e7d9      	b.n	8025eee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025f3a:	d10d      	bne.n	8025f58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025f3c:	783b      	ldrb	r3, [r7, #0]
 8025f3e:	091b      	lsrs	r3, r3, #4
 8025f40:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025f44:	0e0b      	lsrs	r3, r1, #24
 8025f46:	d006      	beq.n	8025f56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025f48:	8822      	ldrh	r2, [r4, #0]
 8025f4a:	9300      	str	r3, [sp, #0]
 8025f4c:	4640      	mov	r0, r8
 8025f4e:	464b      	mov	r3, r9
 8025f50:	f7ff ff0c 	bl	8025d6c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025f54:	8020      	strh	r0, [r4, #0]
 8025f56:	3402      	adds	r4, #2
 8025f58:	9b06      	ldr	r3, [sp, #24]
 8025f5a:	9a02      	ldr	r2, [sp, #8]
 8025f5c:	881b      	ldrh	r3, [r3, #0]
 8025f5e:	eba3 030b 	sub.w	r3, r3, fp
 8025f62:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025f66:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8025f6a:	4413      	add	r3, r2
 8025f6c:	9a07      	ldr	r2, [sp, #28]
 8025f6e:	fb93 f3f2 	sdiv	r3, r3, r2
 8025f72:	441d      	add	r5, r3
 8025f74:	e7a3      	b.n	8025ebe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025f76:	9b05      	ldr	r3, [sp, #20]
 8025f78:	6818      	ldr	r0, [r3, #0]
 8025f7a:	6803      	ldr	r3, [r0, #0]
 8025f7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025f7e:	4798      	blx	r3
 8025f80:	b00d      	add	sp, #52	@ 0x34
 8025f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025f86:	bf00      	nop
 8025f88:	20013f60 	.word	0x20013f60
 8025f8c:	20013f5a 	.word	0x20013f5a

08025f90 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025f90:	b570      	push	{r4, r5, r6, lr}
 8025f92:	1214      	asrs	r4, r2, #8
 8025f94:	788d      	ldrb	r5, [r1, #2]
 8025f96:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025f9a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025f9e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025fa2:	fb15 f503 	smulbb	r5, r5, r3
 8025fa6:	fb04 5506 	mla	r5, r4, r6, r5
 8025faa:	10d0      	asrs	r0, r2, #3
 8025fac:	784c      	ldrb	r4, [r1, #1]
 8025fae:	7809      	ldrb	r1, [r1, #0]
 8025fb0:	00d2      	lsls	r2, r2, #3
 8025fb2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8025fb6:	b2d2      	uxtb	r2, r2
 8025fb8:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025fbc:	fb14 f403 	smulbb	r4, r4, r3
 8025fc0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025fc4:	fb11 f303 	smulbb	r3, r1, r3
 8025fc8:	fb00 4406 	mla	r4, r0, r6, r4
 8025fcc:	fb02 3306 	mla	r3, r2, r6, r3
 8025fd0:	b2ad      	uxth	r5, r5
 8025fd2:	b29b      	uxth	r3, r3
 8025fd4:	b2a4      	uxth	r4, r4
 8025fd6:	1c68      	adds	r0, r5, #1
 8025fd8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025fdc:	1c62      	adds	r2, r4, #1
 8025fde:	1c58      	adds	r0, r3, #1
 8025fe0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025fe4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025fe8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8025fec:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025ff0:	0964      	lsrs	r4, r4, #5
 8025ff2:	4328      	orrs	r0, r5
 8025ff4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8025ff8:	4320      	orrs	r0, r4
 8025ffa:	bd70      	pop	{r4, r5, r6, pc}

08025ffc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026000:	b08f      	sub	sp, #60	@ 0x3c
 8026002:	461c      	mov	r4, r3
 8026004:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8026008:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802600a:	4682      	mov	sl, r0
 802600c:	460e      	mov	r6, r1
 802600e:	4615      	mov	r5, r2
 8026010:	2f00      	cmp	r7, #0
 8026012:	f000 8142 	beq.w	802629a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8026016:	6820      	ldr	r0, [r4, #0]
 8026018:	6861      	ldr	r1, [r4, #4]
 802601a:	aa0a      	add	r2, sp, #40	@ 0x28
 802601c:	c203      	stmia	r2!, {r0, r1}
 802601e:	6818      	ldr	r0, [r3, #0]
 8026020:	6859      	ldr	r1, [r3, #4]
 8026022:	aa0c      	add	r2, sp, #48	@ 0x30
 8026024:	c203      	stmia	r2!, {r0, r1}
 8026026:	a80a      	add	r0, sp, #40	@ 0x28
 8026028:	f7ee f964 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802602c:	4621      	mov	r1, r4
 802602e:	a80c      	add	r0, sp, #48	@ 0x30
 8026030:	f7ee f988 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026034:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8026038:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802603c:	f002 0301 	and.w	r3, r2, #1
 8026040:	9306      	str	r3, [sp, #24]
 8026042:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8026046:	f003 0101 	and.w	r1, r3, #1
 802604a:	9105      	str	r1, [sp, #20]
 802604c:	9805      	ldr	r0, [sp, #20]
 802604e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8026052:	4403      	add	r3, r0
 8026054:	fb01 2303 	mla	r3, r1, r3, r2
 8026058:	f04f 0802 	mov.w	r8, #2
 802605c:	fb93 f3f8 	sdiv	r3, r3, r8
 8026060:	441e      	add	r6, r3
 8026062:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8026066:	441a      	add	r2, r3
 8026068:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802606c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8026070:	4419      	add	r1, r3
 8026072:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8026076:	9303      	str	r3, [sp, #12]
 8026078:	4b89      	ldr	r3, [pc, #548]	@ (80262a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802607a:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802607e:	6818      	ldr	r0, [r3, #0]
 8026080:	6803      	ldr	r3, [r0, #0]
 8026082:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8026084:	4798      	blx	r3
 8026086:	4a87      	ldr	r2, [pc, #540]	@ (80262a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8026088:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802608c:	8813      	ldrh	r3, [r2, #0]
 802608e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8026092:	2fff      	cmp	r7, #255	@ 0xff
 8026094:	fb03 9404 	mla	r4, r3, r4, r9
 8026098:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802609c:	f105 0504 	add.w	r5, r5, #4
 80260a0:	4694      	mov	ip, r2
 80260a2:	fb03 f30b 	mul.w	r3, r3, fp
 80260a6:	d071      	beq.n	802618c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80260a8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80260ac:	43f9      	mvns	r1, r7
 80260ae:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80260b2:	b2c9      	uxtb	r1, r1
 80260b4:	9104      	str	r1, [sp, #16]
 80260b6:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80260ba:	9b07      	ldr	r3, [sp, #28]
 80260bc:	42a3      	cmp	r3, r4
 80260be:	f240 80e7 	bls.w	8026290 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80260c2:	9b06      	ldr	r3, [sp, #24]
 80260c4:	2b00      	cmp	r3, #0
 80260c6:	d03d      	beq.n	8026144 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80260c8:	7831      	ldrb	r1, [r6, #0]
 80260ca:	9b04      	ldr	r3, [sp, #16]
 80260cc:	8822      	ldrh	r2, [r4, #0]
 80260ce:	9300      	str	r3, [sp, #0]
 80260d0:	f001 010f 	and.w	r1, r1, #15
 80260d4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80260d8:	463b      	mov	r3, r7
 80260da:	4429      	add	r1, r5
 80260dc:	4650      	mov	r0, sl
 80260de:	f7ff ff57 	bl	8025f90 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80260e2:	9b03      	ldr	r3, [sp, #12]
 80260e4:	f824 0b02 	strh.w	r0, [r4], #2
 80260e8:	f106 0801 	add.w	r8, r6, #1
 80260ec:	f103 3bff 	add.w	fp, r3, #4294967295
 80260f0:	f1bb 0f01 	cmp.w	fp, #1
 80260f4:	46a1      	mov	r9, r4
 80260f6:	f104 0404 	add.w	r4, r4, #4
 80260fa:	dd27      	ble.n	802614c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80260fc:	f898 1000 	ldrb.w	r1, [r8]
 8026100:	9b04      	ldr	r3, [sp, #16]
 8026102:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026106:	9300      	str	r3, [sp, #0]
 8026108:	0909      	lsrs	r1, r1, #4
 802610a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802610e:	463b      	mov	r3, r7
 8026110:	4429      	add	r1, r5
 8026112:	4650      	mov	r0, sl
 8026114:	f7ff ff3c 	bl	8025f90 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026118:	f824 0c04 	strh.w	r0, [r4, #-4]
 802611c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026120:	9b04      	ldr	r3, [sp, #16]
 8026122:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026126:	9300      	str	r3, [sp, #0]
 8026128:	f001 010f 	and.w	r1, r1, #15
 802612c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026130:	463b      	mov	r3, r7
 8026132:	4429      	add	r1, r5
 8026134:	4650      	mov	r0, sl
 8026136:	f7ff ff2b 	bl	8025f90 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802613a:	f1ab 0b02 	sub.w	fp, fp, #2
 802613e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026142:	e7d5      	b.n	80260f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026144:	46b0      	mov	r8, r6
 8026146:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802614a:	e7d1      	b.n	80260f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802614c:	d10f      	bne.n	802616e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802614e:	f898 1000 	ldrb.w	r1, [r8]
 8026152:	9b04      	ldr	r3, [sp, #16]
 8026154:	f8b9 2000 	ldrh.w	r2, [r9]
 8026158:	9300      	str	r3, [sp, #0]
 802615a:	0909      	lsrs	r1, r1, #4
 802615c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026160:	463b      	mov	r3, r7
 8026162:	4429      	add	r1, r5
 8026164:	4650      	mov	r0, sl
 8026166:	f7ff ff13 	bl	8025f90 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802616a:	f829 0b02 	strh.w	r0, [r9], #2
 802616e:	9b08      	ldr	r3, [sp, #32]
 8026170:	9a05      	ldr	r2, [sp, #20]
 8026172:	881c      	ldrh	r4, [r3, #0]
 8026174:	9b03      	ldr	r3, [sp, #12]
 8026176:	1ae4      	subs	r4, r4, r3
 8026178:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802617c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026180:	4413      	add	r3, r2
 8026182:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026184:	fb93 f3f2 	sdiv	r3, r3, r2
 8026188:	441e      	add	r6, r3
 802618a:	e796      	b.n	80260ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802618c:	4f46      	ldr	r7, [pc, #280]	@ (80262a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802618e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026192:	42a3      	cmp	r3, r4
 8026194:	d97c      	bls.n	8026290 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026196:	9a06      	ldr	r2, [sp, #24]
 8026198:	2a00      	cmp	r2, #0
 802619a:	d054      	beq.n	8026246 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802619c:	7830      	ldrb	r0, [r6, #0]
 802619e:	f000 000f 	and.w	r0, r0, #15
 80261a2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80261a6:	eb05 0e00 	add.w	lr, r5, r0
 80261aa:	5c28      	ldrb	r0, [r5, r0]
 80261ac:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80261b0:	f89e e001 	ldrb.w	lr, [lr, #1]
 80261b4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80261b8:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80261bc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80261c0:	ea42 020e 	orr.w	r2, r2, lr
 80261c4:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80261c8:	f824 2b02 	strh.w	r2, [r4], #2
 80261cc:	9a03      	ldr	r2, [sp, #12]
 80261ce:	1c71      	adds	r1, r6, #1
 80261d0:	f102 3eff 	add.w	lr, r2, #4294967295
 80261d4:	f1be 0f01 	cmp.w	lr, #1
 80261d8:	4620      	mov	r0, r4
 80261da:	f104 0404 	add.w	r4, r4, #4
 80261de:	dd36      	ble.n	802624e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80261e0:	7808      	ldrb	r0, [r1, #0]
 80261e2:	0900      	lsrs	r0, r0, #4
 80261e4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80261e8:	eb05 0a00 	add.w	sl, r5, r0
 80261ec:	f1ae 0e02 	sub.w	lr, lr, #2
 80261f0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80261f4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80261f8:	00d2      	lsls	r2, r2, #3
 80261fa:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80261fe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026202:	ea49 0202 	orr.w	r2, r9, r2
 8026206:	f815 9000 	ldrb.w	r9, [r5, r0]
 802620a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802620e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8026212:	f811 0b01 	ldrb.w	r0, [r1], #1
 8026216:	f000 000f 	and.w	r0, r0, #15
 802621a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802621e:	eb05 0a00 	add.w	sl, r5, r0
 8026222:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026226:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802622a:	00d2      	lsls	r2, r2, #3
 802622c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026230:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026234:	ea49 0202 	orr.w	r2, r9, r2
 8026238:	f815 9000 	ldrb.w	r9, [r5, r0]
 802623c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026240:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026244:	e7c6      	b.n	80261d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026246:	4631      	mov	r1, r6
 8026248:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802624c:	e7c2      	b.n	80261d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802624e:	d111      	bne.n	8026274 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026250:	7809      	ldrb	r1, [r1, #0]
 8026252:	0909      	lsrs	r1, r1, #4
 8026254:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026258:	186c      	adds	r4, r5, r1
 802625a:	5c69      	ldrb	r1, [r5, r1]
 802625c:	78a2      	ldrb	r2, [r4, #2]
 802625e:	7864      	ldrb	r4, [r4, #1]
 8026260:	00e4      	lsls	r4, r4, #3
 8026262:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026266:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802626a:	4322      	orrs	r2, r4
 802626c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026270:	f820 2b02 	strh.w	r2, [r0], #2
 8026274:	9a03      	ldr	r2, [sp, #12]
 8026276:	f8bc 4000 	ldrh.w	r4, [ip]
 802627a:	9905      	ldr	r1, [sp, #20]
 802627c:	1aa4      	subs	r4, r4, r2
 802627e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8026282:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026286:	440a      	add	r2, r1
 8026288:	fb92 f2f8 	sdiv	r2, r2, r8
 802628c:	4416      	add	r6, r2
 802628e:	e780      	b.n	8026192 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026290:	4b03      	ldr	r3, [pc, #12]	@ (80262a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026292:	6818      	ldr	r0, [r3, #0]
 8026294:	6803      	ldr	r3, [r0, #0]
 8026296:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026298:	4798      	blx	r3
 802629a:	b00f      	add	sp, #60	@ 0x3c
 802629c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80262a0:	20013f60 	.word	0x20013f60
 80262a4:	20013f5a 	.word	0x20013f5a
 80262a8:	fffff800 	.word	0xfffff800

080262ac <CRC_Lock>:
 80262ac:	b530      	push	{r4, r5, lr}
 80262ae:	4a2d      	ldr	r2, [pc, #180]	@ (8026364 <CRC_Lock+0xb8>)
 80262b0:	6813      	ldr	r3, [r2, #0]
 80262b2:	f023 0301 	bic.w	r3, r3, #1
 80262b6:	6013      	str	r3, [r2, #0]
 80262b8:	4b2b      	ldr	r3, [pc, #172]	@ (8026368 <CRC_Lock+0xbc>)
 80262ba:	681c      	ldr	r4, [r3, #0]
 80262bc:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 80262c0:	4014      	ands	r4, r2
 80262c2:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80262c6:	42ac      	cmp	r4, r5
 80262c8:	d005      	beq.n	80262d6 <CRC_Lock+0x2a>
 80262ca:	681c      	ldr	r4, [r3, #0]
 80262cc:	f24c 2570 	movw	r5, #49776	@ 0xc270
 80262d0:	4014      	ands	r4, r2
 80262d2:	42ac      	cmp	r4, r5
 80262d4:	d125      	bne.n	8026322 <CRC_Lock+0x76>
 80262d6:	4b25      	ldr	r3, [pc, #148]	@ (802636c <CRC_Lock+0xc0>)
 80262d8:	681b      	ldr	r3, [r3, #0]
 80262da:	2b00      	cmp	r3, #0
 80262dc:	d139      	bne.n	8026352 <CRC_Lock+0xa6>
 80262de:	4b24      	ldr	r3, [pc, #144]	@ (8026370 <CRC_Lock+0xc4>)
 80262e0:	681a      	ldr	r2, [r3, #0]
 80262e2:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80262e6:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 80262ea:	d00d      	beq.n	8026308 <CRC_Lock+0x5c>
 80262ec:	681a      	ldr	r2, [r3, #0]
 80262ee:	f240 4483 	movw	r4, #1155	@ 0x483
 80262f2:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80262f6:	42a2      	cmp	r2, r4
 80262f8:	d006      	beq.n	8026308 <CRC_Lock+0x5c>
 80262fa:	681b      	ldr	r3, [r3, #0]
 80262fc:	f240 4285 	movw	r2, #1157	@ 0x485
 8026300:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026304:	4293      	cmp	r3, r2
 8026306:	d124      	bne.n	8026352 <CRC_Lock+0xa6>
 8026308:	4b1a      	ldr	r3, [pc, #104]	@ (8026374 <CRC_Lock+0xc8>)
 802630a:	2201      	movs	r2, #1
 802630c:	601a      	str	r2, [r3, #0]
 802630e:	681a      	ldr	r2, [r3, #0]
 8026310:	2a00      	cmp	r2, #0
 8026312:	d1fc      	bne.n	802630e <CRC_Lock+0x62>
 8026314:	4b18      	ldr	r3, [pc, #96]	@ (8026378 <CRC_Lock+0xcc>)
 8026316:	6018      	str	r0, [r3, #0]
 8026318:	6818      	ldr	r0, [r3, #0]
 802631a:	1a43      	subs	r3, r0, r1
 802631c:	4258      	negs	r0, r3
 802631e:	4158      	adcs	r0, r3
 8026320:	e00e      	b.n	8026340 <CRC_Lock+0x94>
 8026322:	681b      	ldr	r3, [r3, #0]
 8026324:	4013      	ands	r3, r2
 8026326:	f24d 2220 	movw	r2, #53792	@ 0xd220
 802632a:	4293      	cmp	r3, r2
 802632c:	d111      	bne.n	8026352 <CRC_Lock+0xa6>
 802632e:	4b13      	ldr	r3, [pc, #76]	@ (802637c <CRC_Lock+0xd0>)
 8026330:	681b      	ldr	r3, [r3, #0]
 8026332:	f240 4286 	movw	r2, #1158	@ 0x486
 8026336:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802633a:	4293      	cmp	r3, r2
 802633c:	d001      	beq.n	8026342 <CRC_Lock+0x96>
 802633e:	2000      	movs	r0, #0
 8026340:	bd30      	pop	{r4, r5, pc}
 8026342:	4b0f      	ldr	r3, [pc, #60]	@ (8026380 <CRC_Lock+0xd4>)
 8026344:	2201      	movs	r2, #1
 8026346:	601a      	str	r2, [r3, #0]
 8026348:	681a      	ldr	r2, [r3, #0]
 802634a:	2a00      	cmp	r2, #0
 802634c:	d1fc      	bne.n	8026348 <CRC_Lock+0x9c>
 802634e:	4b0d      	ldr	r3, [pc, #52]	@ (8026384 <CRC_Lock+0xd8>)
 8026350:	e7e1      	b.n	8026316 <CRC_Lock+0x6a>
 8026352:	4b0d      	ldr	r3, [pc, #52]	@ (8026388 <CRC_Lock+0xdc>)
 8026354:	2201      	movs	r2, #1
 8026356:	601a      	str	r2, [r3, #0]
 8026358:	681a      	ldr	r2, [r3, #0]
 802635a:	2a00      	cmp	r2, #0
 802635c:	d1fc      	bne.n	8026358 <CRC_Lock+0xac>
 802635e:	4b0b      	ldr	r3, [pc, #44]	@ (802638c <CRC_Lock+0xe0>)
 8026360:	e7d9      	b.n	8026316 <CRC_Lock+0x6a>
 8026362:	bf00      	nop
 8026364:	e0002000 	.word	0xe0002000
 8026368:	e000ed00 	.word	0xe000ed00
 802636c:	e0042000 	.word	0xe0042000
 8026370:	5c001000 	.word	0x5c001000
 8026374:	58024c08 	.word	0x58024c08
 8026378:	58024c00 	.word	0x58024c00
 802637c:	46008ff0 	.word	0x46008ff0
 8026380:	46024c08 	.word	0x46024c08
 8026384:	46024c00 	.word	0x46024c00
 8026388:	40023008 	.word	0x40023008
 802638c:	40023000 	.word	0x40023000

08026390 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026390:	6101      	str	r1, [r0, #16]
 8026392:	4770      	bx	lr

08026394 <_ZN8touchgfx8Gestures4tickEv>:
 8026394:	7b83      	ldrb	r3, [r0, #14]
 8026396:	b14b      	cbz	r3, 80263ac <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026398:	8903      	ldrh	r3, [r0, #8]
 802639a:	3301      	adds	r3, #1
 802639c:	b29b      	uxth	r3, r3
 802639e:	2b07      	cmp	r3, #7
 80263a0:	8103      	strh	r3, [r0, #8]
 80263a2:	bf81      	itttt	hi
 80263a4:	2300      	movhi	r3, #0
 80263a6:	8143      	strhhi	r3, [r0, #10]
 80263a8:	8183      	strhhi	r3, [r0, #12]
 80263aa:	7383      	strbhi	r3, [r0, #14]
 80263ac:	4770      	bx	lr
	...

080263b0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80263b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80263b4:	4698      	mov	r8, r3
 80263b6:	8883      	ldrh	r3, [r0, #4]
 80263b8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80263bc:	eba8 0303 	sub.w	r3, r8, r3
 80263c0:	b21b      	sxth	r3, r3
 80263c2:	4604      	mov	r4, r0
 80263c4:	2b00      	cmp	r3, #0
 80263c6:	4617      	mov	r7, r2
 80263c8:	4a18      	ldr	r2, [pc, #96]	@ (802642c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80263ca:	9200      	str	r2, [sp, #0]
 80263cc:	bfb8      	it	lt
 80263ce:	425b      	neglt	r3, r3
 80263d0:	8aa2      	ldrh	r2, [r4, #20]
 80263d2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80263d6:	f8ad 800a 	strh.w	r8, [sp, #10]
 80263da:	b21b      	sxth	r3, r3
 80263dc:	460e      	mov	r6, r1
 80263de:	4293      	cmp	r3, r2
 80263e0:	88c1      	ldrh	r1, [r0, #6]
 80263e2:	f8ad 1008 	strh.w	r1, [sp, #8]
 80263e6:	f04f 0000 	mov.w	r0, #0
 80263ea:	f88d 0004 	strb.w	r0, [sp, #4]
 80263ee:	f8ad 500c 	strh.w	r5, [sp, #12]
 80263f2:	dc07      	bgt.n	8026404 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80263f4:	1a69      	subs	r1, r5, r1
 80263f6:	b209      	sxth	r1, r1
 80263f8:	2900      	cmp	r1, #0
 80263fa:	bfb8      	it	lt
 80263fc:	4249      	neglt	r1, r1
 80263fe:	b209      	sxth	r1, r1
 8026400:	428a      	cmp	r2, r1
 8026402:	da10      	bge.n	8026426 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026404:	6920      	ldr	r0, [r4, #16]
 8026406:	6803      	ldr	r3, [r0, #0]
 8026408:	4669      	mov	r1, sp
 802640a:	685b      	ldr	r3, [r3, #4]
 802640c:	4798      	blx	r3
 802640e:	eba8 0606 	sub.w	r6, r8, r6
 8026412:	2300      	movs	r3, #0
 8026414:	1bef      	subs	r7, r5, r7
 8026416:	2001      	movs	r0, #1
 8026418:	8123      	strh	r3, [r4, #8]
 802641a:	8166      	strh	r6, [r4, #10]
 802641c:	81a7      	strh	r7, [r4, #12]
 802641e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026422:	80e5      	strh	r5, [r4, #6]
 8026424:	73a0      	strb	r0, [r4, #14]
 8026426:	b004      	add	sp, #16
 8026428:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802642c:	0802b540 	.word	0x0802b540

08026430 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026430:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026432:	461e      	mov	r6, r3
 8026434:	1e4b      	subs	r3, r1, #1
 8026436:	2b01      	cmp	r3, #1
 8026438:	b085      	sub	sp, #20
 802643a:	4604      	mov	r4, r0
 802643c:	460d      	mov	r5, r1
 802643e:	4617      	mov	r7, r2
 8026440:	d84b      	bhi.n	80264da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026442:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026446:	1cd3      	adds	r3, r2, #3
 8026448:	b29b      	uxth	r3, r3
 802644a:	2b06      	cmp	r3, #6
 802644c:	d916      	bls.n	802647c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802644e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80264f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026452:	f8cd c004 	str.w	ip, [sp, #4]
 8026456:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802645a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802645e:	6900      	ldr	r0, [r0, #16]
 8026460:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026464:	f04f 0c00 	mov.w	ip, #0
 8026468:	f88d c008 	strb.w	ip, [sp, #8]
 802646c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026470:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026474:	6803      	ldr	r3, [r0, #0]
 8026476:	a901      	add	r1, sp, #4
 8026478:	689b      	ldr	r3, [r3, #8]
 802647a:	4798      	blx	r3
 802647c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026480:	1cd3      	adds	r3, r2, #3
 8026482:	b29b      	uxth	r3, r3
 8026484:	2b06      	cmp	r3, #6
 8026486:	d916      	bls.n	80264b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026488:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80264f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802648c:	f8cd c004 	str.w	ip, [sp, #4]
 8026490:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026494:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026498:	6920      	ldr	r0, [r4, #16]
 802649a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802649e:	f04f 0c01 	mov.w	ip, #1
 80264a2:	f88d c008 	strb.w	ip, [sp, #8]
 80264a6:	f8ad 200a 	strh.w	r2, [sp, #10]
 80264aa:	f8ad 300e 	strh.w	r3, [sp, #14]
 80264ae:	6803      	ldr	r3, [r0, #0]
 80264b0:	a901      	add	r1, sp, #4
 80264b2:	689b      	ldr	r3, [r3, #8]
 80264b4:	4798      	blx	r3
 80264b6:	4b0d      	ldr	r3, [pc, #52]	@ (80264ec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80264b8:	9301      	str	r3, [sp, #4]
 80264ba:	6920      	ldr	r0, [r4, #16]
 80264bc:	f88d 5008 	strb.w	r5, [sp, #8]
 80264c0:	2300      	movs	r3, #0
 80264c2:	f8ad 700a 	strh.w	r7, [sp, #10]
 80264c6:	f8ad 600c 	strh.w	r6, [sp, #12]
 80264ca:	f8ad 300e 	strh.w	r3, [sp, #14]
 80264ce:	6803      	ldr	r3, [r0, #0]
 80264d0:	a901      	add	r1, sp, #4
 80264d2:	681b      	ldr	r3, [r3, #0]
 80264d4:	4798      	blx	r3
 80264d6:	b005      	add	sp, #20
 80264d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80264da:	2900      	cmp	r1, #0
 80264dc:	d1eb      	bne.n	80264b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80264de:	80a2      	strh	r2, [r4, #4]
 80264e0:	80c6      	strh	r6, [r0, #6]
 80264e2:	60a1      	str	r1, [r4, #8]
 80264e4:	81a1      	strh	r1, [r4, #12]
 80264e6:	73a1      	strb	r1, [r4, #14]
 80264e8:	e7e5      	b.n	80264b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80264ea:	bf00      	nop
 80264ec:	0802b52c 	.word	0x0802b52c
 80264f0:	0802b554 	.word	0x0802b554

080264f4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 80264f4:	10c9      	asrs	r1, r1, #3
 80264f6:	2900      	cmp	r1, #0
 80264f8:	bfb8      	it	lt
 80264fa:	4249      	neglt	r1, r1
 80264fc:	2801      	cmp	r0, #1
 80264fe:	d108      	bne.n	8026512 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8026500:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026504:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8026508:	4601      	mov	r1, r0
 802650a:	dd02      	ble.n	8026512 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802650c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8026510:	4770      	bx	lr
 8026512:	29ff      	cmp	r1, #255	@ 0xff
 8026514:	bfa8      	it	ge
 8026516:	21ff      	movge	r1, #255	@ 0xff
 8026518:	4608      	mov	r0, r1
 802651a:	4770      	bx	lr

0802651c <_ZN8touchgfx10Rasterizer6lineToEii>:
 802651c:	b410      	push	{r4}
 802651e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026522:	429c      	cmp	r4, r3
 8026524:	d803      	bhi.n	802652e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026526:	f85d 4b04 	ldr.w	r4, [sp], #4
 802652a:	f7ec b9d5 	b.w	80128d8 <_ZN8touchgfx7Outline6lineToEii>
 802652e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026532:	4770      	bx	lr

08026534 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026538:	b08b      	sub	sp, #44	@ 0x2c
 802653a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802653e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8026542:	9308      	str	r3, [sp, #32]
 8026544:	4606      	mov	r6, r0
 8026546:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 802654a:	9309      	str	r3, [sp, #36]	@ 0x24
 802654c:	468a      	mov	sl, r1
 802654e:	f7ec fb30 	bl	8012bb2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026552:	68b5      	ldr	r5, [r6, #8]
 8026554:	4604      	mov	r4, r0
 8026556:	2d00      	cmp	r5, #0
 8026558:	d044      	beq.n	80265e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802655a:	6873      	ldr	r3, [r6, #4]
 802655c:	42ab      	cmp	r3, r5
 802655e:	d33d      	bcc.n	80265dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026560:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8026564:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8026568:	eb02 0b03 	add.w	fp, r2, r3
 802656c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026570:	fb02 1203 	mla	r2, r2, r3, r1
 8026574:	9205      	str	r2, [sp, #20]
 8026576:	1e6a      	subs	r2, r5, #1
 8026578:	9204      	str	r2, [sp, #16]
 802657a:	f04f 0800 	mov.w	r8, #0
 802657e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8026582:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026586:	454b      	cmp	r3, r9
 8026588:	463a      	mov	r2, r7
 802658a:	d008      	beq.n	802659e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802658c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8026590:	eb03 0b09 	add.w	fp, r3, r9
 8026594:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026598:	fb03 1309 	mla	r3, r3, r9, r1
 802659c:	9305      	str	r3, [sp, #20]
 802659e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80265a2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80265a6:	4498      	add	r8, r3
 80265a8:	9b04      	ldr	r3, [sp, #16]
 80265aa:	3b01      	subs	r3, #1
 80265ac:	9304      	str	r3, [sp, #16]
 80265ae:	9b04      	ldr	r3, [sp, #16]
 80265b0:	3301      	adds	r3, #1
 80265b2:	d015      	beq.n	80265e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80265b4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80265b8:	42bb      	cmp	r3, r7
 80265ba:	d117      	bne.n	80265ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80265bc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80265c0:	9b04      	ldr	r3, [sp, #16]
 80265c2:	4548      	cmp	r0, r9
 80265c4:	f103 33ff 	add.w	r3, r3, #4294967295
 80265c8:	d17f      	bne.n	80266ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80265ca:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80265ce:	4401      	add	r1, r0
 80265d0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80265d4:	4480      	add	r8, r0
 80265d6:	e7e9      	b.n	80265ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80265d8:	461f      	mov	r7, r3
 80265da:	e044      	b.n	8026666 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80265dc:	2000      	movs	r0, #0
 80265de:	e002      	b.n	80265e6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80265e0:	2900      	cmp	r1, #0
 80265e2:	d16f      	bne.n	80266c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80265e4:	2001      	movs	r0, #1
 80265e6:	b00b      	add	sp, #44	@ 0x2c
 80265e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80265ec:	2900      	cmp	r1, #0
 80265ee:	d030      	beq.n	8026652 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80265f0:	2f00      	cmp	r7, #0
 80265f2:	db29      	blt.n	8026648 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80265f4:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 80265f8:	42bb      	cmp	r3, r7
 80265fa:	dd25      	ble.n	8026648 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80265fc:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026600:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8026604:	f7ff ff76 	bl	80264f4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8026608:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802660a:	fb10 f003 	smulbb	r0, r0, r3
 802660e:	b280      	uxth	r0, r0
 8026610:	1c41      	adds	r1, r0, #1
 8026612:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026616:	1209      	asrs	r1, r1, #8
 8026618:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802661c:	d014      	beq.n	8026648 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802661e:	9808      	ldr	r0, [sp, #32]
 8026620:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8026622:	b2c9      	uxtb	r1, r1
 8026624:	b2ba      	uxth	r2, r7
 8026626:	9102      	str	r1, [sp, #8]
 8026628:	2101      	movs	r1, #1
 802662a:	4413      	add	r3, r2
 802662c:	9101      	str	r1, [sp, #4]
 802662e:	4402      	add	r2, r0
 8026630:	fa0f f18b 	sxth.w	r1, fp
 8026634:	f8da 0000 	ldr.w	r0, [sl]
 8026638:	9100      	str	r1, [sp, #0]
 802663a:	6941      	ldr	r1, [r0, #20]
 802663c:	b21b      	sxth	r3, r3
 802663e:	460d      	mov	r5, r1
 8026640:	b212      	sxth	r2, r2
 8026642:	9905      	ldr	r1, [sp, #20]
 8026644:	4650      	mov	r0, sl
 8026646:	47a8      	blx	r5
 8026648:	9b04      	ldr	r3, [sp, #16]
 802664a:	3301      	adds	r3, #1
 802664c:	f107 0201 	add.w	r2, r7, #1
 8026650:	d0c8      	beq.n	80265e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026652:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026656:	1abb      	subs	r3, r7, r2
 8026658:	2b00      	cmp	r3, #0
 802665a:	dd31      	ble.n	80266c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802665c:	2a00      	cmp	r2, #0
 802665e:	dabb      	bge.n	80265d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026660:	2f00      	cmp	r7, #0
 8026662:	dd2d      	ble.n	80266c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026664:	2200      	movs	r2, #0
 8026666:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802666a:	19d1      	adds	r1, r2, r7
 802666c:	4299      	cmp	r1, r3
 802666e:	db02      	blt.n	8026676 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026670:	1a9f      	subs	r7, r3, r2
 8026672:	2f00      	cmp	r7, #0
 8026674:	dd24      	ble.n	80266c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026676:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802667a:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802667e:	f7ff ff39 	bl	80264f4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8026682:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026684:	fb10 f003 	smulbb	r0, r0, r3
 8026688:	b280      	uxth	r0, r0
 802668a:	1c41      	adds	r1, r0, #1
 802668c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026690:	1209      	asrs	r1, r1, #8
 8026692:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8026696:	d013      	beq.n	80266c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026698:	9808      	ldr	r0, [sp, #32]
 802669a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802669c:	b292      	uxth	r2, r2
 802669e:	b2c9      	uxtb	r1, r1
 80266a0:	4413      	add	r3, r2
 80266a2:	9102      	str	r1, [sp, #8]
 80266a4:	4402      	add	r2, r0
 80266a6:	b23f      	sxth	r7, r7
 80266a8:	f8da 0000 	ldr.w	r0, [sl]
 80266ac:	9701      	str	r7, [sp, #4]
 80266ae:	fa0f f18b 	sxth.w	r1, fp
 80266b2:	9100      	str	r1, [sp, #0]
 80266b4:	6947      	ldr	r7, [r0, #20]
 80266b6:	9905      	ldr	r1, [sp, #20]
 80266b8:	b21b      	sxth	r3, r3
 80266ba:	b212      	sxth	r2, r2
 80266bc:	4650      	mov	r0, sl
 80266be:	47b8      	blx	r7
 80266c0:	464b      	mov	r3, r9
 80266c2:	e75c      	b.n	802657e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80266c4:	2f00      	cmp	r7, #0
 80266c6:	da95      	bge.n	80265f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80266c8:	e78c      	b.n	80265e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80266ca:	2900      	cmp	r1, #0
 80266cc:	d0f8      	beq.n	80266c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80266ce:	e78f      	b.n	80265f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080266d0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 80266d0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80266d4:	461e      	mov	r6, r3
 80266d6:	4b36      	ldr	r3, [pc, #216]	@ (80267b0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 80266d8:	e9c0 3100 	strd	r3, r1, [r0]
 80266dc:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80266e0:	8103      	strh	r3, [r0, #8]
 80266e2:	2500      	movs	r5, #0
 80266e4:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80266e8:	7283      	strb	r3, [r0, #10]
 80266ea:	f100 0814 	add.w	r8, r0, #20
 80266ee:	4604      	mov	r4, r0
 80266f0:	8185      	strh	r5, [r0, #12]
 80266f2:	81c5      	strh	r5, [r0, #14]
 80266f4:	8205      	strh	r5, [r0, #16]
 80266f6:	8245      	strh	r5, [r0, #18]
 80266f8:	4640      	mov	r0, r8
 80266fa:	4617      	mov	r7, r2
 80266fc:	f7eb fc24 	bl	8011f48 <_ZN8touchgfx7OutlineC1Ev>
 8026700:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8026704:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8026708:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 802670c:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8026710:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8026714:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8026718:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 802671c:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8026720:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8026724:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8026728:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 802672c:	6830      	ldr	r0, [r6, #0]
 802672e:	6871      	ldr	r1, [r6, #4]
 8026730:	8872      	ldrh	r2, [r6, #2]
 8026732:	8835      	ldrh	r5, [r6, #0]
 8026734:	466b      	mov	r3, sp
 8026736:	c303      	stmia	r3!, {r0, r1}
 8026738:	887b      	ldrh	r3, [r7, #2]
 802673a:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 802673e:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8026742:	4413      	add	r3, r2
 8026744:	883a      	ldrh	r2, [r7, #0]
 8026746:	81e3      	strh	r3, [r4, #14]
 8026748:	442a      	add	r2, r5
 802674a:	81a2      	strh	r2, [r4, #12]
 802674c:	8220      	strh	r0, [r4, #16]
 802674e:	8261      	strh	r1, [r4, #18]
 8026750:	4668      	mov	r0, sp
 8026752:	4639      	mov	r1, r7
 8026754:	f7ed fdf6 	bl	8014344 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026758:	f104 000c 	add.w	r0, r4, #12
 802675c:	f7ed fdca 	bl	80142f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026760:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026764:	f8bd 2000 	ldrh.w	r2, [sp]
 8026768:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 802676c:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8026770:	4640      	mov	r0, r8
 8026772:	f7eb fbcd 	bl	8011f10 <_ZN8touchgfx7Outline5resetEv>
 8026776:	f9bd 3000 	ldrsh.w	r3, [sp]
 802677a:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 802677e:	015b      	lsls	r3, r3, #5
 8026780:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8026782:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026786:	015b      	lsls	r3, r3, #5
 8026788:	6523      	str	r3, [r4, #80]	@ 0x50
 802678a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802678e:	015b      	lsls	r3, r3, #5
 8026790:	6563      	str	r3, [r4, #84]	@ 0x54
 8026792:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8026796:	015b      	lsls	r3, r3, #5
 8026798:	65a3      	str	r3, [r4, #88]	@ 0x58
 802679a:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 802679e:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 80267a2:	4620      	mov	r0, r4
 80267a4:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 80267a8:	b002      	add	sp, #8
 80267aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80267ae:	bf00      	nop
 80267b0:	0802b890 	.word	0x0802b890

080267b4 <_ZN8touchgfx6Canvas5closeEv>:
 80267b4:	b538      	push	{r3, r4, r5, lr}
 80267b6:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80267ba:	4604      	mov	r4, r0
 80267bc:	b193      	cbz	r3, 80267e4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80267be:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 80267c2:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 80267c6:	4213      	tst	r3, r2
 80267c8:	d10c      	bne.n	80267e4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80267ca:	f100 0514 	add.w	r5, r0, #20
 80267ce:	b123      	cbz	r3, 80267da <_ZN8touchgfx6Canvas5closeEv+0x26>
 80267d0:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 80267d4:	4628      	mov	r0, r5
 80267d6:	f7ff fea1 	bl	802651c <_ZN8touchgfx10Rasterizer6lineToEii>
 80267da:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 80267de:	4628      	mov	r0, r5
 80267e0:	f7ff fe9c 	bl	802651c <_ZN8touchgfx10Rasterizer6lineToEii>
 80267e4:	2300      	movs	r3, #0
 80267e6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80267ea:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 80267ee:	4298      	cmp	r0, r3
 80267f0:	bf34      	ite	cc
 80267f2:	2000      	movcc	r0, #0
 80267f4:	2001      	movcs	r0, #1
 80267f6:	bd38      	pop	{r3, r4, r5, pc}

080267f8 <_ZN8touchgfx6Canvas6renderEh>:
 80267f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80267fc:	7a85      	ldrb	r5, [r0, #10]
 80267fe:	4369      	muls	r1, r5
 8026800:	1c4d      	adds	r5, r1, #1
 8026802:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026806:	122d      	asrs	r5, r5, #8
 8026808:	4604      	mov	r4, r0
 802680a:	f000 8099 	beq.w	8026940 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802680e:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8026812:	2b00      	cmp	r3, #0
 8026814:	f000 8094 	beq.w	8026940 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8026818:	f7ff ffcc 	bl	80267b4 <_ZN8touchgfx6Canvas5closeEv>
 802681c:	4607      	mov	r7, r0
 802681e:	2800      	cmp	r0, #0
 8026820:	d045      	beq.n	80268ae <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8026822:	6860      	ldr	r0, [r4, #4]
 8026824:	4e47      	ldr	r6, [pc, #284]	@ (8026944 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 8026826:	6803      	ldr	r3, [r0, #0]
 8026828:	6837      	ldr	r7, [r6, #0]
 802682a:	689b      	ldr	r3, [r3, #8]
 802682c:	4798      	blx	r3
 802682e:	4601      	mov	r1, r0
 8026830:	4638      	mov	r0, r7
 8026832:	f7e8 fa59 	bl	800ece8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8026836:	4607      	mov	r7, r0
 8026838:	f7dc feb6 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 802683c:	6803      	ldr	r3, [r0, #0]
 802683e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8026840:	4798      	blx	r3
 8026842:	4680      	mov	r8, r0
 8026844:	f7dc feb0 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 8026848:	6803      	ldr	r3, [r0, #0]
 802684a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802684c:	4798      	blx	r3
 802684e:	280b      	cmp	r0, #11
 8026850:	d85b      	bhi.n	802690a <_ZN8touchgfx6Canvas6renderEh+0x112>
 8026852:	e8df f000 	tbb	[pc, r0]
 8026856:	5c51      	.short	0x5c51
 8026858:	305a066c 	.word	0x305a066c
 802685c:	65656540 	.word	0x65656540
 8026860:	6565      	.short	0x6565
 8026862:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8026866:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802686a:	2208      	movs	r2, #8
 802686c:	fb91 f2f2 	sdiv	r2, r1, r2
 8026870:	fb08 2303 	mla	r3, r8, r3, r2
 8026874:	441f      	add	r7, r3
 8026876:	424b      	negs	r3, r1
 8026878:	f003 0307 	and.w	r3, r3, #7
 802687c:	f001 0107 	and.w	r1, r1, #7
 8026880:	bf58      	it	pl
 8026882:	4259      	negpl	r1, r3
 8026884:	b2c9      	uxtb	r1, r1
 8026886:	b2ed      	uxtb	r5, r5
 8026888:	463a      	mov	r2, r7
 802688a:	e9cd 1500 	strd	r1, r5, [sp]
 802688e:	fa0f f388 	sxth.w	r3, r8
 8026892:	6861      	ldr	r1, [r4, #4]
 8026894:	f104 0014 	add.w	r0, r4, #20
 8026898:	f7ff fe4c 	bl	8026534 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802689c:	4607      	mov	r7, r0
 802689e:	6860      	ldr	r0, [r4, #4]
 80268a0:	6803      	ldr	r3, [r0, #0]
 80268a2:	691b      	ldr	r3, [r3, #16]
 80268a4:	4798      	blx	r3
 80268a6:	6830      	ldr	r0, [r6, #0]
 80268a8:	6803      	ldr	r3, [r0, #0]
 80268aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80268ac:	4798      	blx	r3
 80268ae:	4638      	mov	r0, r7
 80268b0:	b002      	add	sp, #8
 80268b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80268b6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80268ba:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80268be:	2204      	movs	r2, #4
 80268c0:	fb91 f2f2 	sdiv	r2, r1, r2
 80268c4:	fb08 2303 	mla	r3, r8, r3, r2
 80268c8:	441f      	add	r7, r3
 80268ca:	424b      	negs	r3, r1
 80268cc:	f003 0303 	and.w	r3, r3, #3
 80268d0:	f001 0103 	and.w	r1, r1, #3
 80268d4:	e7d4      	b.n	8026880 <_ZN8touchgfx6Canvas6renderEh+0x88>
 80268d6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80268da:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80268de:	2900      	cmp	r1, #0
 80268e0:	f04f 0202 	mov.w	r2, #2
 80268e4:	fb91 f2f2 	sdiv	r2, r1, r2
 80268e8:	f001 0101 	and.w	r1, r1, #1
 80268ec:	fb08 2303 	mla	r3, r8, r3, r2
 80268f0:	441f      	add	r7, r3
 80268f2:	bfb8      	it	lt
 80268f4:	4249      	neglt	r1, r1
 80268f6:	e7c5      	b.n	8026884 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 80268f8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80268fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026900:	fb08 f303 	mul.w	r3, r8, r3
 8026904:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026908:	441f      	add	r7, r3
 802690a:	2100      	movs	r1, #0
 802690c:	e7bb      	b.n	8026886 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 802690e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8026912:	fb08 f203 	mul.w	r2, r8, r3
 8026916:	89a3      	ldrh	r3, [r4, #12]
 8026918:	2103      	movs	r1, #3
 802691a:	fb13 2301 	smlabb	r3, r3, r1, r2
 802691e:	e7f3      	b.n	8026908 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8026920:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8026924:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026928:	fb08 2303 	mla	r3, r8, r3, r2
 802692c:	e7ec      	b.n	8026908 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802692e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8026932:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026936:	fb08 f303 	mul.w	r3, r8, r3
 802693a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802693e:	e7e3      	b.n	8026908 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8026940:	2701      	movs	r7, #1
 8026942:	e7b4      	b.n	80268ae <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8026944:	20013f60 	.word	0x20013f60

08026948 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8026948:	b510      	push	{r4, lr}
 802694a:	4b06      	ldr	r3, [pc, #24]	@ (8026964 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 802694c:	781b      	ldrb	r3, [r3, #0]
 802694e:	2b01      	cmp	r3, #1
 8026950:	d107      	bne.n	8026962 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 8026952:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8026956:	680b      	ldr	r3, [r1, #0]
 8026958:	6814      	ldr	r4, [r2, #0]
 802695a:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802695e:	6013      	str	r3, [r2, #0]
 8026960:	600c      	str	r4, [r1, #0]
 8026962:	bd10      	pop	{r4, pc}
 8026964:	20013f58 	.word	0x20013f58

08026968 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8026968:	b513      	push	{r0, r1, r4, lr}
 802696a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802696e:	4604      	mov	r4, r0
 8026970:	e9cd 2100 	strd	r2, r1, [sp]
 8026974:	b9a3      	cbnz	r3, 80269a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8026976:	466a      	mov	r2, sp
 8026978:	a901      	add	r1, sp, #4
 802697a:	4620      	mov	r0, r4
 802697c:	f7ff ffe4 	bl	8026948 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026980:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8026982:	9901      	ldr	r1, [sp, #4]
 8026984:	9a00      	ldr	r2, [sp, #0]
 8026986:	1ac9      	subs	r1, r1, r3
 8026988:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802698a:	9101      	str	r1, [sp, #4]
 802698c:	1ad2      	subs	r2, r2, r3
 802698e:	2a00      	cmp	r2, #0
 8026990:	9200      	str	r2, [sp, #0]
 8026992:	da0b      	bge.n	80269ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8026994:	2301      	movs	r3, #1
 8026996:	2900      	cmp	r1, #0
 8026998:	da0e      	bge.n	80269b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802699a:	f043 0304 	orr.w	r3, r3, #4
 802699e:	e013      	b.n	80269c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80269a0:	f7ff ff08 	bl	80267b4 <_ZN8touchgfx6Canvas5closeEv>
 80269a4:	2800      	cmp	r0, #0
 80269a6:	d1e6      	bne.n	8026976 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80269a8:	b002      	add	sp, #8
 80269aa:	bd10      	pop	{r4, pc}
 80269ac:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80269ae:	429a      	cmp	r2, r3
 80269b0:	bfac      	ite	ge
 80269b2:	2302      	movge	r3, #2
 80269b4:	2300      	movlt	r3, #0
 80269b6:	e7ee      	b.n	8026996 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80269b8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80269ba:	4281      	cmp	r1, r0
 80269bc:	bfac      	ite	ge
 80269be:	2008      	movge	r0, #8
 80269c0:	2000      	movlt	r0, #0
 80269c2:	4318      	orrs	r0, r3
 80269c4:	b2c3      	uxtb	r3, r0
 80269c6:	b158      	cbz	r0, 80269e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80269c8:	2200      	movs	r2, #0
 80269ca:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 80269ce:	9901      	ldr	r1, [sp, #4]
 80269d0:	9a00      	ldr	r2, [sp, #0]
 80269d2:	66e1      	str	r1, [r4, #108]	@ 0x6c
 80269d4:	6722      	str	r2, [r4, #112]	@ 0x70
 80269d6:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 80269da:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 80269de:	e7e3      	b.n	80269a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80269e0:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80269e4:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80269e8:	4298      	cmp	r0, r3
 80269ea:	d803      	bhi.n	80269f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80269ec:	f104 0014 	add.w	r0, r4, #20
 80269f0:	f7eb ff8c 	bl	801290c <_ZN8touchgfx7Outline6moveToEii>
 80269f4:	2301      	movs	r3, #1
 80269f6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80269fa:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80269fe:	2300      	movs	r3, #0
 8026a00:	e7e5      	b.n	80269ce <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8026a02:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026a04:	ab02      	add	r3, sp, #8
 8026a06:	4604      	mov	r4, r0
 8026a08:	f843 2d08 	str.w	r2, [r3, #-8]!
 8026a0c:	9101      	str	r1, [sp, #4]
 8026a0e:	461a      	mov	r2, r3
 8026a10:	a901      	add	r1, sp, #4
 8026a12:	f7ff ff99 	bl	8026948 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026a16:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8026a18:	9901      	ldr	r1, [sp, #4]
 8026a1a:	9a00      	ldr	r2, [sp, #0]
 8026a1c:	1ac9      	subs	r1, r1, r3
 8026a1e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8026a20:	9101      	str	r1, [sp, #4]
 8026a22:	1ad2      	subs	r2, r2, r3
 8026a24:	2a00      	cmp	r2, #0
 8026a26:	9200      	str	r2, [sp, #0]
 8026a28:	db1c      	blt.n	8026a64 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8026a2a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8026a2c:	429a      	cmp	r2, r3
 8026a2e:	bfac      	ite	ge
 8026a30:	2002      	movge	r0, #2
 8026a32:	2000      	movlt	r0, #0
 8026a34:	2900      	cmp	r1, #0
 8026a36:	db17      	blt.n	8026a68 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8026a38:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8026a3a:	4299      	cmp	r1, r3
 8026a3c:	bfac      	ite	ge
 8026a3e:	2308      	movge	r3, #8
 8026a40:	2300      	movlt	r3, #0
 8026a42:	4303      	orrs	r3, r0
 8026a44:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8026a48:	b2dd      	uxtb	r5, r3
 8026a4a:	b978      	cbnz	r0, 8026a6c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8026a4c:	f104 0014 	add.w	r0, r4, #20
 8026a50:	f7ff fd64 	bl	802651c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026a54:	9b01      	ldr	r3, [sp, #4]
 8026a56:	6623      	str	r3, [r4, #96]	@ 0x60
 8026a58:	9b00      	ldr	r3, [sp, #0]
 8026a5a:	6663      	str	r3, [r4, #100]	@ 0x64
 8026a5c:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 8026a60:	b002      	add	sp, #8
 8026a62:	bd70      	pop	{r4, r5, r6, pc}
 8026a64:	2001      	movs	r0, #1
 8026a66:	e7e5      	b.n	8026a34 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8026a68:	2304      	movs	r3, #4
 8026a6a:	e7ea      	b.n	8026a42 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8026a6c:	b113      	cbz	r3, 8026a74 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8026a6e:	ea10 0305 	ands.w	r3, r0, r5
 8026a72:	d11c      	bne.n	8026aae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8026a74:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8026a78:	f104 0614 	add.w	r6, r4, #20
 8026a7c:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8026a80:	b98b      	cbnz	r3, 8026aa6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8026a82:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8026a86:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8026a8a:	4298      	cmp	r0, r3
 8026a8c:	d802      	bhi.n	8026a94 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8026a8e:	4630      	mov	r0, r6
 8026a90:	f7eb ff3c 	bl	801290c <_ZN8touchgfx7Outline6moveToEii>
 8026a94:	2301      	movs	r3, #1
 8026a96:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8026a9a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8026a9e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8026aa2:	4630      	mov	r0, r6
 8026aa4:	e7d4      	b.n	8026a50 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8026aa6:	4630      	mov	r0, r6
 8026aa8:	f7ff fd38 	bl	802651c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026aac:	e7f7      	b.n	8026a9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8026aae:	461d      	mov	r5, r3
 8026ab0:	e7d0      	b.n	8026a54 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08026ab4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8026ab4:	b538      	push	{r3, r4, r5, lr}
 8026ab6:	ed2d 8b10 	vpush	{d8-d15}
 8026aba:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 8026abe:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 8026c28 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8026ac2:	4605      	mov	r5, r0
 8026ac4:	eeb0 ca40 	vmov.f32	s24, s0
 8026ac8:	eef0 ca60 	vmov.f32	s25, s1
 8026acc:	eeb0 da41 	vmov.f32	s26, s2
 8026ad0:	eef0 da61 	vmov.f32	s27, s3
 8026ad4:	eeb0 ea42 	vmov.f32	s28, s4
 8026ad8:	eef0 ea62 	vmov.f32	s29, s5
 8026adc:	460c      	mov	r4, r1
 8026ade:	eef0 aa6b 	vmov.f32	s21, s23
 8026ae2:	2c08      	cmp	r4, #8
 8026ae4:	d86e      	bhi.n	8026bc4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 8026ae6:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 8026aea:	ee7d 7aee 	vsub.f32	s15, s27, s29
 8026aee:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8026af2:	ee3e 7aec 	vsub.f32	s14, s29, s25
 8026af6:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 8026afa:	ee3c fa0d 	vadd.f32	s30, s24, s26
 8026afe:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026b02:	ee7c faad 	vadd.f32	s31, s25, s27
 8026b06:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 8026b0a:	ee3d aaae 	vadd.f32	s20, s27, s29
 8026b0e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8026b12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b16:	ee2f fa2b 	vmul.f32	s30, s30, s23
 8026b1a:	ee6f faab 	vmul.f32	s31, s31, s23
 8026b1e:	ee69 9aab 	vmul.f32	s19, s19, s23
 8026b22:	ee2a aa2b 	vmul.f32	s20, s20, s23
 8026b26:	bf48      	it	mi
 8026b28:	eef1 7a67 	vnegmi.f32	s15, s15
 8026b2c:	ee7f 8a29 	vadd.f32	s17, s30, s19
 8026b30:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8026b34:	eef4 7acb 	vcmpe.f32	s15, s22
 8026b38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b3c:	ee68 8aab 	vmul.f32	s17, s17, s23
 8026b40:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8026b44:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 8026b48:	dd3f      	ble.n	8026bca <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 8026b4a:	ee27 7a07 	vmul.f32	s14, s14, s14
 8026b4e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8026b52:	eea6 7aa6 	vfma.f32	s14, s13, s13
 8026b56:	ee27 7a06 	vmul.f32	s14, s14, s12
 8026b5a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8026b5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b62:	d847      	bhi.n	8026bf4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8026b64:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 8026b68:	ee3e 0aed 	vsub.f32	s0, s29, s27
 8026b6c:	f000 fa59 	bl	8027022 <atan2f>
 8026b70:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8026b74:	eeb0 8a40 	vmov.f32	s16, s0
 8026b78:	ee3d 0aec 	vsub.f32	s0, s27, s25
 8026b7c:	f000 fa51 	bl	8027022 <atan2f>
 8026b80:	ee38 0a40 	vsub.f32	s0, s16, s0
 8026b84:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8026c2c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 8026b88:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026b8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b90:	bf48      	it	mi
 8026b92:	eeb1 0a40 	vnegmi.f32	s0, s0
 8026b96:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026b9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b9e:	bfa4      	itt	ge
 8026ba0:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 8026c30 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8026ba4:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8026ba8:	eddf 7a22 	vldr	s15, [pc, #136]	@ 8026c34 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 8026bac:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026bb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026bb4:	d51e      	bpl.n	8026bf4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8026bb6:	eef0 0a49 	vmov.f32	s1, s18
 8026bba:	eeb0 0a68 	vmov.f32	s0, s17
 8026bbe:	4628      	mov	r0, r5
 8026bc0:	f7e9 fa14 	bl	800ffec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8026bc4:	ecbd 8b10 	vpop	{d8-d15}
 8026bc8:	bd38      	pop	{r3, r4, r5, pc}
 8026bca:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 8026bce:	eeb0 7a68 	vmov.f32	s14, s17
 8026bd2:	eea7 7aea 	vfms.f32	s14, s15, s21
 8026bd6:	ee7c 7aae 	vadd.f32	s15, s25, s29
 8026bda:	eef0 6a49 	vmov.f32	s13, s18
 8026bde:	eee7 6aea 	vfms.f32	s13, s15, s21
 8026be2:	ee66 7aa6 	vmul.f32	s15, s13, s13
 8026be6:	eee7 7a07 	vfma.f32	s15, s14, s14
 8026bea:	eef4 7ac6 	vcmpe.f32	s15, s12
 8026bee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026bf2:	d9e0      	bls.n	8026bb6 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8026bf4:	3401      	adds	r4, #1
 8026bf6:	eef0 0a6c 	vmov.f32	s1, s25
 8026bfa:	eeb0 0a4c 	vmov.f32	s0, s24
 8026bfe:	4621      	mov	r1, r4
 8026c00:	eef0 2a49 	vmov.f32	s5, s18
 8026c04:	eeb0 2a68 	vmov.f32	s4, s17
 8026c08:	eef0 1a6f 	vmov.f32	s3, s31
 8026c0c:	eeb0 1a4f 	vmov.f32	s2, s30
 8026c10:	4628      	mov	r0, r5
 8026c12:	f7ff ff4f 	bl	8026ab4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 8026c16:	eef0 da4a 	vmov.f32	s27, s20
 8026c1a:	eeb0 da69 	vmov.f32	s26, s19
 8026c1e:	eef0 ca49 	vmov.f32	s25, s18
 8026c22:	eeb0 ca68 	vmov.f32	s24, s17
 8026c26:	e75c      	b.n	8026ae2 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 8026c28:	2edbe6ff 	.word	0x2edbe6ff
 8026c2c:	40490fdb 	.word	0x40490fdb
 8026c30:	40c90fdb 	.word	0x40c90fdb
 8026c34:	3dcccccd 	.word	0x3dcccccd

08026c38 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 8026c38:	b530      	push	{r4, r5, lr}
 8026c3a:	ed2d 8b10 	vpush	{d8-d15}
 8026c3e:	4604      	mov	r4, r0
 8026c40:	b085      	sub	sp, #20
 8026c42:	eef0 8a40 	vmov.f32	s17, s0
 8026c46:	eef0 9a60 	vmov.f32	s19, s1
 8026c4a:	eef0 fa41 	vmov.f32	s31, s2
 8026c4e:	eeb0 fa61 	vmov.f32	s30, s3
 8026c52:	eef0 ba42 	vmov.f32	s23, s4
 8026c56:	eeb0 ca62 	vmov.f32	s24, s5
 8026c5a:	eef0 aa43 	vmov.f32	s21, s6
 8026c5e:	eeb0 ba63 	vmov.f32	s22, s7
 8026c62:	460d      	mov	r5, r1
 8026c64:	2d08      	cmp	r5, #8
 8026c66:	f200 8115 	bhi.w	8026e94 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 8026c6a:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 8026c6e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8026c72:	ee7f 6aab 	vadd.f32	s13, s31, s23
 8026c76:	ee26 6a27 	vmul.f32	s12, s12, s15
 8026c7a:	ee38 daaf 	vadd.f32	s26, s17, s31
 8026c7e:	ed8d 6a01 	vstr	s12, [sp, #4]
 8026c82:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8026c86:	ee2d da27 	vmul.f32	s26, s26, s15
 8026c8a:	ee7c ca0b 	vadd.f32	s25, s24, s22
 8026c8e:	eeb0 ea4d 	vmov.f32	s28, s26
 8026c92:	eea6 eaa7 	vfma.f32	s28, s13, s15
 8026c96:	ee6c caa7 	vmul.f32	s25, s25, s15
 8026c9a:	ee66 6a27 	vmul.f32	s13, s12, s15
 8026c9e:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8026ca2:	edcd 6a03 	vstr	s13, [sp, #12]
 8026ca6:	ee79 da8f 	vadd.f32	s27, s19, s30
 8026caa:	eef0 6a6c 	vmov.f32	s13, s25
 8026cae:	eee7 6a27 	vfma.f32	s13, s14, s15
 8026cb2:	ee6d daa7 	vmul.f32	s27, s27, s15
 8026cb6:	ee2e ea27 	vmul.f32	s28, s28, s15
 8026cba:	eef0 ea6d 	vmov.f32	s29, s27
 8026cbe:	eee7 ea27 	vfma.f32	s29, s14, s15
 8026cc2:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8026cc6:	ee6e eaa7 	vmul.f32	s29, s29, s15
 8026cca:	ed8d 7a02 	vstr	s14, [sp, #8]
 8026cce:	ed9d 7a03 	vldr	s14, [sp, #12]
 8026cd2:	ee3e 9a07 	vadd.f32	s18, s28, s14
 8026cd6:	ed9d 7a02 	vldr	s14, [sp, #8]
 8026cda:	ee3e aa87 	vadd.f32	s20, s29, s14
 8026cde:	ee29 9a27 	vmul.f32	s18, s18, s15
 8026ce2:	ee2a aa27 	vmul.f32	s20, s20, s15
 8026ce6:	eef0 6a67 	vmov.f32	s13, s15
 8026cea:	2d00      	cmp	r5, #0
 8026cec:	f000 810d 	beq.w	8026f0a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026cf0:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8026cf4:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 8026cf8:	ee7b 7a69 	vsub.f32	s15, s22, s19
 8026cfc:	ee3f 6aea 	vsub.f32	s12, s31, s21
 8026d00:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8026d04:	ee3b 5aea 	vsub.f32	s10, s23, s21
 8026d08:	eea6 7a27 	vfma.f32	s14, s12, s15
 8026d0c:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 8026d10:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8026d14:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 8026d18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d1c:	eea5 6a27 	vfma.f32	s12, s10, s15
 8026d20:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8026f50 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8026d24:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8026d28:	bf48      	it	mi
 8026d2a:	eeb1 7a47 	vnegmi.f32	s14, s14
 8026d2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d32:	eeb4 7ae4 	vcmpe.f32	s14, s9
 8026d36:	bf48      	it	mi
 8026d38:	eeb1 6a46 	vnegmi.f32	s12, s12
 8026d3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d40:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8026d44:	f340 80aa 	ble.w	8026e9c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 8026d48:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8026d4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d50:	dd5c      	ble.n	8026e0c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 8026d52:	ee65 5aa5 	vmul.f32	s11, s11, s11
 8026d56:	ee37 7a06 	vadd.f32	s14, s14, s12
 8026d5a:	eee7 5aa7 	vfma.f32	s11, s15, s15
 8026d5e:	ee27 7a07 	vmul.f32	s14, s14, s14
 8026d62:	ee65 7a85 	vmul.f32	s15, s11, s10
 8026d66:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8026d6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d6e:	f200 80cc 	bhi.w	8026f0a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026d72:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8026d76:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8026d7a:	f000 f952 	bl	8027022 <atan2f>
 8026d7e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8026d82:	eeb0 8a40 	vmov.f32	s16, s0
 8026d86:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8026d8a:	f000 f94a 	bl	8027022 <atan2f>
 8026d8e:	ee38 fa40 	vsub.f32	s30, s16, s0
 8026d92:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8026d96:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 8026d9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d9e:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8026da2:	bf48      	it	mi
 8026da4:	eeb1 fa4f 	vnegmi.f32	s30, s30
 8026da8:	f000 f93b 	bl	8027022 <atan2f>
 8026dac:	ee30 0a48 	vsub.f32	s0, s0, s16
 8026db0:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8026f54 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8026db4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026db8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026dbc:	eeb4 fae7 	vcmpe.f32	s30, s15
 8026dc0:	bf48      	it	mi
 8026dc2:	eeb1 0a40 	vnegmi.f32	s0, s0
 8026dc6:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8026f54 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8026dca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026dce:	bfa8      	it	ge
 8026dd0:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8026f58 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8026dd4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026dd8:	bfa8      	it	ge
 8026dda:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 8026dde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026de2:	bfa8      	it	ge
 8026de4:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8026f58 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8026de8:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8026f5c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8026dec:	bfa8      	it	ge
 8026dee:	ee37 0a40 	vsubge.f32	s0, s14, s0
 8026df2:	ee3f 0a00 	vadd.f32	s0, s30, s0
 8026df6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026dfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026dfe:	f140 8084 	bpl.w	8026f0a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026e02:	eef0 0a4a 	vmov.f32	s1, s20
 8026e06:	eeb0 0a49 	vmov.f32	s0, s18
 8026e0a:	e040      	b.n	8026e8e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 8026e0c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8026e10:	ee27 7a07 	vmul.f32	s14, s14, s14
 8026e14:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8026e18:	ee67 7a85 	vmul.f32	s15, s15, s10
 8026e1c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8026e20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e24:	d871      	bhi.n	8026f0a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026e26:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8026e2a:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8026e2e:	f000 f8f8 	bl	8027022 <atan2f>
 8026e32:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8026e36:	eeb0 8a40 	vmov.f32	s16, s0
 8026e3a:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8026e3e:	f000 f8f0 	bl	8027022 <atan2f>
 8026e42:	ee38 0a40 	vsub.f32	s0, s16, s0
 8026e46:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8026f54 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8026e4a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026e4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e52:	bf48      	it	mi
 8026e54:	eeb1 0a40 	vnegmi.f32	s0, s0
 8026e58:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026e5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e60:	bfa4      	itt	ge
 8026e62:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8026f58 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8026e66:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8026e6a:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8026f5c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8026e6e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026e72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e76:	d548      	bpl.n	8026f0a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026e78:	eef0 0a4f 	vmov.f32	s1, s30
 8026e7c:	eeb0 0a6f 	vmov.f32	s0, s31
 8026e80:	4620      	mov	r0, r4
 8026e82:	f7e9 f8b3 	bl	800ffec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8026e86:	eef0 0a4c 	vmov.f32	s1, s24
 8026e8a:	eeb0 0a6b 	vmov.f32	s0, s23
 8026e8e:	4620      	mov	r0, r4
 8026e90:	f7e9 f8ac 	bl	800ffec <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8026e94:	b005      	add	sp, #20
 8026e96:	ecbd 8b10 	vpop	{d8-d15}
 8026e9a:	bd30      	pop	{r4, r5, pc}
 8026e9c:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8026f50 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8026ea0:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8026ea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026ea8:	dd19      	ble.n	8026ede <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 8026eaa:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8026eae:	ee26 7a06 	vmul.f32	s14, s12, s12
 8026eb2:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8026eb6:	ee67 7a85 	vmul.f32	s15, s15, s10
 8026eba:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8026ebe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026ec2:	d822      	bhi.n	8026f0a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026ec4:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8026ec8:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8026ecc:	f000 f8a9 	bl	8027022 <atan2f>
 8026ed0:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8026ed4:	eeb0 8a40 	vmov.f32	s16, s0
 8026ed8:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8026edc:	e7af      	b.n	8026e3e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 8026ede:	ee78 7aaa 	vadd.f32	s15, s17, s21
 8026ee2:	eeb0 7a49 	vmov.f32	s14, s18
 8026ee6:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8026eea:	ee79 7a8b 	vadd.f32	s15, s19, s22
 8026eee:	eeb0 6a4a 	vmov.f32	s12, s20
 8026ef2:	eea7 6ae6 	vfms.f32	s12, s15, s13
 8026ef6:	ee66 7a06 	vmul.f32	s15, s12, s12
 8026efa:	eee7 7a07 	vfma.f32	s15, s14, s14
 8026efe:	eef4 7ac5 	vcmpe.f32	s15, s10
 8026f02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026f06:	f67f af7c 	bls.w	8026e02 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 8026f0a:	3501      	adds	r5, #1
 8026f0c:	eef0 0a69 	vmov.f32	s1, s19
 8026f10:	eeb0 0a68 	vmov.f32	s0, s17
 8026f14:	4629      	mov	r1, r5
 8026f16:	eef0 3a4a 	vmov.f32	s7, s20
 8026f1a:	eeb0 3a49 	vmov.f32	s6, s18
 8026f1e:	eef0 2a6e 	vmov.f32	s5, s29
 8026f22:	eeb0 2a4e 	vmov.f32	s4, s28
 8026f26:	eef0 1a6d 	vmov.f32	s3, s27
 8026f2a:	eeb0 1a4d 	vmov.f32	s2, s26
 8026f2e:	4620      	mov	r0, r4
 8026f30:	f7ff fe82 	bl	8026c38 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8026f34:	eeb0 ca6c 	vmov.f32	s24, s25
 8026f38:	eddd ba01 	vldr	s23, [sp, #4]
 8026f3c:	ed9d fa02 	vldr	s30, [sp, #8]
 8026f40:	eddd fa03 	vldr	s31, [sp, #12]
 8026f44:	eef0 9a4a 	vmov.f32	s19, s20
 8026f48:	eef0 8a49 	vmov.f32	s17, s18
 8026f4c:	e68a      	b.n	8026c64 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8026f4e:	bf00      	nop
 8026f50:	2edbe6ff 	.word	0x2edbe6ff
 8026f54:	40490fdb 	.word	0x40490fdb
 8026f58:	40c90fdb 	.word	0x40c90fdb
 8026f5c:	3dcccccd 	.word	0x3dcccccd

08026f60 <_ZN8touchgfx6CanvasD1Ev>:
 8026f60:	b510      	push	{r4, lr}
 8026f62:	4b04      	ldr	r3, [pc, #16]	@ (8026f74 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026f64:	4604      	mov	r4, r0
 8026f66:	f840 3b14 	str.w	r3, [r0], #20
 8026f6a:	f7ea ffc9 	bl	8011f00 <_ZN8touchgfx7OutlineD1Ev>
 8026f6e:	4620      	mov	r0, r4
 8026f70:	bd10      	pop	{r4, pc}
 8026f72:	bf00      	nop
 8026f74:	0802b890 	.word	0x0802b890

08026f78 <_ZN8touchgfx6CanvasD0Ev>:
 8026f78:	b510      	push	{r4, lr}
 8026f7a:	4604      	mov	r4, r0
 8026f7c:	f7ff fff0 	bl	8026f60 <_ZN8touchgfx6CanvasD1Ev>
 8026f80:	4620      	mov	r0, r4
 8026f82:	2174      	movs	r1, #116	@ 0x74
 8026f84:	f000 f826 	bl	8026fd4 <_ZdlPvj>
 8026f88:	4620      	mov	r0, r4
 8026f8a:	bd10      	pop	{r4, pc}

08026f8c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8026f8c:	b570      	push	{r4, r5, r6, lr}
 8026f8e:	790b      	ldrb	r3, [r1, #4]
 8026f90:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8026f94:	2b00      	cmp	r3, #0
 8026f96:	bf0c      	ite	eq
 8026f98:	2301      	moveq	r3, #1
 8026f9a:	2300      	movne	r3, #0
 8026f9c:	4604      	mov	r4, r0
 8026f9e:	460e      	mov	r6, r1
 8026fa0:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8026fa4:	d109      	bne.n	8026fba <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026fa6:	b14d      	cbz	r5, 8026fbc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026fa8:	7933      	ldrb	r3, [r6, #4]
 8026faa:	2b01      	cmp	r3, #1
 8026fac:	d10c      	bne.n	8026fc8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026fae:	6823      	ldr	r3, [r4, #0]
 8026fb0:	4620      	mov	r0, r4
 8026fb2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8026fb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026fb8:	4718      	bx	r3
 8026fba:	b12d      	cbz	r5, 8026fc8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026fbc:	6823      	ldr	r3, [r4, #0]
 8026fbe:	4620      	mov	r0, r4
 8026fc0:	695b      	ldr	r3, [r3, #20]
 8026fc2:	4798      	blx	r3
 8026fc4:	2d00      	cmp	r5, #0
 8026fc6:	d1ef      	bne.n	8026fa8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8026fc8:	bd70      	pop	{r4, r5, r6, pc}

08026fca <__aeabi_atexit>:
 8026fca:	460b      	mov	r3, r1
 8026fcc:	4601      	mov	r1, r0
 8026fce:	4618      	mov	r0, r3
 8026fd0:	f001 b81e 	b.w	8028010 <__cxa_atexit>

08026fd4 <_ZdlPvj>:
 8026fd4:	f000 b812 	b.w	8026ffc <_ZdlPv>

08026fd8 <__cxa_guard_acquire>:
 8026fd8:	6802      	ldr	r2, [r0, #0]
 8026fda:	07d2      	lsls	r2, r2, #31
 8026fdc:	4603      	mov	r3, r0
 8026fde:	d405      	bmi.n	8026fec <__cxa_guard_acquire+0x14>
 8026fe0:	7842      	ldrb	r2, [r0, #1]
 8026fe2:	b102      	cbz	r2, 8026fe6 <__cxa_guard_acquire+0xe>
 8026fe4:	deff      	udf	#255	@ 0xff
 8026fe6:	2001      	movs	r0, #1
 8026fe8:	7058      	strb	r0, [r3, #1]
 8026fea:	4770      	bx	lr
 8026fec:	2000      	movs	r0, #0
 8026fee:	4770      	bx	lr

08026ff0 <__cxa_guard_release>:
 8026ff0:	2301      	movs	r3, #1
 8026ff2:	6003      	str	r3, [r0, #0]
 8026ff4:	4770      	bx	lr

08026ff6 <__cxa_pure_virtual>:
 8026ff6:	b508      	push	{r3, lr}
 8026ff8:	f000 f80e 	bl	8027018 <_ZSt9terminatev>

08026ffc <_ZdlPv>:
 8026ffc:	f000 bf52 	b.w	8027ea4 <free>

08027000 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8027000:	b508      	push	{r3, lr}
 8027002:	4780      	blx	r0
 8027004:	f000 ff1a 	bl	8027e3c <abort>

08027008 <_ZSt13get_terminatev>:
 8027008:	4b02      	ldr	r3, [pc, #8]	@ (8027014 <_ZSt13get_terminatev+0xc>)
 802700a:	6818      	ldr	r0, [r3, #0]
 802700c:	f3bf 8f5b 	dmb	ish
 8027010:	4770      	bx	lr
 8027012:	bf00      	nop
 8027014:	20000100 	.word	0x20000100

08027018 <_ZSt9terminatev>:
 8027018:	b508      	push	{r3, lr}
 802701a:	f7ff fff5 	bl	8027008 <_ZSt13get_terminatev>
 802701e:	f7ff ffef 	bl	8027000 <_ZN10__cxxabiv111__terminateEPFvvE>

08027022 <atan2f>:
 8027022:	f000 b94d 	b.w	80272c0 <__ieee754_atan2f>
	...

08027028 <sqrtf>:
 8027028:	b508      	push	{r3, lr}
 802702a:	ed2d 8b02 	vpush	{d8}
 802702e:	eeb0 8a40 	vmov.f32	s16, s0
 8027032:	f000 f8a1 	bl	8027178 <__ieee754_sqrtf>
 8027036:	eeb4 8a48 	vcmp.f32	s16, s16
 802703a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802703e:	d60c      	bvs.n	802705a <sqrtf+0x32>
 8027040:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8027060 <sqrtf+0x38>
 8027044:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8027048:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802704c:	d505      	bpl.n	802705a <sqrtf+0x32>
 802704e:	f001 f9b9 	bl	80283c4 <__errno>
 8027052:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8027056:	2321      	movs	r3, #33	@ 0x21
 8027058:	6003      	str	r3, [r0, #0]
 802705a:	ecbd 8b02 	vpop	{d8}
 802705e:	bd08      	pop	{r3, pc}
 8027060:	00000000 	.word	0x00000000

08027064 <cosf>:
 8027064:	ee10 3a10 	vmov	r3, s0
 8027068:	b507      	push	{r0, r1, r2, lr}
 802706a:	4a1e      	ldr	r2, [pc, #120]	@ (80270e4 <cosf+0x80>)
 802706c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8027070:	4293      	cmp	r3, r2
 8027072:	d806      	bhi.n	8027082 <cosf+0x1e>
 8027074:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 80270e8 <cosf+0x84>
 8027078:	b003      	add	sp, #12
 802707a:	f85d eb04 	ldr.w	lr, [sp], #4
 802707e:	f000 b87f 	b.w	8027180 <__kernel_cosf>
 8027082:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8027086:	d304      	bcc.n	8027092 <cosf+0x2e>
 8027088:	ee30 0a40 	vsub.f32	s0, s0, s0
 802708c:	b003      	add	sp, #12
 802708e:	f85d fb04 	ldr.w	pc, [sp], #4
 8027092:	4668      	mov	r0, sp
 8027094:	f000 f9b4 	bl	8027400 <__ieee754_rem_pio2f>
 8027098:	f000 0003 	and.w	r0, r0, #3
 802709c:	2801      	cmp	r0, #1
 802709e:	d009      	beq.n	80270b4 <cosf+0x50>
 80270a0:	2802      	cmp	r0, #2
 80270a2:	d010      	beq.n	80270c6 <cosf+0x62>
 80270a4:	b9b0      	cbnz	r0, 80270d4 <cosf+0x70>
 80270a6:	eddd 0a01 	vldr	s1, [sp, #4]
 80270aa:	ed9d 0a00 	vldr	s0, [sp]
 80270ae:	f000 f867 	bl	8027180 <__kernel_cosf>
 80270b2:	e7eb      	b.n	802708c <cosf+0x28>
 80270b4:	eddd 0a01 	vldr	s1, [sp, #4]
 80270b8:	ed9d 0a00 	vldr	s0, [sp]
 80270bc:	f000 f8b8 	bl	8027230 <__kernel_sinf>
 80270c0:	eeb1 0a40 	vneg.f32	s0, s0
 80270c4:	e7e2      	b.n	802708c <cosf+0x28>
 80270c6:	eddd 0a01 	vldr	s1, [sp, #4]
 80270ca:	ed9d 0a00 	vldr	s0, [sp]
 80270ce:	f000 f857 	bl	8027180 <__kernel_cosf>
 80270d2:	e7f5      	b.n	80270c0 <cosf+0x5c>
 80270d4:	eddd 0a01 	vldr	s1, [sp, #4]
 80270d8:	ed9d 0a00 	vldr	s0, [sp]
 80270dc:	2001      	movs	r0, #1
 80270de:	f000 f8a7 	bl	8027230 <__kernel_sinf>
 80270e2:	e7d3      	b.n	802708c <cosf+0x28>
 80270e4:	3f490fd8 	.word	0x3f490fd8
 80270e8:	00000000 	.word	0x00000000

080270ec <sinf>:
 80270ec:	ee10 3a10 	vmov	r3, s0
 80270f0:	b507      	push	{r0, r1, r2, lr}
 80270f2:	4a1f      	ldr	r2, [pc, #124]	@ (8027170 <sinf+0x84>)
 80270f4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80270f8:	4293      	cmp	r3, r2
 80270fa:	d807      	bhi.n	802710c <sinf+0x20>
 80270fc:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8027174 <sinf+0x88>
 8027100:	2000      	movs	r0, #0
 8027102:	b003      	add	sp, #12
 8027104:	f85d eb04 	ldr.w	lr, [sp], #4
 8027108:	f000 b892 	b.w	8027230 <__kernel_sinf>
 802710c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8027110:	d304      	bcc.n	802711c <sinf+0x30>
 8027112:	ee30 0a40 	vsub.f32	s0, s0, s0
 8027116:	b003      	add	sp, #12
 8027118:	f85d fb04 	ldr.w	pc, [sp], #4
 802711c:	4668      	mov	r0, sp
 802711e:	f000 f96f 	bl	8027400 <__ieee754_rem_pio2f>
 8027122:	f000 0003 	and.w	r0, r0, #3
 8027126:	2801      	cmp	r0, #1
 8027128:	d00a      	beq.n	8027140 <sinf+0x54>
 802712a:	2802      	cmp	r0, #2
 802712c:	d00f      	beq.n	802714e <sinf+0x62>
 802712e:	b9c0      	cbnz	r0, 8027162 <sinf+0x76>
 8027130:	eddd 0a01 	vldr	s1, [sp, #4]
 8027134:	ed9d 0a00 	vldr	s0, [sp]
 8027138:	2001      	movs	r0, #1
 802713a:	f000 f879 	bl	8027230 <__kernel_sinf>
 802713e:	e7ea      	b.n	8027116 <sinf+0x2a>
 8027140:	eddd 0a01 	vldr	s1, [sp, #4]
 8027144:	ed9d 0a00 	vldr	s0, [sp]
 8027148:	f000 f81a 	bl	8027180 <__kernel_cosf>
 802714c:	e7e3      	b.n	8027116 <sinf+0x2a>
 802714e:	eddd 0a01 	vldr	s1, [sp, #4]
 8027152:	ed9d 0a00 	vldr	s0, [sp]
 8027156:	2001      	movs	r0, #1
 8027158:	f000 f86a 	bl	8027230 <__kernel_sinf>
 802715c:	eeb1 0a40 	vneg.f32	s0, s0
 8027160:	e7d9      	b.n	8027116 <sinf+0x2a>
 8027162:	eddd 0a01 	vldr	s1, [sp, #4]
 8027166:	ed9d 0a00 	vldr	s0, [sp]
 802716a:	f000 f809 	bl	8027180 <__kernel_cosf>
 802716e:	e7f5      	b.n	802715c <sinf+0x70>
 8027170:	3f490fd8 	.word	0x3f490fd8
 8027174:	00000000 	.word	0x00000000

08027178 <__ieee754_sqrtf>:
 8027178:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802717c:	4770      	bx	lr
	...

08027180 <__kernel_cosf>:
 8027180:	ee10 3a10 	vmov	r3, s0
 8027184:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8027188:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802718c:	eef0 6a40 	vmov.f32	s13, s0
 8027190:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8027194:	d204      	bcs.n	80271a0 <__kernel_cosf+0x20>
 8027196:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 802719a:	ee17 2a90 	vmov	r2, s15
 802719e:	b342      	cbz	r2, 80271f2 <__kernel_cosf+0x72>
 80271a0:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80271a4:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8027210 <__kernel_cosf+0x90>
 80271a8:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8027214 <__kernel_cosf+0x94>
 80271ac:	4a1a      	ldr	r2, [pc, #104]	@ (8027218 <__kernel_cosf+0x98>)
 80271ae:	eea7 6a27 	vfma.f32	s12, s14, s15
 80271b2:	4293      	cmp	r3, r2
 80271b4:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802721c <__kernel_cosf+0x9c>
 80271b8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80271bc:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8027220 <__kernel_cosf+0xa0>
 80271c0:	eea7 6a87 	vfma.f32	s12, s15, s14
 80271c4:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8027224 <__kernel_cosf+0xa4>
 80271c8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80271cc:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8027228 <__kernel_cosf+0xa8>
 80271d0:	eea7 6a87 	vfma.f32	s12, s15, s14
 80271d4:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 80271d8:	ee26 6a07 	vmul.f32	s12, s12, s14
 80271dc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80271e0:	eee7 0a06 	vfma.f32	s1, s14, s12
 80271e4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80271e8:	d804      	bhi.n	80271f4 <__kernel_cosf+0x74>
 80271ea:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80271ee:	ee30 0a67 	vsub.f32	s0, s0, s15
 80271f2:	4770      	bx	lr
 80271f4:	4a0d      	ldr	r2, [pc, #52]	@ (802722c <__kernel_cosf+0xac>)
 80271f6:	4293      	cmp	r3, r2
 80271f8:	bf9a      	itte	ls
 80271fa:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 80271fe:	ee07 3a10 	vmovls	s14, r3
 8027202:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8027206:	ee30 0a47 	vsub.f32	s0, s0, s14
 802720a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802720e:	e7ec      	b.n	80271ea <__kernel_cosf+0x6a>
 8027210:	ad47d74e 	.word	0xad47d74e
 8027214:	310f74f6 	.word	0x310f74f6
 8027218:	3e999999 	.word	0x3e999999
 802721c:	b493f27c 	.word	0xb493f27c
 8027220:	37d00d01 	.word	0x37d00d01
 8027224:	bab60b61 	.word	0xbab60b61
 8027228:	3d2aaaab 	.word	0x3d2aaaab
 802722c:	3f480000 	.word	0x3f480000

08027230 <__kernel_sinf>:
 8027230:	ee10 3a10 	vmov	r3, s0
 8027234:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8027238:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802723c:	d204      	bcs.n	8027248 <__kernel_sinf+0x18>
 802723e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8027242:	ee17 3a90 	vmov	r3, s15
 8027246:	b35b      	cbz	r3, 80272a0 <__kernel_sinf+0x70>
 8027248:	ee20 7a00 	vmul.f32	s14, s0, s0
 802724c:	eddf 7a15 	vldr	s15, [pc, #84]	@ 80272a4 <__kernel_sinf+0x74>
 8027250:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 80272a8 <__kernel_sinf+0x78>
 8027254:	eea7 6a27 	vfma.f32	s12, s14, s15
 8027258:	eddf 7a14 	vldr	s15, [pc, #80]	@ 80272ac <__kernel_sinf+0x7c>
 802725c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027260:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 80272b0 <__kernel_sinf+0x80>
 8027264:	eea7 6a87 	vfma.f32	s12, s15, s14
 8027268:	eddf 7a12 	vldr	s15, [pc, #72]	@ 80272b4 <__kernel_sinf+0x84>
 802726c:	ee60 6a07 	vmul.f32	s13, s0, s14
 8027270:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027274:	b930      	cbnz	r0, 8027284 <__kernel_sinf+0x54>
 8027276:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 80272b8 <__kernel_sinf+0x88>
 802727a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802727e:	eea6 0a26 	vfma.f32	s0, s12, s13
 8027282:	4770      	bx	lr
 8027284:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8027288:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 802728c:	eee0 7a86 	vfma.f32	s15, s1, s12
 8027290:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8027294:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80272bc <__kernel_sinf+0x8c>
 8027298:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802729c:	ee30 0a60 	vsub.f32	s0, s0, s1
 80272a0:	4770      	bx	lr
 80272a2:	bf00      	nop
 80272a4:	2f2ec9d3 	.word	0x2f2ec9d3
 80272a8:	b2d72f34 	.word	0xb2d72f34
 80272ac:	3638ef1b 	.word	0x3638ef1b
 80272b0:	b9500d01 	.word	0xb9500d01
 80272b4:	3c088889 	.word	0x3c088889
 80272b8:	be2aaaab 	.word	0xbe2aaaab
 80272bc:	3e2aaaab 	.word	0x3e2aaaab

080272c0 <__ieee754_atan2f>:
 80272c0:	ee10 2a90 	vmov	r2, s1
 80272c4:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 80272c8:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 80272cc:	b510      	push	{r4, lr}
 80272ce:	eef0 7a40 	vmov.f32	s15, s0
 80272d2:	d806      	bhi.n	80272e2 <__ieee754_atan2f+0x22>
 80272d4:	ee10 0a10 	vmov	r0, s0
 80272d8:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 80272dc:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80272e0:	d904      	bls.n	80272ec <__ieee754_atan2f+0x2c>
 80272e2:	ee77 7aa0 	vadd.f32	s15, s15, s1
 80272e6:	eeb0 0a67 	vmov.f32	s0, s15
 80272ea:	bd10      	pop	{r4, pc}
 80272ec:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 80272f0:	d103      	bne.n	80272fa <__ieee754_atan2f+0x3a>
 80272f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80272f6:	f000 b9b3 	b.w	8027660 <atanf>
 80272fa:	1794      	asrs	r4, r2, #30
 80272fc:	f004 0402 	and.w	r4, r4, #2
 8027300:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8027304:	b943      	cbnz	r3, 8027318 <__ieee754_atan2f+0x58>
 8027306:	2c02      	cmp	r4, #2
 8027308:	d05e      	beq.n	80273c8 <__ieee754_atan2f+0x108>
 802730a:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 80273dc <__ieee754_atan2f+0x11c>
 802730e:	2c03      	cmp	r4, #3
 8027310:	bf08      	it	eq
 8027312:	eef0 7a47 	vmoveq.f32	s15, s14
 8027316:	e7e6      	b.n	80272e6 <__ieee754_atan2f+0x26>
 8027318:	b941      	cbnz	r1, 802732c <__ieee754_atan2f+0x6c>
 802731a:	eddf 7a31 	vldr	s15, [pc, #196]	@ 80273e0 <__ieee754_atan2f+0x120>
 802731e:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 80273e4 <__ieee754_atan2f+0x124>
 8027322:	2800      	cmp	r0, #0
 8027324:	bfa8      	it	ge
 8027326:	eef0 7a47 	vmovge.f32	s15, s14
 802732a:	e7dc      	b.n	80272e6 <__ieee754_atan2f+0x26>
 802732c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8027330:	d110      	bne.n	8027354 <__ieee754_atan2f+0x94>
 8027332:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8027336:	f104 34ff 	add.w	r4, r4, #4294967295
 802733a:	d107      	bne.n	802734c <__ieee754_atan2f+0x8c>
 802733c:	2c02      	cmp	r4, #2
 802733e:	d846      	bhi.n	80273ce <__ieee754_atan2f+0x10e>
 8027340:	4b29      	ldr	r3, [pc, #164]	@ (80273e8 <__ieee754_atan2f+0x128>)
 8027342:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8027346:	edd3 7a00 	vldr	s15, [r3]
 802734a:	e7cc      	b.n	80272e6 <__ieee754_atan2f+0x26>
 802734c:	2c02      	cmp	r4, #2
 802734e:	d841      	bhi.n	80273d4 <__ieee754_atan2f+0x114>
 8027350:	4b26      	ldr	r3, [pc, #152]	@ (80273ec <__ieee754_atan2f+0x12c>)
 8027352:	e7f6      	b.n	8027342 <__ieee754_atan2f+0x82>
 8027354:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8027358:	d0df      	beq.n	802731a <__ieee754_atan2f+0x5a>
 802735a:	1a5b      	subs	r3, r3, r1
 802735c:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8027360:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8027364:	da1a      	bge.n	802739c <__ieee754_atan2f+0xdc>
 8027366:	2a00      	cmp	r2, #0
 8027368:	da01      	bge.n	802736e <__ieee754_atan2f+0xae>
 802736a:	313c      	adds	r1, #60	@ 0x3c
 802736c:	db19      	blt.n	80273a2 <__ieee754_atan2f+0xe2>
 802736e:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8027372:	f000 fa49 	bl	8027808 <fabsf>
 8027376:	f000 f973 	bl	8027660 <atanf>
 802737a:	eef0 7a40 	vmov.f32	s15, s0
 802737e:	2c01      	cmp	r4, #1
 8027380:	d012      	beq.n	80273a8 <__ieee754_atan2f+0xe8>
 8027382:	2c02      	cmp	r4, #2
 8027384:	d017      	beq.n	80273b6 <__ieee754_atan2f+0xf6>
 8027386:	2c00      	cmp	r4, #0
 8027388:	d0ad      	beq.n	80272e6 <__ieee754_atan2f+0x26>
 802738a:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 80273f0 <__ieee754_atan2f+0x130>
 802738e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027392:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 80273f4 <__ieee754_atan2f+0x134>
 8027396:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802739a:	e7a4      	b.n	80272e6 <__ieee754_atan2f+0x26>
 802739c:	eddf 7a11 	vldr	s15, [pc, #68]	@ 80273e4 <__ieee754_atan2f+0x124>
 80273a0:	e7ed      	b.n	802737e <__ieee754_atan2f+0xbe>
 80273a2:	eddf 7a15 	vldr	s15, [pc, #84]	@ 80273f8 <__ieee754_atan2f+0x138>
 80273a6:	e7ea      	b.n	802737e <__ieee754_atan2f+0xbe>
 80273a8:	ee17 3a90 	vmov	r3, s15
 80273ac:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 80273b0:	ee07 3a90 	vmov	s15, r3
 80273b4:	e797      	b.n	80272e6 <__ieee754_atan2f+0x26>
 80273b6:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 80273f0 <__ieee754_atan2f+0x130>
 80273ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 80273be:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 80273f4 <__ieee754_atan2f+0x134>
 80273c2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80273c6:	e78e      	b.n	80272e6 <__ieee754_atan2f+0x26>
 80273c8:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 80273f4 <__ieee754_atan2f+0x134>
 80273cc:	e78b      	b.n	80272e6 <__ieee754_atan2f+0x26>
 80273ce:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 80273fc <__ieee754_atan2f+0x13c>
 80273d2:	e788      	b.n	80272e6 <__ieee754_atan2f+0x26>
 80273d4:	eddf 7a08 	vldr	s15, [pc, #32]	@ 80273f8 <__ieee754_atan2f+0x138>
 80273d8:	e785      	b.n	80272e6 <__ieee754_atan2f+0x26>
 80273da:	bf00      	nop
 80273dc:	c0490fdb 	.word	0xc0490fdb
 80273e0:	bfc90fdb 	.word	0xbfc90fdb
 80273e4:	3fc90fdb 	.word	0x3fc90fdb
 80273e8:	0802b8a8 	.word	0x0802b8a8
 80273ec:	0802b89c 	.word	0x0802b89c
 80273f0:	33bbbd2e 	.word	0x33bbbd2e
 80273f4:	40490fdb 	.word	0x40490fdb
 80273f8:	00000000 	.word	0x00000000
 80273fc:	3f490fdb 	.word	0x3f490fdb

08027400 <__ieee754_rem_pio2f>:
 8027400:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027402:	ee10 6a10 	vmov	r6, s0
 8027406:	4b88      	ldr	r3, [pc, #544]	@ (8027628 <__ieee754_rem_pio2f+0x228>)
 8027408:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 802740c:	429d      	cmp	r5, r3
 802740e:	b087      	sub	sp, #28
 8027410:	4604      	mov	r4, r0
 8027412:	d805      	bhi.n	8027420 <__ieee754_rem_pio2f+0x20>
 8027414:	2300      	movs	r3, #0
 8027416:	ed80 0a00 	vstr	s0, [r0]
 802741a:	6043      	str	r3, [r0, #4]
 802741c:	2000      	movs	r0, #0
 802741e:	e022      	b.n	8027466 <__ieee754_rem_pio2f+0x66>
 8027420:	4b82      	ldr	r3, [pc, #520]	@ (802762c <__ieee754_rem_pio2f+0x22c>)
 8027422:	429d      	cmp	r5, r3
 8027424:	d83a      	bhi.n	802749c <__ieee754_rem_pio2f+0x9c>
 8027426:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802742a:	2e00      	cmp	r6, #0
 802742c:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8027630 <__ieee754_rem_pio2f+0x230>
 8027430:	4a80      	ldr	r2, [pc, #512]	@ (8027634 <__ieee754_rem_pio2f+0x234>)
 8027432:	f023 030f 	bic.w	r3, r3, #15
 8027436:	dd18      	ble.n	802746a <__ieee754_rem_pio2f+0x6a>
 8027438:	4293      	cmp	r3, r2
 802743a:	ee70 7a47 	vsub.f32	s15, s0, s14
 802743e:	bf09      	itett	eq
 8027440:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8027638 <__ieee754_rem_pio2f+0x238>
 8027444:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 802763c <__ieee754_rem_pio2f+0x23c>
 8027448:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8027640 <__ieee754_rem_pio2f+0x240>
 802744c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8027450:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8027454:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027458:	ed80 7a00 	vstr	s14, [r0]
 802745c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8027460:	edc0 7a01 	vstr	s15, [r0, #4]
 8027464:	2001      	movs	r0, #1
 8027466:	b007      	add	sp, #28
 8027468:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802746a:	4293      	cmp	r3, r2
 802746c:	ee70 7a07 	vadd.f32	s15, s0, s14
 8027470:	bf09      	itett	eq
 8027472:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8027638 <__ieee754_rem_pio2f+0x238>
 8027476:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 802763c <__ieee754_rem_pio2f+0x23c>
 802747a:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8027640 <__ieee754_rem_pio2f+0x240>
 802747e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8027482:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027486:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802748a:	ed80 7a00 	vstr	s14, [r0]
 802748e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027492:	edc0 7a01 	vstr	s15, [r0, #4]
 8027496:	f04f 30ff 	mov.w	r0, #4294967295
 802749a:	e7e4      	b.n	8027466 <__ieee754_rem_pio2f+0x66>
 802749c:	4b69      	ldr	r3, [pc, #420]	@ (8027644 <__ieee754_rem_pio2f+0x244>)
 802749e:	429d      	cmp	r5, r3
 80274a0:	d873      	bhi.n	802758a <__ieee754_rem_pio2f+0x18a>
 80274a2:	f000 f9b1 	bl	8027808 <fabsf>
 80274a6:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8027648 <__ieee754_rem_pio2f+0x248>
 80274aa:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80274ae:	eee0 7a07 	vfma.f32	s15, s0, s14
 80274b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80274b6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80274ba:	ee17 0a90 	vmov	r0, s15
 80274be:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8027630 <__ieee754_rem_pio2f+0x230>
 80274c2:	eea7 0a67 	vfms.f32	s0, s14, s15
 80274c6:	281f      	cmp	r0, #31
 80274c8:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802763c <__ieee754_rem_pio2f+0x23c>
 80274cc:	ee67 7a27 	vmul.f32	s15, s14, s15
 80274d0:	eeb1 6a47 	vneg.f32	s12, s14
 80274d4:	ee70 6a67 	vsub.f32	s13, s0, s15
 80274d8:	ee16 1a90 	vmov	r1, s13
 80274dc:	dc09      	bgt.n	80274f2 <__ieee754_rem_pio2f+0xf2>
 80274de:	4a5b      	ldr	r2, [pc, #364]	@ (802764c <__ieee754_rem_pio2f+0x24c>)
 80274e0:	1e47      	subs	r7, r0, #1
 80274e2:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 80274e6:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 80274ea:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80274ee:	4293      	cmp	r3, r2
 80274f0:	d107      	bne.n	8027502 <__ieee754_rem_pio2f+0x102>
 80274f2:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 80274f6:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 80274fa:	2a08      	cmp	r2, #8
 80274fc:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8027500:	dc14      	bgt.n	802752c <__ieee754_rem_pio2f+0x12c>
 8027502:	6021      	str	r1, [r4, #0]
 8027504:	ed94 7a00 	vldr	s14, [r4]
 8027508:	ee30 0a47 	vsub.f32	s0, s0, s14
 802750c:	2e00      	cmp	r6, #0
 802750e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027512:	ed84 0a01 	vstr	s0, [r4, #4]
 8027516:	daa6      	bge.n	8027466 <__ieee754_rem_pio2f+0x66>
 8027518:	eeb1 7a47 	vneg.f32	s14, s14
 802751c:	eeb1 0a40 	vneg.f32	s0, s0
 8027520:	ed84 7a00 	vstr	s14, [r4]
 8027524:	ed84 0a01 	vstr	s0, [r4, #4]
 8027528:	4240      	negs	r0, r0
 802752a:	e79c      	b.n	8027466 <__ieee754_rem_pio2f+0x66>
 802752c:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8027638 <__ieee754_rem_pio2f+0x238>
 8027530:	eef0 6a40 	vmov.f32	s13, s0
 8027534:	eee6 6a25 	vfma.f32	s13, s12, s11
 8027538:	ee70 7a66 	vsub.f32	s15, s0, s13
 802753c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027540:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8027640 <__ieee754_rem_pio2f+0x240>
 8027544:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8027548:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802754c:	ee15 2a90 	vmov	r2, s11
 8027550:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027554:	1a5b      	subs	r3, r3, r1
 8027556:	2b19      	cmp	r3, #25
 8027558:	dc04      	bgt.n	8027564 <__ieee754_rem_pio2f+0x164>
 802755a:	edc4 5a00 	vstr	s11, [r4]
 802755e:	eeb0 0a66 	vmov.f32	s0, s13
 8027562:	e7cf      	b.n	8027504 <__ieee754_rem_pio2f+0x104>
 8027564:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8027650 <__ieee754_rem_pio2f+0x250>
 8027568:	eeb0 0a66 	vmov.f32	s0, s13
 802756c:	eea6 0a25 	vfma.f32	s0, s12, s11
 8027570:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8027574:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8027654 <__ieee754_rem_pio2f+0x254>
 8027578:	eee6 7a25 	vfma.f32	s15, s12, s11
 802757c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8027580:	ee30 7a67 	vsub.f32	s14, s0, s15
 8027584:	ed84 7a00 	vstr	s14, [r4]
 8027588:	e7bc      	b.n	8027504 <__ieee754_rem_pio2f+0x104>
 802758a:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 802758e:	d306      	bcc.n	802759e <__ieee754_rem_pio2f+0x19e>
 8027590:	ee70 7a40 	vsub.f32	s15, s0, s0
 8027594:	edc0 7a01 	vstr	s15, [r0, #4]
 8027598:	edc0 7a00 	vstr	s15, [r0]
 802759c:	e73e      	b.n	802741c <__ieee754_rem_pio2f+0x1c>
 802759e:	15ea      	asrs	r2, r5, #23
 80275a0:	3a86      	subs	r2, #134	@ 0x86
 80275a2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80275a6:	ee07 3a90 	vmov	s15, r3
 80275aa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80275ae:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8027658 <__ieee754_rem_pio2f+0x258>
 80275b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80275b6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80275ba:	ed8d 7a03 	vstr	s14, [sp, #12]
 80275be:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80275c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80275c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80275ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80275ce:	ed8d 7a04 	vstr	s14, [sp, #16]
 80275d2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80275d6:	eef5 7a40 	vcmp.f32	s15, #0.0
 80275da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275de:	edcd 7a05 	vstr	s15, [sp, #20]
 80275e2:	d11e      	bne.n	8027622 <__ieee754_rem_pio2f+0x222>
 80275e4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80275e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275ec:	bf0c      	ite	eq
 80275ee:	2301      	moveq	r3, #1
 80275f0:	2302      	movne	r3, #2
 80275f2:	491a      	ldr	r1, [pc, #104]	@ (802765c <__ieee754_rem_pio2f+0x25c>)
 80275f4:	9101      	str	r1, [sp, #4]
 80275f6:	2102      	movs	r1, #2
 80275f8:	9100      	str	r1, [sp, #0]
 80275fa:	a803      	add	r0, sp, #12
 80275fc:	4621      	mov	r1, r4
 80275fe:	f000 f971 	bl	80278e4 <__kernel_rem_pio2f>
 8027602:	2e00      	cmp	r6, #0
 8027604:	f6bf af2f 	bge.w	8027466 <__ieee754_rem_pio2f+0x66>
 8027608:	edd4 7a00 	vldr	s15, [r4]
 802760c:	eef1 7a67 	vneg.f32	s15, s15
 8027610:	edc4 7a00 	vstr	s15, [r4]
 8027614:	edd4 7a01 	vldr	s15, [r4, #4]
 8027618:	eef1 7a67 	vneg.f32	s15, s15
 802761c:	edc4 7a01 	vstr	s15, [r4, #4]
 8027620:	e782      	b.n	8027528 <__ieee754_rem_pio2f+0x128>
 8027622:	2303      	movs	r3, #3
 8027624:	e7e5      	b.n	80275f2 <__ieee754_rem_pio2f+0x1f2>
 8027626:	bf00      	nop
 8027628:	3f490fd8 	.word	0x3f490fd8
 802762c:	4016cbe3 	.word	0x4016cbe3
 8027630:	3fc90f80 	.word	0x3fc90f80
 8027634:	3fc90fd0 	.word	0x3fc90fd0
 8027638:	37354400 	.word	0x37354400
 802763c:	37354443 	.word	0x37354443
 8027640:	2e85a308 	.word	0x2e85a308
 8027644:	43490f80 	.word	0x43490f80
 8027648:	3f22f984 	.word	0x3f22f984
 802764c:	0802b8b4 	.word	0x0802b8b4
 8027650:	2e85a300 	.word	0x2e85a300
 8027654:	248d3132 	.word	0x248d3132
 8027658:	43800000 	.word	0x43800000
 802765c:	0802b934 	.word	0x0802b934

08027660 <atanf>:
 8027660:	b538      	push	{r3, r4, r5, lr}
 8027662:	ee10 5a10 	vmov	r5, s0
 8027666:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 802766a:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 802766e:	eef0 7a40 	vmov.f32	s15, s0
 8027672:	d310      	bcc.n	8027696 <atanf+0x36>
 8027674:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8027678:	d904      	bls.n	8027684 <atanf+0x24>
 802767a:	ee70 7a00 	vadd.f32	s15, s0, s0
 802767e:	eeb0 0a67 	vmov.f32	s0, s15
 8027682:	bd38      	pop	{r3, r4, r5, pc}
 8027684:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 80277bc <atanf+0x15c>
 8027688:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 80277c0 <atanf+0x160>
 802768c:	2d00      	cmp	r5, #0
 802768e:	bfc8      	it	gt
 8027690:	eef0 7a47 	vmovgt.f32	s15, s14
 8027694:	e7f3      	b.n	802767e <atanf+0x1e>
 8027696:	4b4b      	ldr	r3, [pc, #300]	@ (80277c4 <atanf+0x164>)
 8027698:	429c      	cmp	r4, r3
 802769a:	d810      	bhi.n	80276be <atanf+0x5e>
 802769c:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 80276a0:	d20a      	bcs.n	80276b8 <atanf+0x58>
 80276a2:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 80277c8 <atanf+0x168>
 80276a6:	ee30 7a07 	vadd.f32	s14, s0, s14
 80276aa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80276ae:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80276b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80276b6:	dce2      	bgt.n	802767e <atanf+0x1e>
 80276b8:	f04f 33ff 	mov.w	r3, #4294967295
 80276bc:	e013      	b.n	80276e6 <atanf+0x86>
 80276be:	f000 f8a3 	bl	8027808 <fabsf>
 80276c2:	4b42      	ldr	r3, [pc, #264]	@ (80277cc <atanf+0x16c>)
 80276c4:	429c      	cmp	r4, r3
 80276c6:	d84f      	bhi.n	8027768 <atanf+0x108>
 80276c8:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 80276cc:	429c      	cmp	r4, r3
 80276ce:	d841      	bhi.n	8027754 <atanf+0xf4>
 80276d0:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 80276d4:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80276d8:	eea0 7a27 	vfma.f32	s14, s0, s15
 80276dc:	2300      	movs	r3, #0
 80276de:	ee30 0a27 	vadd.f32	s0, s0, s15
 80276e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80276e6:	1c5a      	adds	r2, r3, #1
 80276e8:	ee27 6aa7 	vmul.f32	s12, s15, s15
 80276ec:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 80277d0 <atanf+0x170>
 80276f0:	eddf 5a38 	vldr	s11, [pc, #224]	@ 80277d4 <atanf+0x174>
 80276f4:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 80277d8 <atanf+0x178>
 80276f8:	ee66 6a06 	vmul.f32	s13, s12, s12
 80276fc:	eee6 5a87 	vfma.f32	s11, s13, s14
 8027700:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 80277dc <atanf+0x17c>
 8027704:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8027708:	eddf 5a35 	vldr	s11, [pc, #212]	@ 80277e0 <atanf+0x180>
 802770c:	eee7 5a26 	vfma.f32	s11, s14, s13
 8027710:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 80277e4 <atanf+0x184>
 8027714:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8027718:	eddf 5a33 	vldr	s11, [pc, #204]	@ 80277e8 <atanf+0x188>
 802771c:	eee7 5a26 	vfma.f32	s11, s14, s13
 8027720:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 80277ec <atanf+0x18c>
 8027724:	eea6 5a87 	vfma.f32	s10, s13, s14
 8027728:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 80277f0 <atanf+0x190>
 802772c:	eea5 7a26 	vfma.f32	s14, s10, s13
 8027730:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 80277f4 <atanf+0x194>
 8027734:	eea7 5a26 	vfma.f32	s10, s14, s13
 8027738:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 80277f8 <atanf+0x198>
 802773c:	eea5 7a26 	vfma.f32	s14, s10, s13
 8027740:	ee27 7a26 	vmul.f32	s14, s14, s13
 8027744:	eea5 7a86 	vfma.f32	s14, s11, s12
 8027748:	ee27 7a87 	vmul.f32	s14, s15, s14
 802774c:	d121      	bne.n	8027792 <atanf+0x132>
 802774e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027752:	e794      	b.n	802767e <atanf+0x1e>
 8027754:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8027758:	ee30 7a67 	vsub.f32	s14, s0, s15
 802775c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027760:	2301      	movs	r3, #1
 8027762:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027766:	e7be      	b.n	80276e6 <atanf+0x86>
 8027768:	4b24      	ldr	r3, [pc, #144]	@ (80277fc <atanf+0x19c>)
 802776a:	429c      	cmp	r4, r3
 802776c:	d80b      	bhi.n	8027786 <atanf+0x126>
 802776e:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8027772:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8027776:	eea0 7a27 	vfma.f32	s14, s0, s15
 802777a:	2302      	movs	r3, #2
 802777c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8027780:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8027784:	e7af      	b.n	80276e6 <atanf+0x86>
 8027786:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802778a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802778e:	2303      	movs	r3, #3
 8027790:	e7a9      	b.n	80276e6 <atanf+0x86>
 8027792:	4a1b      	ldr	r2, [pc, #108]	@ (8027800 <atanf+0x1a0>)
 8027794:	491b      	ldr	r1, [pc, #108]	@ (8027804 <atanf+0x1a4>)
 8027796:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802779a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802779e:	edd3 6a00 	vldr	s13, [r3]
 80277a2:	ee37 7a66 	vsub.f32	s14, s14, s13
 80277a6:	2d00      	cmp	r5, #0
 80277a8:	ee37 7a67 	vsub.f32	s14, s14, s15
 80277ac:	edd2 7a00 	vldr	s15, [r2]
 80277b0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80277b4:	bfb8      	it	lt
 80277b6:	eef1 7a67 	vneglt.f32	s15, s15
 80277ba:	e760      	b.n	802767e <atanf+0x1e>
 80277bc:	bfc90fdb 	.word	0xbfc90fdb
 80277c0:	3fc90fdb 	.word	0x3fc90fdb
 80277c4:	3edfffff 	.word	0x3edfffff
 80277c8:	7149f2ca 	.word	0x7149f2ca
 80277cc:	3f97ffff 	.word	0x3f97ffff
 80277d0:	3c8569d7 	.word	0x3c8569d7
 80277d4:	3d4bda59 	.word	0x3d4bda59
 80277d8:	bd6ef16b 	.word	0xbd6ef16b
 80277dc:	3d886b35 	.word	0x3d886b35
 80277e0:	3dba2e6e 	.word	0x3dba2e6e
 80277e4:	3e124925 	.word	0x3e124925
 80277e8:	3eaaaaab 	.word	0x3eaaaaab
 80277ec:	bd15a221 	.word	0xbd15a221
 80277f0:	bd9d8795 	.word	0xbd9d8795
 80277f4:	bde38e38 	.word	0xbde38e38
 80277f8:	be4ccccd 	.word	0xbe4ccccd
 80277fc:	401bffff 	.word	0x401bffff
 8027800:	0802bc5c 	.word	0x0802bc5c
 8027804:	0802bc4c 	.word	0x0802bc4c

08027808 <fabsf>:
 8027808:	ee10 3a10 	vmov	r3, s0
 802780c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8027810:	ee00 3a10 	vmov	s0, r3
 8027814:	4770      	bx	lr
	...

08027818 <scalbnf>:
 8027818:	ee10 3a10 	vmov	r3, s0
 802781c:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8027820:	d02b      	beq.n	802787a <scalbnf+0x62>
 8027822:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8027826:	d302      	bcc.n	802782e <scalbnf+0x16>
 8027828:	ee30 0a00 	vadd.f32	s0, s0, s0
 802782c:	4770      	bx	lr
 802782e:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8027832:	d123      	bne.n	802787c <scalbnf+0x64>
 8027834:	4b24      	ldr	r3, [pc, #144]	@ (80278c8 <scalbnf+0xb0>)
 8027836:	eddf 7a25 	vldr	s15, [pc, #148]	@ 80278cc <scalbnf+0xb4>
 802783a:	4298      	cmp	r0, r3
 802783c:	ee20 0a27 	vmul.f32	s0, s0, s15
 8027840:	db17      	blt.n	8027872 <scalbnf+0x5a>
 8027842:	ee10 3a10 	vmov	r3, s0
 8027846:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802784a:	3a19      	subs	r2, #25
 802784c:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8027850:	4288      	cmp	r0, r1
 8027852:	dd15      	ble.n	8027880 <scalbnf+0x68>
 8027854:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 80278d0 <scalbnf+0xb8>
 8027858:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 80278d4 <scalbnf+0xbc>
 802785c:	ee10 3a10 	vmov	r3, s0
 8027860:	eeb0 7a67 	vmov.f32	s14, s15
 8027864:	2b00      	cmp	r3, #0
 8027866:	bfb8      	it	lt
 8027868:	eef0 7a66 	vmovlt.f32	s15, s13
 802786c:	ee27 0a87 	vmul.f32	s0, s15, s14
 8027870:	4770      	bx	lr
 8027872:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80278d8 <scalbnf+0xc0>
 8027876:	ee27 0a80 	vmul.f32	s0, s15, s0
 802787a:	4770      	bx	lr
 802787c:	0dd2      	lsrs	r2, r2, #23
 802787e:	e7e5      	b.n	802784c <scalbnf+0x34>
 8027880:	4410      	add	r0, r2
 8027882:	28fe      	cmp	r0, #254	@ 0xfe
 8027884:	dce6      	bgt.n	8027854 <scalbnf+0x3c>
 8027886:	2800      	cmp	r0, #0
 8027888:	dd06      	ble.n	8027898 <scalbnf+0x80>
 802788a:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802788e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8027892:	ee00 3a10 	vmov	s0, r3
 8027896:	4770      	bx	lr
 8027898:	f110 0f16 	cmn.w	r0, #22
 802789c:	da09      	bge.n	80278b2 <scalbnf+0x9a>
 802789e:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 80278d8 <scalbnf+0xc0>
 80278a2:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 80278dc <scalbnf+0xc4>
 80278a6:	ee10 3a10 	vmov	r3, s0
 80278aa:	eeb0 7a67 	vmov.f32	s14, s15
 80278ae:	2b00      	cmp	r3, #0
 80278b0:	e7d9      	b.n	8027866 <scalbnf+0x4e>
 80278b2:	3019      	adds	r0, #25
 80278b4:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80278b8:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80278bc:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 80278e0 <scalbnf+0xc8>
 80278c0:	ee07 3a90 	vmov	s15, r3
 80278c4:	e7d7      	b.n	8027876 <scalbnf+0x5e>
 80278c6:	bf00      	nop
 80278c8:	ffff3cb0 	.word	0xffff3cb0
 80278cc:	4c000000 	.word	0x4c000000
 80278d0:	7149f2ca 	.word	0x7149f2ca
 80278d4:	f149f2ca 	.word	0xf149f2ca
 80278d8:	0da24260 	.word	0x0da24260
 80278dc:	8da24260 	.word	0x8da24260
 80278e0:	33000000 	.word	0x33000000

080278e4 <__kernel_rem_pio2f>:
 80278e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80278e8:	ed2d 8b04 	vpush	{d8-d9}
 80278ec:	b0d9      	sub	sp, #356	@ 0x164
 80278ee:	4690      	mov	r8, r2
 80278f0:	9001      	str	r0, [sp, #4]
 80278f2:	4ab6      	ldr	r2, [pc, #728]	@ (8027bcc <__kernel_rem_pio2f+0x2e8>)
 80278f4:	9866      	ldr	r0, [sp, #408]	@ 0x198
 80278f6:	f118 0f04 	cmn.w	r8, #4
 80278fa:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 80278fe:	460f      	mov	r7, r1
 8027900:	f103 3bff 	add.w	fp, r3, #4294967295
 8027904:	db26      	blt.n	8027954 <__kernel_rem_pio2f+0x70>
 8027906:	f1b8 0203 	subs.w	r2, r8, #3
 802790a:	bf48      	it	mi
 802790c:	f108 0204 	addmi.w	r2, r8, #4
 8027910:	10d2      	asrs	r2, r2, #3
 8027912:	1c55      	adds	r5, r2, #1
 8027914:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8027916:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8027bdc <__kernel_rem_pio2f+0x2f8>
 802791a:	00e8      	lsls	r0, r5, #3
 802791c:	eba2 060b 	sub.w	r6, r2, fp
 8027920:	9002      	str	r0, [sp, #8]
 8027922:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8027926:	eb0a 0c0b 	add.w	ip, sl, fp
 802792a:	ac1c      	add	r4, sp, #112	@ 0x70
 802792c:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8027930:	2000      	movs	r0, #0
 8027932:	4560      	cmp	r0, ip
 8027934:	dd10      	ble.n	8027958 <__kernel_rem_pio2f+0x74>
 8027936:	a91c      	add	r1, sp, #112	@ 0x70
 8027938:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 802793c:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8027940:	2600      	movs	r6, #0
 8027942:	4556      	cmp	r6, sl
 8027944:	dc24      	bgt.n	8027990 <__kernel_rem_pio2f+0xac>
 8027946:	f8dd e004 	ldr.w	lr, [sp, #4]
 802794a:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8027bdc <__kernel_rem_pio2f+0x2f8>
 802794e:	4684      	mov	ip, r0
 8027950:	2400      	movs	r4, #0
 8027952:	e016      	b.n	8027982 <__kernel_rem_pio2f+0x9e>
 8027954:	2200      	movs	r2, #0
 8027956:	e7dc      	b.n	8027912 <__kernel_rem_pio2f+0x2e>
 8027958:	42c6      	cmn	r6, r0
 802795a:	bf5d      	ittte	pl
 802795c:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8027960:	ee07 1a90 	vmovpl	s15, r1
 8027964:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8027968:	eef0 7a47 	vmovmi.f32	s15, s14
 802796c:	ece4 7a01 	vstmia	r4!, {s15}
 8027970:	3001      	adds	r0, #1
 8027972:	e7de      	b.n	8027932 <__kernel_rem_pio2f+0x4e>
 8027974:	ecfe 6a01 	vldmia	lr!, {s13}
 8027978:	ed3c 7a01 	vldmdb	ip!, {s14}
 802797c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027980:	3401      	adds	r4, #1
 8027982:	455c      	cmp	r4, fp
 8027984:	ddf6      	ble.n	8027974 <__kernel_rem_pio2f+0x90>
 8027986:	ece9 7a01 	vstmia	r9!, {s15}
 802798a:	3601      	adds	r6, #1
 802798c:	3004      	adds	r0, #4
 802798e:	e7d8      	b.n	8027942 <__kernel_rem_pio2f+0x5e>
 8027990:	a908      	add	r1, sp, #32
 8027992:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8027996:	9104      	str	r1, [sp, #16]
 8027998:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802799a:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8027bd8 <__kernel_rem_pio2f+0x2f4>
 802799e:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8027bd4 <__kernel_rem_pio2f+0x2f0>
 80279a2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80279a6:	9203      	str	r2, [sp, #12]
 80279a8:	4654      	mov	r4, sl
 80279aa:	00a2      	lsls	r2, r4, #2
 80279ac:	9205      	str	r2, [sp, #20]
 80279ae:	aa58      	add	r2, sp, #352	@ 0x160
 80279b0:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 80279b4:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 80279b8:	a944      	add	r1, sp, #272	@ 0x110
 80279ba:	aa08      	add	r2, sp, #32
 80279bc:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 80279c0:	4694      	mov	ip, r2
 80279c2:	4626      	mov	r6, r4
 80279c4:	2e00      	cmp	r6, #0
 80279c6:	dc4c      	bgt.n	8027a62 <__kernel_rem_pio2f+0x17e>
 80279c8:	4628      	mov	r0, r5
 80279ca:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80279ce:	f7ff ff23 	bl	8027818 <scalbnf>
 80279d2:	eeb0 8a40 	vmov.f32	s16, s0
 80279d6:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 80279da:	ee28 0a00 	vmul.f32	s0, s16, s0
 80279de:	f000 f9e9 	bl	8027db4 <floorf>
 80279e2:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 80279e6:	eea0 8a67 	vfms.f32	s16, s0, s15
 80279ea:	2d00      	cmp	r5, #0
 80279ec:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80279f0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80279f4:	ee17 9a90 	vmov	r9, s15
 80279f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80279fc:	ee38 8a67 	vsub.f32	s16, s16, s15
 8027a00:	dd41      	ble.n	8027a86 <__kernel_rem_pio2f+0x1a2>
 8027a02:	f104 3cff 	add.w	ip, r4, #4294967295
 8027a06:	a908      	add	r1, sp, #32
 8027a08:	f1c5 0e08 	rsb	lr, r5, #8
 8027a0c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8027a10:	fa46 f00e 	asr.w	r0, r6, lr
 8027a14:	4481      	add	r9, r0
 8027a16:	fa00 f00e 	lsl.w	r0, r0, lr
 8027a1a:	1a36      	subs	r6, r6, r0
 8027a1c:	f1c5 0007 	rsb	r0, r5, #7
 8027a20:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8027a24:	4106      	asrs	r6, r0
 8027a26:	2e00      	cmp	r6, #0
 8027a28:	dd3c      	ble.n	8027aa4 <__kernel_rem_pio2f+0x1c0>
 8027a2a:	f04f 0e00 	mov.w	lr, #0
 8027a2e:	f109 0901 	add.w	r9, r9, #1
 8027a32:	4670      	mov	r0, lr
 8027a34:	4574      	cmp	r4, lr
 8027a36:	dc68      	bgt.n	8027b0a <__kernel_rem_pio2f+0x226>
 8027a38:	2d00      	cmp	r5, #0
 8027a3a:	dd03      	ble.n	8027a44 <__kernel_rem_pio2f+0x160>
 8027a3c:	2d01      	cmp	r5, #1
 8027a3e:	d074      	beq.n	8027b2a <__kernel_rem_pio2f+0x246>
 8027a40:	2d02      	cmp	r5, #2
 8027a42:	d07d      	beq.n	8027b40 <__kernel_rem_pio2f+0x25c>
 8027a44:	2e02      	cmp	r6, #2
 8027a46:	d12d      	bne.n	8027aa4 <__kernel_rem_pio2f+0x1c0>
 8027a48:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8027a4c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8027a50:	b340      	cbz	r0, 8027aa4 <__kernel_rem_pio2f+0x1c0>
 8027a52:	4628      	mov	r0, r5
 8027a54:	9306      	str	r3, [sp, #24]
 8027a56:	f7ff fedf 	bl	8027818 <scalbnf>
 8027a5a:	9b06      	ldr	r3, [sp, #24]
 8027a5c:	ee38 8a40 	vsub.f32	s16, s16, s0
 8027a60:	e020      	b.n	8027aa4 <__kernel_rem_pio2f+0x1c0>
 8027a62:	ee60 7a28 	vmul.f32	s15, s0, s17
 8027a66:	3e01      	subs	r6, #1
 8027a68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027a6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027a70:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8027a74:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027a78:	ecac 0a01 	vstmia	ip!, {s0}
 8027a7c:	ed30 0a01 	vldmdb	r0!, {s0}
 8027a80:	ee37 0a80 	vadd.f32	s0, s15, s0
 8027a84:	e79e      	b.n	80279c4 <__kernel_rem_pio2f+0xe0>
 8027a86:	d105      	bne.n	8027a94 <__kernel_rem_pio2f+0x1b0>
 8027a88:	1e60      	subs	r0, r4, #1
 8027a8a:	a908      	add	r1, sp, #32
 8027a8c:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8027a90:	11f6      	asrs	r6, r6, #7
 8027a92:	e7c8      	b.n	8027a26 <__kernel_rem_pio2f+0x142>
 8027a94:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8027a98:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8027a9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027aa0:	da31      	bge.n	8027b06 <__kernel_rem_pio2f+0x222>
 8027aa2:	2600      	movs	r6, #0
 8027aa4:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8027aa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027aac:	f040 8098 	bne.w	8027be0 <__kernel_rem_pio2f+0x2fc>
 8027ab0:	1e60      	subs	r0, r4, #1
 8027ab2:	2200      	movs	r2, #0
 8027ab4:	4550      	cmp	r0, sl
 8027ab6:	da4b      	bge.n	8027b50 <__kernel_rem_pio2f+0x26c>
 8027ab8:	2a00      	cmp	r2, #0
 8027aba:	d065      	beq.n	8027b88 <__kernel_rem_pio2f+0x2a4>
 8027abc:	3c01      	subs	r4, #1
 8027abe:	ab08      	add	r3, sp, #32
 8027ac0:	3d08      	subs	r5, #8
 8027ac2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8027ac6:	2b00      	cmp	r3, #0
 8027ac8:	d0f8      	beq.n	8027abc <__kernel_rem_pio2f+0x1d8>
 8027aca:	4628      	mov	r0, r5
 8027acc:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8027ad0:	f7ff fea2 	bl	8027818 <scalbnf>
 8027ad4:	1c63      	adds	r3, r4, #1
 8027ad6:	aa44      	add	r2, sp, #272	@ 0x110
 8027ad8:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8027bd8 <__kernel_rem_pio2f+0x2f4>
 8027adc:	0099      	lsls	r1, r3, #2
 8027ade:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8027ae2:	4623      	mov	r3, r4
 8027ae4:	2b00      	cmp	r3, #0
 8027ae6:	f280 80a9 	bge.w	8027c3c <__kernel_rem_pio2f+0x358>
 8027aea:	4623      	mov	r3, r4
 8027aec:	2b00      	cmp	r3, #0
 8027aee:	f2c0 80c7 	blt.w	8027c80 <__kernel_rem_pio2f+0x39c>
 8027af2:	aa44      	add	r2, sp, #272	@ 0x110
 8027af4:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8027af8:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8027bd0 <__kernel_rem_pio2f+0x2ec>
 8027afc:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8027bdc <__kernel_rem_pio2f+0x2f8>
 8027b00:	2000      	movs	r0, #0
 8027b02:	1ae2      	subs	r2, r4, r3
 8027b04:	e0b1      	b.n	8027c6a <__kernel_rem_pio2f+0x386>
 8027b06:	2602      	movs	r6, #2
 8027b08:	e78f      	b.n	8027a2a <__kernel_rem_pio2f+0x146>
 8027b0a:	f852 1b04 	ldr.w	r1, [r2], #4
 8027b0e:	b948      	cbnz	r0, 8027b24 <__kernel_rem_pio2f+0x240>
 8027b10:	b121      	cbz	r1, 8027b1c <__kernel_rem_pio2f+0x238>
 8027b12:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8027b16:	f842 1c04 	str.w	r1, [r2, #-4]
 8027b1a:	2101      	movs	r1, #1
 8027b1c:	f10e 0e01 	add.w	lr, lr, #1
 8027b20:	4608      	mov	r0, r1
 8027b22:	e787      	b.n	8027a34 <__kernel_rem_pio2f+0x150>
 8027b24:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8027b28:	e7f5      	b.n	8027b16 <__kernel_rem_pio2f+0x232>
 8027b2a:	f104 3cff 	add.w	ip, r4, #4294967295
 8027b2e:	aa08      	add	r2, sp, #32
 8027b30:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8027b34:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8027b38:	a908      	add	r1, sp, #32
 8027b3a:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8027b3e:	e781      	b.n	8027a44 <__kernel_rem_pio2f+0x160>
 8027b40:	f104 3cff 	add.w	ip, r4, #4294967295
 8027b44:	aa08      	add	r2, sp, #32
 8027b46:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8027b4a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8027b4e:	e7f3      	b.n	8027b38 <__kernel_rem_pio2f+0x254>
 8027b50:	a908      	add	r1, sp, #32
 8027b52:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8027b56:	3801      	subs	r0, #1
 8027b58:	430a      	orrs	r2, r1
 8027b5a:	e7ab      	b.n	8027ab4 <__kernel_rem_pio2f+0x1d0>
 8027b5c:	3201      	adds	r2, #1
 8027b5e:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8027b62:	2e00      	cmp	r6, #0
 8027b64:	d0fa      	beq.n	8027b5c <__kernel_rem_pio2f+0x278>
 8027b66:	9905      	ldr	r1, [sp, #20]
 8027b68:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8027b6c:	eb0d 0001 	add.w	r0, sp, r1
 8027b70:	18e6      	adds	r6, r4, r3
 8027b72:	a91c      	add	r1, sp, #112	@ 0x70
 8027b74:	f104 0c01 	add.w	ip, r4, #1
 8027b78:	384c      	subs	r0, #76	@ 0x4c
 8027b7a:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8027b7e:	4422      	add	r2, r4
 8027b80:	4562      	cmp	r2, ip
 8027b82:	da04      	bge.n	8027b8e <__kernel_rem_pio2f+0x2aa>
 8027b84:	4614      	mov	r4, r2
 8027b86:	e710      	b.n	80279aa <__kernel_rem_pio2f+0xc6>
 8027b88:	9804      	ldr	r0, [sp, #16]
 8027b8a:	2201      	movs	r2, #1
 8027b8c:	e7e7      	b.n	8027b5e <__kernel_rem_pio2f+0x27a>
 8027b8e:	9903      	ldr	r1, [sp, #12]
 8027b90:	f8dd e004 	ldr.w	lr, [sp, #4]
 8027b94:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8027b98:	9105      	str	r1, [sp, #20]
 8027b9a:	ee07 1a90 	vmov	s15, r1
 8027b9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027ba2:	2400      	movs	r4, #0
 8027ba4:	ece6 7a01 	vstmia	r6!, {s15}
 8027ba8:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8027bdc <__kernel_rem_pio2f+0x2f8>
 8027bac:	46b1      	mov	r9, r6
 8027bae:	455c      	cmp	r4, fp
 8027bb0:	dd04      	ble.n	8027bbc <__kernel_rem_pio2f+0x2d8>
 8027bb2:	ece0 7a01 	vstmia	r0!, {s15}
 8027bb6:	f10c 0c01 	add.w	ip, ip, #1
 8027bba:	e7e1      	b.n	8027b80 <__kernel_rem_pio2f+0x29c>
 8027bbc:	ecfe 6a01 	vldmia	lr!, {s13}
 8027bc0:	ed39 7a01 	vldmdb	r9!, {s14}
 8027bc4:	3401      	adds	r4, #1
 8027bc6:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027bca:	e7f0      	b.n	8027bae <__kernel_rem_pio2f+0x2ca>
 8027bcc:	0802bc98 	.word	0x0802bc98
 8027bd0:	0802bc6c 	.word	0x0802bc6c
 8027bd4:	43800000 	.word	0x43800000
 8027bd8:	3b800000 	.word	0x3b800000
 8027bdc:	00000000 	.word	0x00000000
 8027be0:	9b02      	ldr	r3, [sp, #8]
 8027be2:	eeb0 0a48 	vmov.f32	s0, s16
 8027be6:	eba3 0008 	sub.w	r0, r3, r8
 8027bea:	f7ff fe15 	bl	8027818 <scalbnf>
 8027bee:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8027bd4 <__kernel_rem_pio2f+0x2f0>
 8027bf2:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8027bf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027bfa:	db19      	blt.n	8027c30 <__kernel_rem_pio2f+0x34c>
 8027bfc:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8027bd8 <__kernel_rem_pio2f+0x2f4>
 8027c00:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027c04:	aa08      	add	r2, sp, #32
 8027c06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027c0a:	3508      	adds	r5, #8
 8027c0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027c10:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8027c14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027c18:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027c1c:	ee10 3a10 	vmov	r3, s0
 8027c20:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8027c24:	ee17 3a90 	vmov	r3, s15
 8027c28:	3401      	adds	r4, #1
 8027c2a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8027c2e:	e74c      	b.n	8027aca <__kernel_rem_pio2f+0x1e6>
 8027c30:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027c34:	aa08      	add	r2, sp, #32
 8027c36:	ee10 3a10 	vmov	r3, s0
 8027c3a:	e7f6      	b.n	8027c2a <__kernel_rem_pio2f+0x346>
 8027c3c:	a808      	add	r0, sp, #32
 8027c3e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8027c42:	9001      	str	r0, [sp, #4]
 8027c44:	ee07 0a90 	vmov	s15, r0
 8027c48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027c4c:	3b01      	subs	r3, #1
 8027c4e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027c52:	ee20 0a07 	vmul.f32	s0, s0, s14
 8027c56:	ed62 7a01 	vstmdb	r2!, {s15}
 8027c5a:	e743      	b.n	8027ae4 <__kernel_rem_pio2f+0x200>
 8027c5c:	ecfc 6a01 	vldmia	ip!, {s13}
 8027c60:	ecb5 7a01 	vldmia	r5!, {s14}
 8027c64:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027c68:	3001      	adds	r0, #1
 8027c6a:	4550      	cmp	r0, sl
 8027c6c:	dc01      	bgt.n	8027c72 <__kernel_rem_pio2f+0x38e>
 8027c6e:	4290      	cmp	r0, r2
 8027c70:	ddf4      	ble.n	8027c5c <__kernel_rem_pio2f+0x378>
 8027c72:	a858      	add	r0, sp, #352	@ 0x160
 8027c74:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8027c78:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8027c7c:	3b01      	subs	r3, #1
 8027c7e:	e735      	b.n	8027aec <__kernel_rem_pio2f+0x208>
 8027c80:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8027c82:	2b02      	cmp	r3, #2
 8027c84:	dc09      	bgt.n	8027c9a <__kernel_rem_pio2f+0x3b6>
 8027c86:	2b00      	cmp	r3, #0
 8027c88:	dc27      	bgt.n	8027cda <__kernel_rem_pio2f+0x3f6>
 8027c8a:	d040      	beq.n	8027d0e <__kernel_rem_pio2f+0x42a>
 8027c8c:	f009 0007 	and.w	r0, r9, #7
 8027c90:	b059      	add	sp, #356	@ 0x164
 8027c92:	ecbd 8b04 	vpop	{d8-d9}
 8027c96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027c9a:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8027c9c:	2b03      	cmp	r3, #3
 8027c9e:	d1f5      	bne.n	8027c8c <__kernel_rem_pio2f+0x3a8>
 8027ca0:	aa30      	add	r2, sp, #192	@ 0xc0
 8027ca2:	1f0b      	subs	r3, r1, #4
 8027ca4:	4413      	add	r3, r2
 8027ca6:	461a      	mov	r2, r3
 8027ca8:	4620      	mov	r0, r4
 8027caa:	2800      	cmp	r0, #0
 8027cac:	dc50      	bgt.n	8027d50 <__kernel_rem_pio2f+0x46c>
 8027cae:	4622      	mov	r2, r4
 8027cb0:	2a01      	cmp	r2, #1
 8027cb2:	dc5d      	bgt.n	8027d70 <__kernel_rem_pio2f+0x48c>
 8027cb4:	ab30      	add	r3, sp, #192	@ 0xc0
 8027cb6:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8027bdc <__kernel_rem_pio2f+0x2f8>
 8027cba:	440b      	add	r3, r1
 8027cbc:	2c01      	cmp	r4, #1
 8027cbe:	dc67      	bgt.n	8027d90 <__kernel_rem_pio2f+0x4ac>
 8027cc0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8027cc4:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8027cc8:	2e00      	cmp	r6, #0
 8027cca:	d167      	bne.n	8027d9c <__kernel_rem_pio2f+0x4b8>
 8027ccc:	edc7 6a00 	vstr	s13, [r7]
 8027cd0:	ed87 7a01 	vstr	s14, [r7, #4]
 8027cd4:	edc7 7a02 	vstr	s15, [r7, #8]
 8027cd8:	e7d8      	b.n	8027c8c <__kernel_rem_pio2f+0x3a8>
 8027cda:	ab30      	add	r3, sp, #192	@ 0xc0
 8027cdc:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8027bdc <__kernel_rem_pio2f+0x2f8>
 8027ce0:	440b      	add	r3, r1
 8027ce2:	4622      	mov	r2, r4
 8027ce4:	2a00      	cmp	r2, #0
 8027ce6:	da24      	bge.n	8027d32 <__kernel_rem_pio2f+0x44e>
 8027ce8:	b34e      	cbz	r6, 8027d3e <__kernel_rem_pio2f+0x45a>
 8027cea:	eef1 7a47 	vneg.f32	s15, s14
 8027cee:	edc7 7a00 	vstr	s15, [r7]
 8027cf2:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8027cf6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027cfa:	aa31      	add	r2, sp, #196	@ 0xc4
 8027cfc:	2301      	movs	r3, #1
 8027cfe:	429c      	cmp	r4, r3
 8027d00:	da20      	bge.n	8027d44 <__kernel_rem_pio2f+0x460>
 8027d02:	b10e      	cbz	r6, 8027d08 <__kernel_rem_pio2f+0x424>
 8027d04:	eef1 7a67 	vneg.f32	s15, s15
 8027d08:	edc7 7a01 	vstr	s15, [r7, #4]
 8027d0c:	e7be      	b.n	8027c8c <__kernel_rem_pio2f+0x3a8>
 8027d0e:	ab30      	add	r3, sp, #192	@ 0xc0
 8027d10:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8027bdc <__kernel_rem_pio2f+0x2f8>
 8027d14:	440b      	add	r3, r1
 8027d16:	2c00      	cmp	r4, #0
 8027d18:	da05      	bge.n	8027d26 <__kernel_rem_pio2f+0x442>
 8027d1a:	b10e      	cbz	r6, 8027d20 <__kernel_rem_pio2f+0x43c>
 8027d1c:	eef1 7a67 	vneg.f32	s15, s15
 8027d20:	edc7 7a00 	vstr	s15, [r7]
 8027d24:	e7b2      	b.n	8027c8c <__kernel_rem_pio2f+0x3a8>
 8027d26:	ed33 7a01 	vldmdb	r3!, {s14}
 8027d2a:	3c01      	subs	r4, #1
 8027d2c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027d30:	e7f1      	b.n	8027d16 <__kernel_rem_pio2f+0x432>
 8027d32:	ed73 7a01 	vldmdb	r3!, {s15}
 8027d36:	3a01      	subs	r2, #1
 8027d38:	ee37 7a27 	vadd.f32	s14, s14, s15
 8027d3c:	e7d2      	b.n	8027ce4 <__kernel_rem_pio2f+0x400>
 8027d3e:	eef0 7a47 	vmov.f32	s15, s14
 8027d42:	e7d4      	b.n	8027cee <__kernel_rem_pio2f+0x40a>
 8027d44:	ecb2 7a01 	vldmia	r2!, {s14}
 8027d48:	3301      	adds	r3, #1
 8027d4a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027d4e:	e7d6      	b.n	8027cfe <__kernel_rem_pio2f+0x41a>
 8027d50:	ed72 7a01 	vldmdb	r2!, {s15}
 8027d54:	edd2 6a01 	vldr	s13, [r2, #4]
 8027d58:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027d5c:	3801      	subs	r0, #1
 8027d5e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027d62:	ed82 7a00 	vstr	s14, [r2]
 8027d66:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027d6a:	edc2 7a01 	vstr	s15, [r2, #4]
 8027d6e:	e79c      	b.n	8027caa <__kernel_rem_pio2f+0x3c6>
 8027d70:	ed73 7a01 	vldmdb	r3!, {s15}
 8027d74:	edd3 6a01 	vldr	s13, [r3, #4]
 8027d78:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027d7c:	3a01      	subs	r2, #1
 8027d7e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027d82:	ed83 7a00 	vstr	s14, [r3]
 8027d86:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027d8a:	edc3 7a01 	vstr	s15, [r3, #4]
 8027d8e:	e78f      	b.n	8027cb0 <__kernel_rem_pio2f+0x3cc>
 8027d90:	ed33 7a01 	vldmdb	r3!, {s14}
 8027d94:	3c01      	subs	r4, #1
 8027d96:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027d9a:	e78f      	b.n	8027cbc <__kernel_rem_pio2f+0x3d8>
 8027d9c:	eef1 6a66 	vneg.f32	s13, s13
 8027da0:	eeb1 7a47 	vneg.f32	s14, s14
 8027da4:	edc7 6a00 	vstr	s13, [r7]
 8027da8:	ed87 7a01 	vstr	s14, [r7, #4]
 8027dac:	eef1 7a67 	vneg.f32	s15, s15
 8027db0:	e790      	b.n	8027cd4 <__kernel_rem_pio2f+0x3f0>
 8027db2:	bf00      	nop

08027db4 <floorf>:
 8027db4:	ee10 3a10 	vmov	r3, s0
 8027db8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027dbc:	3a7f      	subs	r2, #127	@ 0x7f
 8027dbe:	2a16      	cmp	r2, #22
 8027dc0:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8027dc4:	dc2b      	bgt.n	8027e1e <floorf+0x6a>
 8027dc6:	2a00      	cmp	r2, #0
 8027dc8:	da12      	bge.n	8027df0 <floorf+0x3c>
 8027dca:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8027e30 <floorf+0x7c>
 8027dce:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027dd2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027dd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027dda:	dd06      	ble.n	8027dea <floorf+0x36>
 8027ddc:	2b00      	cmp	r3, #0
 8027dde:	da24      	bge.n	8027e2a <floorf+0x76>
 8027de0:	2900      	cmp	r1, #0
 8027de2:	4b14      	ldr	r3, [pc, #80]	@ (8027e34 <floorf+0x80>)
 8027de4:	bf08      	it	eq
 8027de6:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8027dea:	ee00 3a10 	vmov	s0, r3
 8027dee:	4770      	bx	lr
 8027df0:	4911      	ldr	r1, [pc, #68]	@ (8027e38 <floorf+0x84>)
 8027df2:	4111      	asrs	r1, r2
 8027df4:	420b      	tst	r3, r1
 8027df6:	d0fa      	beq.n	8027dee <floorf+0x3a>
 8027df8:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8027e30 <floorf+0x7c>
 8027dfc:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027e00:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027e04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e08:	ddef      	ble.n	8027dea <floorf+0x36>
 8027e0a:	2b00      	cmp	r3, #0
 8027e0c:	bfbe      	ittt	lt
 8027e0e:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8027e12:	fa40 f202 	asrlt.w	r2, r0, r2
 8027e16:	189b      	addlt	r3, r3, r2
 8027e18:	ea23 0301 	bic.w	r3, r3, r1
 8027e1c:	e7e5      	b.n	8027dea <floorf+0x36>
 8027e1e:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8027e22:	d3e4      	bcc.n	8027dee <floorf+0x3a>
 8027e24:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027e28:	4770      	bx	lr
 8027e2a:	2300      	movs	r3, #0
 8027e2c:	e7dd      	b.n	8027dea <floorf+0x36>
 8027e2e:	bf00      	nop
 8027e30:	7149f2ca 	.word	0x7149f2ca
 8027e34:	bf800000 	.word	0xbf800000
 8027e38:	007fffff 	.word	0x007fffff

08027e3c <abort>:
 8027e3c:	b508      	push	{r3, lr}
 8027e3e:	2006      	movs	r0, #6
 8027e40:	f000 fa4e 	bl	80282e0 <raise>
 8027e44:	2001      	movs	r0, #1
 8027e46:	f7da fadf 	bl	8002408 <_exit>
	...

08027e4c <__assert_func>:
 8027e4c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8027e4e:	4614      	mov	r4, r2
 8027e50:	461a      	mov	r2, r3
 8027e52:	4b09      	ldr	r3, [pc, #36]	@ (8027e78 <__assert_func+0x2c>)
 8027e54:	681b      	ldr	r3, [r3, #0]
 8027e56:	4605      	mov	r5, r0
 8027e58:	68d8      	ldr	r0, [r3, #12]
 8027e5a:	b14c      	cbz	r4, 8027e70 <__assert_func+0x24>
 8027e5c:	4b07      	ldr	r3, [pc, #28]	@ (8027e7c <__assert_func+0x30>)
 8027e5e:	9100      	str	r1, [sp, #0]
 8027e60:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8027e64:	4906      	ldr	r1, [pc, #24]	@ (8027e80 <__assert_func+0x34>)
 8027e66:	462b      	mov	r3, r5
 8027e68:	f000 f984 	bl	8028174 <fiprintf>
 8027e6c:	f7ff ffe6 	bl	8027e3c <abort>
 8027e70:	4b04      	ldr	r3, [pc, #16]	@ (8027e84 <__assert_func+0x38>)
 8027e72:	461c      	mov	r4, r3
 8027e74:	e7f3      	b.n	8027e5e <__assert_func+0x12>
 8027e76:	bf00      	nop
 8027e78:	20000110 	.word	0x20000110
 8027e7c:	0802a198 	.word	0x0802a198
 8027e80:	0802a1a5 	.word	0x0802a1a5
 8027e84:	0802a15b 	.word	0x0802a15b

08027e88 <atexit>:
 8027e88:	2300      	movs	r3, #0
 8027e8a:	4601      	mov	r1, r0
 8027e8c:	461a      	mov	r2, r3
 8027e8e:	4618      	mov	r0, r3
 8027e90:	f000 bad4 	b.w	802843c <__register_exitproc>

08027e94 <malloc>:
 8027e94:	4b02      	ldr	r3, [pc, #8]	@ (8027ea0 <malloc+0xc>)
 8027e96:	4601      	mov	r1, r0
 8027e98:	6818      	ldr	r0, [r3, #0]
 8027e9a:	f000 b82d 	b.w	8027ef8 <_malloc_r>
 8027e9e:	bf00      	nop
 8027ea0:	20000110 	.word	0x20000110

08027ea4 <free>:
 8027ea4:	4b02      	ldr	r3, [pc, #8]	@ (8027eb0 <free+0xc>)
 8027ea6:	4601      	mov	r1, r0
 8027ea8:	6818      	ldr	r0, [r3, #0]
 8027eaa:	f000 bb23 	b.w	80284f4 <_free_r>
 8027eae:	bf00      	nop
 8027eb0:	20000110 	.word	0x20000110

08027eb4 <sbrk_aligned>:
 8027eb4:	b570      	push	{r4, r5, r6, lr}
 8027eb6:	4e0f      	ldr	r6, [pc, #60]	@ (8027ef4 <sbrk_aligned+0x40>)
 8027eb8:	460c      	mov	r4, r1
 8027eba:	6831      	ldr	r1, [r6, #0]
 8027ebc:	4605      	mov	r5, r0
 8027ebe:	b911      	cbnz	r1, 8027ec6 <sbrk_aligned+0x12>
 8027ec0:	f000 fa5e 	bl	8028380 <_sbrk_r>
 8027ec4:	6030      	str	r0, [r6, #0]
 8027ec6:	4621      	mov	r1, r4
 8027ec8:	4628      	mov	r0, r5
 8027eca:	f000 fa59 	bl	8028380 <_sbrk_r>
 8027ece:	1c43      	adds	r3, r0, #1
 8027ed0:	d103      	bne.n	8027eda <sbrk_aligned+0x26>
 8027ed2:	f04f 34ff 	mov.w	r4, #4294967295
 8027ed6:	4620      	mov	r0, r4
 8027ed8:	bd70      	pop	{r4, r5, r6, pc}
 8027eda:	1cc4      	adds	r4, r0, #3
 8027edc:	f024 0403 	bic.w	r4, r4, #3
 8027ee0:	42a0      	cmp	r0, r4
 8027ee2:	d0f8      	beq.n	8027ed6 <sbrk_aligned+0x22>
 8027ee4:	1a21      	subs	r1, r4, r0
 8027ee6:	4628      	mov	r0, r5
 8027ee8:	f000 fa4a 	bl	8028380 <_sbrk_r>
 8027eec:	3001      	adds	r0, #1
 8027eee:	d1f2      	bne.n	8027ed6 <sbrk_aligned+0x22>
 8027ef0:	e7ef      	b.n	8027ed2 <sbrk_aligned+0x1e>
 8027ef2:	bf00      	nop
 8027ef4:	200149bc 	.word	0x200149bc

08027ef8 <_malloc_r>:
 8027ef8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027efc:	1ccd      	adds	r5, r1, #3
 8027efe:	f025 0503 	bic.w	r5, r5, #3
 8027f02:	3508      	adds	r5, #8
 8027f04:	2d0c      	cmp	r5, #12
 8027f06:	bf38      	it	cc
 8027f08:	250c      	movcc	r5, #12
 8027f0a:	2d00      	cmp	r5, #0
 8027f0c:	4606      	mov	r6, r0
 8027f0e:	db01      	blt.n	8027f14 <_malloc_r+0x1c>
 8027f10:	42a9      	cmp	r1, r5
 8027f12:	d904      	bls.n	8027f1e <_malloc_r+0x26>
 8027f14:	230c      	movs	r3, #12
 8027f16:	6033      	str	r3, [r6, #0]
 8027f18:	2000      	movs	r0, #0
 8027f1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027f1e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8027ff4 <_malloc_r+0xfc>
 8027f22:	f000 f869 	bl	8027ff8 <__malloc_lock>
 8027f26:	f8d8 3000 	ldr.w	r3, [r8]
 8027f2a:	461c      	mov	r4, r3
 8027f2c:	bb44      	cbnz	r4, 8027f80 <_malloc_r+0x88>
 8027f2e:	4629      	mov	r1, r5
 8027f30:	4630      	mov	r0, r6
 8027f32:	f7ff ffbf 	bl	8027eb4 <sbrk_aligned>
 8027f36:	1c43      	adds	r3, r0, #1
 8027f38:	4604      	mov	r4, r0
 8027f3a:	d158      	bne.n	8027fee <_malloc_r+0xf6>
 8027f3c:	f8d8 4000 	ldr.w	r4, [r8]
 8027f40:	4627      	mov	r7, r4
 8027f42:	2f00      	cmp	r7, #0
 8027f44:	d143      	bne.n	8027fce <_malloc_r+0xd6>
 8027f46:	2c00      	cmp	r4, #0
 8027f48:	d04b      	beq.n	8027fe2 <_malloc_r+0xea>
 8027f4a:	6823      	ldr	r3, [r4, #0]
 8027f4c:	4639      	mov	r1, r7
 8027f4e:	4630      	mov	r0, r6
 8027f50:	eb04 0903 	add.w	r9, r4, r3
 8027f54:	f000 fa14 	bl	8028380 <_sbrk_r>
 8027f58:	4581      	cmp	r9, r0
 8027f5a:	d142      	bne.n	8027fe2 <_malloc_r+0xea>
 8027f5c:	6821      	ldr	r1, [r4, #0]
 8027f5e:	1a6d      	subs	r5, r5, r1
 8027f60:	4629      	mov	r1, r5
 8027f62:	4630      	mov	r0, r6
 8027f64:	f7ff ffa6 	bl	8027eb4 <sbrk_aligned>
 8027f68:	3001      	adds	r0, #1
 8027f6a:	d03a      	beq.n	8027fe2 <_malloc_r+0xea>
 8027f6c:	6823      	ldr	r3, [r4, #0]
 8027f6e:	442b      	add	r3, r5
 8027f70:	6023      	str	r3, [r4, #0]
 8027f72:	f8d8 3000 	ldr.w	r3, [r8]
 8027f76:	685a      	ldr	r2, [r3, #4]
 8027f78:	bb62      	cbnz	r2, 8027fd4 <_malloc_r+0xdc>
 8027f7a:	f8c8 7000 	str.w	r7, [r8]
 8027f7e:	e00f      	b.n	8027fa0 <_malloc_r+0xa8>
 8027f80:	6822      	ldr	r2, [r4, #0]
 8027f82:	1b52      	subs	r2, r2, r5
 8027f84:	d420      	bmi.n	8027fc8 <_malloc_r+0xd0>
 8027f86:	2a0b      	cmp	r2, #11
 8027f88:	d917      	bls.n	8027fba <_malloc_r+0xc2>
 8027f8a:	1961      	adds	r1, r4, r5
 8027f8c:	42a3      	cmp	r3, r4
 8027f8e:	6025      	str	r5, [r4, #0]
 8027f90:	bf18      	it	ne
 8027f92:	6059      	strne	r1, [r3, #4]
 8027f94:	6863      	ldr	r3, [r4, #4]
 8027f96:	bf08      	it	eq
 8027f98:	f8c8 1000 	streq.w	r1, [r8]
 8027f9c:	5162      	str	r2, [r4, r5]
 8027f9e:	604b      	str	r3, [r1, #4]
 8027fa0:	4630      	mov	r0, r6
 8027fa2:	f000 f82f 	bl	8028004 <__malloc_unlock>
 8027fa6:	f104 000b 	add.w	r0, r4, #11
 8027faa:	1d23      	adds	r3, r4, #4
 8027fac:	f020 0007 	bic.w	r0, r0, #7
 8027fb0:	1ac2      	subs	r2, r0, r3
 8027fb2:	bf1c      	itt	ne
 8027fb4:	1a1b      	subne	r3, r3, r0
 8027fb6:	50a3      	strne	r3, [r4, r2]
 8027fb8:	e7af      	b.n	8027f1a <_malloc_r+0x22>
 8027fba:	6862      	ldr	r2, [r4, #4]
 8027fbc:	42a3      	cmp	r3, r4
 8027fbe:	bf0c      	ite	eq
 8027fc0:	f8c8 2000 	streq.w	r2, [r8]
 8027fc4:	605a      	strne	r2, [r3, #4]
 8027fc6:	e7eb      	b.n	8027fa0 <_malloc_r+0xa8>
 8027fc8:	4623      	mov	r3, r4
 8027fca:	6864      	ldr	r4, [r4, #4]
 8027fcc:	e7ae      	b.n	8027f2c <_malloc_r+0x34>
 8027fce:	463c      	mov	r4, r7
 8027fd0:	687f      	ldr	r7, [r7, #4]
 8027fd2:	e7b6      	b.n	8027f42 <_malloc_r+0x4a>
 8027fd4:	461a      	mov	r2, r3
 8027fd6:	685b      	ldr	r3, [r3, #4]
 8027fd8:	42a3      	cmp	r3, r4
 8027fda:	d1fb      	bne.n	8027fd4 <_malloc_r+0xdc>
 8027fdc:	2300      	movs	r3, #0
 8027fde:	6053      	str	r3, [r2, #4]
 8027fe0:	e7de      	b.n	8027fa0 <_malloc_r+0xa8>
 8027fe2:	230c      	movs	r3, #12
 8027fe4:	6033      	str	r3, [r6, #0]
 8027fe6:	4630      	mov	r0, r6
 8027fe8:	f000 f80c 	bl	8028004 <__malloc_unlock>
 8027fec:	e794      	b.n	8027f18 <_malloc_r+0x20>
 8027fee:	6005      	str	r5, [r0, #0]
 8027ff0:	e7d6      	b.n	8027fa0 <_malloc_r+0xa8>
 8027ff2:	bf00      	nop
 8027ff4:	200149c0 	.word	0x200149c0

08027ff8 <__malloc_lock>:
 8027ff8:	4801      	ldr	r0, [pc, #4]	@ (8028000 <__malloc_lock+0x8>)
 8027ffa:	f000 ba0e 	b.w	802841a <__retarget_lock_acquire_recursive>
 8027ffe:	bf00      	nop
 8028000:	20014b04 	.word	0x20014b04

08028004 <__malloc_unlock>:
 8028004:	4801      	ldr	r0, [pc, #4]	@ (802800c <__malloc_unlock+0x8>)
 8028006:	f000 ba09 	b.w	802841c <__retarget_lock_release_recursive>
 802800a:	bf00      	nop
 802800c:	20014b04 	.word	0x20014b04

08028010 <__cxa_atexit>:
 8028010:	b510      	push	{r4, lr}
 8028012:	4604      	mov	r4, r0
 8028014:	4804      	ldr	r0, [pc, #16]	@ (8028028 <__cxa_atexit+0x18>)
 8028016:	4613      	mov	r3, r2
 8028018:	b120      	cbz	r0, 8028024 <__cxa_atexit+0x14>
 802801a:	460a      	mov	r2, r1
 802801c:	2002      	movs	r0, #2
 802801e:	4621      	mov	r1, r4
 8028020:	f000 fa0c 	bl	802843c <__register_exitproc>
 8028024:	bd10      	pop	{r4, pc}
 8028026:	bf00      	nop
 8028028:	0802843d 	.word	0x0802843d

0802802c <std>:
 802802c:	2300      	movs	r3, #0
 802802e:	b510      	push	{r4, lr}
 8028030:	4604      	mov	r4, r0
 8028032:	e9c0 3300 	strd	r3, r3, [r0]
 8028036:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802803a:	6083      	str	r3, [r0, #8]
 802803c:	8181      	strh	r1, [r0, #12]
 802803e:	6643      	str	r3, [r0, #100]	@ 0x64
 8028040:	81c2      	strh	r2, [r0, #14]
 8028042:	6183      	str	r3, [r0, #24]
 8028044:	4619      	mov	r1, r3
 8028046:	2208      	movs	r2, #8
 8028048:	305c      	adds	r0, #92	@ 0x5c
 802804a:	f000 f918 	bl	802827e <memset>
 802804e:	4b0d      	ldr	r3, [pc, #52]	@ (8028084 <std+0x58>)
 8028050:	6263      	str	r3, [r4, #36]	@ 0x24
 8028052:	4b0d      	ldr	r3, [pc, #52]	@ (8028088 <std+0x5c>)
 8028054:	62a3      	str	r3, [r4, #40]	@ 0x28
 8028056:	4b0d      	ldr	r3, [pc, #52]	@ (802808c <std+0x60>)
 8028058:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802805a:	4b0d      	ldr	r3, [pc, #52]	@ (8028090 <std+0x64>)
 802805c:	6323      	str	r3, [r4, #48]	@ 0x30
 802805e:	4b0d      	ldr	r3, [pc, #52]	@ (8028094 <std+0x68>)
 8028060:	6224      	str	r4, [r4, #32]
 8028062:	429c      	cmp	r4, r3
 8028064:	d006      	beq.n	8028074 <std+0x48>
 8028066:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802806a:	4294      	cmp	r4, r2
 802806c:	d002      	beq.n	8028074 <std+0x48>
 802806e:	33d0      	adds	r3, #208	@ 0xd0
 8028070:	429c      	cmp	r4, r3
 8028072:	d105      	bne.n	8028080 <std+0x54>
 8028074:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8028078:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802807c:	f000 b9cc 	b.w	8028418 <__retarget_lock_init_recursive>
 8028080:	bd10      	pop	{r4, pc}
 8028082:	bf00      	nop
 8028084:	080281f9 	.word	0x080281f9
 8028088:	0802821b 	.word	0x0802821b
 802808c:	08028253 	.word	0x08028253
 8028090:	08028277 	.word	0x08028277
 8028094:	200149c4 	.word	0x200149c4

08028098 <stdio_exit_handler>:
 8028098:	4a02      	ldr	r2, [pc, #8]	@ (80280a4 <stdio_exit_handler+0xc>)
 802809a:	4903      	ldr	r1, [pc, #12]	@ (80280a8 <stdio_exit_handler+0x10>)
 802809c:	4803      	ldr	r0, [pc, #12]	@ (80280ac <stdio_exit_handler+0x14>)
 802809e:	f000 b87b 	b.w	8028198 <_fwalk_sglue>
 80280a2:	bf00      	nop
 80280a4:	20000104 	.word	0x20000104
 80280a8:	08028c2d 	.word	0x08028c2d
 80280ac:	20000114 	.word	0x20000114

080280b0 <cleanup_stdio>:
 80280b0:	6841      	ldr	r1, [r0, #4]
 80280b2:	4b0c      	ldr	r3, [pc, #48]	@ (80280e4 <cleanup_stdio+0x34>)
 80280b4:	4299      	cmp	r1, r3
 80280b6:	b510      	push	{r4, lr}
 80280b8:	4604      	mov	r4, r0
 80280ba:	d001      	beq.n	80280c0 <cleanup_stdio+0x10>
 80280bc:	f000 fdb6 	bl	8028c2c <_fflush_r>
 80280c0:	68a1      	ldr	r1, [r4, #8]
 80280c2:	4b09      	ldr	r3, [pc, #36]	@ (80280e8 <cleanup_stdio+0x38>)
 80280c4:	4299      	cmp	r1, r3
 80280c6:	d002      	beq.n	80280ce <cleanup_stdio+0x1e>
 80280c8:	4620      	mov	r0, r4
 80280ca:	f000 fdaf 	bl	8028c2c <_fflush_r>
 80280ce:	68e1      	ldr	r1, [r4, #12]
 80280d0:	4b06      	ldr	r3, [pc, #24]	@ (80280ec <cleanup_stdio+0x3c>)
 80280d2:	4299      	cmp	r1, r3
 80280d4:	d004      	beq.n	80280e0 <cleanup_stdio+0x30>
 80280d6:	4620      	mov	r0, r4
 80280d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80280dc:	f000 bda6 	b.w	8028c2c <_fflush_r>
 80280e0:	bd10      	pop	{r4, pc}
 80280e2:	bf00      	nop
 80280e4:	200149c4 	.word	0x200149c4
 80280e8:	20014a2c 	.word	0x20014a2c
 80280ec:	20014a94 	.word	0x20014a94

080280f0 <global_stdio_init.part.0>:
 80280f0:	b510      	push	{r4, lr}
 80280f2:	4b0b      	ldr	r3, [pc, #44]	@ (8028120 <global_stdio_init.part.0+0x30>)
 80280f4:	4c0b      	ldr	r4, [pc, #44]	@ (8028124 <global_stdio_init.part.0+0x34>)
 80280f6:	4a0c      	ldr	r2, [pc, #48]	@ (8028128 <global_stdio_init.part.0+0x38>)
 80280f8:	601a      	str	r2, [r3, #0]
 80280fa:	4620      	mov	r0, r4
 80280fc:	2200      	movs	r2, #0
 80280fe:	2104      	movs	r1, #4
 8028100:	f7ff ff94 	bl	802802c <std>
 8028104:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8028108:	2201      	movs	r2, #1
 802810a:	2109      	movs	r1, #9
 802810c:	f7ff ff8e 	bl	802802c <std>
 8028110:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8028114:	2202      	movs	r2, #2
 8028116:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802811a:	2112      	movs	r1, #18
 802811c:	f7ff bf86 	b.w	802802c <std>
 8028120:	20014afc 	.word	0x20014afc
 8028124:	200149c4 	.word	0x200149c4
 8028128:	08028099 	.word	0x08028099

0802812c <__sfp_lock_acquire>:
 802812c:	4801      	ldr	r0, [pc, #4]	@ (8028134 <__sfp_lock_acquire+0x8>)
 802812e:	f000 b974 	b.w	802841a <__retarget_lock_acquire_recursive>
 8028132:	bf00      	nop
 8028134:	20014b06 	.word	0x20014b06

08028138 <__sfp_lock_release>:
 8028138:	4801      	ldr	r0, [pc, #4]	@ (8028140 <__sfp_lock_release+0x8>)
 802813a:	f000 b96f 	b.w	802841c <__retarget_lock_release_recursive>
 802813e:	bf00      	nop
 8028140:	20014b06 	.word	0x20014b06

08028144 <__sinit>:
 8028144:	b510      	push	{r4, lr}
 8028146:	4604      	mov	r4, r0
 8028148:	f7ff fff0 	bl	802812c <__sfp_lock_acquire>
 802814c:	6a23      	ldr	r3, [r4, #32]
 802814e:	b11b      	cbz	r3, 8028158 <__sinit+0x14>
 8028150:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028154:	f7ff bff0 	b.w	8028138 <__sfp_lock_release>
 8028158:	4b04      	ldr	r3, [pc, #16]	@ (802816c <__sinit+0x28>)
 802815a:	6223      	str	r3, [r4, #32]
 802815c:	4b04      	ldr	r3, [pc, #16]	@ (8028170 <__sinit+0x2c>)
 802815e:	681b      	ldr	r3, [r3, #0]
 8028160:	2b00      	cmp	r3, #0
 8028162:	d1f5      	bne.n	8028150 <__sinit+0xc>
 8028164:	f7ff ffc4 	bl	80280f0 <global_stdio_init.part.0>
 8028168:	e7f2      	b.n	8028150 <__sinit+0xc>
 802816a:	bf00      	nop
 802816c:	080280b1 	.word	0x080280b1
 8028170:	20014afc 	.word	0x20014afc

08028174 <fiprintf>:
 8028174:	b40e      	push	{r1, r2, r3}
 8028176:	b503      	push	{r0, r1, lr}
 8028178:	4601      	mov	r1, r0
 802817a:	ab03      	add	r3, sp, #12
 802817c:	4805      	ldr	r0, [pc, #20]	@ (8028194 <fiprintf+0x20>)
 802817e:	f853 2b04 	ldr.w	r2, [r3], #4
 8028182:	6800      	ldr	r0, [r0, #0]
 8028184:	9301      	str	r3, [sp, #4]
 8028186:	f000 fa29 	bl	80285dc <_vfiprintf_r>
 802818a:	b002      	add	sp, #8
 802818c:	f85d eb04 	ldr.w	lr, [sp], #4
 8028190:	b003      	add	sp, #12
 8028192:	4770      	bx	lr
 8028194:	20000110 	.word	0x20000110

08028198 <_fwalk_sglue>:
 8028198:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802819c:	4607      	mov	r7, r0
 802819e:	4688      	mov	r8, r1
 80281a0:	4614      	mov	r4, r2
 80281a2:	2600      	movs	r6, #0
 80281a4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80281a8:	f1b9 0901 	subs.w	r9, r9, #1
 80281ac:	d505      	bpl.n	80281ba <_fwalk_sglue+0x22>
 80281ae:	6824      	ldr	r4, [r4, #0]
 80281b0:	2c00      	cmp	r4, #0
 80281b2:	d1f7      	bne.n	80281a4 <_fwalk_sglue+0xc>
 80281b4:	4630      	mov	r0, r6
 80281b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80281ba:	89ab      	ldrh	r3, [r5, #12]
 80281bc:	2b01      	cmp	r3, #1
 80281be:	d907      	bls.n	80281d0 <_fwalk_sglue+0x38>
 80281c0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80281c4:	3301      	adds	r3, #1
 80281c6:	d003      	beq.n	80281d0 <_fwalk_sglue+0x38>
 80281c8:	4629      	mov	r1, r5
 80281ca:	4638      	mov	r0, r7
 80281cc:	47c0      	blx	r8
 80281ce:	4306      	orrs	r6, r0
 80281d0:	3568      	adds	r5, #104	@ 0x68
 80281d2:	e7e9      	b.n	80281a8 <_fwalk_sglue+0x10>

080281d4 <iprintf>:
 80281d4:	b40f      	push	{r0, r1, r2, r3}
 80281d6:	b507      	push	{r0, r1, r2, lr}
 80281d8:	4906      	ldr	r1, [pc, #24]	@ (80281f4 <iprintf+0x20>)
 80281da:	ab04      	add	r3, sp, #16
 80281dc:	6808      	ldr	r0, [r1, #0]
 80281de:	f853 2b04 	ldr.w	r2, [r3], #4
 80281e2:	6881      	ldr	r1, [r0, #8]
 80281e4:	9301      	str	r3, [sp, #4]
 80281e6:	f000 f9f9 	bl	80285dc <_vfiprintf_r>
 80281ea:	b003      	add	sp, #12
 80281ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80281f0:	b004      	add	sp, #16
 80281f2:	4770      	bx	lr
 80281f4:	20000110 	.word	0x20000110

080281f8 <__sread>:
 80281f8:	b510      	push	{r4, lr}
 80281fa:	460c      	mov	r4, r1
 80281fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028200:	f000 f898 	bl	8028334 <_read_r>
 8028204:	2800      	cmp	r0, #0
 8028206:	bfab      	itete	ge
 8028208:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802820a:	89a3      	ldrhlt	r3, [r4, #12]
 802820c:	181b      	addge	r3, r3, r0
 802820e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8028212:	bfac      	ite	ge
 8028214:	6563      	strge	r3, [r4, #84]	@ 0x54
 8028216:	81a3      	strhlt	r3, [r4, #12]
 8028218:	bd10      	pop	{r4, pc}

0802821a <__swrite>:
 802821a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802821e:	461f      	mov	r7, r3
 8028220:	898b      	ldrh	r3, [r1, #12]
 8028222:	05db      	lsls	r3, r3, #23
 8028224:	4605      	mov	r5, r0
 8028226:	460c      	mov	r4, r1
 8028228:	4616      	mov	r6, r2
 802822a:	d505      	bpl.n	8028238 <__swrite+0x1e>
 802822c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028230:	2302      	movs	r3, #2
 8028232:	2200      	movs	r2, #0
 8028234:	f000 f86c 	bl	8028310 <_lseek_r>
 8028238:	89a3      	ldrh	r3, [r4, #12]
 802823a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802823e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8028242:	81a3      	strh	r3, [r4, #12]
 8028244:	4632      	mov	r2, r6
 8028246:	463b      	mov	r3, r7
 8028248:	4628      	mov	r0, r5
 802824a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802824e:	f000 b8a7 	b.w	80283a0 <_write_r>

08028252 <__sseek>:
 8028252:	b510      	push	{r4, lr}
 8028254:	460c      	mov	r4, r1
 8028256:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802825a:	f000 f859 	bl	8028310 <_lseek_r>
 802825e:	1c43      	adds	r3, r0, #1
 8028260:	89a3      	ldrh	r3, [r4, #12]
 8028262:	bf15      	itete	ne
 8028264:	6560      	strne	r0, [r4, #84]	@ 0x54
 8028266:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802826a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802826e:	81a3      	strheq	r3, [r4, #12]
 8028270:	bf18      	it	ne
 8028272:	81a3      	strhne	r3, [r4, #12]
 8028274:	bd10      	pop	{r4, pc}

08028276 <__sclose>:
 8028276:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802827a:	f000 b839 	b.w	80282f0 <_close_r>

0802827e <memset>:
 802827e:	4402      	add	r2, r0
 8028280:	4603      	mov	r3, r0
 8028282:	4293      	cmp	r3, r2
 8028284:	d100      	bne.n	8028288 <memset+0xa>
 8028286:	4770      	bx	lr
 8028288:	f803 1b01 	strb.w	r1, [r3], #1
 802828c:	e7f9      	b.n	8028282 <memset+0x4>

0802828e <_raise_r>:
 802828e:	291f      	cmp	r1, #31
 8028290:	b538      	push	{r3, r4, r5, lr}
 8028292:	4605      	mov	r5, r0
 8028294:	460c      	mov	r4, r1
 8028296:	d904      	bls.n	80282a2 <_raise_r+0x14>
 8028298:	2316      	movs	r3, #22
 802829a:	6003      	str	r3, [r0, #0]
 802829c:	f04f 30ff 	mov.w	r0, #4294967295
 80282a0:	bd38      	pop	{r3, r4, r5, pc}
 80282a2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80282a4:	b112      	cbz	r2, 80282ac <_raise_r+0x1e>
 80282a6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80282aa:	b94b      	cbnz	r3, 80282c0 <_raise_r+0x32>
 80282ac:	4628      	mov	r0, r5
 80282ae:	f000 f865 	bl	802837c <_getpid_r>
 80282b2:	4622      	mov	r2, r4
 80282b4:	4601      	mov	r1, r0
 80282b6:	4628      	mov	r0, r5
 80282b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80282bc:	f000 b84c 	b.w	8028358 <_kill_r>
 80282c0:	2b01      	cmp	r3, #1
 80282c2:	d00a      	beq.n	80282da <_raise_r+0x4c>
 80282c4:	1c59      	adds	r1, r3, #1
 80282c6:	d103      	bne.n	80282d0 <_raise_r+0x42>
 80282c8:	2316      	movs	r3, #22
 80282ca:	6003      	str	r3, [r0, #0]
 80282cc:	2001      	movs	r0, #1
 80282ce:	e7e7      	b.n	80282a0 <_raise_r+0x12>
 80282d0:	2100      	movs	r1, #0
 80282d2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80282d6:	4620      	mov	r0, r4
 80282d8:	4798      	blx	r3
 80282da:	2000      	movs	r0, #0
 80282dc:	e7e0      	b.n	80282a0 <_raise_r+0x12>
	...

080282e0 <raise>:
 80282e0:	4b02      	ldr	r3, [pc, #8]	@ (80282ec <raise+0xc>)
 80282e2:	4601      	mov	r1, r0
 80282e4:	6818      	ldr	r0, [r3, #0]
 80282e6:	f7ff bfd2 	b.w	802828e <_raise_r>
 80282ea:	bf00      	nop
 80282ec:	20000110 	.word	0x20000110

080282f0 <_close_r>:
 80282f0:	b538      	push	{r3, r4, r5, lr}
 80282f2:	4d06      	ldr	r5, [pc, #24]	@ (802830c <_close_r+0x1c>)
 80282f4:	2300      	movs	r3, #0
 80282f6:	4604      	mov	r4, r0
 80282f8:	4608      	mov	r0, r1
 80282fa:	602b      	str	r3, [r5, #0]
 80282fc:	f7da f898 	bl	8002430 <_close>
 8028300:	1c43      	adds	r3, r0, #1
 8028302:	d102      	bne.n	802830a <_close_r+0x1a>
 8028304:	682b      	ldr	r3, [r5, #0]
 8028306:	b103      	cbz	r3, 802830a <_close_r+0x1a>
 8028308:	6023      	str	r3, [r4, #0]
 802830a:	bd38      	pop	{r3, r4, r5, pc}
 802830c:	20014b00 	.word	0x20014b00

08028310 <_lseek_r>:
 8028310:	b538      	push	{r3, r4, r5, lr}
 8028312:	4d07      	ldr	r5, [pc, #28]	@ (8028330 <_lseek_r+0x20>)
 8028314:	4604      	mov	r4, r0
 8028316:	4608      	mov	r0, r1
 8028318:	4611      	mov	r1, r2
 802831a:	2200      	movs	r2, #0
 802831c:	602a      	str	r2, [r5, #0]
 802831e:	461a      	mov	r2, r3
 8028320:	f7da f890 	bl	8002444 <_lseek>
 8028324:	1c43      	adds	r3, r0, #1
 8028326:	d102      	bne.n	802832e <_lseek_r+0x1e>
 8028328:	682b      	ldr	r3, [r5, #0]
 802832a:	b103      	cbz	r3, 802832e <_lseek_r+0x1e>
 802832c:	6023      	str	r3, [r4, #0]
 802832e:	bd38      	pop	{r3, r4, r5, pc}
 8028330:	20014b00 	.word	0x20014b00

08028334 <_read_r>:
 8028334:	b538      	push	{r3, r4, r5, lr}
 8028336:	4d07      	ldr	r5, [pc, #28]	@ (8028354 <_read_r+0x20>)
 8028338:	4604      	mov	r4, r0
 802833a:	4608      	mov	r0, r1
 802833c:	4611      	mov	r1, r2
 802833e:	2200      	movs	r2, #0
 8028340:	602a      	str	r2, [r5, #0]
 8028342:	461a      	mov	r2, r3
 8028344:	f7da f866 	bl	8002414 <_read>
 8028348:	1c43      	adds	r3, r0, #1
 802834a:	d102      	bne.n	8028352 <_read_r+0x1e>
 802834c:	682b      	ldr	r3, [r5, #0]
 802834e:	b103      	cbz	r3, 8028352 <_read_r+0x1e>
 8028350:	6023      	str	r3, [r4, #0]
 8028352:	bd38      	pop	{r3, r4, r5, pc}
 8028354:	20014b00 	.word	0x20014b00

08028358 <_kill_r>:
 8028358:	b538      	push	{r3, r4, r5, lr}
 802835a:	4d07      	ldr	r5, [pc, #28]	@ (8028378 <_kill_r+0x20>)
 802835c:	2300      	movs	r3, #0
 802835e:	4604      	mov	r4, r0
 8028360:	4608      	mov	r0, r1
 8028362:	4611      	mov	r1, r2
 8028364:	602b      	str	r3, [r5, #0]
 8028366:	f7da f847 	bl	80023f8 <_kill>
 802836a:	1c43      	adds	r3, r0, #1
 802836c:	d102      	bne.n	8028374 <_kill_r+0x1c>
 802836e:	682b      	ldr	r3, [r5, #0]
 8028370:	b103      	cbz	r3, 8028374 <_kill_r+0x1c>
 8028372:	6023      	str	r3, [r4, #0]
 8028374:	bd38      	pop	{r3, r4, r5, pc}
 8028376:	bf00      	nop
 8028378:	20014b00 	.word	0x20014b00

0802837c <_getpid_r>:
 802837c:	f7da b83a 	b.w	80023f4 <_getpid>

08028380 <_sbrk_r>:
 8028380:	b538      	push	{r3, r4, r5, lr}
 8028382:	4d06      	ldr	r5, [pc, #24]	@ (802839c <_sbrk_r+0x1c>)
 8028384:	2300      	movs	r3, #0
 8028386:	4604      	mov	r4, r0
 8028388:	4608      	mov	r0, r1
 802838a:	602b      	str	r3, [r5, #0]
 802838c:	f7da f868 	bl	8002460 <_sbrk>
 8028390:	1c43      	adds	r3, r0, #1
 8028392:	d102      	bne.n	802839a <_sbrk_r+0x1a>
 8028394:	682b      	ldr	r3, [r5, #0]
 8028396:	b103      	cbz	r3, 802839a <_sbrk_r+0x1a>
 8028398:	6023      	str	r3, [r4, #0]
 802839a:	bd38      	pop	{r3, r4, r5, pc}
 802839c:	20014b00 	.word	0x20014b00

080283a0 <_write_r>:
 80283a0:	b538      	push	{r3, r4, r5, lr}
 80283a2:	4d07      	ldr	r5, [pc, #28]	@ (80283c0 <_write_r+0x20>)
 80283a4:	4604      	mov	r4, r0
 80283a6:	4608      	mov	r0, r1
 80283a8:	4611      	mov	r1, r2
 80283aa:	2200      	movs	r2, #0
 80283ac:	602a      	str	r2, [r5, #0]
 80283ae:	461a      	mov	r2, r3
 80283b0:	f7da f84a 	bl	8002448 <_write>
 80283b4:	1c43      	adds	r3, r0, #1
 80283b6:	d102      	bne.n	80283be <_write_r+0x1e>
 80283b8:	682b      	ldr	r3, [r5, #0]
 80283ba:	b103      	cbz	r3, 80283be <_write_r+0x1e>
 80283bc:	6023      	str	r3, [r4, #0]
 80283be:	bd38      	pop	{r3, r4, r5, pc}
 80283c0:	20014b00 	.word	0x20014b00

080283c4 <__errno>:
 80283c4:	4b01      	ldr	r3, [pc, #4]	@ (80283cc <__errno+0x8>)
 80283c6:	6818      	ldr	r0, [r3, #0]
 80283c8:	4770      	bx	lr
 80283ca:	bf00      	nop
 80283cc:	20000110 	.word	0x20000110

080283d0 <__libc_init_array>:
 80283d0:	b570      	push	{r4, r5, r6, lr}
 80283d2:	4d0d      	ldr	r5, [pc, #52]	@ (8028408 <__libc_init_array+0x38>)
 80283d4:	4c0d      	ldr	r4, [pc, #52]	@ (802840c <__libc_init_array+0x3c>)
 80283d6:	1b64      	subs	r4, r4, r5
 80283d8:	10a4      	asrs	r4, r4, #2
 80283da:	2600      	movs	r6, #0
 80283dc:	42a6      	cmp	r6, r4
 80283de:	d109      	bne.n	80283f4 <__libc_init_array+0x24>
 80283e0:	4d0b      	ldr	r5, [pc, #44]	@ (8028410 <__libc_init_array+0x40>)
 80283e2:	4c0c      	ldr	r4, [pc, #48]	@ (8028414 <__libc_init_array+0x44>)
 80283e4:	f000 fd62 	bl	8028eac <_init>
 80283e8:	1b64      	subs	r4, r4, r5
 80283ea:	10a4      	asrs	r4, r4, #2
 80283ec:	2600      	movs	r6, #0
 80283ee:	42a6      	cmp	r6, r4
 80283f0:	d105      	bne.n	80283fe <__libc_init_array+0x2e>
 80283f2:	bd70      	pop	{r4, r5, r6, pc}
 80283f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80283f8:	4798      	blx	r3
 80283fa:	3601      	adds	r6, #1
 80283fc:	e7ee      	b.n	80283dc <__libc_init_array+0xc>
 80283fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8028402:	4798      	blx	r3
 8028404:	3601      	adds	r6, #1
 8028406:	e7f2      	b.n	80283ee <__libc_init_array+0x1e>
 8028408:	0804bcb8 	.word	0x0804bcb8
 802840c:	0804bcb8 	.word	0x0804bcb8
 8028410:	0804bcb8 	.word	0x0804bcb8
 8028414:	0804bccc 	.word	0x0804bccc

08028418 <__retarget_lock_init_recursive>:
 8028418:	4770      	bx	lr

0802841a <__retarget_lock_acquire_recursive>:
 802841a:	4770      	bx	lr

0802841c <__retarget_lock_release_recursive>:
 802841c:	4770      	bx	lr

0802841e <memcpy>:
 802841e:	440a      	add	r2, r1
 8028420:	4291      	cmp	r1, r2
 8028422:	f100 33ff 	add.w	r3, r0, #4294967295
 8028426:	d100      	bne.n	802842a <memcpy+0xc>
 8028428:	4770      	bx	lr
 802842a:	b510      	push	{r4, lr}
 802842c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8028430:	f803 4f01 	strb.w	r4, [r3, #1]!
 8028434:	4291      	cmp	r1, r2
 8028436:	d1f9      	bne.n	802842c <memcpy+0xe>
 8028438:	bd10      	pop	{r4, pc}
	...

0802843c <__register_exitproc>:
 802843c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8028440:	4d27      	ldr	r5, [pc, #156]	@ (80284e0 <__register_exitproc+0xa4>)
 8028442:	4607      	mov	r7, r0
 8028444:	6828      	ldr	r0, [r5, #0]
 8028446:	4691      	mov	r9, r2
 8028448:	460e      	mov	r6, r1
 802844a:	4698      	mov	r8, r3
 802844c:	f7ff ffe5 	bl	802841a <__retarget_lock_acquire_recursive>
 8028450:	4a24      	ldr	r2, [pc, #144]	@ (80284e4 <__register_exitproc+0xa8>)
 8028452:	6814      	ldr	r4, [r2, #0]
 8028454:	b93c      	cbnz	r4, 8028466 <__register_exitproc+0x2a>
 8028456:	4b24      	ldr	r3, [pc, #144]	@ (80284e8 <__register_exitproc+0xac>)
 8028458:	6013      	str	r3, [r2, #0]
 802845a:	4a24      	ldr	r2, [pc, #144]	@ (80284ec <__register_exitproc+0xb0>)
 802845c:	b112      	cbz	r2, 8028464 <__register_exitproc+0x28>
 802845e:	6812      	ldr	r2, [r2, #0]
 8028460:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8028464:	4c20      	ldr	r4, [pc, #128]	@ (80284e8 <__register_exitproc+0xac>)
 8028466:	6863      	ldr	r3, [r4, #4]
 8028468:	2b1f      	cmp	r3, #31
 802846a:	dd06      	ble.n	802847a <__register_exitproc+0x3e>
 802846c:	6828      	ldr	r0, [r5, #0]
 802846e:	f7ff ffd5 	bl	802841c <__retarget_lock_release_recursive>
 8028472:	f04f 30ff 	mov.w	r0, #4294967295
 8028476:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802847a:	b32f      	cbz	r7, 80284c8 <__register_exitproc+0x8c>
 802847c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8028480:	b968      	cbnz	r0, 802849e <__register_exitproc+0x62>
 8028482:	4b1b      	ldr	r3, [pc, #108]	@ (80284f0 <__register_exitproc+0xb4>)
 8028484:	2b00      	cmp	r3, #0
 8028486:	d0f1      	beq.n	802846c <__register_exitproc+0x30>
 8028488:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802848c:	f7ff fd02 	bl	8027e94 <malloc>
 8028490:	2800      	cmp	r0, #0
 8028492:	d0eb      	beq.n	802846c <__register_exitproc+0x30>
 8028494:	2300      	movs	r3, #0
 8028496:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802849a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802849e:	6863      	ldr	r3, [r4, #4]
 80284a0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80284a4:	2201      	movs	r2, #1
 80284a6:	409a      	lsls	r2, r3
 80284a8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80284ac:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 80284b0:	4313      	orrs	r3, r2
 80284b2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 80284b6:	2f02      	cmp	r7, #2
 80284b8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 80284bc:	bf02      	ittt	eq
 80284be:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 80284c2:	4313      	orreq	r3, r2
 80284c4:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 80284c8:	6863      	ldr	r3, [r4, #4]
 80284ca:	6828      	ldr	r0, [r5, #0]
 80284cc:	1c5a      	adds	r2, r3, #1
 80284ce:	3302      	adds	r3, #2
 80284d0:	6062      	str	r2, [r4, #4]
 80284d2:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80284d6:	f7ff ffa1 	bl	802841c <__retarget_lock_release_recursive>
 80284da:	2000      	movs	r0, #0
 80284dc:	e7cb      	b.n	8028476 <__register_exitproc+0x3a>
 80284de:	bf00      	nop
 80284e0:	20000160 	.word	0x20000160
 80284e4:	20014b94 	.word	0x20014b94
 80284e8:	20014b08 	.word	0x20014b08
 80284ec:	0802bca4 	.word	0x0802bca4
 80284f0:	08027e95 	.word	0x08027e95

080284f4 <_free_r>:
 80284f4:	b538      	push	{r3, r4, r5, lr}
 80284f6:	4605      	mov	r5, r0
 80284f8:	2900      	cmp	r1, #0
 80284fa:	d041      	beq.n	8028580 <_free_r+0x8c>
 80284fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8028500:	1f0c      	subs	r4, r1, #4
 8028502:	2b00      	cmp	r3, #0
 8028504:	bfb8      	it	lt
 8028506:	18e4      	addlt	r4, r4, r3
 8028508:	f7ff fd76 	bl	8027ff8 <__malloc_lock>
 802850c:	4a1d      	ldr	r2, [pc, #116]	@ (8028584 <_free_r+0x90>)
 802850e:	6813      	ldr	r3, [r2, #0]
 8028510:	b933      	cbnz	r3, 8028520 <_free_r+0x2c>
 8028512:	6063      	str	r3, [r4, #4]
 8028514:	6014      	str	r4, [r2, #0]
 8028516:	4628      	mov	r0, r5
 8028518:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802851c:	f7ff bd72 	b.w	8028004 <__malloc_unlock>
 8028520:	42a3      	cmp	r3, r4
 8028522:	d908      	bls.n	8028536 <_free_r+0x42>
 8028524:	6820      	ldr	r0, [r4, #0]
 8028526:	1821      	adds	r1, r4, r0
 8028528:	428b      	cmp	r3, r1
 802852a:	bf01      	itttt	eq
 802852c:	6819      	ldreq	r1, [r3, #0]
 802852e:	685b      	ldreq	r3, [r3, #4]
 8028530:	1809      	addeq	r1, r1, r0
 8028532:	6021      	streq	r1, [r4, #0]
 8028534:	e7ed      	b.n	8028512 <_free_r+0x1e>
 8028536:	461a      	mov	r2, r3
 8028538:	685b      	ldr	r3, [r3, #4]
 802853a:	b10b      	cbz	r3, 8028540 <_free_r+0x4c>
 802853c:	42a3      	cmp	r3, r4
 802853e:	d9fa      	bls.n	8028536 <_free_r+0x42>
 8028540:	6811      	ldr	r1, [r2, #0]
 8028542:	1850      	adds	r0, r2, r1
 8028544:	42a0      	cmp	r0, r4
 8028546:	d10b      	bne.n	8028560 <_free_r+0x6c>
 8028548:	6820      	ldr	r0, [r4, #0]
 802854a:	4401      	add	r1, r0
 802854c:	1850      	adds	r0, r2, r1
 802854e:	4283      	cmp	r3, r0
 8028550:	6011      	str	r1, [r2, #0]
 8028552:	d1e0      	bne.n	8028516 <_free_r+0x22>
 8028554:	6818      	ldr	r0, [r3, #0]
 8028556:	685b      	ldr	r3, [r3, #4]
 8028558:	6053      	str	r3, [r2, #4]
 802855a:	4408      	add	r0, r1
 802855c:	6010      	str	r0, [r2, #0]
 802855e:	e7da      	b.n	8028516 <_free_r+0x22>
 8028560:	d902      	bls.n	8028568 <_free_r+0x74>
 8028562:	230c      	movs	r3, #12
 8028564:	602b      	str	r3, [r5, #0]
 8028566:	e7d6      	b.n	8028516 <_free_r+0x22>
 8028568:	6820      	ldr	r0, [r4, #0]
 802856a:	1821      	adds	r1, r4, r0
 802856c:	428b      	cmp	r3, r1
 802856e:	bf04      	itt	eq
 8028570:	6819      	ldreq	r1, [r3, #0]
 8028572:	685b      	ldreq	r3, [r3, #4]
 8028574:	6063      	str	r3, [r4, #4]
 8028576:	bf04      	itt	eq
 8028578:	1809      	addeq	r1, r1, r0
 802857a:	6021      	streq	r1, [r4, #0]
 802857c:	6054      	str	r4, [r2, #4]
 802857e:	e7ca      	b.n	8028516 <_free_r+0x22>
 8028580:	bd38      	pop	{r3, r4, r5, pc}
 8028582:	bf00      	nop
 8028584:	200149c0 	.word	0x200149c0

08028588 <__sfputc_r>:
 8028588:	6893      	ldr	r3, [r2, #8]
 802858a:	3b01      	subs	r3, #1
 802858c:	2b00      	cmp	r3, #0
 802858e:	b410      	push	{r4}
 8028590:	6093      	str	r3, [r2, #8]
 8028592:	da08      	bge.n	80285a6 <__sfputc_r+0x1e>
 8028594:	6994      	ldr	r4, [r2, #24]
 8028596:	42a3      	cmp	r3, r4
 8028598:	db01      	blt.n	802859e <__sfputc_r+0x16>
 802859a:	290a      	cmp	r1, #10
 802859c:	d103      	bne.n	80285a6 <__sfputc_r+0x1e>
 802859e:	f85d 4b04 	ldr.w	r4, [sp], #4
 80285a2:	f000 bb6b 	b.w	8028c7c <__swbuf_r>
 80285a6:	6813      	ldr	r3, [r2, #0]
 80285a8:	1c58      	adds	r0, r3, #1
 80285aa:	6010      	str	r0, [r2, #0]
 80285ac:	7019      	strb	r1, [r3, #0]
 80285ae:	4608      	mov	r0, r1
 80285b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80285b4:	4770      	bx	lr

080285b6 <__sfputs_r>:
 80285b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80285b8:	4606      	mov	r6, r0
 80285ba:	460f      	mov	r7, r1
 80285bc:	4614      	mov	r4, r2
 80285be:	18d5      	adds	r5, r2, r3
 80285c0:	42ac      	cmp	r4, r5
 80285c2:	d101      	bne.n	80285c8 <__sfputs_r+0x12>
 80285c4:	2000      	movs	r0, #0
 80285c6:	e007      	b.n	80285d8 <__sfputs_r+0x22>
 80285c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80285cc:	463a      	mov	r2, r7
 80285ce:	4630      	mov	r0, r6
 80285d0:	f7ff ffda 	bl	8028588 <__sfputc_r>
 80285d4:	1c43      	adds	r3, r0, #1
 80285d6:	d1f3      	bne.n	80285c0 <__sfputs_r+0xa>
 80285d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080285dc <_vfiprintf_r>:
 80285dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80285e0:	460d      	mov	r5, r1
 80285e2:	b09d      	sub	sp, #116	@ 0x74
 80285e4:	4614      	mov	r4, r2
 80285e6:	4698      	mov	r8, r3
 80285e8:	4606      	mov	r6, r0
 80285ea:	b118      	cbz	r0, 80285f4 <_vfiprintf_r+0x18>
 80285ec:	6a03      	ldr	r3, [r0, #32]
 80285ee:	b90b      	cbnz	r3, 80285f4 <_vfiprintf_r+0x18>
 80285f0:	f7ff fda8 	bl	8028144 <__sinit>
 80285f4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80285f6:	07d9      	lsls	r1, r3, #31
 80285f8:	d405      	bmi.n	8028606 <_vfiprintf_r+0x2a>
 80285fa:	89ab      	ldrh	r3, [r5, #12]
 80285fc:	059a      	lsls	r2, r3, #22
 80285fe:	d402      	bmi.n	8028606 <_vfiprintf_r+0x2a>
 8028600:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8028602:	f7ff ff0a 	bl	802841a <__retarget_lock_acquire_recursive>
 8028606:	89ab      	ldrh	r3, [r5, #12]
 8028608:	071b      	lsls	r3, r3, #28
 802860a:	d501      	bpl.n	8028610 <_vfiprintf_r+0x34>
 802860c:	692b      	ldr	r3, [r5, #16]
 802860e:	b99b      	cbnz	r3, 8028638 <_vfiprintf_r+0x5c>
 8028610:	4629      	mov	r1, r5
 8028612:	4630      	mov	r0, r6
 8028614:	f000 fb70 	bl	8028cf8 <__swsetup_r>
 8028618:	b170      	cbz	r0, 8028638 <_vfiprintf_r+0x5c>
 802861a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802861c:	07dc      	lsls	r4, r3, #31
 802861e:	d504      	bpl.n	802862a <_vfiprintf_r+0x4e>
 8028620:	f04f 30ff 	mov.w	r0, #4294967295
 8028624:	b01d      	add	sp, #116	@ 0x74
 8028626:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802862a:	89ab      	ldrh	r3, [r5, #12]
 802862c:	0598      	lsls	r0, r3, #22
 802862e:	d4f7      	bmi.n	8028620 <_vfiprintf_r+0x44>
 8028630:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8028632:	f7ff fef3 	bl	802841c <__retarget_lock_release_recursive>
 8028636:	e7f3      	b.n	8028620 <_vfiprintf_r+0x44>
 8028638:	2300      	movs	r3, #0
 802863a:	9309      	str	r3, [sp, #36]	@ 0x24
 802863c:	2320      	movs	r3, #32
 802863e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8028642:	f8cd 800c 	str.w	r8, [sp, #12]
 8028646:	2330      	movs	r3, #48	@ 0x30
 8028648:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80287f8 <_vfiprintf_r+0x21c>
 802864c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8028650:	f04f 0901 	mov.w	r9, #1
 8028654:	4623      	mov	r3, r4
 8028656:	469a      	mov	sl, r3
 8028658:	f813 2b01 	ldrb.w	r2, [r3], #1
 802865c:	b10a      	cbz	r2, 8028662 <_vfiprintf_r+0x86>
 802865e:	2a25      	cmp	r2, #37	@ 0x25
 8028660:	d1f9      	bne.n	8028656 <_vfiprintf_r+0x7a>
 8028662:	ebba 0b04 	subs.w	fp, sl, r4
 8028666:	d00b      	beq.n	8028680 <_vfiprintf_r+0xa4>
 8028668:	465b      	mov	r3, fp
 802866a:	4622      	mov	r2, r4
 802866c:	4629      	mov	r1, r5
 802866e:	4630      	mov	r0, r6
 8028670:	f7ff ffa1 	bl	80285b6 <__sfputs_r>
 8028674:	3001      	adds	r0, #1
 8028676:	f000 80a7 	beq.w	80287c8 <_vfiprintf_r+0x1ec>
 802867a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802867c:	445a      	add	r2, fp
 802867e:	9209      	str	r2, [sp, #36]	@ 0x24
 8028680:	f89a 3000 	ldrb.w	r3, [sl]
 8028684:	2b00      	cmp	r3, #0
 8028686:	f000 809f 	beq.w	80287c8 <_vfiprintf_r+0x1ec>
 802868a:	2300      	movs	r3, #0
 802868c:	f04f 32ff 	mov.w	r2, #4294967295
 8028690:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8028694:	f10a 0a01 	add.w	sl, sl, #1
 8028698:	9304      	str	r3, [sp, #16]
 802869a:	9307      	str	r3, [sp, #28]
 802869c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80286a0:	931a      	str	r3, [sp, #104]	@ 0x68
 80286a2:	4654      	mov	r4, sl
 80286a4:	2205      	movs	r2, #5
 80286a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80286aa:	4853      	ldr	r0, [pc, #332]	@ (80287f8 <_vfiprintf_r+0x21c>)
 80286ac:	f7d7 fda0 	bl	80001f0 <memchr>
 80286b0:	9a04      	ldr	r2, [sp, #16]
 80286b2:	b9d8      	cbnz	r0, 80286ec <_vfiprintf_r+0x110>
 80286b4:	06d1      	lsls	r1, r2, #27
 80286b6:	bf44      	itt	mi
 80286b8:	2320      	movmi	r3, #32
 80286ba:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80286be:	0713      	lsls	r3, r2, #28
 80286c0:	bf44      	itt	mi
 80286c2:	232b      	movmi	r3, #43	@ 0x2b
 80286c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80286c8:	f89a 3000 	ldrb.w	r3, [sl]
 80286cc:	2b2a      	cmp	r3, #42	@ 0x2a
 80286ce:	d015      	beq.n	80286fc <_vfiprintf_r+0x120>
 80286d0:	9a07      	ldr	r2, [sp, #28]
 80286d2:	4654      	mov	r4, sl
 80286d4:	2000      	movs	r0, #0
 80286d6:	f04f 0c0a 	mov.w	ip, #10
 80286da:	4621      	mov	r1, r4
 80286dc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80286e0:	3b30      	subs	r3, #48	@ 0x30
 80286e2:	2b09      	cmp	r3, #9
 80286e4:	d94b      	bls.n	802877e <_vfiprintf_r+0x1a2>
 80286e6:	b1b0      	cbz	r0, 8028716 <_vfiprintf_r+0x13a>
 80286e8:	9207      	str	r2, [sp, #28]
 80286ea:	e014      	b.n	8028716 <_vfiprintf_r+0x13a>
 80286ec:	eba0 0308 	sub.w	r3, r0, r8
 80286f0:	fa09 f303 	lsl.w	r3, r9, r3
 80286f4:	4313      	orrs	r3, r2
 80286f6:	9304      	str	r3, [sp, #16]
 80286f8:	46a2      	mov	sl, r4
 80286fa:	e7d2      	b.n	80286a2 <_vfiprintf_r+0xc6>
 80286fc:	9b03      	ldr	r3, [sp, #12]
 80286fe:	1d19      	adds	r1, r3, #4
 8028700:	681b      	ldr	r3, [r3, #0]
 8028702:	9103      	str	r1, [sp, #12]
 8028704:	2b00      	cmp	r3, #0
 8028706:	bfbb      	ittet	lt
 8028708:	425b      	neglt	r3, r3
 802870a:	f042 0202 	orrlt.w	r2, r2, #2
 802870e:	9307      	strge	r3, [sp, #28]
 8028710:	9307      	strlt	r3, [sp, #28]
 8028712:	bfb8      	it	lt
 8028714:	9204      	strlt	r2, [sp, #16]
 8028716:	7823      	ldrb	r3, [r4, #0]
 8028718:	2b2e      	cmp	r3, #46	@ 0x2e
 802871a:	d10a      	bne.n	8028732 <_vfiprintf_r+0x156>
 802871c:	7863      	ldrb	r3, [r4, #1]
 802871e:	2b2a      	cmp	r3, #42	@ 0x2a
 8028720:	d132      	bne.n	8028788 <_vfiprintf_r+0x1ac>
 8028722:	9b03      	ldr	r3, [sp, #12]
 8028724:	1d1a      	adds	r2, r3, #4
 8028726:	681b      	ldr	r3, [r3, #0]
 8028728:	9203      	str	r2, [sp, #12]
 802872a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802872e:	3402      	adds	r4, #2
 8028730:	9305      	str	r3, [sp, #20]
 8028732:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8028808 <_vfiprintf_r+0x22c>
 8028736:	7821      	ldrb	r1, [r4, #0]
 8028738:	2203      	movs	r2, #3
 802873a:	4650      	mov	r0, sl
 802873c:	f7d7 fd58 	bl	80001f0 <memchr>
 8028740:	b138      	cbz	r0, 8028752 <_vfiprintf_r+0x176>
 8028742:	9b04      	ldr	r3, [sp, #16]
 8028744:	eba0 000a 	sub.w	r0, r0, sl
 8028748:	2240      	movs	r2, #64	@ 0x40
 802874a:	4082      	lsls	r2, r0
 802874c:	4313      	orrs	r3, r2
 802874e:	3401      	adds	r4, #1
 8028750:	9304      	str	r3, [sp, #16]
 8028752:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028756:	4829      	ldr	r0, [pc, #164]	@ (80287fc <_vfiprintf_r+0x220>)
 8028758:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802875c:	2206      	movs	r2, #6
 802875e:	f7d7 fd47 	bl	80001f0 <memchr>
 8028762:	2800      	cmp	r0, #0
 8028764:	d03f      	beq.n	80287e6 <_vfiprintf_r+0x20a>
 8028766:	4b26      	ldr	r3, [pc, #152]	@ (8028800 <_vfiprintf_r+0x224>)
 8028768:	bb1b      	cbnz	r3, 80287b2 <_vfiprintf_r+0x1d6>
 802876a:	9b03      	ldr	r3, [sp, #12]
 802876c:	3307      	adds	r3, #7
 802876e:	f023 0307 	bic.w	r3, r3, #7
 8028772:	3308      	adds	r3, #8
 8028774:	9303      	str	r3, [sp, #12]
 8028776:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028778:	443b      	add	r3, r7
 802877a:	9309      	str	r3, [sp, #36]	@ 0x24
 802877c:	e76a      	b.n	8028654 <_vfiprintf_r+0x78>
 802877e:	fb0c 3202 	mla	r2, ip, r2, r3
 8028782:	460c      	mov	r4, r1
 8028784:	2001      	movs	r0, #1
 8028786:	e7a8      	b.n	80286da <_vfiprintf_r+0xfe>
 8028788:	2300      	movs	r3, #0
 802878a:	3401      	adds	r4, #1
 802878c:	9305      	str	r3, [sp, #20]
 802878e:	4619      	mov	r1, r3
 8028790:	f04f 0c0a 	mov.w	ip, #10
 8028794:	4620      	mov	r0, r4
 8028796:	f810 2b01 	ldrb.w	r2, [r0], #1
 802879a:	3a30      	subs	r2, #48	@ 0x30
 802879c:	2a09      	cmp	r2, #9
 802879e:	d903      	bls.n	80287a8 <_vfiprintf_r+0x1cc>
 80287a0:	2b00      	cmp	r3, #0
 80287a2:	d0c6      	beq.n	8028732 <_vfiprintf_r+0x156>
 80287a4:	9105      	str	r1, [sp, #20]
 80287a6:	e7c4      	b.n	8028732 <_vfiprintf_r+0x156>
 80287a8:	fb0c 2101 	mla	r1, ip, r1, r2
 80287ac:	4604      	mov	r4, r0
 80287ae:	2301      	movs	r3, #1
 80287b0:	e7f0      	b.n	8028794 <_vfiprintf_r+0x1b8>
 80287b2:	ab03      	add	r3, sp, #12
 80287b4:	9300      	str	r3, [sp, #0]
 80287b6:	462a      	mov	r2, r5
 80287b8:	4b12      	ldr	r3, [pc, #72]	@ (8028804 <_vfiprintf_r+0x228>)
 80287ba:	a904      	add	r1, sp, #16
 80287bc:	4630      	mov	r0, r6
 80287be:	f3af 8000 	nop.w
 80287c2:	4607      	mov	r7, r0
 80287c4:	1c78      	adds	r0, r7, #1
 80287c6:	d1d6      	bne.n	8028776 <_vfiprintf_r+0x19a>
 80287c8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80287ca:	07d9      	lsls	r1, r3, #31
 80287cc:	d405      	bmi.n	80287da <_vfiprintf_r+0x1fe>
 80287ce:	89ab      	ldrh	r3, [r5, #12]
 80287d0:	059a      	lsls	r2, r3, #22
 80287d2:	d402      	bmi.n	80287da <_vfiprintf_r+0x1fe>
 80287d4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80287d6:	f7ff fe21 	bl	802841c <__retarget_lock_release_recursive>
 80287da:	89ab      	ldrh	r3, [r5, #12]
 80287dc:	065b      	lsls	r3, r3, #25
 80287de:	f53f af1f 	bmi.w	8028620 <_vfiprintf_r+0x44>
 80287e2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80287e4:	e71e      	b.n	8028624 <_vfiprintf_r+0x48>
 80287e6:	ab03      	add	r3, sp, #12
 80287e8:	9300      	str	r3, [sp, #0]
 80287ea:	462a      	mov	r2, r5
 80287ec:	4b05      	ldr	r3, [pc, #20]	@ (8028804 <_vfiprintf_r+0x228>)
 80287ee:	a904      	add	r1, sp, #16
 80287f0:	4630      	mov	r0, r6
 80287f2:	f000 f879 	bl	80288e8 <_printf_i>
 80287f6:	e7e4      	b.n	80287c2 <_vfiprintf_r+0x1e6>
 80287f8:	0802a1d4 	.word	0x0802a1d4
 80287fc:	0802a1de 	.word	0x0802a1de
 8028800:	00000000 	.word	0x00000000
 8028804:	080285b7 	.word	0x080285b7
 8028808:	0802a1da 	.word	0x0802a1da

0802880c <_printf_common>:
 802880c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028810:	4616      	mov	r6, r2
 8028812:	4698      	mov	r8, r3
 8028814:	688a      	ldr	r2, [r1, #8]
 8028816:	690b      	ldr	r3, [r1, #16]
 8028818:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802881c:	4293      	cmp	r3, r2
 802881e:	bfb8      	it	lt
 8028820:	4613      	movlt	r3, r2
 8028822:	6033      	str	r3, [r6, #0]
 8028824:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8028828:	4607      	mov	r7, r0
 802882a:	460c      	mov	r4, r1
 802882c:	b10a      	cbz	r2, 8028832 <_printf_common+0x26>
 802882e:	3301      	adds	r3, #1
 8028830:	6033      	str	r3, [r6, #0]
 8028832:	6823      	ldr	r3, [r4, #0]
 8028834:	0699      	lsls	r1, r3, #26
 8028836:	bf42      	ittt	mi
 8028838:	6833      	ldrmi	r3, [r6, #0]
 802883a:	3302      	addmi	r3, #2
 802883c:	6033      	strmi	r3, [r6, #0]
 802883e:	6825      	ldr	r5, [r4, #0]
 8028840:	f015 0506 	ands.w	r5, r5, #6
 8028844:	d106      	bne.n	8028854 <_printf_common+0x48>
 8028846:	f104 0a19 	add.w	sl, r4, #25
 802884a:	68e3      	ldr	r3, [r4, #12]
 802884c:	6832      	ldr	r2, [r6, #0]
 802884e:	1a9b      	subs	r3, r3, r2
 8028850:	42ab      	cmp	r3, r5
 8028852:	dc26      	bgt.n	80288a2 <_printf_common+0x96>
 8028854:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8028858:	6822      	ldr	r2, [r4, #0]
 802885a:	3b00      	subs	r3, #0
 802885c:	bf18      	it	ne
 802885e:	2301      	movne	r3, #1
 8028860:	0692      	lsls	r2, r2, #26
 8028862:	d42b      	bmi.n	80288bc <_printf_common+0xb0>
 8028864:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8028868:	4641      	mov	r1, r8
 802886a:	4638      	mov	r0, r7
 802886c:	47c8      	blx	r9
 802886e:	3001      	adds	r0, #1
 8028870:	d01e      	beq.n	80288b0 <_printf_common+0xa4>
 8028872:	6823      	ldr	r3, [r4, #0]
 8028874:	6922      	ldr	r2, [r4, #16]
 8028876:	f003 0306 	and.w	r3, r3, #6
 802887a:	2b04      	cmp	r3, #4
 802887c:	bf02      	ittt	eq
 802887e:	68e5      	ldreq	r5, [r4, #12]
 8028880:	6833      	ldreq	r3, [r6, #0]
 8028882:	1aed      	subeq	r5, r5, r3
 8028884:	68a3      	ldr	r3, [r4, #8]
 8028886:	bf0c      	ite	eq
 8028888:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802888c:	2500      	movne	r5, #0
 802888e:	4293      	cmp	r3, r2
 8028890:	bfc4      	itt	gt
 8028892:	1a9b      	subgt	r3, r3, r2
 8028894:	18ed      	addgt	r5, r5, r3
 8028896:	2600      	movs	r6, #0
 8028898:	341a      	adds	r4, #26
 802889a:	42b5      	cmp	r5, r6
 802889c:	d11a      	bne.n	80288d4 <_printf_common+0xc8>
 802889e:	2000      	movs	r0, #0
 80288a0:	e008      	b.n	80288b4 <_printf_common+0xa8>
 80288a2:	2301      	movs	r3, #1
 80288a4:	4652      	mov	r2, sl
 80288a6:	4641      	mov	r1, r8
 80288a8:	4638      	mov	r0, r7
 80288aa:	47c8      	blx	r9
 80288ac:	3001      	adds	r0, #1
 80288ae:	d103      	bne.n	80288b8 <_printf_common+0xac>
 80288b0:	f04f 30ff 	mov.w	r0, #4294967295
 80288b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80288b8:	3501      	adds	r5, #1
 80288ba:	e7c6      	b.n	802884a <_printf_common+0x3e>
 80288bc:	18e1      	adds	r1, r4, r3
 80288be:	1c5a      	adds	r2, r3, #1
 80288c0:	2030      	movs	r0, #48	@ 0x30
 80288c2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80288c6:	4422      	add	r2, r4
 80288c8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80288cc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80288d0:	3302      	adds	r3, #2
 80288d2:	e7c7      	b.n	8028864 <_printf_common+0x58>
 80288d4:	2301      	movs	r3, #1
 80288d6:	4622      	mov	r2, r4
 80288d8:	4641      	mov	r1, r8
 80288da:	4638      	mov	r0, r7
 80288dc:	47c8      	blx	r9
 80288de:	3001      	adds	r0, #1
 80288e0:	d0e6      	beq.n	80288b0 <_printf_common+0xa4>
 80288e2:	3601      	adds	r6, #1
 80288e4:	e7d9      	b.n	802889a <_printf_common+0x8e>
	...

080288e8 <_printf_i>:
 80288e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80288ec:	7e0f      	ldrb	r7, [r1, #24]
 80288ee:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80288f0:	2f78      	cmp	r7, #120	@ 0x78
 80288f2:	4691      	mov	r9, r2
 80288f4:	4680      	mov	r8, r0
 80288f6:	460c      	mov	r4, r1
 80288f8:	469a      	mov	sl, r3
 80288fa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80288fe:	d807      	bhi.n	8028910 <_printf_i+0x28>
 8028900:	2f62      	cmp	r7, #98	@ 0x62
 8028902:	d80a      	bhi.n	802891a <_printf_i+0x32>
 8028904:	2f00      	cmp	r7, #0
 8028906:	f000 80d1 	beq.w	8028aac <_printf_i+0x1c4>
 802890a:	2f58      	cmp	r7, #88	@ 0x58
 802890c:	f000 80b8 	beq.w	8028a80 <_printf_i+0x198>
 8028910:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8028914:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8028918:	e03a      	b.n	8028990 <_printf_i+0xa8>
 802891a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802891e:	2b15      	cmp	r3, #21
 8028920:	d8f6      	bhi.n	8028910 <_printf_i+0x28>
 8028922:	a101      	add	r1, pc, #4	@ (adr r1, 8028928 <_printf_i+0x40>)
 8028924:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8028928:	08028981 	.word	0x08028981
 802892c:	08028995 	.word	0x08028995
 8028930:	08028911 	.word	0x08028911
 8028934:	08028911 	.word	0x08028911
 8028938:	08028911 	.word	0x08028911
 802893c:	08028911 	.word	0x08028911
 8028940:	08028995 	.word	0x08028995
 8028944:	08028911 	.word	0x08028911
 8028948:	08028911 	.word	0x08028911
 802894c:	08028911 	.word	0x08028911
 8028950:	08028911 	.word	0x08028911
 8028954:	08028a93 	.word	0x08028a93
 8028958:	080289bf 	.word	0x080289bf
 802895c:	08028a4d 	.word	0x08028a4d
 8028960:	08028911 	.word	0x08028911
 8028964:	08028911 	.word	0x08028911
 8028968:	08028ab5 	.word	0x08028ab5
 802896c:	08028911 	.word	0x08028911
 8028970:	080289bf 	.word	0x080289bf
 8028974:	08028911 	.word	0x08028911
 8028978:	08028911 	.word	0x08028911
 802897c:	08028a55 	.word	0x08028a55
 8028980:	6833      	ldr	r3, [r6, #0]
 8028982:	1d1a      	adds	r2, r3, #4
 8028984:	681b      	ldr	r3, [r3, #0]
 8028986:	6032      	str	r2, [r6, #0]
 8028988:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802898c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8028990:	2301      	movs	r3, #1
 8028992:	e09c      	b.n	8028ace <_printf_i+0x1e6>
 8028994:	6833      	ldr	r3, [r6, #0]
 8028996:	6820      	ldr	r0, [r4, #0]
 8028998:	1d19      	adds	r1, r3, #4
 802899a:	6031      	str	r1, [r6, #0]
 802899c:	0606      	lsls	r6, r0, #24
 802899e:	d501      	bpl.n	80289a4 <_printf_i+0xbc>
 80289a0:	681d      	ldr	r5, [r3, #0]
 80289a2:	e003      	b.n	80289ac <_printf_i+0xc4>
 80289a4:	0645      	lsls	r5, r0, #25
 80289a6:	d5fb      	bpl.n	80289a0 <_printf_i+0xb8>
 80289a8:	f9b3 5000 	ldrsh.w	r5, [r3]
 80289ac:	2d00      	cmp	r5, #0
 80289ae:	da03      	bge.n	80289b8 <_printf_i+0xd0>
 80289b0:	232d      	movs	r3, #45	@ 0x2d
 80289b2:	426d      	negs	r5, r5
 80289b4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80289b8:	4858      	ldr	r0, [pc, #352]	@ (8028b1c <_printf_i+0x234>)
 80289ba:	230a      	movs	r3, #10
 80289bc:	e011      	b.n	80289e2 <_printf_i+0xfa>
 80289be:	6821      	ldr	r1, [r4, #0]
 80289c0:	6833      	ldr	r3, [r6, #0]
 80289c2:	0608      	lsls	r0, r1, #24
 80289c4:	f853 5b04 	ldr.w	r5, [r3], #4
 80289c8:	d402      	bmi.n	80289d0 <_printf_i+0xe8>
 80289ca:	0649      	lsls	r1, r1, #25
 80289cc:	bf48      	it	mi
 80289ce:	b2ad      	uxthmi	r5, r5
 80289d0:	2f6f      	cmp	r7, #111	@ 0x6f
 80289d2:	4852      	ldr	r0, [pc, #328]	@ (8028b1c <_printf_i+0x234>)
 80289d4:	6033      	str	r3, [r6, #0]
 80289d6:	bf14      	ite	ne
 80289d8:	230a      	movne	r3, #10
 80289da:	2308      	moveq	r3, #8
 80289dc:	2100      	movs	r1, #0
 80289de:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80289e2:	6866      	ldr	r6, [r4, #4]
 80289e4:	60a6      	str	r6, [r4, #8]
 80289e6:	2e00      	cmp	r6, #0
 80289e8:	db05      	blt.n	80289f6 <_printf_i+0x10e>
 80289ea:	6821      	ldr	r1, [r4, #0]
 80289ec:	432e      	orrs	r6, r5
 80289ee:	f021 0104 	bic.w	r1, r1, #4
 80289f2:	6021      	str	r1, [r4, #0]
 80289f4:	d04b      	beq.n	8028a8e <_printf_i+0x1a6>
 80289f6:	4616      	mov	r6, r2
 80289f8:	fbb5 f1f3 	udiv	r1, r5, r3
 80289fc:	fb03 5711 	mls	r7, r3, r1, r5
 8028a00:	5dc7      	ldrb	r7, [r0, r7]
 8028a02:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8028a06:	462f      	mov	r7, r5
 8028a08:	42bb      	cmp	r3, r7
 8028a0a:	460d      	mov	r5, r1
 8028a0c:	d9f4      	bls.n	80289f8 <_printf_i+0x110>
 8028a0e:	2b08      	cmp	r3, #8
 8028a10:	d10b      	bne.n	8028a2a <_printf_i+0x142>
 8028a12:	6823      	ldr	r3, [r4, #0]
 8028a14:	07df      	lsls	r7, r3, #31
 8028a16:	d508      	bpl.n	8028a2a <_printf_i+0x142>
 8028a18:	6923      	ldr	r3, [r4, #16]
 8028a1a:	6861      	ldr	r1, [r4, #4]
 8028a1c:	4299      	cmp	r1, r3
 8028a1e:	bfde      	ittt	le
 8028a20:	2330      	movle	r3, #48	@ 0x30
 8028a22:	f806 3c01 	strble.w	r3, [r6, #-1]
 8028a26:	f106 36ff 	addle.w	r6, r6, #4294967295
 8028a2a:	1b92      	subs	r2, r2, r6
 8028a2c:	6122      	str	r2, [r4, #16]
 8028a2e:	f8cd a000 	str.w	sl, [sp]
 8028a32:	464b      	mov	r3, r9
 8028a34:	aa03      	add	r2, sp, #12
 8028a36:	4621      	mov	r1, r4
 8028a38:	4640      	mov	r0, r8
 8028a3a:	f7ff fee7 	bl	802880c <_printf_common>
 8028a3e:	3001      	adds	r0, #1
 8028a40:	d14a      	bne.n	8028ad8 <_printf_i+0x1f0>
 8028a42:	f04f 30ff 	mov.w	r0, #4294967295
 8028a46:	b004      	add	sp, #16
 8028a48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028a4c:	6823      	ldr	r3, [r4, #0]
 8028a4e:	f043 0320 	orr.w	r3, r3, #32
 8028a52:	6023      	str	r3, [r4, #0]
 8028a54:	4832      	ldr	r0, [pc, #200]	@ (8028b20 <_printf_i+0x238>)
 8028a56:	2778      	movs	r7, #120	@ 0x78
 8028a58:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8028a5c:	6823      	ldr	r3, [r4, #0]
 8028a5e:	6831      	ldr	r1, [r6, #0]
 8028a60:	061f      	lsls	r7, r3, #24
 8028a62:	f851 5b04 	ldr.w	r5, [r1], #4
 8028a66:	d402      	bmi.n	8028a6e <_printf_i+0x186>
 8028a68:	065f      	lsls	r7, r3, #25
 8028a6a:	bf48      	it	mi
 8028a6c:	b2ad      	uxthmi	r5, r5
 8028a6e:	6031      	str	r1, [r6, #0]
 8028a70:	07d9      	lsls	r1, r3, #31
 8028a72:	bf44      	itt	mi
 8028a74:	f043 0320 	orrmi.w	r3, r3, #32
 8028a78:	6023      	strmi	r3, [r4, #0]
 8028a7a:	b11d      	cbz	r5, 8028a84 <_printf_i+0x19c>
 8028a7c:	2310      	movs	r3, #16
 8028a7e:	e7ad      	b.n	80289dc <_printf_i+0xf4>
 8028a80:	4826      	ldr	r0, [pc, #152]	@ (8028b1c <_printf_i+0x234>)
 8028a82:	e7e9      	b.n	8028a58 <_printf_i+0x170>
 8028a84:	6823      	ldr	r3, [r4, #0]
 8028a86:	f023 0320 	bic.w	r3, r3, #32
 8028a8a:	6023      	str	r3, [r4, #0]
 8028a8c:	e7f6      	b.n	8028a7c <_printf_i+0x194>
 8028a8e:	4616      	mov	r6, r2
 8028a90:	e7bd      	b.n	8028a0e <_printf_i+0x126>
 8028a92:	6833      	ldr	r3, [r6, #0]
 8028a94:	6825      	ldr	r5, [r4, #0]
 8028a96:	6961      	ldr	r1, [r4, #20]
 8028a98:	1d18      	adds	r0, r3, #4
 8028a9a:	6030      	str	r0, [r6, #0]
 8028a9c:	062e      	lsls	r6, r5, #24
 8028a9e:	681b      	ldr	r3, [r3, #0]
 8028aa0:	d501      	bpl.n	8028aa6 <_printf_i+0x1be>
 8028aa2:	6019      	str	r1, [r3, #0]
 8028aa4:	e002      	b.n	8028aac <_printf_i+0x1c4>
 8028aa6:	0668      	lsls	r0, r5, #25
 8028aa8:	d5fb      	bpl.n	8028aa2 <_printf_i+0x1ba>
 8028aaa:	8019      	strh	r1, [r3, #0]
 8028aac:	2300      	movs	r3, #0
 8028aae:	6123      	str	r3, [r4, #16]
 8028ab0:	4616      	mov	r6, r2
 8028ab2:	e7bc      	b.n	8028a2e <_printf_i+0x146>
 8028ab4:	6833      	ldr	r3, [r6, #0]
 8028ab6:	1d1a      	adds	r2, r3, #4
 8028ab8:	6032      	str	r2, [r6, #0]
 8028aba:	681e      	ldr	r6, [r3, #0]
 8028abc:	6862      	ldr	r2, [r4, #4]
 8028abe:	2100      	movs	r1, #0
 8028ac0:	4630      	mov	r0, r6
 8028ac2:	f7d7 fb95 	bl	80001f0 <memchr>
 8028ac6:	b108      	cbz	r0, 8028acc <_printf_i+0x1e4>
 8028ac8:	1b80      	subs	r0, r0, r6
 8028aca:	6060      	str	r0, [r4, #4]
 8028acc:	6863      	ldr	r3, [r4, #4]
 8028ace:	6123      	str	r3, [r4, #16]
 8028ad0:	2300      	movs	r3, #0
 8028ad2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8028ad6:	e7aa      	b.n	8028a2e <_printf_i+0x146>
 8028ad8:	6923      	ldr	r3, [r4, #16]
 8028ada:	4632      	mov	r2, r6
 8028adc:	4649      	mov	r1, r9
 8028ade:	4640      	mov	r0, r8
 8028ae0:	47d0      	blx	sl
 8028ae2:	3001      	adds	r0, #1
 8028ae4:	d0ad      	beq.n	8028a42 <_printf_i+0x15a>
 8028ae6:	6823      	ldr	r3, [r4, #0]
 8028ae8:	079b      	lsls	r3, r3, #30
 8028aea:	d413      	bmi.n	8028b14 <_printf_i+0x22c>
 8028aec:	68e0      	ldr	r0, [r4, #12]
 8028aee:	9b03      	ldr	r3, [sp, #12]
 8028af0:	4298      	cmp	r0, r3
 8028af2:	bfb8      	it	lt
 8028af4:	4618      	movlt	r0, r3
 8028af6:	e7a6      	b.n	8028a46 <_printf_i+0x15e>
 8028af8:	2301      	movs	r3, #1
 8028afa:	4632      	mov	r2, r6
 8028afc:	4649      	mov	r1, r9
 8028afe:	4640      	mov	r0, r8
 8028b00:	47d0      	blx	sl
 8028b02:	3001      	adds	r0, #1
 8028b04:	d09d      	beq.n	8028a42 <_printf_i+0x15a>
 8028b06:	3501      	adds	r5, #1
 8028b08:	68e3      	ldr	r3, [r4, #12]
 8028b0a:	9903      	ldr	r1, [sp, #12]
 8028b0c:	1a5b      	subs	r3, r3, r1
 8028b0e:	42ab      	cmp	r3, r5
 8028b10:	dcf2      	bgt.n	8028af8 <_printf_i+0x210>
 8028b12:	e7eb      	b.n	8028aec <_printf_i+0x204>
 8028b14:	2500      	movs	r5, #0
 8028b16:	f104 0619 	add.w	r6, r4, #25
 8028b1a:	e7f5      	b.n	8028b08 <_printf_i+0x220>
 8028b1c:	0802a1e5 	.word	0x0802a1e5
 8028b20:	0802a1f6 	.word	0x0802a1f6

08028b24 <__sflush_r>:
 8028b24:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8028b28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028b2c:	0716      	lsls	r6, r2, #28
 8028b2e:	4605      	mov	r5, r0
 8028b30:	460c      	mov	r4, r1
 8028b32:	d454      	bmi.n	8028bde <__sflush_r+0xba>
 8028b34:	684b      	ldr	r3, [r1, #4]
 8028b36:	2b00      	cmp	r3, #0
 8028b38:	dc02      	bgt.n	8028b40 <__sflush_r+0x1c>
 8028b3a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8028b3c:	2b00      	cmp	r3, #0
 8028b3e:	dd48      	ble.n	8028bd2 <__sflush_r+0xae>
 8028b40:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8028b42:	2e00      	cmp	r6, #0
 8028b44:	d045      	beq.n	8028bd2 <__sflush_r+0xae>
 8028b46:	2300      	movs	r3, #0
 8028b48:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8028b4c:	682f      	ldr	r7, [r5, #0]
 8028b4e:	6a21      	ldr	r1, [r4, #32]
 8028b50:	602b      	str	r3, [r5, #0]
 8028b52:	d030      	beq.n	8028bb6 <__sflush_r+0x92>
 8028b54:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8028b56:	89a3      	ldrh	r3, [r4, #12]
 8028b58:	0759      	lsls	r1, r3, #29
 8028b5a:	d505      	bpl.n	8028b68 <__sflush_r+0x44>
 8028b5c:	6863      	ldr	r3, [r4, #4]
 8028b5e:	1ad2      	subs	r2, r2, r3
 8028b60:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8028b62:	b10b      	cbz	r3, 8028b68 <__sflush_r+0x44>
 8028b64:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8028b66:	1ad2      	subs	r2, r2, r3
 8028b68:	2300      	movs	r3, #0
 8028b6a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8028b6c:	6a21      	ldr	r1, [r4, #32]
 8028b6e:	4628      	mov	r0, r5
 8028b70:	47b0      	blx	r6
 8028b72:	1c43      	adds	r3, r0, #1
 8028b74:	89a3      	ldrh	r3, [r4, #12]
 8028b76:	d106      	bne.n	8028b86 <__sflush_r+0x62>
 8028b78:	6829      	ldr	r1, [r5, #0]
 8028b7a:	291d      	cmp	r1, #29
 8028b7c:	d82b      	bhi.n	8028bd6 <__sflush_r+0xb2>
 8028b7e:	4a2a      	ldr	r2, [pc, #168]	@ (8028c28 <__sflush_r+0x104>)
 8028b80:	40ca      	lsrs	r2, r1
 8028b82:	07d6      	lsls	r6, r2, #31
 8028b84:	d527      	bpl.n	8028bd6 <__sflush_r+0xb2>
 8028b86:	2200      	movs	r2, #0
 8028b88:	6062      	str	r2, [r4, #4]
 8028b8a:	04d9      	lsls	r1, r3, #19
 8028b8c:	6922      	ldr	r2, [r4, #16]
 8028b8e:	6022      	str	r2, [r4, #0]
 8028b90:	d504      	bpl.n	8028b9c <__sflush_r+0x78>
 8028b92:	1c42      	adds	r2, r0, #1
 8028b94:	d101      	bne.n	8028b9a <__sflush_r+0x76>
 8028b96:	682b      	ldr	r3, [r5, #0]
 8028b98:	b903      	cbnz	r3, 8028b9c <__sflush_r+0x78>
 8028b9a:	6560      	str	r0, [r4, #84]	@ 0x54
 8028b9c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8028b9e:	602f      	str	r7, [r5, #0]
 8028ba0:	b1b9      	cbz	r1, 8028bd2 <__sflush_r+0xae>
 8028ba2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8028ba6:	4299      	cmp	r1, r3
 8028ba8:	d002      	beq.n	8028bb0 <__sflush_r+0x8c>
 8028baa:	4628      	mov	r0, r5
 8028bac:	f7ff fca2 	bl	80284f4 <_free_r>
 8028bb0:	2300      	movs	r3, #0
 8028bb2:	6363      	str	r3, [r4, #52]	@ 0x34
 8028bb4:	e00d      	b.n	8028bd2 <__sflush_r+0xae>
 8028bb6:	2301      	movs	r3, #1
 8028bb8:	4628      	mov	r0, r5
 8028bba:	47b0      	blx	r6
 8028bbc:	4602      	mov	r2, r0
 8028bbe:	1c50      	adds	r0, r2, #1
 8028bc0:	d1c9      	bne.n	8028b56 <__sflush_r+0x32>
 8028bc2:	682b      	ldr	r3, [r5, #0]
 8028bc4:	2b00      	cmp	r3, #0
 8028bc6:	d0c6      	beq.n	8028b56 <__sflush_r+0x32>
 8028bc8:	2b1d      	cmp	r3, #29
 8028bca:	d001      	beq.n	8028bd0 <__sflush_r+0xac>
 8028bcc:	2b16      	cmp	r3, #22
 8028bce:	d11e      	bne.n	8028c0e <__sflush_r+0xea>
 8028bd0:	602f      	str	r7, [r5, #0]
 8028bd2:	2000      	movs	r0, #0
 8028bd4:	e022      	b.n	8028c1c <__sflush_r+0xf8>
 8028bd6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8028bda:	b21b      	sxth	r3, r3
 8028bdc:	e01b      	b.n	8028c16 <__sflush_r+0xf2>
 8028bde:	690f      	ldr	r7, [r1, #16]
 8028be0:	2f00      	cmp	r7, #0
 8028be2:	d0f6      	beq.n	8028bd2 <__sflush_r+0xae>
 8028be4:	0793      	lsls	r3, r2, #30
 8028be6:	680e      	ldr	r6, [r1, #0]
 8028be8:	bf08      	it	eq
 8028bea:	694b      	ldreq	r3, [r1, #20]
 8028bec:	600f      	str	r7, [r1, #0]
 8028bee:	bf18      	it	ne
 8028bf0:	2300      	movne	r3, #0
 8028bf2:	eba6 0807 	sub.w	r8, r6, r7
 8028bf6:	608b      	str	r3, [r1, #8]
 8028bf8:	f1b8 0f00 	cmp.w	r8, #0
 8028bfc:	dde9      	ble.n	8028bd2 <__sflush_r+0xae>
 8028bfe:	6a21      	ldr	r1, [r4, #32]
 8028c00:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8028c02:	4643      	mov	r3, r8
 8028c04:	463a      	mov	r2, r7
 8028c06:	4628      	mov	r0, r5
 8028c08:	47b0      	blx	r6
 8028c0a:	2800      	cmp	r0, #0
 8028c0c:	dc08      	bgt.n	8028c20 <__sflush_r+0xfc>
 8028c0e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028c12:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8028c16:	81a3      	strh	r3, [r4, #12]
 8028c18:	f04f 30ff 	mov.w	r0, #4294967295
 8028c1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028c20:	4407      	add	r7, r0
 8028c22:	eba8 0800 	sub.w	r8, r8, r0
 8028c26:	e7e7      	b.n	8028bf8 <__sflush_r+0xd4>
 8028c28:	20400001 	.word	0x20400001

08028c2c <_fflush_r>:
 8028c2c:	b538      	push	{r3, r4, r5, lr}
 8028c2e:	690b      	ldr	r3, [r1, #16]
 8028c30:	4605      	mov	r5, r0
 8028c32:	460c      	mov	r4, r1
 8028c34:	b913      	cbnz	r3, 8028c3c <_fflush_r+0x10>
 8028c36:	2500      	movs	r5, #0
 8028c38:	4628      	mov	r0, r5
 8028c3a:	bd38      	pop	{r3, r4, r5, pc}
 8028c3c:	b118      	cbz	r0, 8028c46 <_fflush_r+0x1a>
 8028c3e:	6a03      	ldr	r3, [r0, #32]
 8028c40:	b90b      	cbnz	r3, 8028c46 <_fflush_r+0x1a>
 8028c42:	f7ff fa7f 	bl	8028144 <__sinit>
 8028c46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028c4a:	2b00      	cmp	r3, #0
 8028c4c:	d0f3      	beq.n	8028c36 <_fflush_r+0xa>
 8028c4e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8028c50:	07d0      	lsls	r0, r2, #31
 8028c52:	d404      	bmi.n	8028c5e <_fflush_r+0x32>
 8028c54:	0599      	lsls	r1, r3, #22
 8028c56:	d402      	bmi.n	8028c5e <_fflush_r+0x32>
 8028c58:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8028c5a:	f7ff fbde 	bl	802841a <__retarget_lock_acquire_recursive>
 8028c5e:	4628      	mov	r0, r5
 8028c60:	4621      	mov	r1, r4
 8028c62:	f7ff ff5f 	bl	8028b24 <__sflush_r>
 8028c66:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8028c68:	07da      	lsls	r2, r3, #31
 8028c6a:	4605      	mov	r5, r0
 8028c6c:	d4e4      	bmi.n	8028c38 <_fflush_r+0xc>
 8028c6e:	89a3      	ldrh	r3, [r4, #12]
 8028c70:	059b      	lsls	r3, r3, #22
 8028c72:	d4e1      	bmi.n	8028c38 <_fflush_r+0xc>
 8028c74:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8028c76:	f7ff fbd1 	bl	802841c <__retarget_lock_release_recursive>
 8028c7a:	e7dd      	b.n	8028c38 <_fflush_r+0xc>

08028c7c <__swbuf_r>:
 8028c7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028c7e:	460e      	mov	r6, r1
 8028c80:	4614      	mov	r4, r2
 8028c82:	4605      	mov	r5, r0
 8028c84:	b118      	cbz	r0, 8028c8e <__swbuf_r+0x12>
 8028c86:	6a03      	ldr	r3, [r0, #32]
 8028c88:	b90b      	cbnz	r3, 8028c8e <__swbuf_r+0x12>
 8028c8a:	f7ff fa5b 	bl	8028144 <__sinit>
 8028c8e:	69a3      	ldr	r3, [r4, #24]
 8028c90:	60a3      	str	r3, [r4, #8]
 8028c92:	89a3      	ldrh	r3, [r4, #12]
 8028c94:	071a      	lsls	r2, r3, #28
 8028c96:	d501      	bpl.n	8028c9c <__swbuf_r+0x20>
 8028c98:	6923      	ldr	r3, [r4, #16]
 8028c9a:	b943      	cbnz	r3, 8028cae <__swbuf_r+0x32>
 8028c9c:	4621      	mov	r1, r4
 8028c9e:	4628      	mov	r0, r5
 8028ca0:	f000 f82a 	bl	8028cf8 <__swsetup_r>
 8028ca4:	b118      	cbz	r0, 8028cae <__swbuf_r+0x32>
 8028ca6:	f04f 37ff 	mov.w	r7, #4294967295
 8028caa:	4638      	mov	r0, r7
 8028cac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028cae:	6823      	ldr	r3, [r4, #0]
 8028cb0:	6922      	ldr	r2, [r4, #16]
 8028cb2:	1a98      	subs	r0, r3, r2
 8028cb4:	6963      	ldr	r3, [r4, #20]
 8028cb6:	b2f6      	uxtb	r6, r6
 8028cb8:	4283      	cmp	r3, r0
 8028cba:	4637      	mov	r7, r6
 8028cbc:	dc05      	bgt.n	8028cca <__swbuf_r+0x4e>
 8028cbe:	4621      	mov	r1, r4
 8028cc0:	4628      	mov	r0, r5
 8028cc2:	f7ff ffb3 	bl	8028c2c <_fflush_r>
 8028cc6:	2800      	cmp	r0, #0
 8028cc8:	d1ed      	bne.n	8028ca6 <__swbuf_r+0x2a>
 8028cca:	68a3      	ldr	r3, [r4, #8]
 8028ccc:	3b01      	subs	r3, #1
 8028cce:	60a3      	str	r3, [r4, #8]
 8028cd0:	6823      	ldr	r3, [r4, #0]
 8028cd2:	1c5a      	adds	r2, r3, #1
 8028cd4:	6022      	str	r2, [r4, #0]
 8028cd6:	701e      	strb	r6, [r3, #0]
 8028cd8:	6962      	ldr	r2, [r4, #20]
 8028cda:	1c43      	adds	r3, r0, #1
 8028cdc:	429a      	cmp	r2, r3
 8028cde:	d004      	beq.n	8028cea <__swbuf_r+0x6e>
 8028ce0:	89a3      	ldrh	r3, [r4, #12]
 8028ce2:	07db      	lsls	r3, r3, #31
 8028ce4:	d5e1      	bpl.n	8028caa <__swbuf_r+0x2e>
 8028ce6:	2e0a      	cmp	r6, #10
 8028ce8:	d1df      	bne.n	8028caa <__swbuf_r+0x2e>
 8028cea:	4621      	mov	r1, r4
 8028cec:	4628      	mov	r0, r5
 8028cee:	f7ff ff9d 	bl	8028c2c <_fflush_r>
 8028cf2:	2800      	cmp	r0, #0
 8028cf4:	d0d9      	beq.n	8028caa <__swbuf_r+0x2e>
 8028cf6:	e7d6      	b.n	8028ca6 <__swbuf_r+0x2a>

08028cf8 <__swsetup_r>:
 8028cf8:	b538      	push	{r3, r4, r5, lr}
 8028cfa:	4b29      	ldr	r3, [pc, #164]	@ (8028da0 <__swsetup_r+0xa8>)
 8028cfc:	4605      	mov	r5, r0
 8028cfe:	6818      	ldr	r0, [r3, #0]
 8028d00:	460c      	mov	r4, r1
 8028d02:	b118      	cbz	r0, 8028d0c <__swsetup_r+0x14>
 8028d04:	6a03      	ldr	r3, [r0, #32]
 8028d06:	b90b      	cbnz	r3, 8028d0c <__swsetup_r+0x14>
 8028d08:	f7ff fa1c 	bl	8028144 <__sinit>
 8028d0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028d10:	0719      	lsls	r1, r3, #28
 8028d12:	d422      	bmi.n	8028d5a <__swsetup_r+0x62>
 8028d14:	06da      	lsls	r2, r3, #27
 8028d16:	d407      	bmi.n	8028d28 <__swsetup_r+0x30>
 8028d18:	2209      	movs	r2, #9
 8028d1a:	602a      	str	r2, [r5, #0]
 8028d1c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8028d20:	81a3      	strh	r3, [r4, #12]
 8028d22:	f04f 30ff 	mov.w	r0, #4294967295
 8028d26:	e033      	b.n	8028d90 <__swsetup_r+0x98>
 8028d28:	0758      	lsls	r0, r3, #29
 8028d2a:	d512      	bpl.n	8028d52 <__swsetup_r+0x5a>
 8028d2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8028d2e:	b141      	cbz	r1, 8028d42 <__swsetup_r+0x4a>
 8028d30:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8028d34:	4299      	cmp	r1, r3
 8028d36:	d002      	beq.n	8028d3e <__swsetup_r+0x46>
 8028d38:	4628      	mov	r0, r5
 8028d3a:	f7ff fbdb 	bl	80284f4 <_free_r>
 8028d3e:	2300      	movs	r3, #0
 8028d40:	6363      	str	r3, [r4, #52]	@ 0x34
 8028d42:	89a3      	ldrh	r3, [r4, #12]
 8028d44:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8028d48:	81a3      	strh	r3, [r4, #12]
 8028d4a:	2300      	movs	r3, #0
 8028d4c:	6063      	str	r3, [r4, #4]
 8028d4e:	6923      	ldr	r3, [r4, #16]
 8028d50:	6023      	str	r3, [r4, #0]
 8028d52:	89a3      	ldrh	r3, [r4, #12]
 8028d54:	f043 0308 	orr.w	r3, r3, #8
 8028d58:	81a3      	strh	r3, [r4, #12]
 8028d5a:	6923      	ldr	r3, [r4, #16]
 8028d5c:	b94b      	cbnz	r3, 8028d72 <__swsetup_r+0x7a>
 8028d5e:	89a3      	ldrh	r3, [r4, #12]
 8028d60:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8028d64:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8028d68:	d003      	beq.n	8028d72 <__swsetup_r+0x7a>
 8028d6a:	4621      	mov	r1, r4
 8028d6c:	4628      	mov	r0, r5
 8028d6e:	f000 f83f 	bl	8028df0 <__smakebuf_r>
 8028d72:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028d76:	f013 0201 	ands.w	r2, r3, #1
 8028d7a:	d00a      	beq.n	8028d92 <__swsetup_r+0x9a>
 8028d7c:	2200      	movs	r2, #0
 8028d7e:	60a2      	str	r2, [r4, #8]
 8028d80:	6962      	ldr	r2, [r4, #20]
 8028d82:	4252      	negs	r2, r2
 8028d84:	61a2      	str	r2, [r4, #24]
 8028d86:	6922      	ldr	r2, [r4, #16]
 8028d88:	b942      	cbnz	r2, 8028d9c <__swsetup_r+0xa4>
 8028d8a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8028d8e:	d1c5      	bne.n	8028d1c <__swsetup_r+0x24>
 8028d90:	bd38      	pop	{r3, r4, r5, pc}
 8028d92:	0799      	lsls	r1, r3, #30
 8028d94:	bf58      	it	pl
 8028d96:	6962      	ldrpl	r2, [r4, #20]
 8028d98:	60a2      	str	r2, [r4, #8]
 8028d9a:	e7f4      	b.n	8028d86 <__swsetup_r+0x8e>
 8028d9c:	2000      	movs	r0, #0
 8028d9e:	e7f7      	b.n	8028d90 <__swsetup_r+0x98>
 8028da0:	20000110 	.word	0x20000110

08028da4 <__swhatbuf_r>:
 8028da4:	b570      	push	{r4, r5, r6, lr}
 8028da6:	460c      	mov	r4, r1
 8028da8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028dac:	2900      	cmp	r1, #0
 8028dae:	b096      	sub	sp, #88	@ 0x58
 8028db0:	4615      	mov	r5, r2
 8028db2:	461e      	mov	r6, r3
 8028db4:	da0d      	bge.n	8028dd2 <__swhatbuf_r+0x2e>
 8028db6:	89a3      	ldrh	r3, [r4, #12]
 8028db8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8028dbc:	f04f 0100 	mov.w	r1, #0
 8028dc0:	bf14      	ite	ne
 8028dc2:	2340      	movne	r3, #64	@ 0x40
 8028dc4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8028dc8:	2000      	movs	r0, #0
 8028dca:	6031      	str	r1, [r6, #0]
 8028dcc:	602b      	str	r3, [r5, #0]
 8028dce:	b016      	add	sp, #88	@ 0x58
 8028dd0:	bd70      	pop	{r4, r5, r6, pc}
 8028dd2:	466a      	mov	r2, sp
 8028dd4:	f000 f848 	bl	8028e68 <_fstat_r>
 8028dd8:	2800      	cmp	r0, #0
 8028dda:	dbec      	blt.n	8028db6 <__swhatbuf_r+0x12>
 8028ddc:	9901      	ldr	r1, [sp, #4]
 8028dde:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8028de2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8028de6:	4259      	negs	r1, r3
 8028de8:	4159      	adcs	r1, r3
 8028dea:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8028dee:	e7eb      	b.n	8028dc8 <__swhatbuf_r+0x24>

08028df0 <__smakebuf_r>:
 8028df0:	898b      	ldrh	r3, [r1, #12]
 8028df2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8028df4:	079d      	lsls	r5, r3, #30
 8028df6:	4606      	mov	r6, r0
 8028df8:	460c      	mov	r4, r1
 8028dfa:	d507      	bpl.n	8028e0c <__smakebuf_r+0x1c>
 8028dfc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8028e00:	6023      	str	r3, [r4, #0]
 8028e02:	6123      	str	r3, [r4, #16]
 8028e04:	2301      	movs	r3, #1
 8028e06:	6163      	str	r3, [r4, #20]
 8028e08:	b003      	add	sp, #12
 8028e0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028e0c:	ab01      	add	r3, sp, #4
 8028e0e:	466a      	mov	r2, sp
 8028e10:	f7ff ffc8 	bl	8028da4 <__swhatbuf_r>
 8028e14:	9f00      	ldr	r7, [sp, #0]
 8028e16:	4605      	mov	r5, r0
 8028e18:	4639      	mov	r1, r7
 8028e1a:	4630      	mov	r0, r6
 8028e1c:	f7ff f86c 	bl	8027ef8 <_malloc_r>
 8028e20:	b948      	cbnz	r0, 8028e36 <__smakebuf_r+0x46>
 8028e22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028e26:	059a      	lsls	r2, r3, #22
 8028e28:	d4ee      	bmi.n	8028e08 <__smakebuf_r+0x18>
 8028e2a:	f023 0303 	bic.w	r3, r3, #3
 8028e2e:	f043 0302 	orr.w	r3, r3, #2
 8028e32:	81a3      	strh	r3, [r4, #12]
 8028e34:	e7e2      	b.n	8028dfc <__smakebuf_r+0xc>
 8028e36:	89a3      	ldrh	r3, [r4, #12]
 8028e38:	6020      	str	r0, [r4, #0]
 8028e3a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8028e3e:	81a3      	strh	r3, [r4, #12]
 8028e40:	9b01      	ldr	r3, [sp, #4]
 8028e42:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8028e46:	b15b      	cbz	r3, 8028e60 <__smakebuf_r+0x70>
 8028e48:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8028e4c:	4630      	mov	r0, r6
 8028e4e:	f000 f81d 	bl	8028e8c <_isatty_r>
 8028e52:	b128      	cbz	r0, 8028e60 <__smakebuf_r+0x70>
 8028e54:	89a3      	ldrh	r3, [r4, #12]
 8028e56:	f023 0303 	bic.w	r3, r3, #3
 8028e5a:	f043 0301 	orr.w	r3, r3, #1
 8028e5e:	81a3      	strh	r3, [r4, #12]
 8028e60:	89a3      	ldrh	r3, [r4, #12]
 8028e62:	431d      	orrs	r5, r3
 8028e64:	81a5      	strh	r5, [r4, #12]
 8028e66:	e7cf      	b.n	8028e08 <__smakebuf_r+0x18>

08028e68 <_fstat_r>:
 8028e68:	b538      	push	{r3, r4, r5, lr}
 8028e6a:	4d07      	ldr	r5, [pc, #28]	@ (8028e88 <_fstat_r+0x20>)
 8028e6c:	2300      	movs	r3, #0
 8028e6e:	4604      	mov	r4, r0
 8028e70:	4608      	mov	r0, r1
 8028e72:	4611      	mov	r1, r2
 8028e74:	602b      	str	r3, [r5, #0]
 8028e76:	f7d9 fade 	bl	8002436 <_fstat>
 8028e7a:	1c43      	adds	r3, r0, #1
 8028e7c:	d102      	bne.n	8028e84 <_fstat_r+0x1c>
 8028e7e:	682b      	ldr	r3, [r5, #0]
 8028e80:	b103      	cbz	r3, 8028e84 <_fstat_r+0x1c>
 8028e82:	6023      	str	r3, [r4, #0]
 8028e84:	bd38      	pop	{r3, r4, r5, pc}
 8028e86:	bf00      	nop
 8028e88:	20014b00 	.word	0x20014b00

08028e8c <_isatty_r>:
 8028e8c:	b538      	push	{r3, r4, r5, lr}
 8028e8e:	4d06      	ldr	r5, [pc, #24]	@ (8028ea8 <_isatty_r+0x1c>)
 8028e90:	2300      	movs	r3, #0
 8028e92:	4604      	mov	r4, r0
 8028e94:	4608      	mov	r0, r1
 8028e96:	602b      	str	r3, [r5, #0]
 8028e98:	f7d9 fad2 	bl	8002440 <_isatty>
 8028e9c:	1c43      	adds	r3, r0, #1
 8028e9e:	d102      	bne.n	8028ea6 <_isatty_r+0x1a>
 8028ea0:	682b      	ldr	r3, [r5, #0]
 8028ea2:	b103      	cbz	r3, 8028ea6 <_isatty_r+0x1a>
 8028ea4:	6023      	str	r3, [r4, #0]
 8028ea6:	bd38      	pop	{r3, r4, r5, pc}
 8028ea8:	20014b00 	.word	0x20014b00

08028eac <_init>:
 8028eac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028eae:	bf00      	nop
 8028eb0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028eb2:	bc08      	pop	{r3}
 8028eb4:	469e      	mov	lr, r3
 8028eb6:	4770      	bx	lr

08028eb8 <_fini>:
 8028eb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028eba:	bf00      	nop
 8028ebc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028ebe:	bc08      	pop	{r3}
 8028ec0:	469e      	mov	lr, r3
 8028ec2:	4770      	bx	lr
